   [("Ribbons_Interfaces.asn_simps", "asn (Ribbon ?p) = ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Ribbons_Interfaces.hcomp_emp", "(?P \<otimes> \<epsilon>) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Ribbons_Interfaces.emp_hcomp", "(\<epsilon> \<otimes> ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Ribbons_Interfaces.rd_int_is_rd_ass", "rd_ass (asn ?P) = rd_int ?P",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Ribbons_Interfaces.hcomp_comm",
     "(?P \<otimes> ?Q) = (?Q \<otimes> ?P)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Ribbons_Interfaces.iter_hcomp_empty",
     "iter_hcomp {||} ?p = \<epsilon>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), t_empty),
       template_hole 0)),
    ("Ribbons_Interfaces.asn_simps",
     "asn (Exists_int ?x ?P) = Exists ?x (asn ?P)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Ribbons_Interfaces.asn_simps",
     "asn (?P \<otimes> ?Q) = asn ?P \<star> asn ?Q",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Ribbons_Interfaces.hcomp_assoc",
     "(?P \<otimes> (?Q \<otimes> ?R)) = ((?P \<otimes> ?Q) \<otimes> ?R)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Ribbons_Interfaces.equiv_int_cong_hcomp",
     "[| ?P \<simeq> ?Q; ?P' \<simeq> ?Q' |]
      ==> ?P \<otimes>\<^sub>c ?P' \<simeq> ?Q \<otimes>\<^sub>c ?Q'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Ribbons_Interfaces.iter_hcomp_insert",
     "?v |\<notin>| ?ws ==>
      iter_hcomp (finsert ?v ?ws) ?p = (?p ?v \<otimes> iter_hcomp ?ws ?p)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           t_empty),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_var 0, template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 1), t_empty))))),
    ("Ribbons_Interfaces.iter_hcomp_cong",
     "ALL v:fset ?vs. ?\<phi> v = ?\<phi>' v ==>
      iter_hcomp ?vs ?\<phi> = iter_hcomp ?vs ?\<phi>'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), t_empty),
         template_app
          (template_app (template_hole 0, template_var 2), t_empty)))),
    ("Ribbons_Interfaces.iter_hcomp_union",
     "?vs |\<inter>| ?ws = {||} ==>
      iter_hcomp (?vs |\<union>| ?ws) ?p =
      (iter_hcomp ?vs ?p \<otimes> iter_hcomp ?ws ?p)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           t_empty),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2), t_empty)),
           template_app
            (template_app (template_hole 2, template_var 1), t_empty))))),
    ("Ribbons_Interfaces.seq_fold",
     "[| length ?cs = chainlen ?\<Pi>; ?p1.0 = asn (pre ?\<Pi>);
         ?p2.0 = asn (post ?\<Pi>);
         !!i. i < chainlen ?\<Pi> ==>
              prov_triple
               (asn (fst3 (nthtriple ?\<Pi> i)), ?cs ! i,
                asn (thd3 (nthtriple ?\<Pi> i))) |]
      ==> prov_triple (?p1.0, foldr (;;) ?cs Skip, ?p2.0)",
     template_implication
      ([template_equation
         (template_app (template_hole 17, template_var 3),
          template_app (template_hole 16, template_var 2)),
        template_equation
         (template_var 1,
          template_app
           (template_hole 14,
            template_app (template_hole 13, template_var 2))),
        template_equation
         (template_var 0,
          template_app
           (template_hole 14,
            template_app (template_hole 12, template_var 2))),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 1),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_var 3),
                     template_hole 0)),
                 template_var 0)))
           )))]
