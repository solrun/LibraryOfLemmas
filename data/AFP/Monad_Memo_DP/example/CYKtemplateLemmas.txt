   [("CYK.cyk_ix_impl_success",
     "success (cyk_ix_impl ?P ?w ?n ?i ?j) Heap.empty",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 0)
         )),
    ("CYK.CYK_correct", "CYK ?P ?S ?w = yield ?P ?S ?w",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("CYK.yield_not_Nil", "yield ?P ?A ?w ==> ?w ~= []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("CYK.cyk_correct", "set (cyk ?P ?w) = {N. yield ?P N ?w}",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("CYK.CYK_ix_correct",
     "CYK_ix ?P ?S ?w ?n = yield ?P ?S (map ?w [0..<?n])",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("CYK.yield_eq1", "yield ?P ?A [?a] = ((?A, T ?a) : set ?P)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 5, template_var 0),
           template_hole 4)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_var 0))),
         template_app (template_hole 0, template_var 2)))),
    ("CYK.min_wpl_heap",
     "cyk_ix ?P ?w (?i, ?j) =
      result_of (cyk_ix_impl ?P ?w ?n ?i ?j) Heap.empty",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 4), template_var 3),
         template_app
          (template_app (template_hole 5, template_var 2), template_var 1)),
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 0),
                   template_var 2),
                 template_var 1)),
             template_hole 0))))),
    ("CYK.CYK_ix_impl_correct",
     "result_of (CYK_ix_impl ?P ?S ?w ?n) Heap.empty =
      yield ?P ?S (map ?w [0..<?n])",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 5, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 4))),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("CYK.cyk_ix_correct",
     "set (cyk_ix ?P ?w (?i, ?n)) =
      {N. yield ?P N (map ?w [?i..<?i + ?n])}",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2),
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0))),
       template_app (template_hole 4, t_empty))),
    ("CYK.append_iff_take_drop",
     "(?w = ?u @ ?v) =
      (EX k:{0..length ?w}. ?u = take k ?w & ?v = drop k ?w)",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 2),
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app (template_hole 3, template_var 2))),
         t_empty))),
    ("CYK.cyk2_eq_cyk",
     "?i + ?n <= length ?w ==>
      set (cyk2 ?P ?w (?i, ?n)) = set (cyk ?P (take ?n (drop ?i ?w)))",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 8, template_var 3), template_var 2),
          template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_var 0),
               template_var 1),
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1))))))),
    ("CYK.set_aux",
     "(UN xb:set ?P. {A. (A, NN ?B ?C) = xb}) =
      {A. (A, NN ?B ?C) : set ?P}",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, t_empty),
           template_app (template_hole 1, template_var 0))),
       template_app (template_hole 5, t_empty))),
    ("CYK.append_iff_take_drop1",
     "[| ?u ~= []; ?v ~= [] |]
      ==> (?w = ?u @ ?v) =
          (EX k:{1..length ?w - 1}. ?u = take k ?w & ?v = drop k ?w)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 10)),
        template_negation
         (template_equation (template_var 1, template_hole 10))],
       template_equation
        (template_app
          (template_app (template_hole 11, template_var 0),
           template_app
            (template_app (template_hole 8, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0)),
                 template_hole 5))),
           t_empty)))),
    ("CYK.yield_eq2",
     "1 < length ?w ==>
      yield ?P ?A ?w =
      (EX B u C v.
          yield ?P B u &
          yield ?P C v & ?w = u @ v & (?A, NN B C) : set ?P)",
     template_implication
      ([template_inequation
         (less_than, template_hole 12,
          template_app (template_hole 11, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 9, template_var 1),
             template_var 0),
           template_var 2),
         template_app (template_hole 8, t_empty)))),
    ("CYK.set_cyk_simp2",
     "2 <= length ?w ==>
      set (cyk ?P ?w) =
      (UN k:{1..length ?w - 1}.
          UN B:set (cyk ?P (take k ?w)).
             UN C:set (cyk ?P (drop k ?w)). {A. (A, NN B C) : set ?P})",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 19,
            template_app (template_hole 18, template_hole 17)),
          template_app (template_hole 16, template_var 1))],
       template_equation
        (template_app
          (template_hole 14,
           template_app
            (template_app (template_hole 13, template_var 0),
             template_var 1)),
         template_app
          (template_hole 12,
           template_app
            (template_app (template_hole 11, t_empty),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 16, template_var 1)),
                 template_hole 1))))))),
    ("CYK.cyk_ix_simp2",
     "set (cyk_ix ?P ?w (?i, Suc (Suc ?n))) =
      (UN k:{1..Suc ?n}.
          UN B:set (cyk_ix ?P ?w (?i, k)).
             UN C:set (cyk_ix ?P ?w (?i + k, ?n + 2 - k)).
                {A. (A, NN B C) : set ?P})",
     template_equation
      (template_app
        (template_hole 18,
         template_app
          (template_app
            (template_app (template_hole 17, template_var 3),
             template_var 2),
           template_app
            (template_app (template_hole 16, template_var 1),
             template_app
              (template_hole 15,
               template_app (template_hole 15, template_var 0))))),
       template_app
        (template_hole 14,
         template_app
          (template_app (template_hole 13, t_empty),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app (template_hole 15, template_var 0)))))),
    ("CYK.slice_append_iff_take_drop1",
     "[| ?u ~= []; ?v ~= [] |]
      ==> (map ?w [?i..<?j] = ?u @ ?v) =
          (EX k>=1.
              k <= ?j - ?i - 1 &
              map ?w [?i..<?i + k] = ?u & map ?w [?i + k..<?j] = ?v)",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_hole 10)),
        template_negation
         (template_equation (template_var 3, template_hole 10))],
       template_equation
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 8, template_var 2),
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_var 0))),
           template_app
            (template_app (template_hole 6, template_var 4),
             template_var 3)),
         template_app (template_hole 5, t_empty)))),
    ("CYK.init_success",
     "[| dp_heap.consistentDP
          (%heap.
              Array.length heap ?mem =
              bounded_index.size (Bound (0, 0) (?n, ?n)))
          (%heap.
              Array.length heap ?mem =
              bounded_index.size (Bound (0, 0) (?n, ?n)))
          (cyk_ix ?P ?w)
          (heap_mem_defs.lookup'
            (mem_lookup (bounded_index.size (Bound (0, 0) (?n, ?n)))
              (bounded_index.checked_idx (Bound (0, 0) (?n, ?n))) ?mem))
          (?dp\<^sub>T ?mem);
         ?mem =
         result_of (mem_empty (bounded_index.size (Bound (0, 0) (?n, ?n))))
          Heap.empty |]
      ==> success
           (mem_empty (bounded_index.size (Bound (0, 0) (?n, ?n))) >>=
            (%mem. ?dp\<^sub>T mem ?x))
           Heap.empty",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 18, t_empty), t_empty),
                  t_empty),
                template_app
                 (template_hole 10,
                  template_app
                   (template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_hole 15,
                          template_app
                           (template_app
                             (template_hole 14,
                              template_app
                               (template_app
                                 (template_hole 13, template_hole 12),
                                template_hole 12)),
                            template_app
                             (template_app
                               (template_hole 13, template_var 4),
                              template_var 4)))),
                      template_app
                       (template_hole 8,
                        template_app
                         (template_app
                           (template_hole 14,
                            template_app
                             (template_app
                               (template_hole 13, template_hole 12),
                              template_hole 12)),
                          template_app
                           (template_app (template_hole 13, template_var 4),
                            template_var 4)))),
                    template_var 5))),
              template_app (template_var 1, template_var 5))
            ),
        template_equation
         (template_var 5,
          template_app
           (template_hole 6,
            template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_hole 15,
                      template_app
                       (template_app
                         (template_hole 14,
                          template_app
                           (template_app
                             (template_hole 13, template_hole 12),
                            template_hole 12)),
                        template_app
                         (template_app (template_hole 13, template_var 4),
                          template_var 4))))),
                template_hole 2))))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_hole 15,
                       template_app
                        (template_app
                          (template_hole 14,
                           template_app
                            (template_app
                              (template_hole 13, template_hole 12),
                             template_hole 12)),
                         template_app
                          (template_app (template_hole 13, template_var 4),
                           template_var 4))))),
                 t_empty)),
             template_hole 2)
           ))),
    ("CYK.memoized_empty",
     "[| dp_heap.consistentDP
          (%heap.
              Array.length heap ?mem =
              bounded_index.size (Bound (0, 0) (?n, ?n)))
          (%heap.
              Array.length heap ?mem =
              bounded_index.size (Bound (0, 0) (?n, ?n)))
          (cyk_ix ?P ?w)
          (heap_mem_defs.lookup'
            (mem_lookup (bounded_index.size (Bound (0, 0) (?n, ?n)))
              (bounded_index.checked_idx (Bound (0, 0) (?n, ?n))) ?mem))
          (?dp\<^sub>T ?mem);
         ?mem =
         result_of (mem_empty (bounded_index.size (Bound (0, 0) (?n, ?n))))
          Heap.empty |]
      ==> cyk_ix ?P ?w ?x =
          result_of
           (mem_empty (bounded_index.size (Bound (0, 0) (?n, ?n))) >>=
            (%mem. ?dp\<^sub>T mem ?x))
           Heap.empty",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 21, t_empty), t_empty),
                  t_empty),
                template_app
                 (template_hole 13,
                  template_app
                   (template_app
                     (template_app
                       (template_hole 12,
                        template_app
                         (template_hole 18,
                          template_app
                           (template_app
                             (template_hole 17,
                              template_app
                               (template_app
                                 (template_hole 16, template_hole 15),
                                template_hole 15)),
                            template_app
                             (template_app
                               (template_hole 16, template_var 4),
                              template_var 4)))),
                      template_app
                       (template_hole 11,
                        template_app
                         (template_app
                           (template_hole 17,
                            template_app
                             (template_app
                               (template_hole 16, template_hole 15),
                              template_hole 15)),
                          template_app
                           (template_app (template_hole 16, template_var 4),
                            template_var 4)))),
                    template_var 5))),
              template_app (template_var 1, template_var 5))
            ),
        template_equation
         (template_var 5,
          template_app
           (template_hole 9,
            template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_hole 6,
                    template_app
                     (template_hole 18,
                      template_app
                       (template_app
                         (template_hole 17,
                          template_app
                           (template_app
                             (template_hole 16, template_hole 15),
                            template_hole 15)),
                        template_app
                         (template_app (template_hole 16, template_var 4),
                          template_var 4))))),
                template_hole 5))))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 14, template_var 3),
             template_var 2),
           template_var 0),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_hole 6,
                       template_app
                        (template_hole 18,
                         template_app
                          (template_app
                            (template_hole 17,
                             template_app
                              (template_app
                                (template_hole 16, template_hole 15),
                               template_hole 15)),
                           template_app
                            (template_app
                              (template_hole 16, template_var 4),
                             template_var 4))))),
                   t_empty)),
               template_hole 5))))))]
