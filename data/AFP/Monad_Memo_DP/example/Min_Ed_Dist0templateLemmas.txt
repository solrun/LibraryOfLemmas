   [("Min_Ed_Dist0.min_ed_Nil1", "min_ed [] ?ys = length ?ys",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Min_Ed_Dist0.min_ed_Nil2", "min_ed ?xs [] = length ?xs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Min_Ed_Dist0.min_eds_correct", "edit (min_eds ?xs ?ys) ?xs = ?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1),
       template_var 0)),
    ("Min_Ed_Dist0.min_eds_Nil", "min_eds [] ?ys = map Ins ?ys",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Min_Ed_Dist0.min_eds_Nil2",
     "min_eds ?xs [] = replicate (length ?xs) Del",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 0), template_hole 3),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Min_Ed_Dist0.min_eds_same",
     "min_eds ?xs ?xs = replicate (length ?xs) Copy",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0), template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Min_Ed_Dist0.min_eds_eq_Nil_iff",
     "(min_eds ?xs ?ys = []) = (?xs = [] & ?ys = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_hole 3),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Min_Ed_Dist0.min_ed_min_eds",
     "min_ed ?xs ?ys = cost (min_eds ?xs ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Min_Ed_Dist0.min_ed_ix'_min_ed",
     "min_ed_ix' ?xs ?ys (length ?xs) (length ?ys) (?i, ?j) =
      min_ed (drop ?i ?xs) (drop ?j ?ys)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2),
             template_app (template_hole 3, template_var 3)),
           template_app (template_hole 3, template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Min_Ed_Dist0.if_edit_Nil2",
     "edit ?es [] = ?ys ==> length ?ys <= cost ?es",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 8, template_var 1),
            template_hole 7),
          template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 5, template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, t_empty), template_var 1))))),
    ("Min_Ed_Dist0.if_edit_eq_Nil",
     "edit ?es ?xs = [] ==> length ?xs <= cost ?es",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 8, template_var 1), template_var 0),
          template_hole 7)],
       template_inequation
        (less_equals, template_app (template_hole 5, template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, t_empty), template_var 1))))),
    ("Min_Ed_Dist0.min_ed_ix_min_ed",
     "min_ed_ix ?xs ?ys ?m ?n (?i, ?j) =
      min_ed (map ?xs [?i..<?m]) (map ?ys [?j..<?n])",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 5),
               template_var 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 5),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3))),
         template_app
          (template_app (template_hole 1, template_var 4),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Min_Ed_Dist0.bf_impl_correct",
     "min_ed_ix ?xs ?ys ?m ?n (?i, ?j) =
      result_of (min_ed_ix_impl ?xs ?ys ?m ?n ?i ?j) Heap.empty",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_var 5),
               template_var 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 5),
                         template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0))))),
    ("Min_Ed_Dist0.cost_Copy_Del",
     "cost (min_eds ?xs ?ys) <= cost (min_eds ?xs (?x # ?ys)) + 1",
     template_inequation
      (less_equals,
       template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, t_empty),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, t_empty),
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 1))))),
         template_hole 0))),
    ("Min_Ed_Dist0.cost_Copy_Ins",
     "cost (min_eds ?xs ?ys) <= cost (min_eds (?x # ?xs) ?ys) + 1",
     template_inequation
      (less_equals,
       template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, t_empty),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, t_empty),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 2)),
                 template_var 1)))),
         template_hole 0))),
    ("Min_Ed_Dist0.min_eds_minimal",
     "edit ?es ?xs = ?ys ==> cost (min_eds ?xs ?ys) <= cost ?es",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_var 2), template_var 1),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty), template_var 2))))),
    ("Min_Ed_Dist0.iter_min_ed_ix_unfold",
     "iter_min_ed_ix ?xs ?ys ?m ?n ?mem =
      (%(i, j).
          if 0 < i & i <= ?m & j <= ?n
          then min_ed_ix\<^sub>h'_impl ?xs ?ys ?m ?n ?mem (i, j) >>=
               (%_. iter_min_ed_ix ?xs ?ys ?m ?n ?mem
                     (if 0 < j then (i, j - 1) else (i - 1, ?n)))
          else return ())",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 14, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app (template_hole 13, t_empty))),
    ("Min_Ed_Dist0.memoized_empty",
     "?mem = result_of (init_state (?n + 1) ?m (?m + 1)) Heap.empty ==>
      min_ed_ix ?xs ?ys ?m ?n ?x =
      result_of
       (init_state (?n + 1) ?m (?m + 1) >>=
        (%mem. iterator_defs.iter_heap
                (%a. case a of (x, y) => x <= ?m & y <= ?n & 0 < x)
                (%a. case a of
                     (x, y) => if 0 < y then (x, y - 1) else (x - 1, ?n))
                (min_ed_ix\<^sub>h' ?xs ?ys ?m ?n ?mem) (?y mem) >>=
               (%_. min_ed_ix\<^sub>h' ?xs ?ys ?m ?n ?mem ?x)))
       Heap.empty",
     template_implication
      ([template_equation
         (template_var 6,
          template_app
           (template_hole 24,
            template_app
             (template_hole 23,
              template_app
               (template_app
                 (template_hole 22,
                  template_app
                   (template_app
                     (template_app
                       (template_hole 21,
                        template_app
                         (template_app (template_hole 20, template_var 5),
                          template_hole 19)),
                      template_var 4),
                    template_app
                     (template_app (template_hole 20, template_var 4),
                      template_hole 19))),
                template_hole 18))))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 16, template_var 3),
                 template_var 2),
               template_var 4),
             template_var 5),
           template_var 1),
         template_app
          (template_hole 15,
           template_app
            (template_hole 14,
             template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app
                    (template_hole 12,
                     template_app
                      (template_app
                        (template_app
                          (template_hole 21,
                           template_app
                            (template_app
                              (template_hole 20, template_var 5),
                             template_hole 19)),
                         template_var 4),
                       template_app
                        (template_app (template_hole 20, template_var 4),
                         template_hole 19))),
                   t_empty)),
               template_hole 18)))))),
    ("Min_Ed_Dist0.iter_heap_unfold",
     "?mem = result_of (init_state (?n + 1) ?m (?m + 1)) Heap.empty ==>
      iterator_defs.iter_heap (%(x, y). x <= ?m & y <= ?n & 0 < x)
       (%(x, y). if 0 < y then (x, y - 1) else (x - 1, ?n)) ?f ?x =
      (if case ?x of (x, y) => x <= ?m & y <= ?n & 0 < x
       then ?f ?x >>=
            (%_. iterator_defs.iter_heap
                  (%(x, y). x <= ?m & y <= ?n & 0 < x)
                  (%(x, y). if 0 < y then (x, y - 1) else (x - 1, ?n)) ?f
                  (case ?x of
                   (x, y) => if 0 < y then (x, y - 1) else (x - 1, ?n)))
       else return ())",
     template_implication
      ([template_equation
         (template_var 4,
          template_app
           (template_hole 21,
            template_app
             (template_hole 20,
              template_app
               (template_app
                 (template_hole 19,
                  template_app
                   (template_app
                     (template_app
                       (template_hole 18,
                        template_app
                         (template_app (template_hole 17, template_var 3),
                          template_hole 16)),
                      template_var 2),
                    template_app
                     (template_app (template_hole 17, template_var 2),
                      template_hole 16))),
                template_hole 15))))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 13,
                 template_app (template_hole 12, t_empty)),
               template_app (template_hole 7, t_empty)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 12, t_empty), template_var 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_var 1, template_var 0)),
               t_empty)),
           template_app (template_hole 1, template_hole 0)))))]
