   [("Example_Misc.Pinf_add_right", "\<infinity> + ?x = \<infinity>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Example_Misc.min_list_fold",
     "Example_Misc.min_list (?x # ?xs) = fold min ?xs ?x",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 0),
         template_var 1))),
    ("Example_Misc.min_list_Min",
     "?xs ~= [] ==> Example_Misc.min_list ?xs = Min (set ?xs)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Example_Misc.fold_min_commute",
     "fold min ?xs (min ?a ?b) = min ?a (fold min ?xs ?b)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2),
           template_var 0)))),
    ("Example_Misc.induct_list012",
     "[| ?P []; !!x. ?P [x]; !!x y zs. ?P (y # zs) ==> ?P (x # y # zs) |]
      ==> ?P ?xs",
     template_implication
      ([template_predicate (template_app (template_var 1, template_hole 3)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (template_app (template_var 1, template_var 0))))]
