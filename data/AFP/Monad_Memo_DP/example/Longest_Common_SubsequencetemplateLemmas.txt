   [("Longest_Common_Subsequence.finite_subseq",
     "finite {xs. subseq xs ?ys}",
     template_predicate
      (
         template_app
          (template_hole 3, template_app (template_hole 2, t_empty))
         )),
    ("Longest_Common_Subsequence.OPT_0_left", "OPT ?A ?B 0 ?j = 0",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_hole 0),
         template_var 0),
       template_hole 0)),
    ("Longest_Common_Subsequence.OPT_0_right", "OPT ?A ?B ?i 0 = 0",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0),
         template_hole 0),
       template_hole 0)),
    ("Longest_Common_Subsequence.lcs\<^sub>a_correct",
     "lcs ?xs ?ys (length ?xs) (length ?ys) = lcs\<^sub>a ?xs ?ys",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0),
           template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Longest_Common_Subsequence.finite_OPT",
     "finite {xs. subseq xs (take ?i ?A) & subseq xs (take ?j ?B)}",
     template_predicate
      (
         template_app
          (template_hole 5, template_app (template_hole 4, t_empty))
         )),
    ("Longest_Common_Subsequence.subseq_singleton_right",
     "subseq ?xs [?x] = (?xs = [?x] | ?xs = [])",
     template_bimplication
      (template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 1),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2))
           ),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_hole 2))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_hole 2))
           ))),
    ("Longest_Common_Subsequence.non_empty_OPT",
     "{xs. subseq xs (take ?i ?A) & subseq xs (take ?j ?B)} ~= {}",
     template_negation
      (
         template_equation
          (template_app (template_hole 5, t_empty), template_hole 0)
         )),
    ("Longest_Common_Subsequence.Max_nat_plus",
     "[| finite ?S; ?S ~= {} |] ==> Max ((+) ?n ` ?S) = ?n + Max ?S",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 2, template_var 1))))),
    ("Longest_Common_Subsequence.lcs_lcs_ia",
     "[| ?A = IArray ?xs; ?B = IArray ?ys |]
      ==> lcs ?xs ?ys ?i ?j = lcs_ia ?A ?B ?i ?j",
     template_implication
      ([template_equation
         (template_var 5, template_app (template_hole 3, template_var 4)),
        template_equation
         (template_var 3, template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 3),
             template_var 1),
           template_var 0)))),
    ("Longest_Common_Subsequence.lcs_correct'",
     "[| ?i <= length ?A; ?j <= length ?B |]
      ==> OPT ?A ?B ?i ?j = lcs ?A ?B ?i ?j",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 3, template_var 2)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0),
             template_var 3),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 3),
           template_var 1)))),
    ("Longest_Common_Subsequence.lcs_correct",
     "Max {length xs |xs. subseq xs ?A & subseq xs ?B} =
      lcs ?A ?B (length ?A) (length ?B)",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, t_empty)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_app (template_hole 3, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Longest_Common_Subsequence.subseq_append_single_right",
     "subseq ?xs (?ys @ [?x]) =
      ((EX xs'. subseq xs' ?ys & ?xs = xs' @ [?x]) | subseq ?xs ?ys)",
     template_bimplication
      (template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 8, template_hole 7),
               template_var 2),
             template_app
              (template_app (template_hole 6, template_var 1),
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_hole 4)))
           ),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3, template_app (template_hole 2, t_empty)),
             template_app
              (template_app
                (template_app (template_hole 8, template_hole 7),
                 template_var 2),
               template_var 1))
           ))),
    ("Longest_Common_Subsequence.OPT_rec1",
     "[| ?A ! ?i = ?B ! ?j; ?i < length ?A; ?j < length ?B |]
      ==> OPT ?A ?B (?i + 1) (?j + 1) = 1 + OPT ?A ?B ?i ?j",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 6, template_var 1),
            template_var 0)),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 4, template_var 3)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_hole 0)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1),
               template_var 2),
             template_var 0))))),
    ("Longest_Common_Subsequence.OPT_rec2",
     "[| ?A ! ?i ~= ?B ! ?j; ?i < length ?A; ?j < length ?B |]
      ==> OPT ?A ?B (?i + 1) (?j + 1) =
          max (OPT ?A ?B ?i (?j + 1)) (OPT ?A ?B (?i + 1) ?j)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0))
            ),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 5, template_var 3)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 1),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 1)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 1),
                 template_var 2),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1))),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 1),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_hole 1)),
             template_var 0)))))]
