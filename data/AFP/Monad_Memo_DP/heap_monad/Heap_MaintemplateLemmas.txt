   [("Heap_Main.abs_unit_cong", "?x = ?y ==> (%_. ?x) = (%_. ?y)",
     template_implication
      ([template_equation (template_var 1, template_var 0)],
       template_equation (t_empty, t_empty))),
    ("Heap_Main.execute_result_ofD",
     "execute ?c ?h = Some (?v, ?h') ==> result_of ?c ?h = ?v",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 3), template_var 2),
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 5, template_var 3),
               template_var 2))),
         template_var 1))),
    ("Heap_Main.execute_heap_ofD",
     "execute ?c ?h = Some (?v, ?h') ==> heap_of ?c ?h = ?h'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 3), template_var 2),
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 5, template_var 3),
               template_var 2))),
         template_var 0))),
    ("Heap_Main.return_app_return_cong",
     "?f ?x = ?g ?y ==>
      Heap_Monad_Ext.fun_app_lifted (return ?f) (return ?x) =
      Heap_Monad_Ext.fun_app_lifted (return ?g) (return ?y)",
     template_implication
      ([template_equation
         (template_app (template_var 3, template_var 2),
          template_app (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 3)),
           template_app (template_hole 3, template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Heap_Main.arg_cong4",
     "[| ?a = ?a'; ?b = ?b'; ?c = ?c'; ?d = ?d' |]
      ==> ?f ?a ?b ?c ?d = ?f ?a' ?b' ?c' ?d'",
     template_implication
      ([template_equation (template_var 8, template_var 7),
        template_equation (template_var 6, template_var 5),
        template_equation (template_var 4, template_var 3),
        template_equation (template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_var 0, template_var 8),
               template_var 6),
             template_var 4),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_var 0, template_var 7),
               template_var 5),
             template_var 3),
           template_var 1)))),
    ("Heap_Main.ifT_cong",
     "[| ?b = ?c; ?c ==> ?x = ?u; ~ ?c ==> ?y = ?v |]
      ==> Heap_Monad_Ext.if\<^sub>T (return ?b) ?x ?y =
          Heap_Monad_Ext.if\<^sub>T (return ?c) ?u ?v",
     template_implication
      ([template_equation (template_var 5, template_var 4),
        template_implication
         ([template_predicate (template_var 4)],
          template_equation (template_var 3, template_var 2)),
        template_implication
         ([template_negation (template_predicate (template_var 4))],
          template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 5)),
             template_var 3),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 4)),
             template_var 2),
           template_var 0)))),
    ("Heap_Main.mapT_cong",
     "[| ?xs = ?ys; !!x. x : set ?ys ==> ?f x = ?g x |]
      ==> Heap_Monad_Ext.fun_app_lifted
           (Heap_Monad_Ext.fun_app_lifted map\<^sub>T (return ?f))
           (return ?xs) =
          Heap_Monad_Ext.fun_app_lifted
           (Heap_Monad_Ext.fun_app_lifted map\<^sub>T (return ?g))
           (return ?ys)",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 1))),
           template_app (template_hole 0, template_var 3)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 0))),
           template_app (template_hole 0, template_var 2))))),
    ("Heap_Main.foldT_cong",
     "[| ?xs = ?ys; !!x. x : set ?ys ==> ?f x = ?g x |]
      ==> Heap_Monad_Ext.fun_app_lifted
           (Heap_Monad_Ext.fun_app_lifted fold\<^sub>T (return ?f))
           (return ?xs) =
          Heap_Monad_Ext.fun_app_lifted
           (Heap_Monad_Ext.fun_app_lifted fold\<^sub>T (return ?g))
           (return ?ys)",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 1))),
           template_app (template_hole 0, template_var 3)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 0))),
           template_app (template_hole 0, template_var 2)))))]
