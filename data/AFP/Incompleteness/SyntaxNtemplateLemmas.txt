   [("SyntaxN.Fls_fresh", "?a \<sharp> Fls",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("SyntaxN.HF1_holds", "eval_fm ?e HF1",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("SyntaxN.HF2_holds", "eval_fm ?e HF2",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("SyntaxN.eats_cong_ax_holds", "eval_fm ?e eats_cong_ax",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("SyntaxN.eq_cong_ax_holds", "eval_fm ?e eq_cong_ax",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("SyntaxN.extra_axiom_holds", "eval_fm ?e extra_axiom",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("SyntaxN.mem_cong_ax_holds", "eval_fm ?e mem_cong_ax",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("SyntaxN.refl_ax_holds", "eval_fm ?e refl_ax",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("SyntaxN.ORD_OF_fresh", "?a \<sharp> ORD_OF ?n",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("SyntaxN.truth_provable", "?H \<turnstile> Neg Fls",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_hole 0))
         )),
    ("SyntaxN.Fls_eqvt", "?p \<bullet> Fls = Fls",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("SyntaxN.Refl", "?H \<turnstile> ?t EQ ?t",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 0))
         )),
    ("SyntaxN.Iff_refl", "?H \<turnstile> ?A IFF ?A",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 0))
         )),
    ("SyntaxN.Assume", "insert ?A ?H \<turnstile> ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 1)
         )),
    ("SyntaxN.Fls_E", "insert Fls ?H \<turnstile> ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)
         )),
    ("SyntaxN.Mem_SUCC_Refl", "?H \<turnstile> ?k IN SUCC ?k",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 0)))
         )),
    ("SyntaxN.eval_tm_ORD_OF", "\<lbrakk>ORD_OF ?n\<rbrakk>?e = ord_of ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("SyntaxN.supp_name", "supp ?i = {atom ?i}",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("SyntaxN.subst_fm_id", "?A(?a::=Var ?a) = ?A",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app (template_hole 0, template_var 0)),
       template_var 1)),
    ("SyntaxN.subst_tm_id", "subst ?a (Var ?a) ?tm = ?tm",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_var 0)),
    ("SyntaxN.AssumeH", "insert ?A1.0 (insert ?A2.0 ?H) \<turnstile> ?A2.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))),
           template_var 1)
         )),
    ("SyntaxN.Mem_Zero_E", "insert (?x IN Zero) ?H \<turnstile> ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_hole 0)),
               template_var 1)),
           template_var 0)
         )),
    ("SyntaxN.size_subst_fm", "size (?A(?i::=?x)) = size ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("SyntaxN.SUCC_fresh_iff", "?a \<sharp> SUCC ?t = ?a \<sharp> ?t",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("SyntaxN.HF_axioms_hold", "?A : HF_axioms ==> eval_fm ?e ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("SyntaxN.boolean_axioms_hold", "?A : boolean_axioms ==> eval_fm ?e ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("SyntaxN.equality_axioms_hold",
     "?A : equality_axioms ==> eval_fm ?e ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("SyntaxN.induction_axioms_hold",
     "?A : induction_axioms ==> eval_fm ?e ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("SyntaxN.special_axioms_hold", "?A : special_axioms ==> eval_fm ?e ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("SyntaxN.ExFalso", "?H \<turnstile> Fls ==> ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("SyntaxN.thin0", "{} \<turnstile> ?A ==> ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_hole 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), template_var 1)
           ))),
    ("SyntaxN.eval_tm_SUCC",
     "\<lbrakk>SUCC ?t\<rbrakk>?e = succ \<lbrakk>?t\<rbrakk>?e",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("SyntaxN.ORD_OF_eqvt",
     "?p \<bullet> ORD_OF ?n = ORD_OF (?p \<bullet> ?n)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SyntaxN.SUCC_eqvt", "?p \<bullet> SUCC ?a = SUCC (?p \<bullet> ?a)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SyntaxN.AssumeH",
     "insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H)) \<turnstile> ?A3.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)))),
           template_var 1)
         )),
    ("SyntaxN.Eats_EQ_Zero_E2",
     "insert (Zero EQ Eats ?t ?u) ?H \<turnstile> ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2))),
               template_var 1)),
           template_var 0)
         )),
    ("SyntaxN.Eats_EQ_Zero_E",
     "insert (Eats ?t ?u EQ Zero) ?H \<turnstile> ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 2)),
                   template_hole 0)),
               template_var 1)),
           template_var 0)
         )),
    ("SyntaxN.supp_Conj", "supp (?A AND ?B) = supp ?A Un supp ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("SyntaxN.Disj_commute_Imp", "?H \<turnstile> ?B OR ?A IMP ?A OR ?B",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)))
         )),
    ("SyntaxN.Disj_I1", "?H \<turnstile> ?A ==> ?H \<turnstile> ?A OR ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SyntaxN.NegNeg_I",
     "?H \<turnstile> ?A ==> ?H \<turnstile> Neg (Neg ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_hole 0,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("SyntaxN.thin_Un", "?H \<turnstile> ?A ==> ?H Un ?H' \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("SyntaxN.Disj_I2", "?H \<turnstile> ?B ==> ?H \<turnstile> ?A OR ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("SyntaxN.thin1", "?H \<turnstile> ?B ==> insert ?A ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_var 1)
           ))),
    ("SyntaxN.Conj_E1", "?H \<turnstile> ?A AND ?B ==> ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 1)
           ))),
    ("SyntaxN.Conj_E2", "?H \<turnstile> ?A AND ?B ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("SyntaxN.NegNeg_D",
     "?H \<turnstile> Neg (Neg ?A) ==> ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app
               (template_hole 0,
                template_app (template_hole 0, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("SyntaxN.Neg", "(Neg ?A)(?i::=?x) = Neg (?A(?i::=?x))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("SyntaxN.SUCC_subst", "subst ?i ?t (SUCC ?k) = SUCC (subst ?i ?t ?k)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("SyntaxN.AssumeH",
     "insert ?A1.0
       (insert ?A2.0 (insert ?A3.0 (insert ?A4.0 ?H))) \<turnstile>
      ?A4.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 4),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0))))),
           template_var 1)
         )),
    ("SyntaxN.Eats_EQ_Zero_E2H",
     "insert ?A1.0 (insert (Zero EQ Eats ?t ?u) ?H) \<turnstile> ?B",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 2))),
                 template_var 1))),
           template_var 0)
         )),
    ("SyntaxN.Eats_EQ_Zero_EH",
     "insert ?A1.0 (insert (Eats ?t ?u EQ Zero) ?H) \<turnstile> ?B",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 3),
                         template_var 2)),
                     template_hole 0)),
                 template_var 1))),
           template_var 0)
         )),
    ("SyntaxN.ContraAssumeN",
     "?B : ?H ==> insert (Neg ?B) ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 template_var 1)),
             template_var 0)
           ))),
    ("SyntaxN.Neg_E",
     "?H \<turnstile> ?A ==> insert (Neg ?A) ?H \<turnstile> Fls",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)),
                 template_var 1)),
             template_hole 0)
           ))),
    ("SyntaxN.Imp_triv_I",
     "?H \<turnstile> ?B ==> ?H \<turnstile> ?A IMP ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 1))
           ))),
    ("SyntaxN.ContraProve",
     "?H \<turnstile> ?B ==> insert (Neg ?B) ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)),
                 template_var 2)),
             template_var 0)
           ))),
    ("SyntaxN.ContraAssume", "Neg ?B : ?H ==> insert ?B ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("SyntaxN.Neg_I",
     "insert ?A ?H \<turnstile> Fls ==> ?H \<turnstile> Neg ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("SyntaxN.Contra",
     "insert (Neg ?A) ?H \<turnstile> ?A ==> ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_hole 1,
                    template_app (template_hole 0, template_var 1)),
                  template_var 0)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), template_var 1)
           ))),
    ("SyntaxN.forget_subst_fm", "atom ?a \<sharp> ?A ==> ?A(?a::=?x) = ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0),
         template_var 1))),
    ("SyntaxN.forget_subst_tm",
     "atom ?a \<sharp> ?tm ==> subst ?a ?x ?tm = ?tm",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 1),
         template_var 1))),
    ("SyntaxN.Conj_commute",
     "?H \<turnstile> ?B AND ?A ==> ?H \<turnstile> ?A AND ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("SyntaxN.Disj_commute",
     "?H \<turnstile> ?B OR ?A ==> ?H \<turnstile> ?A OR ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("SyntaxN.Sym", "?H \<turnstile> ?t EQ ?u ==> ?H \<turnstile> ?u EQ ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("SyntaxN.Iff_sym",
     "?H \<turnstile> ?A IFF ?B ==> ?H \<turnstile> ?B IFF ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("SyntaxN.Contra'",
     "insert ?A ?H \<turnstile> Neg ?A ==> ?H \<turnstile> Neg ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)),
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("SyntaxN.Peirce",
     "?H \<turnstile> Neg ?A IMP ?A ==> ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_hole 0,
                    template_app (template_hole 0, template_var 0))),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1), template_var 0)
           ))),
    ("SyntaxN.eval_tm_HPair",
     "\<lbrakk>HPair ?a ?b\<rbrakk>?e =
      <\<lbrakk>?a\<rbrakk>?e, \<lbrakk>?b\<rbrakk>?e>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("SyntaxN.fresh_Conj",
     "?a \<sharp> ?A AND ?B = (?a \<sharp> ?A & ?a \<sharp> ?B)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("SyntaxN.fresh_Iff",
     "?a \<sharp> ?A IFF ?B = (?a \<sharp> ?A & ?a \<sharp> ?B)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("SyntaxN.fresh_HPair",
     "?x \<sharp> HPair ?a ?b = (?x \<sharp> ?a & ?x \<sharp> ?b)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("SyntaxN.eval_fm_Conj",
     "eval_fm ?e (?A AND ?B) = (eval_fm ?e ?A & eval_fm ?e ?B)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("SyntaxN.eval_fm_Iff",
     "eval_fm ?e (?A IFF ?B) = (eval_fm ?e ?A = eval_fm ?e ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("SyntaxN.Conj_eqvt",
     "?p \<bullet> ?A AND ?B = (?p \<bullet> ?A) AND (?p \<bullet> ?B)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("SyntaxN.Iff_eqvt",
     "?p \<bullet> ?A IFF ?B = (?p \<bullet> ?A) IFF (?p \<bullet> ?B)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("SyntaxN.HPair_eqvt",
     "?p \<bullet> HPair ?a ?b = HPair (?p \<bullet> ?a) (?p \<bullet> ?b)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("SyntaxN.Var_Eq_subst_Iff",
     "insert (Var ?i EQ ?t) ?H \<turnstile> ?A(?i::=?t) IFF ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 3)),
                   template_var 2)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3),
                 template_var 2)),
             template_var 0))
         )),
    ("SyntaxN.AssumeH",
     "insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0 (insert ?A4.0 (insert ?A5.0 ?H)))) \<turnstile>
      ?A5.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 5),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0)))))),
           template_var 1)
         )),
    ("SyntaxN.Eats_EQ_Zero_E2H",
     "insert ?A1.0
       (insert ?A2.0 (insert (Zero EQ Eats ?t ?u) ?H)) \<turnstile>
      ?B",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 5),
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_app
                        (template_app (template_hole 0, template_var 3),
                         template_var 2))),
                   template_var 1)))),
           template_var 0)
         )),
    ("SyntaxN.Eats_EQ_Zero_EH",
     "insert ?A1.0
       (insert ?A2.0 (insert (Eats ?t ?u EQ Zero) ?H)) \<turnstile>
      ?B",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 5),
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 3),
                           template_var 2)),
                       template_hole 0)),
                   template_var 1)))),
           template_var 0)
         )),
    ("SyntaxN.Mem_SUCC_I2",
     "?H \<turnstile> ?u EQ ?t ==> ?H \<turnstile> ?u IN SUCC ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("SyntaxN.Mem_SUCC_I1",
     "?H \<turnstile> ?u IN ?t ==> ?H \<turnstile> ?u IN SUCC ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("SyntaxN.Imp_I",
     "insert ?A ?H \<turnstile> ?B ==> ?H \<turnstile> ?A IMP ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_var 0))
           ))),
    ("SyntaxN.anti_deduction",
     "?H \<turnstile> ?A IMP ?B ==> insert ?A ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_var 0)
           ))),
    ("SyntaxN.Ex_I",
     "?H \<turnstile> ?A(?i::=?x) ==> ?H \<turnstile> SyntaxN.Ex ?i ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("SyntaxN.Disj_CI",
     "insert (Neg ?B) ?H \<turnstile> ?A ==> ?H \<turnstile> ?A OR ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("SyntaxN.thin",
     "[| ?H \<turnstile> ?A; ?H <= ?H' |] ==> ?H' \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), template_var 1)
           ))),
    ("SyntaxN.better_ex_eval_fm",
     "eval_fm ?e (SyntaxN.Ex ?k ?A) =
      (EX x. eval_fm (finfun_update ?e ?k x) ?A)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("SyntaxN.SUCC_cong",
     "?H \<turnstile> ?t EQ ?t' ==> ?H \<turnstile> SUCC ?t EQ SUCC ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("SyntaxN.Mem_Eats_I2",
     "?H \<turnstile> ?u EQ ?z ==> ?H \<turnstile> ?u IN Eats ?t ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("SyntaxN.Neg_cong",
     "?H \<turnstile> ?A IFF ?A' ==> ?H \<turnstile> Neg ?A IFF Neg ?A'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("SyntaxN.Mem_Eats_I1",
     "?H \<turnstile> ?u IN ?t ==> ?H \<turnstile> ?u IN Eats ?t ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("SyntaxN.Neg_mono",
     "insert ?A ?H \<turnstile> ?B ==>
      insert (Neg ?B) ?H \<turnstile> Neg ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_var 1)),
             template_app (template_hole 0, template_var 2))
           ))),
    ("SyntaxN.NegNeg_E",
     "insert ?A ?H \<turnstile> ?B ==>
      insert (Neg (Neg ?A)) ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_hole 0,
                     template_app (template_hole 0, template_var 2))),
                 template_var 1)),
             template_var 0)
           ))),
    ("SyntaxN.thin2",
     "insert ?A1.0 ?H \<turnstile> ?B ==>
      insert ?A1.0 (insert ?A2.0 ?H) \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2))),
             template_var 1)
           ))),
    ("SyntaxN.Swap",
     "insert (Neg ?B) ?H \<turnstile> ?A ==>
      insert (Neg ?A) ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_hole 1,
                    template_app (template_hole 0, template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_var 1)),
             template_var 2)
           ))),
    ("SyntaxN.contraction",
     "insert ?A (insert ?A ?H) \<turnstile> ?B ==>
      insert ?A ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_app
                   (template_app (template_hole 0, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("SyntaxN.Neg_D",
     "[| ?H \<turnstile> Neg ?A; ?H \<turnstile> ?A |]
      ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app (template_hole 0, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("SyntaxN.eval_subst_tm",
     "\<lbrakk>subst ?i ?t ?u\<rbrakk>?e =
      \<lbrakk>?u\<rbrakk>(finfun_update ?e ?i \<lbrakk>?t\<rbrakk>?e)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1))),
         template_var 0))),
    ("SyntaxN.size_Conj", "size (?A AND ?B) = size ?A + size ?B + 4",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 5, template_var 1)),
             template_app (template_hole 5, template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 1, template_hole 0)))))),
    ("SyntaxN.eval_subst_fm",
     "eval_fm ?e (?fm(?i::=?t)) =
      eval_fm (finfun_update ?e ?i \<lbrakk>?t\<rbrakk>?e) ?fm",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))),
         template_var 2))),
    ("SyntaxN.Conj_injective_iff",
     "(?A AND ?B = ?A' AND ?B') = (?A = ?A' & ?B = ?B')",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))
           ))),
    ("SyntaxN.Iff_injective_iff",
     "(?A IFF ?B = ?A' IFF ?B') = (?A = ?A' & ?B = ?B')",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))
           ))),
    ("SyntaxN.HPair_injective_iff",
     "(HPair ?a ?b = HPair ?a' ?b') = (?a = ?a' & ?b = ?b')",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))
           ))),
    ("SyntaxN.repeat_subst_fm",
     "(?A(?i::=?t))(?i::=?u) = ?A(?i::=subst ?i ?u ?t)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 2),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 1)))),
    ("SyntaxN.repeat_subst_tm",
     "subst ?i ?u (subst ?i ?t ?tm) = subst ?i (subst ?i ?u ?t) ?tm",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 2),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("SyntaxN.Mem_Eats_Iff",
     "?H \<turnstile> ?x IN Eats ?t ?u IFF ?x IN ?t OR ?x EQ ?u",
     template_predicate
      (
         template_app
          (template_app (template_hole 5, template_var 3),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0))))
         )),
    ("SyntaxN.Eq_subst_fm_Iff",
     "insert (?t EQ ?u) ?H \<turnstile> ?A(?i::=?t) IFF ?A(?i::=?u)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 3)),
               template_var 2)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0),
                 template_var 4)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 3)))
         )),
    ("SyntaxN.Eq_subst_tm_Iff",
     "{?t EQ ?u} \<turnstile> subst ?i ?t ?tm EQ subst ?i ?u ?tm",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 2)),
               template_hole 1)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 3),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2),
               template_var 0)))
         )),
    ("SyntaxN.AssumeH",
     "insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0 (insert ?A5.0 (insert ?A6.0 ?H))))) \<turnstile>
      ?A6.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 6),
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 0))))))),
           template_var 1)
         )),
    ("SyntaxN.Eats_EQ_Zero_E2H",
     "insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0 (insert (Zero EQ Eats ?t ?u) ?H))) \<turnstile>
      ?B",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 6),
               template_app
                (template_app (template_hole 3, template_var 5),
                 template_app
                  (template_app (template_hole 3, template_var 4),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_hole 1),
                         template_app
                          (template_app (template_hole 0, template_var 3),
                           template_var 2))),
                     template_var 1))))),
           template_var 0)
         )),
    ("SyntaxN.Eats_EQ_Zero_EH",
     "insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0 (insert (Eats ?t ?u EQ Zero) ?H))) \<turnstile>
      ?B",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 6),
               template_app
                (template_app (template_hole 3, template_var 5),
                 template_app
                  (template_app (template_hole 3, template_var 4),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app
                            (template_app (template_hole 1, template_var 3),
                             template_var 2)),
                         template_hole 0)),
                     template_var 1))))),
           template_var 0)
         )),
    ("SyntaxN.deduction_Diff",
     "?H \<turnstile> ?B ==> ?H - {?C} \<turnstile> ?C IMP ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_hole 2))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 1))
           ))),
    ("SyntaxN.All_D",
     "?H \<turnstile> SyntaxN.All ?i ?A ==> ?H \<turnstile> ?A(?i::=?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_app (template_hole 2, template_var 1))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2),
               template_var 0))
           ))),
    ("SyntaxN.Conj_I",
     "[| ?H \<turnstile> ?A; ?H \<turnstile> ?B |]
      ==> ?H \<turnstile> ?A AND ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SyntaxN.cut_same",
     "[| ?H \<turnstile> ?A; insert ?A ?H \<turnstile> ?B |]
      ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("SyntaxN.cut0",
     "[| {} \<turnstile> ?A; insert ?A ?H \<turnstile> ?B |]
      ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1), template_var 0)
           ))),
    ("SyntaxN.Iff_MP_same",
     "[| ?H \<turnstile> ?A IFF ?B; ?H \<turnstile> ?A |]
      ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("SyntaxN.Iff_MP2_same",
     "[| ?H \<turnstile> ?A IFF ?B; ?H \<turnstile> ?B |]
      ==> ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 1)
           ))),
    ("SyntaxN.cut1",
     "[| {?A} \<turnstile> ?B; ?H \<turnstile> ?A |]
      ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_hole 0)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), template_var 1)
           ))),
    ("SyntaxN.subst_fm_Conj",
     "(?A AND ?B)(?i::=?x) = ?A(?i::=?x) AND ?B(?i::=?x)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("SyntaxN.Disj", "(?A OR ?B)(?i::=?x) = ?A(?i::=?x) OR ?B(?i::=?x)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("SyntaxN.Eq", "(?t EQ ?u)(?i::=?x) = subst ?i ?x ?t EQ subst ?i ?x ?u",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 3)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2)))),
    ("SyntaxN.subst_fm_Iff",
     "(?A IFF ?B)(?i::=?x) = ?A(?i::=?x) IFF ?B(?i::=?x)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("SyntaxN.Mem",
     "(?t IN ?u)(?i::=?x) = subst ?i ?x ?t IN subst ?i ?x ?u",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 3)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2)))),
    ("SyntaxN.subst_tm_HPair",
     "subst ?i ?x (HPair ?a ?b) = HPair (subst ?i ?x ?a) (subst ?i ?x ?b)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 0)))),
    ("SyntaxN.forget_eval_fm",
     "atom ?k \<sharp> ?A ==>
      eval_fm (finfun_update ?e ?k ?x) ?A = eval_fm ?e ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 3)),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("SyntaxN.forget_eval_tm",
     "atom ?i \<sharp> ?t ==>
      \<lbrakk>?t\<rbrakk>(finfun_update ?e ?i ?x) =
      \<lbrakk>?t\<rbrakk>?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 3)),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("SyntaxN.Disj_IE1",
     "insert ?B ?H \<turnstile> ?C ==>
      insert (?A OR ?B) ?H \<turnstile> ?A OR ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 3)),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("SyntaxN.Contrapos1",
     "?H \<turnstile> ?A IMP ?B ==> ?H \<turnstile> Neg ?B IMP Neg ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_hole 0,
                   template_app (template_hole 0, template_var 0))),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("SyntaxN.Var_Eq_imp_subst_Iff",
     "?H \<turnstile> Var ?i EQ ?t ==> ?H \<turnstile> ?A(?i::=?t) IFF ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 2)),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 2),
                   template_var 1)),
               template_var 0))
           ))),
    ("SyntaxN.DisjAssoc1",
     "?H \<turnstile> ?A OR ?B OR ?C ==> ?H \<turnstile> (?A OR ?B) OR ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_var 0))
           ))),
    ("SyntaxN.DisjAssoc2",
     "?H \<turnstile> (?A OR ?B) OR ?C ==> ?H \<turnstile> ?A OR ?B OR ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app
                 (template_hole 0,
                  template_app
                   (template_app (template_hole 0, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("SyntaxN.Conj_E",
     "insert ?A (insert ?B ?H) \<turnstile> ?C ==>
      insert (?A AND ?B) ?H \<turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2)),
                 template_var 1)),
             template_var 0)
           ))),
    ("SyntaxN.rotate2",
     "insert ?A2.0 (insert ?A1.0 ?H) \<turnstile> ?B ==>
      insert ?A1.0 (insert ?A2.0 ?H) \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 3),
                  template_app
                   (template_app (template_hole 0, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1))),
             template_var 0)
           ))),
    ("SyntaxN.Sym_L",
     "insert (?t EQ ?u) ?H \<turnstile> ?A ==>
      insert (?u EQ ?t) ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_hole 1,
                    template_app
                     (template_app (template_hole 0, template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 3)),
                 template_var 1)),
             template_var 0)
           ))),
    ("SyntaxN.Contrapos2",
     "?H \<turnstile> Neg ?B IMP Neg ?A ==> ?H \<turnstile> ?A IMP ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_hole 0,
                    template_app (template_hole 0, template_var 1))),
                template_app (template_hole 0, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 1))
           ))),
    ("SyntaxN.hfthm_sound",
     "[| ?H \<turnstile> ?A; ALL B:?H. eval_fm ?e B |] ==> eval_fm ?e ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("SyntaxN.Disj_Neg_2",
     "[| ?H \<turnstile> ?A OR ?B; ?H \<turnstile> Neg ?A |]
      ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), template_var 0)
           ))),
    ("SyntaxN.Disj_Neg_1",
     "[| ?H \<turnstile> ?A OR ?B; ?H \<turnstile> Neg ?B |]
      ==> ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), template_var 1)
           ))),
    ("SyntaxN.MP_same",
     "[| ?H \<turnstile> ?A IMP ?B; ?H \<turnstile> ?A |]
      ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 1)),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), template_var 0)
           ))),
    ("SyntaxN.MP_null",
     "[| {} \<turnstile> ?A IMP ?B; ?H \<turnstile> ?A |]
      ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 2)),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0), template_var 1)
           ))),
    ("SyntaxN.AssumeH",
     "insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0 (insert ?A6.0 (insert ?A7.0 ?H)))))) \<turnstile>
      ?A7.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 7),
               template_app
                (template_app (template_hole 0, template_var 6),
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_app
                        (template_app (template_hole 0, template_var 2),
                         template_app
                          (template_app (template_hole 0, template_var 1),
                           template_var 0)))))))),
           template_var 1)
         )),
    ("SyntaxN.Eats_EQ_Zero_E2H",
     "insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0 (insert (Zero EQ Eats ?t ?u) ?H)))) \<turnstile>
      ?B",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 7),
               template_app
                (template_app (template_hole 3, template_var 6),
                 template_app
                  (template_app (template_hole 3, template_var 5),
                   template_app
                    (template_app (template_hole 3, template_var 4),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 2, template_hole 1),
                           template_app
                            (template_app (template_hole 0, template_var 3),
                             template_var 2))),
                       template_var 1)))))),
           template_var 0)
         )),
    ("SyntaxN.Eats_EQ_Zero_EH",
     "insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0 (insert (Eats ?t ?u EQ Zero) ?H)))) \<turnstile>
      ?B",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 7),
               template_app
                (template_app (template_hole 3, template_var 6),
                 template_app
                  (template_app (template_hole 3, template_var 5),
                   template_app
                    (template_app (template_hole 3, template_var 4),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app
                            (template_hole 2,
                             template_app
                              (template_app
                                (template_hole 1, template_var 3),
                               template_var 2)),
                           template_hole 0)),
                       template_var 1)))))),
           template_var 0)
         )),
    ("SyntaxN.cut",
     "[| ?H \<turnstile> ?A; insert ?A ?H' \<turnstile> ?B |]
      ==> ?H Un ?H' \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_var 0)
           ))),
    ("SyntaxN.Eq_Zero_D",
     "[| ?H \<turnstile> ?t EQ Zero; ?H \<turnstile> ?u IN ?t |]
      ==> ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_hole 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 3), template_var 0)
           ))),
    ("SyntaxN.Eats_cong1",
     "{} \<turnstile>
      ?t EQ ?t' AND ?u EQ ?u' IMP Eats ?t ?u EQ Eats ?t' ?u'",
     template_predicate
      (
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 2)),
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0)))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0))))
         )),
    ("SyntaxN.thin3",
     "insert ?A1.0 (insert ?A2.0 ?H) \<turnstile> ?B ==>
      insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H)) \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 4),
                  template_app
                   (template_app (template_hole 0, template_var 3),
                    template_var 2))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 2)))),
             template_var 1)
           ))),
    ("SyntaxN.Disj_3I",
     "insert (Neg ?A) (insert (Neg ?C) ?H) \<turnstile> ?B ==>
      ?H \<turnstile> ?A OR ?B OR ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 3)),
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app (template_hole 1, template_var 2)),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)))
           ))),
    ("SyntaxN.Neg_Disj_I",
     "[| ?H \<turnstile> Neg ?A; ?H \<turnstile> Neg ?B |]
      ==> ?H \<turnstile> Neg (?A OR ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("SyntaxN.Cases",
     "[| insert ?A ?H \<turnstile> ?B; insert (Neg ?A) ?H \<turnstile> ?B |]
      ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_hole 1,
                    template_app (template_hole 0, template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1), template_var 0)
           ))),
    ("SyntaxN.Eq_cong1",
     "{} \<turnstile> ?t EQ ?t' AND ?u EQ ?u' IMP ?t EQ ?u IMP ?t' EQ ?u'",
     template_predicate
      (
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 2)),
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 1))),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0))))
         )),
    ("SyntaxN.Mem_cong1",
     "{} \<turnstile> ?t EQ ?t' AND ?u EQ ?u' IMP ?t IN ?u IMP ?t' IN ?u'",
     template_predicate
      (
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 2)),
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0)))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 1))),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0))))
         )),
    ("SyntaxN.AssumeH",
     "insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0 (insert ?A8.0 ?H))))))) \<turnstile>
      ?A8.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 8),
               template_app
                (template_app (template_hole 0, template_var 7),
                 template_app
                  (template_app (template_hole 0, template_var 6),
                   template_app
                    (template_app (template_hole 0, template_var 5),
                     template_app
                      (template_app (template_hole 0, template_var 4),
                       template_app
                        (template_app (template_hole 0, template_var 3),
                         template_app
                          (template_app (template_hole 0, template_var 2),
                           template_app
                            (template_app (template_hole 0, template_var 1),
                             template_var 0))))))))),
           template_var 1)
         )),
    ("SyntaxN.Eats_EQ_Zero_E2H",
     "insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0 (insert (Zero EQ Eats ?t ?u) ?H))))) \<turnstile>
      ?B",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 8),
               template_app
                (template_app (template_hole 3, template_var 7),
                 template_app
                  (template_app (template_hole 3, template_var 6),
                   template_app
                    (template_app (template_hole 3, template_var 5),
                     template_app
                      (template_app (template_hole 3, template_var 4),
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app
                            (template_app
                              (template_hole 2, template_hole 1),
                             template_app
                              (template_app
                                (template_hole 0, template_var 3),
                               template_var 2))),
                         template_var 1))))))),
           template_var 0)
         )),
    ("SyntaxN.Eats_EQ_Zero_EH",
     "insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0 (insert (Eats ?t ?u EQ Zero) ?H))))) \<turnstile>
      ?B",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 8),
               template_app
                (template_app (template_hole 3, template_var 7),
                 template_app
                  (template_app (template_hole 3, template_var 6),
                   template_app
                    (template_app (template_hole 3, template_var 5),
                     template_app
                      (template_app (template_hole 3, template_var 4),
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app
                            (template_app
                              (template_hole 2,
                               template_app
                                (template_app
                                  (template_hole 1, template_var 3),
                                 template_var 2)),
                             template_hole 0)),
                         template_var 1))))))),
           template_var 0)
         )),
    ("SyntaxN.Neg_Imp_E",
     "insert (Neg ?B) (insert ?A ?H) \<turnstile> ?C ==>
      insert (Neg (?A IMP ?B)) ?H \<turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 3)),
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app (template_hole 1, template_var 2)),
                       template_var 3))),
                 template_var 1)),
             template_var 0)
           ))),
    ("SyntaxN.All_E",
     "insert (?A(?i::=?x)) ?H \<turnstile> ?B ==>
      insert (SyntaxN.All ?i ?A) ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app
                       (template_app (template_hole 2, template_var 4),
                        template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_app (template_hole 1, template_var 4)))),
                 template_var 1)),
             template_var 0)
           ))),
    ("SyntaxN.Neg_I0",
     "(!!B. atom ?i \<sharp> B ==> insert ?A ?H \<turnstile> B) ==>
      ?H \<turnstile> Neg ?A",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("SyntaxN.Iff_E1",
     "[| ?H \<turnstile> ?A; insert ?B ?H \<turnstile> ?C |]
      ==> insert (?A IFF ?B) ?H \<turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1)),
                 template_var 3)),
             template_var 0)
           ))),
    ("SyntaxN.Iff_E2",
     "[| ?H \<turnstile> ?A; insert ?B ?H \<turnstile> ?C |]
      ==> insert (?B IFF ?A) ?H \<turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 2)),
                 template_var 3)),
             template_var 0)
           ))),
    ("SyntaxN.Neg_Imp_I",
     "[| ?H \<turnstile> ?A; insert ?B ?H \<turnstile> Fls |]
      ==> ?H \<turnstile> Neg (?A IMP ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_var 2)),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 1, template_var 1)),
                 template_var 0)))
           ))),
    ("SyntaxN.Trans",
     "[| ?H \<turnstile> ?x EQ ?y; ?H \<turnstile> ?y EQ ?z |]
      ==> ?H \<turnstile> ?x EQ ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("SyntaxN.Iff_trans",
     "[| ?H \<turnstile> ?A IFF ?B; ?H \<turnstile> ?B IFF ?C |]
      ==> ?H \<turnstile> ?A IFF ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("SyntaxN.Iff_MP_left",
     "[| ?H \<turnstile> ?A IFF ?B; insert ?A ?H \<turnstile> ?C |]
      ==> insert ?B ?H \<turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3)),
             template_var 0)
           ))),
    ("SyntaxN.Iff_MP_left'",
     "[| ?H \<turnstile> ?A IFF ?B; insert ?B ?H \<turnstile> ?C |]
      ==> insert ?A ?H \<turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3)),
             template_var 0)
           ))),
    ("SyntaxN.Iff_I",
     "[| insert ?A ?H \<turnstile> ?B; insert ?B ?H \<turnstile> ?A |]
      ==> ?H \<turnstile> ?A IFF ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 1)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("SyntaxN.rcut1",
     "[| {?A} \<turnstile> ?B; insert ?B ?H \<turnstile> ?C |]
      ==> insert ?A ?H \<turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_hole 0)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_var 0)
           ))),
    ("SyntaxN.size_Iff", "size (?A IFF ?B) = 2 * (size ?A + size ?B) + 8",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0))),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 6, template_var 1)),
               template_app (template_hole 6, template_var 0)))),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_hole 1,
               template_app (template_hole 1, template_hole 0))))))),
    ("SyntaxN.All2_Zero_E",
     "?H \<turnstile> ?B ==> insert (All2 ?i Zero ?A) ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 1),
                       template_app
                        (template_hole 5,
                         template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_app
                                  (template_hole 2,
                                   template_app
                                    (template_hole 1, template_var 1)),
                                 template_hole 0))),
                           template_var 0))))),
                 template_var 3)),
             template_var 2)
           ))),
    ("SyntaxN.Disj_IE1H",
     "insert ?B (insert ?A1.0 ?H) \<turnstile> ?C ==>
      insert ?A1.0 (insert (?A OR ?B) ?H) \<turnstile> ?A OR ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 4),
                  template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 2))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 4)),
                   template_var 2))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("SyntaxN.Imp_Imp_commute",
     "?H \<turnstile> ?B IMP ?A IMP ?C ==>
      ?H \<turnstile> ?A IMP ?B IMP ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 2)),
                template_app
                 (template_app
                   (template_hole 1,
                    template_app (template_hole 0, template_var 1)),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 template_var 0)))
           ))),
    ("SyntaxN.Conj_EH",
     "insert ?A (insert ?Ba (insert ?A1.0 ?H)) \<turnstile> ?B ==>
      insert ?A1.0 (insert (?A AND ?Ba) ?H) \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 4),
                  template_app
                   (template_app (template_hole 1, template_var 3),
                    template_app
                     (template_app (template_hole 1, template_var 2),
                      template_var 1)))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 3)),
                   template_var 1))),
             template_var 0)
           ))),
    ("SyntaxN.rotate3",
     "insert ?A3.0 (insert ?A1.0 (insert ?A2.0 ?H)) \<turnstile> ?B ==>
      insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H)) \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 4),
                  template_app
                   (template_app (template_hole 0, template_var 3),
                    template_app
                     (template_app (template_hole 0, template_var 2),
                      template_var 1)))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 1)))),
             template_var 0)
           ))),
    ("SyntaxN.Imp_E",
     "[| ?H \<turnstile> ?A; insert ?B ?H \<turnstile> ?C |]
      ==> insert (?A IMP ?B) ?H \<turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 2)),
                     template_var 1)),
                 template_var 3)),
             template_var 0)
           ))),
    ("SyntaxN.Subst",
     "[| ?H \<turnstile> ?A; ALL B:?H. atom ?i \<sharp> B |]
      ==> ?H \<turnstile> ?A(?i::=?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("SyntaxN.Disj_Semicong_1",
     "[| ?H \<turnstile> ?A OR ?C; ?H \<turnstile> ?A IMP ?B |]
      ==> ?H \<turnstile> ?B OR ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 2)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1))
           ))),
    ("SyntaxN.AssumeH",
     "insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert ?A8.0 (insert ?A9.0 ?H)))))))) \<turnstile>
      ?A9.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 9),
               template_app
                (template_app (template_hole 0, template_var 8),
                 template_app
                  (template_app (template_hole 0, template_var 7),
                   template_app
                    (template_app (template_hole 0, template_var 6),
                     template_app
                      (template_app (template_hole 0, template_var 5),
                       template_app
                        (template_app (template_hole 0, template_var 4),
                         template_app
                          (template_app (template_hole 0, template_var 3),
                           template_app
                            (template_app (template_hole 0, template_var 2),
                             template_app
                              (template_app
                                (template_hole 0, template_var 1),
                               template_var 0)))))))))),
           template_var 1)
         )),
    ("SyntaxN.Eats_EQ_Zero_E2H",
     "insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert (Zero EQ Eats ?t ?u) ?H)))))) \<turnstile>
      ?B",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 9),
               template_app
                (template_app (template_hole 3, template_var 8),
                 template_app
                  (template_app (template_hole 3, template_var 7),
                   template_app
                    (template_app (template_hole 3, template_var 6),
                     template_app
                      (template_app (template_hole 3, template_var 5),
                       template_app
                        (template_app (template_hole 3, template_var 4),
                         template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_app
                                (template_hole 2, template_hole 1),
                               template_app
                                (template_app
                                  (template_hole 0, template_var 3),
                                 template_var 2))),
                           template_var 1)))))))),
           template_var 0)
         )),
    ("SyntaxN.Eats_EQ_Zero_EH",
     "insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert (Eats ?t ?u EQ Zero) ?H)))))) \<turnstile>
      ?B",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 9),
               template_app
                (template_app (template_hole 3, template_var 8),
                 template_app
                  (template_app (template_hole 3, template_var 7),
                   template_app
                    (template_app (template_hole 3, template_var 6),
                     template_app
                      (template_app (template_hole 3, template_var 5),
                       template_app
                        (template_app (template_hole 3, template_var 4),
                         template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_app
                                (template_hole 2,
                                 template_app
                                  (template_app
                                    (template_hole 1, template_var 3),
                                   template_var 2)),
                               template_hole 0)),
                           template_var 1)))))))),
           template_var 0)
         )),
    ("SyntaxN.subst_fm_commute",
     "atom ?j \<sharp> ?A ==>
      (?A(?i::=?t))(?j::=?u) = ?A(?i::=subst ?j ?u ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 4)),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 4),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0),
             template_var 1))))),
    ("SyntaxN.Mem_Zero_iff",
     "atom ?i \<sharp> ?t ==>
      ?H \<turnstile> ?t EQ Zero IFF SyntaxN.All ?i (Neg (Var ?i IN ?t))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 0),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_hole 4)),
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_app
                    (template_hole 3,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app (template_hole 0, template_var 2)),
                         template_var 1)))))))
           ))),
    ("SyntaxN.Eq_Zero_thm",
     "atom ?i \<sharp> ?t ==>
      {SyntaxN.All ?i (Neg (Var ?i IN ?t))} \<turnstile> ?t EQ Zero",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 1),
                       template_app
                        (template_hole 6,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_app
                              (template_hole 4,
                               template_app
                                (template_hole 3, template_var 1)),
                             template_var 0)))))),
                 template_hole 2)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("SyntaxN.subst_tm_commute",
     "atom ?j \<sharp> ?tm ==>
      subst ?j ?u (subst ?i ?t ?tm) = subst ?i (subst ?j ?u ?t) ?tm",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 4)),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 3)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 2),
               template_var 0)),
           template_var 3)))),
    ("SyntaxN.Ex",
     "atom ?j \<sharp> (?i, ?x) ==>
      (SyntaxN.Ex ?j ?A)(?i::=?x) = SyntaxN.Ex ?j (?A(?i::=?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 3)),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)),
             template_var 2),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2),
             template_var 1))))),
    ("SyntaxN.All_I",
     "[| ?H \<turnstile> ?A; ALL C:?H. atom ?i \<sharp> C |]
      ==> ?H \<turnstile> SyntaxN.All ?i ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app (template_hole 1, template_var 1))))
           ))),
    ("SyntaxN.Neg_Conj_E",
     "[| ?H \<turnstile> ?B; insert (Neg ?A) ?H \<turnstile> ?C |]
      ==> insert (Neg (?A AND ?B)) ?H \<turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 1)),
                  template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 2))),
                 template_var 3)),
             template_var 0)
           ))),
    ("SyntaxN.Disj_E",
     "[| insert ?A ?H \<turnstile> ?C; insert ?B ?H \<turnstile> ?C |]
      ==> insert (?A OR ?B) ?H \<turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 0)),
                 template_var 2)),
             template_var 1)
           ))),
    ("SyntaxN.Imp_Neg_I",
     "[| ?H \<turnstile> ?A IMP ?B; ?H \<turnstile> ?A IMP Neg ?B |]
      ==> ?H \<turnstile> Neg ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 1)),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 1)),
                template_app (template_hole 0, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 0, template_var 1))
           ))),
    ("SyntaxN.thin4",
     "insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H)) \<turnstile> ?B ==>
      insert ?A1.0
       (insert ?A2.0 (insert ?A3.0 (insert ?A4.0 ?H))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 5),
                  template_app
                   (template_app (template_hole 0, template_var 4),
                    template_app
                     (template_app (template_hole 0, template_var 3),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 2))))),
             template_var 1)
           ))),
    ("SyntaxN.All_E'",
     "[| ?H \<turnstile> SyntaxN.All ?i ?A;
         insert (?A(?i::=?x)) ?H \<turnstile> ?B |]
      ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_app (template_hole 3, template_var 2))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 1,
                    template_app
                     (template_app
                       (template_app (template_hole 0, template_var 2),
                        template_var 3),
                      template_var 1)),
                  template_var 4)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 4), template_var 0)
           ))),
    ("SyntaxN.cut_thin",
     "[| ?HA \<turnstile> ?A; insert ?A ?HB \<turnstile> ?B;
         ?HA Un ?HB <= ?H |]
      ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 0, template_var 4), template_var 2),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0), template_var 1)
           ))),
    ("SyntaxN.cut2",
     "[| {?A, ?B} \<turnstile> ?C; ?H \<turnstile> ?A; ?H \<turnstile> ?B |]
      ==> ?H \<turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_hole 0))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), template_var 1)
           ))),
    ("SyntaxN.AssumeH",
     "insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert ?A8.0
                     (insert ?A9.0 (insert ?A10.0 ?H))))))))) \<turnstile>
      ?A10.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 10),
               template_app
                (template_app (template_hole 0, template_var 9),
                 template_app
                  (template_app (template_hole 0, template_var 8),
                   template_app
                    (template_app (template_hole 0, template_var 7),
                     template_app
                      (template_app (template_hole 0, template_var 6),
                       template_app
                        (template_app (template_hole 0, template_var 5),
                         template_app
                          (template_app (template_hole 0, template_var 4),
                           template_app
                            (template_app (template_hole 0, template_var 3),
                             template_app
                              (template_app
                                (template_hole 0, template_var 2),
                               template_app
                                (template_app
                                  (template_hole 0, template_var 1),
                                 template_var 0))))))))))),
           template_var 1)
         )),
    ("SyntaxN.Eats_EQ_Zero_E2H",
     "insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert (Zero EQ Eats ?t ?u) ?H))))))) \<turnstile>
      ?B",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 10),
               template_app
                (template_app (template_hole 3, template_var 9),
                 template_app
                  (template_app (template_hole 3, template_var 8),
                   template_app
                    (template_app (template_hole 3, template_var 7),
                     template_app
                      (template_app (template_hole 3, template_var 6),
                       template_app
                        (template_app (template_hole 3, template_var 5),
                         template_app
                          (template_app (template_hole 3, template_var 4),
                           template_app
                            (template_app
                              (template_hole 3,
                               template_app
                                (template_app
                                  (template_hole 2, template_hole 1),
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 3),
                                   template_var 2))),
                             template_var 1))))))))),
           template_var 0)
         )),
    ("SyntaxN.Eats_EQ_Zero_EH",
     "insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert (Eats ?t ?u EQ Zero) ?H))))))) \<turnstile>
      ?B",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 10),
               template_app
                (template_app (template_hole 3, template_var 9),
                 template_app
                  (template_app (template_hole 3, template_var 8),
                   template_app
                    (template_app (template_hole 3, template_var 7),
                     template_app
                      (template_app (template_hole 3, template_var 6),
                       template_app
                        (template_app (template_hole 3, template_var 5),
                         template_app
                          (template_app (template_hole 3, template_var 4),
                           template_app
                            (template_app
                              (template_hole 3,
                               template_app
                                (template_app
                                  (template_hole 2,
                                   template_app
                                    (template_app
(template_hole 1, template_var 3),
                                     template_var 2)),
                                 template_hole 0)),
                             template_var 1))))))))),
           template_var 0)
         )),
    ("SyntaxN.eval_fm_rename",
     "atom ?k' \<sharp> ?A ==>
      eval_fm (finfun_update ?e ?k ?x) ?A =
      eval_fm (finfun_update ?e ?k' ?x)
       ((?k' \<leftrightarrow> ?k) \<bullet> ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 4)),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1),
               template_var 0)),
           template_var 3),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 4),
               template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1)),
             template_var 3))))),
    ("SyntaxN.eval_tm_rename",
     "atom ?k' \<sharp> ?t ==>
      \<lbrakk>?t\<rbrakk>(finfun_update ?e ?k ?x) =
      \<lbrakk>(?k' \<leftrightarrow> ?k) \<bullet> ?t\<rbrakk>(finfun_update
                           ?e ?k' ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 4)),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1),
               template_var 0)),
           template_var 3),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 4),
               template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1)),
             template_var 3))))),
    ("SyntaxN.Eats_cong",
     "[| ?H \<turnstile> ?t EQ ?t'; ?H \<turnstile> ?u EQ ?u' |]
      ==> ?H \<turnstile> Eats ?t ?u EQ Eats ?t' ?u'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("SyntaxN.HPair_cong",
     "[| ?H \<turnstile> ?t EQ ?t'; ?H \<turnstile> ?u EQ ?u' |]
      ==> ?H \<turnstile> HPair ?t ?u EQ HPair ?t' ?u'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("SyntaxN.Eq_cong",
     "[| ?H \<turnstile> ?t EQ ?t'; ?H \<turnstile> ?u EQ ?u' |]
      ==> ?H \<turnstile> ?t EQ ?u IFF ?t' EQ ?u'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)))
           ))),
    ("SyntaxN.Mem_cong",
     "[| ?H \<turnstile> ?t EQ ?t'; ?H \<turnstile> ?u EQ ?u' |]
      ==> ?H \<turnstile> ?t IN ?u IFF ?t' IN ?u'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 4),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("SyntaxN.Eq_Trans_E",
     "[| ?H \<turnstile> ?x EQ ?u; insert (?t EQ ?u) ?H \<turnstile> ?A |]
      ==> insert (?x EQ ?t) ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_hole 0,
                    template_app
                     (template_app (template_hole 1, template_var 1),
                      template_var 2)),
                  template_var 4)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 1)),
                 template_var 4)),
             template_var 0)
           ))),
    ("SyntaxN.Conj_cong",
     "[| ?H \<turnstile> ?A IFF ?A'; ?H \<turnstile> ?B IFF ?B' |]
      ==> ?H \<turnstile> ?A AND ?B IFF ?A' AND ?B'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("SyntaxN.Disj_cong",
     "[| ?H \<turnstile> ?A IFF ?A'; ?H \<turnstile> ?B IFF ?B' |]
      ==> ?H \<turnstile> ?A OR ?B IFF ?A' OR ?B'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("SyntaxN.Iff_cong",
     "[| ?H \<turnstile> ?A IFF ?A'; ?H \<turnstile> ?B IFF ?B' |]
      ==> ?H \<turnstile> (?A IFF ?B) IFF ?A' IFF ?B'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 4),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 4),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("SyntaxN.Conj_mono",
     "[| insert ?A ?H \<turnstile> ?B; insert ?C ?H \<turnstile> ?D |]
      ==> insert (?A AND ?C) ?H \<turnstile> ?B AND ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 1)),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("SyntaxN.Disj_mono",
     "[| insert ?A ?H \<turnstile> ?B; insert ?C ?H \<turnstile> ?D |]
      ==> insert (?A OR ?C) ?H \<turnstile> ?B OR ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 1)),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("SyntaxN.Imp_cut",
     "[| insert ?C ?H \<turnstile> ?A IMP ?B; {?A} \<turnstile> ?C |]
      ==> ?H \<turnstile> ?A IMP ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 1)),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_hole 0)),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_var 0))
           ))),
    ("SyntaxN.MP_thin",
     "[| ?HA \<turnstile> ?A IMP ?B; ?HB \<turnstile> ?A;
         ?HA Un ?HB <= ?H |]
      ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 3)),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 3)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 0, template_var 4), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0), template_var 2)
           ))),
    ("SyntaxN.Disj_IE1H",
     "insert ?B (insert ?A1.0 (insert ?A2.0 ?H)) \<turnstile> ?C ==>
      insert ?A1.0 (insert ?A2.0 (insert (?A OR ?B) ?H)) \<turnstile>
      ?A OR ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 5),
                  template_app
                   (template_app (template_hole 1, template_var 4),
                    template_app
                     (template_app (template_hole 1, template_var 3),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 0),
                         template_var 5)),
                     template_var 2)))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("SyntaxN.Conj_EH",
     "insert ?A (insert ?Ba (insert ?A1.0 (insert ?A2.0 ?H))) \<turnstile>
      ?B ==>
      insert ?A1.0 (insert ?A2.0 (insert (?A AND ?Ba) ?H)) \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 5),
                  template_app
                   (template_app (template_hole 1, template_var 4),
                    template_app
                     (template_app (template_hole 1, template_var 3),
                      template_app
                       (template_app (template_hole 1, template_var 2),
                        template_var 1))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 5),
                         template_var 4)),
                     template_var 1)))),
             template_var 0)
           ))),
    ("SyntaxN.rotate4",
     "insert ?A4.0
       (insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0 (insert ?A3.0 (insert ?A4.0 ?H))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 5),
                  template_app
                   (template_app (template_hole 0, template_var 4),
                    template_app
                     (template_app (template_hole 0, template_var 3),
                      template_app
                       (template_app (template_hole 0, template_var 2),
                        template_var 1))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 1))))),
             template_var 0)
           ))),
    ("SyntaxN.AssumeH",
     "insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert ?A8.0
                     (insert ?A9.0
                       (insert ?A10.0
                         (insert ?A11.0 ?H)))))))))) \<turnstile>
      ?A11.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 11),
               template_app
                (template_app (template_hole 0, template_var 10),
                 template_app
                  (template_app (template_hole 0, template_var 9),
                   template_app
                    (template_app (template_hole 0, template_var 8),
                     template_app
                      (template_app (template_hole 0, template_var 7),
                       template_app
                        (template_app (template_hole 0, template_var 6),
                         template_app
                          (template_app (template_hole 0, template_var 5),
                           template_app
                            (template_app (template_hole 0, template_var 4),
                             template_app
                              (template_app
                                (template_hole 0, template_var 3),
                               template_app
                                (template_app
                                  (template_hole 0, template_var 2),
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 1),
                                   template_var 0)))))))))))),
           template_var 1)
         )),
    ("SyntaxN.Imp_cong",
     "[| ?H \<turnstile> ?A IFF ?A'; ?H \<turnstile> ?B IFF ?B' |]
      ==> ?H \<turnstile> (?A IMP ?B) IFF ?A' IMP ?B'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 4),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 3)),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 template_var 0)))
           ))),
    ("SyntaxN.Ex_cong",
     "[| ?H \<turnstile> ?A IFF ?A'; ALL C:?H. atom ?i \<sharp> C |]
      ==> ?H \<turnstile> SyntaxN.Ex ?i ?A IFF SyntaxN.Ex ?i ?A'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 3),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("SyntaxN.Ex_mono",
     "[| insert ?A ?H \<turnstile> ?B; ALL C:?H. atom ?i \<sharp> C |]
      ==> insert (SyntaxN.Ex ?i ?A) ?H \<turnstile> SyntaxN.Ex ?i ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 3)),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("SyntaxN.Mem_SUCC_E",
     "[| insert (?u IN ?t) ?H \<turnstile> ?C;
         insert (?u EQ ?t) ?H \<turnstile> ?C |]
      ==> insert (?u IN SUCC ?t) ?H \<turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 1, template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_app (template_hole 0, template_var 2))),
                 template_var 1)),
             template_var 0)
           ))),
    ("SyntaxN.rcut2",
     "[| {?A, ?B} \<turnstile> ?C; insert ?C ?H \<turnstile> ?D;
         ?H \<turnstile> ?B |]
      ==> insert ?A ?H \<turnstile> ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 4),
                  template_app
                   (template_app (template_hole 1, template_var 3),
                    template_hole 0))),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1)),
             template_var 0)
           ))),
    ("SyntaxN.AssumeH",
     "insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert ?A8.0
                     (insert ?A9.0
                       (insert ?A10.0
                         (insert ?A11.0
                           (insert ?A12.0 ?H))))))))))) \<turnstile>
      ?A12.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 12),
               template_app
                (template_app (template_hole 0, template_var 11),
                 template_app
                  (template_app (template_hole 0, template_var 10),
                   template_app
                    (template_app (template_hole 0, template_var 9),
                     template_app
                      (template_app (template_hole 0, template_var 8),
                       template_app
                        (template_app (template_hole 0, template_var 7),
                         template_app
                          (template_app (template_hole 0, template_var 6),
                           template_app
                            (template_app (template_hole 0, template_var 5),
                             template_app
                              (template_app
                                (template_hole 0, template_var 4),
                               template_app
                                (template_app
                                  (template_hole 0, template_var 3),
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 2),
                                   template_app
                                    (template_app
(template_hole 0, template_var 1),
                                     template_var 0))))))))))))),
           template_var 1)
         )),
    ("SyntaxN.twist_forget_eval_fm",
     "atom ?j \<sharp> (?i, ?A) ==>
      eval_fm
       (finfun_update (finfun_update (finfun_update ?e ?i ?x) ?j ?y) ?i ?z)
       ?A =
      eval_fm (finfun_update ?e ?i ?z) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 6)),
              template_app
               (template_app (template_hole 3, template_var 5),
                template_var 4))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 0,
                         template_app
                          (template_app
                            (template_app (template_hole 0, template_var 3),
                             template_var 5),
                           template_var 2)),
                       template_var 6),
                     template_var 1)),
                 template_var 5),
               template_var 0)),
           template_var 4),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 5),
               template_var 0)),
           template_var 4)))),
    ("SyntaxN.Disj_EH",
     "[| insert ?A (insert ?A1.0 ?H) \<turnstile> ?B;
         insert ?Ba (insert ?A1.0 ?H) \<turnstile> ?B |]
      ==> insert ?A1.0 (insert (?A OR ?Ba) ?H) \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 4),
                  template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 2))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 0)),
                   template_var 2))),
             template_var 1)
           ))),
    ("SyntaxN.Iff_E",
     "[| insert ?A (insert ?B ?H) \<turnstile> ?C;
         insert (Neg ?A) (insert (Neg ?B) ?H) \<turnstile> ?C |]
      ==> insert (?A IFF ?B) ?H \<turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_var 1))),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 3)),
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app (template_hole 1, template_var 2)),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2)),
                 template_var 1)),
             template_var 0)
           ))),
    ("SyntaxN.Mem_Eats_E",
     "[| insert (?u IN ?t) ?H \<turnstile> ?C;
         insert (?u EQ ?z) ?H \<turnstile> ?C |]
      ==> insert (?u IN Eats ?t ?z) ?H \<turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 4),
                      template_var 3)),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_var 0)),
                  template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 4),
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 0))),
                 template_var 2)),
             template_var 1)
           ))),
    ("SyntaxN.S",
     "[| ?H \<turnstile> ?A IMP ?B IMP ?C; ?H' \<turnstile> ?A IMP ?B |]
      ==> ?H Un ?H' \<turnstile> ?A IMP ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 3)),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 2)),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 3)),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 3)),
               template_var 1))
           ))),
    ("SyntaxN.fresh_subst_fm_if",
     "?j \<sharp> ?A(?i::=?x) =
      (atom ?i \<sharp> ?A & ?j \<sharp> ?A |
       ?j \<sharp> ?x & (?j \<sharp> ?A | ?j = atom ?i))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app (template_hole 2, template_var 1)),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 6, template_var 3),
                   template_var 2))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 6, template_var 3),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_app (template_hole 2, template_var 1)))))
           ))),
    ("SyntaxN.fresh_subst_if",
     "?j \<sharp> subst ?i ?x ?t =
      (atom ?i \<sharp> ?t & ?j \<sharp> ?t |
       ?j \<sharp> ?x & (?j \<sharp> ?t | ?j = atom ?i))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app (template_hole 1, template_var 2)),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 5, template_var 3),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 5, template_var 3),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 5, template_var 3),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_app (template_hole 1, template_var 2)))))
           ))),
    ("SyntaxN.Disj_IE1H",
     "insert ?B (insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H))) \<turnstile>
      ?C ==>
      insert ?A1.0
       (insert ?A2.0 (insert ?A3.0 (insert (?A OR ?B) ?H))) \<turnstile>
      ?A OR ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 6),
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_var 2))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 0, template_var 0),
                           template_var 6)),
                       template_var 2))))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("SyntaxN.Conj_EH",
     "insert ?A
       (insert ?Ba
         (insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H)))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0 (insert ?A3.0 (insert (?A AND ?Ba) ?H))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 6),
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_app
                         (template_app (template_hole 1, template_var 2),
                          template_var 1)))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 0, template_var 6),
                           template_var 5)),
                       template_var 1))))),
             template_var 0)
           ))),
    ("SyntaxN.rotate5",
     "insert ?A5.0
       (insert ?A1.0
         (insert ?A2.0 (insert ?A3.0 (insert ?A4.0 ?H)))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0 (insert ?A4.0 (insert ?A5.0 ?H)))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 6),
                  template_app
                   (template_app (template_hole 0, template_var 5),
                    template_app
                     (template_app (template_hole 0, template_var 4),
                      template_app
                       (template_app (template_hole 0, template_var 3),
                        template_app
                         (template_app (template_hole 0, template_var 2),
                          template_var 1)))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 1)))))),
             template_var 0)
           ))),
    ("SyntaxN.subst_fm_Ex_with_renaming",
     "atom ?i' \<sharp> (?A, ?i, ?j, ?t) ==>
      (SyntaxN.Ex ?i ?A)(?j::=?t) =
      SyntaxN.Ex ?i' (((?i \<leftrightarrow> ?i') \<bullet> ?A)(?j::=?t))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 4)),
              template_app
               (template_app (template_hole 7, template_var 3),
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_app
                   (template_app (template_hole 5, template_var 1),
                    template_var 0))))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 3)),
             template_var 1),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 4)),
                   template_var 3)),
               template_var 1),
             template_var 0))))),
    ("SyntaxN.All_cong",
     "[| ?H \<turnstile> ?A IFF ?A'; ALL C:?H. atom ?i \<sharp> C |]
      ==> ?H \<turnstile> SyntaxN.All ?i ?A IFF SyntaxN.All ?i ?A'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 3),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_app (template_hole 1, template_var 2)))),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_app (template_hole 1, template_var 1)))))
           ))),
    ("SyntaxN.Ex_E",
     "[| insert ?A ?H \<turnstile> ?B; atom ?i \<sharp> ?B;
         ALL C:?H. atom ?i \<sharp> C |]
      ==> insert (SyntaxN.Ex ?i ?A) ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 3)),
                 template_var 2)),
             template_var 1)
           ))),
    ("SyntaxN.cut3",
     "[| {?A, ?B, ?C} \<turnstile> ?D; ?H \<turnstile> ?A;
         ?H \<turnstile> ?B; ?H \<turnstile> ?C |]
      ==> ?H \<turnstile> ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 4),
                  template_app
                   (template_app (template_hole 1, template_var 3),
                    template_app
                     (template_app (template_hole 1, template_var 2),
                      template_hole 0)))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), template_var 1)
           ))),
    ("SyntaxN.Eq_Zero_I",
     "[| insert (Var ?i IN ?t) ?H \<turnstile> Fls; atom ?i \<sharp> ?t;
         ALL B:?H. atom ?i \<sharp> B |]
      ==> ?H \<turnstile> ?t EQ Zero",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app (template_hole 7, template_var 2)),
                      template_var 1)),
                  template_var 0)),
              template_hole 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 10, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))
           ))),
    ("SyntaxN.Disj_IE1H",
     "insert ?B
       (insert ?A1.0
         (insert ?A2.0 (insert ?A3.0 (insert ?A4.0 ?H)))) \<turnstile>
      ?C ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0 (insert ?A4.0 (insert (?A OR ?B) ?H)))) \<turnstile>
      ?A OR ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 7),
                  template_app
                   (template_app (template_hole 1, template_var 6),
                    template_app
                     (template_app (template_hole 1, template_var 5),
                      template_app
                       (template_app (template_hole 1, template_var 4),
                        template_app
                         (template_app (template_hole 1, template_var 3),
                          template_var 2)))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 6),
                 template_app
                  (template_app (template_hole 1, template_var 5),
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     template_app
                      (template_app (template_hole 1, template_var 3),
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app (template_hole 0, template_var 0),
                             template_var 7)),
                         template_var 2)))))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("SyntaxN.Conj_EH",
     "insert ?A
       (insert ?Ba
         (insert ?A1.0
           (insert ?A2.0 (insert ?A3.0 (insert ?A4.0 ?H))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0 (insert (?A AND ?Ba) ?H)))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 7),
                  template_app
                   (template_app (template_hole 1, template_var 6),
                    template_app
                     (template_app (template_hole 1, template_var 5),
                      template_app
                       (template_app (template_hole 1, template_var 4),
                        template_app
                         (template_app (template_hole 1, template_var 3),
                          template_app
                           (template_app (template_hole 1, template_var 2),
                            template_var 1))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app (template_hole 0, template_var 7),
                             template_var 6)),
                         template_var 1)))))),
             template_var 0)
           ))),
    ("SyntaxN.rotate6",
     "insert ?A6.0
       (insert ?A1.0
         (insert ?A2.0
           (insert ?A3.0 (insert ?A4.0 (insert ?A5.0 ?H))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0 (insert ?A5.0 (insert ?A6.0 ?H))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 7),
                  template_app
                   (template_app (template_hole 0, template_var 6),
                    template_app
                     (template_app (template_hole 0, template_var 5),
                      template_app
                       (template_app (template_hole 0, template_var 4),
                        template_app
                         (template_app (template_hole 0, template_var 3),
                          template_app
                           (template_app (template_hole 0, template_var 2),
                            template_var 1))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 6),
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_app
                        (template_app (template_hole 0, template_var 2),
                         template_app
                          (template_app (template_hole 0, template_var 7),
                           template_var 1))))))),
             template_var 0)
           ))),
    ("SyntaxN.Mem_SUCC_EH",
     "[| insert (?u IN ?t) (insert ?A1.0 ?H) \<turnstile> ?B;
         insert (?u EQ ?t) (insert ?A1.0 ?H) \<turnstile> ?B |]
      ==> insert ?A1.0 (insert (?u IN SUCC ?t) ?H) \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 4),
                      template_var 3)),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1))),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_var 3)),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 4),
                       template_app (template_hole 0, template_var 3))),
                   template_var 1))),
             template_var 0)
           ))),
    ("SyntaxN.Disj_EH",
     "[| insert ?A (insert ?A1.0 (insert ?A2.0 ?H)) \<turnstile> ?B;
         insert ?Ba (insert ?A1.0 (insert ?A2.0 ?H)) \<turnstile> ?B |]
      ==> insert ?A1.0 (insert ?A2.0 (insert (?A OR ?Ba) ?H)) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 5),
                  template_app
                   (template_app (template_hole 1, template_var 4),
                    template_app
                     (template_app (template_hole 1, template_var 3),
                      template_var 2)))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app (template_hole 1, template_var 4),
                    template_app
                     (template_app (template_hole 1, template_var 3),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 5),
                         template_var 0)),
                     template_var 2)))),
             template_var 1)
           ))),
    ("SyntaxN.Mem_Eats_EH",
     "[| insert (?u IN ?t) (insert ?A1.0 ?H) \<turnstile> ?B;
         insert (?u EQ ?z) (insert ?A1.0 ?H) \<turnstile> ?B |]
      ==> insert ?A1.0 (insert (?u IN Eats ?t ?z) ?H) \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4)),
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 0)),
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 5),
                       template_app
                        (template_app (template_hole 0, template_var 4),
                         template_var 0))),
                   template_var 2))),
             template_var 1)
           ))),
    ("SyntaxN.subst_tm_commute2",
     "[| atom ?j \<sharp> ?t; atom ?i \<sharp> ?u; ?i ~= ?j |]
      ==> subst ?j ?u (subst ?i ?t ?tm) = subst ?i ?t (subst ?j ?u ?tm)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 2, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 1),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1),
             template_var 0))))),
    ("SyntaxN.Ex_EH",
     "[| insert ?A (insert ?A1.0 ?H) \<turnstile> ?B; atom ?i \<sharp> ?B;
         ALL C:insert ?A1.0 ?H. atom ?i \<sharp> C |]
      ==> insert ?A1.0 (insert (SyntaxN.Ex ?i ?A) ?H) \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app (template_hole 4, template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 4)),
                   template_var 2))),
             template_var 1)
           ))),
    ("SyntaxN.Eq_Eats_iff",
     "atom ?i \<sharp> (?z, ?t, ?u) ==>
      ?H \<turnstile>
      ?z EQ Eats ?t ?u IFF
      SyntaxN.All ?i (Var ?i IN ?z IFF Var ?i IN ?t OR Var ?i EQ ?u)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 4)),
              template_app
               (template_app (template_hole 10, template_var 3),
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_var 0),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 3),
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_var 1))),
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 4),
                   template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app
                            (template_hole 2,
                             template_app
                              (template_hole 1, template_var 4)),
                           template_var 3)),
                       template_app
                        (template_app
                          (template_hole 0,
                           template_app
                            (template_app
                              (template_hole 2,
                               template_app
                                (template_hole 1, template_var 4)),
                             template_var 2)),
                         template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_hole 1, template_var 4)),
                           template_var 1))))))))
           ))),
    ("SyntaxN.Disj_IE1H",
     "insert ?B
       (insert ?A1.0
         (insert ?A2.0
           (insert ?A3.0 (insert ?A4.0 (insert ?A5.0 ?H))))) \<turnstile>
      ?C ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0 (insert (?A OR ?B) ?H))))) \<turnstile>
      ?A OR ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 8),
                  template_app
                   (template_app (template_hole 1, template_var 7),
                    template_app
                     (template_app (template_hole 1, template_var 6),
                      template_app
                       (template_app (template_hole 1, template_var 5),
                        template_app
                         (template_app (template_hole 1, template_var 4),
                          template_app
                           (template_app (template_hole 1, template_var 3),
                            template_var 2))))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 7),
                 template_app
                  (template_app (template_hole 1, template_var 6),
                   template_app
                    (template_app (template_hole 1, template_var 5),
                     template_app
                      (template_app (template_hole 1, template_var 4),
                       template_app
                        (template_app (template_hole 1, template_var 3),
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 0, template_var 0),
                               template_var 8)),
                           template_var 2))))))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("SyntaxN.Conj_EH",
     "insert ?A
       (insert ?Ba
         (insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0 (insert ?A4.0 (insert ?A5.0 ?H)))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0 (insert (?A AND ?Ba) ?H))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 8),
                  template_app
                   (template_app (template_hole 1, template_var 7),
                    template_app
                     (template_app (template_hole 1, template_var 6),
                      template_app
                       (template_app (template_hole 1, template_var 5),
                        template_app
                         (template_app (template_hole 1, template_var 4),
                          template_app
                           (template_app (template_hole 1, template_var 3),
                            template_app
                             (template_app
                               (template_hole 1, template_var 2),
                              template_var 1)))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 6),
                 template_app
                  (template_app (template_hole 1, template_var 5),
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     template_app
                      (template_app (template_hole 1, template_var 3),
                       template_app
                        (template_app (template_hole 1, template_var 2),
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 0, template_var 8),
                               template_var 7)),
                           template_var 1))))))),
             template_var 0)
           ))),
    ("SyntaxN.rotate7",
     "insert ?A7.0
       (insert ?A1.0
         (insert ?A2.0
           (insert ?A3.0
             (insert ?A4.0 (insert ?A5.0 (insert ?A6.0 ?H)))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0 (insert ?A6.0 (insert ?A7.0 ?H)))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 8),
                  template_app
                   (template_app (template_hole 0, template_var 7),
                    template_app
                     (template_app (template_hole 0, template_var 6),
                      template_app
                       (template_app (template_hole 0, template_var 5),
                        template_app
                         (template_app (template_hole 0, template_var 4),
                          template_app
                           (template_app (template_hole 0, template_var 3),
                            template_app
                             (template_app
                               (template_hole 0, template_var 2),
                              template_var 1)))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 7),
                 template_app
                  (template_app (template_hole 0, template_var 6),
                   template_app
                    (template_app (template_hole 0, template_var 5),
                     template_app
                      (template_app (template_hole 0, template_var 4),
                       template_app
                        (template_app (template_hole 0, template_var 3),
                         template_app
                          (template_app (template_hole 0, template_var 2),
                           template_app
                            (template_app (template_hole 0, template_var 8),
                             template_var 1)))))))),
             template_var 0)
           ))),
    ("SyntaxN.cut4",
     "[| {?A, ?B, ?C, ?D} \<turnstile> ?E; ?H \<turnstile> ?A;
         ?H \<turnstile> ?B; ?H \<turnstile> ?C; ?H \<turnstile> ?D |]
      ==> ?H \<turnstile> ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 5),
                  template_app
                   (template_app (template_hole 1, template_var 4),
                    template_app
                     (template_app (template_hole 1, template_var 3),
                      template_app
                       (template_app (template_hole 1, template_var 2),
                        template_hole 0))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), template_var 1)
           ))),
    ("SyntaxN.All2_Eats_E2",
     "[| atom ?i \<sharp> (?t, ?u); ALL C:?H. atom ?i \<sharp> C |]
      ==> insert (All2 ?i (Eats ?t ?u) ?A) ?H \<turnstile> ?A(?i::=?u)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 4)),
              template_app
               (template_app (template_hole 11, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 4),
                       template_app
                        (template_hole 6,
                         template_app
                          (template_app
                            (template_hole 4,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_app
                                  (template_hole 3,
                                   template_app
                                    (template_hole 2, template_var 4)),
                                 template_app
                                  (template_app
                                    (template_hole 1, template_var 3),
                                   template_var 2)))),
                           template_var 0))))),
                 template_var 1)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 4),
               template_var 2))
           ))),
    ("SyntaxN.Ex_E_with_renaming",
     "[| insert ((?i \<leftrightarrow> ?i') \<bullet> ?A) ?H \<turnstile>
         ?B;
         atom ?i' \<sharp> (?A, ?i, ?B); ALL C:?H. atom ?i' \<sharp> C |]
      ==> insert (SyntaxN.Ex ?i ?A) ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_app (template_hole 7, template_var 4),
                          template_var 3)),
                      template_var 2)),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 3)),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 2)),
                 template_var 1)),
             template_var 0)
           ))),
    ("SyntaxN.Mem_SUCC_EH",
     "[| insert (?u IN ?t) (insert ?A1.0 (insert ?A2.0 ?H)) \<turnstile> ?B;
         insert (?u EQ ?t) (insert ?A1.0 (insert ?A2.0 ?H)) \<turnstile>
         ?B |]
      ==> insert ?A1.0
           (insert ?A2.0 (insert (?u IN SUCC ?t) ?H)) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4)),
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_app
                     (template_app (template_hole 3, template_var 2),
                      template_var 1)))),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4)),
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_app
                     (template_app (template_hole 3, template_var 2),
                      template_var 1)))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_var 5),
                         template_app (template_hole 0, template_var 4))),
                     template_var 1)))),
             template_var 0)
           ))),
    ("SyntaxN.All2_E",
     "[| atom ?i \<sharp> ?t; ?H \<turnstile> ?x IN ?t;
         insert (?A(?i::=?x)) ?H \<turnstile> ?B |]
      ==> insert (All2 ?i ?t ?A) ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 5)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app
                       (template_app (template_hole 4, template_var 1),
                        template_var 5),
                      template_var 2)),
                  template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 5),
                       template_app
                        (template_hole 3,
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_hole 3,
                               template_app
                                (template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 0, template_var 5)),
                                 template_var 4))),
                           template_var 1))))),
                 template_var 3)),
             template_var 0)
           ))),
    ("SyntaxN.Disj_EH",
     "[| insert ?A
          (insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H))) \<turnstile>
         ?B;
         insert ?Ba
          (insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H))) \<turnstile>
         ?B |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0 (insert (?A OR ?Ba) ?H))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 6),
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_var 2))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_var 2))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 0, template_var 6),
                           template_var 0)),
                       template_var 2))))),
             template_var 1)
           ))),
    ("SyntaxN.Mem_Eats_EH",
     "[| insert (?u IN ?t) (insert ?A1.0 (insert ?A2.0 ?H)) \<turnstile> ?B;
         insert (?u EQ ?z) (insert ?A1.0 (insert ?A2.0 ?H)) \<turnstile>
         ?B |]
      ==> insert ?A1.0
           (insert ?A2.0 (insert (?u IN Eats ?t ?z) ?H)) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 6),
                      template_var 5)),
                  template_app
                   (template_app (template_hole 3, template_var 4),
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 2)))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 1, template_var 6),
                      template_var 0)),
                  template_app
                   (template_app (template_hole 3, template_var 4),
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_var 6),
                         template_app
                          (template_app (template_hole 0, template_var 5),
                           template_var 0))),
                     template_var 2)))),
             template_var 1)
           ))),
    ("SyntaxN.Eq_Eats_I",
     "[| ?H \<turnstile>
         SyntaxN.All ?i (Var ?i IN ?z IFF Var ?i IN ?t OR Var ?i EQ ?u);
         atom ?i \<sharp> (?z, ?t, ?u) |]
      ==> ?H \<turnstile> ?z EQ Eats ?t ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 4),
              template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_app
                   (template_hole 11,
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_app
                           (template_hole 8,
                            template_app (template_hole 7, template_var 3)),
                          template_var 2)),
                      template_app
                       (template_app
                         (template_hole 6,
                          template_app
                           (template_app
                             (template_hole 8,
                              template_app
                               (template_hole 7, template_var 3)),
                            template_var 1)),
                        template_app
                         (template_app
                           (template_hole 5,
                            template_app (template_hole 7, template_var 3)),
                          template_var 0)))))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 3)),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 12, template_var 4),
             template_app
              (template_app (template_hole 5, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("SyntaxN.P1_cong",
     "[| !!i t x. atom i \<sharp> ?tms ==> (?P t)(i::=x) = ?P (subst i x t);
         ?H \<turnstile> ?x EQ ?x' |]
      ==> ?H \<turnstile> ?P ?x IFF ?P ?x'",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_var 3, template_var 1)),
               template_app (template_var 3, template_var 0)))
           ))),
    ("SyntaxN.All2_Eats_I_D",
     "atom ?i \<sharp> (?t, ?u) ==>
      {All2 ?i ?t ?A, ?A(?i::=?u)} \<turnstile> All2 ?i (Eats ?t ?u) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 3)),
              template_app
               (template_app (template_hole 10, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_var 3),
                       template_app
                        (template_hole 7,
                         template_app
                          (template_app
                            (template_hole 5,
                             template_app
                              (template_hole 7,
                               template_app
                                (template_app
                                  (template_hole 4,
                                   template_app
                                    (template_hole 3, template_var 3)),
                                 template_var 2))),
                           template_var 0))))),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_app (template_hole 2, template_var 0),
                         template_var 3),
                       template_var 1)),
                   template_hole 1))),
             template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 3),
                 template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_hole 7,
                         template_app
                          (template_app
                            (template_hole 4,
                             template_app
                              (template_hole 3, template_var 3)),
                           template_app
                            (template_app (template_hole 0, template_var 2),
                             template_var 1)))),
                     template_var 0)))))
           ))),
    ("SyntaxN.Disj_IE1H",
     "insert ?B
       (insert ?A1.0
         (insert ?A2.0
           (insert ?A3.0
             (insert ?A4.0 (insert ?A5.0 (insert ?A6.0 ?H)))))) \<turnstile>
      ?C ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0 (insert (?A OR ?B) ?H)))))) \<turnstile>
      ?A OR ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 9),
                  template_app
                   (template_app (template_hole 1, template_var 8),
                    template_app
                     (template_app (template_hole 1, template_var 7),
                      template_app
                       (template_app (template_hole 1, template_var 6),
                        template_app
                         (template_app (template_hole 1, template_var 5),
                          template_app
                           (template_app (template_hole 1, template_var 4),
                            template_app
                             (template_app
                               (template_hole 1, template_var 3),
                              template_var 2)))))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 8),
                 template_app
                  (template_app (template_hole 1, template_var 7),
                   template_app
                    (template_app (template_hole 1, template_var 6),
                     template_app
                      (template_app (template_hole 1, template_var 5),
                       template_app
                        (template_app (template_hole 1, template_var 4),
                         template_app
                          (template_app (template_hole 1, template_var 3),
                           template_app
                            (template_app
                              (template_hole 1,
                               template_app
                                (template_app
                                  (template_hole 0, template_var 0),
                                 template_var 9)),
                             template_var 2)))))))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("SyntaxN.Conj_EH",
     "insert ?A
       (insert ?Ba
         (insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0 (insert ?A6.0 ?H))))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0 (insert (?A AND ?Ba) ?H)))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 9),
                  template_app
                   (template_app (template_hole 1, template_var 8),
                    template_app
                     (template_app (template_hole 1, template_var 7),
                      template_app
                       (template_app (template_hole 1, template_var 6),
                        template_app
                         (template_app (template_hole 1, template_var 5),
                          template_app
                           (template_app (template_hole 1, template_var 4),
                            template_app
                             (template_app
                               (template_hole 1, template_var 3),
                              template_app
                               (template_app
                                 (template_hole 1, template_var 2),
                                template_var 1))))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 7),
                 template_app
                  (template_app (template_hole 1, template_var 6),
                   template_app
                    (template_app (template_hole 1, template_var 5),
                     template_app
                      (template_app (template_hole 1, template_var 4),
                       template_app
                        (template_app (template_hole 1, template_var 3),
                         template_app
                          (template_app (template_hole 1, template_var 2),
                           template_app
                            (template_app
                              (template_hole 1,
                               template_app
                                (template_app
                                  (template_hole 0, template_var 9),
                                 template_var 8)),
                             template_var 1)))))))),
             template_var 0)
           ))),
    ("SyntaxN.rotate8",
     "insert ?A8.0
       (insert ?A1.0
         (insert ?A2.0
           (insert ?A3.0
             (insert ?A4.0
               (insert ?A5.0
                 (insert ?A6.0 (insert ?A7.0 ?H))))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0 (insert ?A8.0 ?H))))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 9),
                  template_app
                   (template_app (template_hole 0, template_var 8),
                    template_app
                     (template_app (template_hole 0, template_var 7),
                      template_app
                       (template_app (template_hole 0, template_var 6),
                        template_app
                         (template_app (template_hole 0, template_var 5),
                          template_app
                           (template_app (template_hole 0, template_var 4),
                            template_app
                             (template_app
                               (template_hole 0, template_var 3),
                              template_app
                               (template_app
                                 (template_hole 0, template_var 2),
                                template_var 1))))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 8),
                 template_app
                  (template_app (template_hole 0, template_var 7),
                   template_app
                    (template_app (template_hole 0, template_var 6),
                     template_app
                      (template_app (template_hole 0, template_var 5),
                       template_app
                        (template_app (template_hole 0, template_var 4),
                         template_app
                          (template_app (template_hole 0, template_var 3),
                           template_app
                            (template_app (template_hole 0, template_var 2),
                             template_app
                              (template_app
                                (template_hole 0, template_var 9),
                               template_var 1))))))))),
             template_var 0)
           ))),
    ("SyntaxN.Ex_EH",
     "[| insert ?A (insert ?A1.0 (insert ?A2.0 ?H)) \<turnstile> ?B;
         atom ?i \<sharp> ?B;
         ALL C:insert ?A1.0 (insert ?A2.0 ?H). atom ?i \<sharp> C |]
      ==> insert ?A1.0
           (insert ?A2.0 (insert (SyntaxN.Ex ?i ?A) ?H)) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 5),
                  template_app
                   (template_app (template_hole 4, template_var 4),
                    template_app
                     (template_app (template_hole 4, template_var 3),
                      template_var 2)))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app (template_hole 4, template_var 3),
                    template_var 2))),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 0, template_var 0),
                         template_var 5)),
                     template_var 2)))),
             template_var 1)
           ))),
    ("SyntaxN.All2_E'",
     "[| ?H \<turnstile> All2 ?i ?t ?A; ?H \<turnstile> ?x IN ?t;
         insert (?A(?i::=?x)) ?H \<turnstile> ?B; atom ?i \<sharp> ?t |]
      ==> ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 5),
              template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 4),
                  template_app
                   (template_hole 8,
                    template_app
                     (template_app
                       (template_hole 6,
                        template_app
                         (template_hole 8,
                          template_app
                           (template_app
                             (template_hole 5,
                              template_app
                               (template_hole 4, template_var 4)),
                            template_var 3))),
                      template_var 2)))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 5),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app
                       (template_app (template_hole 2, template_var 2),
                        template_var 4),
                      template_var 1)),
                  template_var 5)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 4)),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 9, template_var 5), template_var 0)
           ))),
    ("SyntaxN.All2_SUCC_I",
     "[| atom ?i \<sharp> ?t; ?H \<turnstile> All2 ?i ?t ?A;
         ?H \<turnstile> ?A(?i::=?t) |]
      ==> ?H \<turnstile> All2 ?i (SUCC ?t) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_app
                   (template_hole 6,
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_hole 6,
                          template_app
                           (template_app
                             (template_hole 3,
                              template_app
                               (template_hole 2, template_var 3)),
                            template_var 2))),
                      template_var 0)))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 3),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 1),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 3),
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_hole 6,
                         template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_hole 2, template_var 3)),
                           template_app
                            (template_hole 0, template_var 2)))),
                     template_var 0)))))
           ))),
    ("SyntaxN.Disj_IE1H",
     "insert ?B
       (insert ?A1.0
         (insert ?A2.0
           (insert ?A3.0
             (insert ?A4.0
               (insert ?A5.0
                 (insert ?A6.0 (insert ?A7.0 ?H))))))) \<turnstile>
      ?C ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0 (insert (?A OR ?B) ?H))))))) \<turnstile>
      ?A OR ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 10),
                  template_app
                   (template_app (template_hole 1, template_var 9),
                    template_app
                     (template_app (template_hole 1, template_var 8),
                      template_app
                       (template_app (template_hole 1, template_var 7),
                        template_app
                         (template_app (template_hole 1, template_var 6),
                          template_app
                           (template_app (template_hole 1, template_var 5),
                            template_app
                             (template_app
                               (template_hole 1, template_var 4),
                              template_app
                               (template_app
                                 (template_hole 1, template_var 3),
                                template_var 2))))))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 9),
                 template_app
                  (template_app (template_hole 1, template_var 8),
                   template_app
                    (template_app (template_hole 1, template_var 7),
                     template_app
                      (template_app (template_hole 1, template_var 6),
                       template_app
                        (template_app (template_hole 1, template_var 5),
                         template_app
                          (template_app (template_hole 1, template_var 4),
                           template_app
                            (template_app (template_hole 1, template_var 3),
                             template_app
                              (template_app
                                (template_hole 1,
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 0),
                                   template_var 10)),
                               template_var 2))))))))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("SyntaxN.Conj_EH",
     "insert ?A
       (insert ?Ba
         (insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0 (insert ?A7.0 ?H)))))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0 (insert (?A AND ?Ba) ?H))))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 10),
                  template_app
                   (template_app (template_hole 1, template_var 9),
                    template_app
                     (template_app (template_hole 1, template_var 8),
                      template_app
                       (template_app (template_hole 1, template_var 7),
                        template_app
                         (template_app (template_hole 1, template_var 6),
                          template_app
                           (template_app (template_hole 1, template_var 5),
                            template_app
                             (template_app
                               (template_hole 1, template_var 4),
                              template_app
                               (template_app
                                 (template_hole 1, template_var 3),
                                template_app
                                 (template_app
                                   (template_hole 1, template_var 2),
                                  template_var 1)))))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 8),
                 template_app
                  (template_app (template_hole 1, template_var 7),
                   template_app
                    (template_app (template_hole 1, template_var 6),
                     template_app
                      (template_app (template_hole 1, template_var 5),
                       template_app
                        (template_app (template_hole 1, template_var 4),
                         template_app
                          (template_app (template_hole 1, template_var 3),
                           template_app
                            (template_app (template_hole 1, template_var 2),
                             template_app
                              (template_app
                                (template_hole 1,
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 10),
                                   template_var 9)),
                               template_var 1))))))))),
             template_var 0)
           ))),
    ("SyntaxN.rotate9",
     "insert ?A9.0
       (insert ?A1.0
         (insert ?A2.0
           (insert ?A3.0
             (insert ?A4.0
               (insert ?A5.0
                 (insert ?A6.0
                   (insert ?A7.0 (insert ?A8.0 ?H)))))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert ?A8.0 (insert ?A9.0 ?H)))))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 10),
                  template_app
                   (template_app (template_hole 0, template_var 9),
                    template_app
                     (template_app (template_hole 0, template_var 8),
                      template_app
                       (template_app (template_hole 0, template_var 7),
                        template_app
                         (template_app (template_hole 0, template_var 6),
                          template_app
                           (template_app (template_hole 0, template_var 5),
                            template_app
                             (template_app
                               (template_hole 0, template_var 4),
                              template_app
                               (template_app
                                 (template_hole 0, template_var 3),
                                template_app
                                 (template_app
                                   (template_hole 0, template_var 2),
                                  template_var 1)))))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 9),
                 template_app
                  (template_app (template_hole 0, template_var 8),
                   template_app
                    (template_app (template_hole 0, template_var 7),
                     template_app
                      (template_app (template_hole 0, template_var 6),
                       template_app
                        (template_app (template_hole 0, template_var 5),
                         template_app
                          (template_app (template_hole 0, template_var 4),
                           template_app
                            (template_app (template_hole 0, template_var 3),
                             template_app
                              (template_app
                                (template_hole 0, template_var 2),
                               template_app
                                (template_app
                                  (template_hole 0, template_var 10),
                                 template_var 1)))))))))),
             template_var 0)
           ))),
    ("SyntaxN.All2_SUCC_E",
     "[| atom ?i \<sharp> ?t;
         insert (All2 ?i ?t ?A) (insert (?A(?i::=?t)) ?H) \<turnstile> ?B |]
      ==> insert (All2 ?i (SUCC ?t) ?A) ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 4),
                        template_app
                         (template_hole 6,
                          template_app
                           (template_app
                             (template_hole 4,
                              template_app
                               (template_hole 6,
                                template_app
                                 (template_app
                                   (template_hole 3,
                                    template_app
                                     (template_hole 2, template_var 4)),
                                  template_var 3))),
                            template_var 2))))),
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app
                         (template_app (template_hole 1, template_var 2),
                          template_var 4),
                        template_var 3)),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 4),
                       template_app
                        (template_hole 6,
                         template_app
                          (template_app
                            (template_hole 4,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_app
                                  (template_hole 3,
                                   template_app
                                    (template_hole 2, template_var 4)),
                                 template_app
                                  (template_hole 0, template_var 3)))),
                           template_var 2))))),
                 template_var 1)),
             template_var 0)
           ))),
    ("SyntaxN.All2_Eats_E1",
     "[| atom ?i \<sharp> (?t, ?u); ALL C:?H. atom ?i \<sharp> C |]
      ==> insert (All2 ?i (Eats ?t ?u) ?A) ?H \<turnstile> All2 ?i ?t ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 4)),
              template_app
               (template_app (template_hole 10, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 4),
                       template_app
                        (template_hole 5,
                         template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_app
                                  (template_hole 2,
                                   template_app
                                    (template_hole 1, template_var 4)),
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 3),
                                   template_var 2)))),
                           template_var 0))))),
                 template_var 1)),
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_app
                            (template_hole 2,
                             template_app
                              (template_hole 1, template_var 4)),
                           template_var 3))),
                     template_var 0)))))
           ))),
    ("SyntaxN.Mem_SUCC_EH",
     "[| insert (?u IN ?t)
          (insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H))) \<turnstile>
         ?B;
         insert (?u EQ ?t)
          (insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H))) \<turnstile>
         ?B |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0 (insert (?u IN SUCC ?t) ?H))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 6),
                      template_var 5)),
                  template_app
                   (template_app (template_hole 3, template_var 4),
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_app
                       (template_app (template_hole 3, template_var 2),
                        template_var 1))))),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 1, template_var 6),
                      template_var 5)),
                  template_app
                   (template_app (template_hole 3, template_var 4),
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_app
                       (template_app (template_hole 3, template_var 2),
                        template_var 1))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 2, template_var 6),
                           template_app (template_hole 0, template_var 5))),
                       template_var 1))))),
             template_var 0)
           ))),
    ("SyntaxN.Disj_EH",
     "[| insert ?A
          (insert ?A1.0
            (insert ?A2.0 (insert ?A3.0 (insert ?A4.0 ?H)))) \<turnstile>
         ?B;
         insert ?Ba
          (insert ?A1.0
            (insert ?A2.0 (insert ?A3.0 (insert ?A4.0 ?H)))) \<turnstile>
         ?B |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0 (insert (?A OR ?Ba) ?H)))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 7),
                  template_app
                   (template_app (template_hole 1, template_var 6),
                    template_app
                     (template_app (template_hole 1, template_var 5),
                      template_app
                       (template_app (template_hole 1, template_var 4),
                        template_app
                         (template_app (template_hole 1, template_var 3),
                          template_var 2)))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app (template_hole 1, template_var 6),
                    template_app
                     (template_app (template_hole 1, template_var 5),
                      template_app
                       (template_app (template_hole 1, template_var 4),
                        template_app
                         (template_app (template_hole 1, template_var 3),
                          template_var 2)))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 6),
                 template_app
                  (template_app (template_hole 1, template_var 5),
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     template_app
                      (template_app (template_hole 1, template_var 3),
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app (template_hole 0, template_var 7),
                             template_var 0)),
                         template_var 2)))))),
             template_var 1)
           ))),
    ("SyntaxN.Mem_Eats_EH",
     "[| insert (?u IN ?t)
          (insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H))) \<turnstile>
         ?B;
         insert (?u EQ ?z)
          (insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H))) \<turnstile>
         ?B |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0 (insert (?u IN Eats ?t ?z) ?H))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 7),
                      template_var 6)),
                  template_app
                   (template_app (template_hole 3, template_var 5),
                    template_app
                     (template_app (template_hole 3, template_var 4),
                      template_app
                       (template_app (template_hole 3, template_var 3),
                        template_var 2))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 1, template_var 7),
                      template_var 0)),
                  template_app
                   (template_app (template_hole 3, template_var 5),
                    template_app
                     (template_app (template_hole 3, template_var 4),
                      template_app
                       (template_app (template_hole 3, template_var 3),
                        template_var 2))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 5),
                 template_app
                  (template_app (template_hole 3, template_var 4),
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 2, template_var 7),
                           template_app
                            (template_app (template_hole 0, template_var 6),
                             template_var 0))),
                       template_var 2))))),
             template_var 1)
           ))),
    ("SyntaxN.All2_Eats_I",
     "[| atom ?i \<sharp> (?t, ?u); ?H \<turnstile> All2 ?i ?t ?A;
         ?H \<turnstile> ?A(?i::=?u) |]
      ==> ?H \<turnstile> All2 ?i (Eats ?t ?u) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 4)),
              template_app
               (template_app (template_hole 8, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_app
                   (template_hole 6,
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_hole 6,
                          template_app
                           (template_app
                             (template_hole 3,
                              template_app
                               (template_hole 2, template_var 4)),
                            template_var 3))),
                      template_var 0)))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 4),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 1),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 4),
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_hole 6,
                         template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_hole 2, template_var 4)),
                           template_app
                            (template_app (template_hole 0, template_var 3),
                             template_var 2)))),
                     template_var 0)))))
           ))),
    ("SyntaxN.All2_Eats_E",
     "[| atom ?i \<sharp> (?t, ?u);
         insert (All2 ?i ?t ?A) (insert (?A(?i::=?u)) ?H) \<turnstile> ?B |]
      ==> insert (All2 ?i (Eats ?t ?u) ?A) ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 5)),
              template_app
               (template_app (template_hole 9, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 5),
                        template_app
                         (template_hole 6,
                          template_app
                           (template_app
                             (template_hole 4,
                              template_app
                               (template_hole 6,
                                template_app
                                 (template_app
                                   (template_hole 3,
                                    template_app
                                     (template_hole 2, template_var 5)),
                                  template_var 4))),
                            template_var 2))))),
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app
                         (template_app (template_hole 1, template_var 2),
                          template_var 5),
                        template_var 3)),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 5),
                       template_app
                        (template_hole 6,
                         template_app
                          (template_app
                            (template_hole 4,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_app
                                  (template_hole 3,
                                   template_app
                                    (template_hole 2, template_var 5)),
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 4),
                                   template_var 3)))),
                           template_var 2))))),
                 template_var 1)),
             template_var 0)
           ))),
    ("SyntaxN.Ex_EH",
     "[| insert ?A
          (insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H))) \<turnstile>
         ?B;
         atom ?i \<sharp> ?B;
         ALL C:insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H)).
            atom ?i \<sharp> C |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0 (insert (SyntaxN.Ex ?i ?A) ?H))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 6),
                  template_app
                   (template_app (template_hole 4, template_var 5),
                    template_app
                     (template_app (template_hole 4, template_var 4),
                      template_app
                       (template_app (template_hole 4, template_var 3),
                        template_var 2))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 4, template_var 5),
                  template_app
                   (template_app (template_hole 4, template_var 4),
                    template_app
                     (template_app (template_hole 4, template_var 3),
                      template_var 2)))),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 5),
                 template_app
                  (template_app (template_hole 4, template_var 4),
                   template_app
                    (template_app (template_hole 4, template_var 3),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 0, template_var 0),
                           template_var 6)),
                       template_var 2))))),
             template_var 1)
           ))),
    ("SyntaxN.Conj_EH",
     "insert ?A
       (insert ?Ba
         (insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0
                     (insert ?A7.0 (insert ?A8.0 ?H))))))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert ?A8.0
                     (insert (?A AND ?Ba) ?H)))))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 11),
                  template_app
                   (template_app (template_hole 1, template_var 10),
                    template_app
                     (template_app (template_hole 1, template_var 9),
                      template_app
                       (template_app (template_hole 1, template_var 8),
                        template_app
                         (template_app (template_hole 1, template_var 7),
                          template_app
                           (template_app (template_hole 1, template_var 6),
                            template_app
                             (template_app
                               (template_hole 1, template_var 5),
                              template_app
                               (template_app
                                 (template_hole 1, template_var 4),
                                template_app
                                 (template_app
                                   (template_hole 1, template_var 3),
                                  template_app
                                   (template_app
                                     (template_hole 1, template_var 2),
                                    template_var 1))))))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 9),
                 template_app
                  (template_app (template_hole 1, template_var 8),
                   template_app
                    (template_app (template_hole 1, template_var 7),
                     template_app
                      (template_app (template_hole 1, template_var 6),
                       template_app
                        (template_app (template_hole 1, template_var 5),
                         template_app
                          (template_app (template_hole 1, template_var 4),
                           template_app
                            (template_app (template_hole 1, template_var 3),
                             template_app
                              (template_app
                                (template_hole 1, template_var 2),
                               template_app
                                (template_app
                                  (template_hole 1,
                                   template_app
                                    (template_app
(template_hole 0, template_var 11),
                                     template_var 10)),
                                 template_var 1)))))))))),
             template_var 0)
           ))),
    ("SyntaxN.rotate10",
     "insert ?A10.0
       (insert ?A1.0
         (insert ?A2.0
           (insert ?A3.0
             (insert ?A4.0
               (insert ?A5.0
                 (insert ?A6.0
                   (insert ?A7.0
                     (insert ?A8.0 (insert ?A9.0 ?H))))))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert ?A8.0
                     (insert ?A9.0 (insert ?A10.0 ?H))))))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 11),
                  template_app
                   (template_app (template_hole 0, template_var 10),
                    template_app
                     (template_app (template_hole 0, template_var 9),
                      template_app
                       (template_app (template_hole 0, template_var 8),
                        template_app
                         (template_app (template_hole 0, template_var 7),
                          template_app
                           (template_app (template_hole 0, template_var 6),
                            template_app
                             (template_app
                               (template_hole 0, template_var 5),
                              template_app
                               (template_app
                                 (template_hole 0, template_var 4),
                                template_app
                                 (template_app
                                   (template_hole 0, template_var 3),
                                  template_app
                                   (template_app
                                     (template_hole 0, template_var 2),
                                    template_var 1))))))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 10),
                 template_app
                  (template_app (template_hole 0, template_var 9),
                   template_app
                    (template_app (template_hole 0, template_var 8),
                     template_app
                      (template_app (template_hole 0, template_var 7),
                       template_app
                        (template_app (template_hole 0, template_var 6),
                         template_app
                          (template_app (template_hole 0, template_var 5),
                           template_app
                            (template_app (template_hole 0, template_var 4),
                             template_app
                              (template_app
                                (template_hole 0, template_var 3),
                               template_app
                                (template_app
                                  (template_hole 0, template_var 2),
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 11),
                                   template_var 1))))))))))),
             template_var 0)
           ))),
    ("SyntaxN.All2_cong",
     "[| ?H \<turnstile> ?t EQ ?t'; ?H \<turnstile> ?A IFF ?A';
         ALL C:?H. atom ?i \<sharp> C |]
      ==> ?H \<turnstile> All2 ?i ?t ?A IFF All2 ?i ?t' ?A'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 5),
              template_app
               (template_app (template_hole 9, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 5),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 5), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 10, template_var 5),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_app
                      (template_hole 4,
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app
                            (template_hole 4,
                             template_app
                              (template_app
                                (template_hole 1,
                                 template_app
                                  (template_hole 0, template_var 0)),
                               template_var 4))),
                         template_var 2))))),
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_hole 4,
                           template_app
                            (template_app
                              (template_hole 1,
                               template_app
                                (template_hole 0, template_var 0)),
                             template_var 3))),
                       template_var 1))))))
           ))),
    ("SyntaxN.Ind",
     "[| atom ?j \<sharp> (?i, ?A); ?H \<turnstile> ?A(?i::=Zero);
         ?H \<turnstile>
         SyntaxN.All ?i
          (SyntaxN.All ?j
            (?A IMP ?A(?i::=Var ?j) IMP ?A(?i::=Eats (Var ?i) (Var ?j)))) |]
      ==> ?H \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 3)),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 2),
                template_hole 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app
                   (template_hole 4,
                    template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 3),
                        template_app
                         (template_hole 4,
                          template_app
                           (template_app
                             (template_hole 2,
                              template_app
                               (template_hole 4, template_var 1)),
                            template_app
                             (template_app
                               (template_hole 2,
                                template_app
                                 (template_hole 4,
                                  template_app
                                   (template_app
                                     (template_app
 (template_hole 6, template_var 1),
template_var 2),
                                    template_app
                                     (template_hole 1, template_var 3)))),
                              template_app
                               (template_app
                                 (template_app
                                   (template_hole 6, template_var 1),
                                  template_var 2),
                                template_app
                                 (template_app
                                   (template_hole 0,
                                    template_app
                                     (template_hole 1, template_var 2)),
                                  template_app
                                   (template_hole 1,
                                    template_var 3))))))))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 0), template_var 1)
           ))),
    ("SyntaxN.Mem_SUCC_EH",
     "[| insert (?u IN ?t)
          (insert ?A1.0
            (insert ?A2.0 (insert ?A3.0 (insert ?A4.0 ?H)))) \<turnstile>
         ?B;
         insert (?u EQ ?t)
          (insert ?A1.0
            (insert ?A2.0 (insert ?A3.0 (insert ?A4.0 ?H)))) \<turnstile>
         ?B |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0 (insert (?u IN SUCC ?t) ?H)))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 7),
                      template_var 6)),
                  template_app
                   (template_app (template_hole 3, template_var 5),
                    template_app
                     (template_app (template_hole 3, template_var 4),
                      template_app
                       (template_app (template_hole 3, template_var 3),
                        template_app
                         (template_app (template_hole 3, template_var 2),
                          template_var 1)))))),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 1, template_var 7),
                      template_var 6)),
                  template_app
                   (template_app (template_hole 3, template_var 5),
                    template_app
                     (template_app (template_hole 3, template_var 4),
                      template_app
                       (template_app (template_hole 3, template_var 3),
                        template_app
                         (template_app (template_hole 3, template_var 2),
                          template_var 1)))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 5),
                 template_app
                  (template_app (template_hole 3, template_var 4),
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_app
                      (template_app (template_hole 3, template_var 2),
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app
                            (template_app (template_hole 2, template_var 7),
                             template_app
                              (template_hole 0, template_var 6))),
                         template_var 1)))))),
             template_var 0)
           ))),
    ("SyntaxN.Disj_EH",
     "[| insert ?A
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0 (insert ?A4.0 (insert ?A5.0 ?H))))) \<turnstile>
         ?B;
         insert ?Ba
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0 (insert ?A4.0 (insert ?A5.0 ?H))))) \<turnstile>
         ?B |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0 (insert (?A OR ?Ba) ?H))))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 8),
                  template_app
                   (template_app (template_hole 1, template_var 7),
                    template_app
                     (template_app (template_hole 1, template_var 6),
                      template_app
                       (template_app (template_hole 1, template_var 5),
                        template_app
                         (template_app (template_hole 1, template_var 4),
                          template_app
                           (template_app (template_hole 1, template_var 3),
                            template_var 2))))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app (template_hole 1, template_var 7),
                    template_app
                     (template_app (template_hole 1, template_var 6),
                      template_app
                       (template_app (template_hole 1, template_var 5),
                        template_app
                         (template_app (template_hole 1, template_var 4),
                          template_app
                           (template_app (template_hole 1, template_var 3),
                            template_var 2))))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 7),
                 template_app
                  (template_app (template_hole 1, template_var 6),
                   template_app
                    (template_app (template_hole 1, template_var 5),
                     template_app
                      (template_app (template_hole 1, template_var 4),
                       template_app
                        (template_app (template_hole 1, template_var 3),
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 0, template_var 8),
                               template_var 0)),
                           template_var 2))))))),
             template_var 1)
           ))),
    ("SyntaxN.Mem_Eats_EH",
     "[| insert (?u IN ?t)
          (insert ?A1.0
            (insert ?A2.0 (insert ?A3.0 (insert ?A4.0 ?H)))) \<turnstile>
         ?B;
         insert (?u EQ ?z)
          (insert ?A1.0
            (insert ?A2.0 (insert ?A3.0 (insert ?A4.0 ?H)))) \<turnstile>
         ?B |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0 (insert (?u IN Eats ?t ?z) ?H)))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 8),
                      template_var 7)),
                  template_app
                   (template_app (template_hole 3, template_var 6),
                    template_app
                     (template_app (template_hole 3, template_var 5),
                      template_app
                       (template_app (template_hole 3, template_var 4),
                        template_app
                         (template_app (template_hole 3, template_var 3),
                          template_var 2)))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 1, template_var 8),
                      template_var 0)),
                  template_app
                   (template_app (template_hole 3, template_var 6),
                    template_app
                     (template_app (template_hole 3, template_var 5),
                      template_app
                       (template_app (template_hole 3, template_var 4),
                        template_app
                         (template_app (template_hole 3, template_var 3),
                          template_var 2)))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 6),
                 template_app
                  (template_app (template_hole 3, template_var 5),
                   template_app
                    (template_app (template_hole 3, template_var 4),
                     template_app
                      (template_app (template_hole 3, template_var 3),
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app
                            (template_app (template_hole 2, template_var 8),
                             template_app
                              (template_app
                                (template_hole 0, template_var 7),
                               template_var 0))),
                         template_var 2)))))),
             template_var 1)
           ))),
    ("SyntaxN.Conj_EH",
     "insert ?A
       (insert ?Ba
         (insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0
                     (insert ?A7.0
                       (insert ?A8.0 (insert ?A9.0 ?H)))))))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert ?A8.0
                     (insert ?A9.0
                       (insert (?A AND ?Ba) ?H))))))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 12),
                  template_app
                   (template_app (template_hole 1, template_var 11),
                    template_app
                     (template_app (template_hole 1, template_var 10),
                      template_app
                       (template_app (template_hole 1, template_var 9),
                        template_app
                         (template_app (template_hole 1, template_var 8),
                          template_app
                           (template_app (template_hole 1, template_var 7),
                            template_app
                             (template_app
                               (template_hole 1, template_var 6),
                              template_app
                               (template_app
                                 (template_hole 1, template_var 5),
                                template_app
                                 (template_app
                                   (template_hole 1, template_var 4),
                                  template_app
                                   (template_app
                                     (template_hole 1, template_var 3),
                                    template_app
                                     (template_app
 (template_hole 1, template_var 2),
template_var 1)))))))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 10),
                 template_app
                  (template_app (template_hole 1, template_var 9),
                   template_app
                    (template_app (template_hole 1, template_var 8),
                     template_app
                      (template_app (template_hole 1, template_var 7),
                       template_app
                        (template_app (template_hole 1, template_var 6),
                         template_app
                          (template_app (template_hole 1, template_var 5),
                           template_app
                            (template_app (template_hole 1, template_var 4),
                             template_app
                              (template_app
                                (template_hole 1, template_var 3),
                               template_app
                                (template_app
                                  (template_hole 1, template_var 2),
                                 template_app
                                  (template_app
                                    (template_hole 1,
                                     template_app
(template_app (template_hole 0, template_var 12), template_var 11)),
                                   template_var 1))))))))))),
             template_var 0)
           ))),
    ("SyntaxN.rotate11",
     "insert ?A11.0
       (insert ?A1.0
         (insert ?A2.0
           (insert ?A3.0
             (insert ?A4.0
               (insert ?A5.0
                 (insert ?A6.0
                   (insert ?A7.0
                     (insert ?A8.0
                       (insert ?A9.0
                         (insert ?A10.0 ?H)))))))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert ?A8.0
                     (insert ?A9.0
                       (insert ?A10.0
                         (insert ?A11.0 ?H)))))))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 12),
                  template_app
                   (template_app (template_hole 0, template_var 11),
                    template_app
                     (template_app (template_hole 0, template_var 10),
                      template_app
                       (template_app (template_hole 0, template_var 9),
                        template_app
                         (template_app (template_hole 0, template_var 8),
                          template_app
                           (template_app (template_hole 0, template_var 7),
                            template_app
                             (template_app
                               (template_hole 0, template_var 6),
                              template_app
                               (template_app
                                 (template_hole 0, template_var 5),
                                template_app
                                 (template_app
                                   (template_hole 0, template_var 4),
                                  template_app
                                   (template_app
                                     (template_hole 0, template_var 3),
                                    template_app
                                     (template_app
 (template_hole 0, template_var 2),
template_var 1)))))))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 11),
                 template_app
                  (template_app (template_hole 0, template_var 10),
                   template_app
                    (template_app (template_hole 0, template_var 9),
                     template_app
                      (template_app (template_hole 0, template_var 8),
                       template_app
                        (template_app (template_hole 0, template_var 7),
                         template_app
                          (template_app (template_hole 0, template_var 6),
                           template_app
                            (template_app (template_hole 0, template_var 5),
                             template_app
                              (template_app
                                (template_hole 0, template_var 4),
                               template_app
                                (template_app
                                  (template_hole 0, template_var 3),
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 2),
                                   template_app
                                    (template_app
(template_hole 0, template_var 12),
                                     template_var 1)))))))))))),
             template_var 0)
           ))),
    ("SyntaxN.Ex_EH",
     "[| insert ?A
          (insert ?A1.0
            (insert ?A2.0 (insert ?A3.0 (insert ?A4.0 ?H)))) \<turnstile>
         ?B;
         atom ?i \<sharp> ?B;
         ALL C:insert ?A1.0 (insert ?A2.0 (insert ?A3.0 (insert ?A4.0 ?H))).
            atom ?i \<sharp> C |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0 (insert (SyntaxN.Ex ?i ?A) ?H)))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 7),
                  template_app
                   (template_app (template_hole 4, template_var 6),
                    template_app
                     (template_app (template_hole 4, template_var 5),
                      template_app
                       (template_app (template_hole 4, template_var 4),
                        template_app
                         (template_app (template_hole 4, template_var 3),
                          template_var 2)))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 4, template_var 6),
                  template_app
                   (template_app (template_hole 4, template_var 5),
                    template_app
                     (template_app (template_hole 4, template_var 4),
                      template_app
                       (template_app (template_hole 4, template_var 3),
                        template_var 2))))),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 6),
                 template_app
                  (template_app (template_hole 4, template_var 5),
                   template_app
                    (template_app (template_hole 4, template_var 4),
                     template_app
                      (template_app (template_hole 4, template_var 3),
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app
                            (template_app (template_hole 0, template_var 0),
                             template_var 7)),
                         template_var 2)))))),
             template_var 1)
           ))),
    ("SyntaxN.P2_cong",
     "[| !!i t u x.
            atom i \<sharp> ?tms ==>
            (?P t u)(i::=x) = ?P (subst i x t) (subst i x u);
         ?H \<turnstile> ?x EQ ?x'; ?H \<turnstile> ?y EQ ?y' |]
      ==> ?H \<turnstile> ?P ?x ?y IFF ?P ?x' ?y'",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_var 5, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_var 5, template_var 2),
                 template_var 0)))
           ))),
    ("SyntaxN.rotate12",
     "insert ?A12.0
       (insert ?A1.0
         (insert ?A2.0
           (insert ?A3.0
             (insert ?A4.0
               (insert ?A5.0
                 (insert ?A6.0
                   (insert ?A7.0
                     (insert ?A8.0
                       (insert ?A9.0
                         (insert ?A10.0
                           (insert ?A11.0 ?H))))))))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert ?A8.0
                     (insert ?A9.0
                       (insert ?A10.0
                         (insert ?A11.0
                           (insert ?A12.0 ?H))))))))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 13),
                  template_app
                   (template_app (template_hole 0, template_var 12),
                    template_app
                     (template_app (template_hole 0, template_var 11),
                      template_app
                       (template_app (template_hole 0, template_var 10),
                        template_app
                         (template_app (template_hole 0, template_var 9),
                          template_app
                           (template_app (template_hole 0, template_var 8),
                            template_app
                             (template_app
                               (template_hole 0, template_var 7),
                              template_app
                               (template_app
                                 (template_hole 0, template_var 6),
                                template_app
                                 (template_app
                                   (template_hole 0, template_var 5),
                                  template_app
                                   (template_app
                                     (template_hole 0, template_var 4),
                                    template_app
                                     (template_app
 (template_hole 0, template_var 3),
template_app
 (template_app (template_hole 0, template_var 2),
  template_var 1))))))))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 12),
                 template_app
                  (template_app (template_hole 0, template_var 11),
                   template_app
                    (template_app (template_hole 0, template_var 10),
                     template_app
                      (template_app (template_hole 0, template_var 9),
                       template_app
                        (template_app (template_hole 0, template_var 8),
                         template_app
                          (template_app (template_hole 0, template_var 7),
                           template_app
                            (template_app (template_hole 0, template_var 6),
                             template_app
                              (template_app
                                (template_hole 0, template_var 5),
                               template_app
                                (template_app
                                  (template_hole 0, template_var 4),
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 3),
                                   template_app
                                    (template_app
(template_hole 0, template_var 2),
                                     template_app
(template_app (template_hole 0, template_var 13),
 template_var 1))))))))))))),
             template_var 0)
           ))),
    ("SyntaxN.Mem_SUCC_EH",
     "[| insert (?u IN ?t)
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0 (insert ?A4.0 (insert ?A5.0 ?H))))) \<turnstile>
         ?B;
         insert (?u EQ ?t)
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0 (insert ?A4.0 (insert ?A5.0 ?H))))) \<turnstile>
         ?B |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0 (insert (?u IN SUCC ?t) ?H))))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 8),
                      template_var 7)),
                  template_app
                   (template_app (template_hole 3, template_var 6),
                    template_app
                     (template_app (template_hole 3, template_var 5),
                      template_app
                       (template_app (template_hole 3, template_var 4),
                        template_app
                         (template_app (template_hole 3, template_var 3),
                          template_app
                           (template_app (template_hole 3, template_var 2),
                            template_var 1))))))),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 1, template_var 8),
                      template_var 7)),
                  template_app
                   (template_app (template_hole 3, template_var 6),
                    template_app
                     (template_app (template_hole 3, template_var 5),
                      template_app
                       (template_app (template_hole 3, template_var 4),
                        template_app
                         (template_app (template_hole 3, template_var 3),
                          template_app
                           (template_app (template_hole 3, template_var 2),
                            template_var 1))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 6),
                 template_app
                  (template_app (template_hole 3, template_var 5),
                   template_app
                    (template_app (template_hole 3, template_var 4),
                     template_app
                      (template_app (template_hole 3, template_var 3),
                       template_app
                        (template_app (template_hole 3, template_var 2),
                         template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_app
                                (template_hole 2, template_var 8),
                               template_app
                                (template_hole 0, template_var 7))),
                           template_var 1))))))),
             template_var 0)
           ))),
    ("SyntaxN.Disj_EH",
     "[| insert ?A
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0 (insert ?A6.0 ?H)))))) \<turnstile>
         ?B;
         insert ?Ba
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0 (insert ?A6.0 ?H)))))) \<turnstile>
         ?B |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0 (insert (?A OR ?Ba) ?H)))))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 9),
                  template_app
                   (template_app (template_hole 1, template_var 8),
                    template_app
                     (template_app (template_hole 1, template_var 7),
                      template_app
                       (template_app (template_hole 1, template_var 6),
                        template_app
                         (template_app (template_hole 1, template_var 5),
                          template_app
                           (template_app (template_hole 1, template_var 4),
                            template_app
                             (template_app
                               (template_hole 1, template_var 3),
                              template_var 2)))))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app (template_hole 1, template_var 8),
                    template_app
                     (template_app (template_hole 1, template_var 7),
                      template_app
                       (template_app (template_hole 1, template_var 6),
                        template_app
                         (template_app (template_hole 1, template_var 5),
                          template_app
                           (template_app (template_hole 1, template_var 4),
                            template_app
                             (template_app
                               (template_hole 1, template_var 3),
                              template_var 2)))))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 8),
                 template_app
                  (template_app (template_hole 1, template_var 7),
                   template_app
                    (template_app (template_hole 1, template_var 6),
                     template_app
                      (template_app (template_hole 1, template_var 5),
                       template_app
                        (template_app (template_hole 1, template_var 4),
                         template_app
                          (template_app (template_hole 1, template_var 3),
                           template_app
                            (template_app
                              (template_hole 1,
                               template_app
                                (template_app
                                  (template_hole 0, template_var 9),
                                 template_var 0)),
                             template_var 2)))))))),
             template_var 1)
           ))),
    ("SyntaxN.Mem_Eats_EH",
     "[| insert (?u IN ?t)
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0 (insert ?A4.0 (insert ?A5.0 ?H))))) \<turnstile>
         ?B;
         insert (?u EQ ?z)
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0 (insert ?A4.0 (insert ?A5.0 ?H))))) \<turnstile>
         ?B |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert (?u IN Eats ?t ?z) ?H))))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 9),
                      template_var 8)),
                  template_app
                   (template_app (template_hole 3, template_var 7),
                    template_app
                     (template_app (template_hole 3, template_var 6),
                      template_app
                       (template_app (template_hole 3, template_var 5),
                        template_app
                         (template_app (template_hole 3, template_var 4),
                          template_app
                           (template_app (template_hole 3, template_var 3),
                            template_var 2))))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 1, template_var 9),
                      template_var 0)),
                  template_app
                   (template_app (template_hole 3, template_var 7),
                    template_app
                     (template_app (template_hole 3, template_var 6),
                      template_app
                       (template_app (template_hole 3, template_var 5),
                        template_app
                         (template_app (template_hole 3, template_var 4),
                          template_app
                           (template_app (template_hole 3, template_var 3),
                            template_var 2))))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 7),
                 template_app
                  (template_app (template_hole 3, template_var 6),
                   template_app
                    (template_app (template_hole 3, template_var 5),
                     template_app
                      (template_app (template_hole 3, template_var 4),
                       template_app
                        (template_app (template_hole 3, template_var 3),
                         template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_app
                                (template_hole 2, template_var 9),
                               template_app
                                (template_app
                                  (template_hole 0, template_var 8),
                                 template_var 0))),
                           template_var 2))))))),
             template_var 1)
           ))),
    ("SyntaxN.Ex_EH",
     "[| insert ?A
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0 (insert ?A4.0 (insert ?A5.0 ?H))))) \<turnstile>
         ?B;
         atom ?i \<sharp> ?B;
         ALL C:insert ?A1.0
                (insert ?A2.0
                  (insert ?A3.0 (insert ?A4.0 (insert ?A5.0 ?H)))).
            atom ?i \<sharp> C |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert (SyntaxN.Ex ?i ?A) ?H))))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 8),
                  template_app
                   (template_app (template_hole 4, template_var 7),
                    template_app
                     (template_app (template_hole 4, template_var 6),
                      template_app
                       (template_app (template_hole 4, template_var 5),
                        template_app
                         (template_app (template_hole 4, template_var 4),
                          template_app
                           (template_app (template_hole 4, template_var 3),
                            template_var 2))))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 4, template_var 7),
                  template_app
                   (template_app (template_hole 4, template_var 6),
                    template_app
                     (template_app (template_hole 4, template_var 5),
                      template_app
                       (template_app (template_hole 4, template_var 4),
                        template_app
                         (template_app (template_hole 4, template_var 3),
                          template_var 2)))))),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 7),
                 template_app
                  (template_app (template_hole 4, template_var 6),
                   template_app
                    (template_app (template_hole 4, template_var 5),
                     template_app
                      (template_app (template_hole 4, template_var 4),
                       template_app
                        (template_app (template_hole 4, template_var 3),
                         template_app
                          (template_app
                            (template_hole 4,
                             template_app
                              (template_app
                                (template_hole 0, template_var 0),
                               template_var 8)),
                           template_var 2))))))),
             template_var 1)
           ))),
    ("SyntaxN.rotate13",
     "insert ?A13.0
       (insert ?A1.0
         (insert ?A2.0
           (insert ?A3.0
             (insert ?A4.0
               (insert ?A5.0
                 (insert ?A6.0
                   (insert ?A7.0
                     (insert ?A8.0
                       (insert ?A9.0
                         (insert ?A10.0
                           (insert ?A11.0
                             (insert ?A12.0 ?H)))))))))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert ?A8.0
                     (insert ?A9.0
                       (insert ?A10.0
                         (insert ?A11.0
                           (insert ?A12.0
                             (insert ?A13.0 ?H)))))))))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 14),
                  template_app
                   (template_app (template_hole 0, template_var 13),
                    template_app
                     (template_app (template_hole 0, template_var 12),
                      template_app
                       (template_app (template_hole 0, template_var 11),
                        template_app
                         (template_app (template_hole 0, template_var 10),
                          template_app
                           (template_app (template_hole 0, template_var 9),
                            template_app
                             (template_app
                               (template_hole 0, template_var 8),
                              template_app
                               (template_app
                                 (template_hole 0, template_var 7),
                                template_app
                                 (template_app
                                   (template_hole 0, template_var 6),
                                  template_app
                                   (template_app
                                     (template_hole 0, template_var 5),
                                    template_app
                                     (template_app
 (template_hole 0, template_var 4),
template_app
 (template_app (template_hole 0, template_var 3),
  template_app
   (template_app (template_hole 0, template_var 2),
    template_var 1)))))))))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 13),
                 template_app
                  (template_app (template_hole 0, template_var 12),
                   template_app
                    (template_app (template_hole 0, template_var 11),
                     template_app
                      (template_app (template_hole 0, template_var 10),
                       template_app
                        (template_app (template_hole 0, template_var 9),
                         template_app
                          (template_app (template_hole 0, template_var 8),
                           template_app
                            (template_app (template_hole 0, template_var 7),
                             template_app
                              (template_app
                                (template_hole 0, template_var 6),
                               template_app
                                (template_app
                                  (template_hole 0, template_var 5),
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 4),
                                   template_app
                                    (template_app
(template_hole 0, template_var 3),
                                     template_app
(template_app (template_hole 0, template_var 2),
 template_app
  (template_app (template_hole 0, template_var 14),
   template_var 1)))))))))))))),
             template_var 0)
           ))),
    ("SyntaxN.All2_SUCC_E'",
     "[| ?H \<turnstile> ?u EQ SUCC ?t; atom ?i \<sharp> ?t;
         ALL C:?H. atom ?i \<sharp> C;
         insert (All2 ?i ?t ?A) (insert (?A(?i::=?t)) ?H) \<turnstile> ?B |]
      ==> insert (All2 ?i ?u ?A) ?H \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 5),
              template_app
               (template_app (template_hole 12, template_var 4),
                template_app (template_hole 11, template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 2)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_hole 5,
                      template_app
                       (template_app (template_hole 4, template_var 2),
                        template_app
                         (template_hole 5,
                          template_app
                           (template_app
                             (template_hole 3,
                              template_app
                               (template_hole 5,
                                template_app
                                 (template_app
                                   (template_hole 2,
                                    template_app
                                     (template_hole 1, template_var 2)),
                                  template_var 3))),
                            template_var 1))))),
                  template_app
                   (template_app
                     (template_hole 6,
                      template_app
                       (template_app
                         (template_app (template_hole 0, template_var 1),
                          template_var 2),
                        template_var 3)),
                    template_var 5))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 2),
                       template_app
                        (template_hole 5,
                         template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_app
                                  (template_hole 2,
                                   template_app
                                    (template_hole 1, template_var 2)),
                                 template_var 4))),
                           template_var 1))))),
                 template_var 5)),
             template_var 0)
           ))),
    ("SyntaxN.Mem_SUCC_EH",
     "[| insert (?u IN ?t)
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0 (insert ?A6.0 ?H)))))) \<turnstile>
         ?B;
         insert (?u EQ ?t)
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0 (insert ?A6.0 ?H)))))) \<turnstile>
         ?B |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0
                     (insert (?u IN SUCC ?t) ?H)))))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 9),
                      template_var 8)),
                  template_app
                   (template_app (template_hole 3, template_var 7),
                    template_app
                     (template_app (template_hole 3, template_var 6),
                      template_app
                       (template_app (template_hole 3, template_var 5),
                        template_app
                         (template_app (template_hole 3, template_var 4),
                          template_app
                           (template_app (template_hole 3, template_var 3),
                            template_app
                             (template_app
                               (template_hole 3, template_var 2),
                              template_var 1)))))))),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 1, template_var 9),
                      template_var 8)),
                  template_app
                   (template_app (template_hole 3, template_var 7),
                    template_app
                     (template_app (template_hole 3, template_var 6),
                      template_app
                       (template_app (template_hole 3, template_var 5),
                        template_app
                         (template_app (template_hole 3, template_var 4),
                          template_app
                           (template_app (template_hole 3, template_var 3),
                            template_app
                             (template_app
                               (template_hole 3, template_var 2),
                              template_var 1)))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 7),
                 template_app
                  (template_app (template_hole 3, template_var 6),
                   template_app
                    (template_app (template_hole 3, template_var 5),
                     template_app
                      (template_app (template_hole 3, template_var 4),
                       template_app
                        (template_app (template_hole 3, template_var 3),
                         template_app
                          (template_app (template_hole 3, template_var 2),
                           template_app
                            (template_app
                              (template_hole 3,
                               template_app
                                (template_app
                                  (template_hole 2, template_var 9),
                                 template_app
                                  (template_hole 0, template_var 8))),
                             template_var 1)))))))),
             template_var 0)
           ))),
    ("SyntaxN.Disj_EH",
     "[| insert ?A
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0
                    (insert ?A6.0 (insert ?A7.0 ?H))))))) \<turnstile>
         ?B;
         insert ?Ba
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0
                    (insert ?A6.0 (insert ?A7.0 ?H))))))) \<turnstile>
         ?B |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0
                     (insert ?A7.0
                       (insert (?A OR ?Ba) ?H))))))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 10),
                  template_app
                   (template_app (template_hole 1, template_var 9),
                    template_app
                     (template_app (template_hole 1, template_var 8),
                      template_app
                       (template_app (template_hole 1, template_var 7),
                        template_app
                         (template_app (template_hole 1, template_var 6),
                          template_app
                           (template_app (template_hole 1, template_var 5),
                            template_app
                             (template_app
                               (template_hole 1, template_var 4),
                              template_app
                               (template_app
                                 (template_hole 1, template_var 3),
                                template_var 2))))))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app (template_hole 1, template_var 9),
                    template_app
                     (template_app (template_hole 1, template_var 8),
                      template_app
                       (template_app (template_hole 1, template_var 7),
                        template_app
                         (template_app (template_hole 1, template_var 6),
                          template_app
                           (template_app (template_hole 1, template_var 5),
                            template_app
                             (template_app
                               (template_hole 1, template_var 4),
                              template_app
                               (template_app
                                 (template_hole 1, template_var 3),
                                template_var 2))))))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 9),
                 template_app
                  (template_app (template_hole 1, template_var 8),
                   template_app
                    (template_app (template_hole 1, template_var 7),
                     template_app
                      (template_app (template_hole 1, template_var 6),
                       template_app
                        (template_app (template_hole 1, template_var 5),
                         template_app
                          (template_app (template_hole 1, template_var 4),
                           template_app
                            (template_app (template_hole 1, template_var 3),
                             template_app
                              (template_app
                                (template_hole 1,
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 10),
                                   template_var 0)),
                               template_var 2))))))))),
             template_var 1)
           ))),
    ("SyntaxN.Mem_Eats_EH",
     "[| insert (?u IN ?t)
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0 (insert ?A6.0 ?H)))))) \<turnstile>
         ?B;
         insert (?u EQ ?z)
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0 (insert ?A6.0 ?H)))))) \<turnstile>
         ?B |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0
                     (insert (?u IN Eats ?t ?z) ?H)))))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 10),
                      template_var 9)),
                  template_app
                   (template_app (template_hole 3, template_var 8),
                    template_app
                     (template_app (template_hole 3, template_var 7),
                      template_app
                       (template_app (template_hole 3, template_var 6),
                        template_app
                         (template_app (template_hole 3, template_var 5),
                          template_app
                           (template_app (template_hole 3, template_var 4),
                            template_app
                             (template_app
                               (template_hole 3, template_var 3),
                              template_var 2)))))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 1, template_var 10),
                      template_var 0)),
                  template_app
                   (template_app (template_hole 3, template_var 8),
                    template_app
                     (template_app (template_hole 3, template_var 7),
                      template_app
                       (template_app (template_hole 3, template_var 6),
                        template_app
                         (template_app (template_hole 3, template_var 5),
                          template_app
                           (template_app (template_hole 3, template_var 4),
                            template_app
                             (template_app
                               (template_hole 3, template_var 3),
                              template_var 2)))))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 8),
                 template_app
                  (template_app (template_hole 3, template_var 7),
                   template_app
                    (template_app (template_hole 3, template_var 6),
                     template_app
                      (template_app (template_hole 3, template_var 5),
                       template_app
                        (template_app (template_hole 3, template_var 4),
                         template_app
                          (template_app (template_hole 3, template_var 3),
                           template_app
                            (template_app
                              (template_hole 3,
                               template_app
                                (template_app
                                  (template_hole 2, template_var 10),
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 9),
                                   template_var 0))),
                             template_var 2)))))))),
             template_var 1)
           ))),
    ("SyntaxN.rotate14",
     "insert ?A14.0
       (insert ?A1.0
         (insert ?A2.0
           (insert ?A3.0
             (insert ?A4.0
               (insert ?A5.0
                 (insert ?A6.0
                   (insert ?A7.0
                     (insert ?A8.0
                       (insert ?A9.0
                         (insert ?A10.0
                           (insert ?A11.0
                             (insert ?A12.0
                               (insert ?A13.0 ?H))))))))))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert ?A8.0
                     (insert ?A9.0
                       (insert ?A10.0
                         (insert ?A11.0
                           (insert ?A12.0
                             (insert ?A13.0
                               (insert ?A14.0 ?H))))))))))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 15),
                  template_app
                   (template_app (template_hole 0, template_var 14),
                    template_app
                     (template_app (template_hole 0, template_var 13),
                      template_app
                       (template_app (template_hole 0, template_var 12),
                        template_app
                         (template_app (template_hole 0, template_var 11),
                          template_app
                           (template_app (template_hole 0, template_var 10),
                            template_app
                             (template_app
                               (template_hole 0, template_var 9),
                              template_app
                               (template_app
                                 (template_hole 0, template_var 8),
                                template_app
                                 (template_app
                                   (template_hole 0, template_var 7),
                                  template_app
                                   (template_app
                                     (template_hole 0, template_var 6),
                                    template_app
                                     (template_app
 (template_hole 0, template_var 5),
template_app
 (template_app (template_hole 0, template_var 4),
  template_app
   (template_app (template_hole 0, template_var 3),
    template_app
     (template_app (template_hole 0, template_var 2),
      template_var 1))))))))))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 14),
                 template_app
                  (template_app (template_hole 0, template_var 13),
                   template_app
                    (template_app (template_hole 0, template_var 12),
                     template_app
                      (template_app (template_hole 0, template_var 11),
                       template_app
                        (template_app (template_hole 0, template_var 10),
                         template_app
                          (template_app (template_hole 0, template_var 9),
                           template_app
                            (template_app (template_hole 0, template_var 8),
                             template_app
                              (template_app
                                (template_hole 0, template_var 7),
                               template_app
                                (template_app
                                  (template_hole 0, template_var 6),
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 5),
                                   template_app
                                    (template_app
(template_hole 0, template_var 4),
                                     template_app
(template_app (template_hole 0, template_var 3),
 template_app
  (template_app (template_hole 0, template_var 2),
   template_app
    (template_app (template_hole 0, template_var 15),
     template_var 1))))))))))))))),
             template_var 0)
           ))),
    ("SyntaxN.Ex_EH",
     "[| insert ?A
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0 (insert ?A6.0 ?H)))))) \<turnstile>
         ?B;
         atom ?i \<sharp> ?B;
         ALL C:insert ?A1.0
                (insert ?A2.0
                  (insert ?A3.0
                    (insert ?A4.0 (insert ?A5.0 (insert ?A6.0 ?H))))).
            atom ?i \<sharp> C |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0
                     (insert (SyntaxN.Ex ?i ?A) ?H)))))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 9),
                  template_app
                   (template_app (template_hole 4, template_var 8),
                    template_app
                     (template_app (template_hole 4, template_var 7),
                      template_app
                       (template_app (template_hole 4, template_var 6),
                        template_app
                         (template_app (template_hole 4, template_var 5),
                          template_app
                           (template_app (template_hole 4, template_var 4),
                            template_app
                             (template_app
                               (template_hole 4, template_var 3),
                              template_var 2)))))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 4, template_var 8),
                  template_app
                   (template_app (template_hole 4, template_var 7),
                    template_app
                     (template_app (template_hole 4, template_var 6),
                      template_app
                       (template_app (template_hole 4, template_var 5),
                        template_app
                         (template_app (template_hole 4, template_var 4),
                          template_app
                           (template_app (template_hole 4, template_var 3),
                            template_var 2))))))),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 8),
                 template_app
                  (template_app (template_hole 4, template_var 7),
                   template_app
                    (template_app (template_hole 4, template_var 6),
                     template_app
                      (template_app (template_hole 4, template_var 5),
                       template_app
                        (template_app (template_hole 4, template_var 4),
                         template_app
                          (template_app (template_hole 4, template_var 3),
                           template_app
                            (template_app
                              (template_hole 4,
                               template_app
                                (template_app
                                  (template_hole 0, template_var 0),
                                 template_var 9)),
                             template_var 2)))))))),
             template_var 1)
           ))),
    ("SyntaxN.rotate15",
     "insert ?A15.0
       (insert ?A1.0
         (insert ?A2.0
           (insert ?A3.0
             (insert ?A4.0
               (insert ?A5.0
                 (insert ?A6.0
                   (insert ?A7.0
                     (insert ?A8.0
                       (insert ?A9.0
                         (insert ?A10.0
                           (insert ?A11.0
                             (insert ?A12.0
                               (insert ?A13.0
                                 (insert ?A14.0
                                   ?H)))))))))))))) \<turnstile>
      ?B ==>
      insert ?A1.0
       (insert ?A2.0
         (insert ?A3.0
           (insert ?A4.0
             (insert ?A5.0
               (insert ?A6.0
                 (insert ?A7.0
                   (insert ?A8.0
                     (insert ?A9.0
                       (insert ?A10.0
                         (insert ?A11.0
                           (insert ?A12.0
                             (insert ?A13.0
                               (insert ?A14.0
                                 (insert ?A15.0
                                   ?H)))))))))))))) \<turnstile>
      ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 16),
                  template_app
                   (template_app (template_hole 0, template_var 15),
                    template_app
                     (template_app (template_hole 0, template_var 14),
                      template_app
                       (template_app (template_hole 0, template_var 13),
                        template_app
                         (template_app (template_hole 0, template_var 12),
                          template_app
                           (template_app (template_hole 0, template_var 11),
                            template_app
                             (template_app
                               (template_hole 0, template_var 10),
                              template_app
                               (template_app
                                 (template_hole 0, template_var 9),
                                template_app
                                 (template_app
                                   (template_hole 0, template_var 8),
                                  template_app
                                   (template_app
                                     (template_hole 0, template_var 7),
                                    template_app
                                     (template_app
 (template_hole 0, template_var 6),
template_app
 (template_app (template_hole 0, template_var 5),
  template_app
   (template_app (template_hole 0, template_var 4),
    template_app
     (template_app (template_hole 0, template_var 3),
      template_app
       (template_app (template_hole 0, template_var 2),
        template_var 1)))))))))))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 15),
                 template_app
                  (template_app (template_hole 0, template_var 14),
                   template_app
                    (template_app (template_hole 0, template_var 13),
                     template_app
                      (template_app (template_hole 0, template_var 12),
                       template_app
                        (template_app (template_hole 0, template_var 11),
                         template_app
                          (template_app (template_hole 0, template_var 10),
                           template_app
                            (template_app (template_hole 0, template_var 9),
                             template_app
                              (template_app
                                (template_hole 0, template_var 8),
                               template_app
                                (template_app
                                  (template_hole 0, template_var 7),
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 6),
                                   template_app
                                    (template_app
(template_hole 0, template_var 5),
                                     template_app
(template_app (template_hole 0, template_var 4),
 template_app
  (template_app (template_hole 0, template_var 3),
   template_app
    (template_app (template_hole 0, template_var 2),
     template_app
      (template_app (template_hole 0, template_var 16),
       template_var 1)))))))))))))))),
             template_var 0)
           ))),
    ("SyntaxN.Mem_SUCC_EH",
     "[| insert (?u IN ?t)
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0
                    (insert ?A6.0 (insert ?A7.0 ?H))))))) \<turnstile>
         ?B;
         insert (?u EQ ?t)
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0
                    (insert ?A6.0 (insert ?A7.0 ?H))))))) \<turnstile>
         ?B |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0
                     (insert ?A7.0
                       (insert (?u IN SUCC ?t) ?H))))))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 10),
                      template_var 9)),
                  template_app
                   (template_app (template_hole 3, template_var 8),
                    template_app
                     (template_app (template_hole 3, template_var 7),
                      template_app
                       (template_app (template_hole 3, template_var 6),
                        template_app
                         (template_app (template_hole 3, template_var 5),
                          template_app
                           (template_app (template_hole 3, template_var 4),
                            template_app
                             (template_app
                               (template_hole 3, template_var 3),
                              template_app
                               (template_app
                                 (template_hole 3, template_var 2),
                                template_var 1))))))))),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 1, template_var 10),
                      template_var 9)),
                  template_app
                   (template_app (template_hole 3, template_var 8),
                    template_app
                     (template_app (template_hole 3, template_var 7),
                      template_app
                       (template_app (template_hole 3, template_var 6),
                        template_app
                         (template_app (template_hole 3, template_var 5),
                          template_app
                           (template_app (template_hole 3, template_var 4),
                            template_app
                             (template_app
                               (template_hole 3, template_var 3),
                              template_app
                               (template_app
                                 (template_hole 3, template_var 2),
                                template_var 1))))))))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 8),
                 template_app
                  (template_app (template_hole 3, template_var 7),
                   template_app
                    (template_app (template_hole 3, template_var 6),
                     template_app
                      (template_app (template_hole 3, template_var 5),
                       template_app
                        (template_app (template_hole 3, template_var 4),
                         template_app
                          (template_app (template_hole 3, template_var 3),
                           template_app
                            (template_app (template_hole 3, template_var 2),
                             template_app
                              (template_app
                                (template_hole 3,
                                 template_app
                                  (template_app
                                    (template_hole 2, template_var 10),
                                   template_app
                                    (template_hole 0, template_var 9))),
                               template_var 1))))))))),
             template_var 0)
           ))),
    ("SyntaxN.Disj_EH",
     "[| insert ?A
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0
                    (insert ?A6.0
                      (insert ?A7.0 (insert ?A8.0 ?H)))))))) \<turnstile>
         ?B;
         insert ?Ba
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0
                    (insert ?A6.0
                      (insert ?A7.0 (insert ?A8.0 ?H)))))))) \<turnstile>
         ?B |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0
                     (insert ?A7.0
                       (insert ?A8.0
                         (insert (?A OR ?Ba) ?H)))))))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 11),
                  template_app
                   (template_app (template_hole 1, template_var 10),
                    template_app
                     (template_app (template_hole 1, template_var 9),
                      template_app
                       (template_app (template_hole 1, template_var 8),
                        template_app
                         (template_app (template_hole 1, template_var 7),
                          template_app
                           (template_app (template_hole 1, template_var 6),
                            template_app
                             (template_app
                               (template_hole 1, template_var 5),
                              template_app
                               (template_app
                                 (template_hole 1, template_var 4),
                                template_app
                                 (template_app
                                   (template_hole 1, template_var 3),
                                  template_var 2)))))))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app (template_hole 1, template_var 10),
                    template_app
                     (template_app (template_hole 1, template_var 9),
                      template_app
                       (template_app (template_hole 1, template_var 8),
                        template_app
                         (template_app (template_hole 1, template_var 7),
                          template_app
                           (template_app (template_hole 1, template_var 6),
                            template_app
                             (template_app
                               (template_hole 1, template_var 5),
                              template_app
                               (template_app
                                 (template_hole 1, template_var 4),
                                template_app
                                 (template_app
                                   (template_hole 1, template_var 3),
                                  template_var 2)))))))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 10),
                 template_app
                  (template_app (template_hole 1, template_var 9),
                   template_app
                    (template_app (template_hole 1, template_var 8),
                     template_app
                      (template_app (template_hole 1, template_var 7),
                       template_app
                        (template_app (template_hole 1, template_var 6),
                         template_app
                          (template_app (template_hole 1, template_var 5),
                           template_app
                            (template_app (template_hole 1, template_var 4),
                             template_app
                              (template_app
                                (template_hole 1, template_var 3),
                               template_app
                                (template_app
                                  (template_hole 1,
                                   template_app
                                    (template_app
(template_hole 0, template_var 11),
                                     template_var 0)),
                                 template_var 2)))))))))),
             template_var 1)
           ))),
    ("SyntaxN.Mem_Eats_EH",
     "[| insert (?u IN ?t)
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0
                    (insert ?A6.0 (insert ?A7.0 ?H))))))) \<turnstile>
         ?B;
         insert (?u EQ ?z)
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0
                    (insert ?A6.0 (insert ?A7.0 ?H))))))) \<turnstile>
         ?B |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0
                     (insert ?A7.0
                       (insert (?u IN Eats ?t ?z) ?H))))))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 11),
                      template_var 10)),
                  template_app
                   (template_app (template_hole 3, template_var 9),
                    template_app
                     (template_app (template_hole 3, template_var 8),
                      template_app
                       (template_app (template_hole 3, template_var 7),
                        template_app
                         (template_app (template_hole 3, template_var 6),
                          template_app
                           (template_app (template_hole 3, template_var 5),
                            template_app
                             (template_app
                               (template_hole 3, template_var 4),
                              template_app
                               (template_app
                                 (template_hole 3, template_var 3),
                                template_var 2))))))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 1, template_var 11),
                      template_var 0)),
                  template_app
                   (template_app (template_hole 3, template_var 9),
                    template_app
                     (template_app (template_hole 3, template_var 8),
                      template_app
                       (template_app (template_hole 3, template_var 7),
                        template_app
                         (template_app (template_hole 3, template_var 6),
                          template_app
                           (template_app (template_hole 3, template_var 5),
                            template_app
                             (template_app
                               (template_hole 3, template_var 4),
                              template_app
                               (template_app
                                 (template_hole 3, template_var 3),
                                template_var 2))))))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 9),
                 template_app
                  (template_app (template_hole 3, template_var 8),
                   template_app
                    (template_app (template_hole 3, template_var 7),
                     template_app
                      (template_app (template_hole 3, template_var 6),
                       template_app
                        (template_app (template_hole 3, template_var 5),
                         template_app
                          (template_app (template_hole 3, template_var 4),
                           template_app
                            (template_app (template_hole 3, template_var 3),
                             template_app
                              (template_app
                                (template_hole 3,
                                 template_app
                                  (template_app
                                    (template_hole 2, template_var 11),
                                   template_app
                                    (template_app
(template_hole 0, template_var 10),
                                     template_var 0))),
                               template_var 2))))))))),
             template_var 1)
           ))),
    ("SyntaxN.Ex_EH",
     "[| insert ?A
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0
                    (insert ?A6.0 (insert ?A7.0 ?H))))))) \<turnstile>
         ?B;
         atom ?i \<sharp> ?B;
         ALL C:insert ?A1.0
                (insert ?A2.0
                  (insert ?A3.0
                    (insert ?A4.0
                      (insert ?A5.0 (insert ?A6.0 (insert ?A7.0 ?H)))))).
            atom ?i \<sharp> C |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0
                     (insert ?A7.0
                       (insert (SyntaxN.Ex ?i ?A) ?H))))))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 10),
                  template_app
                   (template_app (template_hole 4, template_var 9),
                    template_app
                     (template_app (template_hole 4, template_var 8),
                      template_app
                       (template_app (template_hole 4, template_var 7),
                        template_app
                         (template_app (template_hole 4, template_var 6),
                          template_app
                           (template_app (template_hole 4, template_var 5),
                            template_app
                             (template_app
                               (template_hole 4, template_var 4),
                              template_app
                               (template_app
                                 (template_hole 4, template_var 3),
                                template_var 2))))))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 4, template_var 9),
                  template_app
                   (template_app (template_hole 4, template_var 8),
                    template_app
                     (template_app (template_hole 4, template_var 7),
                      template_app
                       (template_app (template_hole 4, template_var 6),
                        template_app
                         (template_app (template_hole 4, template_var 5),
                          template_app
                           (template_app (template_hole 4, template_var 4),
                            template_app
                             (template_app
                               (template_hole 4, template_var 3),
                              template_var 2)))))))),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 9),
                 template_app
                  (template_app (template_hole 4, template_var 8),
                   template_app
                    (template_app (template_hole 4, template_var 7),
                     template_app
                      (template_app (template_hole 4, template_var 6),
                       template_app
                        (template_app (template_hole 4, template_var 5),
                         template_app
                          (template_app (template_hole 4, template_var 4),
                           template_app
                            (template_app (template_hole 4, template_var 3),
                             template_app
                              (template_app
                                (template_hole 4,
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 0),
                                   template_var 10)),
                               template_var 2))))))))),
             template_var 1)
           ))),
    ("SyntaxN.P3_cong",
     "[| !!i t u v x.
            atom i \<sharp> ?tms ==>
            (?P t u v)(i::=x) =
            ?P (subst i x t) (subst i x u) (subst i x v);
         ?H \<turnstile> ?x EQ ?x'; ?H \<turnstile> ?y EQ ?y';
         ?H \<turnstile> ?z EQ ?z' |]
      ==> ?H \<turnstile> ?P ?x ?y ?z IFF ?P ?x' ?y' ?z'",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 6),
              template_app
               (template_app (template_hole 1, template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 6),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 6),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 6),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_app (template_var 7, template_var 5),
                     template_var 3),
                   template_var 1)),
               template_app
                (template_app
                  (template_app (template_var 7, template_var 4),
                   template_var 2),
                 template_var 0)))
           ))),
    ("SyntaxN.Disj_EH",
     "[| insert ?A
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0
                    (insert ?A6.0
                      (insert ?A7.0
                        (insert ?A8.0 (insert ?A9.0 ?H))))))))) \<turnstile>
         ?B;
         insert ?Ba
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0
                    (insert ?A6.0
                      (insert ?A7.0
                        (insert ?A8.0 (insert ?A9.0 ?H))))))))) \<turnstile>
         ?B |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0
                     (insert ?A7.0
                       (insert ?A8.0
                         (insert ?A9.0
                           (insert (?A OR ?Ba) ?H))))))))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 12),
                  template_app
                   (template_app (template_hole 1, template_var 11),
                    template_app
                     (template_app (template_hole 1, template_var 10),
                      template_app
                       (template_app (template_hole 1, template_var 9),
                        template_app
                         (template_app (template_hole 1, template_var 8),
                          template_app
                           (template_app (template_hole 1, template_var 7),
                            template_app
                             (template_app
                               (template_hole 1, template_var 6),
                              template_app
                               (template_app
                                 (template_hole 1, template_var 5),
                                template_app
                                 (template_app
                                   (template_hole 1, template_var 4),
                                  template_app
                                   (template_app
                                     (template_hole 1, template_var 3),
                                    template_var 2))))))))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app (template_hole 1, template_var 11),
                    template_app
                     (template_app (template_hole 1, template_var 10),
                      template_app
                       (template_app (template_hole 1, template_var 9),
                        template_app
                         (template_app (template_hole 1, template_var 8),
                          template_app
                           (template_app (template_hole 1, template_var 7),
                            template_app
                             (template_app
                               (template_hole 1, template_var 6),
                              template_app
                               (template_app
                                 (template_hole 1, template_var 5),
                                template_app
                                 (template_app
                                   (template_hole 1, template_var 4),
                                  template_app
                                   (template_app
                                     (template_hole 1, template_var 3),
                                    template_var 2))))))))))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 11),
                 template_app
                  (template_app (template_hole 1, template_var 10),
                   template_app
                    (template_app (template_hole 1, template_var 9),
                     template_app
                      (template_app (template_hole 1, template_var 8),
                       template_app
                        (template_app (template_hole 1, template_var 7),
                         template_app
                          (template_app (template_hole 1, template_var 6),
                           template_app
                            (template_app (template_hole 1, template_var 5),
                             template_app
                              (template_app
                                (template_hole 1, template_var 4),
                               template_app
                                (template_app
                                  (template_hole 1, template_var 3),
                                 template_app
                                  (template_app
                                    (template_hole 1,
                                     template_app
(template_app (template_hole 0, template_var 12), template_var 0)),
                                   template_var 2))))))))))),
             template_var 1)
           ))),
    ("SyntaxN.Ex_EH",
     "[| insert ?A
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0
                    (insert ?A6.0
                      (insert ?A7.0 (insert ?A8.0 ?H)))))))) \<turnstile>
         ?B;
         atom ?i \<sharp> ?B;
         ALL C:insert ?A1.0
                (insert ?A2.0
                  (insert ?A3.0
                    (insert ?A4.0
                      (insert ?A5.0
                        (insert ?A6.0 (insert ?A7.0 (insert ?A8.0 ?H))))))).
            atom ?i \<sharp> C |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0
                     (insert ?A7.0
                       (insert ?A8.0
                         (insert (SyntaxN.Ex ?i ?A) ?H)))))))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 11),
                  template_app
                   (template_app (template_hole 4, template_var 10),
                    template_app
                     (template_app (template_hole 4, template_var 9),
                      template_app
                       (template_app (template_hole 4, template_var 8),
                        template_app
                         (template_app (template_hole 4, template_var 7),
                          template_app
                           (template_app (template_hole 4, template_var 6),
                            template_app
                             (template_app
                               (template_hole 4, template_var 5),
                              template_app
                               (template_app
                                 (template_hole 4, template_var 4),
                                template_app
                                 (template_app
                                   (template_hole 4, template_var 3),
                                  template_var 2)))))))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 4, template_var 10),
                  template_app
                   (template_app (template_hole 4, template_var 9),
                    template_app
                     (template_app (template_hole 4, template_var 8),
                      template_app
                       (template_app (template_hole 4, template_var 7),
                        template_app
                         (template_app (template_hole 4, template_var 6),
                          template_app
                           (template_app (template_hole 4, template_var 5),
                            template_app
                             (template_app
                               (template_hole 4, template_var 4),
                              template_app
                               (template_app
                                 (template_hole 4, template_var 3),
                                template_var 2))))))))),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 10),
                 template_app
                  (template_app (template_hole 4, template_var 9),
                   template_app
                    (template_app (template_hole 4, template_var 8),
                     template_app
                      (template_app (template_hole 4, template_var 7),
                       template_app
                        (template_app (template_hole 4, template_var 6),
                         template_app
                          (template_app (template_hole 4, template_var 5),
                           template_app
                            (template_app (template_hole 4, template_var 4),
                             template_app
                              (template_app
                                (template_hole 4, template_var 3),
                               template_app
                                (template_app
                                  (template_hole 4,
                                   template_app
                                    (template_app
(template_hole 0, template_var 0),
                                     template_var 11)),
                                 template_var 2)))))))))),
             template_var 1)
           ))),
    ("SyntaxN.Ex_EH",
     "[| insert ?A
          (insert ?A1.0
            (insert ?A2.0
              (insert ?A3.0
                (insert ?A4.0
                  (insert ?A5.0
                    (insert ?A6.0
                      (insert ?A7.0
                        (insert ?A8.0 (insert ?A9.0 ?H))))))))) \<turnstile>
         ?B;
         atom ?i \<sharp> ?B;
         ALL C:insert ?A1.0
                (insert ?A2.0
                  (insert ?A3.0
                    (insert ?A4.0
                      (insert ?A5.0
                        (insert ?A6.0
                          (insert ?A7.0
                            (insert ?A8.0 (insert ?A9.0 ?H)))))))).
            atom ?i \<sharp> C |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0
                     (insert ?A7.0
                       (insert ?A8.0
                         (insert ?A9.0
                           (insert (SyntaxN.Ex ?i ?A)
                             ?H))))))))) \<turnstile>
          ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 12),
                  template_app
                   (template_app (template_hole 4, template_var 11),
                    template_app
                     (template_app (template_hole 4, template_var 10),
                      template_app
                       (template_app (template_hole 4, template_var 9),
                        template_app
                         (template_app (template_hole 4, template_var 8),
                          template_app
                           (template_app (template_hole 4, template_var 7),
                            template_app
                             (template_app
                               (template_hole 4, template_var 6),
                              template_app
                               (template_app
                                 (template_hole 4, template_var 5),
                                template_app
                                 (template_app
                                   (template_hole 4, template_var 4),
                                  template_app
                                   (template_app
                                     (template_hole 4, template_var 3),
                                    template_var 2))))))))))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 4, template_var 11),
                  template_app
                   (template_app (template_hole 4, template_var 10),
                    template_app
                     (template_app (template_hole 4, template_var 9),
                      template_app
                       (template_app (template_hole 4, template_var 8),
                        template_app
                         (template_app (template_hole 4, template_var 7),
                          template_app
                           (template_app (template_hole 4, template_var 6),
                            template_app
                             (template_app
                               (template_hole 4, template_var 5),
                              template_app
                               (template_app
                                 (template_hole 4, template_var 4),
                                template_app
                                 (template_app
                                   (template_hole 4, template_var 3),
                                  template_var 2)))))))))),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 11),
                 template_app
                  (template_app (template_hole 4, template_var 10),
                   template_app
                    (template_app (template_hole 4, template_var 9),
                     template_app
                      (template_app (template_hole 4, template_var 8),
                       template_app
                        (template_app (template_hole 4, template_var 7),
                         template_app
                          (template_app (template_hole 4, template_var 6),
                           template_app
                            (template_app (template_hole 4, template_var 5),
                             template_app
                              (template_app
                                (template_hole 4, template_var 4),
                               template_app
                                (template_app
                                  (template_hole 4, template_var 3),
                                 template_app
                                  (template_app
                                    (template_hole 4,
                                     template_app
(template_app (template_hole 0, template_var 0), template_var 12)),
                                   template_var 2))))))))))),
             template_var 1)
           ))),
    ("SyntaxN.P4_cong",
     "[| !!i t1 t2 t3 t4 x.
            atom i \<sharp> ?tms ==>
            (?P t1 t2 t3 t4)(i::=x) =
            ?P (subst i x t1) (subst i x t2) (subst i x t3) (subst i x t4);
         ?H \<turnstile> ?x1.0 EQ ?x1'; ?H \<turnstile> ?x2.0 EQ ?x2';
         ?H \<turnstile> ?x3.0 EQ ?x3'; ?H \<turnstile> ?x4.0 EQ ?x4' |]
      ==> ?H \<turnstile>
          ?P ?x1.0 ?x2.0 ?x3.0 ?x4.0 IFF ?P ?x1' ?x2' ?x3' ?x4'",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 8),
              template_app
               (template_app (template_hole 1, template_var 7),
                template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 8),
              template_app
               (template_app (template_hole 1, template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 8),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 8),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 8),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_var 9, template_var 7),
                       template_var 5),
                     template_var 3),
                   template_var 1)),
               template_app
                (template_app
                  (template_app
                    (template_app (template_var 9, template_var 6),
                     template_var 4),
                   template_var 2),
                 template_var 0)))
           ))),
    ("SyntaxN.atom_name_sort",
     "sort_of (atom ?a) = Sort ''SyntaxN.name'' []",
     template_equation
      (template_app
        (template_hole 8, template_app (template_hole 7, template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 4, template_hole 3),
                             template_hole 3),
                           template_hole 2),
                         template_hole 2),
                       template_hole 3),
                     template_hole 2),
                   template_hole 3),
                 template_hole 2)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 4, template_hole 3),
                               template_hole 2),
                             template_hole 2),
                           template_hole 3),
                         template_hole 3),
                       template_hole 3),
                     template_hole 3),
                   template_hole 2)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 4, template_hole 2),
                                 template_hole 3),
                               template_hole 3),
                             template_hole 3),
                           template_hole 2),
                         template_hole 3),
                       template_hole 3),
                     template_hole 2)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 4, template_hole 2),
                                   template_hole 2),
                                 template_hole 3),
                               template_hole 2),
                             template_hole 3),
                           template_hole 3),
                         template_hole 3),
                       template_hole 2)),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 4, template_hole 3),
                                     template_hole 2),
                                   template_hole 2),
                                 template_hole 2),
                               template_hole 2),
                             template_hole 3),
                           template_hole 3),
                         template_hole 2)),
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 4, template_hole 2), template_hole 2),
                                     template_hole 2),
                                   template_hole 3),
                                 template_hole 3),
                               template_hole 3),
                             template_hole 3),
                           template_hole 2)),
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 4, template_hole 2), template_hole 3),
 template_hole 3),
                                     template_hole 3),
                                   template_hole 2),
                                 template_hole 2),
                               template_hole 3),
                             template_hole 2)),
                         template_app
                          (template_app
                            (template_hole 5,
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 4, template_hole 2), template_hole 3),
   template_hole 3),
 template_hole 3),
                                     template_hole 2),
                                   template_hole 3),
                                 template_hole 2),
                               template_hole 2)),
                           template_app
                            (template_app
                              (template_hole 5,
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app (template_hole 4, template_hole 2), template_hole 3),
     template_hole 3),
   template_hole 3),
 template_hole 2),
                                     template_hole 3),
                                   template_hole 3),
                                 template_hole 2)),
                             template_app
                              (template_app
                                (template_hole 5,
                                 template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app (template_hole 4, template_hole 3), template_hole 2),
       template_hole 2),
     template_hole 2),
   template_hole 2),
 template_hole 3),
                                     template_hole 3),
                                   template_hole 2)),
                               template_app
                                (template_app
                                  (template_hole 5,
                                   template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_hole 2),
         template_hole 3),
       template_hole 3),
     template_hole 2),
   template_hole 3),
 template_hole 3),
                                     template_hole 2)),
                                 template_app
                                  (template_app
                                    (template_hole 5,
                                     template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_hole 2),
           template_hole 3),
         template_hole 2),
       template_hole 2),
     template_hole 3),
   template_hole 3),
 template_hole 2)),
                                   template_hole 1))))))))))))),
         template_hole 0)))]
