   [("HF.HSigma_empty1", "HSigma 0 ?B = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Product_Type.Sigma_empty1", "Sigma {} ?B = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Sigma.ground_aux_simps", "ground_aux Zero ?S = True",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Sigma.ground_fm_aux_simps", "ground_fm_aux Fls ?S = True",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Product_Type.Sigma_empty2", "?A \<times> {} = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), t_empty),
       template_hole 0)),
    ("Predicates.HFun_Sigma_fresh_iff",
     "?a \<sharp> HFun_Sigma ?r = ?a \<sharp> ?r",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Sigma.ground_fm_aux_simps",
     "ground_fm_aux (Neg ?A) ?S = ground_fm_aux ?A ?S",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Predicates.eval_fm_HFun_Sigma",
     "eval_fm ?e (HFun_Sigma ?r) = hfun_sigma_ord \<lbrakk>?r\<rbrakk>?e",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Predicates.HFun_Sigma_subst",
     "(HFun_Sigma ?r)(?i::=?t) = HFun_Sigma (subst ?i ?t ?r)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2)))),
    ("Product_Type.snd_image_Sigma",
     "snd ` Sigma ?A ?B = \<Union> (?B ` ?A)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Product_Type.Sigma_Union",
     "Sigma (\<Union> ?X) ?B = (UN A:?X. Sigma A ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Sigma.ground_aux_simps",
     "ground_aux (Var ?k) ?S = (if atom ?k : ?S then True else False)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1)),
               template_var 0)),
           template_hole 1),
         template_hole 0))),
    ("Product_Type.Sigma_Diff_distrib1",
     "Sigma (?I - ?J) ?C = Sigma ?I ?C - Sigma ?J ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Product_Type.Sigma_Int_distrib1",
     "Sigma (?I Int ?J) ?C = Sigma ?I ?C Int Sigma ?J ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Product_Type.Sigma_Un_distrib1",
     "Sigma (?I Un ?J) ?C = Sigma ?I ?C Un Sigma ?J ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Sigma.ground_aux_simps",
     "ground_aux (Eats ?t ?u) ?S = (ground_aux ?t ?S & ground_aux ?u ?S)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Sigma.ground_fm_aux_simps",
     "ground_fm_aux (?A AND ?B) ?S =
      (ground_fm_aux ?A ?S & ground_fm_aux ?B ?S)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Sigma.ground_fm_aux_simps",
     "ground_fm_aux (?A OR ?B) ?S =
      (ground_fm_aux ?A ?S & ground_fm_aux ?B ?S)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Sigma.ground_fm_aux_simps",
     "ground_fm_aux (?t EQ ?u) ?S = (ground_aux ?t ?S & ground_aux ?u ?S)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Sigma.ground_fm_aux_simps",
     "ground_fm_aux (?A IFF ?B) ?S =
      (ground_fm_aux ?A ?S & ground_fm_aux ?B ?S)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Sigma.ground_fm_aux_simps",
     "ground_fm_aux (?t IN ?u) ?S = (ground_aux ?t ?S & ground_aux ?u ?S)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Product_Type.Pair_vimage_Sigma",
     "Pair ?x -` Sigma ?A ?f = (if ?x : ?A then ?f ?x else {})",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app (template_var 0, template_var 2)),
         template_hole 0))),
    ("Sigma.ground_fm_aux_simps",
     "ground_fm_aux (SyntaxN.Ex ?x ?A) ?S =
      ground_fm_aux ?A (?S Un {atom ?x})",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_hole 0))))),
    ("Sigma.ex_eval_fm_iff_exists_tm'",
     "eval_fm ?e (SyntaxN.Ex ?k ?A) = (EX t. eval_fm ?e (?A(?k::=t)))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("Nominal2_Base.Sigma_eqvt",
     "?p \<bullet> ?X \<times> ?Y =
      (?p \<bullet> ?X) \<times> (?p \<bullet> ?Y)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), t_empty)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         t_empty))),
    ("Product_Type.Sigma_empty_iff",
     "(Sigma ?I ?X = {}) = (ALL i:?I. ?X i = {})",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1), t_empty)),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_var 1), t_empty))),
    ("Relation.Sigma_Image",
     "Sigma ?A ?B `` ?X = \<Union> (?B ` (?X Int ?A))",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2), t_empty)),
         template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Product_Type.Sigma_Diff_distrib2",
     "(SIGMA i:?I. ?A i - ?B i) = Sigma ?I ?A - Sigma ?I ?B",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Product_Type.Sigma_Int_distrib2",
     "(SIGMA i:?I. ?A i Int ?B i) = Sigma ?I ?A Int Sigma ?I ?B",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Product_Type.Sigma_Un_distrib2",
     "(SIGMA i:?I. ?A i Un ?B i) = Sigma ?I ?A Un Sigma ?I ?B",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("HF.HSigma_iff",
     "(<?a, ?b> <: HSigma ?A ?B) = (?a <: ?A & ?b <: ?B ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app (template_var 0, template_var 3))))),
    ("Product_Type.mem_Sigma_iff",
     "((?a, ?b) : Sigma ?A ?B) = (?a : ?A & ?b : ?B ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app (template_var 0, template_var 3))))),
    ("Product_Type.fst_image_Sigma",
     "fst ` Sigma ?A ?B = {x: ?A. ?B x ~= {}}",
     template_equation
      (template_app
        (template_app (template_hole 8, template_hole 7),
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Product_Type.Collect_case_prod_Sigma",
     "{(x, y). ?P x & ?Q x y} = (SIGMA x:Collect ?P. Collect (?Q x))",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, t_empty)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         t_empty))),
    ("Sigma.ex_eval_fm_iff_exists_tm",
     "eval_fm ?e (SyntaxN.Ex ?k ?A) =
      (EX t. eval_fm ?e (?A(?k::=t)) & ground t)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Product_Type.split_paired_Ball_Sigma",
     "(ALL z:Sigma ?A ?B. ?P z) = (ALL x:?A. ALL y:?B x. ?P (x, y))",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app (template_hole 2, template_var 2), t_empty))),
    ("Product_Type.split_paired_Bex_Sigma",
     "(EX z:Sigma ?A ?B. ?P z) = (EX x:?A. EX y:?B x. ?P (x, y))",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app (template_hole 2, template_var 2), t_empty))),
    ("Product_Type.disjnt_Sigma_iff",
     "disjnt (Sigma ?A ?C) (Sigma ?B ?C) =
      ((ALL i:?A Int ?B. ?C i = {}) | disjnt ?A ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 6, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 0)),
             t_empty)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Product_Type.image_split_eq_Sigma",
     "(%x. (?f x, ?g x)) ` ?A = (SIGMA x:?f ` ?A. ?g ` (?f -` {x} Int ?A))",
     template_equation
      (template_app
        (template_app (template_hole 8, t_empty), template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 0)),
         t_empty)))]
