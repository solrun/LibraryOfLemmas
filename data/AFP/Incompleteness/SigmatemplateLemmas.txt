   [("Sigma.HFun_Sigma_sf", "Sigma_fm (HFun_Sigma ?t)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Sigma.OrdP_sf", "Sigma_fm (OrdP ?t)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Sigma.HDomain_Incl_sf", "Sigma_fm (HDomain_Incl ?t ?u)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Sigma.OrdNotEqP_sf", "Sigma_fm (?t NEQ ?u)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Sigma.Subset_sf", "Sigma_fm (?t SUBS ?u)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Sigma.Equality_sf", "Sigma_fm (?t EQ ?u)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Sigma.Mem_sf", "Sigma_fm (?t IN ?u)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Predicates.HFun_Sigma_Zero", "?H \<turnstile> HFun_Sigma Zero",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_hole 0))
         )),
    ("HF.HSigma_empty1", "HSigma 0 ?B = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Product_Type.Sigma_empty1", "Sigma {} ?B = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Sigma.ground_aux_simps", "ground_aux Zero ?S = True",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Sigma.ground_fm_aux_simps", "ground_fm_aux Fls ?S = True",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Sigma.LstSeqP_sf", "Sigma_fm (LstSeqP ?t ?u ?v)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0))
         )),
    ("Sigma.Subset_Zero_sf", "Sigma_fm (Var ?i SUBS Zero)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0))
         )),
    ("Sigma.Eq_Zero_sf", "Sigma_fm (Var ?i EQ Zero)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0))
         )),
    ("Sigma.Zero_Mem_sf", "Sigma_fm (Zero IN Var ?i)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0)))
         )),
    ("Product_Type.Sigma_empty2", "?A \<times> {} = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), t_empty),
       template_hole 0)),
    ("Sigma.Var_Subset_sf", "Sigma_fm (Var ?i SUBS Var ?j)",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0)))
         )),
    ("Sigma.ss_fm_imp_Sigma_fm", "ss_fm ?A ==> Sigma_fm ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Sigma.ss_imp_se_fm", "ss_fm ?A ==> se_fm ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Sigma.theorem_sf", "{} \<turnstile> ?A ==> Sigma_fm ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Predicates.HFun_Sigma_fresh_iff",
     "?a \<sharp> HFun_Sigma ?r = ?a \<sharp> ?r",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Sigma.ground_fm_aux_simps",
     "ground_fm_aux (Neg ?A) ?S = ground_fm_aux ?A ?S",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Predicates.eval_fm_HFun_Sigma",
     "eval_fm ?e (HFun_Sigma ?r) = hfun_sigma_ord \<lbrakk>?r\<rbrakk>?e",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Sigma.subst_fm_in_se_fm", "se_fm ?A ==> se_fm (?A(?k::=?x))",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Sigma.ground_fresh", "ground ?t ==> atom ?i \<sharp> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("Sigma.ground_fresh", "ground_fm ?A ==> atom ?i \<sharp> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("Sigma.ijk", "?i + ?k < Suc (?i + ?j + ?k)",
     template_inequation
      (less_than,
       template_app
        (template_app (template_hole 1, template_var 2), template_var 1),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_var 1)))),
    ("Predicates.HFun_Sigma_subst",
     "(HFun_Sigma ?r)(?i::=?t) = HFun_Sigma (subst ?i ?t ?r)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2)))),
    ("Predicates.Subset_HFun_Sigma",
     "{HFun_Sigma ?s, ?s' SUBS ?s} \<turnstile> HFun_Sigma ?s'",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 1)),
                 template_hole 0))),
           template_app (template_hole 2, template_var 0))
         )),
    ("Product_Type.snd_image_Sigma",
     "snd ` Sigma ?A ?B = \<Union> (?B ` ?A)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Product_Type.Sigma_Union",
     "Sigma (\<Union> ?X) ?B = (UN A:?X. Sigma A ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Sigma.ground_aux_simps",
     "ground_aux (Var ?k) ?S = (if atom ?k : ?S then True else False)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1)),
               template_var 0)),
           template_hole 1),
         template_hole 0))),
    ("HF.HSigmaD1", "<?a, ?b> <: HSigma ?A ?B ==> ?a <: ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3), template_var 1)
           ))),
    ("Product_Type.SigmaD1", "(?a, ?b) : Sigma ?A ?B ==> ?a : ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 3), template_var 1)
           ))),
    ("Sigma.Sigma_fm_AND",
     "[| Sigma_fm ?A; Sigma_fm ?B |] ==> Sigma_fm (?A AND ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Sigma.Sigma_fm_OR",
     "[| Sigma_fm ?A; Sigma_fm ?B |] ==> Sigma_fm (?A OR ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Sigma.Sigma_fm_Ex",
     "[| Sigma_fm ?A; Sigma_fm ?B |] ==> Sigma_fm (SyntaxN.Ex ?i ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 2)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("Product_Type.Sigma_Diff_distrib1",
     "Sigma (?I - ?J) ?C = Sigma ?I ?C - Sigma ?J ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Product_Type.Sigma_Int_distrib1",
     "Sigma (?I Int ?J) ?C = Sigma ?I ?C Int Sigma ?J ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Product_Type.Sigma_Un_distrib1",
     "Sigma (?I Un ?J) ?C = Sigma ?I ?C Un Sigma ?J ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Sigma.ground_aux_simps",
     "ground_aux (Eats ?t ?u) ?S = (ground_aux ?t ?S & ground_aux ?u ?S)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Sigma.ground_fm_aux_simps",
     "ground_fm_aux (?A AND ?B) ?S =
      (ground_fm_aux ?A ?S & ground_fm_aux ?B ?S)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Sigma.ground_fm_aux_simps",
     "ground_fm_aux (?A OR ?B) ?S =
      (ground_fm_aux ?A ?S & ground_fm_aux ?B ?S)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Sigma.ground_fm_aux_simps",
     "ground_fm_aux (?t EQ ?u) ?S = (ground_aux ?t ?S & ground_aux ?u ?S)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Sigma.ground_fm_aux_simps",
     "ground_fm_aux (?A IFF ?B) ?S =
      (ground_fm_aux ?A ?S & ground_fm_aux ?B ?S)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Sigma.ground_fm_aux_simps",
     "ground_fm_aux (?t IN ?u) ?S = (ground_aux ?t ?S & ground_aux ?u ?S)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("HF.HSigmaD2", "<?a, ?b> <: HSigma ?A ?B ==> ?b <: ?B ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_var 0, template_var 3))
           ))),
    ("Product_Type.SigmaD2", "(?a, ?b) : Sigma ?A ?B ==> ?b : ?B ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app (template_var 0, template_var 3))
           ))),
    ("Product_Type.Pair_vimage_Sigma",
     "Pair ?x -` Sigma ?A ?f = (if ?x : ?A then ?f ?x else {})",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app (template_var 0, template_var 2)),
         template_hole 0))),
    ("Sigma.ground_fm_aux_simps",
     "ground_fm_aux (SyntaxN.Ex ?x ?A) ?S =
      ground_fm_aux ?A (?S Un {atom ?x})",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_hole 0))))),
    ("Sigma.ex_eval_fm_iff_exists_tm'",
     "eval_fm ?e (SyntaxN.Ex ?k ?A) = (EX t. eval_fm ?e (?A(?k::=t)))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("Sigma.elts_imp_ground",
     "[| ?u : elts ?t; ground_aux ?t ?S |] ==> ground_aux ?u ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Nominal2_Base.Sigma_eqvt",
     "?p \<bullet> ?X \<times> ?Y =
      (?p \<bullet> ?X) \<times> (?p \<bullet> ?Y)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), t_empty)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         t_empty))),
    ("Product_Type.Sigma_empty_iff",
     "(Sigma ?I ?X = {}) = (ALL i:?I. ?X i = {})",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1), t_empty)),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_var 1), t_empty))),
    ("Transitive_Closure.trancl_subset_Sigma",
     "?r <= ?A \<times> ?A ==> ?r^+ <= ?A \<times> ?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 1, template_var 0), t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0), t_empty)))),
    ("Relation.Sigma_Image",
     "Sigma ?A ?B `` ?X = \<Union> (?B ` (?X Int ?A))",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2), t_empty)),
         template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Product_Type.Sigma_Diff_distrib2",
     "(SIGMA i:?I. ?A i - ?B i) = Sigma ?I ?A - Sigma ?I ?B",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Product_Type.Sigma_Int_distrib2",
     "(SIGMA i:?I. ?A i Int ?B i) = Sigma ?I ?A Int Sigma ?I ?B",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Product_Type.Sigma_Un_distrib2",
     "(SIGMA i:?I. ?A i Un ?B i) = Sigma ?I ?A Un Sigma ?I ?B",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Transcendental.Sigma_interval_disjoint",
     "(SIGMA i:?A. {..?v i}) Int (SIGMA i:?A. {?v i<..?w}) = {}",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2), t_empty)),
         template_app
          (template_app (template_hole 3, template_var 2), t_empty)),
       template_hole 0)),
    ("HF.HSigma_iff",
     "(<?a, ?b> <: HSigma ?A ?B) = (?a <: ?A & ?b <: ?B ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app (template_var 0, template_var 3))))),
    ("Product_Type.mem_Sigma_iff",
     "((?a, ?b) : Sigma ?A ?B) = (?a : ?A & ?b : ?B ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app (template_var 0, template_var 3))))),
    ("Product_Type.fst_image_Sigma",
     "fst ` Sigma ?A ?B = {x: ?A. ?B x ~= {}}",
     template_equation
      (template_app
        (template_app (template_hole 8, template_hole 7),
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Sigma.Sigma_fm_imp_thm",
     "[| Sigma_fm ?A; ground_fm ?A; eval_fm e0 ?A |]
      ==> {} \<turnstile> ?A",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)
           ))),
    ("Sigma.se_fm_imp_thm",
     "[| se_fm ?A; ground_fm ?A; eval_fm ?e ?A |] ==> {} \<turnstile> ?A",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)
           ))),
    ("Product_Type.Collect_case_prod_Sigma",
     "{(x, y). ?P x & ?Q x y} = (SIGMA x:Collect ?P. Collect (?Q x))",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, t_empty)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         t_empty))),
    ("Transcendental.pairs_le_eq_Sigma",
     "{(i, j). i + j <= ?m} = (SIGMA r:{..?m}. {..?m - r})",
     template_equation
      (template_app
        (template_hole 6, template_app (template_hole 5, t_empty)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         t_empty))),
    ("Sigma.ex_eval_fm_iff_exists_tm",
     "eval_fm ?e (SyntaxN.Ex ?k ?A) =
      (EX t. eval_fm ?e (?A(?k::=t)) & ground t)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Old_Datatype.dprod_Sigma",
     "dprod (?A \<times> ?B) (?C \<times> ?D)
      <= uprod ?A ?C \<times> uprod ?B ?D",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3), t_empty)),
         template_app
          (template_app (template_hole 1, template_var 1), t_empty)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         t_empty))),
    ("Old_Datatype.dsum_Sigma",
     "dsum (?A \<times> ?B) (?C \<times> ?D)
      <= usum ?A ?C \<times> usum ?B ?D",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3), t_empty)),
         template_app
          (template_app (template_hole 1, template_var 1), t_empty)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         t_empty))),
    ("Sigma.Subset_Mem_sf_lemma",
     "size ?t + size ?u < ?n ==>
      Sigma_fm (?t SUBS ?u) & Sigma_fm (?t IN ?u)",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 2)),
            template_app (template_hole 4, template_var 1)),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1))),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)))
           ))),
    ("Sigma.obtain_const_tm",
     "(!!t. [| \<lbrakk>t\<rbrakk>?e = ?x; ground t |] ==> ?thesis) ==>
      ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("HF.HSigmaI",
     "[| ?a <: ?A; ?b <: ?B ?a |] ==> <?a, ?b> <: HSigma ?A ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_var 0, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Product_Type.SigmaI",
     "[| ?a : ?A; ?b : ?B ?a |] ==> (?a, ?b) : Sigma ?A ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_var 0, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Product_Type.split_paired_Ball_Sigma",
     "(ALL z:Sigma ?A ?B. ?P z) = (ALL x:?A. ALL y:?B x. ?P (x, y))",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app (template_hole 2, template_var 2), t_empty))),
    ("Product_Type.split_paired_Bex_Sigma",
     "(EX z:Sigma ?A ?B. ?P z) = (EX x:?A. EX y:?B x. ?P (x, y))",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app (template_hole 2, template_var 2), t_empty))),
    ("Sigma.ground_subst",
     "[| ground_aux ?tm (insert (atom ?i) ?S); ground ?t |]
      ==> ground_aux (subst ?i ?t ?tm) ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 2)),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0),
                 template_var 3)),
             template_var 1)
           ))),
    ("Sigma.ground_subst_fm",
     "[| ground_fm_aux ?A (insert (atom ?i) ?S); ground ?t |]
      ==> ground_fm_aux (?A(?i::=?t)) ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 2)),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Old_Datatype.dprod_subset_Sigma2",
     "dprod (Sigma ?A ?B) (Sigma ?C ?D)
      <= Sigma (uprod ?A ?C)
          (Old_Datatype.Split (%x y. uprod (?B x) (?D y)))",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app (template_hole 0, t_empty)))),
    ("Sigma.Sigma_fm_Iff",
     "[| {} \<turnstile> ?B IFF ?A; supp ?A <= supp ?B; Sigma_fm ?A |]
      ==> Sigma_fm ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 0),
          template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Product_Type.disjnt_Sigma_iff",
     "disjnt (Sigma ?A ?C) (Sigma ?B ?C) =
      ((ALL i:?A Int ?B. ?C i = {}) | disjnt ?A ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 6, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 0)),
             t_empty)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Finite_Set.finite_SigmaI",
     "[| finite ?A; !!a. a : ?A ==> finite (?B a) |]
      ==> finite (Sigma ?A ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1), t_empty))
           ))),
    ("Sigma.Sigma_fm_All2",
     "[| Sigma_fm ?A; atom ?i \<sharp> ?t |] ==> Sigma_fm (All2 ?i ?t ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 7,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_hole 4,
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_hole 0, template_var 1)),
                           template_var 0))),
                     template_var 2)))))
           ))),
    ("Product_Type.image_split_eq_Sigma",
     "(%x. (?f x, ?g x)) ` ?A = (SIGMA x:?f ` ?A. ?g ` (?f -` {x} Int ?A))",
     template_equation
      (template_app
        (template_app (template_hole 8, t_empty), template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 0)),
         t_empty))),
    ("Sigma.Sigma_fm_All2_fresh",
     "[| Sigma_fm ?A; ?i ~= ?j |] ==> Sigma_fm (All2 ?i (Var ?j) ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 7,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_hole 4,
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_hole 0, template_var 1)),
                           template_app
                            (template_hole 0, template_var 0)))),
                     template_var 2)))))
           ))),
    ("Transitive_Closure.trancl_subset_Sigma_aux",
     "[| (?a, ?b) : ?r^*; ?r <= ?A \<times> ?A |] ==> ?a = ?b | ?a : ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2)),
              template_app (template_hole 5, template_var 1))
            ),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 3, template_var 0), t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Sigma.ground_se_fm_induction",
     "[| ground_fm ?\<alpha>; size ?\<alpha> < ?n; se_fm ?\<alpha>;
         eval_fm ?e ?\<alpha> |]
      ==> {} \<turnstile> ?\<alpha>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_hole 6)
            ),
        template_inequation
         (less_than, template_app (template_hole 4, template_var 2),
          template_var 1),
        template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2)
           ))),
    ("Relation.relcomp_subset_Sigma",
     "[| ?r <= ?A \<times> ?B; ?s <= ?B \<times> ?C |]
      ==> ?r O ?s <= ?A \<times> ?C",
     template_implication
      ([template_inequation
         (less_equals, template_var 4,
          template_app
           (template_app (template_hole 5, template_var 3), t_empty)),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 3, template_var 2), t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 4), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 3), t_empty)))),
    ("HF.HSigmaE2",
     "[| <?a, ?b> <: HSigma ?A ?B;
         [| ?a <: ?A; ?b <: ?B ?a |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 2)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_app (template_var 1, template_var 4))
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Product_Type.SigmaE2",
     "[| (?a, ?b) : Sigma ?A ?B; [| ?a : ?A; ?b : ?B ?a |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 2)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_app (template_var 1, template_var 4))
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Sigma.ground_prove_IN",
     "[| ground ?t; ground ?u;
         \<lbrakk>?t\<rbrakk>?e <: \<lbrakk>?u\<rbrakk>?e |]
      ==> {} \<turnstile> ?t IN ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_var 2)),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("Sigma.ground_prove_EQ",
     "[| ground ?t; ground ?u;
         \<lbrakk>?t\<rbrakk>?e = \<lbrakk>?u\<rbrakk>?e |]
      ==> {} \<turnstile> ?t EQ ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_hole 5)
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 0), template_var 2),
          template_app
           (template_app (template_hole 3, template_var 0),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("Sigma.ground_prove_SUBS",
     "[| ground ?t; ground ?u;
         \<lbrakk>?t\<rbrakk>?e <= \<lbrakk>?u\<rbrakk>?e |]
      ==> {} \<turnstile> ?t SUBS ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_hole 5)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 0), template_var 2),
          template_app
           (template_app (template_hole 3, template_var 0),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("Hilbert_Choice.Ex_inj_on_UNION_Sigma",
     "EX f. inj_on f (\<Union> (?A ` ?I)) &
            f ` \<Union> (?A ` ?I) <= Sigma ?I ?A",
     template_predicate (template_app (template_hole 7, t_empty))),
    ("Groups_Big.card_SigmaI",
     "[| finite ?A; ALL a:?A. finite (?B a) |]
      ==> card (Sigma ?A ?B) = (SUM a:?A. card (?B a))",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1), t_empty)
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1), t_empty)),
         template_app
          (template_app (template_hole 1, t_empty), template_var 1)))),
    ("Sigma.Sigma_fm_All2_Var",
     "[| Sigma_fm ?A; atom ?j \<sharp> (?i, ?A) |]
      ==> Sigma_fm (All2 ?i (Var ?j) ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)),
              template_app
               (template_app (template_hole 5, template_var 0),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_hole 8,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_hole 4,
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_hole 0, template_var 0)),
                           template_app
                            (template_hole 0, template_var 1)))),
                     template_var 2)))))
           ))),
    ("Sigma.Eq_Eats_sf",
     "[| !!j. Sigma_fm (Var j EQ ?t); !!k. Sigma_fm (Var k EQ ?u) |]
      ==> Sigma_fm (Var ?i EQ Eats ?t ?u)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)))
           ))),
    ("Sigma.Eats_Mem_sf",
     "[| !!j. Sigma_fm (Var j EQ ?t); !!k. Sigma_fm (Var k EQ ?u) |]
      ==> Sigma_fm (Eats ?t ?u IN Var ?i)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_app (template_hole 2, template_var 0)))
           ))),
    ("Sigma.Subset_Eats_sf",
     "[| !!j. Sigma_fm (Var j IN ?t); !!k. Sigma_fm (Var k EQ ?u) |]
      ==> Sigma_fm (Var ?i SUBS Eats ?t ?u)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 3, template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)))
           ))),
    ("Product_Type.Sigma_mono",
     "[| ?A <= ?C; !!x. x : ?A ==> ?B x <= ?D x |]
      ==> Sigma ?A ?B <= Sigma ?C ?D",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Old_Datatype.dprod_subset_Sigma",
     "[| ?r <= ?A \<times> ?B; ?s <= ?C \<times> ?D |]
      ==> dprod ?r ?s <= uprod ?A ?C \<times> uprod ?B ?D",
     template_implication
      ([template_inequation
         (less_equals, template_var 5,
          template_app
           (template_app (template_hole 2, template_var 4), t_empty)),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 2, template_var 1), t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 5), template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1)),
           t_empty)))),
    ("Old_Datatype.dsum_subset_Sigma",
     "[| ?r <= ?A \<times> ?B; ?s <= ?C \<times> ?D |]
      ==> dsum ?r ?s <= usum ?A ?C \<times> usum ?B ?D",
     template_implication
      ([template_inequation
         (less_equals, template_var 5,
          template_app
           (template_app (template_hole 2, template_var 4), t_empty)),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 2, template_var 1), t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 5), template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1)),
           t_empty)))),
    ("Sigma.eval_fm_All2_Iff_elts",
     "ground ?t ==>
      eval_fm ?e (All2 ?i ?t ?A) =
      (ALL u:elts ?t. eval_fm ?e (?A(?i::=u)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_hole 10)
            )],
       template_equation
        (template_app
          (template_app (template_hole 8, template_var 2),
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 1),
               template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app (template_hole 3, template_var 1)),
                         template_var 3))),
                   template_var 0))))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 3)),
           t_empty)))),
    ("Predicates.HFun_Sigma_E",
     "[| ?H \<turnstile> HFun_Sigma ?r; ?H \<turnstile> HPair ?a ?b IN ?r;
         ?H \<turnstile> HPair ?a ?b' IN ?r |]
      ==> ?H \<turnstile> ?b EQ ?b'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app (template_hole 3, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1)),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 0)),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 4),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Product_Type.Sigma_cong",
     "[| ?A = ?B; !!x. x : ?B ==> ?C x = ?D x |]
      ==> Sigma ?A ?C = Sigma ?B ?D",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), t_empty),
         template_app
          (template_app (template_hole 0, template_var 2), t_empty)))),
    ("Finite_Set.finite_SigmaI2",
     "[| finite {x: ?A. ?B x ~= {}}; !!a. a : ?A ==> finite (?B a) |]
      ==> finite (Sigma ?A ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10, template_app (template_hole 9, t_empty))
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("HF.HSigmaE",
     "[| ?c <: HSigma ?A ?B;
         !!x y. [| x <: ?A; y <: ?B x; ?c = <x, y> |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Product_Type.SigmaE",
     "[| ?c : Sigma ?A ?B;
         !!x y. [| x : ?A; y : ?B x; ?c = (x, y) |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Sigma.prove_elts_imp_prove_All2",
     "[| ground ?t; !!u. u : elts ?t ==> {} \<turnstile> ?A(?i::=u) |]
      ==> {} \<turnstile> All2 ?i ?t ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_hole 11)
            ),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_hole 4,
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_hole 0, template_var 0)),
                           template_var 2))),
                     template_var 1)))))
           ))),
    ("Sigma.eval_fm_All2_Eats",
     "atom ?i \<sharp> (?t, ?u) ==>
      eval_fm ?e (All2 ?i (Eats ?t ?u) ?A) =
      (eval_fm ?e (?A(?i::=?u)) & eval_fm ?e (All2 ?i ?t ?A))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 4)),
              template_app
               (template_app (template_hole 10, template_var 3),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 8, template_var 1),
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 4),
               template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app (template_hole 3, template_var 4)),
                         template_app
                          (template_app (template_hole 2, template_var 3),
                           template_var 2)))),
                   template_var 0))))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 8, template_var 1),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 4),
                 template_var 2))),
           template_app
            (template_app (template_hole 8, template_var 1),
             template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 4),
                 template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_hole 7,
                         template_app
                          (template_app
                            (template_hole 4,
                             template_app
                              (template_hole 3, template_var 4)),
                           template_var 3))),
                     template_var 0))))))))),
    ("Predicates.HFun_Sigma_Mem_imp_HPair",
     "[| ?H \<turnstile> HFun_Sigma ?r; ?H \<turnstile> ?a IN ?r;
         atom ?x \<sharp> (?y, ?a, ?r); atom ?y \<sharp> (?a, ?r) |]
      ==> ?H \<turnstile>
          SyntaxN.Ex ?x (SyntaxN.Ex ?y (?a EQ HPair (Var ?x) (Var ?y)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 4),
              template_app (template_hole 10, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 4),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)),
              template_app
               (template_app (template_hole 6, template_var 0),
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 7, template_var 0)),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 11, template_var 4),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 1)),
                     template_app (template_hole 0, template_var 0))))))
           ))),
    ("Sigma.Eq_Eats_Iff",
     "atom ?i \<sharp> (?z, ?x, ?y) ==>
      {} \<turnstile>
      ?z EQ Eats ?x ?y IFF
      All2 ?i ?z (Var ?i IN ?x OR Var ?i EQ ?y) AND
      ?x SUBS ?z AND ?y IN ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app (template_hole 14, template_var 3)),
              template_app
               (template_app (template_hole 13, template_var 2),
                template_app
                 (template_app (template_hole 12, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 11, template_hole 10),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 2),
                   template_app
                    (template_app (template_hole 7, template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 3),
                       template_app
                        (template_hole 5,
                         template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_app
                                  (template_hole 2,
                                   template_app
                                    (template_hole 1, template_var 3)),
                                 template_var 2))),
                           template_app
                            (template_app
                              (template_hole 3,
                               template_app
                                (template_app
                                  (template_hole 2,
                                   template_app
                                    (template_hole 1, template_var 3)),
                                 template_var 1)),
                             template_app
                              (template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 1, template_var 3)),
                               template_var 0))))))),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 2)),
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_var 2)))))
           ))),
    ("Sigma.ground_prove",
     "[| size ?t + size ?u < ?n; ground ?t; ground ?u |]
      ==> (\<lbrakk>?t\<rbrakk>?e <= \<lbrakk>?u\<rbrakk>?e -->
           {} \<turnstile> ?t SUBS ?u) &
          (\<lbrakk>?t\<rbrakk>?e <: \<lbrakk>?u\<rbrakk>?e -->
           {} \<turnstile> ?t IN ?u)",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 12,
              template_app (template_hole 11, template_var 3)),
            template_app (template_hole 11, template_var 2)),
          template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_hole 9)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_hole 9)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 5, template_var 0),
                         template_var 3)),
                     template_app
                      (template_app (template_hole 5, template_var 0),
                       template_var 2))),
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 2)))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 5, template_var 0),
                       template_var 3)),
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_var 2))),
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2))))
           ))),
    ("Sigma.All2_term_Iff",
     "[| atom ?i \<sharp> ?t; atom ?j \<sharp> (?i, ?t, ?A) |]
      ==> {} \<turnstile>
          All2 ?i ?t ?A IFF
          SyntaxN.Ex ?j (Var ?j EQ ?t AND All2 ?i (Var ?j) ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app (template_hole 13, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 13, template_var 1)),
              template_app
               (template_app (template_hole 11, template_var 3),
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 9, template_hole 8),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 3),
                     template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_app
                                (template_hole 3,
                                 template_app
                                  (template_hole 2, template_var 3)),
                               template_var 2))),
                         template_var 0))))),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app (template_hole 2, template_var 1)),
                       template_var 2)),
                   template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 3),
                       template_app
                        (template_hole 6,
                         template_app
                          (template_app
                            (template_hole 4,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_app
                                  (template_hole 3,
                                   template_app
                                    (template_hole 2, template_var 3)),
                                 template_app
                                  (template_hole 2, template_var 1)))),
                           template_var 0))))))))
           ))),
    ("Sigma.All2_term_Iff_fresh",
     "[| ?i ~= ?j; atom ?j' \<sharp> (?i, ?j, ?A) |]
      ==> {} \<turnstile>
          All2 ?i (Var ?j) ?A IFF
          SyntaxN.Ex ?j' (Var ?j EQ Var ?j' AND All2 ?i (Var ?j') ?A)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 1)),
              template_app
               (template_app (template_hole 11, template_var 3),
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 9, template_hole 8),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 3),
                     template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_app
                                (template_hole 3,
                                 template_app
                                  (template_hole 2, template_var 3)),
                               template_app
                                (template_hole 2, template_var 2)))),
                         template_var 0))))),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app (template_hole 2, template_var 2)),
                       template_app (template_hole 2, template_var 1))),
                   template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 3),
                       template_app
                        (template_hole 6,
                         template_app
                          (template_app
                            (template_hole 4,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_app
                                  (template_hole 3,
                                   template_app
                                    (template_hole 2, template_var 3)),
                                 template_app
                                  (template_hole 2, template_var 1)))),
                           template_var 0))))))))
           ))),
    ("Sigma.HFun_Sigma_Iff",
     "[| atom ?z \<sharp> (?r, ?z', ?x, ?y, ?x', ?y');
         atom ?z' \<sharp> (?r, ?x, ?y, ?x', ?y');
         atom ?x \<sharp> (?r, ?y, ?x', ?y');
         atom ?y \<sharp> (?r, ?x', ?y'); atom ?x' \<sharp> (?r, ?y');
         atom ?y' \<sharp> ?r |]
      ==> {} \<turnstile>
          HFun_Sigma ?r IFF
          All2 ?z ?r
           (All2 ?z' ?r
             (SyntaxN.Ex ?x
               (SyntaxN.Ex ?y
                 (SyntaxN.Ex ?x'
                   (SyntaxN.Ex ?y'
                     (Var ?z EQ HPair (Var ?x) (Var ?y) AND
                      Var ?z' EQ HPair (Var ?x') (Var ?y') AND
                      OrdP (Var ?x) AND
                      OrdP (Var ?x') AND
                      (Var ?x NEQ Var ?x' OR Var ?y EQ Var ?y')))))))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 29,
                template_app (template_hole 28, template_var 6)),
              template_app
               (template_app (template_hole 27, template_var 5),
                template_app
                 (template_app (template_hole 26, template_var 4),
                  template_app
                   (template_app (template_hole 25, template_var 3),
                    template_app
                     (template_app (template_hole 24, template_var 2),
                      template_app
                       (template_app (template_hole 23, template_var 1),
                        template_var 0))))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app (template_hole 28, template_var 4)),
              template_app
               (template_app (template_hole 21, template_var 5),
                template_app
                 (template_app (template_hole 25, template_var 3),
                  template_app
                   (template_app (template_hole 24, template_var 2),
                    template_app
                     (template_app (template_hole 23, template_var 1),
                      template_var 0)))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app (template_hole 28, template_var 3)),
              template_app
               (template_app (template_hole 19, template_var 5),
                template_app
                 (template_app (template_hole 24, template_var 2),
                  template_app
                   (template_app (template_hole 23, template_var 1),
                    template_var 0))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app (template_hole 28, template_var 2)),
              template_app
               (template_app (template_hole 17, template_var 5),
                template_app
                 (template_app (template_hole 23, template_var 1),
                  template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app (template_hole 28, template_var 1)),
              template_app
               (template_app (template_hole 15, template_var 5),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app (template_hole 28, template_var 0)),
              template_var 5)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 13, template_hole 12),
             template_app
              (template_app
                (template_hole 11,
                 template_app (template_hole 10, template_var 5)),
               template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 6),
                   template_app
                    (template_hole 9,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_hole 9,
                           template_app
                            (template_app
                              (template_hole 6,
                               template_app
                                (template_hole 5, template_var 6)),
                             template_var 5))),
                       template_app
                        (template_hole 9,
                         template_app
                          (template_app (template_hole 8, template_var 4),
                           template_app
                            (template_hole 9,
                             template_app
                              (template_app
                                (template_hole 7,
                                 template_app
                                  (template_hole 9,
                                   template_app
                                    (template_app
(template_hole 6, template_app (template_hole 5, template_var 4)),
                                     template_var 5))),
                               template_app
                                (template_app
                                  (template_hole 8, template_var 3),
                                 template_app
                                  (template_app
                                    (template_hole 8, template_var 2),
                                   template_app
                                    (template_app
(template_hole 8, template_var 1),
                                     template_app
(template_app (template_hole 8, template_var 0),
 template_app
  (template_app
    (template_hole 4,
     template_app
      (template_app
        (template_hole 3, template_app (template_hole 5, template_var 6)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 5, template_var 3)),
         template_app (template_hole 5, template_var 2)))),
   template_app
    (template_app
      (template_hole 4,
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 5, template_var 4)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 5, template_var 1)),
           template_app (template_hole 5, template_var 0)))),
     template_app
      (template_app
        (template_hole 4,
         template_app
          (template_hole 1,
           template_app (template_hole 5, template_var 3))),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 1,
             template_app (template_hole 5, template_var 1))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 5, template_var 3)),
               template_app (template_hole 5, template_var 1))),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 5, template_var 2)),
             template_app
              (template_hole 5, template_var 0)))))))))))))))))))))
           )))]
