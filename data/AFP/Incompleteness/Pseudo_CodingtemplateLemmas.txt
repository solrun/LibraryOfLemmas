   [("Pseudo_Coding.fresh_star_empty", "{} \<sharp>* ?bs",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Pseudo_Coding.ssubst_empty", "ssubst ?t {} ?F = ?t",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_var 0),
       template_var 1)),
    ("Pseudo_Coding.atom_in_atom_image",
     "(atom ?j : atom ` ?V) = (?j : ?V)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app
          (template_app (template_hole 1, template_hole 2),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Pseudo_Coding.fresh_image_atom",
     "finite ?A ==> ?i \<sharp> atom ` ?A = ?i \<sharp> ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Pseudo_Coding.atom_fresh_star_atom_set_conv",
     "[| atom ?i \<sharp> ?bs; finite ?bs |] ==> ?bs \<sharp>* ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Pseudo_Coding.NEQ_quot_tm",
     "?i ~= ?j ==>
      {} \<turnstile>
      \<guillemotleft>Var ?i\<guillemotright> NEQ
      \<guillemotleft>Var ?j\<guillemotright>",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1))),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("Pseudo_Coding.fresh_image",
     "finite ?A ==> ?i \<sharp> ?f ` ?A = (ALL x:?A. ?i \<sharp> ?f x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 2), t_empty)))),
    ("Pseudo_Coding.fresh_star_finite_insert",
     "finite ?S ==>
      ?a \<sharp>* insert ?x ?S = (?a \<sharp>* ?x & ?a \<sharp>* ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 2))))),
    ("Pseudo_Coding.EQ_quot_tm_Fls",
     "?i ~= ?j ==>
      insert
       (\<guillemotleft>Var ?i\<guillemotright> EQ
        \<guillemotleft>Var ?j\<guillemotright>)
       ?H \<turnstile>
      Fls",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app (template_hole 1, template_var 2))),
                     template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_var 1)))),
                 template_var 0)),
             template_hole 0)
           ))),
    ("Pseudo_Coding.fresh_finite_Diff_single",
     "finite ?V ==>
      ?a \<sharp> ?V - {?j} = (?a \<sharp> ?j --> ?a \<sharp> ?V)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 2))))),
    ("Pseudo_Coding.perm_commute",
     "[| ?a \<sharp> ?p; ?a' \<sharp> ?p |]
      ==> (?a \<rightleftharpoons> ?a') + ?p =
          ?p + (?a \<rightleftharpoons> ?a')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Pseudo_Coding.notin_V",
     "[| atom ?i \<sharp> ?p; finite ?V;
         atom ` (?p \<bullet> ?V) \<sharp>* ?V |]
      ==> ?i ~: ?V",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_hole 6),
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_var 0))),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)
               )
           ))),
    ("Pseudo_Coding.notin_V",
     "[| atom ?i \<sharp> ?p; finite ?V;
         atom ` (?p \<bullet> ?V) \<sharp>* ?V |]
      ==> ?i ~: ?p \<bullet> ?V",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_hole 6),
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_var 0))),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0))
               )
           ))),
    ("Pseudo_Coding.perm_self_inverseI",
     "[| - ?p = ?q; ?a \<sharp> ?p; ?a' \<sharp> ?p |]
      ==> - ((?a \<rightleftharpoons> ?a') + ?p) =
          (?a \<rightleftharpoons> ?a') + ?q",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 3), template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 3)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2)))),
    ("Pseudo_Coding.Collect_disj_Un",
     "{?f i |i. ?P i | ?Q i} = {?f i |i. ?P i} Un {?f i |i. ?Q i}",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 5, t_empty)),
         template_app (template_hole 5, t_empty))))]
