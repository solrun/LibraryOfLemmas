Loading theory "Draft.Intensional" (required by "Draft.LivenessTemplates" via "Draft.Liveness" via "Draft.Rules" via "Draft.PreFormulas" via "Draft.Semantics")
Loading theory "Draft.Sequence" (required by "Draft.LivenessTemplates" via "Draft.Liveness" via "Draft.Rules" via "Draft.PreFormulas" via "Draft.Semantics")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.LivenessTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.LivenessTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.133s elapsed time, 0.546s cpu time, 0.045s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.LivenessTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Intensional"
### 0.256s elapsed time, 1.034s cpu time, 0.045s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.LivenessTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Nat_Bijection"
### 0.319s elapsed time, 1.271s cpu time, 0.125s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.LivenessTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.212s elapsed time, 0.833s cpu time, 0.080s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.LivenessTemplates" via "Draft.ExtrEqs")
### theory "Draft.Sequence"
### 0.365s elapsed time, 1.453s cpu time, 0.125s GC time
Loading theory "Draft.Semantics" (required by "Draft.LivenessTemplates" via "Draft.Liveness" via "Draft.Rules" via "Draft.PreFormulas")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
### theory "Draft.Semantics"
### 0.420s elapsed time, 1.661s cpu time, 0.213s GC time
Loading theory "Draft.PreFormulas" (required by "Draft.LivenessTemplates" via "Draft.Liveness" via "Draft.Rules")
consts
  left :: "'a tree => 'a tree"
consts
  snth :: "'a stream => nat => 'a"
consts
  right :: "'a tree => 'a tree"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
val unl_rewr = fn: Proof.context -> thm -> thm
val int_rewr = fn: thm -> thm
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
### theory "Draft.PreFormulas"
### 0.153s elapsed time, 0.612s cpu time, 0.072s GC time
Loading theory "Draft.Rules" (required by "Draft.LivenessTemplates" via "Draft.Liveness")
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.035s elapsed time, 3.943s cpu time, 0.975s GC time
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.145s elapsed time, 4.326s cpu time, 1.097s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Rules"
### 0.664s elapsed time, 2.114s cpu time, 0.813s GC time
Loading theory "Draft.Liveness" (required by "Draft.LivenessTemplates")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Liveness"
### 0.140s elapsed time, 0.332s cpu time, 0.105s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.005s elapsed time, 5.798s cpu time, 1.361s GC time
Loading theory "Draft.Templates" (required by "Draft.LivenessTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.065s elapsed time, 0.114s cpu time, 0.046s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.LivenessTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.466s elapsed time, 0.471s cpu time, 0.000s GC time
Loading theory "Draft.LivenessTemplates"
val templateLemmas =
   [("Liveness.stut_Enabled", "STUTINV Enabled <?F>_?v",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("Liveness.enabledI", "|- ?F --> Enabled ?F",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 0),
             template_app (template_hole 0, template_var 0)))
         )),
    ("Liveness.stut_SF", "NSTUTINV ?F ==> STUTINV SF(?F)_?v",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Liveness.stut_WF", "NSTUTINV ?F ==> STUTINV WF(?F)_?v",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Liveness.SF_imp_WF", "|- SF(?A)_?v --> WF(?A)_?v",
     template_predicate
      (
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("Liveness.Enabled_disj1", "|- Enabled ?F --> Enabled (?F | ?G)",
     template_predicate
      (
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 0),
                   template_var 1),
                 template_var 0))))
         )),
    ("Liveness.Enabled_disj2", "|- Enabled ?F --> Enabled (?G | ?F)",
     template_predicate
      (
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 0),
                   template_var 0),
                 template_var 1))))
         )),
    ("Liveness.Enabled_conj1", "|- Enabled (?F & ?G) --> Enabled ?F",
     template_predicate
      (
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 0),
                     template_var 1),
                   template_var 0))),
             template_app (template_hole 1, template_var 1)))
         )),
    ("Liveness.Enabled_conj2", "|- Enabled (?G & ?F) --> Enabled ?F",
     template_predicate
      (
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 0),
                     template_var 1),
                   template_var 0))),
             template_app (template_hole 1, template_var 0)))
         )),
    ("Liveness.SF_always", "|- []SF(?A)_?v = SF(?A)_?v",
     template_predicate
      (
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("Liveness.WF_always", "|- []WF(?A)_?v = WF(?A)_?v",
     template_predicate
      (
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("Liveness.SF_eventually", "|- <>SF(?A)_?v = SF(?A)_?v",
     template_predicate
      (
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("Liveness.WF_eventually", "|- <>WF(?A)_?v = WF(?A)_?v",
     template_predicate
      (
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("Liveness.alwaysSFI", "|- SF(?A)_?v --> []SF(?A)_?v",
     template_predicate
      (
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0))))
         )),
    ("Liveness.alwaysWFI", "|- WF(?A)_?v --> []WF(?A)_?v",
     template_predicate
      (
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0))))
         )),
    ("Liveness.Enabled_ex",
     "|- Enabled (EX x. ?F x) = (EX x. Enabled ?F x)",
     template_predicate
      (
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_hole 1, template_app (template_hole 0, t_empty))),
             template_app (template_hole 0, t_empty)))
         )),
    ("Liveness.Enabled_disj",
     "|- Enabled (?F | ?G) = (Enabled ?F | Enabled ?G)",
     template_predicate
      (
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 0),
                     template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 0),
                 template_app (template_hole 1, template_var 1)),
               template_app (template_hole 1, template_var 0))))
         )),
    ("Liveness.Enabled_disjD",
     "|- Enabled (?F | ?G) --> Enabled ?F | Enabled ?G",
     template_predicate
      (
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 0),
                     template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 0),
                 template_app (template_hole 1, template_var 1)),
               template_app (template_hole 1, template_var 0))))
         )),
    ("Liveness.enabled_mono",
     "[| (Enabled ?F) ?w; |- ?F --> ?G |] ==> (Enabled ?G) ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app
                 (template_app (template_hole 1, template_hole 0),
                  template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0), template_var 1)
           ))),
    ("Liveness.enabled_WFSF",
     "|- []Enabled <?F>_?v --> WF(?F)_?v = SF(?F)_?v",
     template_predicate
      (
         template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_hole 6),
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_var 0)))),
             template_app
              (template_app
                (template_app (template_hole 7, template_hole 2),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))))
         )),
    ("Liveness.enabledE",
     "[| (Enabled ?F) ?s; !!u. ?F (first ?s ## u) ==> ?Q |] ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Liveness.SF_alt",
     "|- SF(?A)_?v = (<>[]~ Enabled <?A>_?v | []<><?A>_?v)",
     template_predicate
      (
         template_app
          (template_hole 11,
           template_app
            (template_app
              (template_app (template_hole 10, template_hole 9),
               template_app
                (template_app (template_hole 8, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 10, template_hole 7),
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 1),
                           template_var 0)))))),
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)))))
         )),
    ("Liveness.WF_alt",
     "|- WF(?A)_?v = ([]<>~ Enabled <?A>_?v | []<><?A>_?v)",
     template_predicate
      (
         template_app
          (template_hole 11,
           template_app
            (template_app
              (template_app (template_hole 10, template_hole 9),
               template_app
                (template_app (template_hole 8, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 10, template_hole 7),
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 1),
                           template_var 0)))))),
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)))))
         )),
    ("Liveness.wf_leadsto",
     "[| wf ?r; !!x. |- ?F x ~> ?G | (EX y. #((y, x) : ?r) & ?F y) |]
      ==> |- ?F ?x ~> ?G",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 3)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_var 2, template_var 0)),
               template_var 1))
           ))),
    ("Liveness.WF1_general",
     "[| |~ ?P & ?N --> Next ?P | Next ?Q; |~ ?P & ?N & <?A>_?v --> Next ?Q;
         |- ?P & ?N --> Enabled <?A>_?v; |~ ?P & Unchanged ?w --> Next ?P |]
      ==> |- []?N & WF(?A)_?v --> ?P ~> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 12,
              template_app
               (template_app
                 (template_app (template_hole 11, template_hole 10),
                  template_app
                   (template_app
                     (template_app (template_hole 11, template_hole 9),
                      template_var 5),
                    template_var 4)),
                template_app
                 (template_app
                   (template_app (template_hole 11, template_hole 8),
                    template_app (template_hole 7, template_var 5)),
                  template_app (template_hole 7, template_var 3))))
            ),
        template_predicate
         (
            template_app
             (template_hole 12,
              template_app
               (template_app
                 (template_app (template_hole 11, template_hole 10),
                  template_app
                   (template_app
                     (template_app (template_hole 11, template_hole 9),
                      template_var 5),
                    template_app
                     (template_app
                       (template_app (template_hole 11, template_hole 9),
                        template_var 4),
                      template_app
                       (template_app (template_hole 6, template_var 2),
                        template_var 1)))),
                template_app (template_hole 7, template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_app (template_hole 11, template_hole 10),
                  template_app
                   (template_app
                     (template_app (template_hole 11, template_hole 9),
                      template_var 5),
                    template_var 4)),
                template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_var 1))))
            ),
        template_predicate
         (
            template_app
             (template_hole 12,
              template_app
               (template_app
                 (template_app (template_hole 11, template_hole 10),
                  template_app
                   (template_app
                     (template_app (template_hole 11, template_hole 9),
                      template_var 5),
                    template_app (template_hole 3, template_var 0))),
                template_app (template_hole 7, template_var 5)))
            )],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 11, template_hole 10),
                 template_app
                  (template_app
                    (template_app (template_hole 11, template_hole 9),
                     template_app (template_hole 2, template_var 4)),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1))),
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 3)))
           ))),
    ("Liveness.WF1",
     "[| |~ ?P & [?N]_?v --> Next ?P | Next ?Q;
         |~ ?P & <?N & ?A>_?v --> Next ?Q; |- ?P --> Enabled <?A>_?v;
         |~ ?P & Unchanged ?v --> Next ?P |]
      ==> |- [][?N]_?v & WF(?A)_?v --> ?P ~> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 13,
              template_app
               (template_app
                 (template_app (template_hole 12, template_hole 11),
                  template_app
                   (template_app
                     (template_app (template_hole 12, template_hole 10),
                      template_var 4),
                    template_app
                     (template_app (template_hole 9, template_var 3),
                      template_var 2))),
                template_app
                 (template_app
                   (template_app (template_hole 12, template_hole 8),
                    template_app (template_hole 7, template_var 4)),
                  template_app (template_hole 7, template_var 1))))
            ),
        template_predicate
         (
            template_app
             (template_hole 13,
              template_app
               (template_app
                 (template_app (template_hole 12, template_hole 11),
                  template_app
                   (template_app
                     (template_app (template_hole 12, template_hole 10),
                      template_var 4),
                    template_app
                     (template_app
                       (template_hole 6,
                        template_app
                         (template_app
                           (template_app
                             (template_hole 12, template_hole 10),
                            template_var 3),
                          template_var 0)),
                      template_var 2))),
                template_app (template_hole 7, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_app (template_hole 12, template_hole 11),
                  template_var 4),
                template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 6, template_var 0),
                    template_var 2))))
            ),
        template_predicate
         (
            template_app
             (template_hole 13,
              template_app
               (template_app
                 (template_app (template_hole 12, template_hole 11),
                  template_app
                   (template_app
                     (template_app (template_hole 12, template_hole 10),
                      template_var 4),
                    template_app (template_hole 3, template_var 2))),
                template_app (template_hole 7, template_var 4)))
            )],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 12, template_hole 11),
                 template_app
                  (template_app
                    (template_app (template_hole 12, template_hole 10),
                     template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 2)),
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 2))),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1)))
           ))),
    ("Liveness.SF1_general",
     "[| |~ ?P & ?N --> Next ?P | Next ?Q; |~ ?P & ?N & <?A>_?v --> Next ?Q;
         |- []?P & []?N & []?F --> <>Enabled <?A>_?v;
         |~ ?P & Unchanged ?w --> Next ?P |]
      ==> |- []?N & SF(?A)_?v & []?F --> ?P ~> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 13,
              template_app
               (template_app
                 (template_app (template_hole 12, template_hole 11),
                  template_app
                   (template_app
                     (template_app (template_hole 12, template_hole 10),
                      template_var 6),
                    template_var 5)),
                template_app
                 (template_app
                   (template_app (template_hole 12, template_hole 9),
                    template_app (template_hole 8, template_var 6)),
                  template_app (template_hole 8, template_var 4))))
            ),
        template_predicate
         (
            template_app
             (template_hole 13,
              template_app
               (template_app
                 (template_app (template_hole 12, template_hole 11),
                  template_app
                   (template_app
                     (template_app (template_hole 12, template_hole 10),
                      template_var 6),
                    template_app
                     (template_app
                       (template_app (template_hole 12, template_hole 10),
                        template_var 5),
                      template_app
                       (template_app (template_hole 7, template_var 3),
                        template_var 2)))),
                template_app (template_hole 8, template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_app (template_hole 12, template_hole 11),
                  template_app
                   (template_app
                     (template_app (template_hole 12, template_hole 10),
                      template_app (template_hole 5, template_var 6)),
                    template_app
                     (template_app
                       (template_app (template_hole 12, template_hole 10),
                        template_app (template_hole 5, template_var 5)),
                      template_app (template_hole 5, template_var 1)))),
                template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 7, template_var 3),
                      template_var 2)))))
            ),
        template_predicate
         (
            template_app
             (template_hole 13,
              template_app
               (template_app
                 (template_app (template_hole 12, template_hole 11),
                  template_app
                   (template_app
                     (template_app (template_hole 12, template_hole 10),
                      template_var 6),
                    template_app (template_hole 2, template_var 0))),
                template_app (template_hole 8, template_var 6)))
            )],
       template_predicate
        (
           template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 12, template_hole 11),
                 template_app
                  (template_app
                    (template_app (template_hole 12, template_hole 10),
                     template_app (template_hole 5, template_var 5)),
                   template_app
                    (template_app
                      (template_app (template_hole 12, template_hole 10),
                       template_app
                        (template_app (template_hole 1, template_var 3),
                         template_var 2)),
                     template_app (template_hole 5, template_var 1)))),
               template_app
                (template_app (template_hole 0, template_var 6),
                 template_var 4)))
           ))),
    ("Liveness.SF1",
     "[| |~ ?P & [?N]_?v --> Next ?P | Next ?Q;
         |~ ?P & <?N & ?A>_?v --> Next ?Q;
         |- []?P & [][?N]_?v & []?F --> <>Enabled <?A>_?v;
         |~ ?P & Unchanged ?v --> Next ?P |]
      ==> |- [][?N]_?v & SF(?A)_?v & []?F --> ?P ~> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 15,
              template_app
               (template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_app
                   (template_app
                     (template_app (template_hole 14, template_hole 12),
                      template_var 5),
                    template_app
                     (template_app (template_hole 11, template_var 4),
                      template_var 3))),
                template_app
                 (template_app
                   (template_app (template_hole 14, template_hole 10),
                    template_app (template_hole 9, template_var 5)),
                  template_app (template_hole 9, template_var 2))))
            ),
        template_predicate
         (
            template_app
             (template_hole 15,
              template_app
               (template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_app
                   (template_app
                     (template_app (template_hole 14, template_hole 12),
                      template_var 5),
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_app
                           (template_app
                             (template_hole 14, template_hole 12),
                            template_var 4),
                          template_var 1)),
                      template_var 3))),
                template_app (template_hole 9, template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_app
                   (template_app
                     (template_app (template_hole 14, template_hole 12),
                      template_app (template_hole 6, template_var 5)),
                    template_app
                     (template_app
                       (template_app (template_hole 14, template_hole 12),
                        template_app
                         (template_app (template_hole 5, template_var 4),
                          template_var 3)),
                      template_app (template_hole 6, template_var 0)))),
                template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 8, template_var 1),
                      template_var 3)))))
            ),
        template_predicate
         (
            template_app
             (template_hole 15,
              template_app
               (template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_app
                   (template_app
                     (template_app (template_hole 14, template_hole 12),
                      template_var 5),
                    template_app (template_hole 2, template_var 3))),
                template_app (template_hole 9, template_var 5)))
            )],
       template_predicate
        (
           template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app (template_hole 14, template_hole 13),
                 template_app
                  (template_app
                    (template_app (template_hole 14, template_hole 12),
                     template_app
                      (template_app (template_hole 5, template_var 4),
                       template_var 3)),
                   template_app
                    (template_app
                      (template_app (template_hole 14, template_hole 12),
                       template_app
                        (template_app (template_hole 1, template_var 1),
                         template_var 3)),
                     template_app (template_hole 6, template_var 0)))),
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 2)))
           ))),
    ("Liveness.SF2",
     "[| |~ <?N & ?B>_?f --> <?M>_?g; |~ ?P & Next ?P & <?N & ?A>_?f --> ?B;
         |- ?P & Enabled <?M>_?g --> Enabled <?A>_?f;
         |- [][?N & ~ ?B]_?f & SF(?A)_?f & []?F & []<>Enabled <?M>_?g -->
            <>[]?P |]
      ==> |- [][?N]_?f & SF(?A)_?f & []?F --> SF(?M)_?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 15,
              template_app
               (template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_app
                   (template_app
                     (template_hole 12,
                      template_app
                       (template_app
                         (template_app (template_hole 14, template_hole 11),
                          template_var 7),
                        template_var 6)),
                    template_var 5)),
                template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_hole 15,
              template_app
               (template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_app
                   (template_app
                     (template_app (template_hole 14, template_hole 11),
                      template_var 2),
                    template_app
                     (template_app
                       (template_app (template_hole 14, template_hole 11),
                        template_app (template_hole 9, template_var 2)),
                      template_app
                       (template_app
                         (template_hole 12,
                          template_app
                           (template_app
                             (template_app
                               (template_hole 14, template_hole 11),
                              template_var 7),
                            template_var 1)),
                        template_var 5)))),
                template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_app
                   (template_app
                     (template_app (template_hole 14, template_hole 11),
                      template_var 2),
                    template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 10, template_var 4),
                        template_var 3)))),
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 12, template_var 1),
                    template_var 5))))
            ),
        template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_app
                   (template_app
                     (template_app (template_hole 14, template_hole 11),
                      template_app
                       (template_app
                         (template_hole 6,
                          template_app
                           (template_app
                             (template_app
                               (template_hole 14, template_hole 11),
                              template_var 7),
                            template_app
                             (template_app
                               (template_hole 5, template_hole 4),
                              template_var 6))),
                        template_var 5)),
                    template_app
                     (template_app
                       (template_app (template_hole 14, template_hole 11),
                        template_app
                         (template_app (template_hole 3, template_var 1),
                          template_var 5)),
                      template_app
                       (template_app
                         (template_app (template_hole 14, template_hole 11),
                          template_app (template_hole 2, template_var 0)),
                        template_app
                         (template_hole 2,
                          template_app
                           (template_hole 1,
                            template_app
                             (template_hole 7,
                              template_app
                               (template_app
                                 (template_hole 10, template_var 4),
                                template_var 3)))))))),
                template_app
                 (template_hole 1,
                  template_app (template_hole 2, template_var 2))))
            )],
       template_predicate
        (
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_app (template_hole 14, template_hole 13),
                 template_app
                  (template_app
                    (template_app (template_hole 14, template_hole 11),
                     template_app
                      (template_app (template_hole 6, template_var 7),
                       template_var 5)),
                   template_app
                    (template_app
                      (template_app (template_hole 14, template_hole 11),
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_var 5)),
                     template_app (template_hole 2, template_var 0)))),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3)))
           ))),
    ("Liveness.WF2",
     "[| |~ <?N & ?B>_?f --> <?M>_?g; |~ ?P & Next ?P & <?N & ?A>_?f --> ?B;
         |- ?P & Enabled <?M>_?g --> Enabled <?A>_?f;
         |- [][?N & ~ ?B]_?f & WF(?A)_?f & []?F & <>[]Enabled <?M>_?g -->
            <>[]?P |]
      ==> |- [][?N]_?f & WF(?A)_?f & []?F --> WF(?M)_?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 15,
              template_app
               (template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_app
                   (template_app
                     (template_hole 12,
                      template_app
                       (template_app
                         (template_app (template_hole 14, template_hole 11),
                          template_var 7),
                        template_var 6)),
                    template_var 5)),
                template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_hole 15,
              template_app
               (template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_app
                   (template_app
                     (template_app (template_hole 14, template_hole 11),
                      template_var 2),
                    template_app
                     (template_app
                       (template_app (template_hole 14, template_hole 11),
                        template_app (template_hole 9, template_var 2)),
                      template_app
                       (template_app
                         (template_hole 12,
                          template_app
                           (template_app
                             (template_app
                               (template_hole 14, template_hole 11),
                              template_var 7),
                            template_var 1)),
                        template_var 5)))),
                template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_app
                   (template_app
                     (template_app (template_hole 14, template_hole 11),
                      template_var 2),
                    template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 10, template_var 4),
                        template_var 3)))),
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 12, template_var 1),
                    template_var 5))))
            ),
        template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_app
                   (template_app
                     (template_app (template_hole 14, template_hole 11),
                      template_app
                       (template_app
                         (template_hole 6,
                          template_app
                           (template_app
                             (template_app
                               (template_hole 14, template_hole 11),
                              template_var 7),
                            template_app
                             (template_app
                               (template_hole 5, template_hole 4),
                              template_var 6))),
                        template_var 5)),
                    template_app
                     (template_app
                       (template_app (template_hole 14, template_hole 11),
                        template_app
                         (template_app (template_hole 3, template_var 1),
                          template_var 5)),
                      template_app
                       (template_app
                         (template_app (template_hole 14, template_hole 11),
                          template_app (template_hole 2, template_var 0)),
                        template_app
                         (template_hole 1,
                          template_app
                           (template_hole 2,
                            template_app
                             (template_hole 7,
                              template_app
                               (template_app
                                 (template_hole 10, template_var 4),
                                template_var 3)))))))),
                template_app
                 (template_hole 1,
                  template_app (template_hole 2, template_var 2))))
            )],
       template_predicate
        (
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_app (template_hole 14, template_hole 13),
                 template_app
                  (template_app
                    (template_app (template_hole 14, template_hole 11),
                     template_app
                      (template_app (template_hole 6, template_var 7),
                       template_var 5)),
                   template_app
                    (template_app
                      (template_app (template_hole 14, template_hole 11),
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_var 5)),
                     template_app (template_hole 2, template_var 0)))),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3)))
           )))]:
   (string * thm * template) list
### theory "Draft.LivenessTemplates"
### 0.343s elapsed time, 0.487s cpu time, 0.065s GC time
val it = (): unit
