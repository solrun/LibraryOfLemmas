Loading theory "Draft.Intensional" (required by "Draft.BufferTemplates" via "Draft.Buffer" via "Draft.State" via "Draft.Liveness" via "Draft.Rules" via "Draft.PreFormulas" via "Draft.Semantics")
Loading theory "Draft.Sequence" (required by "Draft.BufferTemplates" via "Draft.Buffer" via "Draft.State" via "Draft.Liveness" via "Draft.Rules" via "Draft.PreFormulas" via "Draft.Semantics")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.BufferTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.BufferTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.127s elapsed time, 0.525s cpu time, 0.041s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.BufferTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
### theory "Draft.Intensional"
### 0.208s elapsed time, 0.853s cpu time, 0.041s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.BufferTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Nat_Bijection"
### 0.325s elapsed time, 1.307s cpu time, 0.120s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.BufferTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.218s elapsed time, 0.864s cpu time, 0.079s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.BufferTemplates" via "Draft.ExtrEqs")
### theory "Draft.Sequence"
### 0.345s elapsed time, 1.384s cpu time, 0.120s GC time
Loading theory "Draft.Semantics" (required by "Draft.BufferTemplates" via "Draft.Buffer" via "Draft.State" via "Draft.Liveness" via "Draft.Rules" via "Draft.PreFormulas")
consts
  shift :: "'a list => 'a stream => 'a stream"
### theory "Draft.Semantics"
### 0.364s elapsed time, 1.437s cpu time, 0.169s GC time
Loading theory "Draft.PreFormulas" (required by "Draft.BufferTemplates" via "Draft.Buffer" via "Draft.State" via "Draft.Liveness" via "Draft.Rules")
Proofs for coinductive predicate(s) "streamsp"
consts
  left :: "'a tree => 'a tree"
  Proving monotonicity ...
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
val unl_rewr = fn: Proof.context -> thm -> thm
consts
  sdrop :: "nat => 'a stream => 'a stream"
val int_rewr = fn: thm -> thm
Found termination order: "size <*mlex*> {}"
### theory "Draft.PreFormulas"
### 0.150s elapsed time, 0.595s cpu time, 0.060s GC time
Loading theory "Draft.Rules" (required by "Draft.BufferTemplates" via "Draft.Buffer" via "Draft.State" via "Draft.Liveness")
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
### theory "HOL-Library.BigO"
### 1.021s elapsed time, 3.902s cpu time, 0.955s GC time
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.076s elapsed time, 4.091s cpu time, 0.955s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Rules"
### 0.650s elapsed time, 2.162s cpu time, 0.726s GC time
Loading theory "Draft.Liveness" (required by "Draft.BufferTemplates" via "Draft.Buffer" via "Draft.State")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Liveness"
### 0.114s elapsed time, 0.228s cpu time, 0.000s GC time
Loading theory "Draft.State" (required by "Draft.BufferTemplates" via "Draft.Buffer")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "Draft.State"
### 0.045s elapsed time, 0.089s cpu time, 0.000s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.951s elapsed time, 5.768s cpu time, 1.236s GC time
Loading theory "Draft.Templates" (required by "Draft.BufferTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.047s elapsed time, 0.062s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.BufferTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.441s elapsed time, 0.447s cpu time, 0.000s GC time
*** Failed to load theory "Draft.Buffer" (unresolved "Draft.State")
*** Failed to load theory "Draft.BufferTemplates" (unresolved "Draft.Buffer")
*** Unknown ancestor theory "TLA.Sequence" (line 164 of "$AFP/TLA/State.thy")
*** At command "text" (line 161 of "$AFP/TLA/State.thy")
Exception- TOPLEVEL_ERROR raised
