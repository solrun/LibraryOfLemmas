   [("Comparator.lt_of_comp_of_ords",
     "lt_of_comp (comp_of_ords ?le ?lt) = ?lt",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Comparator.comp_of_ords_of_le_lt",
     "comp_of_ords (le_of_comp ?c) (lt_of_comp ?c) = ?c",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Comparator.comp_of_ords",
     "class.linorder ?le ?lt ==> comparator (comp_of_ords ?le ?lt)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Comparator.le_of_comp_of_ords_linorder",
     "class.linorder ?le ?lt ==> le_of_comp (comp_of_ords ?le ?lt) = ?le",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1))),
    ("Comparator.le_of_comp_of_ords_gen",
     "(!!x y. ?lt x y ==> ?le x y) ==>
      le_of_comp (comp_of_ords ?le ?lt) = ?le",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 0)))]
