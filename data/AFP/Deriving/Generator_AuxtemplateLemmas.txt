   [("Generator_Aux.refl_True", "(?x = ?x) = True",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("Generator_Aux.in_set_simps", "Ball (set []) ?P = True",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_var 0),
       template_hole 0)),
    ("Generator_Aux.in_set_simps", "(?x : set []) = False",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0),
         template_app (template_hole 2, template_hole 1)),
       template_hole 0)),
    ("Generator_Aux.in_set_simps", "Ball (set [?x]) ?P = ?P ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_var 0),
       template_app (template_var 0, template_var 1))),
    ("Generator_Aux.in_set_simps", "(?x : set [?y]) = (?x = ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_hole 1)))
            )],
       template_equation (template_var 1, template_var 0))),
    ("Generator_Aux.conj_weak_cong",
     "[| ?a = ?b; ?c = ?d |] ==> (?a & ?c) = (?b & ?d)",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_equation (template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Generator_Aux.in_set_simps",
     "Ball (set (?x # ?y # ?zs)) ?P = (?P ?x & Ball (set (?y # ?zs)) ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)))),
         template_var 0),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 0, template_var 3)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1))),
           template_var 0)))),
    ("Generator_Aux.in_set_simps",
     "(?x : set (?y # ?z # ?ys)) = (?x = ?y | ?x : set (?z # ?ys))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 4, template_var 3),
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0))))
           )))]
