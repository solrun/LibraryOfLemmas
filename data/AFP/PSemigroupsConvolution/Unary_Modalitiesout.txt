Loading theory "Draft.Quantales" (required by "Draft.Unary_ModalitiesTemplates" via "Draft.Unary_Modalities" via "Draft.Binary_Modalities")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Unary_ModalitiesTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Unary_ModalitiesTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Unary_ModalitiesTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.133s elapsed time, 0.543s cpu time, 0.037s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Unary_ModalitiesTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Set_Algebras"
### 0.216s elapsed time, 0.873s cpu time, 0.037s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Unary_ModalitiesTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.360s elapsed time, 1.432s cpu time, 0.106s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Unary_ModalitiesTemplates" via "Draft.ExtrEqs")
class proto_near_quantale = complete_lattice + times +
  assumes
    "Sup_distr":
      "!!X y. \<Squnion>X \<cdot> y = \<Squnion>{x \<cdot> y |x. x : X}"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.973s elapsed time, 3.687s cpu time, 0.796s GC time
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
class proto_pre_quantale = proto_near_quantale +
  assumes
    "Sup_subdistl":
      "!!x Y. \<Squnion>{x \<cdot> y |y. y : Y} <= x \<cdot> \<Squnion>Y"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.097s elapsed time, 3.958s cpu time, 0.802s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class weak_proto_quantale = proto_near_quantale +
  assumes
    "weak_Sup_distl":
      "!!Y x.
          Y ~= {} ==>
          x \<cdot> \<Squnion>Y = \<Squnion>{x \<cdot> y |y. y : Y}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.953s elapsed time, 6.149s cpu time, 0.965s GC time
Loading theory "Draft.Templates" (required by "Draft.Unary_ModalitiesTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.067s elapsed time, 0.150s cpu time, 0.041s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Unary_ModalitiesTemplates")
class proto_quantale = proto_near_quantale +
  assumes
    "Sup_distl":
      "!!x Y. x \<cdot> \<Squnion>Y = \<Squnion>{x \<cdot> y |y. y : Y}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.521s elapsed time, 1.062s cpu time, 0.052s GC time
instantiation
  bool :: bool_ab_unital_quantale
  one_bool == one_class.one :: bool
  times_bool == times :: bool => bool => bool
class complete_distrib_lattice = complete_lattice + distrib_lattice +
  assumes
    "Inf_Sup_le":
      "!!A. \<Sqinter>(Sup ` A)
            <= \<Squnion>(Inf ` {f ` A |f. ALL Y:A. f Y : Y})"
### Partially applied constant "Quantales.inf_prod" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin inf_prod (set (?x # ?xs)) == fold inf_prod ?xs ?x
### Partially applied constant "Quantales.sup_prod" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin sup_prod (set (?x # ?xs)) == fold sup_prod ?xs ?x
### Partially applied constant "Quantales.times_prod'" on left hand side of equation, in theorem:
### monoid_mult.prod_list one_prod times_prod' ?xs ==
### foldr times_prod' ?xs one_prod
locale unital_quantale_module
  fixes act :: "'a => 'b => 'b"  (\<open>\<alpha>\<close>)
  assumes "unital_quantale_module \<alpha>"
locale unital_quantale_module
  fixes act :: "'a => 'b => 'b"  (\<open>\<alpha>\<close>)
  assumes "unital_quantale_module \<alpha>"
### theory "Draft.Quantales"
### 10.322s elapsed time, 16.363s cpu time, 2.244s GC time
Loading theory "Draft.Binary_Modalities" (required by "Draft.Unary_ModalitiesTemplates" via "Draft.Unary_Modalities")
class rel_magma = type +
  fixes \<rho> :: "'a => 'a => 'a => bool"
class rel_semigroup = rel_magma +
  assumes
    "rel_assoc":
      "!!u v x w.
          (EX y. \<rho> y u v & \<rho> x y w) =
          (EX z. \<rho> z v w & \<rho> x u z)"
class rel_monoid = rel_semigroup +
  fixes \<xi> :: "'a set"
  assumes "unitl_ex": "!!x. EX e:\<xi>. \<rho> x e x"
    and "unitr_ex": "!!x. EX e:\<xi>. \<rho> x x e"
    and "unitl_eq": "!!e x y. [| e : \<xi>; \<rho> x e y |] ==> x = y"
    and "unitr_eq": "!!e x y. [| e : \<xi>; \<rho> x y e |] ==> x = y"
class rel_ab_semigroup = rel_semigroup +
  assumes "rel_comm": "!!x y z. \<rho> x y z ==> \<rho> x z y"
### Partially applied constant "Binary_Modalities.rel_monoid_class.pid" on left hand side of equation, in theorem:
### monoid_mult.prod_list \<delta> (\<star>) ?xs == foldr (\<star>) ?xs \<delta>
### theory "Draft.Binary_Modalities"
### 1.000s elapsed time, 1.145s cpu time, 0.091s GC time
Loading theory "Draft.Unary_Modalities" (required by "Draft.Unary_ModalitiesTemplates")
### theory "Draft.Unary_Modalities"
### 0.088s elapsed time, 0.098s cpu time, 0.000s GC time
Loading theory "Draft.Unary_ModalitiesTemplates"
val templateLemmas =
   [("Unary_Modalities.fdia_Id", " |Id\<rangle> ?f ?x = ?f ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 1),
         template_var 0),
       template_app (template_var 1, template_var 0))),
    ("Unary_Modalities.fbox_bbox_conv", "|?R] ?f ?x = [?R^-1| ?f ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0))),
    ("Unary_Modalities.fdia_bdia_conv",
     " |?R\<rangle> ?f ?x =  \<langle>?R^-1| ?f ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0))),
    ("Unary_Modalities.fdia_un_rel",
     "fdia (?R Un ?S) = fdia ?R \<squnion> fdia ?S",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Unary_Modalities.fdia_im",
     " |?R\<rangle> ?f ?x = \<Squnion>(?f ` ?R `` {?x})",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))))),
    ("Unary_Modalities.fdia_seq",
     " |?R ; ?S\<rangle> ?f ?x =  |?R\<rangle> fdia ?S ?f ?x",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Unary_Modalities.bbox_bdia_demorgan",
     "[?R| ?f ?x = -  \<langle>?R| (%y. - ?f y) ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2), t_empty),
           template_var 0)))),
    ("Unary_Modalities.bdia_bbox_demorgan",
     " \<langle>?R| ?f ?x = - [?R| (%y. - ?f y) ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2), t_empty),
           template_var 0)))),
    ("Unary_Modalities.fbox_fdia_demorgan",
     "|?R] ?f ?x = -  |?R\<rangle> (%y. - ?f y) ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2), t_empty),
           template_var 0)))),
    ("Unary_Modalities.fdia_fbox_demorgan",
     " |?R\<rangle> ?f ?x = - |?R] (%y. - ?f y) ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2), t_empty),
           template_var 0)))),
    ("Unary_Modalities.fdia_sup_fun",
     "fdia ?R (?f \<squnion> ?g) = fdia ?R ?f \<squnion> fdia ?R ?g",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Unary_Modalities.bdia_bmod_comp",
     " \<langle>?R| ?f ?x = \<otimes> (%y x z. (x, y) : ?R) ?f c1 ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 3, t_empty), template_var 1),
           template_hole 0),
         template_var 0))),
    ("Unary_Modalities.fdia_bmod_comp",
     " |?R\<rangle> ?f ?x = \<otimes> (%x y z. (x, y) : ?R) ?f c1 ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 3, t_empty), template_var 1),
           template_hole 0),
         template_var 0))),
    ("Unary_Modalities.bdia_fbox_galois",
     "(ALL x.  \<langle>?R| ?f x <= ?g x) = (ALL x. ?f x <= |?R] ?g x)",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app (template_hole 1, t_empty))),
    ("Unary_Modalities.fdia_bbox_galois",
     "(ALL x.  |?R\<rangle> ?f x <= ?g x) = (ALL x. ?f x <= [?R| ?g x)",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app (template_hole 1, t_empty))),
    ("Unary_Modalities.fdia_Sup_fun",
     " |?R\<rangle> \<Squnion>?\<F> ?x =
      \<Squnion>{ |?R\<rangle> f ?x |f. f : ?\<F>}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 2),
           template_app (template_hole 5, template_var 1)),
         template_var 0),
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty)))),
    ("Unary_Modalities.fdia_Un_rel",
     " |\<Union> ?\<R>\<rangle> ?f ?x =
      \<Squnion>{ |R\<rangle> ?f ?x |R. R : ?\<R>}",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty)))),
    ("Unary_Modalities.dia_conjugate",
     "(ALL x.  |?R\<rangle> ?f x \<sqinter> ?g x = \<bottom>) =
      (ALL x. ?f x \<sqinter>  \<langle>?R| ?g x = \<bottom>)",
     template_equation
      (template_app (template_hole 6, t_empty),
       template_app (template_hole 1, t_empty))),
    ("Unary_Modalities.box_conjugate",
     "(ALL x. |?R] ?f x \<squnion> ?g x = \<top>) =
      (ALL x. ?f x \<squnion> [?R| ?g x = \<top>)",
     template_equation
      (template_app (template_hole 6, t_empty),
       template_app (template_hole 1, t_empty))),
    ("Unary_Modalities.bmod_fdia_comp",
     "\<otimes> ?R ?f ?g ?x =
       |{(x, y, z) |x y z.
         ?R x y z}\<rangle> (%(x, y). ?f x \<cdot> ?g y) ?x",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 11, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 10, template_app (template_hole 9, t_empty)),
           template_app (template_hole 1, t_empty)),
         template_var 0))),
    ("Unary_Modalities.bmod_fdia_comp_var",
     "\<otimes> ?R ?f ?g ?x =
       |{(x, y, z) |x y z.
         ?R x y
          z}\<rangle> (%(x, y).
                          case (?f x, ?g y) of (v, w) => v \<cdot> w) ?x",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 13, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 12, template_app (template_hole 11, t_empty)),
           template_app (template_hole 3, t_empty)),
         template_var 0)))]:
   (string * thm * template) list
### theory "Draft.Unary_ModalitiesTemplates"
### 0.379s elapsed time, 0.571s cpu time, 0.059s GC time
val it = (): unit
