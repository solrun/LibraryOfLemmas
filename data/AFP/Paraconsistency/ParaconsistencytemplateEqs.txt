   [("Paraconsistency.double_negation",
     "eval ?i ?p = eval ?i (Neg' (Neg' ?p))",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_hole 0,
           template_app (template_hole 0, template_var 0))))),
    ("Paraconsistency.reduce",
     "valid ?p = valid_in {1..card (props ?p)} ?p",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))),
         template_var 0))),
    ("Paraconsistency.conjunction",
     "valid (Con' ?p ?q) = (valid ?p & valid ?q)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Paraconsistency.conjunction_in",
     "valid_in ?U (Con' ?p ?q) = (valid_in ?U ?p & valid_in ?U ?q)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Paraconsistency.eval_equality_simplify",
     "eval ?i (Eql ?p ?q) = Det (eval ?i ?p = eval ?i ?q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("Paraconsistency.eval_negation",
     "eval ?i (Neg' ?p) =
      (if eval ?i ?p = Det False then Det True
       else if eval ?i ?p = Det True then Det False else eval ?i ?p)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_dunno)),
    ("Paraconsistency.eval_equality",
     "eval ?i (Eql' ?p ?q) =
      (if eval ?i ?p = eval ?i ?q then Det True
       else if eval ?i ?p = Det True then eval ?i ?q
            else if eval ?i ?q = Det True then eval ?i ?p
                 else if eval ?i ?p = Det False then eval ?i (Neg' ?q)
                      else if eval ?i ?q = Det False then eval ?i (Neg' ?p)
                           else Det False)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_dunno))]
