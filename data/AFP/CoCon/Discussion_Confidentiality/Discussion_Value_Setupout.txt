Loading theory "Fresh_Identifiers.Fresh" (required by "Draft.Discussion_Value_SetupMoreTemplates" via "Draft.Discussion_Value_Setup" via "Draft.Discussion_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Fresh_Identifiers.Fresh_String")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Discussion_Value_SetupMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Discussion_Value_SetupMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Discussion_Value_SetupMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
class fresh = type +
  fixes fresh :: "'a set => 'a => 'a"
  assumes "fresh_notIn": "!!xs x. finite xs ==> fresh xs x ~: xs"
    and "fresh_eq": "!!xs x. x ~: xs ==> fresh xs x = x"
### Additional type variable(s) in locale specification "infinite": 'a
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
class infinite = type +
  assumes "infinite_UNIV": "infinite UNIV"
### theory "HOL-Library.Function_Algebras"
### 0.131s elapsed time, 0.543s cpu time, 0.041s GC time
Loading theory "HOL-Library.Sublist" (required by "Draft.Discussion_Value_SetupMoreTemplates" via "Draft.Discussion_Value_Setup" via "Draft.Discussion_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Trivia")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.237s elapsed time, 0.971s cpu time, 0.041s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Discussion_Value_SetupMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "Fresh_Identifiers.Fresh"
### 0.244s elapsed time, 1.001s cpu time, 0.041s GC time
Loading theory "Fresh_Identifiers.Fresh_String" (required by "Draft.Discussion_Value_SetupMoreTemplates" via "Draft.Discussion_Value_Setup" via "Draft.Discussion_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim")
### theory "HOL-Library.Nat_Bijection"
### 0.350s elapsed time, 1.409s cpu time, 0.141s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Discussion_Value_SetupMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
instantiation
  String.literal :: fresh
  fresh_literal == fresh ::
    String.literal set => String.literal => String.literal
consts
  prefixes :: "'a list => 'a list list"
### theory "Fresh_Identifiers.Fresh_String"
### 0.246s elapsed time, 0.959s cpu time, 0.196s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Discussion_Value_SetupMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  suffixes :: "'a list => 'a list list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Proofs for inductive predicate(s) "list_emb"
Found termination order: "size <*mlex*> {}"
  Proving monotonicity ...
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.099s elapsed time, 4.166s cpu time, 0.950s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.057s elapsed time, 4.004s cpu time, 0.854s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  sublists :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Sublist"
### 1.647s elapsed time, 6.326s cpu time, 1.183s GC time
Loading theory "Bounded_Deducibility_Security.Trivia" (required by "Draft.Discussion_Value_SetupMoreTemplates" via "Draft.Discussion_Value_Setup" via "Draft.Discussion_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Bounded_Deducibility_Security.Trivia"
### 0.495s elapsed time, 1.954s cpu time, 0.135s GC time
Loading theory "Bounded_Deducibility_Security.Transition_System" (required by "Draft.Discussion_Value_SetupMoreTemplates" via "Draft.Discussion_Value_Setup" via "Draft.Discussion_Intro" via "Draft.Safety_Properties" via "Bounded_Deducibility_Security.IO_Automaton")
locale Transition_System
  fixes istate :: "'state"
    and validTrans :: "'trans => bool"
    and srcOf :: "'trans => 'state"
    and tgtOf :: "'trans => 'state"
Found termination order: "{}"
Found termination order: "{}"
### theory "HOL-Library.Tree"
### 2.225s elapsed time, 8.598s cpu time, 1.354s GC time
Loading theory "Draft.Prelim" (required by "Draft.Discussion_Value_SetupMoreTemplates" via "Draft.Discussion_Value_Setup" via "Draft.Discussion_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification")
Found termination order: "{}"
Found termination order: "{}"
Proofs for inductive predicate(s) "valid"
  Proving monotonicity ...
"[''Abc'', ''Abd'', ''Ya'', ''Yb'', ''Yzb'', ''Ya'']"
  :: "char list list"
Loading theory "Draft.Templates" (required by "Draft.Discussion_Value_SetupMoreTemplates" via "Draft.ExtrEqs")
Proofs for inductive predicate(s) "valid2"
  Proving monotonicity ...
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.081s elapsed time, 0.313s cpu time, 0.037s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Discussion_Value_SetupMoreTemplates")
Proofs for inductive predicate(s) "reach"
  Proving monotonicity ...
Proofs for inductive predicate(s) "reachFrom"
  Proving monotonicity ...
Found termination order: "{}"
### theory "Bounded_Deducibility_Security.Transition_System"
### 0.463s elapsed time, 1.811s cpu time, 0.124s GC time
Loading theory "Bounded_Deducibility_Security.IO_Automaton" (required by "Draft.Discussion_Value_SetupMoreTemplates" via "Draft.Discussion_Value_Setup" via "Draft.Discussion_Intro" via "Draft.Safety_Properties")
"[STR ''Abc'', STR ''Abd'', STR ''Ya'', STR ''Yb'', STR ''Yzb'',
  STR ''Ya'']"
  :: "String.literal list"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.668s elapsed time, 2.243s cpu time, 0.185s GC time
locale IO_Automaton
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
Found termination order: "{}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### Missing patterns in function definition:
### scoreAsInt NoScore = undefined
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "{}"
### theory "Bounded_Deducibility_Security.IO_Automaton"
### 1.090s elapsed time, 2.941s cpu time, 0.282s GC time
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
instantiation
  userID :: linorder
  less_eq_userID == less_eq :: userID => userID => bool
  less_userID == less :: userID => userID => bool
Found termination order: "{}"
instantiation
  paperID :: linorder
  less_eq_paperID == less_eq :: paperID => paperID => bool
  less_paperID == less :: paperID => paperID => bool
Found termination order: "{}"
instantiation
  confID :: linorder
  less_eq_confID == less_eq :: confID => confID => bool
  less_confID == less :: confID => confID => bool
### theory "Draft.Prelim"
### 3.917s elapsed time, 6.868s cpu time, 0.703s GC time
Loading theory "Draft.System_Specification" (required by "Draft.Discussion_Value_SetupMoreTemplates" via "Draft.Discussion_Value_Setup" via "Draft.Discussion_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup")
### Ambiguous input (line 847 of "$AFP/CoCon/System_Specification.thy") produces 2 parse trees:
### ("\<^const>Pure.eq"
###   ("_applC" ("_position" readFinalDec)
###     ("_cargs" ("_position" s)
###       ("_cargs" ("_position" confID)
###         ("_cargs" ("_position" uID)
###           ("_cargs" ("_position" p) ("_position" papID))))))
###   ("_case_syntax"
###     ("_applC" ("_position" paper)
###       ("_cargs" ("_position" s) ("_position" papID)))
###     ("_case2"
###       ("_case1"
###         ("_applC" ("_position" Paper)
###           ("_cargs" ("_position" title)
###             ("_cargs" ("_position" abstract)
###               ("_cargs" ("_position" pc)
###                 ("_cargs" ("_position" reviews)
###                   ("_cargs" ("_position" dis) ("_position" decs)))))))
###         ("_case_syntax" ("_position" decs)
###           ("_case1" ("\<^const>List.list.Nil") ("_position" NoDecision))))
###       ("_case1"
###         ("\<^const>List.list.Cons" ("_position" dec) ("_position" decs))
###         ("_position" dec)))))
### ("\<^const>Pure.eq"
###   ("_applC" ("_position" readFinalDec)
###     ("_cargs" ("_position" s)
###       ("_cargs" ("_position" confID)
###         ("_cargs" ("_position" uID)
###           ("_cargs" ("_position" p) ("_position" papID))))))
###   ("_case_syntax"
###     ("_applC" ("_position" paper)
###       ("_cargs" ("_position" s) ("_position" papID)))
###     ("_case1"
###       ("_applC" ("_position" Paper)
###         ("_cargs" ("_position" title)
###           ("_cargs" ("_position" abstract)
###             ("_cargs" ("_position" pc)
###               ("_cargs" ("_position" reviews)
###                 ("_cargs" ("_position" dis) ("_position" decs)))))))
###       ("_case_syntax" ("_position" decs)
###         ("_case2"
###           ("_case1" ("\<^const>List.list.Nil") ("_position" NoDecision))
###           ("_case1"
###             ("\<^const>List.list.Cons" ("_position" dec) ("_position" decs))
###             ("_position" dec)))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
See theory exports
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.System_Specification"
### 11.297s elapsed time, 15.789s cpu time, 4.992s GC time
Loading theory "Draft.Automation_Setup" (required by "Draft.Discussion_Value_SetupMoreTemplates" via "Draft.Discussion_Value_Setup" via "Draft.Discussion_Intro" via "Draft.Safety_Properties")
### theory "Draft.Automation_Setup"
### 0.033s elapsed time, 0.083s cpu time, 0.000s GC time
Loading theory "Draft.Safety_Properties" (required by "Draft.Discussion_Value_SetupMoreTemplates" via "Draft.Discussion_Value_Setup" via "Draft.Discussion_Intro")
Found termination order: "{}"
### theory "Draft.Safety_Properties"
### 0.791s elapsed time, 0.893s cpu time, 0.134s GC time
Loading theory "Draft.Discussion_Intro" (required by "Draft.Discussion_Value_SetupMoreTemplates" via "Draft.Discussion_Value_Setup")
### theory "Draft.Discussion_Intro"
### 0.020s elapsed time, 0.034s cpu time, 0.000s GC time
Loading theory "Draft.Discussion_Value_Setup" (required by "Draft.Discussion_Value_SetupMoreTemplates")
Found termination order: "{}"
Found termination order: "{}"
### Missing patterns in function definition:
### !!v vd vb vc. f (Trans v (Cact vd) vb vc) = undefined
### !!v vd vb vc. f (Trans v (Uact vd) vb vc) = undefined
### !!v ve vf vg vh vb vc.
###    f (Trans v (UUact (uuNews ve vf vg vh)) vb vc) = undefined
### (4 more)
Found termination order: "{}"
### theory "Draft.Discussion_Value_Setup"
### 0.427s elapsed time, 0.567s cpu time, 0.067s GC time
Loading theory "Draft.Discussion_Value_SetupMoreTemplates"
val templateLemmas =
   [("Discussion_Value_Setup.eeqExcPID_eeq", "eeqExcPID ?s ?s",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Discussion_Value_Setup.eqExcD_eq", "eqExcD ?pap ?pap",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Discussion_Value_Setup.eqExcPID_eq", "eqExcPID ?s ?s",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Discussion_Value_Setup.eeqExcPID_sym",
     "eeqExcPID ?s ?s1.0 ==> eeqExcPID ?s1.0 ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Discussion_Value_Setup.eqExcD_sym",
     "eqExcD ?pap ?pap1.0 ==> eqExcD ?pap1.0 ?pap",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Discussion_Value_Setup.eqExcPID_sym",
     "eqExcPID ?s ?s1.0 ==> eqExcPID ?s1.0 ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Discussion_Value_Setup.eeqExcPID_imp",
     "eeqExcPID ?paps ?paps1.0 ==> eqExcD (?paps PID) (?paps1.0 PID)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 1, template_hole 0)),
             template_app (template_var 0, template_hole 0))
           ))),
    ("Discussion_Value_Setup.eqExcPID_imp1",
     "eqExcPID ?s ?s1.0 ==> eqExcD (paper ?s ?pid) (paper ?s1.0 ?pid)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Discussion_Value_Setup.eeqExcPID_trans",
     "[| eeqExcPID ?s ?s1.0; eeqExcPID ?s1.0 ?s2.0 |]
      ==> eeqExcPID ?s ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Discussion_Value_Setup.eqExcD_trans",
     "[| eqExcD ?pap ?pap1.0; eqExcD ?pap1.0 ?pap2.0 |]
      ==> eqExcD ?pap ?pap2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Discussion_Value_Setup.eqExcPID_trans",
     "[| eqExcPID ?s ?s1.0; eqExcPID ?s1.0 ?s2.0 |] ==> eqExcPID ?s ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Discussion_Value_Setup.eeqExcPID_imp",
     "[| eeqExcPID ?paps ?paps1.0; ?pid ~= PID |]
      ==> ?paps ?pid = ?paps1.0 ?pid",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_equation
        (template_app (template_var 2, template_var 0),
         template_app (template_var 1, template_var 0)))),
    ("Discussion_Value_Setup.eqExcPID_cong",
     "[| eqExcPID ?s ?s1.0; eeqExcPID ?uu1.0 ?uu2.0 |]
      ==> eqExcPID (?s(| paper := ?uu1.0 |)) (?s1.0(| paper := ?uu2.0 |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_app
              (template_app (template_hole 0, t_empty), template_var 2))
           ))),
    ("Discussion_Value_Setup.eqExcPID_cong",
     "[| eqExcPID ?s ?s1.0; ?uu1.0 = ?uu2.0 |]
      ==> eqExcPID (?s(| roles := ?uu1.0 |)) (?s1.0(| roles := ?uu2.0 |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_app
              (template_app (template_hole 0, t_empty), template_var 2))
           ))),
    ("Discussion_Value_Setup.eqExcPID_cong",
     "[| eqExcPID ?s ?s1.0; ?uu1.0 = ?uu2.0 |]
      ==> eqExcPID (?s(| phase := ?uu1.0 |)) (?s1.0(| phase := ?uu2.0 |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_app
              (template_app (template_hole 0, t_empty), template_var 2))
           ))),
    ("Discussion_Value_Setup.eqExcPID_cong",
     "[| eqExcPID ?s ?s1.0; ?uu1.0 = ?uu2.0 |]
      ==> eqExcPID (?s(| paperIDs := ?uu1.0 |))
           (?s1.0(| paperIDs := ?uu2.0 |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_app
              (template_app (template_hole 0, t_empty), template_var 2))
           ))),
    ("Discussion_Value_Setup.eqExcPID_cong",
     "[| eqExcPID ?s ?s1.0; ?uu1.0 = ?uu2.0 |]
      ==> eqExcPID (?s(| news := ?uu1.0 |)) (?s1.0(| news := ?uu2.0 |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_app
              (template_app (template_hole 0, t_empty), template_var 2))
           ))),
    ("Discussion_Value_Setup.eqExcPID_cong",
     "[| eqExcPID ?s ?s1.0; ?uu1.0 = ?uu2.0 |]
      ==> eqExcPID (?s(| conf := ?uu1.0 |)) (?s1.0(| conf := ?uu2.0 |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_app
              (template_app (template_hole 0, t_empty), template_var 2))
           ))),
    ("Discussion_Value_Setup.eqExcPID_cong",
     "[| eqExcPID ?s ?s1.0; ?uu1.0 = ?uu2.0 |]
      ==> eqExcPID (?s(| pref := ?uu1.0 |)) (?s1.0(| pref := ?uu2.0 |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_app
              (template_app (template_hole 0, t_empty), template_var 2))
           ))),
    ("Discussion_Value_Setup.eqExcPID_cong",
     "[| eqExcPID ?s ?s1.0; ?uu1.0 = ?uu2.0 |]
      ==> eqExcPID (?s(| user := ?uu1.0 |)) (?s1.0(| user := ?uu2.0 |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_app
              (template_app (template_hole 0, t_empty), template_var 2))
           ))),
    ("Discussion_Value_Setup.eqExcPID_cong",
     "[| eqExcPID ?s ?s1.0; ?uu1.0 = ?uu2.0 |]
      ==> eqExcPID (?s(| pass := ?uu1.0 |)) (?s1.0(| pass := ?uu2.0 |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_app
              (template_app (template_hole 0, t_empty), template_var 2))
           ))),
    ("Discussion_Value_Setup.eqExcPID_cong",
     "[| eqExcPID ?s ?s1.0; ?uu1.0 = ?uu2.0 |]
      ==> eqExcPID (?s(| confIDs := ?uu1.0 |))
           (?s1.0(| confIDs := ?uu2.0 |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_app
              (template_app (template_hole 0, t_empty), template_var 2))
           ))),
    ("Discussion_Value_Setup.eqExcPID_cong",
     "[| eqExcPID ?s ?s1.0; ?uu1.0 = ?uu2.0 |]
      ==> eqExcPID (?s(| userIDs := ?uu1.0 |))
           (?s1.0(| userIDs := ?uu2.0 |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_app
              (template_app (template_hole 0, t_empty), template_var 2))
           ))),
    ("Discussion_Value_Setup.eqExcPID_cong",
     "[| eqExcPID ?s ?s1.0; ?uu1.0 = ?uu2.0 |]
      ==> eqExcPID (?s(| voronkov := ?uu1.0 |))
           (?s1.0(| voronkov := ?uu2.0 |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_app
              (template_app (template_hole 0, t_empty), template_var 2))
           ))),
    ("Discussion_Value_Setup.\<phi>_step_eqExcPID",
     "[| \<phi> (Trans ?s ?a ?ou ?s'); step ?s ?a = (?ou, ?s') |]
      ==> eqExcPID ?s ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0))
            ),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 3), template_var 0)
           ))),
    ("Discussion_Value_Setup.UUact_uuDis_step_eqExcPID",
     "[| ?a = UUact (uuDis ?cid ?uid ?p PID ?com);
         step ?s ?a = (?ou, ?s') |]
      ==> eqExcPID ?s ?s'",
     template_implication
      ([template_equation
         (template_var 7,
          template_app
           (template_hole 6,
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 6),
                    template_var 5),
                  template_var 4),
                template_hole 4),
              template_var 3))),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 7),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Discussion_Value_Setup.eqExcPID_imp2",
     "[| eqExcPID ?s ?s1.0; ?pid ~= PID | PID ~= ?pid |]
      ==> getReviewersReviews ?s ?cid ?pid =
          getReviewersReviews ?s1.0 ?cid ?pid",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_hole 2))),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_var 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 1)))),
    ("Discussion_Value_Setup.eqExcPID_step",
     "[| eqExcPID ?s ?s1.0; step ?s ?a = (?ou, ?s');
         step ?s1.0 ?a = (?ou1.0, ?s1') |]
      ==> eqExcPID ?s' ?s1'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 6),
              template_var 5)
            ),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 6), template_var 4),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2), template_var 0)
           ))),
    ("Discussion_Value_Setup.eqExcD",
     "eqExcD ?pap ?pap1.0 =
      (titlePaper ?pap = titlePaper ?pap1.0 &
       abstractPaper ?pap = abstractPaper ?pap1.0 &
       contentPaper ?pap = contentPaper ?pap1.0 &
       reviewsPaper ?pap = reviewsPaper ?pap1.0 &
       decsPaper ?pap = decsPaper ?pap1.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 7, template_var 1)),
                 template_app (template_hole 7, template_var 0))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 6, template_var 1)),
                   template_app (template_hole 6, template_var 0))),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app (template_hole 4, template_var 1)),
                     template_app (template_hole 4, template_var 0))),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app (template_hole 2, template_var 1)),
                       template_app (template_hole 2, template_var 0))),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 1)),
                     template_app (template_hole 0, template_var 0))))))
           ))),
    ("Discussion_Value_Setup.eqExcPID_imp1",
     "[| eqExcPID ?s ?s1.0; ?pid ~= PID | PID ~= ?pid |]
      ==> paper ?s ?pid = paper ?s1.0 ?pid &
          getNthReview ?s ?pid ?n = getNthReview ?s1.0 ?pid ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_hole 5))),
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0)))
           ))),
    ("Discussion_Value_Setup.eeqExcPID_cong",
     "[| eeqExcPID ?paps ?paps1.0; ?pid = PID ==> eqExcD ?uu ?uu1.0;
         ?pid ~= PID ==> ?uu = ?uu1.0 |]
      ==> eeqExcPID (?paps(?pid := ?uu)) (?paps1.0(?pid := ?uu1.0))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 3)
            ),
        template_implication
         ([template_equation (template_var 2, template_hole 4)],
          template_predicate
           (
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0)
              )),
        template_implication
         ([template_negation
            (template_equation (template_var 2, template_hole 4))],
          template_equation (template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 0))
           ))),
    ("Discussion_Value_Setup.eqExcPID_step_\<phi>",
     "[| eqExcPID ?s ?s1.0; step ?s ?a = (?ou, ?s');
         step ?s1.0 ?a = (?ou1.0, ?s1') |]
      ==> \<phi> (Trans ?s ?a ?ou ?s') =
          \<phi> (Trans ?s1.0 ?a ?ou1.0 ?s1')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 6),
              template_var 5)
            ),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 6), template_var 4),
          template_app
           (template_app (template_hole 3, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 6),
                 template_var 4),
               template_var 3),
             template_var 2)),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 4),
               template_var 1),
             template_var 0))))),
    ("Discussion_Value_Setup.eqExcPID_step_\<phi>_imp",
     "[| eqExcPID ?s ?s1.0; step ?s ?a = (?ou, ?s');
         step ?s1.0 ?a = (?ou1.0, ?s1'); \<phi> (Trans ?s ?a ?ou ?s') |]
      ==> \<phi> (Trans ?s1.0 ?a ?ou1.0 ?s1')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 6),
              template_var 5)
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 6), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 0, template_var 6),
                    template_var 4),
                  template_var 3),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 4),
                 template_var 1),
               template_var 0))
           ))),
    ("Discussion_Value_Setup.eeqExcPID_RDD",
     "eeqExcPID ?paps ?paps1.0 ==>
      titlePaper (?paps PID) = titlePaper (?paps1.0 PID) &
      abstractPaper (?paps PID) = abstractPaper (?paps1.0 PID) &
      contentPaper (?paps PID) = contentPaper (?paps1.0 PID) &
      reviewsPaper (?paps PID) = reviewsPaper (?paps1.0 PID) &
      decsPaper (?paps PID) = decsPaper (?paps1.0 PID)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app (template_var 1, template_hole 7))),
                 template_app
                  (template_hole 8,
                   template_app (template_var 0, template_hole 7)))),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_hole 6,
                       template_app (template_var 1, template_hole 7))),
                   template_app
                    (template_hole 6,
                     template_app (template_var 0, template_hole 7)))),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_hole 4,
                         template_app (template_var 1, template_hole 7))),
                     template_app
                      (template_hole 4,
                       template_app (template_var 0, template_hole 7)))),
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_hole 2,
                           template_app (template_var 1, template_hole 7))),
                       template_app
                        (template_hole 2,
                         template_app (template_var 0, template_hole 7)))),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_hole 0,
                         template_app (template_var 1, template_hole 7))),
                     template_app
                      (template_hole 0,
                       template_app (template_var 0, template_hole 7)))))))
           ))),
    ("Discussion_Value_Setup.eqExcPID_Paper",
     "[| eqExcPID ?s ?s1.0;
         paper ?s ?pid =
         Paper ?title ?abstract ?content ?reviews ?dis ?decs;
         paper ?s1.0 ?pid =
         Paper ?title1.0 ?abstract1.0 ?content1.0 ?reviews1.0 ?dis1.0
          ?decs1.0 |]
      ==> ?title = ?title1.0 &
          ?abstract = ?abstract1.0 &
          ?content = ?content1.0 &
          ?reviews = ?reviews1.0 & ?decs = ?decs1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 14),
              template_var 13)
            ),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 14),
            template_var 12),
          template_app
           (template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 11),
                    template_var 10),
                  template_var 9),
                template_var 8),
              template_var 7),
            template_var 6)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 13),
            template_var 12),
          template_app
           (template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 11),
                 template_var 5)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 10),
                   template_var 4)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 2, template_var 9),
                     template_var 3)),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 2)),
                   template_app
                    (template_app (template_hole 0, template_var 6),
                     template_var 0)))))
           ))),
    ("Discussion_Value_Setup.eqExcPID_RDD",
     "eqExcPID ?s ?s1.0 ==>
      titlePaper (paper ?s PID) = titlePaper (paper ?s1.0 PID) &
      abstractPaper (paper ?s PID) = abstractPaper (paper ?s1.0 PID) &
      contentPaper (paper ?s PID) = contentPaper (paper ?s1.0 PID) &
      reviewsPaper (paper ?s PID) = reviewsPaper (paper ?s1.0 PID) &
      decsPaper (paper ?s PID) = decsPaper (paper ?s1.0 PID)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 8, template_var 1),
                       template_hole 7))),
                 template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_var 0),
                     template_hole 7)))),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 8, template_var 1),
                         template_hole 7))),
                   template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 8, template_var 0),
                       template_hole 7)))),
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 8, template_var 1),
                           template_hole 7))),
                     template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 8, template_var 0),
                         template_hole 7)))),
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_hole 2,
                           template_app
                            (template_app (template_hole 8, template_var 1),
                             template_hole 7))),
                       template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 8, template_var 0),
                           template_hole 7)))),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_hole 0,
                         template_app
                          (template_app (template_hole 8, template_var 1),
                           template_hole 7))),
                     template_app
                      (template_hole 0,
                       template_app
                        (template_app (template_hole 8, template_var 0),
                         template_hole 7)))))))
           ))),
    ("Discussion_Value_Setup.eqExcPID_imp",
     "eqExcPID ?s ?s1.0 ==>
      confIDs ?s = confIDs ?s1.0 &
      conf ?s = conf ?s1.0 &
      userIDs ?s = userIDs ?s1.0 &
      pass ?s = pass ?s1.0 &
      user ?s = user ?s1.0 &
      roles ?s = roles ?s1.0 &
      paperIDs ?s = paperIDs ?s1.0 &
      eeqExcPID (paper ?s) (paper ?s1.0) &
      pref ?s = pref ?s1.0 &
      voronkov ?s = voronkov ?s1.0 &
      news ?s = news ?s1.0 &
      phase ?s = phase ?s1.0 &
      getAllPaperIDs ?s = getAllPaperIDs ?s1.0 &
      isRev ?s ?cid ?uid ?pid = isRev ?s1.0 ?cid ?uid ?pid &
      getReviewIndex ?s ?cid ?uid ?pid =
      getReviewIndex ?s1.0 ?cid ?uid ?pid &
      getRevRole ?s ?cid ?uid ?pid = getRevRole ?s1.0 ?cid ?uid ?pid",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 33, template_var 4),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 32,
               template_app
                (template_app
                  (template_hole 31,
                   template_app (template_hole 30, template_var 4)),
                 template_app (template_hole 30, template_var 3))),
             template_app
              (template_app
                (template_hole 32,
                 template_app
                  (template_app
                    (template_hole 29,
                     template_app (template_hole 28, template_var 4)),
                   template_app (template_hole 28, template_var 3))),
               template_app
                (template_app
                  (template_hole 32,
                   template_app
                    (template_app
                      (template_hole 27,
                       template_app (template_hole 26, template_var 4)),
                     template_app (template_hole 26, template_var 3))),
                 template_app
                  (template_app
                    (template_hole 32,
                     template_app
                      (template_app
                        (template_hole 25,
                         template_app (template_hole 24, template_var 4)),
                       template_app (template_hole 24, template_var 3))),
                   template_app
                    (template_app
                      (template_hole 32,
                       template_app
                        (template_app
                          (template_hole 23,
                           template_app (template_hole 22, template_var 4)),
                         template_app (template_hole 22, template_var 3))),
                     template_app
                      (template_app
                        (template_hole 32,
                         template_app
                          (template_app
                            (template_hole 21,
                             template_app
                              (template_hole 20, template_var 4)),
                           template_app
                            (template_hole 20, template_var 3))),
                       template_app
                        (template_app
                          (template_hole 32,
                           template_app
                            (template_app
                              (template_hole 19,
                               template_app
                                (template_hole 18, template_var 4)),
                             template_app
                              (template_hole 18, template_var 3))),
                         template_app
                          (template_app
                            (template_hole 32,
                             template_app
                              (template_app
                                (template_hole 17,
                                 template_app
                                  (template_hole 16, template_var 4)),
                               template_app
                                (template_hole 16, template_var 3))),
                           template_app
                            (template_app
                              (template_hole 32,
                               template_app
                                (template_app
                                  (template_hole 15,
                                   template_app
                                    (template_hole 14, template_var 4)),
                                 template_app
                                  (template_hole 14, template_var 3))),
                             template_app
                              (template_app
                                (template_hole 32,
                                 template_app
                                  (template_app
                                    (template_hole 13,
                                     template_app
(template_hole 12, template_var 4)),
                                   template_app
                                    (template_hole 12, template_var 3))),
                               template_app
                                (template_app
                                  (template_hole 32,
                                   template_app
                                    (template_app
(template_hole 11, template_app (template_hole 10, template_var 4)),
                                     template_app
(template_hole 10, template_var 3))),
                                 template_app
                                  (template_app
                                    (template_hole 32,
                                     template_app
(template_app
  (template_hole 9, template_app (template_hole 8, template_var 4)),
 template_app (template_hole 8, template_var 3))),
                                   template_app
                                    (template_app
(template_hole 32,
 template_app
  (template_app
    (template_hole 7, template_app (template_hole 6, template_var 4)),
   template_app (template_hole 6, template_var 3))),
                                     template_app
(template_app
  (template_hole 32,
   template_app
    (template_app
      (template_hole 5,
       template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 4),
             template_var 2),
           template_var 1),
         template_var 0)),
     template_app
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 3), template_var 2),
         template_var 1),
       template_var 0))),
 template_app
  (template_app
    (template_hole 32,
     template_app
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
   template_app
    (template_app
      (template_hole 1,
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 2),
           template_var 1),
         template_var 0)),
     template_app
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 2),
         template_var 1),
       template_var 0)))))))))))))))))
           )))]:
   (string * thm * template) list
### theory "Draft.Discussion_Value_SetupMoreTemplates"
### 0.624s elapsed time, 0.855s cpu time, 0.050s GC time
val it = (): unit
