Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "Fresh_Identifiers.Fresh" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Fresh_Identifiers.Fresh_String")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
class fresh = type +
  fixes fresh :: "'a set => 'a => 'a"
  assumes "fresh_notIn": "!!xs x. finite xs ==> fresh xs x ~: xs"
    and "fresh_eq": "!!xs x. x ~: xs ==> fresh xs x = x"
### Additional type variable(s) in locale specification "infinite": 'a
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
class infinite = type +
  assumes "infinite_UNIV": "infinite UNIV"
### theory "HOL-Library.Function_Algebras"
### 0.136s elapsed time, 0.561s cpu time, 0.043s GC time
Loading theory "HOL-Library.Sublist" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Trivia")
### theory "HOL-Library.Set_Algebras"
### 0.209s elapsed time, 0.850s cpu time, 0.043s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
### theory "Fresh_Identifiers.Fresh"
### 0.241s elapsed time, 0.985s cpu time, 0.043s GC time
Loading theory "Fresh_Identifiers.Fresh_String" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim")
### theory "HOL-Library.Nat_Bijection"
### 0.341s elapsed time, 1.366s cpu time, 0.128s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
instantiation
  String.literal :: fresh
  fresh_literal == fresh ::
    String.literal set => String.literal => String.literal
consts
  prefixes :: "'a list => 'a list list"
### theory "Fresh_Identifiers.Fresh_String"
### 0.232s elapsed time, 0.897s cpu time, 0.165s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
consts
  left :: "'a tree => 'a tree"
  Proving monotonicity ...
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  suffixes :: "'a list => 'a list list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "list_emb"
  Proving monotonicity ...
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.966s elapsed time, 3.647s cpu time, 0.883s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.937s elapsed time, 3.526s cpu time, 0.881s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  sublists :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Sublist"
### 1.457s elapsed time, 5.581s cpu time, 1.095s GC time
Loading theory "Bounded_Deducibility_Security.Trivia" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
### theory "Bounded_Deducibility_Security.Trivia"
### 0.465s elapsed time, 1.832s cpu time, 0.164s GC time
Loading theory "Draft.Prelim" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.Automation_Setup" via "Draft.System_Specification")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.046s elapsed time, 7.902s cpu time, 1.304s GC time
Loading theory "Draft.Templates" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.085s elapsed time, 0.327s cpu time, 0.061s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Automation_SetupMoreTemplates")
"[''Abc'', ''Abd'', ''Ya'', ''Yb'', ''Yzb'', ''Ya'']"
  :: "char list list"
"[STR ''Abc'', STR ''Abd'', STR ''Ya'', STR ''Yb'', STR ''Yzb'',
  STR ''Ya'']"
  :: "String.literal list"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.638s elapsed time, 1.666s cpu time, 0.177s GC time
### Missing patterns in function definition:
### scoreAsInt NoScore = undefined
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
instantiation
  userID :: linorder
  less_eq_userID == less_eq :: userID => userID => bool
  less_userID == less :: userID => userID => bool
Found termination order: "{}"
instantiation
  paperID :: linorder
  less_eq_paperID == less_eq :: paperID => paperID => bool
  less_paperID == less :: paperID => paperID => bool
Found termination order: "{}"
instantiation
  confID :: linorder
  less_eq_confID == less_eq :: confID => confID => bool
  less_confID == less :: confID => confID => bool
### theory "Draft.Prelim"
### 3.821s elapsed time, 5.940s cpu time, 0.671s GC time
Loading theory "Draft.System_Specification" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.Automation_Setup")
### Ambiguous input (line 847 of "$AFP/CoCon/System_Specification.thy") produces 2 parse trees:
### ("\<^const>Pure.eq"
###   ("_applC" ("_position" readFinalDec)
###     ("_cargs" ("_position" s)
###       ("_cargs" ("_position" confID)
###         ("_cargs" ("_position" uID)
###           ("_cargs" ("_position" p) ("_position" papID))))))
###   ("_case_syntax"
###     ("_applC" ("_position" paper)
###       ("_cargs" ("_position" s) ("_position" papID)))
###     ("_case2"
###       ("_case1"
###         ("_applC" ("_position" Paper)
###           ("_cargs" ("_position" title)
###             ("_cargs" ("_position" abstract)
###               ("_cargs" ("_position" pc)
###                 ("_cargs" ("_position" reviews)
###                   ("_cargs" ("_position" dis) ("_position" decs)))))))
###         ("_case_syntax" ("_position" decs)
###           ("_case1" ("\<^const>List.list.Nil") ("_position" NoDecision))))
###       ("_case1"
###         ("\<^const>List.list.Cons" ("_position" dec) ("_position" decs))
###         ("_position" dec)))))
### ("\<^const>Pure.eq"
###   ("_applC" ("_position" readFinalDec)
###     ("_cargs" ("_position" s)
###       ("_cargs" ("_position" confID)
###         ("_cargs" ("_position" uID)
###           ("_cargs" ("_position" p) ("_position" papID))))))
###   ("_case_syntax"
###     ("_applC" ("_position" paper)
###       ("_cargs" ("_position" s) ("_position" papID)))
###     ("_case1"
###       ("_applC" ("_position" Paper)
###         ("_cargs" ("_position" title)
###           ("_cargs" ("_position" abstract)
###             ("_cargs" ("_position" pc)
###               ("_cargs" ("_position" reviews)
###                 ("_cargs" ("_position" dis) ("_position" decs)))))))
###       ("_case_syntax" ("_position" decs)
###         ("_case2"
###           ("_case1" ("\<^const>List.list.Nil") ("_position" NoDecision))
###           ("_case1"
###             ("\<^const>List.list.Cons" ("_position" dec) ("_position" decs))
###             ("_position" dec)))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
See theory exports
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.System_Specification"
### 11.550s elapsed time, 15.630s cpu time, 4.433s GC time
Loading theory "Draft.Automation_Setup" (required by "Draft.Automation_SetupMoreTemplates")
### theory "Draft.Automation_Setup"
### 0.031s elapsed time, 0.083s cpu time, 0.000s GC time
Loading theory "Draft.Automation_SetupMoreTemplates"
val templateLemmas =
   [("Automation_Setup.add_prop", "[| PROP ?T; ?A |] ==> PROP ?T",
     template_implication
      ([template_predicate (template_var 1),
        template_predicate (template_var 0)],
       template_predicate (template_var 1))),
    ("Automation_Setup.Paper_dest_conv",
     "(?p = Paper ?title ?abstract ?content ?reviews ?dis ?decs) =
      (?title = titlePaper ?p &
       ?abstract = abstractPaper ?p &
       ?content = contentPaper ?p &
       ?reviews = reviewsPaper ?p &
       ?dis = disPaper ?p & ?decs = decsPaper ?p)",
     template_bimplication
      (template_equation
        (template_var 6,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 12, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_var 5),
                 template_app (template_hole 9, template_var 6))),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_var 4),
                   template_app (template_hole 8, template_var 6))),
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 7, template_var 3),
                     template_app (template_hole 6, template_var 6))),
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_app (template_hole 5, template_var 2),
                       template_app (template_hole 4, template_var 6))),
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_app (template_hole 2, template_var 6))),
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_app (template_hole 0, template_var 6)))))))
           ))),
    ("Automation_Setup.exhaust_elim",
     "[| ?a = UUact ?x;
         !!x11 x12 x13 x14. ?x = uuNews x11 x12 x13 x14 ==> ?P;
         !!x21 x22 x23 x24 x25. ?x = uuDis x21 x22 x23 x24 x25 ==> ?P;
         !!x31 x32 x33 x34 x35 x36.
            ?x = uuReview x31 x32 x33 x34 x35 x36 ==> ?P;
         !!x41 x42 x43 x44 x45. ?x = uuDec x41 x42 x43 x44 x45 ==> ?P |]
      ==> ?P",
     template_implication
      ([template_equation
         (template_var 2, template_app (template_hole 13, template_var 1)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate (template_var 0))),
    ("Automation_Setup.exhaust_elim",
     "[| ?a = Uact ?x;
         !!x11 x12 x13 x14 x15 x16.
            ?x = uUser x11 x12 x13 x14 x15 x16 ==> ?P;
         !!x21 x22 x23. ?x = uConfA x21 x22 x23 ==> ?P;
         !!x31 x32 x33 x34. ?x = uPhase x31 x32 x33 x34 ==> ?P;
         !!x41 x42 x43 x44 x45 x46.
            ?x = uPaperTA x41 x42 x43 x44 x45 x46 ==> ?P;
         !!x51 x52 x53 x54 x55. ?x = uPaperC x51 x52 x53 x54 x55 ==> ?P;
         !!x61 x62 x63 x64 x65. ?x = uPref x61 x62 x63 x64 x65 ==> ?P;
         !!x71 x72 x73 x74 x75 x76.
            ?x = uReview x71 x72 x73 x74 x75 x76 ==> ?P |]
      ==> ?P",
     template_implication
      ([template_equation
         (template_var 2, template_app (template_hole 17, template_var 1)),
        template_predicate (template_app (template_hole 16, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_var 0))),
    ("Automation_Setup.exhaust_elim",
     "[| ?a = Cact ?x;
         !!x11 x12 x13 x14 x15. ?x = cUser x11 x12 x13 x14 x15 ==> ?P;
         !!x21 x22 x23 x24 x25. ?x = cConf x21 x22 x23 x24 x25 ==> ?P;
         !!x31 x32 x33 x34. ?x = cPC x31 x32 x33 x34 ==> ?P;
         !!x41 x42 x43 x44. ?x = cChair x41 x42 x43 x44 ==> ?P;
         !!x51 x52 x53 x54 x55 x56.
            ?x = cPaper x51 x52 x53 x54 x55 x56 ==> ?P;
         !!x61 x62 x63 x64 x65. ?x = cAuthor x61 x62 x63 x64 x65 ==> ?P;
         !!x71 x72 x73 x74 x75. ?x = cConflict x71 x72 x73 x74 x75 ==> ?P;
         !!x81 x82 x83 x84 x85. ?x = cReview x81 x82 x83 x84 x85 ==> ?P |]
      ==> ?P",
     template_implication
      ([template_equation
         (template_var 2, template_app (template_hole 14, template_var 1)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_var 0))),
    ("Automation_Setup.exhaust_elim",
     "[| ?a = Lact ?x; !!x11 x12. ?x = lConfs x11 x12 ==> ?P;
         !!x21 x22. ?x = lAConfs x21 x22 ==> ?P;
         !!x31 x32. ?x = lSConfs x31 x32 ==> ?P;
         !!x41 x42. ?x = lMyConfs x41 x42 ==> ?P;
         !!x51 x52. ?x = lAllUsers x51 x52 ==> ?P;
         !!x61 x62. ?x = lAllPapers x61 x62 ==> ?P;
         !!x71 x72 x73. ?x = lPC x71 x72 x73 ==> ?P;
         !!x81 x82 x83. ?x = lChair x81 x82 x83 ==> ?P;
         !!x91 x92 x93. ?x = lPapers x91 x92 x93 ==> ?P;
         !!x101 x102 x103. ?x = lMyPapers x101 x102 x103 ==> ?P;
         !!x111 x112 x113. ?x = lMyAssignedPapers x111 x112 x113 ==> ?P;
         !!x121 x122 x123 x124.
            ?x = lAssignedReviewers x121 x122 x123 x124 ==> ?P |]
      ==> ?P",
     template_implication
      ([template_equation
         (template_var 2, template_app (template_hole 17, template_var 1)),
        template_predicate (template_app (template_hole 16, t_empty)),
        template_predicate (template_app (template_hole 16, t_empty)),
        template_predicate (template_app (template_hole 16, t_empty)),
        template_predicate (template_app (template_hole 16, t_empty)),
        template_predicate (template_app (template_hole 16, t_empty)),
        template_predicate (template_app (template_hole 16, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("Automation_Setup.exhaust_elim",
     "[| ?a = Ract ?x; !!x11 x12. ?x = rAmIVoronkov x11 x12 ==> ?P;
         !!x21 x22 x23. ?x = rUser x21 x22 x23 ==> ?P;
         !!x31 x32 x33. ?x = rConf x31 x32 x33 ==> ?P;
         !!x41 x42 x43. ?x = rNews x41 x42 x43 ==> ?P;
         !!x51 x52 x53 x54. ?x = rPaperTAA x51 x52 x53 x54 ==> ?P;
         !!x61 x62 x63 x64. ?x = rPaperC x61 x62 x63 x64 ==> ?P;
         !!x71 x72 x73 x74. ?x = rPref x71 x72 x73 x74 ==> ?P;
         !!x81 x82 x83 x84. ?x = rMyReview x81 x82 x83 x84 ==> ?P;
         !!x91 x92 x93 x94. ?x = rReviews x91 x92 x93 x94 ==> ?P;
         !!x101 x102 x103 x104. ?x = rDecs x101 x102 x103 x104 ==> ?P;
         !!x111 x112 x113 x114. ?x = rDis x111 x112 x113 x114 ==> ?P;
         !!x121 x122 x123 x124.
            ?x = rFinalReviews x121 x122 x123 x124 ==> ?P;
         !!x131 x132 x133 x134. ?x = rFinalDec x131 x132 x133 x134 ==> ?P;
         !!x141 x142 x143 x144 x145.
            ?x = rPrefOfPC x141 x142 x143 x144 x145 ==> ?P |]
      ==> ?P",
     template_implication
      ([template_equation
         (template_var 2, template_app (template_hole 19, template_var 1)),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.Automation_SetupMoreTemplates"
### 0.575s elapsed time, 0.777s cpu time, 0.051s GC time
val it = (): unit
