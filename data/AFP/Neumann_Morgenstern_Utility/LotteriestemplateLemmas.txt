   [("Lotteries.lotteries_on_subset",
     "?A <= ?B ==> lotteries_on ?A <= lotteries_on ?B",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Lotteries.lotteries_on_nonempty",
     "?outcomes ~= {} ==> lotteries_on ?outcomes ~= {}",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Lotteries.one_outcome_card_lotteries_1",
     "card ?outcomes = 1 ==> card (lotteries_on ?outcomes) = 1",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 0), template_hole 2)],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_hole 2))),
    ("Lotteries.finite_support_one_oc",
     "card ?outcomes = 1 ==>
      ALL l:lotteries_on ?outcomes. finite (set_pmf l)",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0), template_hole 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             t_empty)
           ))),
    ("Lotteries.one_outcome_card_support_1",
     "card ?outcomes = 1 ==>
      ALL l:lotteries_on ?outcomes. card (set_pmf l) = 1",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             t_empty)
           ))),
    ("Lotteries.return_pmf_card_equals_set",
     "card {return_pmf x |x. x : ?S} = card ?S",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, t_empty)),
       template_app (template_hole 0, template_var 0))),
    ("Lotteries.card_degen_lotteries_equals_outcomes",
     "card {x: lotteries_on ?out. card (set_pmf x) = 1} = card ?out",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, t_empty)),
       template_app (template_hole 2, template_var 0))),
    ("Lotteries.card_support_1_probability_1",
     "card (set_pmf ?p) = 1 ==> ALL e:set_pmf ?p. pmf ?p e = 1",
     template_implication
      ([template_equation
         (template_app
           (template_hole 6,
            template_app (template_hole 5, template_var 0)),
          template_hole 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 5, template_var 0)),
             t_empty)
           ))),
    ("Lotteries.finite_nempty_ex_degernate_in_lotteries",
     "[| ?out ~= {}; finite ?out |]
      ==> EX e:lotteries_on ?out. EX x:?out. pmf e x = 1",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 7)),
        template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 0)),
             t_empty)
           ))),
    ("Lotteries.mix_pmf_in_lotteries",
     "[| ?p : lotteries_on ?A; ?q : lotteries_on ?A; ?a : {0<..<1} |]
      ==> mix_pmf ?a ?p ?q : lotteries_on ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3),
                 template_var 1)),
             template_app (template_hole 5, template_var 2))
           )))]
