   [("PMF_Composition.pmf_mix_1", "mix_pmf 1 ?p ?q = ?p",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 1),
         template_var 0),
       template_var 1)),
    ("PMF_Composition.pmf_mix_0", "mix_pmf 0 ?p ?q = ?q",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 1),
         template_var 0),
       template_var 0)),
    ("PMF_Composition.ex_certain_iff_singleton_support",
     "(EX x. pmf ?p x = 1) = (card (set_pmf ?p) = 1)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("PMF_Composition.set_pmf_mix_eq",
     "?a : {0..1} ==> mix_pmf ?a ?p ?p = ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_hole 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 0),
         template_var 0))),
    ("PMF_Composition.pmf_inverse_switch_eqals",
     "?a : {0..1} ==> mix_pmf ?a ?p ?q = mix_pmf (1 - ?a) ?q ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_hole 3))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_hole 3),
                 template_var 2)),
             template_var 0),
           template_var 1)))),
    ("PMF_Composition.mix_pmf_subset_of_original",
     "?a : {0..1} ==>
      set_pmf (mix_pmf ?a ?p ?q) <= set_pmf ?p Un set_pmf ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_hole 4))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("PMF_Composition.set_pmf_mix",
     "?a : {0<..<1} ==>
      set_pmf (mix_pmf ?a ?p ?q) = set_pmf ?p Un set_pmf ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_hole 4))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("PMF_Composition.pmf_equiv_intro1",
     "(!!e. e : set_pmf ?p ==> pmf ?p e = pmf ?q e) ==> ?p = ?q",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("PMF_Composition.mix_pmf_preserves_finite_support",
     "[| ?a : {0..1}; finite (set_pmf ?p); finite (set_pmf ?q) |]
      ==> finite (set_pmf (mix_pmf ?a ?p ?q))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_hole 3))
            ),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0)))
           ))),
    ("PMF_Composition.distribute_alpha_over_sum",
     "(SUM i:set_pmf ?T. ?a * pmf ?p i * ?f i) =
      ?a * (SUM i:set_pmf ?T. pmf ?p i * ?f i)",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("PMF_Composition.pmf_mix",
     "?a : {0..1} ==>
      pmf (mix_pmf ?a ?p ?q) ?x = ?a * pmf ?p ?x + (1 - ?a) * pmf ?q ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_hole 6))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_hole 6),
                 template_var 3)),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)))))),
    ("PMF_Composition.product_mix_pmf_prob_distrib",
     "[| ?a : {0..1}; ?b : {0..1} |]
      ==> mix_pmf ?a (mix_pmf ?b ?p ?q) ?q = mix_pmf (?a * ?b) ?p ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_hole 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_hole 3))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 0)),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)),
             template_var 1),
           template_var 0)))),
    ("PMF_Composition.pmf_mix_deeper",
     "?a : {0..1} ==>
      pmf (mix_pmf ?a ?p ?q) ?x =
      ?a * pmf ?p ?x + pmf ?q ?x - ?a * pmf ?q ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_hole 6))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 0))),
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0))),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)))))),
    ("PMF_Composition.mix_pmf_comp_with_dif_equiv",
     "[| ?\<alpha> : {0..1}; ?\<beta> : {0..1}; ?\<beta> < ?\<alpha> |]
      ==> mix_pmf (?\<beta> / ?\<alpha>) (mix_pmf ?\<alpha> ?p ?q) ?q =
          mix_pmf ?\<beta> ?p ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_hole 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_hole 4))
            ),
        template_inequation (less_than, template_var 2, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3)),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1),
               template_var 0)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("PMF_Composition.sum_over_subset_pmf_support",
     "[| finite ?T; set_pmf ?p <= ?T |]
      ==> (SUM i:?T. ?a * pmf ?p i * ?f i) =
          (SUM i:set_pmf ?p. ?a * pmf ?p i * ?f i)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 3)),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 2),
          template_var 3)],
       template_equation
        (template_app
          (template_app (template_hole 2, t_empty), template_var 3),
         template_app
          (template_app (template_hole 2, t_empty),
           template_app (template_hole 4, template_var 2))))),
    ("PMF_Composition.pmf_equiv_intro",
     "[| !!e. e : set_pmf ?p ==> pmf ?p e = pmf ?q e;
         !!e. e : set_pmf ?q ==> pmf ?q e = pmf ?p e |]
      ==> ?p = ?q",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("PMF_Composition.expected_value_mix_pmf",
     "[| finite (set_pmf ?p); finite (set_pmf ?q); ?a : {0..1} |]
      ==> measure_pmf.expectation (mix_pmf ?a ?p ?q) ?f =
          ?a * measure_pmf.expectation ?p ?f +
          (1 - ?a) * measure_pmf.expectation ?q ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 12,
              template_app (template_hole 11, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_hole 12,
              template_app (template_hole 11, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_hole 7))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 3),
                 template_var 2))),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 3)),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_hole 7),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 2)),
               template_var 0)))))),
    ("PMF_Composition.expected_value_mix_pmf_distrib",
     "[| finite (set_pmf ?p); finite (set_pmf ?q); ?a : {0<..<1} |]
      ==> measure_pmf.expectation (mix_pmf ?a ?p ?q) ?f =
          ?a * measure_pmf.expectation ?p ?f +
          (1 - ?a) * measure_pmf.expectation ?q ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 12,
              template_app (template_hole 11, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_hole 12,
              template_app (template_hole 11, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_hole 7))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 3),
                 template_var 2))),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 3)),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_hole 7),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 2)),
               template_var 0)))))),
    ("PMF_Composition.mix_pmf_comp_left_div",
     "[| ?\<alpha> : {0..1}; ?\<beta> : {0..1}; ?\<beta> < ?\<alpha> |]
      ==> pmf (mix_pmf (?\<beta> / ?\<alpha>) (mix_pmf ?\<alpha> ?p ?q) ?q)
           ?e =
          ?\<beta> * pmf ?p ?e + pmf ?q ?e - ?\<beta> * pmf ?q ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 4),
              template_app
               (template_app (template_hole 10, template_hole 9),
                template_hole 8))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app
               (template_app (template_hole 10, template_hole 9),
                template_hole 8))
            ),
        template_inequation (less_than, template_var 3, template_var 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_var 4)),
                 template_app
                  (template_app
                    (template_app (template_hole 4, template_var 4),
                     template_var 2),
                   template_var 1)),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_var 0))),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 0))),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0)))))),
    ("PMF_Composition.mix_pmf_partition",
     "[| ?y : set_pmf ?p; set_pmf ?p - {?y} ~= {};
         !!a q.
            [| a : {0<..<1}; set_pmf q = set_pmf ?p - {?y};
               ?p = mix_pmf a q (return_pmf ?y) |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2),
              template_app (template_hole 14, template_var 1))
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 11,
                  template_app (template_hole 14, template_var 1)),
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_hole 9)),
              template_hole 9)
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_var 0))),
    ("PMF_Composition.finite_sum_distribute_mix_pmf",
     "[| finite (set_pmf (mix_pmf ?a ?p ?q)); finite (set_pmf ?p);
         finite (set_pmf ?q) |]
      ==> sum (pmf (mix_pmf ?a ?p ?q)) (set_pmf (mix_pmf ?a ?p ?q)) =
          (SUM i:set_pmf ?p. ?a * pmf ?p i) +
          (SUM i:set_pmf ?q. (1 - ?a) * pmf ?q i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_app (template_hole 7, template_var 2),
                    template_var 1),
                  template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, t_empty),
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_app (template_hole 7, template_var 2),
                 template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 5, t_empty),
               template_app (template_hole 8, template_var 1))),
           template_app
            (template_app (template_hole 5, t_empty),
             template_app (template_hole 8, template_var 0)))))),
    ("PMF_Composition.pmf_mix_induct",
     "[| finite ?A; set_pmf ?p <= ?A; !!x. x : ?A ==> ?P (return_pmf x);
         !!p a y.
            [| set_pmf p <= ?A; a : {0<..<1}; y : ?A; ?P p |]
            ==> ?P (mix_pmf a p (return_pmf y)) |]
      ==> ?P ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 10, template_var 1),
          template_var 2),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("PMF_Composition.pmf_mix_induct'",
     "[| finite ?A; set_pmf ?p <= ?A; !!x. x : ?A ==> ?P (return_pmf x);
         !!p q a.
            [| set_pmf p <= ?A; set_pmf q <= ?A; a : {0<..<1}; ?P p; ?P q |]
            ==> ?P (mix_pmf a p q) |]
      ==> ?P ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 10, template_var 1),
          template_var 2),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (template_app (template_var 0, template_var 1))))]
