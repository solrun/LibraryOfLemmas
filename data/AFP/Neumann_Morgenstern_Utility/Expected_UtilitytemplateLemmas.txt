   [("Expected_Utility.vnm_utility_imp_reational_prefs",
     "vNM_utility ?outcomes ?relation ?u ==>
      rational_preference (\<P> ?outcomes) ?relation",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 1)
           ))),
    ("Expected_Utility.vnm_utility_is_ordinal_utility",
     "vNM_utility ?outcomes ?relation ?u ==>
      ordinal_utility (\<P> ?outcomes) ?relation
       (%p. measure_pmf.expectation p ?u)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_var 1),
             t_empty)
           ))),
    ("Expected_Utility.expected_utilty_theorem_form_vnm_utility",
     "[| finite ?outcomes; ?outcomes ~= {} |]
      ==> (rational_preference (\<P> ?outcomes) ?\<R> &
           independent_vnm (\<P> ?outcomes) ?\<R> &
           continuous_vnm (\<P> ?outcomes) ?\<R>) =
          (EX u. vNM_utility ?outcomes ?\<R> u)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 8))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 1)),
               template_var 0)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 4, template_var 1)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 4, template_var 1)),
               template_var 0))),
         template_app (template_hole 1, t_empty))))]
