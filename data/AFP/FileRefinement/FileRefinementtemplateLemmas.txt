   [("FileRefinement.readCorrect", "cfRead ?cfile = afRead (abstFn ?cfile)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("FileRefinement.fileSizeCorrect",
     "cfSize ?cfile = afSize (abstFn ?cfile)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("FileRefinement.fileSizeIncreases",
     "cfWrite ?cfile1.0 ?index ?value = Some ?cfile2.0 ==>
      fileSize ?cfile1.0 <= fileSize ?cfile2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 3),
         template_app (template_hole 0, template_var 0)))),
    ("FileRefinement.writeCorrect",
     "reachabilityInvariant ?cfile1.0 ==>
      oAbstFn (cfWrite ?cfile1.0 ?index ?value) =
      afWrite (abstFn ?cfile1.0) ?index ?value",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 1),
           template_var 0)))),
    ("FileRefinement.writeFailCorrect",
     "cfWrite ?cfile1.0 ?index ?value = None ==>
      afWrite (abstFn ?cfile1.0) ?index ?value = None",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1),
            template_var 0),
          template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_var 1),
           template_var 0),
         template_hole 0))),
    ("FileRefinement.cfWritePreservesLastBlockInvariant",
     "[| reachabilityInvariant ?cfile1.0;
         cfWrite ?cfile1.0 ?byteIndex ?value = Some ?cfile2.0 |]
      ==> lastBlockInvariant ?cfile2.0",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("FileRefinement.cfWritePreservesNextFreeBlockInvariant",
     "[| reachabilityInvariant ?cfile1.0;
         cfWrite ?cfile1.0 ?byteIndex ?value = Some ?cfile2.0 |]
      ==> nextFreeBlockInvariant ?cfile2.0",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("FileRefinement.cfWritePreserves",
     "[| reachabilityInvariant ?cfile1.0;
         cfWrite ?cfile1.0 ?byteIndex ?value = Some ?cfile2.0 |]
      ==> reachabilityInvariant ?cfile2.0",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_predicate
        (template_app (template_hole 3, template_var 0)))),
    ("FileRefinement.cfWritePreservesUnallocatedBlocksInvariant",
     "[| reachabilityInvariant ?cfile1.0;
         cfWrite ?cfile1.0 ?byteIndex ?value = Some ?cfile2.0 |]
      ==> unallocatedBlocksInvariant ?cfile2.0",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("FileRefinement.nextFreeBlockIncreases",
     "[| nextFreeBlockInvariant ?cfile1.0;
         cfWrite ?cfile1.0 ?index ?value = Some ?cfile2.0 |]
      ==> nextFreeBlock ?cfile1.0 <= nextFreeBlock ?cfile2.0",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 3)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 3),
         template_app (template_hole 0, template_var 0)))),
    ("FileRefinement.cfWriteNoExtendPreservesFileSize",
     "[| ?index < fileSize ?cfile1.0;
         cfWrite ?cfile1.0 ?index ?value = Some ?cfile2.0 |]
      ==> fileSize ?cfile2.0 = fileSize ?cfile1.0",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 4, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_var 2),
              template_var 3),
            template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation
        (template_app (template_hole 4, template_var 0),
         template_app (template_hole 4, template_var 2)))),
    ("FileRefinement.mod_round_lt",
     "[| 0 < ?c; ?a < ?b |] ==> ?a div ?c < (?b + ?c - 1) div ?c",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 2)),
               template_hole 0)),
           template_var 2)))),
    ("FileRefinement.cfWriteExtendFileSize",
     "[| ~ ?index < fileSize ?cfile1.0;
         cfWrite ?cfile1.0 ?index ?value = Some ?cfile2.0 |]
      ==> fileSize ?cfile2.0 = Suc ?index",
     template_implication
      ([template_negation
         (
            template_inequation
             (less_than, template_var 3,
              template_app (template_hole 5, template_var 2))
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 2),
              template_var 3),
            template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_hole 5, template_var 0),
         template_app (template_hole 0, template_var 3)))),
    ("FileRefinement.modInequalityLemma",
     "?a ~= ?b & ?a mod ?c = ?b mod ?c ==> ?a div ?c ~= ?b div ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_var 1))),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 0)),
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("FileRefinement.writeNoExtendCorrect",
     "[| ?index < fileSize ?cfile1.0;
         Some ?cfile2.0 = cfWrite ?cfile1.0 ?index ?value |]
      ==> Some (abstFn ?cfile2.0) =
          afWrite (abstFn ?cfile1.0) ?index ?value",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 7, template_var 2)),
        template_equation
         (template_app (template_hole 5, template_var 1),
          template_app
           (template_app
             (template_app (template_hole 4, template_var 2),
              template_var 3),
            template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 2)),
             template_var 3),
           template_var 0)))),
    ("FileRefinement.writeSucceedCorrect",
     "[| nextFreeBlockInvariant ?cfile1.0;
         unallocatedBlocksInvariant ?cfile1.0; lastBlockInvariant ?cfile1.0;
         Some ?cfile2.0 = cfWrite ?cfile1.0 ?index ?value |]
      ==> Some (abstFn ?cfile2.0) =
          afWrite (abstFn ?cfile1.0) ?index ?value",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate (template_app (template_hole 7, template_var 3)),
        template_equation
         (template_app (template_hole 5, template_var 2),
          template_app
           (template_app
             (template_app (template_hole 4, template_var 3),
              template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 3)),
             template_var 1),
           template_var 0)))),
    ("FileRefinement.writeExtendCorrect",
     "[| nextFreeBlockInvariant ?cfile1.0;
         unallocatedBlocksInvariant ?cfile1.0; lastBlockInvariant ?cfile1.0;
         ~ ?index < fileSize ?cfile1.0;
         Some ?cfile2.0 = cfWrite ?cfile1.0 ?index ?value |]
      ==> Some (abstFn ?cfile2.0) =
          afWrite (abstFn ?cfile1.0) ?index ?value",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_predicate
         (template_app (template_hole 11, template_var 3)),
        template_predicate
         (template_app (template_hole 10, template_var 3)),
        template_negation
         (
            template_inequation
             (less_than, template_var 2,
              template_app (template_hole 7, template_var 3))
            ),
        template_equation
         (template_app (template_hole 5, template_var 1),
          template_app
           (template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 3)),
             template_var 2),
           template_var 0)))),
    ("FileRefinement.blockNumNELemma",
     "[| nextFreeBlockInvariant ?cfile1.0;
         ?cfile1.0
         (| data :=
              writeCArray (data ?cfile1.0) (?byteIndex div blockSize)
               (writeCArray
                 (readCArray (data ?cfile1.0) (?byteIndex div blockSize))
                 (?byteIndex mod blockSize) ?value) |) =
         ?cfile2.0;
         ~ ?blockNum < nextFreeBlock ?cfile2.0; ?blockNum < numBlocks;
         ?i < blockSize; ?byteIndex div blockSize < numBlocks;
         ?byteIndex < fileSize ?cfile1.0 |]
      ==> ?blockNum ~= ?byteIndex div blockSize",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 5)),
        template_equation
         (template_app
           (template_app (template_hole 13, t_empty), template_var 5),
          template_var 2),
        template_negation
         (
            template_inequation
             (less_than, template_var 1,
              template_app (template_hole 3, template_var 2))
            ),
        template_inequation (less_than, template_var 1, template_hole 2),
        template_inequation (less_than, template_var 0, template_hole 9),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 10, template_var 4),
            template_hole 9),
          template_hole 2),
        template_inequation
         (less_than, template_var 4,
          template_app (template_hole 1, template_var 5))],
       template_negation
        (
           template_equation
            (template_var 1,
             template_app
              (template_app (template_hole 10, template_var 4),
               template_hole 9))
           )))]
