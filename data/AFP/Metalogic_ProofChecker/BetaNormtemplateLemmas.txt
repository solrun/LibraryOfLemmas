   [("BetaNorm.subst_bvs1'_empty", "subst_bvs1' ?t ?lev [] = ?t",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_var 1)),
    ("BetaNorm.beta_step_imp_beta_reducible",
     "?t \<rightarrow>\<^sub>\<beta> ?t' ==> beta_reducible ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("BetaNorm.beta_cases", "Bv ?i \<rightarrow>\<^sub>\<beta> ?t ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 2)),
              template_var 1)
            )],
       template_predicate (template_var 0))),
    ("BetaNorm.subst_bvs_subst_bvs1'",
     "subst_bvs ?s ?t = subst_bvs1' ?t 0 ?s",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 0), template_hole 0),
         template_var 1))),
    ("BetaNorm.beta_cases",
     "Fv ?idn ?S \<rightarrow>\<^sub>\<beta> ?t ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 2)),
              template_var 1)
            )],
       template_predicate (template_var 0))),
    ("BetaNorm.subst_bvs1_subst_bvs1'_0",
     "subst_bvs1 ?t 0 ?s = subst_bvs1' ?t 0 ?s",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_hole 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_hole 1),
         template_var 0))),
    ("BetaNorm.beta_reducible_imp_beta_step",
     "beta_reducible ?t ==> EX t'. ?t \<rightarrow>\<^sub>\<beta> t'",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("BetaNorm.subst_bvs1'_incr_bv",
     "subst_bvs1' (incr_bv (length ?ss) ?k ?t) ?k ?ss = ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 template_var 1),
               template_var 0)),
           template_var 1),
         template_var 2),
       template_var 0)),
    ("BetaNorm.beta_fv",
     "?s \<rightarrow>\<^sub>\<beta> ?t ==> fv ?t <= fv ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("BetaNorm.fv_subst_bv2_upper_bound",
     "fv (subst_bv2 ?t ?lev ?u) <= fv ?t Un fv ?u",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 2)),
         template_app (template_hole 2, template_var 0)))),
    ("BetaNorm.is_closed_subst_bv2_unchanged",
     "is_closed ?t ==> subst_bv2 ?t ?n ?u = ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0),
         template_var 2))),
    ("BetaNorm.beta_norm_imp_beta_reds",
     "beta_norm ?t = Some ?t' ==>
      ?t \<rightarrow>\<^sub>\<beta>\<^sup>* ?t'",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1),
             template_var 0)
           ))),
    ("BetaNorm.lift_preserves_beta",
     "?r \<rightarrow>\<^sub>\<beta> ?s ==>
      lift ?r ?i \<rightarrow>\<^sub>\<beta> lift ?s ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("BetaNorm.beta_subst_bv",
     "?s \<rightarrow>\<^sub>\<beta> ?t ==>
      subst_bv ?x ?s \<rightarrow>\<^sub>\<beta> subst_bv ?x ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("BetaNorm.no_loose_bvar_subst_bvs1'_unchanged",
     "~ loose_bvar ?t ?lev ==> subst_bvs1' ?t ?lev ?args = ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0),
         template_var 2))),
    ("BetaNorm.subst_bvs1_subst_bvs1'",
     "subst_bvs1 ?t ?n ?s = subst_bvs1' ?t ?n (map (incr_bv ?n 0) ?s)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)),
           template_var 0)))),
    ("BetaNorm.subst_bv2_lt",
     "?j < ?i ==> subst_bvs1' (Bv ?j) ?i ?u = Bv ?j",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 1),
           template_var 0),
         template_app (template_hole 0, template_var 2)))),
    ("BetaNorm.subst_bv2_preserves_beta",
     "?r \<rightarrow>\<^sub>\<beta> ?s ==>
      subst_bv2 ?r ?k ?u \<rightarrow>\<^sub>\<beta> subst_bv2 ?s ?k ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("BetaNorm.beta_subst_bv1",
     "?s \<rightarrow>\<^sub>\<beta> ?t ==>
      subst_bv1 ?s ?lev ?x \<rightarrow>\<^sub>\<beta>
      subst_bv1 ?t ?lev ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("BetaNorm.lift_preserves_beta'",
     "?r \<rightarrow>\<^sub>\<beta>\<^sup>* ?s ==>
      lift ?r ?i \<rightarrow>\<^sub>\<beta>\<^sup>* lift ?s ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("BetaNorm.rtrancl_beta_Abs",
     "?s \<rightarrow>\<^sub>\<beta>\<^sup>* ?s' ==>
      Abs ?T ?s \<rightarrow>\<^sub>\<beta>\<^sup>* Abs ?T ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("BetaNorm.rtrancl_beta_AppL",
     "?s \<rightarrow>\<^sub>\<beta>\<^sup>* ?s' ==>
      ?s $ ?t \<rightarrow>\<^sub>\<beta>\<^sup>* ?s' $ ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("BetaNorm.rtrancl_beta_AppR",
     "?t \<rightarrow>\<^sub>\<beta>\<^sup>* ?t' ==>
      ?s $ ?t \<rightarrow>\<^sub>\<beta>\<^sup>* ?s $ ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("BetaNorm.subst_bv2_preserves_beta2",
     "?r \<rightarrow>\<^sub>\<beta> ?s ==>
      subst_bv2 ?t ?i ?r \<rightarrow>\<^sub>\<beta>\<^sup>*
      subst_bv2 ?t ?i ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 2),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0),
                 template_var 3)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("BetaNorm.subst_bvs1'_eq",
     "?args ~= [] ==> subst_bvs1' (Bv ?k) ?k ?args = ?args ! 0",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_var 0),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("BetaNorm.not_loose_bvar_incr_bv",
     "~ loose_bvar ?a ?lev ==>
      ~ loose_bvar (incr_bv ?inc ?lev ?a) (?lev + ?inc)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 0),
                       template_var 1),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))
               )
           ))),
    ("BetaNorm.beta_imp_beta_norm",
     "[| ?t \<rightarrow>\<^sub>\<beta> ?t'; ~ beta_reducible ?t' |]
      ==> beta_norm ?t = Some ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("BetaNorm.subst_bvs1'_App",
     "subst_bvs1' (?s $ ?t) ?k ?args =
      subst_bvs1' ?s ?k ?args $ subst_bvs1' ?t ?k ?args",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("BetaNorm.subst_bv2_preserves_beta'",
     "?r \<rightarrow>\<^sub>\<beta>\<^sup>* ?s ==>
      subst_bv2 ?r ?i ?t \<rightarrow>\<^sub>\<beta>\<^sup>*
      subst_bv2 ?s ?i ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("BetaNorm.subst_bv2_preserves_beta2'",
     "?r \<rightarrow>\<^sub>\<beta>\<^sup>* ?s ==>
      subst_bv2 ?t ?i ?r \<rightarrow>\<^sub>\<beta>\<^sup>*
      subst_bv2 ?t ?i ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0),
                 template_var 3)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("BetaNorm.subst_bvs1'_eq'",
     "?i < length ?args ==>
      subst_bvs1' (Bv (?k + ?i)) ?k ?args = ?args ! ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 2))),
             template_var 0),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("BetaNorm.beta_preserves_typ_of",
     "[| typ_of ?r = Some ?T; ?r \<rightarrow>\<^sub>\<beta> ?s |]
      ==> typ_of ?s = Some ?T",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 2),
          template_app (template_hole 1, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_var 1)))),
    ("BetaNorm.subst_bvs1'_gt",
     "?i + length ?args < ?j ==>
      subst_bvs1' (Bv ?j) ?i ?args = Bv (?j - length ?args)",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 5, template_var 2),
            template_app (template_hole 4, template_var 1)),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_var 2),
           template_var 1),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app (template_hole 4, template_var 1)))))),
    ("BetaNorm.beta_preserves_typ_of1",
     "[| typ_of1 ?Ts ?r = Some ?T; ?r \<rightarrow>\<^sub>\<beta> ?s |]
      ==> typ_of1 ?Ts ?s = Some ?T",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_app (template_hole 1, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 0),
         template_app (template_hole 1, template_var 1)))),
    ("BetaNorm.beta_star_preserves_typ_of1",
     "[| ?r \<rightarrow>\<^sub>\<beta>\<^sup>* ?s;
         typ_of1 ?Ts ?r = Some ?T |]
      ==> typ_of1 ?Ts ?s = Some ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_hole 3),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 3),
          template_app (template_hole 0, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 2),
         template_app (template_hole 0, template_var 0)))),
    ("BetaNorm.rtrancl_beta_App",
     "[| ?s \<rightarrow>\<^sub>\<beta>\<^sup>* ?s';
         ?t \<rightarrow>\<^sub>\<beta>\<^sup>* ?t' |]
      ==> ?s $ ?t \<rightarrow>\<^sub>\<beta>\<^sup>* ?s' $ ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("BetaNorm.subst_bvs_Abs",
     "ALL x:set ?args. is_closed x ==>
      subst_bvs ?args (Abs ?T ?t) = Abs ?T (subst_bvs1' ?t 1 ?args)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 2)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0),
             template_var 2))))),
    ("BetaNorm.is_closed_subst_bvs1'_closeds",
     "[| ~ is_dependent ?t; ALL x:set ?us. is_closed x |]
      ==> ~ is_dependent (subst_bvs1' ?t (Suc ?k) ?us)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              t_empty)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 2),
                     template_app (template_hole 0, template_var 0)),
                   template_var 1))
               )
           ))),
    ("BetaNorm.subst_bvs1'_fold",
     "ALL x:set ?args. is_closed x ==>
      subst_bvs1' ?t ?lev ?args =
      fold (%arg t. subst_bv2 t ?lev arg) ?args ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 2)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 1, t_empty), template_var 2),
           template_var 1)))),
    ("BetaNorm.subst_bvs1'_Abs",
     "ALL x:set ?args. is_closed x ==>
      subst_bvs1' (Abs ?T ?t) ?lev ?args =
      Abs ?T (subst_bvs1' ?t (Suc ?lev) ?args)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 3)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_var 0),
           template_var 3),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 0, template_var 0)),
             template_var 3))))),
    ("BetaNorm.subst_bvs_extend_lower_level",
     "ALL x:set (?a # ?args). is_closed x ==>
      subst_bv ?a (subst_bvs1' ?t 1 ?args) = subst_bvs (?a # ?args) ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 2),
                    template_var 1))),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 7, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("BetaNorm.subst_bvs1'_preserves_beta",
     "[| ALL x:set ?u. is_closed x; ?r \<rightarrow>\<^sub>\<beta> ?s |]
      ==> subst_bvs1' ?r ?k ?u \<rightarrow>\<^sub>\<beta>
          subst_bvs1' ?s ?k ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 3)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0),
                 template_var 3)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 3))
           ))),
    ("BetaNorm.incr_bv_incr_bv",
     "?i < ?k + 1 ==>
      incr_bv ?inc2.0 (?k + ?inc1.0) (incr_bv ?inc1.0 ?i ?t) =
      incr_bv ?inc1.0 ?i (incr_bv ?inc2.0 ?k ?t)",
     template_implication
      ([template_inequation
         (less_than, template_var 4,
          template_app
           (template_app (template_hole 3, template_var 3),
            template_hole 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 4),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 4),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3),
             template_var 0))))),
    ("BetaNorm.subst_bvs1'_step",
     "ALL x:set (?a # ?args). is_closed x ==>
      subst_bvs1' ?t ?lev (?a # ?args) =
      subst_bvs1' (subst_bv2 ?t ?lev ?a) ?lev ?args",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_var 2))),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0),
                 template_var 3)),
             template_var 0),
           template_var 2)))),
    ("BetaNorm.not_loose_bvar_incr_bv_less",
     "[| ?i < ?j; ~ loose_bvar (incr_bv ?inc ?i ?a) (?lev + ?inc) |]
      ==> ~ loose_bvar (incr_bv ?inc ?j ?a) (?lev + ?inc)",
     template_implication
      ([template_inequation (less_than, template_var 4, template_var 3),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app
                       (template_app (template_hole 1, template_var 2),
                        template_var 4),
                      template_var 1)),
                  template_app
                   (template_app (template_hole 0, template_var 0),
                    template_var 2))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 3),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2))
               )
           ))),
    ("BetaNorm.beta_cases",
     "[| Abs ?T ?r \<rightarrow>\<^sub>\<beta> ?s;
         !!t. [| ?s = Abs ?T t; ?r \<rightarrow>\<^sub>\<beta> t |]
              ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("BetaNorm.subst_bvs1'_step_extend_lower_level",
     "ALL x:set (?a # ?args). is_closed x ==>
      subst_bv2 (subst_bvs1' ?t (Suc ?lev) ?args) ?lev ?a =
      subst_bvs1' ?t ?lev (?a # ?args)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_var 2))),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app (template_hole 0, template_var 0)),
                 template_var 2)),
             template_var 0),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2))))),
    ("BetaNorm.lift_subst_bvs1'_lt",
     "?i < ?j + 1 ==>
      lift (subst_bvs1' ?t ?j ?ss) ?i =
      subst_bvs1' (lift ?t ?i) (?j + 1) (map (%s. lift s ?i) ?ss)",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app
           (template_app (template_hole 5, template_var 2),
            template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2),
               template_var 0)),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 3)),
             template_app
              (template_app (template_hole 5, template_var 2),
               template_hole 4)),
           template_app
            (template_app (template_hole 0, t_empty), template_var 0))))),
    ("BetaNorm.loose_bvar1_subst_bvs1'_closeds",
     "[| ~ loose_bvar1 ?t ?lev; ?lev < ?k; ALL x:set ?us. is_closed x |]
      ==> ~ loose_bvar1 (subst_bvs1' ?t ?k ?us) ?lev",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)
                )
            ),
        template_inequation (less_than, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              t_empty)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 1),
                     template_var 0)),
                 template_var 2)
               )
           ))),
    ("BetaNorm.lift_subst_bvs1'",
     "?j < ?i + 1 ==>
      lift (subst_bvs1' ?t ?j ?ss) ?i =
      subst_bvs1' (lift ?t (?i + length ?ss)) ?j (map (%s. lift s ?i) ?ss)",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app
           (template_app (template_hole 6, template_var 2),
            template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_app (template_hole 1, template_var 0)))),
             template_var 3),
           template_app
            (template_app (template_hole 0, t_empty), template_var 0))))),
    ("BetaNorm.subst_bvs1'_subst_bv2",
     "?i < ?j + 1 ==>
      subst_bv2 (subst_bvs1' ?t (Suc ?j) (map (%v. lift v ?i) ?vs)) ?i
       (subst_bvs1' ?u ?j ?vs) =
      subst_bvs1' (subst_bv2 ?t ?i ?u) ?j ?vs",
     template_implication
      ([template_inequation
         (less_than, template_var 4,
          template_app
           (template_app (template_hole 7, template_var 3),
            template_hole 6))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_app (template_hole 2, template_var 3)),
                 template_app
                  (template_app (template_hole 1, t_empty),
                   template_var 1))),
             template_var 4),
           template_app
            (template_app
              (template_app (template_hole 3, template_var 0),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 4),
                 template_var 0)),
             template_var 3),
           template_var 1)))),
    ("BetaNorm.subst_bvs1'_step_work",
     "[| ALL x:set ?args. is_closed x;
         ~ loose_bvar (subst_bv2 ?t ?lev ?a) ?lev |]
      ==> subst_bvs1' ?t ?lev (?a # ?args) =
          subst_bvs1' (subst_bv2 ?t ?lev ?a) ?lev ?args",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 3)),
              t_empty)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app
                       (template_app (template_hole 3, template_var 2),
                        template_var 1),
                      template_var 0)),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3)),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_var 1),
           template_var 3)))),
    ("BetaNorm.subst_bv1_beta",
     "[| subst_bv1 ?s (length (?T # ?Ts)) ?x \<rightarrow>\<^sub>\<beta>
         subst_bv1 ?t (length (?T # ?Ts)) ?x;
         typ_of1 ?Ts ?s = Some ?ty; typ_of1 ?Ts ?t = Some ?ty |]
      ==> ?s \<rightarrow>\<^sub>\<beta> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_app (template_hole 5, template_var 5),
                    template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 4),
                        template_var 3))),
                  template_var 2)),
              template_app
               (template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 4),
                      template_var 3))),
                template_var 2))
            ),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 5),
          template_app (template_hole 0, template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 5), template_var 1)
           ))),
    ("BetaNorm.beta_cases",
     "[| ?s $ ?t \<rightarrow>\<^sub>\<beta> ?u;
         !!T s. [| ?s = Abs T s; ?u = subst_bv2 s 0 ?t |] ==> ?P;
         !!t. [| ?u = t $ ?t; ?s \<rightarrow>\<^sub>\<beta> t |] ==> ?P;
         !!t. [| ?u = ?s $ t; ?t \<rightarrow>\<^sub>\<beta> t |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0)))]
