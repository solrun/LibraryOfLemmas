   [("CheckerExe.exe_check_proof_iff_check_proof",
     "exe_check_proof ?e ?P ?res =
      check_proof (translate_theory ?e) ?P ?res",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0))),
    ("CheckerExe.execlass_leq_code",
     "class_leq (set ?cs) ?c1.0 ?c2.0 = execlass_leq ?cs ?c1.0 ?c2.0",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("CheckerExe.exesort_les_code",
     "sort_leq (set ?cs) ?c1.0 ?c2.0 = exesort_leq ?cs ?c1.0 ?c2.0",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("CheckerExe.term_ok_code",
     "exe_wf_theory' ?\<Theta> ==>
      term_ok (translate_theory ?\<Theta>) ?t = exeterm_ok ?\<Theta> ?t",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("CheckerExe.replay_code",
     "exe_wf_theory' ?thy ==>
      replay (translate_theory ?thy) ?P = exereplay ?thy ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("CheckerExe.typ_ok_code",
     "exe_wf_theory' ?\<Theta> ==>
      typ_ok (translate_theory ?\<Theta>) ?ty = exetyp_ok ?\<Theta> ?ty",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("CheckerExe.check_proof_sound",
     "exe_check_proof ?e ?P ?res ==>
      translate_theory ?e,set (hyps ?P) \<turnstile> ?res",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("CheckerExe.check_proof_really_sound",
     "exe_check_proof ?e ?P ?res ==>
      translate_theory ?e,set (hyps ?P) \<tturnstile> ?res",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("CheckerExe.has_sort_code",
     "exe_osig_conds ?oss ==>
      has_sort (translate_osig ?oss) ?T ?S = exehas_sort ?oss ?T ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("CheckerExe.has_sort_code'",
     "exe_wf_theory' ?\<Theta> ==>
      has_sort (osig (sig (translate_theory ?\<Theta>))) ?T ?S =
      exehas_sort (exesorts (exesig ?\<Theta>)) ?T ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 2)))),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2))),
             template_var 1),
           template_var 0)))),
    ("CheckerExe.replay'_code",
     "exe_wf_theory' ?thy ==>
      replay' (translate_theory ?thy) ?vs ?ns ?Hs ?P =
      exereplay' ?thy ?vs ?ns ?Hs ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 4)),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("CheckerExe.inst_ok_code1",
     "exe_wf_theory' ?\<Theta> ==>
      list_all (exetyp_ok ?\<Theta>) (map snd ?insts) =
      list_all (typ_ok (translate_theory ?\<Theta>)) (map snd ?insts)",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 1))),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1))),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0))))),
    ("CheckerExe.exehas_sort_imp_has_sort",
     "[| exe_osig_conds (?sub, ?tcs); exehas_sort (?sub, ?tcs) ?T ?S |]
      ==> has_sort (translate_osig (?sub, ?tcs)) ?T ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_var 2))),
               template_var 1),
             template_var 0)
           ))),
    ("CheckerExe.has_sort_imp_exehas_sort",
     "[| exe_osig_conds (?sub, ?tcs);
         has_sort (translate_osig (?sub, ?tcs)) ?T ?S |]
      ==> exehas_sort (?sub, ?tcs) ?T ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_hole 1,
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 2))),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("CheckerExe.replay''_code",
     "exe_wf_theory' ?thy ==>
      replay'' (translate_theory ?thy) ?vs ?ns ?Hs ?P =
      exereplay'' ?thy ?vs ?ns ?Hs ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 5,
                       template_app (template_hole 4, template_var 4)),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           t_empty),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           t_empty)))),
    ("CheckerExe.inst_ok_code2",
     "exe_wf_theory' ?\<Theta> ==>
      list_all
       (%((idn, S), T).
           has_sort (osig (sig (translate_theory ?\<Theta>))) T S)
       ?insts =
      list_all
       (%((idn, S), T). exehas_sort (exesorts (exesig ?\<Theta>)) T S)
       ?insts",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8, template_app (template_hole 7, t_empty))),
           template_var 0),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8, template_app (template_hole 7, t_empty))),
           template_var 0)))),
    ("CheckerExe.of_class_code1",
     "exe_wf_theory' ?thy ==>
      (has_sort (osig (sig (translate_theory ?thy))) ?ty
        (insert ?c full_sort) &
       typ_ok (translate_theory ?thy) ?ty) =
      (exehas_sort (exesorts (exesig ?thy)) ?ty (insert ?c full_sort) &
       exetyp_ok ?thy ?ty)",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_hole 9,
                     template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_var 2)))),
                 template_var 1),
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_hole 5))),
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 7, template_var 2)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 2))),
                 template_var 1),
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_hole 5))),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 2)),
             template_var 1))))),
    ("CheckerExe.inst_ok_code",
     "exe_wf_theory' ?\<Theta> ==>
      inst_ok (translate_theory ?\<Theta>) ?insts =
      exeinst_ok ?\<Theta> ?insts",
     template_implication
      ([template_predicate
         (template_app (template_hole 20, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 18,
             template_app
              (template_hole 17,
               template_app
                (template_app (template_hole 16, template_hole 15),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 18,
               template_app
                (template_app
                  (template_hole 14,
                   template_app
                    (template_hole 13,
                     template_app (template_hole 12, template_var 1))),
                 template_app
                  (template_app (template_hole 11, template_hole 10),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_hole 8,
                   template_app (template_hole 7, t_empty))),
               template_var 0))),
         template_app
          (template_app
            (template_hole 18,
             template_app
              (template_hole 17,
               template_app
                (template_app (template_hole 16, template_hole 15),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 18,
               template_app
                (template_app
                  (template_hole 14,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 1))),
                 template_app
                  (template_app (template_hole 11, template_hole 10),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_hole 8,
                   template_app (template_hole 7, t_empty))),
               template_var 0)))))),
    ("CheckerExe.of_class_code2",
     "exe_wf_theory' ?thy ==>
      const_type (sig (translate_theory ?thy)) (const_of_class ?c) =
      lookup (%k. k = const_of_class ?c) (execonst_type_of (exesig ?thy))",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 13,
             template_app
              (template_hole 12,
               template_app (template_hole 11, template_var 1))),
           template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 9,
                 template_app (template_hole 8, template_var 0)),
               template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 7, template_hole 6),
                               template_hole 6),
                             template_hole 6),
                           template_hole 6),
                         template_hole 6),
                       template_hole 5),
                     template_hole 6),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 7, template_hole 6),
                                 template_hole 6),
                               template_hole 5),
                             template_hole 5),
                           template_hole 5),
                         template_hole 6),
                       template_hole 6),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 7, template_hole 5),
                                   template_hole 5),
                                 template_hole 6),
                               template_hole 6),
                             template_hole 5),
                           template_hole 6),
                         template_hole 6),
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 7, template_hole 6),
                                     template_hole 5),
                                   template_hole 5),
                                 template_hole 5),
                               template_hole 5),
                             template_hole 6),
                           template_hole 6),
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 7, template_hole 6), template_hole 6),
                                     template_hole 5),
                                   template_hole 5),
                                 template_hole 6),
                               template_hole 6),
                             template_hole 6),
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 7, template_hole 6), template_hole 6),
 template_hole 5),
                                     template_hole 5),
                                   template_hole 6),
                                 template_hole 6),
                               template_hole 6),
                             template_hole 4)))))))))),
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1))))))]
