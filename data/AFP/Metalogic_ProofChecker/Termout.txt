Loading theory "Draft.Core" (required by "Draft.TermMoreTemplates" via "Draft.Term")
Loading theory "HOL-Library.AList" (required by "Draft.TermMoreTemplates" via "Draft.Term" via "Draft.Preliminaries")
Loading theory "HOL-Eisbach.Eisbach" (required by "Draft.TermMoreTemplates" via "Draft.Term" via "Draft.Preliminaries")
Loading theory "HOL-Library.Case_Converter" (required by "Draft.TermMoreTemplates" via "Draft.Term" via "Draft.Preliminaries" via "HOL-Library.Simps_Case_Conv")
signature PARSE_TOOLS =
  sig
    val is_real_val: ('a, 'b) parse_val -> bool
    val name_term: (term, string) parse_val parser
    val parse_term_val: 'a parser -> (term, 'a) parse_val parser
    val parse_thm_val: 'a parser -> (thm, 'a) parse_val parser
    datatype ('a, 'b) parse_val
    = Parse_Val of 'b * ('a -> unit) | Real_Val of 'a
    val parse_val_cases:
       ('a -> 'b) -> ('b, 'a) parse_val -> 'b * ('b -> unit)
    val the_parse_fun: ('a, 'b) parse_val -> 'a -> unit
    val the_parse_val: ('a, 'b) parse_val -> 'b
    val the_real_val: ('a, 'b) parse_val -> 'a
  end
structure Parse_Tools: PARSE_TOOLS
consts
  update :: "'key => 'val => ('key * 'val) list => ('key * 'val) list"
signature METHOD_CLOSURE =
  sig
    val apply_method:
       Proof.context ->
         string ->
           term list ->
             thm list list ->
               (Proof.context -> Method.method) list ->
                 Proof.context -> thm list -> context_tactic
    val method:
       binding ->
         (binding * typ option * mixfix) list ->
           binding list ->
             binding list ->
               binding list ->
                 Token.src -> local_theory -> string * local_theory
    val method_cmd:
       binding ->
         (binding * string option * mixfix) list ->
           binding list ->
             binding list ->
               binding list ->
                 Token.src -> local_theory -> string * local_theory
  end
structure Method_Closure: METHOD_CLOSURE
structure Eisbach_Rule_Insts: sig end
signature CASE_CONVERTER =
  sig
    type elimination_strategy
    val keep_constructor_context: elimination_strategy
    val replace_by_type:
       (Proof.context -> string * string -> bool) -> elimination_strategy
    val to_case:
       Proof.context ->
         elimination_strategy ->
           (string * typ -> int) -> thm list -> thm list option
  end
structure Case_Converter: CASE_CONVERTER
### theory "HOL-Library.Case_Converter"
### 0.188s elapsed time, 0.735s cpu time, 0.036s GC time
Loading theory "HOL-Library.Simps_Case_Conv" (required by "Draft.TermMoreTemplates" via "Draft.Term" via "Draft.Preliminaries")
consts
  update_with_aux ::
    "'val
     => 'key => ('val => 'val) => ('key * 'val) list => ('key * 'val) list"
signature SIMPS_CASE_CONV =
  sig
    val gen_to_simps: Proof.context -> thm list -> thm -> thm list
    val to_case: Proof.context -> thm list -> thm
    val to_simps: Proof.context -> thm -> thm list
  end
structure Simps_Case_Conv: SIMPS_CASE_CONV
### theory "HOL-Library.Simps_Case_Conv"
### 0.075s elapsed time, 0.279s cpu time, 0.050s GC time
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.TermMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### ML warning (line 170 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
### ML warning (line 187 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
### ML warning (line 309 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
signature MATCH_METHOD =
  sig
    val focus_params: Proof.context -> term list
    val focus_schematics: Proof.context -> Envir.tenv
  end
structure Match_Method: MATCH_METHOD
### theory "HOL-Library.Function_Algebras"
### 0.109s elapsed time, 0.419s cpu time, 0.051s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.TermMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
val method_evaluate = fn: Method.text -> Proof.context -> thm list -> tactic
### theory "HOL-Eisbach.Eisbach"
### 0.422s elapsed time, 1.634s cpu time, 0.136s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.TermMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.201s elapsed time, 0.840s cpu time, 0.057s GC time
Loading theory "HOL-Library.Sublist" (required by "Draft.TermMoreTemplates" via "Draft.Term" via "Draft.Preliminaries")
### theory "HOL-Library.Nat_Bijection"
### 0.333s elapsed time, 1.345s cpu time, 0.139s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.TermMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. size_list size (snd (snd p))) <*mlex*> {}"
consts
  prefixes :: "'a list => 'a list list"
Found termination order:
  "(%p. size_list size (snd (snd (snd p)))) <*mlex*> {}"
### theory "HOL-Library.AList"
### 1.193s elapsed time, 4.552s cpu time, 0.791s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.TermMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Proofs for inductive predicate(s) "has_typ1"
  Proving monotonicity ...
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  suffixes :: "'a list => 'a list list"
consts
  flat :: "'a list stream => 'a stream"
Proofs for inductive predicate(s) "list_emb"
  Proving monotonicity ...
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.099s elapsed time, 4.166s cpu time, 0.816s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.TermMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
consts
  sublists :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Sublist"
### 1.691s elapsed time, 6.478s cpu time, 1.086s GC time
Loading theory "List-Index.List_Index" (required by "Draft.TermMoreTemplates" via "Draft.Term" via "Draft.Preliminaries")
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
consts
  find_index :: "('a => bool) => 'a list => nat"
Proofs for inductive predicate(s) "has_sort"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
consts
  map_index' :: "nat => (nat => 'a => 'b) => 'a list => 'b list"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
consts
  insert_nth :: "nat => 'a => 'a list => 'a list"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.871s elapsed time, 3.421s cpu time, 0.371s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "List-Index.List_Index"
### 0.428s elapsed time, 1.610s cpu time, 0.184s GC time
Loading theory "Draft.Preliminaries" (required by "Draft.TermMoreTemplates" via "Draft.Term")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "{}"
Proofs for inductive predicate(s) "wf_type"
  Proving monotonicity ...
Proofs for inductive predicate(s) "wf_term"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "HOL-Library.Tree"
### 2.030s elapsed time, 7.486s cpu time, 0.794s GC time
Loading theory "Draft.Templates" (required by "Draft.TermMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.075s elapsed time, 0.231s cpu time, 0.047s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.TermMoreTemplates")
Found termination order: "{}"
Proofs for inductive predicate(s) "proves"
  Proving monotonicity ...
### Ambiguous input (line 311 of "$AFP/Metalogic_ProofChecker/Core.thy") produces 3 parse trees:
### ("\<^const>Pure.eq"
###   ("_applC" ("_position" proves')
###     ("_cargs" ("_position" \<Theta>)
###       ("_cargs" ("_position" \<Gamma>) ("_position" t))))
###   ("\<^const>Core.proves"
###     ("\<^const>HOL.conj"
###       ("_applC" ("_position" wf_theory) ("_position" \<Theta>))
###       ("\<^const>HOL.conj"
###         ("_Ball" ("_position" h) ("_position" \<Gamma>)
###           ("\<^const>HOL.conj"
###             ("_applC" ("_position" wf_term)
###               ("_cargs" ("_applC" ("_position" sig) ("_position" \<Theta>))
###                 ("_position" h)))
###             ("_applC" ("_position" has_typ)
###               ("_cargs" ("_position" h) ("_position" propT)))))
###         ("_position" \<Theta>)))
###     ("_position" \<Gamma>) ("_position" t)))
### ("\<^const>Pure.eq"
###   ("_applC" ("_position" proves')
###     ("_cargs" ("_position" \<Theta>)
###       ("_cargs" ("_position" \<Gamma>) ("_position" t))))
###   ("\<^const>HOL.conj"
###     ("_applC" ("_position" wf_theory) ("_position" \<Theta>))
###     ("\<^const>Core.proves"
###       ("\<^const>HOL.conj"
###         ("_Ball" ("_position" h) ("_position" \<Gamma>)
###           ("\<^const>HOL.conj"
###             ("_applC" ("_position" wf_term)
###               ("_cargs" ("_applC" ("_position" sig) ("_position" \<Theta>))
###                 ("_position" h)))
###             ("_applC" ("_position" has_typ)
###               ("_cargs" ("_position" h) ("_position" propT)))))
###         ("_position" \<Theta>))
###       ("_position" \<Gamma>) ("_position" t))))
### ("\<^const>Pure.eq"
###   ("_applC" ("_position" proves')
###     ("_cargs" ("_position" \<Theta>)
###       ("_cargs" ("_position" \<Gamma>) ("_position" t))))
###   ("\<^const>HOL.conj"
###     ("_applC" ("_position" wf_theory) ("_position" \<Theta>))
###     ("\<^const>HOL.conj"
###       ("_Ball" ("_position" h) ("_position" \<Gamma>)
###         ("\<^const>HOL.conj"
###           ("_applC" ("_position" wf_term)
###             ("_cargs" ("_applC" ("_position" sig) ("_position" \<Theta>))
###               ("_position" h)))
###           ("_applC" ("_position" has_typ)
###             ("_cargs" ("_position" h) ("_position" propT)))))
###       ("\<^const>Core.proves" ("_position" \<Theta>) ("_position" \<Gamma>)
###         ("_position" t)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### theory "Draft.Core"
### 3.739s elapsed time, 13.612s cpu time, 1.729s GC time
Found termination order: "{}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.617s elapsed time, 1.820s cpu time, 0.145s GC time
Found termination order: "{}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
*** Undefined fact: "Cons.prems" (line 69 of "$AFP/Metalogic_ProofChecker/Preliminaries.thy")
*** At command "thm" (line 69 of "$AFP/Metalogic_ProofChecker/Preliminaries.thy")
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
### theory "Draft.Preliminaries"
### 1.616s elapsed time, 4.029s cpu time, 0.383s GC time
Loading theory "Draft.Term" (required by "Draft.TermMoreTemplates")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
(?m < Suc ?n) = (?m < ?n | ?m = ?n)
?n < length (butlast ?xs) ==> butlast ?xs ! ?n = ?xs ! ?n
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (fst (snd p))) <*mlex*> {}"
Found termination order: "(%p. size (fst (snd p))) <*mlex*> {}"
Found termination order: "(%p. size (fst (snd p))) <*mlex*> {}"
### Missing patterns in function definition:
### !!v va. replace_types (Fv v va) [] = undefined
### !!v va. replace_types (Abs v va) [] = undefined
### !!v va. replace_types (Ct v va) [] = undefined
### (2 more)
Found termination order:
  "(%p. size_list size (snd p)) <*mlex*> (%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "{}"
### theory "Draft.Term"
### 6.370s elapsed time, 9.025s cpu time, 2.608s GC time
Loading theory "Draft.TermMoreTemplates"
val templateLemmas =
   [("Term.finite_Sorts", "finite (Sorts ?t)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Term.finite_SortsT", "finite (SortsT ?T)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Term.finite_Types", "finite (Types ?t)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Term.finite_tvs", "finite (tvs ?t)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Term.finite_tvsT", "finite (tvsT ?T)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Term.finite_fv", "finite (fv ?t)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Term.not_eta_reducible_eta_norm", "~ eta_reducible (eta_norm ?t)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("Term.map_types_id", "map_types id ?t = ?t",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Term.mk_all_list_empty", "mk_all_list [] ?t = ?t",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Term.eta_norm_collapse", "eta_norm (eta_norm ?t) = eta_norm ?t",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Term.strip_all_body_single_simp",
     "strip_all_body (strip_all_single_body ?t) = strip_all_body ?t",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Term.strip_all_body_single_simp'",
     "strip_all_single_body (strip_all_body ?t) = strip_all_body ?t",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Term.incr_bv_0", "incr_bv 0 ?lev ?t = ?t",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 1),
         template_var 0),
       template_var 0)),
    ("Term.map_types_id'", "map_types (%a. a) ?t = ?t",
     template_equation
      (template_app
        (template_app (template_hole 0, t_empty), template_var 0),
       template_var 0)),
    ("Term.length_strip_all_multiple_vars",
     "length (strip_all_multiple_vars ?n ?t) <= ?n",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Term.prefix_strip_all_multiple_vars",
     "prefix (strip_all_multiple_vars ?n ?t) (strip_all_vars ?t)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Term.depth_decr", "depth (decr ?lev ?t) = depth ?t",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Term.fv_incr_boundvars", "fv (incr_boundvars ?inc ?t) = fv ?t",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Term.add_vars'_fv", "set (add_vars' ?t []) = fv ?t",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("Term.exists_subterm_iff_exists_subterm'",
     "exists_subterm ?P ?t = exists_subterm' ?P ?t",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Term.subst_bv2_eq", "subst_bv2 (Bv ?k) ?k ?u = ?u",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 1),
         template_var 0),
       template_var 0)),
    ("Term.beta_norm_simps", "beta_norm (Bv ?x) = Some (Bv ?x)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("Term.finite_FV", "finite ?S ==> finite (FV ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Term.fv_incr_bv", "fv (incr_bv ?inc ?lev ?t) = fv ?t",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Term.is_all_iff_strip_all_vars_not_empty",
     "is_all ?t = (strip_all_vars ?t ~= [])",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Term.strip_all_single_var_is_all",
     "(strip_all_single_var ?t ~= None) = is_all ?t",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("Term.substn_subst_0'", "subst_bv ?s ?t = subst_bv2 ?t 0 ?s",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 0), template_hole 0),
         template_var 1))),
    ("Term.fst_strip_comb_imp_eq_head_of",
     "fst (strip_comb_imp (?t, ?ts)) = head_of ?t",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app (template_hole 0, template_var 1))),
    ("Term.subst_bv2_lift", "subst_bv2 (lift ?t ?k) ?k ?s = ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 1),
         template_var 0),
       template_var 2)),
    ("Term.decr_incr_bv1", "decr ?lev (incr_bv 1 ?lev ?t) = ?t",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)),
       template_var 0)),
    ("Term.strip_all_vars_bind_fv",
     "strip_all_vars (bind_fv2 ?v ?lev ?t) = strip_all_vars ?t",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Term.has_typ_imp_closed",
     "\<turnstile>\<^sub>\<tau> ?t : ?ty ==> is_closed ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 1))
           ))),
    ("Term.loose_bvar1_imp_loose_bvar",
     "loose_bvar1 ?t ?n ==> loose_bvar ?t ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Term.has_typ_iff_typ_of",
     "\<turnstile>\<^sub>\<tau> ?t : ?ty = (typ_of ?t = Some ?ty)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Term.substn_subst_0", "subst_bv1 ?t 0 ?s = subst_bv2 ?t 0 ?s",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_hole 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_hole 1),
         template_var 0))),
    ("Term.is_variable_imp_incr_boundvars_unchganged",
     "incr_boundvars ?inc (Fv ?v ?T) = Fv ?v ?T",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Term.beta_norm_simps", "beta_norm (Ct ?xa ?x) = Some (Ct ?xa ?x)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Term.beta_norm_simps", "beta_norm (Fv ?xa ?x) = Some (Fv ?xa ?x)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Term.not_eta_reducible_imp_eta_norm_no_change",
     "~ eta_reducible ?t ==> eta_norm ?t = ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 0))),
    ("Term.not_is_all_imp_strip_all_body_unchanged",
     "~ is_all ?t ==> strip_all_body ?t = ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 0))),
    ("Term.loose_bvar1_eta_norm",
     "loose_bvar1 ?t ?lev ==> loose_bvar1 (eta_norm ?t) ?lev",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Term.loose_bvar_Suc", "loose_bvar ?t (Suc ?k) ==> loose_bvar ?t ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("Term.add_tvars'_tvs_pre",
     "set (add_tvars' ?t ?acc) = set ?acc Un tvs ?t",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Term.add_tvarsT'_tvsT_pre",
     "set (add_tvarsT' ?T ?acc) = set ?acc Un tvsT ?T",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Term.mk_all_list_fv_unchanged",
     "fv (mk_all_list ?l ?B) = fv ?B - set ?l",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Term.add_vars'_fv_pre", "set (add_vars' ?t ?acc) = set ?acc Un fv ?t",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Term.is_variable_imp_incr_bv_unchanged",
     "incr_bv ?inc ?lev (Fv ?v ?T) = Fv ?v ?T",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Term.beta_norm_simps",
     "beta_norm (Abs ?xa ?x) = map_option (Abs ?xa) (beta_norm ?x)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Term.not_beta_reducible_decr",
     "~ beta_reducible ?t ==> ~ beta_reducible (decr ?n ?t)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 1))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))
               )
           ))),
    ("Term.not_beta_reducible_imp_beta_norm_unchanged",
     "~ beta_reducible ?t ==> beta_norm ?t = Some ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Term.closed_subst_bv_no_change",
     "is_closed ?t ==> subst_bv ?u ?t = ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("Term.is_closed_decr_unchanged", "is_closed ?t ==> decr 0 ?t = ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 0),
         template_var 0))),
    ("Term.is_close_no_incr_boundvars",
     "is_closed ?t ==> incr_boundvars ?inc ?t = ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("Term.no_loose_bvar_imp_no_subst_bvs",
     "is_closed ?t ==> subst_bvs [] ?t = ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 0),
         template_var 0))),
    ("Term.not_loose_bvar_imp_not_loose_bvar1",
     "~ loose_bvar ?t ?n ==> ~ loose_bvar1 ?t ?n",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)
               )
           ))),
    ("Term.eta_reducible_Abs",
     "~ eta_reducible (Abs ?T ?t) ==> ~ eta_reducible ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 1),
                    template_var 0))
                )
            )],
       template_negation
        (
           template_predicate
            (template_app (template_hole 1, template_var 0))
           ))),
    ("Term.typ_of_imp_has_typ",
     "typ_of ?t = Some ?ty ==> \<turnstile>\<^sub>\<tau> ?t : ?ty",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Term.typ_of_imp_closed", "typ_of ?t = Some ?ty ==> is_closed ?t",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 1))
           ))),
    ("Term.has_typ1_iff_typ_of1",
     "?Ts \<turnstile>\<^sub>\<tau> ?t : ?ty = (typ_of1 ?Ts ?t = Some ?ty)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Term.subst_bv1_special_case_subst_bvs1",
     "subst_bvs1 ?t ?lev [?x] = subst_bv1 ?t ?lev ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Term.beta_norm_simps",
     "beta_norm (Abs ?xa ?x $ ?xaa) = beta_norm (subst_bv ?xaa ?x)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Term.finite_tvsT_Set", "finite ?S ==> finite (tvsT_Set ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, t_empty), template_var 0)))
           ))),
    ("Term.finite_tvs_Set", "finite ?S ==> finite (tvs_Set ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, t_empty), template_var 0)))
           ))),
    ("Term.not_is_app_imp_strip_com_unchanged",
     "~ is_app ?t ==> strip_comb ?t = (?t, [])",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Term.eta_norm_reduces_depth",
     "eta_norm_dom ?t ==> depth (eta_norm ?t) <= depth ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Term.has_typ1_imp_no_loose_bvar",
     "?Ts \<turnstile>\<^sub>\<tau> ?t : ?ty ==>
      ~ loose_bvar ?t (length ?Ts)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 0, template_var 2))
               )
           ))),
    ("Term.loose_bvar_decr_unchanged",
     "~ loose_bvar ?t ?k ==> decr ?k ?t = ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("Term.loose_bvar1_eta_norm'",
     "~ loose_bvar1 ?t ?lev ==> ~ loose_bvar1 (eta_norm ?t) ?lev",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)),
                 template_var 0)
               )
           ))),
    ("Term.no_tvs_imp_tsubst_unchanged",
     "tvs ?t = {} ==> tsubst ?t ?\<rho> = ?t",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1), template_hole 2)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("Term.no_tvsT_imp_tsubsT_unchanged",
     "tvsT ?T = {} ==> tsubstT ?T ?\<rho> = ?T",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1), template_hole 2)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("Term.no_fv_imp_subst_unchanged",
     "fv ?t = {} ==> subst ?t ?\<rho> = ?t",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1), template_hole 2)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("Term.is_closed_subst_bv",
     "is_closed (subst_bv ?u ?t) ==> ~ loose_bvar ?t 1",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_var 0))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)
               )
           ))),
    ("Term.loose_bvar_incr_bvar",
     "loose_bvar ?t ?lev = loose_bvar (incr_bv ?inc ?lev ?t) (?lev + ?inc)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2), template_var 1),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Term.substn_subst_n",
     "subst_bv1 ?t ?n ?s = subst_bv2 ?t ?n (incr_bv ?n 0 ?s)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0),
           template_var 0)))),
    ("Term.has_typ1_imp_typ_of1",
     "?Ts \<turnstile>\<^sub>\<tau> ?t : ?ty ==> typ_of1 ?Ts ?t = Some ?ty",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Term.loose_bvar_decr",
     "~ loose_bvar ?t ?k ==> ~ loose_bvar (decr ?k ?t) ?k",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1)),
                 template_var 0)
               )
           ))),
    ("Term.no_loose_bvar_no_incr",
     "~ loose_bvar ?t ?lev ==> incr_bv ?inc ?lev ?t = ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1),
           template_var 2),
         template_var 2))),
    ("Term.no_loose_bvar_imp_no_subst_bv1",
     "~ loose_bvar ?t ?lev ==> subst_bv1 ?t ?lev ?u = ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0),
         template_var 2))),
    ("Term.no_loose_bvar_imp_no_subst_bvs1",
     "~ loose_bvar ?t ?lev ==> subst_bvs1 ?t ?lev ?us = ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0),
         template_var 2))),
    ("Term.bind_fv_changed", "bind_fv ?v ?tm ~= ?tm ==> ?v : fv ?tm",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Term.typ_of1_imp_has_typ1",
     "typ_of1 ?Ts ?t = Some ?ty ==> ?Ts \<turnstile>\<^sub>\<tau> ?t : ?ty",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Term.loose_bvar_iff_exist_loose_bvar1",
     "loose_bvar ?t ?lev = (EX lev'>=?lev. loose_bvar1 ?t lev')",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app (template_hole 3, t_empty))),
    ("Term.subst_bvs_App",
     "subst_bvs ?args (?s $ ?t) = subst_bvs ?args ?s $ subst_bvs ?args ?t",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Term.not_is_app_imp_strip_com_imp_unchanged",
     "~ is_app ?t ==> strip_comb_imp (?t, ?ts) = (?t, ?ts)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Term.subst_bv2_subst_lt",
     "?j < ?i ==> subst_bv2 (Bv ?j) ?i ?u = Bv ?j",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 1),
           template_var 0),
         template_app (template_hole 0, template_var 2)))),
    ("Term.typ_of_eta_norm",
     "typ_of ?t = Some ?ty ==> typ_of (eta_norm ?t) = Some ?ty",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Term.strip_all_vars_strip_all_multiple_vars",
     "length (strip_all_vars ?t) <= ?n ==>
      strip_all_multiple_vars ?n ?t = strip_all_vars ?t",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 1)),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app (template_hole 2, template_var 1)))),
    ("Term.typ_of1_imp_no_loose_bvar",
     "typ_of1 ?Ts ?t = Some ?ty ==> ~ loose_bvar ?t (length ?Ts)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 2), template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 0, template_var 2))
               )
           ))),
    ("Term.bind_fv2_changed", "bind_fv2 ?v ?lev ?tm ~= ?tm ==> ?v : fv ?tm",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_var 0),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Term.eta_reducible_Abs1",
     "~ eta_reducible (Abs ?T (?t $ Bv 0)) ==> ~ eta_reducible ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_app
                     (template_app (template_hole 2, template_var 0),
                      template_app (template_hole 1, template_hole 0))))
                )
            )],
       template_negation
        (
           template_predicate
            (template_app (template_hole 4, template_var 0))
           ))),
    ("Term.loose_bvar_leq",
     "[| ?p <= ?k; loose_bvar ?t ?k |] ==> loose_bvar ?t ?p",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("Term.incr_bv_combine",
     "incr_bv ?m ?k (incr_bv ?n ?k ?s) = incr_bv (?m + ?n) ?k ?s",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_var 2),
         template_var 0))),
    ("Term.list_comb_fuse",
     "list_comb (list_comb (?t, ?ts), ?ss) = list_comb (?t, ?ts @ ?ss)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1))),
           template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Term.strip_all_vars_mk_all_list",
     "~ is_all ?t ==>
      strip_all_vars (mk_all_list ?l ?t) = rev (map snd ?l)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Term.has_typ1_weaken_Ts",
     "?Ts \<turnstile>\<^sub>\<tau> ?t : ?rT ==>
      ?Ts @ [?T] \<turnstile>\<^sub>\<tau> ?t : ?rT",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_hole 0))),
               template_var 2),
             template_var 1)
           ))),
    ("Term.loose_bvar_subst_bv1",
     "~ loose_bvar (subst_bv1 ?t ?lev ?u) ?lev ==>
      ~ loose_bvar ?t (Suc ?lev)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app
                       (template_app (template_hole 1, template_var 2),
                        template_var 1),
                      template_var 0)),
                  template_var 1)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app (template_hole 0, template_var 1))
               )
           ))),
    ("Term.fv_iff_occs",
     "((?x, ?\<tau>) : fv ?t) = occs (Fv ?x ?\<tau>) ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app (template_hole 2, t_empty), template_var 0))),
    ("Term.occs_Fv_eq_elem_fv", "occs (Fv ?v ?S) ?t = ((?v, ?S) : fv ?t)",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Term.subst_bv2_gt",
     "?i < ?j ==> subst_bv2 (Bv ?j) ?i ?u = Bv (?j - 1)",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_var 2),
           template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0))))),
    ("Term.strip_all_vars_step",
     "strip_all_single_var ?t = Some ?T ==>
      ?T # strip_all_vars (strip_all_single_body ?t) = strip_all_vars ?t",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1))),
         template_app (template_hole 1, template_var 1)))),
    ("Term.typ_of1_eta_norm",
     "typ_of1 ?Ts ?t = Some ?ty ==> typ_of1 ?Ts (eta_norm ?t) = Some ?ty",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app (template_hole 0, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Term.loose_bvar1_decr''",
     "[| loose_bvar1 ?t ?lev; ?lev < ?lev' |]
      ==> loose_bvar1 (decr ?lev' ?t) ?lev",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_var 1)
           ))),
    ("Term.has_typ1_unique",
     "[| ?\<tau>s \<turnstile>\<^sub>\<tau> ?t : ?\<tau>1.0;
         ?\<tau>s \<turnstile>\<^sub>\<tau> ?t : ?\<tau>2.0 |]
      ==> ?\<tau>1.0 = ?\<tau>2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Term.not_loose_bvar_imp_not_loose_bvar1_all_greater",
     "[| ~ loose_bvar ?t ?lev; ?lev < ?x |] ==> ~ loose_bvar1 ?t ?x",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)
                )
            ),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)
               )
           ))),
    ("Term.bind_fv2_Fv_fv",
     "fv (bind_fv2 (?x, ?\<tau>) ?lev ?t) = fv ?t - {(?x, ?\<tau>)}",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2)),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 5, template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2)),
           template_hole 0)))),
    ("Term.subst_bv_bind_fv",
     "is_closed ?t ==> subst_bv (Fv ?v ?T) (bind_fv (?v, ?T) ?t) = ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 2)),
         template_var 2))),
    ("Term.typ_of1_drop_extra_bounds",
     "~ loose_bvar ?t (length ?Ts) ==>
      typ_of1 (?Ts @ ?rest) ?t = typ_of1 ?Ts ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app (template_hole 3, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Term.bind_fv_changed'",
     "bind_fv ?v ?tm ~= ?tm ==> occs (case ?v of (x, xa) => Fv x xa) ?tm",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty), template_var 0)
           ))),
    ("Term.typ_of1_weaken",
     "typ_of1 ?Ts ?t = Some ?T ==> typ_of1 (?Ts @ ?Ts') ?t = Some ?T",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_app (template_hole 1, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0)),
           template_var 2),
         template_app (template_hole 1, template_var 1)))),
    ("Term.fv_occs", "(?x, ?\<tau>) : fv ?t ==> occs (Fv ?x ?\<tau>) ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty), template_var 0)
           ))),
    ("Term.bind_fv_unchanged",
     "(?x, ?\<tau>) ~: fv ?t ==> bind_fv (?x, ?\<tau>) ?t = ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 2),
                      template_var 1)),
                  template_app (template_hole 2, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_var 0),
         template_var 0))),
    ("Term.typ_of_beta_redex_arg",
     "typ_of (Abs ?T ?s $ ?t) ~= None ==> typ_of ?t = Some ?T",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 2),
                      template_var 1)),
                  template_var 0)),
              template_hole 1)
            )],
       template_equation
        (template_app (template_hole 4, template_var 0),
         template_app (template_hole 0, template_var 2)))),
    ("Term.not_eta_reducible_decr",
     "[| ~ eta_reducible ?t; ~ loose_bvar1 ?t ?lev |]
      ==> ~ eta_reducible (decr ?lev ?t)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))
               )
           ))),
    ("Term.loose_bvar1_decr'''",
     "[| loose_bvar1 ?t (Suc ?lev); ?lev' <= ?lev |]
      ==> loose_bvar1 (decr ?lev' ?t) ?lev",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_var 1)
           ))),
    ("Term.bind_fv2_changed'",
     "bind_fv2 ?v ?lev ?tm ~= ?tm ==>
      occs (case ?v of (x, xa) => Fv x xa) ?tm",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1),
                template_var 0),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty), template_var 0)
           ))),
    ("Term.bind_fv2_no_occs_unchanged",
     "~ occs (case ?v of (x, xa) => Fv x xa) ?t ==>
      bind_fv2 ?v ?lev ?t = ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, t_empty), template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 1),
         template_var 1))),
    ("Term.betapply_Abs_fv",
     "is_closed ?t ==> Abs_fv ?v ?T ?t \<bullet> Fv ?v ?T = ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 1)),
                 template_var 2))),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 2))),
    ("Term.typ_of1_weaken_Ts",
     "typ_of1 ?Ts ?t = Some ?ty ==> typ_of1 (?Ts @ [?T]) ?t = Some ?ty",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 3), template_var 2),
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0))),
           template_var 2),
         template_app (template_hole 3, template_var 1)))),
    ("Term.loose_bvar1_decr",
     "[| 0 < ?lev; ~ loose_bvar1 ?t (Suc ?lev) |]
      ==> ~ loose_bvar1 (decr ?lev ?t) ?lev",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_app (template_hole 1, template_var 1))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)),
                 template_var 1)
               )
           ))),
    ("Term.has_typ1_tsubst",
     "?Ts \<turnstile>\<^sub>\<tau> ?t : ?T ==>
      map (%T. tsubstT T ?\<rho>)
       ?Ts \<turnstile>\<^sub>\<tau> tsubst ?t
?\<rho> : tsubstT ?T ?\<rho>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, t_empty),
                   template_var 3)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))
           ))),
    ("Term.subst_bv1_bind_fv2",
     "~ loose_bvar ?t ?lev ==>
      subst_bv1 (bind_fv2 (?v, ?T) ?lev ?t) ?lev (Fv ?v ?T) = ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 0)),
                   template_var 2),
                 template_var 3)),
             template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 3))),
    ("Term.lift_lift",
     "?i < ?k + 1 ==> lift (lift ?t ?i) (Suc ?k) = lift (lift ?t ?k) ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_hole 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_var 2)))),
    ("Term.bind_fv2_unchanged",
     "[| ~ loose_bvar ?tm ?lev; bind_fv2 ?v ?lev ?tm = ?tm |]
      ==> ?v ~: fv ?tm",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)
                )
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1),
            template_var 2),
          template_var 2)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 2))
               )
           ))),
    ("Term.loose_bvar1_decr'",
     "[| ~ loose_bvar1 ?t (Suc ?lev); ~ loose_bvar1 ?t ?lev |]
      ==> ~ loose_bvar1 (decr ?lev ?t) ?lev",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_app (template_hole 1, template_var 0))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1)),
                 template_var 0)
               )
           ))),
    ("Term.tsubstT_ith",
     "?i < length ?Ts ==>
      map (%T. tsubstT T ?\<rho>) ?Ts ! ?i = tsubstT (?Ts ! ?i) ?\<rho>",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 1)),
           template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 2)),
           template_var 0)))),
    ("Term.typ_of1_incr_bv_lev0",
     "typ_of1 ?Ts ?t = Some ?ty ==>
      typ_of1 (?Ts' @ ?Ts) (incr_bv (length ?Ts') 0 ?t) = Some ?ty",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 3), template_var 2),
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 3)),
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_hole 0),
             template_var 2)),
         template_app (template_hole 4, template_var 1)))),
    ("Term.tsubstT_cong",
     "ALL (v, S):tvsT ?\<sigma>. ?\<rho>1.0 v = ?\<rho>2.0 v ==>
      tsubstT ?\<sigma> ?\<rho>1.0 = tsubstT ?\<sigma> ?\<rho>2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              template_app (template_hole 3, t_empty))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Term.eta_reducible_Abs2",
     "[| \<nexists>f. ?t = f $ Bv 0; ~ eta_reducible (Abs ?T ?t) |]
      ==> ~ eta_reducible ?t",
     template_implication
      ([template_negation
         (template_predicate (template_app (template_hole 6, t_empty))),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 0),
                    template_var 1))
                )
            )],
       template_negation
        (
           template_predicate
            (template_app (template_hole 1, template_var 1))
           ))),
    ("Term.subst_bvs1_step",
     "~ loose_bvar ?t ?lev ==>
      subst_bvs1 ?t ?lev (?args @ [?u]) =
      subst_bv1 (subst_bvs1 ?t ?lev ?args) ?lev ?u",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1))),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 2),
           template_var 0)))),
    ("Term.bind_fv2_unchanged'",
     "[| ~ loose_bvar ?tm ?lev; bind_fv2 ?v ?lev ?tm = ?tm |]
      ==> ~ occs (case ?v of (x, xa) => Fv x xa) ?tm",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)
                )
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1),
            template_var 2),
          template_var 2)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, t_empty), template_var 2)
               )
           ))),
    ("Term.subst_bv_no_loose_unchanged",
     "[| !!x. ?lev <= x ==> ~ loose_bvar1 ?t x; is_variable ?v |]
      ==> subst_bv1 ?t ?lev ?v = ?t",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0),
         template_var 1))),
    ("Term.lift_subst_bv2_subst_lt",
     "?i < ?j + 1 ==>
      lift (subst_bv2 ?t ?j ?s) ?i =
      subst_bv2 (lift ?t ?i) (?j + 1) (lift ?s ?i)",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app
           (template_app (template_hole 4, template_var 2),
            template_hole 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2),
               template_var 0)),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 3)),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_hole 3)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 3))))),
    ("Term.lift_subst",
     "?j < ?i + 1 ==>
      lift (subst_bv2 ?t ?j ?s) ?i =
      subst_bv2 (lift ?t (?i + 1)) ?j (lift ?s ?i)",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app
           (template_app (template_hole 4, template_var 2),
            template_hole 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_hole 3))),
             template_var 3),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2))))),
    ("Term.bind_fv2_preserves_type",
     "typ_of1 ?Ts ?t = Some ?ty ==>
      typ_of1 (?Ts @ [?T]) (bind_fv2 (?v, ?T) (length ?Ts) ?t) = Some ?ty",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_var 4), template_var 3),
          template_app (template_hole 6, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 5, template_var 4),
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_hole 3))),
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 1)),
               template_app (template_hole 0, template_var 4)),
             template_var 3)),
         template_app (template_hole 6, template_var 2)))),
    ("Term.loose_bvar1_decr''''",
     "[| ~ loose_bvar1 ?t ?lev'; ?lev' <= ?lev;
         ~ loose_bvar1 ?t (Suc ?lev) |]
      ==> ~ loose_bvar1 (decr ?lev' ?t) ?lev",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)
                )
            ),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_hole 1, template_var 0))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 2)),
                 template_var 0)
               )
           ))),
    ("Term.tvsT_tsubstT",
     "tvsT (tsubstT ?\<sigma> ?\<rho>) =
      \<Union> {tvsT (?\<rho> a s) |a s. (a, s) : tvsT ?\<sigma>}",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_hole 6, template_app (template_hole 5, t_empty)))),
    ("Term.typ_of1_subst_bv_gen'",
     "[| typ_of1 (?uty # ?Ts) ?t = Some ?tty; typ_of1 ?Ts ?u = Some ?uty |]
      ==> typ_of1 ?Ts (subst_bv1 ?t 0 ?u) = Some ?tty",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3)),
            template_var 2),
          template_app (template_hole 2, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 3), template_var 0),
          template_app (template_hole 2, template_var 4))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_hole 0),
             template_var 0)),
         template_app (template_hole 2, template_var 1)))),
    ("Term.subst_bv2_subst_bv2",
     "?i < ?j + 1 ==>
      subst_bv2 (subst_bv2 ?t (Suc ?j) (lift ?v ?i)) ?i
       (subst_bv2 ?u ?j ?v) =
      subst_bv2 (subst_bv2 ?t ?i ?u) ?j ?v",
     template_implication
      ([template_inequation
         (less_than, template_var 4,
          template_app
           (template_app (template_hole 5, template_var 3),
            template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 2),
                   template_app (template_hole 1, template_var 3)),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 4))),
             template_var 4),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 4),
                 template_var 0)),
             template_var 3),
           template_var 1)))),
    ("Term.no_Bv_Type_param_irrelevant_typ_of",
     "~ exists_subterm (%x. case x of Bv x => True | _ => False) ?t ==>
      typ_of1 ?Ts ?t = typ_of1 ?Ts' ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, t_empty), template_var 2)
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Term.typ_of1_subst_bv",
     "[| typ_of1 (?Ts @ [?uty]) ?f = Some ?fty; typ_of ?u = Some ?uty |]
      ==> typ_of1 ?Ts (subst_bv1 ?f (length ?Ts) ?u) = Some ?fty",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 4),
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_hole 4))),
            template_var 2),
          template_app (template_hole 3, template_var 1)),
        template_equation
         (template_app (template_hole 2, template_var 0),
          template_app (template_hole 3, template_var 3))],
       template_equation
        (template_app
          (template_app (template_hole 7, template_var 4),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 4)),
             template_var 0)),
         template_app (template_hole 3, template_var 1)))),
    ("Term.typ_of1_decr_gen'",
     "[| typ_of1 (?Ts @ ?Ts') (decr (length ?Ts) ?t) = ?tyo;
         ~ loose_bvar1 ?t (length ?Ts) |]
      ==> typ_of1 (?Ts @ [?T] @ ?Ts') ?t = ?tyo",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 4),
                template_var 3)),
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 4)),
              template_var 2)),
          template_var 1),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_app (template_hole 4, template_var 4))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 4),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_hole 0)),
                 template_var 3))),
           template_var 2),
         template_var 1))),
    ("Term.typ_of1_decr_gen",
     "[| typ_of1 (?Ts @ [?T] @ ?Ts') ?t = ?tyo;
         ~ loose_bvar1 ?t (length ?Ts) |]
      ==> typ_of1 (?Ts @ ?Ts') (decr (length ?Ts) ?t) = ?tyo",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 4),
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 3),
                      template_hole 4)),
                  template_var 2))),
            template_var 1),
          template_var 0),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_app (template_hole 1, template_var 4))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 4),
               template_var 2)),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 4)),
             template_var 1)),
         template_var 0))),
    ("Term.typ_of1_incr_bv",
     "[| typ_of1 ?Ts ?t = Some ?ty; ?lev <= length ?Ts |]
      ==> typ_of1 (take ?lev ?Ts @ ?Ts' @ drop ?lev ?Ts)
           (incr_bv (length ?Ts') ?lev ?t) =
          Some ?ty",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_var 4), template_var 3),
          template_app (template_hole 6, template_var 2)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 4, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 4)),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 4)))),
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 4, template_var 0)),
               template_var 1),
             template_var 3)),
         template_app (template_hole 6, template_var 2)))),
    ("Term.typ_of1_decr",
     "[| typ_of1 (?Ts @ [?T] @ ?Ts') ?t = Some ?ty;
         ~ loose_bvar1 ?t (length ?Ts) |]
      ==> typ_of1 (?Ts @ ?Ts') (decr (length ?Ts) ?t) = Some ?ty",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 4),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 3),
                      template_hole 5)),
                  template_var 2))),
            template_var 1),
          template_app (template_hole 4, template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_app (template_hole 1, template_var 4))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 4),
               template_var 2)),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 4)),
             template_var 1)),
         template_app (template_hole 4, template_var 0)))),
    ("Term.bind_fv_subst_bv_cancel",
     "[| !!x. 0 < x ==> ~ loose_bvar1 ?t x;
         ~ occs (case ?v of (x, xa) => Fv x xa) ?t |]
      ==> bind_fv ?v (subst_bv (case ?v of (x, xa) => Fv x xa) ?t) = ?t",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, t_empty), template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 0)),
             template_var 1)),
         template_var 1))),
    ("Term.typ_of1_subst_bv_gen",
     "[| typ_of1 (?Ts' @ [?uty] @ ?Ts) ?t = Some ?tty;
         typ_of1 ?Ts ?u = Some ?uty |]
      ==> typ_of1 (?Ts' @ ?Ts) (subst_bv1 ?t (length ?Ts') ?u) = Some ?tty",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 5),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 4),
                      template_hole 3)),
                  template_var 3))),
            template_var 2),
          template_app (template_hole 2, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 3), template_var 0),
          template_app (template_hole 2, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 5),
               template_var 3)),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 5)),
             template_var 0)),
         template_app (template_hole 2, template_var 1)))),
    ("Term.bind_fv2_subst_bv1_cancel",
     "[| !!x. ?lev < x ==> ~ loose_bvar1 ?t x;
         ~ occs (case ?v of (x, xa) => Fv x xa) ?t |]
      ==> bind_fv2 ?v ?lev
           (subst_bv1 ?t ?lev (case ?v of (x, xa) => Fv x xa)) =
          ?t",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, t_empty), template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 0))),
         template_var 1))),
    ("Term.typ_of_Abs_body_typ",
     "typ_of1 ?Ts (Abs ?T ?t) = Some ?ty ==>
      EX rty. ?ty = ?T \<rightarrow> rty",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 11, template_var 3),
            template_app
             (template_app (template_hole 10, template_var 2),
              template_var 1)),
          template_app (template_hole 9, template_var 0))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("Term.typ_of1_subst_bv_gen_depre",
     "[| typ_of1 (?Ts' @ ?Ts) ?f = Some ?fty; typ_of1 ?Ts ?u = Some ?uty;
         last ?Ts' = ?uty; ?Ts' ~= [] |]
      ==> typ_of1 (butlast ?Ts' @ ?Ts) (subst_bv1 ?f (length ?Ts' - 1) ?u) =
          Some ?fty",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 12,
              template_app
               (template_app (template_hole 11, template_var 5),
                template_var 4)),
            template_var 3),
          template_app (template_hole 10, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 12, template_var 4),
            template_var 1),
          template_app (template_hole 10, template_var 0)),
        template_equation
         (template_app (template_hole 8, template_var 5), template_var 0),
        template_negation
         (template_equation (template_var 5, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 11,
                 template_app (template_hole 4, template_var 5)),
               template_var 4)),
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 5)),
                 template_hole 0)),
             template_var 1)),
         template_app (template_hole 10, template_var 2)))),
    ("Term.typ_of_Abs_fv",
     "typ_of ?A = Some ?ty ==>
      typ_of (Abs_fv ?v ?bT ?A) = Some (?bT \<rightarrow> ?ty)",
     template_implication
      ([template_equation
         (template_app (template_hole 11, template_var 3),
          template_app (template_hole 10, template_var 2))],
       template_equation
        (template_app
          (template_hole 11,
           template_app
            (template_app (template_hole 9, template_var 1),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 0),
                   template_var 1)),
               template_var 3))),
         template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 5, template_hole 4),
                             template_hole 3),
                           template_hole 3),
                         template_hole 4),
                       template_hole 4),
                     template_hole 3),
                   template_hole 3),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 5, template_hole 3),
                               template_hole 4),
                             template_hole 3),
                           template_hole 4),
                         template_hole 3),
                       template_hole 3),
                     template_hole 3),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 5, template_hole 4),
                                 template_hole 3),
                               template_hole 3),
                             template_hole 3),
                           template_hole 4),
                         template_hole 3),
                       template_hole 3),
                     template_hole 2)))),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0))))))),
    ("Term.has_typ1_arg_typ",
     "[| ?Ts \<turnstile>\<^sub>\<tau> ?t $ ?u : ?R;
         ?Ts \<turnstile>\<^sub>\<tau> ?u : ?U |]
      ==> ?Ts \<turnstile>\<^sub>\<tau> ?t : ?U \<rightarrow> ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 8, template_var 4),
               template_var 3),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 5, template_hole 4),
                               template_hole 3),
                             template_hole 3),
                           template_hole 4),
                         template_hole 4),
                       template_hole 3),
                     template_hole 3),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 5, template_hole 3),
                                 template_hole 4),
                               template_hole 3),
                             template_hole 4),
                           template_hole 3),
                         template_hole 3),
                       template_hole 3),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 5, template_hole 4),
                                   template_hole 3),
                                 template_hole 3),
                               template_hole 3),
                             template_hole 4),
                           template_hole 3),
                         template_hole 3),
                       template_hole 2)))),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_hole 0))))
           ))),
    ("Term.has_typ1_fun_typ",
     "[| ?Ts \<turnstile>\<^sub>\<tau> ?t $ ?u : ?R;
         ?Ts \<turnstile>\<^sub>\<tau> ?t : ?U \<rightarrow> ?R |]
      ==> ?Ts \<turnstile>\<^sub>\<tau> ?u : ?U",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_var 3),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 5, template_hole 4),
                                template_hole 3),
                              template_hole 3),
                            template_hole 4),
                          template_hole 4),
                        template_hole 3),
                      template_hole 3),
                    template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_hole 5, template_hole 3),
                                  template_hole 4),
                                template_hole 3),
                              template_hole 4),
                            template_hole 3),
                          template_hole 3),
                        template_hole 3),
                      template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_hole 5, template_hole 4),
                                    template_hole 3),
                                  template_hole 3),
                                template_hole 3),
                              template_hole 4),
                            template_hole 3),
                          template_hole 3),
                        template_hole 2)))),
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app (template_hole 1, template_var 1),
                    template_hole 0))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 8, template_var 4),
               template_var 2),
             template_var 0)
           ))),
    ("Term.typ_of_arg",
     "[| typ_of (?t $ ?u) = Some ?R; typ_of ?u = Some ?T |]
      ==> typ_of ?t = Some (?T \<rightarrow> ?R)",
     template_implication
      ([template_equation
         (template_app
           (template_hole 9,
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)),
          template_app (template_hole 7, template_var 1)),
        template_equation
         (template_app (template_hole 9, template_var 2),
          template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app (template_hole 9, template_var 3),
         template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 5, template_hole 4),
                             template_hole 3),
                           template_hole 3),
                         template_hole 4),
                       template_hole 4),
                     template_hole 3),
                   template_hole 3),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 5, template_hole 3),
                               template_hole 4),
                             template_hole 3),
                           template_hole 4),
                         template_hole 3),
                       template_hole 3),
                     template_hole 3),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 5, template_hole 4),
                                 template_hole 3),
                               template_hole 3),
                             template_hole 3),
                           template_hole 4),
                         template_hole 3),
                       template_hole 3),
                     template_hole 2)))),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0))))))),
    ("Term.typ_of_fun",
     "[| typ_of (?t $ ?u) = Some ?R;
         typ_of ?t = Some (?U \<rightarrow> ?R) |]
      ==> typ_of ?u = Some ?U",
     template_implication
      ([template_equation
         (template_app
           (template_hole 9,
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)),
          template_app (template_hole 7, template_var 1)),
        template_equation
         (template_app (template_hole 9, template_var 3),
          template_app
           (template_hole 7,
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 5, template_hole 4),
                              template_hole 3),
                            template_hole 3),
                          template_hole 4),
                        template_hole 4),
                      template_hole 3),
                    template_hole 3),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 5, template_hole 3),
                                template_hole 4),
                              template_hole 3),
                            template_hole 4),
                          template_hole 3),
                        template_hole 3),
                      template_hole 3),
                    template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_hole 5, template_hole 4),
                                  template_hole 3),
                                template_hole 3),
                              template_hole 3),
                            template_hole 4),
                          template_hole 3),
                        template_hole 3),
                      template_hole 2)))),
              template_app
               (template_app (template_hole 1, template_var 0),
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_hole 0)))))],
       template_equation
        (template_app (template_hole 9, template_var 2),
         template_app (template_hole 7, template_var 0)))),
    ("Term.typ_of_betaply",
     "[| typ_of ?t = Some (?uty \<rightarrow> ?tty);
         typ_of ?u = Some ?uty |]
      ==> typ_of (?t \<bullet> ?u) = Some ?tty",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 3),
          template_app
           (template_hole 8,
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 6, template_hole 5),
                              template_hole 4),
                            template_hole 4),
                          template_hole 5),
                        template_hole 5),
                      template_hole 4),
                    template_hole 4),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 6, template_hole 4),
                                template_hole 5),
                              template_hole 4),
                            template_hole 5),
                          template_hole 4),
                        template_hole 4),
                      template_hole 4),
                    template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_hole 6, template_hole 5),
                                  template_hole 4),
                                template_hole 4),
                              template_hole 4),
                            template_hole 5),
                          template_hole 4),
                        template_hole 4),
                      template_hole 3)))),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1))))),
        template_equation
         (template_app (template_hole 9, template_var 0),
          template_app (template_hole 8, template_var 2))],
       template_equation
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0)),
         template_app (template_hole 8, template_var 1)))),
    ("Term.beta_norm_simps",
     "beta_norm (Bv ?x $ ?xa) =
      (case beta_norm (Bv ?x) of None => None
       | Some (Ct literal typ) =>
           map_option (($) (Ct literal typ)) (beta_norm ?xa)
       | Some (Fv variable typ) =>
           map_option (($) (Fv variable typ)) (beta_norm ?xa)
       | Some (Bv nat) => map_option (($) (Bv nat)) (beta_norm ?xa)
       | Some (Abs T body) => beta_norm (subst_bv ?xa body)
       | Some (term1 $ term2) =>
           map_option (($) (term1 $ term2)) (beta_norm ?xa))",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app
            (template_hole 8,
             template_app (template_hole 7, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 6, template_hole 5), t_empty),
         template_app
          (template_hole 9,
           template_app (template_hole 7, template_var 1))))),
    ("Term.typ_of_Abs_body_typ'",
     "typ_of1 ?Ts (Abs ?T ?t) = Some ?ty ==>
      EX rty.
         ?ty = ?T \<rightarrow> rty & typ_of1 (?T # ?Ts) ?t = Some rty",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 12, template_var 3),
            template_app
             (template_app (template_hole 11, template_var 2),
              template_var 1)),
          template_app (template_hole 10, template_var 0))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Term.typ_of1_arg_typ",
     "[| typ_of1 ?Ts (?t $ ?u) = Some ?R; typ_of1 ?Ts ?u = Some ?U |]
      ==> typ_of1 ?Ts ?t = Some (?U \<rightarrow> ?R)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 9, template_var 4),
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)),
          template_app (template_hole 7, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 9, template_var 4), template_var 2),
          template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 9, template_var 4), template_var 3),
         template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 5, template_hole 4),
                             template_hole 3),
                           template_hole 3),
                         template_hole 4),
                       template_hole 4),
                     template_hole 3),
                   template_hole 3),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 5, template_hole 3),
                               template_hole 4),
                             template_hole 3),
                           template_hole 4),
                         template_hole 3),
                       template_hole 3),
                     template_hole 3),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 5, template_hole 4),
                                 template_hole 3),
                               template_hole 3),
                             template_hole 3),
                           template_hole 4),
                         template_hole 3),
                       template_hole 3),
                     template_hole 2)))),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0))))))),
    ("Term.typ_of1_fun_typ",
     "[| typ_of1 ?Ts (?t $ ?u) = Some ?R;
         typ_of1 ?Ts ?t = Some (?U \<rightarrow> ?R) |]
      ==> typ_of1 ?Ts ?u = Some ?U",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 9, template_var 4),
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)),
          template_app (template_hole 7, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 9, template_var 4), template_var 3),
          template_app
           (template_hole 7,
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 5, template_hole 4),
                              template_hole 3),
                            template_hole 3),
                          template_hole 4),
                        template_hole 4),
                      template_hole 3),
                    template_hole 3),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 5, template_hole 3),
                                template_hole 4),
                              template_hole 3),
                            template_hole 4),
                          template_hole 3),
                        template_hole 3),
                      template_hole 3),
                    template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_hole 5, template_hole 4),
                                  template_hole 3),
                                template_hole 3),
                              template_hole 3),
                            template_hole 4),
                          template_hole 3),
                        template_hole 3),
                      template_hole 2)))),
              template_app
               (template_app (template_hole 1, template_var 0),
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_hole 0)))))],
       template_equation
        (template_app
          (template_app (template_hole 9, template_var 4), template_var 2),
         template_app (template_hole 7, template_var 0)))),
    ("Term.typ_of1_split_App",
     "typ_of1 ?Ts (?t $ ?u) = Some ?ty ==>
      EX uty.
         typ_of1 ?Ts ?t = Some (uty \<rightarrow> ?ty) &
         typ_of1 ?Ts ?u = Some uty",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 11, template_var 3),
            template_app
             (template_app (template_hole 10, template_var 2),
              template_var 1)),
          template_app (template_hole 9, template_var 0))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("Term.beta_norm_simps",
     "beta_norm (?xa $ ?x $ ?xaa) =
      (case beta_norm (?xa $ ?x) of None => None
       | Some (Ct literal typ) =>
           map_option (($) (Ct literal typ)) (beta_norm ?xaa)
       | Some (Fv variable typ) =>
           map_option (($) (Fv variable typ)) (beta_norm ?xaa)
       | Some (Bv nat) => map_option (($) (Bv nat)) (beta_norm ?xaa)
       | Some (Abs T body) => beta_norm (subst_bv ?xaa body)
       | Some (term1 $ term2) =>
           map_option (($) (term1 $ term2)) (beta_norm ?xaa))",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 8, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 7, template_hole 6), t_empty),
         template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_var 2),
             template_var 1))))),
    ("Term.beta_norm_simps",
     "beta_norm (Ct ?xa ?x $ ?xaa) =
      (case beta_norm (Ct ?xa ?x) of None => None
       | Some (Ct literal typ) =>
           map_option (($) (Ct literal typ)) (beta_norm ?xaa)
       | Some (Fv variable typ) =>
           map_option (($) (Fv variable typ)) (beta_norm ?xaa)
       | Some (Bv nat) => map_option (($) (Bv nat)) (beta_norm ?xaa)
       | Some (Abs T body) => beta_norm (subst_bv ?xaa body)
       | Some (term1 $ term2) =>
           map_option (($) (term1 $ term2)) (beta_norm ?xaa))",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 6, template_hole 5), t_empty),
         template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1))))),
    ("Term.beta_norm_simps",
     "beta_norm (Fv ?xa ?x $ ?xaa) =
      (case beta_norm (Fv ?xa ?x) of None => None
       | Some (Ct literal typ) =>
           map_option (($) (Ct literal typ)) (beta_norm ?xaa)
       | Some (Fv variable typ) =>
           map_option (($) (Fv variable typ)) (beta_norm ?xaa)
       | Some (Bv nat) => map_option (($) (Bv nat)) (beta_norm ?xaa)
       | Some (Abs T body) => beta_norm (subst_bv ?xaa body)
       | Some (term1 $ term2) =>
           map_option (($) (term1 $ term2)) (beta_norm ?xaa))",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 6, template_hole 5), t_empty),
         template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1))))),
    ("Term.typ_of_betapply",
     "[| typ_of1 ?Ts (Abs ?uty ?t) = Some (?uty \<rightarrow> ?tty);
         typ_of1 ?Ts ?u = Some ?uty |]
      ==> typ_of1 ?Ts (Abs ?uty ?t \<bullet> ?u) = Some ?tty",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 10, template_var 4),
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)),
          template_app
           (template_hole 8,
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 6, template_hole 5),
                              template_hole 4),
                            template_hole 4),
                          template_hole 5),
                        template_hole 5),
                      template_hole 4),
                    template_hole 4),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 6, template_hole 4),
                                template_hole 5),
                              template_hole 4),
                            template_hole 5),
                          template_hole 4),
                        template_hole 4),
                      template_hole 4),
                    template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_hole 6, template_hole 5),
                                  template_hole 4),
                                template_hole 4),
                              template_hole 4),
                            template_hole 5),
                          template_hole 4),
                        template_hole 4),
                      template_hole 3)))),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1))))),
        template_equation
         (template_app
           (template_app (template_hole 10, template_var 4),
            template_var 0),
          template_app (template_hole 8, template_var 3))],
       template_equation
        (template_app
          (template_app (template_hole 10, template_var 4),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 9, template_var 3),
                 template_var 2)),
             template_var 0)),
         template_app (template_hole 8, template_var 1)))),
    ("Term.has_typ1_app_elim",
     "[| ?Ts \<turnstile>\<^sub>\<tau> ?t $ ?u : ?R;
         !!U. [| typ_of1 ?Ts ?u = Some U;
                 typ_of1 ?Ts ?t = Some (U \<rightarrow> ?R) |]
              ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 4),
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_var 0))),
    ("Term.typ_of1_split_App_obtains",
     "[| typ_of1 ?Ts (?t $ ?u) = Some ?ty;
         !!uty.
            [| typ_of1 ?Ts ?t = Some (uty \<rightarrow> ?ty);
               typ_of1 ?Ts ?u = Some uty |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 10, template_var 4),
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)),
          template_app (template_hole 8, template_var 1)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("Term.tsubstT_fun_typ_dist",
     "tsubstT (?T \<rightarrow> ?T1.0) ?\<rho> =
      tsubstT ?T ?\<rho> \<rightarrow> tsubstT ?T1.0 ?\<rho>",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 5, template_hole 4),
                             template_hole 3),
                           template_hole 3),
                         template_hole 4),
                       template_hole 4),
                     template_hole 3),
                   template_hole 3),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 5, template_hole 3),
                               template_hole 4),
                             template_hole 3),
                           template_hole 4),
                         template_hole 3),
                       template_hole 3),
                     template_hole 3),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 5, template_hole 4),
                                 template_hole 3),
                               template_hole 3),
                             template_hole 3),
                           template_hole 4),
                         template_hole 3),
                       template_hole 3),
                     template_hole 2)))),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)))),
         template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 5, template_hole 4),
                         template_hole 3),
                       template_hole 3),
                     template_hole 4),
                   template_hole 4),
                 template_hole 3),
               template_hole 3),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 5, template_hole 3),
                           template_hole 4),
                         template_hole 3),
                       template_hole 4),
                     template_hole 3),
                   template_hole 3),
                 template_hole 3),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 5, template_hole 4),
                             template_hole 3),
                           template_hole 3),
                         template_hole 3),
                       template_hole 4),
                     template_hole 3),
                   template_hole 3),
                 template_hole 2)))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 7, template_var 2),
               template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_var 0)),
             template_hole 0))))),
    ("Term.typ_of_eta_expand",
     "typ_of ?f = Some (?\<tau> \<rightarrow> ?\<tau>') ==>
      typ_of (Abs ?\<tau> (?f $ Bv 0)) =
      Some (?\<tau> \<rightarrow> ?\<tau>')",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 2),
          template_app
           (template_hole 11,
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 9, template_hole 8),
                              template_hole 7),
                            template_hole 7),
                          template_hole 8),
                        template_hole 8),
                      template_hole 7),
                    template_hole 7),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 9, template_hole 7),
                                template_hole 8),
                              template_hole 7),
                            template_hole 8),
                          template_hole 7),
                        template_hole 7),
                      template_hole 7),
                    template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_hole 9, template_hole 8),
                                  template_hole 7),
                                template_hole 7),
                              template_hole 7),
                            template_hole 8),
                          template_hole 7),
                        template_hole 7),
                      template_hole 6)))),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_hole 4)))))],
       template_equation
        (template_app
          (template_hole 12,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app (template_hole 1, template_hole 0)))),
         template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 9, template_hole 8),
                             template_hole 7),
                           template_hole 7),
                         template_hole 8),
                       template_hole 8),
                     template_hole 7),
                   template_hole 7),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 9, template_hole 7),
                               template_hole 8),
                             template_hole 7),
                           template_hole 8),
                         template_hole 7),
                       template_hole 7),
                     template_hole 7),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 9, template_hole 8),
                                 template_hole 7),
                               template_hole 7),
                             template_hole 7),
                           template_hole 8),
                         template_hole 7),
                       template_hole 7),
                     template_hole 6)))),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_hole 4))))))),
    ("Term.strip_all_vars_mk_all",
     "strip_all_vars (mk_all ?s ?ty ?t) = ?ty # strip_all_vars ?t",
     template_equation
      (template_app
        (template_hole 12,
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 9, template_hole 8),
                               template_hole 8),
                             template_hole 8),
                           template_hole 8),
                         template_hole 7),
                       template_hole 8),
                     template_hole 7),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 9, template_hole 7),
                                 template_hole 8),
                               template_hole 7),
                             template_hole 8),
                           template_hole 7),
                         template_hole 7),
                       template_hole 7),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 9, template_hole 8),
                                   template_hole 7),
                                 template_hole 8),
                               template_hole 8),
                             template_hole 7),
                           template_hole 7),
                         template_hole 7),
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 9, template_hole 7),
                                     template_hole 8),
                                   template_hole 7),
                                 template_hole 8),
                               template_hole 8),
                             template_hole 7),
                           template_hole 7),
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 9, template_hole 8), template_hole 7),
                                     template_hole 7),
                                   template_hole 7),
                                 template_hole 8),
                               template_hole 7),
                             template_hole 8),
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 9, template_hole 7), template_hole 8),
 template_hole 8),
                                     template_hole 8),
                                   template_hole 8),
                                 template_hole 7),
                               template_hole 7),
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 9, template_hole 8), template_hole 8),
   template_hole 7),
 template_hole 7),
                                     template_hole 8),
                                   template_hole 7),
                                 template_hole 7),
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app (template_hole 9, template_hole 8), template_hole 8),
     template_hole 7),
   template_hole 7),
 template_hole 8),
                                     template_hole 7),
                                   template_hole 7),
                                 template_hole 6))))))))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 9, template_hole 8),
                                 template_hole 7),
                               template_hole 7),
                             template_hole 8),
                           template_hole 8),
                         template_hole 7),
                       template_hole 7),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 9, template_hole 7),
                                   template_hole 8),
                                 template_hole 7),
                               template_hole 8),
                             template_hole 7),
                           template_hole 7),
                         template_hole 7),
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 9, template_hole 8),
                                     template_hole 7),
                                   template_hole 7),
                                 template_hole 7),
                               template_hole 8),
                             template_hole 7),
                           template_hole 7),
                         template_hole 6)))),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 9, template_hole 8), template_hole 7),
                                     template_hole 7),
                                   template_hole 8),
                                 template_hole 8),
                               template_hole 7),
                             template_hole 7),
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 9, template_hole 7), template_hole 8),
 template_hole 7),
                                     template_hole 8),
                                   template_hole 7),
                                 template_hole 7),
                               template_hole 7),
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 9, template_hole 8), template_hole 7),
   template_hole 7),
 template_hole 7),
                                     template_hole 8),
                                   template_hole 7),
                                 template_hole 7),
                               template_hole 6)))),
                       template_app
                        (template_app (template_hole 4, template_var 2),
                         template_app
                          (template_app
                            (template_hole 4,
                             template_app
                              (template_app
                                (template_hole 5,
                                 template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app (template_hole 9, template_hole 8), template_hole 8),
       template_hole 8),
     template_hole 8),
   template_hole 7),
 template_hole 7),
                                     template_hole 7),
                                   template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app (template_hole 9, template_hole 8),
           template_hole 7),
         template_hole 8),
       template_hole 8),
     template_hole 7),
   template_hole 7),
 template_hole 7),
                                     template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 9, template_hole 7),
             template_hole 7),
           template_hole 7),
         template_hole 7),
       template_hole 8),
     template_hole 7),
   template_hole 7),
 template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 9, template_hole 8),
               template_hole 8),
             template_hole 8),
           template_hole 8),
         template_hole 7),
       template_hole 7),
     template_hole 7),
   template_hole 6))))),
                               template_hole 3)),
                           template_hole 3)))),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 9, template_hole 8), template_hole 8),
 template_hole 8),
                                     template_hole 8),
                                   template_hole 7),
                                 template_hole 7),
                               template_hole 7),
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 9, template_hole 8), template_hole 7),
   template_hole 8),
 template_hole 8),
                                     template_hole 7),
                                   template_hole 7),
                                 template_hole 7),
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app (template_hole 9, template_hole 7), template_hole 7),
     template_hole 7),
   template_hole 7),
 template_hole 8),
                                     template_hole 7),
                                   template_hole 7),
                                 template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app (template_hole 9, template_hole 8), template_hole 8),
       template_hole 8),
     template_hole 8),
   template_hole 7),
 template_hole 7),
                                     template_hole 7),
                                   template_hole 6))))),
                         template_hole 3)),
                     template_hole 3))))),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2)),
               template_var 0)))),
       template_app
        (template_app (template_hole 4, template_var 2),
         template_app (template_hole 12, template_var 0)))),
    ("Term.mk_all_fv_unchanged",
     "fv (mk_all ?x ?\<tau> ?B) = fv ?B - {(?x, ?\<tau>)}",
     template_equation
      (template_app
        (template_hole 15,
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 12, template_hole 11),
                               template_hole 11),
                             template_hole 11),
                           template_hole 11),
                         template_hole 10),
                       template_hole 11),
                     template_hole 10),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 12, template_hole 10),
                                 template_hole 11),
                               template_hole 10),
                             template_hole 11),
                           template_hole 10),
                         template_hole 10),
                       template_hole 10),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 12, template_hole 11),
                                   template_hole 10),
                                 template_hole 11),
                               template_hole 11),
                             template_hole 10),
                           template_hole 10),
                         template_hole 10),
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 12, template_hole 10),
                                     template_hole 11),
                                   template_hole 10),
                                 template_hole 11),
                               template_hole 11),
                             template_hole 10),
                           template_hole 10),
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 12, template_hole 11), template_hole 10),
                                     template_hole 10),
                                   template_hole 10),
                                 template_hole 11),
                               template_hole 10),
                             template_hole 11),
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 12, template_hole 10), template_hole 11),
 template_hole 11),
                                     template_hole 11),
                                   template_hole 11),
                                 template_hole 10),
                               template_hole 10),
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 12, template_hole 11), template_hole 11),
   template_hole 10),
 template_hole 10),
                                     template_hole 11),
                                   template_hole 10),
                                 template_hole 10),
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app (template_hole 12, template_hole 11), template_hole 11),
     template_hole 10),
   template_hole 10),
 template_hole 11),
                                     template_hole 10),
                                   template_hole 10),
                                 template_hole 9))))))))),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 12, template_hole 11),
                                 template_hole 10),
                               template_hole 10),
                             template_hole 11),
                           template_hole 11),
                         template_hole 10),
                       template_hole 10),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 12, template_hole 10),
                                   template_hole 11),
                                 template_hole 10),
                               template_hole 11),
                             template_hole 10),
                           template_hole 10),
                         template_hole 10),
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 12, template_hole 11),
                                     template_hole 10),
                                   template_hole 10),
                                 template_hole 10),
                               template_hole 11),
                             template_hole 10),
                           template_hole 10),
                         template_hole 9)))),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 12, template_hole 11), template_hole 10),
                                     template_hole 10),
                                   template_hole 11),
                                 template_hole 11),
                               template_hole 10),
                             template_hole 10),
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 12, template_hole 10), template_hole 11),
 template_hole 10),
                                     template_hole 11),
                                   template_hole 10),
                                 template_hole 10),
                               template_hole 10),
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 12, template_hole 11), template_hole 10),
   template_hole 10),
 template_hole 10),
                                     template_hole 11),
                                   template_hole 10),
                                 template_hole 10),
                               template_hole 9)))),
                       template_app
                        (template_app (template_hole 7, template_var 2),
                         template_app
                          (template_app
                            (template_hole 7,
                             template_app
                              (template_app
                                (template_hole 8,
                                 template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app (template_hole 12, template_hole 11),
         template_hole 11),
       template_hole 11),
     template_hole 11),
   template_hole 10),
 template_hole 10),
                                     template_hole 10),
                                   template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app (template_hole 12, template_hole 11),
           template_hole 10),
         template_hole 11),
       template_hole 11),
     template_hole 10),
   template_hole 10),
 template_hole 10),
                                     template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 12, template_hole 10),
             template_hole 10),
           template_hole 10),
         template_hole 10),
       template_hole 11),
     template_hole 10),
   template_hole 10),
 template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 12, template_hole 11),
               template_hole 11),
             template_hole 11),
           template_hole 11),
         template_hole 10),
       template_hole 10),
     template_hole 10),
   template_hole 9))))),
                               template_hole 6)),
                           template_hole 6)))),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 8,
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 12, template_hole 11), template_hole 11),
 template_hole 11),
                                     template_hole 11),
                                   template_hole 10),
                                 template_hole 10),
                               template_hole 10),
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 12, template_hole 11), template_hole 10),
   template_hole 11),
 template_hole 11),
                                     template_hole 10),
                                   template_hole 10),
                                 template_hole 10),
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app (template_hole 12, template_hole 10), template_hole 10),
     template_hole 10),
   template_hole 10),
 template_hole 11),
                                     template_hole 10),
                                   template_hole 10),
                                 template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app (template_hole 12, template_hole 11),
         template_hole 11),
       template_hole 11),
     template_hole 11),
   template_hole 10),
 template_hole 10),
                                     template_hole 10),
                                   template_hole 9))))),
                         template_hole 6)),
                     template_hole 6))))),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 2)),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 2,
           template_app (template_hole 15, template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 2)),
           template_hole 0)))),
    ("Term.mk_all'_subst_bv_strip_all_single_body_cancel",
     "[| strip_all_single_var ?t = Some ?T; is_closed ?t;
         (?name, ?T) ~: fv ?t |]
      ==> mk_all ?name ?T
           (subst_bv (Fv ?name ?T) (strip_all_single_body ?t)) =
          ?t",
     template_implication
      ([template_equation
         (template_app (template_hole 21, template_var 2),
          template_app (template_hole 20, template_var 1)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 18, template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 17,
                    template_app
                     (template_app (template_hole 16, template_var 0),
                      template_var 1)),
                  template_app (template_hole 15, template_var 2))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 13,
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 11, template_hole 10),
                               template_hole 10),
                             template_hole 10),
                           template_hole 10),
                         template_hole 9),
                       template_hole 10),
                     template_hole 9),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 11, template_hole 9),
                                 template_hole 10),
                               template_hole 9),
                             template_hole 10),
                           template_hole 9),
                         template_hole 9),
                       template_hole 9),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 11, template_hole 10),
                                   template_hole 9),
                                 template_hole 10),
                               template_hole 10),
                             template_hole 9),
                           template_hole 9),
                         template_hole 9),
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 11, template_hole 9),
                                     template_hole 10),
                                   template_hole 9),
                                 template_hole 10),
                               template_hole 10),
                             template_hole 9),
                           template_hole 9),
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 11, template_hole 10), template_hole 9),
                                     template_hole 9),
                                   template_hole 9),
                                 template_hole 10),
                               template_hole 9),
                             template_hole 10),
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 11, template_hole 9), template_hole 10),
 template_hole 10),
                                     template_hole 10),
                                   template_hole 10),
                                 template_hole 9),
                               template_hole 9),
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 11, template_hole 10), template_hole 10),
   template_hole 9),
 template_hole 9),
                                     template_hole 10),
                                   template_hole 9),
                                 template_hole 9),
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app (template_hole 11, template_hole 10), template_hole 10),
     template_hole 9),
   template_hole 9),
 template_hole 10),
                                     template_hole 9),
                                   template_hole 9),
                                 template_hole 8))))))))),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 11, template_hole 10),
                                 template_hole 9),
                               template_hole 9),
                             template_hole 10),
                           template_hole 10),
                         template_hole 9),
                       template_hole 9),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 11, template_hole 9),
                                   template_hole 10),
                                 template_hole 9),
                               template_hole 10),
                             template_hole 9),
                           template_hole 9),
                         template_hole 9),
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 11, template_hole 10),
                                     template_hole 9),
                                   template_hole 9),
                                 template_hole 9),
                               template_hole 10),
                             template_hole 9),
                           template_hole 9),
                         template_hole 8)))),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 11, template_hole 10), template_hole 9),
                                     template_hole 9),
                                   template_hole 10),
                                 template_hole 10),
                               template_hole 9),
                             template_hole 9),
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 11, template_hole 9), template_hole 10),
 template_hole 9),
                                     template_hole 10),
                                   template_hole 9),
                                 template_hole 9),
                               template_hole 9),
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 11, template_hole 10), template_hole 9),
   template_hole 9),
 template_hole 9),
                                     template_hole 10),
                                   template_hole 9),
                                 template_hole 9),
                               template_hole 8)))),
                       template_app
                        (template_app (template_hole 6, template_var 1),
                         template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_app
                                (template_hole 7,
                                 template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app (template_hole 11, template_hole 10),
         template_hole 10),
       template_hole 10),
     template_hole 10),
   template_hole 9),
 template_hole 9),
                                     template_hole 9),
                                   template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app (template_hole 11, template_hole 10),
           template_hole 9),
         template_hole 10),
       template_hole 10),
     template_hole 9),
   template_hole 9),
 template_hole 9),
                                     template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 11, template_hole 9),
             template_hole 9),
           template_hole 9),
         template_hole 9),
       template_hole 10),
     template_hole 9),
   template_hole 9),
 template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 11, template_hole 10),
               template_hole 10),
             template_hole 10),
           template_hole 10),
         template_hole 9),
       template_hole 9),
     template_hole 9),
   template_hole 8))))),
                               template_hole 5)),
                           template_hole 5)))),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 11, template_hole 10), template_hole 10),
 template_hole 10),
                                     template_hole 10),
                                   template_hole 9),
                                 template_hole 9),
                               template_hole 9),
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 11, template_hole 10), template_hole 9),
   template_hole 10),
 template_hole 10),
                                     template_hole 9),
                                   template_hole 9),
                                 template_hole 9),
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app (template_hole 11, template_hole 9), template_hole 9),
     template_hole 9),
   template_hole 9),
 template_hole 10),
                                     template_hole 9),
                                   template_hole 9),
                                 template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app (template_hole 11, template_hole 10),
         template_hole 10),
       template_hole 10),
     template_hole 10),
   template_hole 9),
 template_hole 9),
                                     template_hole 9),
                                   template_hole 8))))),
                         template_hole 5)),
                     template_hole 5))))),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 16, template_var 0),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 1)),
                 template_app (template_hole 0, template_var 2))))),
         template_var 2))),
    ("Term.typ_of_mk_all",
     "typ_of ?A = Some propT ==> typ_of (mk_all ?x ?ty ?A) = Some propT",
     template_implication
      ([template_equation
         (template_app (template_hole 13, template_var 2),
          template_app
           (template_hole 12,
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 10, template_hole 9),
                              template_hole 9),
                            template_hole 9),
                          template_hole 9),
                        template_hole 8),
                      template_hole 8),
                    template_hole 8),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 10, template_hole 9),
                                template_hole 8),
                              template_hole 9),
                            template_hole 9),
                          template_hole 8),
                        template_hole 8),
                      template_hole 8),
                    template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_hole 10, template_hole 8),
                                  template_hole 8),
                                template_hole 8),
                              template_hole 8),
                            template_hole 9),
                          template_hole 8),
                        template_hole 8),
                      template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_hole 10, template_hole 9),
                                    template_hole 9),
                                  template_hole 9),
                                template_hole 9),
                              template_hole 8),
                            template_hole 8),
                          template_hole 8),
                        template_hole 7))))),
              template_hole 6)))],
       template_equation
        (template_app
          (template_hole 13,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 10, template_hole 9),
                                 template_hole 9),
                               template_hole 9),
                             template_hole 9),
                           template_hole 8),
                         template_hole 9),
                       template_hole 8),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 10, template_hole 8),
                                   template_hole 9),
                                 template_hole 8),
                               template_hole 9),
                             template_hole 8),
                           template_hole 8),
                         template_hole 8),
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 10, template_hole 9),
                                     template_hole 8),
                                   template_hole 9),
                                 template_hole 9),
                               template_hole 8),
                             template_hole 8),
                           template_hole 8),
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 10, template_hole 8), template_hole 9),
                                     template_hole 8),
                                   template_hole 9),
                                 template_hole 9),
                               template_hole 8),
                             template_hole 8),
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 10, template_hole 9), template_hole 8),
 template_hole 8),
                                     template_hole 8),
                                   template_hole 9),
                                 template_hole 8),
                               template_hole 9),
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 10, template_hole 8), template_hole 9),
   template_hole 9),
 template_hole 9),
                                     template_hole 9),
                                   template_hole 8),
                                 template_hole 8),
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app (template_hole 10, template_hole 9), template_hole 9),
     template_hole 8),
   template_hole 8),
 template_hole 9),
                                     template_hole 8),
                                   template_hole 8),
                                 template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app (template_hole 10, template_hole 9), template_hole 9),
       template_hole 8),
     template_hole 8),
   template_hole 9),
 template_hole 8),
                                     template_hole 8),
                                   template_hole 7))))))))),
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 10, template_hole 9),
                                   template_hole 8),
                                 template_hole 8),
                               template_hole 9),
                             template_hole 9),
                           template_hole 8),
                         template_hole 8),
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 10, template_hole 8),
                                     template_hole 9),
                                   template_hole 8),
                                 template_hole 9),
                               template_hole 8),
                             template_hole 8),
                           template_hole 8),
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 10, template_hole 9), template_hole 8),
                                     template_hole 8),
                                   template_hole 8),
                                 template_hole 9),
                               template_hole 8),
                             template_hole 8),
                           template_hole 7)))),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app
                          (template_hole 11,
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 10, template_hole 9), template_hole 8),
 template_hole 8),
                                     template_hole 9),
                                   template_hole 9),
                                 template_hole 8),
                               template_hole 8),
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 10, template_hole 8), template_hole 9),
   template_hole 8),
 template_hole 9),
                                     template_hole 8),
                                   template_hole 8),
                                 template_hole 8),
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app (template_hole 10, template_hole 9), template_hole 8),
     template_hole 8),
   template_hole 8),
 template_hole 9),
                                     template_hole 8),
                                   template_hole 8),
                                 template_hole 7)))),
                         template_app
                          (template_app (template_hole 3, template_var 1),
                           template_app
                            (template_app
                              (template_hole 3,
                               template_app
                                (template_app
                                  (template_hole 11,
                                   template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app (template_hole 10, template_hole 9),
           template_hole 9),
         template_hole 9),
       template_hole 9),
     template_hole 8),
   template_hole 8),
 template_hole 8),
                                     template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 10, template_hole 9),
             template_hole 8),
           template_hole 9),
         template_hole 9),
       template_hole 8),
     template_hole 8),
   template_hole 8),
 template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 10, template_hole 8),
               template_hole 8),
             template_hole 8),
           template_hole 8),
         template_hole 9),
       template_hole 8),
     template_hole 8),
   template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 10, template_hole 9),
                 template_hole 9),
               template_hole 9),
             template_hole 9),
           template_hole 8),
         template_hole 8),
       template_hole 8),
     template_hole 7))))),
                                 template_hole 6)),
                             template_hole 6)))),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app
                            (template_hole 11,
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 10, template_hole 9), template_hole 9),
   template_hole 9),
 template_hole 9),
                                     template_hole 8),
                                   template_hole 8),
                                 template_hole 8),
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app (template_hole 10, template_hole 9), template_hole 8),
     template_hole 9),
   template_hole 9),
 template_hole 8),
                                     template_hole 8),
                                   template_hole 8),
                                 template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app (template_hole 10, template_hole 8), template_hole 8),
       template_hole 8),
     template_hole 8),
   template_hole 9),
 template_hole 8),
                                     template_hole 8),
                                   template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app (template_hole 10, template_hole 9),
           template_hole 9),
         template_hole 9),
       template_hole 9),
     template_hole 8),
   template_hole 8),
 template_hole 8),
                                     template_hole 7))))),
                           template_hole 6)),
                       template_hole 6))))),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1)),
                 template_var 2)))),
         template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 10, template_hole 9),
                             template_hole 9),
                           template_hole 9),
                         template_hole 9),
                       template_hole 8),
                     template_hole 8),
                   template_hole 8),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 10, template_hole 9),
                               template_hole 8),
                             template_hole 9),
                           template_hole 9),
                         template_hole 8),
                       template_hole 8),
                     template_hole 8),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 10, template_hole 8),
                                 template_hole 8),
                               template_hole 8),
                             template_hole 8),
                           template_hole 9),
                         template_hole 8),
                       template_hole 8),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 10, template_hole 9),
                                   template_hole 9),
                                 template_hole 9),
                               template_hole 9),
                             template_hole 8),
                           template_hole 8),
                         template_hole 8),
                       template_hole 7))))),
             template_hole 6)))))]:
   (string * thm * template) list
### theory "Draft.TermMoreTemplates"
### 0.496s elapsed time, 0.703s cpu time, 0.078s GC time
*** Undefined fact: "Cons.prems" (line 69 of "$AFP/Metalogic_ProofChecker/Preliminaries.thy")
*** At command "thm" (line 69 of "$AFP/Metalogic_ProofChecker/Preliminaries.thy")
Exception- TOPLEVEL_ERROR raised
