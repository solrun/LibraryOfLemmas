   [("Term_Subst.subst_typ_nil", "subst_typ [] ?T = ?T",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Term_Subst.subst_term_empty_no_change", "subst_term [] ?t = ?t",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Term_Subst.subst_typ'_nil", "subst_typ' [] ?A = ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0)),
         template_var 0),
       template_var 0)),
    ("Term_Subst.subst_type_term_empty_no_change",
     "subst_type_term [] [] ?t = ?t",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_var 0)),
    ("Term_Subst.subst_typ_AList_clearjunk",
     "subst_typ ?insts ?T = subst_typ (AList.clearjunk ?insts) ?T",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Term_Subst.subst_type_term_without_type_insts_eq_subst_term",
     "subst_type_term [] ?insts ?t = subst_term ?insts ?t",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Term_Subst.distinct_fst_imp_distinct",
     "distinct (map fst ?l) ==> distinct ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Term_Subst.subst_typ'_AList_clearjunk",
     "subst_typ' ?insts ?t = subst_typ' (AList.clearjunk ?insts) ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1))),
         template_var 0))),
    ("Term_Subst.subst_type_term_split_levels",
     "subst_type_term ?instT ?insts ?t =
      subst_term ?insts (subst_typ' ?instT ?t)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("Term_Subst.distinct_kv_list",
     "distinct ?l ==> distinct (map (%x. (x, ?f x)) ?l)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 1))
           ))),
    ("Term_Subst.subst_typ_comp",
     "subst_typ ?inst1.0 (subst_typ ?inst2.0 ?T) =
      subst_typ (map (apsnd (subst_typ ?inst1.0)) ?inst2.0 @ ?inst1.0) ?T",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_hole 0,
                     template_app (template_hole 3, template_var 2))),
                 template_var 1)),
             template_var 2)),
         template_var 0))),
    ("Term_Subst.subst_typ'_comp",
     "subst_typ' ?inst1.0 (subst_typ' ?inst2.0 ?t) =
      subst_typ' (map (apsnd (subst_typ ?inst1.0)) ?inst2.0 @ ?inst1.0) ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 2)),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_hole 0,
                       template_app (template_hole 3, template_var 2))),
                   template_var 1)),
               template_var 2))),
         template_var 0))),
    ("Term_Subst.tsubstT_simulates_subst_typ",
     "subst_typ ?insts ?T =
      tsubstT ?T
       (%idn S. the_default (Tv idn S) (lookup (%x. x = (idn, S)) ?insts))",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 5, template_var 0), t_empty))),
    ("Term_Subst.tsubst_simulates_subst_typ'",
     "subst_typ' ?insts ?T =
      tsubst ?T
       (%idn S. the_default (Tv idn S) (lookup (%x. x = (idn, S)) ?insts))",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 5, template_var 0), t_empty))),
    ("Term_Subst.subst_term_not_loose_bvar",
     "[| ~ loose_bvar ?t ?n; is_closed ?b |]
      ==> ~ loose_bvar (subst_term [((?idn, ?T), ?b)] ?t) ?n",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)
                )
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 2))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app
                            (template_app
                              (template_hole 2,
                               template_app
                                (template_app
                                  (template_hole 1, template_var 1),
                                 template_var 0)),
                             template_var 2)),
                         template_hole 0)),
                     template_var 4)),
                 template_var 3)
               )
           ))),
    ("Term_Subst.subst_subst_term",
     "[| distinct ?l; fv ?t <= set ?l |]
      ==> subst ?t ?\<rho> =
          subst_term (map (%x. (x, case x of (x, xa) => ?\<rho> x xa)) ?l)
           ?t",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 7, template_var 1),
          template_app (template_hole 6, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty), template_var 2)),
           template_var 1)))),
    ("Term_Subst.subst_type_add_degenerate_instance",
     "(?idx, ?s) ~: set (map fst ?insts) ==>
      subst_typ ?insts ?T =
      subst_typ (((?idx, ?s), Tv ?idx ?s) # ?insts) ?T",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_var 3),
                      template_var 2)),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_hole 5),
                      template_var 1)))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 8, template_var 3),
                       template_var 2)),
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2))),
               template_var 1)),
           template_var 0)))),
    ("Term_Subst.subst_typ_irrelevant_order",
     "[| distinct (map fst ?pairs); distinct (map fst ?pairs');
         set ?pairs = set ?pairs' |]
      ==> subst_typ ?pairs ?T = subst_typ ?pairs' ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 1))
            ),
        template_equation
         (template_app (template_hole 2, template_var 2),
          template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Term_Subst.subst_typ_simulates_tsubstT",
     "tsubstT ?T ?\<rho> =
      subst_typ
       (map (%(x, y). ((x, y), ?\<rho> x y))
         (SOME l. distinct l & set l = tvsT ?T))
       ?T",
     template_equation
      (template_app
        (template_app (template_hole 11, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9, template_app (template_hole 8, t_empty)),
             template_app (template_hole 5, t_empty))),
         template_var 1))),
    ("Term_Subst.subst_typ_simulates_tsubstT_gen",
     "tsubstT ?T ?\<rho> =
      subst_typ
       (map (%(x, y). ((x, y), ?\<rho> x y))
         (SOME l. distinct l & tvsT ?T <= set l))
       ?T",
     template_equation
      (template_app
        (template_app (template_hole 11, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9, template_app (template_hole 8, t_empty)),
             template_app (template_hole 5, t_empty))),
         template_var 1))),
    ("Term_Subst.subst_typ'_simulates_tsubst_gen",
     "tsubst ?t ?\<rho> =
      subst_typ'
       (map (%(x, y). ((x, y), ?\<rho> x y))
         (SOME l. distinct l & tvs ?t <= set l))
       ?t",
     template_equation
      (template_app
        (template_app (template_hole 12, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 11,
           template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 9, template_app (template_hole 8, t_empty)),
               template_app (template_hole 5, t_empty)))),
         template_var 1))),
    ("Term_Subst.subst_typ'_add_degenerate_instance",
     "(?idx, ?s) ~: set (map fst ?insts) ==>
      subst_typ' ?insts ?t =
      subst_typ' (((?idx, ?s), Tv ?idx ?s) # ?insts) ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 9, template_var 3),
                      template_var 2)),
                  template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_hole 6),
                      template_var 1)))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 9, template_var 3),
                         template_var 2)),
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 2))),
                 template_var 1))),
           template_var 0)))),
    ("Term_Subst.subst_typ_simulates_tsubstT_gen'",
     "[| distinct ?l; tvsT ?T <= set ?l |]
      ==> tsubstT ?T ?\<rho> =
          subst_typ (map (%(x, y). ((x, y), ?\<rho> x y)) ?l) ?T",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 8, template_var 1),
          template_app (template_hole 7, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3, template_app (template_hole 2, t_empty)),
               template_var 2)),
           template_var 1)))),
    ("Term_Subst.instantiate_var_same_typ'",
     "[| typ_of ?a = Some ?\<tau>; is_closed ?B |]
      ==> subst_bv ?a (bind_fv (?x, ?\<tau>) ?B) =
          subst_term [((?x, ?\<tau>), ?a)] ?B",
     template_implication
      ([template_equation
         (template_app (template_hole 11, template_var 3),
          template_app (template_hole 10, template_var 2)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 8, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 3),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 2)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_var 2)),
                   template_var 3)),
               template_hole 0)),
           template_var 1)))),
    ("Term_Subst.subst_typ'_simulates_tsubst_gen'",
     "[| distinct ?pairs; tvs ?t <= set ?pairs |]
      ==> tsubst ?t ?\<rho> =
          subst_typ' (map (%(x, y). ((x, y), ?\<rho> x y)) ?pairs) ?t",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 9, template_var 1),
          template_app (template_hole 8, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, t_empty)),
                 template_var 2))),
           template_var 1)))),
    ("Term_Subst.bind_fv2_subst_bv1_eq_subst_term",
     "[| ~ loose_bvar ?t ?n; is_closed ?b |]
      ==> subst_term [((?idn, ?T), ?b)] ?t =
          subst_bv1 (bind_fv2 (?idn, ?T) ?n ?t) ?n ?b",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_var 3)
                )
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 8, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 1),
                       template_var 0)),
                   template_var 2)),
               template_hole 2)),
           template_var 4),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 3, template_var 1),
                       template_var 0)),
                   template_var 3),
                 template_var 4)),
             template_var 3),
           template_var 2)))),
    ("Term_Subst.instantiate_var_same_type''",
     "[| typ_of ?a = Some ?\<tau>; is_closed ?B |]
      ==> Abs_fv ?x ?\<tau> ?B \<bullet> ?a =
          subst_term [((?x, ?\<tau>), ?a)] ?B",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 3),
          template_app (template_hole 11, template_var 2)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 9, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 2),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_var 2)),
                 template_var 1))),
           template_var 3),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_var 2)),
                   template_var 3)),
               template_hole 0)),
           template_var 1)))),
    ("Term_Subst.instantiate_var_same_typ",
     "[| typ_of ?a = Some ?\<tau>; ~ loose_bvar ?B ?lev |]
      ==> subst_bv1 (bind_fv2 (?x, ?\<tau>) ?lev ?B) ?lev ?a =
          subst_term [((?x, ?\<tau>), ?a)] ?B",
     template_implication
      ([template_equation
         (template_app (template_hole 11, template_var 4),
          template_app (template_hole 10, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_var 3)),
                   template_var 1),
                 template_var 2)),
             template_var 1),
           template_var 4),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_var 3)),
                   template_var 4)),
               template_hole 0)),
           template_var 2)))),
    ("Term_Subst.subst_term_subst",
     "distinct (map fst ?l) ==>
      subst_term ?l ?t =
      subst ?t
       (fold (%((idn, T), t) f x y. if x = idn & y = T then t else f x y) ?l
         Fv)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 13,
              template_app
               (template_app (template_hole 12, template_hole 11),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 9, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 8, template_var 0),
           template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, t_empty))),
               template_var 1),
             template_hole 0))))),
    ("Term_Subst.subst_typ_combine_single",
     "?fresh_idn ~: fst ` tvsT ?\<tau> ==>
      subst_typ [((?fresh_idn, ?S), ?\<tau>2.0)]
       (subst_typ [((?idn, ?S), Tv ?fresh_idn ?S)] ?\<tau>) =
      subst_typ [((?idn, ?S), ?\<tau>2.0)] ?\<tau>",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 4),
                  template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_app (template_hole 7, template_var 3)))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 4),
                       template_var 2)),
                   template_var 1)),
               template_hole 1)),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_var 0),
                         template_var 2)),
                     template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 2))),
                 template_hole 1)),
             template_var 3)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 0),
                       template_var 2)),
                   template_var 1)),
               template_hole 1)),
           template_var 3)))),
    ("Term_Subst.subst_typ_stepwise",
     "[| distinct (map fst ?instT);
         !!x. x : tvsT_Set (snd ` set ?instT) ==> x ~: fst ` set ?instT |]
      ==> subst_typ ?instT ?T =
          fold (%single. subst_typ [single]) ?instT ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 17,
              template_app
               (template_app (template_hole 16, template_hole 15),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_app
          (template_app
            (template_app (template_hole 2, t_empty), template_var 1),
           template_var 0)))),
    ("Term_Subst.subst_term_stepwise",
     "[| distinct (map fst ?insts);
         !!x. x : \<Union> (fv ` snd ` set ?insts) ==>
              x ~: fst ` set ?insts |]
      ==> subst_term ?insts ?t =
          fold (%single. subst_term [single]) ?insts ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 17,
              template_app
               (template_app (template_hole 16, template_hole 15),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_app
          (template_app
            (template_app (template_hole 2, t_empty), template_var 1),
           template_var 0)))),
    ("Term_Subst.subst_typ'_stepwise",
     "[| distinct (map fst ?instT);
         !!x. x : tvsT_Set (snd ` set ?instT) ==> x ~: fst ` set ?instT |]
      ==> subst_typ' ?instT ?t =
          fold (%single. subst_typ' [single]) ?instT ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 18,
              template_app
               (template_app (template_hole 17, template_hole 16),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 2, t_empty), template_var 1),
           template_var 0)))),
    ("Term_Subst.instantiate_vars_same_typ",
     "[| list_all (%((idx, ty), t). typ_of t = Some ty) ?insts;
         ~ loose_bvar ?B ?lev |]
      ==> fold
           (%((idx, ty), t) B. subst_bv1 (bind_fv2 (idx, ty) ?lev B) ?lev t)
           ?insts ?B =
          fold (%single. subst_term [single]) ?insts ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_hole 16,
                  template_app (template_hole 15, t_empty))),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_var 0)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7, template_app (template_hole 6, t_empty))),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 8, t_empty), template_var 2),
           template_var 1)))),
    ("Term_Subst.subst_type_term_irrelevant_order",
     "[| distinct (map fst ?instT); distinct (map fst ?instT');
         set ?instT = set ?instT'; distinct (map fst ?insts);
         distinct (map fst ?insts'); set ?insts = set ?insts' |]
      ==> subst_type_term ?instT ?insts ?t =
          subst_type_term ?instT' ?insts' ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 11,
              template_app
               (template_app (template_hole 10, template_hole 9),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_hole 11,
              template_app
               (template_app (template_hole 10, template_hole 9),
                template_var 3))
            ),
        template_equation
         (template_app (template_hole 7, template_var 4),
          template_app (template_hole 7, template_var 3)),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 1))
            ),
        template_equation
         (template_app (template_hole 2, template_var 2),
          template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 2),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0)))),
    ("Term_Subst.subst_typ_split_first",
     "[| distinct (map fst (?x # ?xs));
         !!y. y : tvsT_Set (snd ` set (?x # ?xs)) ==>
              y ~: fst ` set (?x # ?xs) |]
      ==> subst_typ (?x # ?xs) ?T = subst_typ ?xs (subst_typ [?x] ?T)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 16,
              template_app
               (template_app (template_hole 15, template_hole 14),
                template_app
                 (template_app (template_hole 13, template_var 2),
                  template_var 1)))
            ),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 13, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 13, template_var 2),
                 template_hole 0)),
             template_var 0))))),
    ("Term_Subst.subst_type_term_simulates_subst_tsubst",
     "subst (tsubst ?t ?\<rho>ty) ?\<rho>t =
      subst_type_term
       (map (%(x, y). ((x, y), ?\<rho>ty x y))
         (SOME lty. distinct lty & tvs ?t = set lty))
       (map (%(x, y). ((x, y), ?\<rho>t x y))
         (SOME lt. distinct lt & fv (tsubst ?t ?\<rho>ty) = set lt))
       ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 21,
           template_app
            (template_app (template_hole 20, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 19,
             template_app
              (template_app
                (template_hole 18,
                 template_app (template_hole 17, t_empty)),
               template_app (template_hole 14, t_empty))),
           template_app
            (template_app
              (template_hole 8, template_app (template_hole 7, t_empty)),
             template_app (template_hole 4, t_empty))),
         template_var 2))),
    ("Term_Subst.subst_type_term_simulates_subst_tsubst_gen'",
     "[| distinct ?lty; tvs ?t <= set ?lty; distinct ?lt;
         fv (tsubst ?t ?\<rho>ty) <= set ?lt |]
      ==> subst (tsubst ?t ?\<rho>ty) ?\<rho>t =
          subst_type_term (map (%(x, y). ((x, y), ?\<rho>ty x y)) ?lty)
           (map (%(x, y). ((x, y), ?\<rho>t x y)) ?lt) ?t",
     template_implication
      ([template_predicate
         (template_app (template_hole 19, template_var 4)),
        template_inequation
         (less_equals, template_app (template_hole 17, template_var 3),
          template_app (template_hole 16, template_var 4)),
        template_predicate
         (template_app (template_hole 15, template_var 2)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 13,
            template_app
             (template_app (template_hole 12, template_var 3),
              template_var 1)),
          template_app (template_hole 11, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 12, template_var 3),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, t_empty)),
                 template_var 4)),
             template_app
              (template_app
                (template_hole 3, template_app (template_hole 2, t_empty)),
               template_var 2)),
           template_var 3)))),
    ("Term_Subst.subst_typ_split_last",
     "[| distinct (map fst (?xs @ [?x]));
         !!y. y : tvsT_Set (snd ` set (?xs @ [?x])) ==>
              y ~: fst ` set (?xs @ [?x]) |]
      ==> subst_typ (?xs @ [?x]) ?T = subst_typ [?x] (subst_typ ?xs ?T)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 17,
              template_app
               (template_app (template_hole 16, template_hole 15),
                template_app
                 (template_app (template_hole 14, template_var 2),
                  template_app
                   (template_app (template_hole 13, template_var 1),
                    template_hole 12))))
            ),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 14, template_var 2),
               template_app
                (template_app (template_hole 13, template_var 1),
                 template_hole 12))),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 13, template_var 1),
               template_hole 12)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Term_Subst.subst_term_split_last",
     "[| distinct (map fst (?xs @ [?x]));
         !!y. y : \<Union> (fv ` snd ` set (?xs @ [?x])) ==>
              y ~: fst ` set (?xs @ [?x]) |]
      ==> subst_term (?xs @ [?x]) ?t = subst_term [?x] (subst_term ?xs ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 17,
              template_app
               (template_app (template_hole 16, template_hole 15),
                template_app
                 (template_app (template_hole 14, template_var 2),
                  template_app
                   (template_app (template_hole 13, template_var 1),
                    template_hole 12))))
            ),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 14, template_var 2),
               template_app
                (template_app (template_hole 13, template_var 1),
                 template_hole 12))),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 13, template_var 1),
               template_hole 12)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Term_Subst.instantiate_vars_same_typ'",
     "[| list_all (%((idx, ty), t). typ_of t = Some ty) ?insts;
         ~ loose_bvar ?B ?lev; distinct (map fst ?insts);
         !!x. x : \<Union> (fv ` snd ` set ?insts) ==>
              x ~: fst ` set ?insts |]
      ==> fold
           (%((idx, ty), t) B. subst_bv1 (bind_fv2 (idx, ty) ?lev B) ?lev t)
           ?insts ?B =
          subst_term ?insts ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 27,
                template_app
                 (template_hole 26,
                  template_app (template_hole 25, t_empty))),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 20, template_var 1),
                  template_var 0)
                )
            ),
        template_predicate
         (
            template_app
             (template_hole 19,
              template_app
               (template_app (template_hole 18, template_hole 17),
                template_var 2))
            ),
        template_predicate (template_app (template_hole 16, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5, template_app (template_hole 4, t_empty))),
             template_var 2),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Term_Subst.subst_typ_combine",
     "[| length ?fresh_idns = length ?insts; distinct ?fresh_idns;
         distinct (map fst ?insts);
         ALL idn:set ?fresh_idns.
            idn
            ~: fst `
               (tvsT ?\<tau> Un tvsT_Set (snd ` set ?insts) Un
                fst ` set ?insts) |]
      ==> subst_typ ?insts ?\<tau> =
          subst_typ
           (zip (zip ?fresh_idns (map snd (map fst ?insts)))
             (map snd ?insts))
           (subst_typ
             (zip (map fst ?insts)
               (map2 Tv ?fresh_idns (map snd (map fst ?insts))))
             ?\<tau>)",
     template_implication
      ([template_equation
         (template_app (template_hole 29, template_var 2),
          template_app (template_hole 28, template_var 1)),
        template_predicate
         (template_app (template_hole 27, template_var 2)),
        template_predicate
         (
            template_app
             (template_hole 26,
              template_app
               (template_app (template_hole 25, template_hole 24),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app (template_hole 22, template_var 2)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 8, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_app
                      (template_app (template_hole 25, template_hole 24),
                       template_var 1)))),
               template_app
                (template_app (template_hole 3, template_hole 12),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 25, template_hole 24),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, t_empty)),
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_app
                      (template_app (template_hole 5, template_hole 4),
                       template_app
                        (template_app (template_hole 25, template_hole 24),
                         template_var 1)))))),
             template_var 0))))),
    ("Term_Subst.subst_term_combine",
     "[| length ?fresh_idns = length ?insts; distinct ?fresh_idns;
         distinct (map fst ?insts);
         ALL idn:set ?fresh_idns.
            idn
            ~: fst `
               (fv ?t Un \<Union> (fv ` snd ` set ?insts) Un
                fst ` set ?insts) |]
      ==> subst_term ?insts ?t =
          subst_term
           (zip (zip ?fresh_idns (map snd (map fst ?insts)))
             (map snd ?insts))
           (subst_term
             (zip (map fst ?insts)
               (map2 Fv ?fresh_idns (map snd (map fst ?insts))))
             ?t)",
     template_implication
      ([template_equation
         (template_app (template_hole 29, template_var 2),
          template_app (template_hole 28, template_var 1)),
        template_predicate
         (template_app (template_hole 27, template_var 2)),
        template_predicate
         (
            template_app
             (template_hole 26,
              template_app
               (template_app (template_hole 25, template_hole 24),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app (template_hole 22, template_var 2)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 8, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_app
                      (template_app (template_hole 25, template_hole 24),
                       template_var 1)))),
               template_app
                (template_app (template_hole 3, template_hole 12),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 25, template_hole 24),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, t_empty)),
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_app
                      (template_app (template_hole 5, template_hole 4),
                       template_app
                        (template_app (template_hole 25, template_hole 24),
                         template_var 1)))))),
             template_var 0))))),
    ("Term_Subst.subst_type_term_stepwise",
     "[| distinct (map fst ?instT);
         !!x. x : tvsT_Set (snd ` set ?instT) ==> x ~: fst ` set ?instT;
         distinct (map fst ?insts);
         !!x. x : \<Union> (fv ` snd ` set ?insts) ==>
              x ~: fst ` set ?insts |]
      ==> subst_type_term ?instT ?insts ?t =
          fold (%single. subst_term [single]) ?insts
           (fold (%single. subst_typ' [single]) ?instT ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 35,
              template_app
               (template_app (template_hole 34, template_hole 33),
                template_var 2))
            ),
        template_predicate (template_app (template_hole 32, t_empty)),
        template_predicate
         (
            template_app
             (template_hole 22,
              template_app
               (template_app (template_hole 21, template_hole 20),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 19, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 9, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 8, t_empty), template_var 1),
           template_app
            (template_app
              (template_app (template_hole 4, t_empty), template_var 2),
             template_var 0))))),
    ("Term_Subst.subst_typ'_combine",
     "[| length ?fresh_idns = length ?insts; distinct ?fresh_idns;
         distinct (map fst ?insts);
         ALL idn:set ?fresh_idns.
            idn
            ~: fst `
               (tvs ?t Un tvsT_Set (snd ` set ?insts) Un
                fst ` set ?insts) |]
      ==> subst_typ' ?insts ?t =
          subst_typ'
           (zip (zip ?fresh_idns (map snd (map fst ?insts)))
             (map snd ?insts))
           (subst_typ'
             (zip (map fst ?insts)
               (map2 Tv ?fresh_idns (map snd (map fst ?insts))))
             ?t)",
     template_implication
      ([template_equation
         (template_app (template_hole 31, template_var 2),
          template_app (template_hole 30, template_var 1)),
        template_predicate
         (template_app (template_hole 29, template_var 2)),
        template_predicate
         (
            template_app
             (template_hole 28,
              template_app
               (template_app (template_hole 27, template_hole 26),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 25,
                template_app (template_hole 24, template_var 2)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app (template_hole 8, template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_app
                      (template_app (template_hole 5, template_hole 4),
                       template_app
                        (template_app (template_hole 27, template_hole 26),
                         template_var 1)))),
                 template_app
                  (template_app (template_hole 3, template_hole 13),
                   template_var 1)))),
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 27, template_hole 26),
                       template_var 1)),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app (template_hole 1, t_empty)),
                     template_app
                      (template_app (template_hole 6, template_var 2),
                       template_app
                        (template_app (template_hole 5, template_hole 4),
                         template_app
                          (template_app
                            (template_hole 27, template_hole 26),
                           template_var 1))))))),
             template_var 0))))),
    ("Term_Subst.subst_typ_combine'",
     "[| length ?fresh_idns = length ?insts; distinct ?fresh_idns;
         distinct (map fst ?insts);
         ALL idn:set ?fresh_idns.
            idn
            ~: fst `
               (tvsT ?\<tau> Un tvsT_Set (snd ` set ?insts) Un
                fst ` set ?insts) |]
      ==> subst_typ ?insts ?\<tau> =
          fold (%single. subst_typ [single])
           (zip (zip ?fresh_idns (map snd (map fst ?insts)))
             (map snd ?insts))
           (fold (%single. subst_typ [single])
             (zip (map fst ?insts)
               (map2 Tv ?fresh_idns (map snd (map fst ?insts))))
             ?\<tau>)",
     template_implication
      ([template_equation
         (template_app (template_hole 32, template_var 2),
          template_app (template_hole 31, template_var 1)),
        template_predicate
         (template_app (template_hole 30, template_var 2)),
        template_predicate
         (
            template_app
             (template_hole 29,
              template_app
               (template_app (template_hole 28, template_hole 27),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 26,
                template_app (template_hole 25, template_var 2)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 11, template_var 1), template_var 0),
         template_app
          (template_app
            (template_app (template_hole 10, t_empty),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_app
                      (template_app (template_hole 28, template_hole 27),
                       template_var 1)))),
               template_app
                (template_app (template_hole 3, template_hole 15),
                 template_var 1))),
           template_app
            (template_app
              (template_app (template_hole 10, t_empty),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 28, template_hole 27),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, t_empty)),
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_app
                      (template_app (template_hole 5, template_hole 4),
                       template_app
                        (template_app (template_hole 28, template_hole 27),
                         template_var 1)))))),
             template_var 0))))),
    ("Term_Subst.subst_term_combine'",
     "[| length ?fresh_idns = length ?insts; distinct ?fresh_idns;
         distinct (map fst ?insts);
         ALL idn:set ?fresh_idns.
            idn
            ~: fst `
               (fv ?t Un \<Union> (fv ` snd ` set ?insts) Un
                fst ` set ?insts) |]
      ==> subst_term ?insts ?t =
          fold (%single. subst_term [single])
           (zip (zip ?fresh_idns (map snd (map fst ?insts)))
             (map snd ?insts))
           (fold (%single. subst_term [single])
             (zip (map fst ?insts)
               (map2 Fv ?fresh_idns (map snd (map fst ?insts))))
             ?t)",
     template_implication
      ([template_equation
         (template_app (template_hole 32, template_var 2),
          template_app (template_hole 31, template_var 1)),
        template_predicate
         (template_app (template_hole 30, template_var 2)),
        template_predicate
         (
            template_app
             (template_hole 29,
              template_app
               (template_app (template_hole 28, template_hole 27),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 26,
                template_app (template_hole 25, template_var 2)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 11, template_var 1), template_var 0),
         template_app
          (template_app
            (template_app (template_hole 10, t_empty),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_app
                      (template_app (template_hole 28, template_hole 27),
                       template_var 1)))),
               template_app
                (template_app (template_hole 3, template_hole 15),
                 template_var 1))),
           template_app
            (template_app
              (template_app (template_hole 10, t_empty),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 28, template_hole 27),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, t_empty)),
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_app
                      (template_app (template_hole 5, template_hole 4),
                       template_app
                        (template_app (template_hole 28, template_hole 27),
                         template_var 1)))))),
             template_var 0)))))]
