Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Lemma_RMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Lemma_RMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.Lemma_RMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Lemma_RMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.121s elapsed time, 0.492s cpu time, 0.044s GC time
### theory "HOL-Library.Set_Algebras"
### 0.181s elapsed time, 0.669s cpu time, 0.044s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Lemma_RMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.340s elapsed time, 1.160s cpu time, 0.121s GC time
Loading theory "Draft.Partial_Recursive" (required by "Draft.Lemma_RMoreTemplates" via "Draft.Lemma_R" via "Draft.Inductive_Inference_Basics" via "Draft.Standard_Results" via "Draft.Universal")
Loading theory "HOL-Library.Stream" (required by "Draft.Lemma_RMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.785s elapsed time, 2.973s cpu time, 0.323s GC time
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.076s elapsed time, 3.853s cpu time, 0.843s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order:
  "(%p. size (fst p)) <*mlex*> (%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.010s elapsed time, 6.360s cpu time, 1.122s GC time
Loading theory "Draft.Templates" (required by "Draft.Lemma_RMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size <*mlex*> {}"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.056s elapsed time, 0.113s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Lemma_RMoreTemplates")
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.549s elapsed time, 1.168s cpu time, 0.150s GC time
Found termination order: "{}"
### theory "Draft.Partial_Recursive"
### 2.479s elapsed time, 6.669s cpu time, 1.220s GC time
Loading theory "Draft.Universal" (required by "Draft.Lemma_RMoreTemplates" via "Draft.Lemma_R" via "Draft.Inductive_Inference_Basics" via "Draft.Standard_Results")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Universal"
### 1.313s elapsed time, 2.034s cpu time, 0.920s GC time
Loading theory "Draft.Standard_Results" (required by "Draft.Lemma_RMoreTemplates" via "Draft.Lemma_R" via "Draft.Inductive_Inference_Basics")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
### theory "Draft.Standard_Results"
### 0.552s elapsed time, 0.682s cpu time, 0.159s GC time
Loading theory "Draft.Inductive_Inference_Basics" (required by "Draft.Lemma_RMoreTemplates" via "Draft.Lemma_R")
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
### theory "Draft.Inductive_Inference_Basics"
### 0.414s elapsed time, 0.479s cpu time, 0.089s GC time
Loading theory "Draft.Lemma_R" (required by "Draft.Lemma_RMoreTemplates")
Found termination order: "(%p. size (snd (snd (snd p)))) <*mlex*> {}"
### theory "Draft.Lemma_R"
### 0.793s elapsed time, 1.574s cpu time, 1.078s GC time
Loading theory "Draft.Lemma_RMoreTemplates"
val templateLemmas =
   [("Lemma_R.r_totalizer_total",
     "Partial_Recursive.total (r_totalizer ?d)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Lemma_R.totalizer_in_R2", "totalizer ?d : \<R>\<^sup>2",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("Lemma_R.amalgamation_in_P1", "amalgamation ?i ?j : \<P>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_hole 0)
         )),
    ("Lemma_R.auxhyp_prenum", "\<phi> (the (auxhyp ?e)) = prenum ?e",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Lemma_R.amalgamate", "\<phi> (amalgamate ?i ?j) = amalgamation ?i ?j",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Lemma_R.delay_le_length", "the (delay ?i ?x) <= e_length ?x",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Lemma_R.r_limr", "\<phi> (the (eval r_limr [?i])) : \<R>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_hole 1))))),
           template_hole 0)
         )),
    ("Lemma_R.r_auxhyp", "\<phi> (the (eval r_auxhyp [?e])) = prenum ?e",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1)))),
       template_app (template_hole 0, template_var 0))),
    ("Lemma_R.V01_not_in_R_cons",
     "?s : \<R> ==> ~ learn_cons \<phi> V\<^sub>0\<^sub>1 ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_hole 0),
                 template_var 0)
               )
           ))),
    ("Lemma_R.r_totalizer_recfn", "recfn 2 (r_totalizer ?d)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 0))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 5, template_var 0))),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))))
         )),
    ("Lemma_R.r_inconsist", "eval r_inconsist [?i, ?e] = inconsist ?i ?e",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Lemma_R.r_amalgamate",
     "eval r_amalgamate [?i, ?j] \<down>= amalgamate ?i ?j",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Lemma_R.sv01_converg_V01",
     "?f : V\<^sub>0\<^sub>1 ==>
      s\<^bsub>01\<^esub> (?f \<triangleright> ?n) \<down>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_hole 5)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("Lemma_R.adverse_in_R1", "?s : \<R> ==> adverse ?s ?z ?i ?j : \<R>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("Lemma_R.amalgamation_V01_total",
     "?f : V\<^sub>0\<^sub>1 ==>
      total1 (amalgamation (the (?f 0)) (the (?f 1)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_hole 5)
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_var 0, template_hole 1))),
               template_app
                (template_hole 2,
                 template_app (template_var 0, template_hole 0))))
           ))),
    ("Lemma_R.lemma_R_for_BC_simple",
     "learn_bc ?\<psi> ?U ?s ==> EX s':\<R>. learn_bc ?\<psi> ?U s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0), t_empty)
           ))),
    ("Lemma_R.lemma_R_for_TOTAL_simple",
     "learn_total ?\<psi> ?U ?s ==> EX s':\<R>. learn_total ?\<psi> ?U s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0), t_empty)
           ))),
    ("Lemma_R.lemma_R_for_BC",
     "learn_bc ?\<psi> ?U (\<phi> ?i) ==>
      learn_bc ?\<psi> ?U (totalizer ?d ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Lemma_R.lemma_R_for_FIN",
     "learn_fin ?\<psi> ?U (\<phi> ?i) ==>
      learn_fin ?\<psi> ?U (totalizer 0 ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Lemma_R.lemma_R_for_Lim",
     "learn_lim ?\<psi> ?U (\<phi> ?i) ==>
      learn_lim ?\<psi> ?U (totalizer ?d ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Lemma_R.amalgamation_total",
     "total1 (\<phi> ?i) | total1 (\<phi> ?j) ==>
      total1 (amalgamation ?i ?j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 1))),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Lemma_R.r_amalgamation",
     "eval r_amalgamation [?i, ?j, ?x] = amalgamation ?i ?j ?x",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1)))),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Lemma_R.r_parallel'",
     "eval r_parallel [?i, ?j, ?x] = parallel ?i ?j ?x",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1)))),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Lemma_R.sv01",
     "?f : V\<^sub>0\<^sub>1 ==>
      s\<^bsub>01\<^esub> (?f \<triangleright> 0) =
      auxhyp (?f \<triangleright> 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_hole 5)
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))))),
    ("Lemma_R.amalgamation_V01_R1",
     "?f : V\<^sub>0\<^sub>1 ==>
      amalgamation (the (?f 0)) (the (?f 1)) : \<R>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_hole 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_var 0, template_hole 2))),
                 template_app
                  (template_hole 3,
                   template_app (template_var 0, template_hole 1)))),
             template_hole 0)
           ))),
    ("Lemma_R.adverse_at_01",
     "?s : \<R> ==> adverse ?s ?z ?i ?j 1 \<down>= ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0),
           template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Lemma_R.adverse_at_01",
     "?s : \<R> ==> adverse ?s ?z ?i ?j 0 \<down>= ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0),
           template_hole 1),
         template_app (template_hole 0, template_var 1)))),
    ("Lemma_R.prefixes_length",
     "?s : \<R> ==> length (prefixes ?s ?z ?i ?j ?x) = Suc ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Lemma_R.lemma_R_for_CP",
     "learn_cp ?\<psi> ?U (\<phi> ?i) ==>
      EX d. learn_cp ?\<psi> ?U (totalizer d ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Lemma_R.parallel_converg_V01",
     "?f : V\<^sub>0\<^sub>1 ==>
      parallel (the (?f 0)) (the (?f 1)) ?x \<down>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_hole 7)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_var 1, template_hole 2))),
                 template_app
                  (template_hole 3,
                   template_app (template_var 1, template_hole 1))),
               template_var 0),
             template_hole 0)
           ))),
    ("Lemma_R.inconsist_bounded",
     "inconsist ?i ?e \<down> ==> the (inconsist ?i ?e) <= e_length ?e",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0),
              template_hole 4)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Lemma_R.r_limr",
     "learn_lim ?\<psi> ?U (\<phi> ?i) ==>
      learn_lim ?\<psi> ?U (\<phi> (the (eval r_limr [?i])))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, template_var 2),
               template_var 1),
             template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_hole 0)))))
           ))),
    ("Lemma_R.lemma_R_for_TOTAL",
     "EX d. ALL U i.
               learn_total ?\<psi> U (\<phi> i) -->
               learn_total ?\<psi> U (totalizer d i)",
     template_predicate (template_app (template_hole 6, t_empty))),
    ("Lemma_R.amalgamation_diverg",
     "(amalgamation ?i ?j ?x \<up>) =
      (\<phi> ?i ?x \<up> & \<phi> ?j ?x \<up>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0),
         template_hole 2),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)),
                 template_hole 2)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_hole 2))
           ))),
    ("Lemma_R.parallel_1",
     "parallel ?i ?j ?x \<down>= prod_encode (1, ?v) ==>
      \<phi> ?j ?x \<down>= ?v",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2),
            template_var 1),
          template_app
           (template_hole 4,
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 0))))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app (template_hole 4, template_var 0)))),
    ("Lemma_R.parallel_0",
     "parallel ?i ?j ?x \<down>= prod_encode (0, ?v) ==>
      \<phi> ?i ?x \<down>= ?v",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2),
            template_var 1),
          template_app
           (template_hole 4,
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 0))))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app (template_hole 4, template_var 0)))),
    ("Lemma_R.r_result1_diverg_phi",
     "\<phi> ?i ?x \<up> ==> eval r_result1 [?t, ?i, ?x] \<down>= 0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_var 2), template_var 1),
          template_hole 6)],
       template_equation
        (template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)))),
         template_app (template_hole 1, template_hole 0)))),
    ("Lemma_R.parallel",
     "\<phi> ?i ?x \<up> & \<phi> ?j ?x \<up> ==> parallel ?i ?j ?x \<up>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 2),
                      template_var 1)),
                  template_hole 1)),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 0),
                    template_var 1)),
                template_hole 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 1),
         template_hole 1))),
    ("Lemma_R.init_adverse_eq_prefixes",
     "?s : \<R> ==>
      adverse ?s ?z ?i ?j \<triangleright> ?n =
      Partial_Recursive.list_encode (prefixes ?s ?z ?i ?j ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_hole 5)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0))))),
    ("Lemma_R.parallel_converg_either",
     "(\<phi> ?i ?x \<down> | \<phi> ?j ?x \<down>) =
      (parallel ?i ?j ?x \<down>)",
     template_bimplication
      (template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 2),
                       template_var 1)),
                   template_hole 1))),
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_var 1)),
                 template_hole 1)))
           ),
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1),
             template_hole 1)
           ))),
    ("Lemma_R.sv01_consistent_V01",
     "?f : V\<^sub>0\<^sub>1 ==>
      ALL x<=?n.
         \<phi> (the (s\<^bsub>01\<^esub> (?f \<triangleright> ?n))) x =
         ?f x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_hole 8)
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Lemma_R.delay_gr0_converg",
     "0 < the (delay ?i ?x) ==>
      \<phi> ?i (e_take (the (delay ?i ?x)) ?x) \<down>",
     template_implication
      ([template_inequation
         (less_than, template_hole 9,
          template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_hole 8,
                       template_app
                        (template_app (template_hole 7, template_var 1),
                         template_var 0))),
                   template_app (template_hole 1, template_var 0)))),
             template_hole 0)
           ))),
    ("Lemma_R.r_result1_some_phi",
     "eval r_result1 [?t, ?i, ?x] \<down>= Suc ?v ==>
      \<phi> ?i ?x \<down>= ?v",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_hole 5),
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_hole 3)))),
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 0)))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Lemma_R.sv01_limit_V01",
     "?f : V\<^sub>0\<^sub>1 ==>
      EX i n\<^sub>0.
         ALL n>=n\<^sub>0.
            s\<^bsub>01\<^esub> (?f \<triangleright> n) \<down>= i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_hole 8)
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Lemma_R.inconsist_converg",
     "inconsist ?i ?e \<down> ==> ALL x<e_length ?e. \<phi> ?i x \<down>",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0),
              template_hole 6)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Lemma_R.phi_translate_adverse",
     "?s : \<R> ==>
      EX f:\<R>\<^sup>2. ALL i j. \<phi> (the (f i j)) = adverse ?s ?z i j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_hole 7)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_hole 5), t_empty)
           ))),
    ("Lemma_R.delay_monotone",
     "[| ?f : \<R>; ?n\<^sub>1 <= ?n\<^sub>2 |]
      ==> the (delay ?i (?f \<triangleright> ?n\<^sub>1))
          <= the (delay ?i (?f \<triangleright> ?n\<^sub>2))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_hole 4)
            ),
        template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)))))),
    ("Lemma_R.adverse_in_V01",
     "?s : \<R> ==>
      EX m n.
         adverse ?s 0 m n : V\<^sub>0\<^sub>1 &
         adverse ?s 1 m n : V\<^sub>0\<^sub>1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_hole 6)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Lemma_R.inconsist_converg_eq",
     "inconsist ?i ?e \<down>= e_length ?e ==>
      ALL x<e_length ?e. \<phi> ?i x \<down>= e_nth ?e x",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 8, template_var 1), template_var 0),
          template_app
           (template_hole 7,
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 0))))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Lemma_R.parallel",
     "\<phi> ?i ?x \<down> & \<phi> ?j ?x \<up> ==>
      parallel ?i ?j ?x \<down>= prod_encode (0, the (\<phi> ?i ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_hole 9,
                  template_app
                   (template_app
                     (template_hole 8,
                      template_app
                       (template_app (template_hole 7, template_var 2),
                        template_var 1)),
                    template_hole 6))),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 0),
                    template_var 1)),
                template_hole 6))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 0),
           template_var 1),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 7, template_var 2),
                   template_var 1)))))))),
    ("Lemma_R.parallel",
     "\<phi> ?j ?x \<down> & \<phi> ?i ?x \<up> ==>
      parallel ?i ?j ?x \<down>= prod_encode (1, the (\<phi> ?j ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_hole 9,
                  template_app
                   (template_app
                     (template_hole 8,
                      template_app
                       (template_app (template_hole 7, template_var 2),
                        template_var 1)),
                    template_hole 6))),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 0),
                    template_var 1)),
                template_hole 6))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 0),
             template_var 2),
           template_var 1),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 7, template_var 2),
                   template_var 1)))))))),
    ("Lemma_R.delay_unbounded",
     "[| ?f : \<R>; ALL n. \<phi> ?i (?f \<triangleright> n) \<down> |]
      ==> EX m. ?n < the (delay ?i (?f \<triangleright> m))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_hole 10)
            ),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Lemma_R.r_totalizer",
     "eval (r_totalizer ?d) [?i, ?x] =
      (if the (delay ?i ?x) = 0 then Some ?d
       else \<phi> ?i (e_take (the (delay ?i ?x)) ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 2)),
              template_app
               (template_app (template_hole 11, template_var 1),
                template_app
                 (template_app (template_hole 11, template_var 0),
                  template_hole 10)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 6, template_var 1),
                         template_var 0))),
                   template_hole 5)),
               template_app (template_hole 4, template_var 2)),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 6, template_var 1),
                         template_var 0))),
                   template_app (template_hole 0, template_var 0)))))
           ))),
    ("Lemma_R.parallel_converg_pdec1_0_or_1",
     "parallel ?i ?j ?x \<down> ==>
      pdec1 (the (parallel ?i ?j ?x)) = 0 |
      pdec1 (the (parallel ?i ?j ?x)) = 1",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 2),
                  template_var 1),
                template_var 0),
              template_hole 7)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_app
                            (template_app (template_hole 8, template_var 2),
                             template_var 1),
                           template_var 0))))),
                 template_hole 1)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_app
                          (template_app (template_hole 8, template_var 2),
                           template_var 1),
                         template_var 0))))),
               template_hole 0))
           ))),
    ("Lemma_R.least_bounded_Suc",
     "EX x<?upper. ?P x ==>
      (LEAST x. x < ?upper & ?P x) = (LEAST x. x < Suc ?upper & ?P x)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app (template_hole 1, t_empty),
         template_app (template_hole 1, t_empty)))),
    ("Lemma_R.least_bounded_gr",
     "EX x<?upper. ?P x ==>
      (LEAST x. x < ?upper & ?P x) = (LEAST x. x < ?upper + ?m & ?P x)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app (template_hole 1, t_empty),
         template_app (template_hole 1, t_empty)))),
    ("Lemma_R.r_result1_saturating'",
     "eval r_result1 [?t, ?i, ?x] \<down>= Suc ?v ==>
      eval r_result1 [?t + ?d, ?i, ?x] \<down>= Suc ?v",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_hole 5),
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_hole 3)))),
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 1)))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0)),
             template_app
              (template_app (template_hole 4, template_var 3),
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_hole 3)))),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 1))))),
    ("Lemma_R.r_result1_saturating_the",
     "[| 0 < the (eval r_result1 [?t, ?i, ?x]); ?t <= ?t' |]
      ==> 0 < the (eval r_result1 [?t', ?i, ?x])",
     template_implication
      ([template_inequation
         (less_than, template_hole 6,
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_hole 1)))))),
        template_inequation (less_equals, template_var 3, template_var 0)],
       template_inequation
        (less_than, template_hole 6,
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_hole 1)))))))),
    ("Lemma_R.r_parallel''",
     "eval r_phi [?i, ?x] \<up> & eval r_phi [?j, ?x] \<up> ==>
      eval r_parallel [?i, ?j, ?x] \<up>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_hole 4),
                      template_app
                       (template_app (template_hole 3, template_var 2),
                        template_app
                         (template_app (template_hole 3, template_var 1),
                          template_hole 2)))),
                  template_hole 1)),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_app
                     (template_app (template_hole 3, template_var 0),
                      template_app
                       (template_app (template_hole 3, template_var 1),
                        template_hole 2)))),
                template_hole 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_hole 0),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)))),
         template_hole 1))),
    ("Lemma_R.inconsist_consistent",
     "inconsist ?i ?e \<down> ==>
      (inconsist ?i ?e \<down>= e_length ?e) =
      (ALL x<e_length ?e. \<phi> ?i x \<down>= e_nth ?e x)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 10, template_var 1),
                template_var 0),
              template_hole 9)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 10, template_var 1),
               template_var 0)),
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 0)))),
         template_app (template_hole 4, t_empty)))),
    ("Lemma_R.delay_unbounded_monotone",
     "[| ?f : \<R>; ALL n. \<phi> ?i (?f \<triangleright> n) \<down> |]
      ==> EX m\<^sub>0.
             ALL m>=m\<^sub>0. ?n < the (delay ?i (?f \<triangleright> m))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_hole 12)
            ),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Lemma_R.r_result1_bivalent_phi",
     "\<phi> ?i ?x \<down>= ?v ==>
      eval r_result1 [?t, ?i, ?x] \<down>= Suc ?v |
      eval r_result1 [?t, ?i, ?x] \<down>= 0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 8, template_var 3), template_var 2),
          template_app (template_hole 7, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_app
                      (template_app (template_hole 3, template_var 0),
                       template_app
                        (template_app (template_hole 3, template_var 3),
                         template_app
                          (template_app (template_hole 3, template_var 2),
                           template_hole 2))))),
                 template_app
                  (template_hole 7,
                   template_app (template_hole 1, template_var 1)))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_app
                      (template_app (template_hole 3, template_var 3),
                       template_app
                        (template_app (template_hole 3, template_var 2),
                         template_hole 2))))),
               template_app (template_hole 7, template_hole 0)))
           ))),
    ("Lemma_R.totalizer_init",
     "?f : \<R> ==>
      totalizer ?d ?i (?f \<triangleright> ?n) =
      (if the (delay ?i (?f \<triangleright> ?n)) = 0 then Some ?d
       else \<phi> ?i
             (?f \<triangleright>
              (the (delay ?i (?f \<triangleright> ?n)) - 1)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 3),
              template_hole 12)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 10, template_var 2),
                  template_var 1),
                template_app
                 (template_app (template_hole 9, template_var 3),
                  template_var 0))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_hole 6,
                         template_app
                          (template_app (template_hole 5, template_var 1),
                           template_app
                            (template_app (template_hole 9, template_var 3),
                             template_var 0)))),
                     template_hole 4)),
                 template_app (template_hole 3, template_var 2)),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_app (template_hole 9, template_var 3),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_hole 6,
                         template_app
                          (template_app (template_hole 5, template_var 1),
                           template_app
                            (template_app (template_hole 9, template_var 3),
                             template_var 0)))),
                     template_hole 0))))
             )))),
    ("Lemma_R.adverse_in_R3",
     "?s : \<R> ==>
      EX r. recfn 3 r &
            Partial_Recursive.total r &
            (%i j x. eval r [i, j, x]) = adverse ?s ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_hole 14)
            )],
       template_predicate (template_app (template_hole 13, t_empty)))),
    ("Lemma_R.r_result1_bivalent'",
     "eval r_phi [?i, ?x] \<down>= ?v ==>
      eval r_result1 [?t, ?i, ?x] \<down>= Suc ?v |
      eval r_result1 [?t, ?i, ?x] \<down>= 0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 8, template_hole 7),
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_hole 5))),
          template_app (template_hole 4, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_hole 2),
                     template_app
                      (template_app (template_hole 6, template_var 0),
                       template_app
                        (template_app (template_hole 6, template_var 3),
                         template_app
                          (template_app (template_hole 6, template_var 2),
                           template_hole 5))))),
                 template_app
                  (template_hole 4,
                   template_app (template_hole 1, template_var 1)))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_hole 2),
                   template_app
                    (template_app (template_hole 6, template_var 0),
                     template_app
                      (template_app (template_hole 6, template_var 3),
                       template_app
                        (template_app (template_hole 6, template_var 2),
                         template_hole 5))))),
               template_app (template_hole 4, template_hole 0)))
           ))),
    ("Lemma_R.e_take_delay_init",
     "[| ?f : \<R>; 0 < the (delay ?i (?f \<triangleright> ?n)) |]
      ==> e_take (the (delay ?i (?f \<triangleright> ?n)))
           (?f \<triangleright> ?n) =
          ?f \<triangleright>
          (the (delay ?i (?f \<triangleright> ?n)) - 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_hole 11)
            ),
        template_inequation
         (less_than, template_hole 9,
          template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 0))))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 1),
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_var 0)))),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 6, template_var 2),
                 template_var 0)))),
         template_app
          (template_app (template_hole 6, template_var 2),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 1),
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_var 0)))),
             template_hole 0))))),
    ("Lemma_R.sv01",
     "[| ?f : V\<^sub>0\<^sub>1; ?n ~= 0;
         inconsist (amalg01 ?f) (?f \<triangleright> ?n) \<down>= Suc ?n |]
      ==> s\<^bsub>01\<^esub> (?f \<triangleright> ?n) \<down>= amalg01 ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_hole 12)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 9)),
        template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_hole 5,
                    template_app (template_var 1, template_hole 9))),
                template_app
                 (template_hole 5,
                  template_app (template_var 1, template_hole 4)))),
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)),
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 0)))],
       template_equation
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_var 1, template_hole 9))),
             template_app
              (template_hole 5,
               template_app (template_var 1, template_hole 4))))))),
    ("Lemma_R.parallel",
     "\<phi> ?i ?x \<down> & \<phi> ?j ?x \<down> ==>
      parallel ?i ?j ?x \<down>= prod_encode (0, the (\<phi> ?i ?x)) |
      parallel ?i ?j ?x \<down>= prod_encode (1, the (\<phi> ?j ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_hole 11,
                  template_app
                   (template_app
                     (template_hole 10,
                      template_app
                       (template_app (template_hole 9, template_var 2),
                        template_var 1)),
                    template_hole 8))),
              template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 9, template_var 0),
                      template_var 1)),
                  template_hole 8)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_app (template_hole 6, template_var 2),
                       template_var 0),
                     template_var 1)),
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 9, template_var 2),
                           template_var 1))))))),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_app (template_hole 6, template_var 2),
                     template_var 0),
                   template_var 1)),
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 0),
                     template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 9, template_var 0),
                         template_var 1)))))))
           ))),
    ("Lemma_R.inconsist_converg_less",
     "[| inconsist ?i ?e \<down>; the (inconsist ?i ?e) < e_length ?e |]
      ==> EX x<e_length ?e. \<phi> ?i x \<down>\<noteq> e_nth ?e x",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 10, template_var 1),
                template_var 0),
              template_hole 9)
            ),
        template_inequation
         (less_than,
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0)),
          template_app
           (template_hole 6,
            template_app (template_hole 5, template_var 0)))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Lemma_R.r_parallel''",
     "eval r_phi [?i, ?x] \<down> & eval r_phi [?j, ?x] \<up> ==>
      eval r_parallel [?i, ?j, ?x] \<down>=
      prod_encode (0, the (eval r_phi [?i, ?x]))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_hole 12,
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app
                       (template_app (template_hole 10, template_hole 9),
                        template_app
                         (template_app (template_hole 8, template_var 2),
                          template_app
                           (template_app (template_hole 8, template_var 1),
                            template_hole 7)))),
                    template_hole 6))),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_hole 9),
                    template_app
                     (template_app (template_hole 8, template_var 0),
                      template_app
                       (template_app (template_hole 8, template_var 1),
                        template_hole 7)))),
                template_hole 6))
            )],
       template_equation
        (template_app
          (template_app (template_hole 10, template_hole 5),
           template_app
            (template_app (template_hole 8, template_var 2),
             template_app
              (template_app (template_hole 8, template_var 0),
               template_app
                (template_app (template_hole 8, template_var 1),
                 template_hole 7)))),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_app
                    (template_app (template_hole 8, template_var 2),
                     template_app
                      (template_app (template_hole 8, template_var 1),
                       template_hole 7)))))))))),
    ("Lemma_R.r_parallel''",
     "eval r_phi [?j, ?x] \<down> & eval r_phi [?i, ?x] \<up> ==>
      eval r_parallel [?i, ?j, ?x] \<down>=
      prod_encode (1, the (eval r_phi [?j, ?x]))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_hole 12,
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app
                       (template_app (template_hole 10, template_hole 9),
                        template_app
                         (template_app (template_hole 8, template_var 2),
                          template_app
                           (template_app (template_hole 8, template_var 1),
                            template_hole 7)))),
                    template_hole 6))),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_hole 9),
                    template_app
                     (template_app (template_hole 8, template_var 0),
                      template_app
                       (template_app (template_hole 8, template_var 1),
                        template_hole 7)))),
                template_hole 6))
            )],
       template_equation
        (template_app
          (template_app (template_hole 10, template_hole 5),
           template_app
            (template_app (template_hole 8, template_var 0),
             template_app
              (template_app (template_hole 8, template_var 2),
               template_app
                (template_app (template_hole 8, template_var 1),
                 template_hole 7)))),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_app
                    (template_app (template_hole 8, template_var 2),
                     template_app
                      (template_app (template_hole 8, template_var 1),
                       template_hole 7)))))))))),
    ("Lemma_R.inconsist_init_converg_less",
     "[| ?f : \<R>; \<phi> ?i : \<R>;
         inconsist ?i (?f \<triangleright> ?n) \<down>;
         the (inconsist ?i (?f \<triangleright> ?n)) < Suc ?n |]
      ==> inconsist ?i (?f \<triangleright> (?n + ?m)) =
          inconsist ?i (?f \<triangleright> ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_hole 10)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 9, template_var 2)),
              template_hole 10)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 1)),
              template_hole 4)
            ),
        template_inequation
         (less_than,
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 1))),
          template_app (template_hole 1, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 2),
           template_app
            (template_app (template_hole 5, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 6, template_var 2),
           template_app
            (template_app (template_hole 5, template_var 3),
             template_var 1))))),
    ("Lemma_R.inconsist_converg_less",
     "[| inconsist ?i ?e \<down>; the (inconsist ?i ?e) < e_length ?e |]
      ==> inconsist ?i ?e \<down>=
          (LEAST x.
              x < e_length ?e & \<phi> ?i x \<down>\<noteq> e_nth ?e x)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 10, template_var 1),
                template_var 0),
              template_hole 9)
            ),
        template_inequation
         (less_than,
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0)),
          template_app
           (template_hole 6,
            template_app (template_hole 5, template_var 0)))],
       template_equation
        (template_app
          (template_app (template_hole 10, template_var 1), template_var 0),
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty))))),
    ("Lemma_R.r_result1_converg_phi",
     "\<phi> ?i ?x \<down>= ?v ==>
      EX t. (ALL t'>=t. eval r_result1 [t', ?i, ?x] \<down>= Suc ?v) &
            (ALL t'<t. eval r_result1 [t', ?i, ?x] \<down>= 0)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 13, template_var 2),
            template_var 1),
          template_app (template_hole 12, template_var 0))],
       template_predicate (template_app (template_hole 11, t_empty)))),
    ("Lemma_R.Greatest_bounded_Suc",
     "(if 0 < ?P ?n then Suc ?n
       else if EX j<?n. 0 < ?P j then Suc (GREATEST j. j < ?n & 0 < ?P j)
            else 0) =
      (if EX j<Suc ?n. 0 < ?P j then Suc (GREATEST j. j < Suc ?n & 0 < ?P j)
       else 0)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app (template_var 1, template_var 0))),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 6, template_app (template_hole 2, t_empty)),
             template_app
              (template_hole 3, template_app (template_hole 0, t_empty))),
           template_hole 4)),
       template_app
        (template_app
          (template_app
            (template_hole 6, template_app (template_hole 2, t_empty)),
           template_app
            (template_hole 3, template_app (template_hole 0, t_empty))),
         template_hole 4))),
    ("Lemma_R.sv01",
     "[| ?f : V\<^sub>0\<^sub>1; ?n ~= 0;
         the (inconsist (amalg01 ?f) (?f \<triangleright> ?n)) < Suc ?n;
         pdec1
          (the (parallel (the (?f 0)) (the (?f 1))
                 (the (inconsist (amalg01 ?f) (?f \<triangleright> ?n))))) =
         0 |]
      ==> s\<^bsub>01\<^esub> (?f \<triangleright> ?n) = ?f 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_hole 15)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 12)),
        template_inequation
         (less_than,
          template_app
           (template_hole 10,
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_hole 10,
                      template_app (template_var 1, template_hole 12))),
                  template_app
                   (template_hole 10,
                    template_app (template_var 1, template_hole 7)))),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0))),
          template_app (template_hole 5, template_var 0)),
        template_equation
         (template_app
           (template_hole 4,
            template_app
             (template_hole 3,
              template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_app
                     (template_hole 2,
                      template_app
                       (template_hole 10,
                        template_app (template_var 1, template_hole 12))),
                    template_app
                     (template_hole 10,
                      template_app (template_var 1, template_hole 7))),
                  template_app
                   (template_hole 10,
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_app
                           (template_hole 8,
                            template_app
                             (template_hole 10,
                              template_app
                               (template_var 1, template_hole 12))),
                          template_app
                           (template_hole 10,
                            template_app
                             (template_var 1, template_hole 7)))),
                      template_app
                       (template_app (template_hole 6, template_var 1),
                        template_var 0))))))),
          template_hole 12)],
       template_equation
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0)),
         template_app (template_var 1, template_hole 7)))),
    ("Lemma_R.inconsist_for_total",
     "total1 (\<phi> ?i) ==>
      inconsist ?i ?e \<down>=
      (if EX x<e_length ?e. \<phi> ?i x \<down>\<noteq> e_nth ?e x
       then LEAST x.
               x < e_length ?e & \<phi> ?i x \<down>\<noteq> e_nth ?e x
       else e_length ?e)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 14,
              template_app (template_hole 13, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 11, template_var 1), template_var 0),
         template_app
          (template_hole 10,
           template_app
            (template_app
              (template_app
                (template_hole 9, template_app (template_hole 8, t_empty)),
               template_app (template_hole 0, t_empty)),
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 0))))))),
    ("Lemma_R.sv01",
     "[| ?f : V\<^sub>0\<^sub>1; ?n ~= 0;
         the (inconsist (amalg01 ?f) (?f \<triangleright> ?n)) < Suc ?n;
         pdec1
          (the (parallel (the (?f 0)) (the (?f 1))
                 (the (inconsist (amalg01 ?f)
                        (?f \<triangleright> ?n))))) ~=
         0 |]
      ==> s\<^bsub>01\<^esub> (?f \<triangleright> ?n) = ?f 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_hole 15)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 12)),
        template_inequation
         (less_than,
          template_app
           (template_hole 10,
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_hole 10,
                      template_app (template_var 1, template_hole 12))),
                  template_app
                   (template_hole 10,
                    template_app (template_var 1, template_hole 7)))),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0))),
          template_app (template_hole 5, template_var 0)),
        template_negation
         (
            template_equation
             (template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app
                   (template_hole 10,
                    template_app
                     (template_app
                       (template_app
                         (template_hole 2,
                          template_app
                           (template_hole 10,
                            template_app
                             (template_var 1, template_hole 12))),
                        template_app
                         (template_hole 10,
                          template_app (template_var 1, template_hole 7))),
                      template_app
                       (template_hole 10,
                        template_app
                         (template_app
                           (template_hole 9,
                            template_app
                             (template_app
                               (template_hole 8,
                                template_app
                                 (template_hole 10,
                                  template_app
                                   (template_var 1, template_hole 12))),
                              template_app
                               (template_hole 10,
                                template_app
                                 (template_var 1, template_hole 7)))),
                          template_app
                           (template_app (template_hole 6, template_var 1),
                            template_var 0))))))),
              template_hole 12)
            )],
       template_equation
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0)),
         template_app (template_var 1, template_hole 12)))),
    ("Lemma_R.r_delay",
     "eval r_delay [?i, ?x] \<down>=
      (if EX j<e_length ?x.
             0 < the (eval r_result1 [e_length ?x, ?i, e_take (Suc j) ?x])
       then Suc (GREATEST j.
                    j < e_length ?x &
                    0 < the (eval r_result1
                              [e_length ?x, ?i, e_take (Suc j) ?x]))
       else 0)",
     template_equation
      (template_app
        (template_app (template_hole 17, template_hole 16),
         template_app
          (template_app (template_hole 15, template_var 1),
           template_app
            (template_app (template_hole 15, template_var 0),
             template_hole 14))),
       template_app
        (template_hole 13,
         template_app
          (template_app
            (template_app
              (template_hole 12, template_app (template_hole 11, t_empty)),
             template_app
              (template_hole 1, template_app (template_hole 0, t_empty))),
           template_hole 6)))),
    ("Lemma_R.inconsist_converg",
     "inconsist ?i ?e \<down> ==>
      inconsist ?i ?e =
      (if EX x<e_length ?e. \<phi> ?i x \<down>\<noteq> e_nth ?e x
       then Some
             (LEAST x.
                 x < e_length ?e & \<phi> ?i x \<down>\<noteq> e_nth ?e x)
       else Some (e_length ?e))",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 11, template_var 1),
                template_var 0),
              template_hole 10)
            )],
       template_equation
        (template_app
          (template_app (template_hole 11, template_var 1), template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 9, template_app (template_hole 8, t_empty)),
             template_app
              (template_hole 2, template_app (template_hole 0, t_empty))),
           template_app
            (template_hole 2,
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 0))))))),
    ("Lemma_R.r_parallel''",
     "eval r_phi [?i, ?x] \<down> & eval r_phi [?j, ?x] \<down> ==>
      eval r_parallel [?i, ?j, ?x] \<down>=
      prod_encode (0, the (eval r_phi [?i, ?x])) |
      eval r_parallel [?i, ?j, ?x] \<down>=
      prod_encode (1, the (eval r_phi [?j, ?x]))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_hole 14,
                  template_app
                   (template_app
                     (template_hole 13,
                      template_app
                       (template_app (template_hole 12, template_hole 11),
                        template_app
                         (template_app (template_hole 10, template_var 2),
                          template_app
                           (template_app (template_hole 10, template_var 1),
                            template_hole 9)))),
                    template_hole 8))),
              template_app
               (template_hole 14,
                template_app
                 (template_app
                   (template_hole 13,
                    template_app
                     (template_app (template_hole 12, template_hole 11),
                      template_app
                       (template_app (template_hole 10, template_var 0),
                        template_app
                         (template_app (template_hole 10, template_var 1),
                          template_hole 9)))),
                  template_hole 8)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 13,
                   template_app
                    (template_app (template_hole 12, template_hole 6),
                     template_app
                      (template_app (template_hole 10, template_var 2),
                       template_app
                        (template_app (template_hole 10, template_var 0),
                         template_app
                          (template_app (template_hole 10, template_var 1),
                           template_hole 9))))),
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_app
                        (template_hole 1,
                         template_app
                          (template_app
                            (template_hole 12, template_hole 11),
                           template_app
                            (template_app
                              (template_hole 10, template_var 2),
                             template_app
                              (template_app
                                (template_hole 10, template_var 1),
                               template_hole 9))))))))),
             template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app (template_hole 12, template_hole 6),
                   template_app
                    (template_app (template_hole 10, template_var 2),
                     template_app
                      (template_app (template_hole 10, template_var 0),
                       template_app
                        (template_app (template_hole 10, template_var 1),
                         template_hole 9))))),
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 0),
                     template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 12, template_hole 11),
                         template_app
                          (template_app (template_hole 10, template_var 0),
                           template_app
                            (template_app
                              (template_hole 10, template_var 1),
                             template_hole 9)))))))))
           ))),
    ("Lemma_R.r_delay_aux",
     "?n <= e_length ?x ==>
      eval r_delay_aux [?n, ?i, ?x] \<down>=
      (if EX j<?n.
             0 < the (eval r_result1 [e_length ?x, ?i, e_take (Suc j) ?x])
       then Suc (GREATEST j.
                    j < ?n &
                    0 < the (eval r_result1
                              [e_length ?x, ?i, e_take (Suc j) ?x]))
       else 0)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 18,
            template_app (template_hole 17, template_var 1)))],
       template_equation
        (template_app
          (template_app (template_hole 15, template_hole 14),
           template_app
            (template_app (template_hole 13, template_var 2),
             template_app
              (template_app (template_hole 13, template_var 0),
               template_app
                (template_app (template_hole 13, template_var 1),
                 template_hole 12)))),
         template_app
          (template_hole 11,
           template_app
            (template_app
              (template_app
                (template_hole 10, template_app (template_hole 9, t_empty)),
               template_app
                (template_hole 1, template_app (template_hole 0, t_empty))),
             template_hole 6))))),
    ("Lemma_R.adverse_Suc",
     "[| ?s : \<R>; 0 < ?x |]
      ==> adverse ?s ?z ?i ?j (Suc ?x) \<down>=
          (if ?s (e_snoc (adverse ?s ?z ?i ?j \<triangleright> ?x) 0) ~=
              ?s (adverse ?s ?z ?i ?j \<triangleright> ?x)
           then 0
           else if ?s (e_snoc (adverse ?s ?z ?i ?j \<triangleright> ?x)
                        1) ~=
                   ?s (adverse ?s ?z ?i ?j \<triangleright> ?x)
                then 1 else ?z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 4),
              template_hole 15)
            ),
        template_inequation (less_than, template_hole 13, template_var 3)],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 11, template_var 4),
                      template_var 2),
                    template_var 1),
                  template_var 0),
                template_app (template_hole 10, template_var 3))
              )],
         template_predicate
          (
             template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 12,
                           template_app
                            (template_var 4,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_app
                                  (template_hole 5,
                                   template_app
                                    (template_hole 4,
                                     template_app
(template_app
  (template_hole 3,
   template_app
    (template_app
      (template_app
        (template_app (template_hole 11, template_var 4), template_var 2),
       template_var 1),
     template_var 0)),
 template_var 3))),
                                 template_app
                                  (template_app
                                    (template_hole 2, template_hole 13),
                                   template_hole 1))))),
                         template_app
                          (template_var 4,
                           template_app
                            (template_app
                              (template_hole 3,
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 11, template_var 4),
                                     template_var 2),
                                   template_var 1),
                                 template_var 0)),
                             template_var 3))))),
                   template_hole 13),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_hole 7,
                         template_app
                          (template_app
                            (template_hole 12,
                             template_app
                              (template_var 4,
                               template_app
                                (template_hole 6,
                                 template_app
                                  (template_app
                                    (template_hole 5,
                                     template_app
(template_hole 4,
 template_app
  (template_app
    (template_hole 3,
     template_app
      (template_app
        (template_app
          (template_app (template_hole 11, template_var 4), template_var 2),
         template_var 1),
       template_var 0)),
   template_var 3))),
                                   template_app
                                    (template_app
(template_hole 2, template_hole 0),
                                     template_hole 1))))),
                           template_app
                            (template_var 4,
                             template_app
                              (template_app
                                (template_hole 3,
                                 template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 11, template_var 4), template_var 2),
                                     template_var 1),
                                   template_var 0)),
                               template_var 3))))),
                     template_hole 0),
                   template_var 2)))
             )))),
    ("Lemma_R.adverse_Suc_not_hyp_change",
     "[| ?s : \<R>; 0 < ?x; ~ hyp_change ?s ?z ?i ?j ?x |]
      ==> adverse ?s ?z ?i ?j (Suc ?x) \<down>= ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 4),
              template_hole 15)
            ),
        template_inequation (less_than, template_hole 13, template_var 3),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_hole 12,
                      template_app
                       (template_app
                         (template_hole 10,
                          template_app
                           (template_var 4,
                            template_app
                             (template_hole 9,
                              template_app
                               (template_app
                                 (template_hole 8,
                                  template_app
                                   (template_hole 7,
                                    template_app
                                     (template_app
 (template_hole 6,
  template_app
   (template_app
     (template_app
       (template_app (template_hole 5, template_var 4), template_var 2),
      template_var 1),
    template_var 0)),
template_var 3))),
                                template_app
                                 (template_app
                                   (template_hole 4, template_hole 13),
                                  template_hole 3))))),
                        template_app
                         (template_var 4,
                          template_app
                           (template_app
                             (template_hole 6,
                              template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_hole 5, template_var 4),
                                    template_var 2),
                                  template_var 1),
                                template_var 0)),
                            template_var 3))))),
                  template_app
                   (template_hole 12,
                    template_app
                     (template_app
                       (template_hole 10,
                        template_app
                         (template_var 4,
                          template_app
                           (template_hole 9,
                            template_app
                             (template_app
                               (template_hole 8,
                                template_app
                                 (template_hole 7,
                                  template_app
                                   (template_app
                                     (template_hole 6,
template_app
 (template_app
   (template_app
     (template_app (template_hole 5, template_var 4), template_var 2),
    template_var 1),
  template_var 0)),
                                    template_var 3))),
                              template_app
                               (template_app
                                 (template_hole 4, template_hole 2),
                                template_hole 3))))),
                      template_app
                       (template_var 4,
                        template_app
                         (template_app
                           (template_hole 6,
                            template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_hole 5, template_var 4),
                                  template_var 2),
                                template_var 1),
                              template_var 0)),
                          template_var 3)))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 4),
                 template_var 2),
               template_var 1),
             template_var 0),
           template_app (template_hole 1, template_var 3)),
         template_app (template_hole 0, template_var 2)))),
    ("Lemma_R.inconsist_for_V01",
     "[| ?f : V\<^sub>0\<^sub>1; ?k = amalg01 ?f |]
      ==> inconsist ?k ?e \<down>=
          (if EX x<e_length ?e. \<phi> ?k x \<down>\<noteq> e_nth ?e x
           then LEAST x.
                   x < e_length ?e & \<phi> ?k x \<down>\<noteq> e_nth ?e x
           else e_length ?e)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 2),
              template_hole 19)
            ),
        template_equation
         (template_var 1,
          template_app
           (template_app
             (template_hole 17,
              template_app
               (template_hole 16,
                template_app (template_var 2, template_hole 15))),
            template_app
             (template_hole 16,
              template_app (template_var 2, template_hole 14))))],
       template_equation
        (template_app
          (template_app (template_hole 12, template_var 1), template_var 0),
         template_app
          (template_hole 11,
           template_app
            (template_app
              (template_app
                (template_hole 10, template_app (template_hole 9, t_empty)),
               template_app (template_hole 0, t_empty)),
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 0))))))),
    ("Lemma_R.always_hyp_change_no_lim",
     "[| ?s : \<R>; ALL x>0. hyp_change ?s ?z ?i ?j x |]
      ==> ~ learn_lim \<phi> {adverse ?s ?z ?i ?j} ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 3),
              template_hole 19)
            ),
        template_predicate (template_app (template_hole 18, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 7, template_var 3),
                             template_var 2),
                           template_var 1),
                         template_var 0)),
                     template_hole 0)),
                 template_var 3)
               )
           ))),
    ("Lemma_R.no_hyp_change_no_cons",
     "[| ?s : \<R>; 0 < ?x; ~ hyp_change ?s ?z ?i ?j ?x |]
      ==> ~ learn_cons \<phi> {adverse ?s 0 ?i ?j, adverse ?s 1 ?i ?j} ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 4),
              template_hole 17)
            ),
        template_inequation (less_than, template_hole 15, template_var 3),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 13,
                    template_app
                     (template_hole 14,
                      template_app
                       (template_app
                         (template_hole 12,
                          template_app
                           (template_var 4,
                            template_app
                             (template_hole 11,
                              template_app
                               (template_app
                                 (template_hole 10,
                                  template_app
                                   (template_hole 9,
                                    template_app
                                     (template_app
 (template_hole 8,
  template_app
   (template_app
     (template_app
       (template_app (template_hole 7, template_var 4), template_var 2),
      template_var 1),
    template_var 0)),
template_var 3))),
                                template_app
                                 (template_app
                                   (template_hole 6, template_hole 15),
                                  template_hole 5))))),
                        template_app
                         (template_var 4,
                          template_app
                           (template_app
                             (template_hole 8,
                              template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_hole 7, template_var 4),
                                    template_var 2),
                                  template_var 1),
                                template_var 0)),
                            template_var 3))))),
                  template_app
                   (template_hole 14,
                    template_app
                     (template_app
                       (template_hole 12,
                        template_app
                         (template_var 4,
                          template_app
                           (template_hole 11,
                            template_app
                             (template_app
                               (template_hole 10,
                                template_app
                                 (template_hole 9,
                                  template_app
                                   (template_app
                                     (template_hole 8,
template_app
 (template_app
   (template_app
     (template_app (template_hole 7, template_var 4), template_var 2),
    template_var 1),
  template_var 0)),
                                    template_var 3))),
                              template_app
                               (template_app
                                 (template_hole 6, template_hole 4),
                                template_hole 5))))),
                      template_app
                       (template_var 4,
                        template_app
                         (template_app
                           (template_hole 8,
                            template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_hole 7, template_var 4),
                                  template_var 2),
                                template_var 1),
                              template_var 0)),
                          template_var 3)))))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 7, template_var 4),
                             template_hole 15),
                           template_var 1),
                         template_var 0)),
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 7, template_var 4),
                               template_hole 4),
                             template_var 1),
                           template_var 0)),
                       template_hole 0))),
                 template_var 4)
               )
           ))),
    ("Lemma_R.while_hyp_change",
     "[| ?s : \<R>; ALL x<=?n. 0 < x --> hyp_change ?s ?z ?i ?j x |]
      ==> ALL x<=Suc ?n. adverse ?s ?z ?i ?j x = adverse ?s ?z' ?i ?j x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 5),
              template_hole 17)
            ),
        template_predicate (template_app (template_hole 16, t_empty))],
       template_predicate (template_app (template_hole 16, t_empty))))]:
   (string * thm * template) list
### theory "Draft.Lemma_RMoreTemplates"
### 0.437s elapsed time, 0.643s cpu time, 0.114s GC time
val it = (): unit
