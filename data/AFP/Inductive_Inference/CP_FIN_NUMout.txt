Loading theory "HOL-Library.Function_Algebras" (required by "Draft.CP_FIN_NUMMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.CP_FIN_NUMMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.CP_FIN_NUMMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.CP_FIN_NUMMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.134s elapsed time, 0.548s cpu time, 0.059s GC time
### theory "HOL-Library.Set_Algebras"
### 0.195s elapsed time, 0.731s cpu time, 0.059s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.CP_FIN_NUMMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.353s elapsed time, 1.228s cpu time, 0.183s GC time
Loading theory "Draft.Partial_Recursive" (required by "Draft.CP_FIN_NUMMoreTemplates" via "Draft.CP_FIN_NUM" via "Draft.Inductive_Inference_Basics" via "Draft.Standard_Results" via "Draft.Universal")
Loading theory "HOL-Library.Stream" (required by "Draft.CP_FIN_NUMMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.011s elapsed time, 3.718s cpu time, 1.027s GC time
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.070s elapsed time, 3.884s cpu time, 0.940s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order:
  "(%p. size (fst p)) <*mlex*> (%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.034s elapsed time, 6.514s cpu time, 1.287s GC time
Loading theory "Draft.Templates" (required by "Draft.CP_FIN_NUMMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.055s elapsed time, 0.109s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.CP_FIN_NUMMoreTemplates")
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
Found termination order: "{}"
### theory "Draft.ExtrEqs"
### 0.553s elapsed time, 1.181s cpu time, 0.158s GC time
Found termination order: "{}"
### theory "Draft.Partial_Recursive"
### 2.521s elapsed time, 6.815s cpu time, 1.332s GC time
Loading theory "Draft.Universal" (required by "Draft.CP_FIN_NUMMoreTemplates" via "Draft.CP_FIN_NUM" via "Draft.Inductive_Inference_Basics" via "Draft.Standard_Results")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Universal"
### 1.309s elapsed time, 2.030s cpu time, 0.894s GC time
Loading theory "Draft.Standard_Results" (required by "Draft.CP_FIN_NUMMoreTemplates" via "Draft.CP_FIN_NUM" via "Draft.Inductive_Inference_Basics")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
### theory "Draft.Standard_Results"
### 0.570s elapsed time, 0.729s cpu time, 0.197s GC time
Loading theory "Draft.Inductive_Inference_Basics" (required by "Draft.CP_FIN_NUMMoreTemplates" via "Draft.CP_FIN_NUM")
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
### theory "Draft.Inductive_Inference_Basics"
### 0.415s elapsed time, 0.485s cpu time, 0.093s GC time
Loading theory "Draft.CP_FIN_NUM" (required by "Draft.CP_FIN_NUMMoreTemplates")
### theory "Draft.CP_FIN_NUM"
### 0.145s elapsed time, 0.145s cpu time, 0.000s GC time
Loading theory "Draft.CP_FIN_NUMMoreTemplates"
val templateLemmas =
   [("CP_FIN_NUM.findr_total", "findr ?e \<down>",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("CP_FIN_NUM.r_findr", "eval r_findr [?e] = findr ?e",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("CP_FIN_NUM.consistent_in_P2",
     "?\<psi> : \<P>\<^sup>2 ==> consistent ?\<psi> : \<P>\<^sup>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 0)),
             template_hole 1)
           ))),
    ("CP_FIN_NUM.consistent_in_R2",
     "?\<psi> : \<R>\<^sup>2 ==> consistent ?\<psi> : \<R>\<^sup>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 0)),
             template_hole 1)
           ))),
    ("CP_FIN_NUM.min_cons_hyp_in_P1",
     "?\<psi> : \<R>\<^sup>2 ==> min_cons_hyp ?\<psi> : \<P>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("CP_FIN_NUM.FIN_wrt_impl_CP",
     "?U : FIN_wrt ?\<psi> ==> ?U : CP_wrt ?\<psi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("CP_FIN_NUM.prepend_goedel",
     "?f : \<R> ==> EX i. \<phi> i = [i] \<odot> ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_hole 6)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("CP_FIN_NUM.NUM_imp_learn_total",
     "[| ?\<psi> : \<R>\<^sup>2; ?U : NUM_wrt ?\<psi> |]
      ==> learn_total ?\<psi> ?U (min_cons_hyp ?\<psi>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("CP_FIN_NUM.nonempty_FIN_wrt_impl_CP",
     "[| ?U ~= {}; ?U : FIN_wrt ?\<psi> |] ==> ?U : CP_wrt ?\<psi>",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("CP_FIN_NUM.r_consist_upto_recfn",
     "recfn 2 ?r_psi ==> recfn 3 (r_consist_upto ?r_psi)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 0)),
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 0)),
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_hole 2))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 1, template_var 0))),
               template_app
                (template_hole 4,
                 template_app (template_hole 0, template_hole 2))))
           ))),
    ("CP_FIN_NUM.r_consistent_recfn",
     "recfn 2 ?r_psi ==> recfn 2 (r_consistent ?r_psi)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 0)),
                template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_hole 1))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app (template_hole 0, template_var 0))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 0, template_var 0))),
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))))
           ))),
    ("CP_FIN_NUM.findr_ex",
     "EX i<e_length ?e. e_nth ?e i ~= 0 ==> the (findr ?e) < e_length ?e",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_inequation
        (less_than,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app
          (template_hole 7,
           template_app (template_hole 6, template_var 0))))),
    ("CP_FIN_NUM.findr_ex",
     "EX i<e_length ?e. e_nth ?e i ~= 0 ==> e_nth ?e (the (findr ?e)) ~= 0",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))),
             template_hole 2)
           ))),
    ("CP_FIN_NUM.consistent_init",
     "[| ?\<psi> : \<R>\<^sup>2; ?f : \<R> |]
      ==> consistent ?\<psi> ?i (?f \<triangleright> ?n) =
          (if ?\<psi> ?i \<triangleright> ?n = ?f \<triangleright> ?n
           then Some 0 else Some 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_hole 10)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_hole 8)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 1),
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 0))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app (template_var 3, template_var 1)),
                         template_var 0)),
                     template_app
                      (template_app (template_hole 5, template_var 2),
                       template_var 0))),
                 template_app (template_hole 2, template_hole 1)),
               template_app (template_hole 2, template_hole 0))
             )))),
    ("CP_FIN_NUM.consistent_for_R2",
     "?\<psi> : \<R>\<^sup>2 ==>
      consistent ?\<psi> ?i ?e =
      (if ALL j<e_length ?e. ?\<psi> ?i j \<down>= e_nth ?e j then Some 0
       else Some 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_hole 12)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 10, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 9, template_app (template_hole 8, t_empty)),
             template_app (template_hole 3, template_hole 1)),
           template_app (template_hole 3, template_hole 0))))),
    ("CP_FIN_NUM.findr_ex",
     "EX i<e_length ?e. e_nth ?e i ~= 0 ==>
      ALL i. the (findr ?e) < i & i < e_length ?e --> e_nth ?e i = 0",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("CP_FIN_NUM.r_consistent_diverg",
     "[| recfn 2 ?r_psi; EX k<e_length ?e. eval ?r_psi [?i, k] \<up> |]
      ==> eval (r_consistent ?r_psi) [?i, ?e] \<up>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app (template_hole 15, template_var 2)),
              template_app
               (template_app
                 (template_hole 14,
                  template_app (template_hole 13, template_var 2)),
                template_app
                 (template_hole 12,
                  template_app (template_hole 11, template_hole 10))))
            ),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 0, template_var 2)),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_hole 2))),
         template_hole 1))),
    ("CP_FIN_NUM.r_consistent",
     "[| recfn 2 ?r_psi; ALL x y. eval ?r_psi [x, y] = ?\<psi> x y |]
      ==> eval (r_consistent ?r_psi) [?i, ?e] = consistent ?\<psi> ?i ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 3)),
              template_app
               (template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_var 3)),
                template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_hole 7))))
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 1, template_var 3)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2))),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("CP_FIN_NUM.r_consist_upto",
     "[| recfn 2 ?r_psi; ~ (ALL k<?j. eval ?r_psi [?i, k] \<down>) |]
      ==> eval (r_consist_upto ?r_psi) [?j, ?i, ?e] \<up>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app (template_hole 15, template_var 3)),
              template_app
               (template_app
                 (template_hole 14,
                  template_app (template_hole 13, template_var 3)),
                template_app
                 (template_hole 12,
                  template_app (template_hole 11, template_hole 10))))
            ),
        template_negation
         (template_predicate (template_app (template_hole 8, t_empty)))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 0, template_var 3)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 2)))),
         template_hole 1))),
    ("CP_FIN_NUM.r_consist_upto",
     "[| recfn 2 ?r_psi; ALL k<?j. eval ?r_psi [?i, k] \<down> |]
      ==> eval (r_consist_upto ?r_psi) [?j, ?i, ?e] =
          (if ALL k<?j. eval ?r_psi [?i, k] \<down>= e_nth ?e k then Some 0
           else Some 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 21,
                template_app (template_hole 20, template_var 3)),
              template_app
               (template_app
                 (template_hole 19,
                  template_app (template_hole 18, template_var 3)),
                template_app
                 (template_hole 17,
                  template_app (template_hole 16, template_hole 15))))
            ),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app (template_hole 5, template_var 3)),
           template_app
            (template_app (template_hole 8, template_var 2),
             template_app
              (template_app (template_hole 8, template_var 1),
               template_app
                (template_app (template_hole 8, template_var 0),
                 template_hole 7)))),
         template_app
          (template_app
            (template_app
              (template_hole 4, template_app (template_hole 14, t_empty)),
             template_app (template_hole 3, template_hole 1)),
           template_app (template_hole 3, template_hole 0))))),
    ("CP_FIN_NUM.r_consistent_converg",
     "[| recfn 2 ?r_psi; ALL k<e_length ?e. eval ?r_psi [?i, k] \<down> |]
      ==> eval (r_consistent ?r_psi) [?i, ?e] \<down>=
          (if ALL k<e_length ?e. eval ?r_psi [?i, k] \<down>= e_nth ?e k
           then 0 else 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app (template_hole 22, template_var 2)),
              template_app
               (template_app
                 (template_hole 21,
                  template_app (template_hole 20, template_var 2)),
                template_app
                 (template_hole 19,
                  template_app (template_hole 18, template_hole 17))))
            ),
        template_predicate (template_app (template_hole 16, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app (template_hole 5, template_var 2)),
           template_app
            (template_app (template_hole 8, template_var 0),
             template_app
              (template_app (template_hole 8, template_var 1),
               template_hole 7))),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app
                (template_hole 3, template_app (template_hole 16, t_empty)),
               template_hole 1),
             template_hole 0)))))]:
   (string * thm * template) list
### theory "Draft.CP_FIN_NUMMoreTemplates"
### 0.353s elapsed time, 0.546s cpu time, 0.120s GC time
val it = (): unit
