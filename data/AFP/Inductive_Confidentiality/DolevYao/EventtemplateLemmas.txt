   [("Event.used_nil_subset", "used [] <= used ?evs",
     template_inequation
      (less_equals, template_app (template_hole 1, template_hole 0),
       template_app (template_hole 1, template_var 0))),
    ("Event.initState_subset_knows", "initState ?A <= knows ?A ?evs",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Event.parts_knows_Spy_subset_used",
     "parts (knows Spy ?evs) <= used ?evs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Event.used_Gets", "used (Gets ?A ?X # ?evs) = used ?evs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("Event.knows_subset_knows_Cons",
     "knows ?A ?evs <= knows ?A (?e # ?evs)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 2), template_var 1),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Event.knows_Spy_Gets",
     "knows Spy (Gets ?A ?X # ?evs) = knows Spy ?evs",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 3, template_hole 2), template_var 0))),
    ("Event.knows_subset_knows_Gets",
     "knows ?A ?evs <= knows ?A (Gets ?A' ?X # ?evs)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 2, template_var 3), template_var 2),
       template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2)))),
    ("Event.knows_subset_knows_Notes",
     "knows ?A ?evs <= knows ?A (Notes ?A' ?X # ?evs)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 2, template_var 3), template_var 2),
       template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2)))),
    ("Event.knows_Spy_subset_knows_Spy_Gets",
     "knows Spy ?evs <= knows Spy (Gets ?A ?X # ?evs)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 3, template_hole 2), template_var 2),
       template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2)))),
    ("Event.knows_Spy_subset_knows_Spy_Notes",
     "knows Spy ?evs <= knows Spy (Notes ?A ?X # ?evs)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 3, template_hole 2), template_var 2),
       template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2)))),
    ("Event.initState_into_used",
     "?X : parts (initState ?B) ==> ?X : used ?evs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Event.knows_subset_knows_Says",
     "knows ?A ?evs <= knows ?A (Says ?A' ?B ?X # ?evs)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 2, template_var 4), template_var 3),
       template_app
        (template_app (template_hole 2, template_var 4),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_var 3)))),
    ("Event.knows_Spy_subset_knows_Spy_Says",
     "knows Spy ?evs <= knows Spy (Says ?A ?B ?X # ?evs)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 3, template_hole 2), template_var 3),
       template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_var 3)))),
    ("Event.Notes_imp_used", "Notes ?A ?X : set ?evs ==> ?X : used ?evs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Event.usedI", "?c : parts (knows Spy ?evs) ==> ?c : used ?evs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Event.knows_Notes",
     "knows ?A (Notes ?A ?X # ?evs) = insert ?X (knows ?A ?evs)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Event.Notes_imp_knows",
     "Notes ?A ?X : set ?evs ==> ?X : knows ?A ?evs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Event.Says_imp_used", "Says ?A ?B ?X : set ?evs ==> ?X : used ?evs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2),
                  template_var 1)),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Event.used_Notes",
     "used (Notes ?A ?X # ?evs) = parts {?X} Un used ?evs",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_app (template_hole 6, template_var 0)))),
    ("Event.knows_Says",
     "knows ?A (Says ?A ?B ?X # ?evs) = insert ?X (knows ?A ?evs)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_var 0)))),
    ("Event.knows_Spy_Says",
     "knows Spy (Says ?A ?B ?X # ?evs) = insert ?X (knows Spy ?evs)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)))),
    ("Event.Says_imp_knows",
     "Says ?A ?B ?X : set ?evs ==> ?X : knows ?A ?evs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2),
                  template_var 1)),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Event.Says_imp_spies",
     "Says ?A ?B ?X : set ?evs ==> ?X : knows Spy ?evs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_app (template_hole 4, template_var 3),
                    template_var 2),
                  template_var 1)),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Event.used_Says",
     "used (Says ?A ?B ?X # ?evs) = parts {?X} Un used ?evs",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_app (template_hole 6, template_var 0)))),
    ("Event.Says_imp_analz_Spy",
     "Says ?A ?B ?X : set ?evs ==> ?X : analz (knows Spy ?evs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_app (template_hole 5, template_var 3),
                    template_var 2),
                  template_var 1)),
              template_app (template_hole 4, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)))
           ))),
    ("Event.parts_insert_knows_A",
     "parts (insert ?X (knows ?A ?evs)) =
      parts {?X} Un parts (knows ?A ?evs)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_hole 0))),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Event.parts_insert_spies",
     "parts (insert ?X (knows Spy ?evs)) =
      parts {?X} Un parts (knows Spy ?evs)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_hole 0))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0))))),
    ("Event.spies_partsEs",
     "[| Crypt ?K ?X : parts ?H; ?X : parts ?H ==> PROP ?W |] ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_app (template_hole 0, template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app (template_hole 0, template_var 1))
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Event.knows_Gets",
     "?A ~= Spy -->
      knows ?A (Gets ?A ?X # ?evs) = insert ?X (knows ?A ?evs)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 2),
                 template_hole 5))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 1)),
                   template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 0))))
         )),
    ("Event.Notes_imp_knows_Spy",
     "[| Notes ?A ?X : set ?evs; ?A : bad |] ==> ?X : knows Spy ?evs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1)),
              template_app (template_hole 5, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Event.Gets_imp_knows_agents",
     "[| ?A ~= Spy; Gets ?A ?X : set ?evs |] ==> ?X : knows ?A ?evs",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Event.Says_imp_parts_knows_Spy",
     "[| Says ?A ?B ?X : set ?evs;
         ?X : parts (knows Spy ?evs) ==> PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_app (template_hole 5, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_app (template_hole 4, template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 1)))
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Event.knows_Spy_Notes",
     "knows Spy (Notes ?A ?X # ?evs) =
      (if ?A : bad then insert ?X (knows Spy ?evs) else knows Spy ?evs)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 1)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_var 0))),
         template_app
          (template_app (template_hole 7, template_hole 6),
           template_var 0)))),
    ("Event.analz_mono_contra",
     "?c ~: analz (knows Spy (Gets ?A ?X # ?evs)) ==>
      ?c ~: analz (knows Spy ?evs)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_hole 2),
                      template_app
                       (template_app
                         (template_hole 1,
                          template_app
                           (template_app (template_hole 0, template_var 2),
                            template_var 1)),
                        template_var 0))))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 5, template_var 3),
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_var 0)))
               )
           ))),
    ("Event.analz_mono_contra",
     "?c ~: analz (knows Spy (Notes ?A ?X # ?evs)) ==>
      ?c ~: analz (knows Spy ?evs)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_hole 2),
                      template_app
                       (template_app
                         (template_hole 1,
                          template_app
                           (template_app (template_hole 0, template_var 2),
                            template_var 1)),
                        template_var 0))))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 5, template_var 3),
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_var 0)))
               )
           ))),
    ("Event.analz_impI",
     "(?Y ~: analz (knows Spy ?evs) ==> ?Q) ==>
      ?Y ~: analz (knows Spy ?evs) --> ?Q",
     template_implication
      ([template_implication
         ([template_negation
            (
               template_predicate
                (
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_hole 1),
                         template_var 1)))
                   )
               )],
          template_predicate (template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_var 1))))),
             template_var 0)
           ))),
    ("Event.analz_mono_contra",
     "?c ~: analz (knows Spy (Says ?A ?B ?X # ?evs)) ==>
      ?c ~: analz (knows Spy ?evs)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_hole 2),
                      template_app
                       (template_app
                         (template_hole 1,
                          template_app
                           (template_app
                             (template_app
                               (template_hole 0, template_var 3),
                              template_var 2),
                            template_var 1)),
                        template_var 0))))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 5, template_var 4),
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_var 0)))
               )
           ))),
    ("Event.syan_impI",
     "(?Y ~: synth (analz (knows Spy ?evs)) ==> ?Q) ==>
      ?Y ~: synth (analz (knows Spy ?evs)) --> ?Q",
     template_implication
      ([template_implication
         ([template_negation
            (
               template_predicate
                (
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 2, template_hole 1),
                           template_var 1))))
                   )
               )],
          template_predicate (template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_hole 1),
                         template_var 1)))))),
             template_var 0)
           ))),
    ("Event.knows_Spy_imp_Says_Notes_initState",
     "?X : knows Spy ?evs ==>
      EX A B.
         Says A B ?X : set ?evs |
         Notes A ?X : set ?evs | ?X : initState Spy",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Event.keysFor_parts_insert",
     "[| ?K : keysFor (parts (insert ?X ?G)); ?X : synth (analz ?H) |]
      ==> ?K : keysFor (parts (?G Un ?H)) | Key (invKey ?K) : parts ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 2),
                    template_var 1))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 10, template_var 3),
                 template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_var 0))))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 3))),
               template_app (template_hole 8, template_var 0)))
           ))),
    ("Event.knows_imp_Says_Gets_Notes_initState",
     "[| ?X : knows ?A ?evs; ?A ~= Spy |]
      ==> EX B. Says ?A B ?X : set ?evs |
                Gets ?A ?X : set ?evs |
                Notes ?A ?X : set ?evs | ?X : initState ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_app
               (template_app (template_hole 11, template_var 1),
                template_var 0))
            ),
        template_negation
         (template_equation (template_var 1, template_hole 8))],
       template_predicate (template_app (template_hole 7, t_empty))))]
