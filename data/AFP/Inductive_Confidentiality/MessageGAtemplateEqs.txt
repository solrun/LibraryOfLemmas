   [("MessageGA.invKey", "invKey (invKey ?K) = ?K",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("MessageGA.keysFor_image_Key", "keysFor (Key ` ?E) = {}",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_hole 0)),
    ("MessageGA.analz_idem", "analz (analz ?H) = analz ?H",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("MessageGA.analz_parts", "analz (parts ?H) = parts ?H",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("MessageGA.parts_analz", "parts (analz ?H) = parts ?H",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("MessageGA.parts_idem", "parts (parts ?H) = parts ?H",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("MessageGA.synth_idem", "synth (synth ?H) = synth ?H",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("MessageGA.keysFor_insert_Agent",
     "keysFor (insert (Agent ?A) ?H) = keysFor ?H",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("MessageGA.keysFor_insert_Hash",
     "keysFor (insert (Hash ?X) ?H) = keysFor ?H",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("MessageGA.keysFor_insert_Key",
     "keysFor (insert (Key ?K) ?H) = keysFor ?H",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("MessageGA.keysFor_insert_Nonce",
     "keysFor (insert (Nonce ?N) ?H) = keysFor ?H",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("MessageGA.keysFor_insert_Number",
     "keysFor (insert (Number ?N) ?H) = keysFor ?H",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("MessageGA.analz_image_Key", "analz (Key ` ?N) = Key ` ?N",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("MessageGA.parts_image_Key", "parts (Key ` ?N) = Key ` ?N",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("MessageGA.keysFor_insert_HPair",
     "keysFor (insert Hash[?X] ?Y ?H) = keysFor ?H",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("MessageGA.keysFor_insert_MPair",
     "keysFor (insert \<lbrace>?X, ?Y\<rbrace> ?H) = keysFor ?H",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("MessageGA.analz_synth", "analz (synth ?H) = analz ?H Un synth ?H",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("MessageGA.parts_synth", "parts (synth ?H) = parts ?H Un synth ?H",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("MessageGA.invKey_eq", "(invKey ?K = invKey ?K') = (?K = ?K')",
     template_bimplication
      (template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("MessageGA.keysFor_Un",
     "keysFor (?H Un ?H') = keysFor ?H Un keysFor ?H'",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("MessageGA.parts_Un", "parts (?G Un ?H) = parts ?G Un parts ?H",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("MessageGA.analz_analz_Un",
     "analz (analz ?G Un ?H) = analz (?G Un ?H)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("MessageGA.analz_subset_iff",
     "(analz ?G <= analz ?H) = (?G <= analz ?H)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("MessageGA.parts_subset_iff",
     "(parts ?G <= parts ?H) = (?G <= parts ?H)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("MessageGA.synth_subset_iff",
     "(synth ?G <= synth ?H) = (?G <= synth ?H)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("MessageGA.Key_synth_eq", "(Key ?K : synth ?H) = (Key ?K : ?H)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0))),
    ("MessageGA.Nonce_synth_eq", "(Nonce ?N : synth ?H) = (Nonce ?N : ?H)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0))),
    ("MessageGA.synth_simps", "(Nonce ?n : synth ?H) = (Nonce ?n : ?H)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0))),
    ("MessageGA.Key_image_eq", "(Key ?x : Key ` ?A) = (?x : ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app
          (template_app (template_hole 1, template_hole 2),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("MessageGA.Friend_image_eq", "(Friend ?x : Friend ` ?A) = (?x : ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app
          (template_app (template_hole 1, template_hole 2),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("MessageGA.analzp_analz_eq",
     "analzp (%x. x : ?H) = (%x. x : analz ?H)",
     template_equation (template_app (template_hole 2, t_empty), t_empty)),
    ("MessageGA.partsp_parts_eq",
     "partsp (%x. x : ?H) = (%x. x : parts ?H)",
     template_equation (template_app (template_hole 2, t_empty), t_empty)),
    ("MessageGA.synthp_synth_eq",
     "synthp (%x. x : ?H) = (%x. x : synth ?H)",
     template_equation (template_app (template_hole 2, t_empty), t_empty)),
    ("MessageGA.analz_insert_Agent",
     "analz (insert (Agent ?agt) ?H) = insert (Agent ?agt) (analz ?H)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("MessageGA.analz_insert_Hash",
     "analz (insert (Hash ?X) ?H) = insert (Hash ?X) (analz ?H)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("MessageGA.analz_insert_Nonce",
     "analz (insert (Nonce ?N) ?H) = insert (Nonce ?N) (analz ?H)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("MessageGA.analz_insert_Number",
     "analz (insert (Number ?N) ?H) = insert (Number ?N) (analz ?H)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("MessageGA.parts_insert_Agent",
     "parts (insert (Agent ?agt) ?H) = insert (Agent ?agt) (parts ?H)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("MessageGA.parts_insert_Hash",
     "parts (insert (Hash ?X) ?H) = insert (Hash ?X) (parts ?H)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("MessageGA.parts_insert_Key",
     "parts (insert (Key ?K) ?H) = insert (Key ?K) (parts ?H)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("MessageGA.parts_insert_Nonce",
     "parts (insert (Nonce ?N) ?H) = insert (Nonce ?N) (parts ?H)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("MessageGA.parts_insert_Number",
     "parts (insert (Number ?N) ?H) = insert (Number ?N) (parts ?H)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("MessageGA.keysFor_insert_Crypt",
     "keysFor (insert (Crypt ?K ?X) ?H) = insert (invKey ?K) (keysFor ?H)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 2)),
         template_app (template_hole 4, template_var 0)))),
    ("MessageGA.parts_insert",
     "parts (insert ?X ?H) = parts {?X} Un parts ?H",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 0))),
         template_app (template_hole 3, template_var 0)))),
    ("MessageGA.analz_synth_Un",
     "analz (synth ?G Un ?H) = analz (?G Un ?H) Un synth ?G",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_app (template_hole 0, template_var 1)))),
    ("MessageGA.analz_conj_parts",
     "(?X : analz ?H & ?X : parts ?H) = (?X : analz ?H)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)))),
    ("MessageGA.analz_disj_parts",
     "(?X : analz ?H | ?X : parts ?H) = (?X : parts ?H)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("MessageGA.keysFor_synth",
     "keysFor (synth ?H) = keysFor ?H Un invKey ` {K. Key K : ?H}",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, template_var 0)),
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 7, template_var 0)),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app (template_hole 2, t_empty))))),
    ("MessageGA.keysFor_UN",
     "keysFor (\<Union> (?H ` ?A)) = (UN i:?A. keysFor (?H i))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("MessageGA.parts_insert_Crypt",
     "parts (insert (Crypt ?K ?X) ?H) =
      insert (Crypt ?K ?X) (parts (insert ?X ?H))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("MessageGA.parts_UN",
     "parts (\<Union> (?H ` ?A)) = (UN x:?A. parts (?H x))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("MessageGA.pushes",
     "insert (Key ?K) (insert (Agent ?C) ?A) =
      insert (Agent ?C) (insert (Key ?K) ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 0, template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 0)))),
    ("MessageGA.pushes",
     "insert (Key ?K) (insert (Hash ?X) ?A) =
      insert (Hash ?X) (insert (Key ?K) ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 0, template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 0)))),
    ("MessageGA.pushes",
     "insert (Key ?K) (insert (Nonce ?N) ?A) =
      insert (Nonce ?N) (insert (Key ?K) ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 0, template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 0)))),
    ("MessageGA.pushes",
     "insert (Key ?K) (insert (Number ?N) ?A) =
      insert (Number ?N) (insert (Key ?K) ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 0, template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 0)))),
    ("MessageGA.synth_simps",
     "(Hash ?X : synth ?H) = (Hash ?X : ?H | ?X : synth ?H)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 1, template_var 0))))),
    ("MessageGA.HPair_eq",
     "(Hash[?X'] ?Y' = Hash[?X] ?Y) = (?X' = ?X & ?Y' = ?Y)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_dunno)),
    ("MessageGA.analz_UN_analz",
     "analz (UN i:?A. analz (?H i)) = analz (\<Union> (?H ` ?A))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 0))))),
    ("MessageGA.analz_insert_MPair",
     "analz (insert \<lbrace>?X, ?Y\<rbrace> ?H) =
      insert \<lbrace>?X, ?Y\<rbrace> (analz (insert ?X (insert ?Y ?H)))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)))))),
    ("MessageGA.parts_insert_MPair",
     "parts (insert \<lbrace>?X, ?Y\<rbrace> ?H) =
      insert \<lbrace>?X, ?Y\<rbrace> (parts (insert ?X (insert ?Y ?H)))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)))))),
    ("MessageGA.pushes",
     "insert (Key ?K) (insert (Crypt ?X ?K') ?A) =
      insert (Crypt ?X ?K') (insert (Key ?K) ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 3)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 3)),
           template_var 0)))),
    ("MessageGA.pushes",
     "insert (Key ?K) (insert \<lbrace>?X, ?Y\<rbrace> ?A) =
      insert \<lbrace>?X, ?Y\<rbrace> (insert (Key ?K) ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 3)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 3)),
           template_var 0)))),
    ("MessageGA.pushes",
     "insert (Crypt ?X ?K) (insert (Agent ?C) ?A) =
      insert (Agent ?C) (insert (Crypt ?X ?K) ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 0, template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 0)))),
    ("MessageGA.pushes",
     "insert (Crypt ?X ?K) (insert (Hash ?X') ?A) =
      insert (Hash ?X') (insert (Crypt ?X ?K) ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 0, template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 0)))),
    ("MessageGA.pushes",
     "insert (Crypt ?X ?K) (insert (Nonce ?N) ?A) =
      insert (Nonce ?N) (insert (Crypt ?X ?K) ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 0, template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 0)))),
    ("MessageGA.pushes",
     "insert (Crypt ?X ?K) (insert (Number ?N) ?A) =
      insert (Number ?N) (insert (Crypt ?X ?K) ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 0, template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 0)))),
    ("MessageGA.HPair_eq_MPair",
     "(Hash[?X] ?Y = \<lbrace>?X', ?Y'\<rbrace>) =
      (?X' = Hash \<lbrace>?X, ?Y\<rbrace> & ?Y' = ?Y)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_dunno)),
    ("MessageGA.MPair_eq_HPair",
     "(\<lbrace>?X', ?Y'\<rbrace> = Hash[?X] ?Y) =
      (?X' = Hash \<lbrace>?X, ?Y\<rbrace> & ?Y' = ?Y)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_dunno)),
    ("MessageGA.parts_insert2",
     "parts (insert ?X (insert ?Y ?H)) =
      parts {?X} Un parts {?Y} Un parts ?H",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_hole 0))),
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 0)))),
         template_app (template_hole 3, template_var 0)))),
    ("MessageGA.pushes",
     "insert (Crypt ?X ?K) (insert \<lbrace>?X', ?Y\<rbrace> ?A) =
      insert \<lbrace>?X', ?Y\<rbrace> (insert (Crypt ?X ?K) ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 4),
             template_var 3)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3)),
           template_var 0)))),
    ("MessageGA.MPair_synth_analz",
     "(\<lbrace>?X, ?Y\<rbrace> : synth (analz ?H)) =
      (?X : synth (analz ?H) & ?Y : synth (analz ?H))",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)))),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)))))),
    ("MessageGA.analz_insert_HPair",
     "analz (insert Hash[?X] ?Y ?H) =
      insert Hash[?X] ?Y
       (insert (Hash \<lbrace>?X, ?Y\<rbrace>) (analz (insert ?Y ?H)))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1))),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)))))),
    ("MessageGA.parts_insert_HPair",
     "parts (insert Hash[?X] ?Y ?H) =
      insert Hash[?X] ?Y
       (insert (Hash \<lbrace>?X, ?Y\<rbrace>) (parts (insert ?Y ?H)))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1))),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)))))),
    ("MessageGA.synth_simps",
     "(Crypt ?K ?X : synth ?H) =
      (Crypt ?K ?X : ?H | ?X : synth ?H & Key ?K : ?H)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_app (template_hole 3, template_var 0))),
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 0, template_var 2)),
             template_var 0))))),
    ("MessageGA.synth_simps",
     "(\<lbrace>?X, ?Y\<rbrace> : synth ?H) =
      (\<lbrace>?X, ?Y\<rbrace> : ?H | ?X : synth ?H & ?Y : synth ?H)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_app (template_hole 2, template_var 0))),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app (template_hole 2, template_var 0)))))),
    ("MessageGA.analz_Crypt_if",
     "analz (insert (Crypt ?K ?X) ?H) =
      (if Key (invKey ?K) : analz ?H
       then insert (Crypt ?K ?X) (analz (insert ?X ?H))
       else insert (Crypt ?K ?X) (analz ?H))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2))),
               template_app (template_hole 6, template_var 0))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1)),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 0)))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_app (template_hole 6, template_var 0)))))]
