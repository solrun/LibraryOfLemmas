Loading theory "Draft.Parametric_Polynomials" (required by "Draft.Register_Machine_SumsMoreTemplates" via "Draft.Register_Machine_Sums" via "Draft.Diophantine_Relations" via "Draft.Assignments")
Loading theory "Digit_Expansions.Bits_Digits" (required by "Draft.Register_Machine_SumsMoreTemplates" via "Draft.Register_Machine_Sums" via "Draft.RegisterMachineSimulation" via "Digit_Expansions.Binary_Operations")
Loading theory "Draft.RegisterMachineSpecification" (required by "Draft.Register_Machine_SumsMoreTemplates" via "Draft.Register_Machine_Sums" via "Draft.RegisterMachineSimulation" via "Draft.RegisterMachineProperties")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Register_Machine_SumsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.119s elapsed time, 0.497s cpu time, 0.046s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Register_Machine_SumsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
### theory "Digit_Expansions.Bits_Digits"
### 0.152s elapsed time, 0.621s cpu time, 0.046s GC time
Loading theory "Digit_Expansions.Carries" (required by "Draft.Register_Machine_SumsMoreTemplates" via "Draft.Register_Machine_Sums" via "Draft.RegisterMachineSimulation" via "Digit_Expansions.Binary_Operations")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Digit_Expansions.Carries"
### 0.119s elapsed time, 0.462s cpu time, 0.105s GC time
Loading theory "Digit_Expansions.Binary_Operations" (required by "Draft.Register_Machine_SumsMoreTemplates" via "Draft.Register_Machine_Sums" via "Draft.RegisterMachineSimulation")
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.321s elapsed time, 1.254s cpu time, 0.185s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Register_Machine_SumsMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "Digit_Expansions.Binary_Operations"
### 0.338s elapsed time, 1.335s cpu time, 0.162s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Register_Machine_SumsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "{}"
### theory "HOL-Library.Set_Algebras"
### 0.215s elapsed time, 0.852s cpu time, 0.063s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Register_Machine_SumsMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
consts
  shift :: "'a list => 'a stream => 'a stream"
Found termination order: "{}"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "{}"
Found termination order: "{}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
Found termination order: "{}"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "{}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
### theory "Draft.RegisterMachineSpecification"
### 1.303s elapsed time, 5.008s cpu time, 0.960s GC time
Loading theory "Draft.RegisterMachineProperties" (required by "Draft.Register_Machine_SumsMoreTemplates" via "Draft.Register_Machine_Sums" via "Draft.RegisterMachineSimulation")
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "(%p. size (fst (snd (snd (snd p))))) <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "(%p. size (fst (snd (snd (snd p))))) <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.103s elapsed time, 4.202s cpu time, 0.810s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Register_Machine_SumsMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "(%p. size (fst (snd (snd (snd p))))) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
### theory "Draft.RegisterMachineProperties"
### 0.609s elapsed time, 2.412s cpu time, 0.239s GC time
Loading theory "Draft.RegisterMachineSimulation" (required by "Draft.Register_Machine_SumsMoreTemplates" via "Draft.Register_Machine_Sums")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.876s elapsed time, 3.434s cpu time, 0.411s GC time
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Parametric_Polynomials"
### 2.573s elapsed time, 9.878s cpu time, 1.452s GC time
Loading theory "Draft.Assignments" (required by "Draft.Register_Machine_SumsMoreTemplates" via "Draft.Register_Machine_Sums" via "Draft.Diophantine_Relations")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.RegisterMachineSimulation"
### 0.744s elapsed time, 2.727s cpu time, 0.303s GC time
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.995s elapsed time, 7.038s cpu time, 0.723s GC time
Loading theory "Draft.Templates" (required by "Draft.Register_Machine_SumsMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.055s elapsed time, 0.120s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Register_Machine_SumsMoreTemplates")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "Draft.Assignments"
### 0.641s elapsed time, 1.466s cpu time, 0.182s GC time
Loading theory "Draft.Diophantine_Relations" (required by "Draft.Register_Machine_SumsMoreTemplates" via "Draft.Register_Machine_Sums")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.558s elapsed time, 1.191s cpu time, 0.159s GC time
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### Ambiguous input (line 53 of "$AFP/DPRM_Theorem/Diophantine/Diophantine_Relations.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^fixed>ALLC_LIST" ("\<^const>List.list.Nil") ("_position" DF))
###     ("_position" TRUE)))
### ("\<^const>HOL.Trueprop"
###   ("\<^fixed>ALLC_LIST" ("\<^const>List.list.Nil")
###     ("\<^const>HOL.eq" ("_position" DF) ("_position" TRUE))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 54 of "$AFP/DPRM_Theorem/Diophantine/Diophantine_Relations.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^fixed>ALLC_LIST"
###       ("\<^const>List.list.Cons" ("_position" l) ("_position" ls))
###       ("_position" DF))
###     ("\<^const>Diophantine_Relations.relation.AND"
###       ("_applC" ("_position" DF) ("_position" l))
###       ("\<^fixed>ALLC_LIST" ("_position" ls) ("_position" DF)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^fixed>ALLC_LIST"
###     ("\<^const>List.list.Cons" ("_position" l) ("_position" ls))
###     ("\<^const>HOL.eq" ("_position" DF)
###       ("\<^const>Diophantine_Relations.relation.AND"
###         ("_applC" ("_position" DF) ("_position" l))
###         ("\<^fixed>ALLC_LIST" ("_position" ls) ("_position" DF))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
Found termination order: "size_list length <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
### theory "Draft.Diophantine_Relations"
### 1.058s elapsed time, 1.564s cpu time, 0.176s GC time
Loading theory "Draft.Register_Machine_Sums" (required by "Draft.Register_Machine_SumsMoreTemplates")
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
### theory "Draft.Register_Machine_Sums"
### 0.236s elapsed time, 0.249s cpu time, 0.000s GC time
Loading theory "Draft.Register_Machine_SumsMoreTemplates"
val templateLemmas =
   [("Register_Machine_Sums.sum_polynomial_eval",
     "peval (sum_polynomial ?f ?idxs) ?a =
      (SUM k = 0..<length ?idxs. peval (?f (?idxs ! k)) ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 1))))),
    ("Register_Machine_Sums.sum_radd_polynomial_eval",
     "0 < length ?p ==>
      peval [\<Sum>R+] ?p ?l ?f ?a = \<Sum>R+ ?p ?l (%x. peval (?f x) ?a)",
     template_implication
      ([template_inequation
         (less_than, template_hole 5,
          template_app (template_hole 4, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           t_empty)))),
    ("Register_Machine_Sums.sum_rsub_polynomial_eval",
     "0 < length ?p ==>
      peval [\<Sum>R-] ?p ?l ?f ?a = \<Sum>R- ?p ?l (%x. peval (?f x) ?a) ",
     template_implication
      ([template_inequation
         (less_than, template_hole 5,
          template_app (template_hole 4, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           t_empty)))),
    ("Register_Machine_Sums.sum_sadd_polynomial_eval",
     "0 < length ?p ==>
      peval [\<Sum>S+] ?p ?d ?f ?a = \<Sum>S+ ?p ?d (%x. peval (?f x) ?a) ",
     template_implication
      ([template_inequation
         (less_than, template_hole 5,
          template_app (template_hole 4, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           t_empty)))),
    ("Register_Machine_Sums.sum_ssub_nzero_polynomial_eval",
     "0 < length ?p ==>
      peval [\<Sum>S-] ?p ?d ?f ?a = \<Sum>S- ?p ?d (%x. peval (?f x) ?a) ",
     template_implication
      ([template_inequation
         (less_than, template_hole 5,
          template_app (template_hole 4, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           t_empty)))),
    ("Register_Machine_Sums.sum_ssub_zero_polynomial_eval",
     "0 < length ?p ==>
      peval [\<Sum>S0] ?p ?d ?f ?a = \<Sum>S0 ?p ?d (%x. peval (?f x) ?a) ",
     template_implication
      ([template_inequation
         (less_than, template_hole 5,
          template_app (template_hole 4, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           t_empty))))]:
   (string * thm * template) list
### theory "Draft.Register_Machine_SumsMoreTemplates"
### 0.377s elapsed time, 0.505s cpu time, 0.039s GC time
val it = (): unit
