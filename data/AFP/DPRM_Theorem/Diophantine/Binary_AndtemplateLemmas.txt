   [("Binary_And.lm0244", "?a && ?b \<preceq> ?a",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 1)
         )),
    ("Binary_And.lm0245", "?a && ?b \<preceq> ?b",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 0)
         )),
    ("Binary_And.binary_and_dioph", "is_dioph_rel [?A = ?B && ?C]",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0))
         )),
    ("Binary_And.bitAND_lt_left", "?m && ?n <= ?m",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_var 1)),
    ("Binary_And.bitAND_lt_right", "?m && ?n <= ?n",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_var 0)),
    ("Binary_And.aux0_lm0247",
     "?a \<exclamdown> ?k * ?b \<exclamdown> ?k <= 1",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1)),
       template_hole 0)),
    ("Binary_And.lm0246", "?a - (?a && ?b) \<bottom> ?b - (?a && ?b)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("Binary_And.auxm3_lm0246",
     "bin_carry ?a ?b ?k = bin_carry ?a ?b ?k mod 2",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("Binary_And.auxm1_lm0246",
     "?a \<preceq> ?a + ?b ==>
      ALL n. ?a \<exclamdown> n + ?b \<exclamdown> n <= 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Binary_And.aux1_lm0246",
     "?a \<preceq> ?b -->
      (ALL n.
          (?b - ?a) \<exclamdown> n =
          ?b \<exclamdown> n - ?a \<exclamdown> n)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)),
           template_app (template_hole 3, t_empty))
         )),
    ("Binary_And.aux0_lm0246",
     "?a \<preceq> ?a + ?b -->
      (?a + ?b) \<exclamdown> ?n =
      ?a \<exclamdown> ?n + ?b \<exclamdown> ?n",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 1)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))))
         )),
    ("Binary_And.lm0247_masking_equiv",
     "(?c = ?a && ?b) =
      (?c \<preceq> ?a & ?c \<preceq> ?b & ?a - ?c \<bottom> ?b - ?c)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)))))),
    ("Binary_And.auxm2_lm0246",
     "ALL r<?n. ?a \<exclamdown> r + ?b \<exclamdown> r <= 1 ==>
      (?a + ?b) \<exclamdown> ?n =
      (?a \<exclamdown> ?n + ?b \<exclamdown> ?n) mod 2",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 7, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_var 2)),
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_var 2))),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0))))))]
