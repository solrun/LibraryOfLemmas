Loading theory "Draft.RegisterMachineSpecification" (required by "Draft.MultipleStepRegisterMoreTemplates" via "Draft.MultipleStepRegister" via "Draft.SingleStepRegister" via "Draft.RegisterMachineSimulation" via "Draft.RegisterMachineProperties")
Loading theory "Digit_Expansions.Bits_Digits" (required by "Draft.MultipleStepRegisterMoreTemplates" via "Draft.MultipleStepRegister" via "Draft.SingleStepRegister" via "Draft.RegisterMachineSimulation" via "Digit_Expansions.Binary_Operations")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.MultipleStepRegisterMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.MultipleStepRegisterMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.125s elapsed time, 0.518s cpu time, 0.044s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.MultipleStepRegisterMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "Digit_Expansions.Bits_Digits"
### 0.166s elapsed time, 0.679s cpu time, 0.044s GC time
Loading theory "Digit_Expansions.Carries" (required by "Draft.MultipleStepRegisterMoreTemplates" via "Draft.MultipleStepRegister" via "Draft.SingleStepRegister" via "Draft.RegisterMachineSimulation" via "Digit_Expansions.Binary_Operations")
Found termination order: "size_list size <*mlex*> {}"
### theory "Digit_Expansions.Carries"
### 0.117s elapsed time, 0.456s cpu time, 0.105s GC time
Loading theory "Digit_Expansions.Binary_Operations" (required by "Draft.MultipleStepRegisterMoreTemplates" via "Draft.MultipleStepRegister" via "Draft.SingleStepRegister" via "Draft.RegisterMachineSimulation")
### theory "HOL-Library.Nat_Bijection"
### 0.326s elapsed time, 1.305s cpu time, 0.150s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.MultipleStepRegisterMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.276s elapsed time, 1.090s cpu time, 0.105s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.MultipleStepRegisterMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "{}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "Digit_Expansions.Binary_Operations"
### 0.342s elapsed time, 1.348s cpu time, 0.172s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.MultipleStepRegisterMoreTemplates" via "Draft.ExtrEqs")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "{}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "{}"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "{}"
consts
  left :: "'a tree => 'a tree"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  right :: "'a tree => 'a tree"
Found termination order: "{}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
### theory "Draft.RegisterMachineSpecification"
### 1.403s elapsed time, 5.353s cpu time, 1.010s GC time
Loading theory "Draft.RegisterMachineProperties" (required by "Draft.MultipleStepRegisterMoreTemplates" via "Draft.MultipleStepRegister" via "Draft.SingleStepRegister" via "Draft.RegisterMachineSimulation")
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.142s elapsed time, 4.289s cpu time, 0.948s GC time
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "(%p. size (fst (snd (snd (snd p))))) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst (snd (snd (snd p))))) <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.038s elapsed time, 3.721s cpu time, 0.856s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst (snd (snd (snd p))))) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.RegisterMachineProperties"
### 0.537s elapsed time, 1.488s cpu time, 0.225s GC time
Loading theory "Draft.RegisterMachineSimulation" (required by "Draft.MultipleStepRegisterMoreTemplates" via "Draft.MultipleStepRegister" via "Draft.SingleStepRegister")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
### theory "HOL-Library.Tree"
### 2.073s elapsed time, 6.329s cpu time, 1.175s GC time
Loading theory "Draft.Templates" (required by "Draft.MultipleStepRegisterMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.RegisterMachineSimulation"
### 0.554s elapsed time, 1.147s cpu time, 0.089s GC time
Loading theory "Draft.SingleStepRegister" (required by "Draft.MultipleStepRegisterMoreTemplates" via "Draft.MultipleStepRegister")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.054s elapsed time, 0.113s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.MultipleStepRegisterMoreTemplates")
### theory "Draft.SingleStepRegister"
### 0.064s elapsed time, 0.153s cpu time, 0.052s GC time
Loading theory "Draft.MultipleStepRegister" (required by "Draft.MultipleStepRegisterMoreTemplates")
### theory "Draft.MultipleStepRegister"
### 0.058s elapsed time, 0.120s cpu time, 0.000s GC time
find_theorems
  "hd ?l = ?l ! 0"
found 1 theorem(s):
List.hd_conv_nth: ?xs ~= [] ==> hd ?xs = ?xs ! 0
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.527s elapsed time, 0.818s cpu time, 0.110s GC time
Loading theory "Draft.MultipleStepRegisterMoreTemplates"
val templateLemmas =
   [("MultipleStepRegister.lm04_23_multiple_register1",
     "[| is_valid_initial ?ic ?p ?a; cells_bounded ?ic ?p ?c; ?l = 0;
         0 < ?q; 1 < ?c; terminates ?ic ?p ?q |]
      ==> RLe ?ic ?p (B ?c) ?q ?l =
          ?a + B ?c * RLe ?ic ?p (B ?c) ?q ?l +
          B ?c * \<Sum>R+ ?p ?l SKe ?ic ?p (B ?c) ?q -
          B ?c *
          \<Sum>R- ?p ?l (%k. ZLe ?ic ?p (B ?c) ?q ?l &&
                              SKe ?ic ?p (B ?c) ?q k) ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 16, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 5),
                template_var 4),
              template_var 2)
            ),
        template_equation (template_var 1, template_hole 13),
        template_inequation (less_than, template_hole 13, template_var 0),
        template_inequation (less_than, template_hole 11, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 5),
                template_var 4),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 9, template_var 5),
                 template_var 4),
               template_app (template_hole 8, template_var 2)),
             template_var 0),
           template_var 1),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 6, template_var 3),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app (template_hole 8, template_var 2)),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 9, template_var 5),
                             template_var 4),
                           template_app (template_hole 8, template_var 2)),
                         template_var 0),
                       template_var 1)))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 8, template_var 2)),
                 template_app
                  (template_app
                    (template_app (template_hole 4, template_var 4),
                     template_var 1),
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_var 5),
                         template_var 4),
                       template_app (template_hole 8, template_var 2)),
                     template_var 0))))),
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 8, template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 1),
               t_empty)))))),
    ("MultipleStepRegister.lm04_22_multiple_register",
     "[| is_valid_initial ?ic ?p ?a; cells_bounded ?ic ?p ?c;
         ?l < length (snd ?ic); 0 < ?l; 0 < ?q; terminates ?ic ?p ?q;
         1 < ?c |]
      ==> RLe ?ic ?p (B ?c) ?q ?l =
          B ?c * RLe ?ic ?p (B ?c) ?q ?l +
          B ?c * \<Sum>R+ ?p ?l SKe ?ic ?p (B ?c) ?q -
          B ?c *
          \<Sum>R- ?p ?l (%k. ZLe ?ic ?p (B ?c) ?q ?l &&
                              SKe ?ic ?p (B ?c) ?q k) ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 18, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 17, template_var 5),
                template_var 4),
              template_var 2)
            ),
        template_inequation
         (less_than, template_var 1,
          template_app
           (template_hole 15,
            template_app (template_hole 14, template_var 5))),
        template_inequation (less_than, template_hole 13, template_var 1),
        template_inequation (less_than, template_hole 13, template_var 0),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 5),
                template_var 4),
              template_var 0)
            ),
        template_inequation (less_than, template_hole 11, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 9, template_var 5),
                 template_var 4),
               template_app (template_hole 8, template_var 2)),
             template_var 0),
           template_var 1),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 8, template_var 2)),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 9, template_var 5),
                           template_var 4),
                         template_app (template_hole 8, template_var 2)),
                       template_var 0),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 8, template_var 2)),
                 template_app
                  (template_app
                    (template_app (template_hole 4, template_var 4),
                     template_var 1),
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_var 5),
                         template_var 4),
                       template_app (template_hole 8, template_var 2)),
                     template_var 0))))),
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 8, template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 1),
               t_empty))))))]:
   (string * thm * template) list
### theory "Draft.MultipleStepRegisterMoreTemplates"
### 0.313s elapsed time, 0.397s cpu time, 0.000s GC time
val it = (): unit
