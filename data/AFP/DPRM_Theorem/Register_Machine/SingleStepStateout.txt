Loading theory "Digit_Expansions.Bits_Digits" (required by "Draft.SingleStepStateMoreTemplates" via "Draft.SingleStepState" via "Draft.RegisterMachineSimulation" via "Digit_Expansions.Binary_Operations")
Loading theory "Draft.RegisterMachineSpecification" (required by "Draft.SingleStepStateMoreTemplates" via "Draft.SingleStepState" via "Draft.RegisterMachineSimulation" via "Draft.RegisterMachineProperties")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.SingleStepStateMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.SingleStepStateMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.123s elapsed time, 0.517s cpu time, 0.045s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.SingleStepStateMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "Digit_Expansions.Bits_Digits"
### 0.169s elapsed time, 0.694s cpu time, 0.045s GC time
Loading theory "Digit_Expansions.Carries" (required by "Draft.SingleStepStateMoreTemplates" via "Draft.SingleStepState" via "Draft.RegisterMachineSimulation" via "Digit_Expansions.Binary_Operations")
Found termination order: "size_list size <*mlex*> {}"
### theory "Digit_Expansions.Carries"
### 0.115s elapsed time, 0.441s cpu time, 0.102s GC time
Loading theory "Digit_Expansions.Binary_Operations" (required by "Draft.SingleStepStateMoreTemplates" via "Draft.SingleStepState" via "Draft.RegisterMachineSimulation")
### theory "HOL-Library.Nat_Bijection"
### 0.340s elapsed time, 1.367s cpu time, 0.146s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.SingleStepStateMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.218s elapsed time, 0.850s cpu time, 0.102s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.SingleStepStateMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "Digit_Expansions.Binary_Operations"
### 0.339s elapsed time, 1.331s cpu time, 0.159s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.SingleStepStateMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "{}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "{}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "{}"
consts
  left :: "'a tree => 'a tree"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  right :: "'a tree => 'a tree"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.RegisterMachineSpecification"
### 1.250s elapsed time, 4.781s cpu time, 0.939s GC time
Loading theory "Draft.RegisterMachineProperties" (required by "Draft.SingleStepStateMoreTemplates" via "Draft.SingleStepState" via "Draft.RegisterMachineSimulation")
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "(%p. size (fst (snd (snd (snd p))))) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.118s elapsed time, 4.232s cpu time, 0.854s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst (snd (snd (snd p))))) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst (snd (snd (snd p))))) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.026s elapsed time, 3.719s cpu time, 0.767s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
### theory "Draft.RegisterMachineProperties"
### 0.580s elapsed time, 1.848s cpu time, 0.186s GC time
Loading theory "Draft.RegisterMachineSimulation" (required by "Draft.SingleStepStateMoreTemplates" via "Draft.SingleStepState")
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
### theory "Draft.RegisterMachineSimulation"
### 0.556s elapsed time, 1.150s cpu time, 0.083s GC time
Loading theory "Draft.SingleStepState" (required by "Draft.SingleStepStateMoreTemplates")
### theory "HOL-Library.Tree"
### 2.045s elapsed time, 6.407s cpu time, 1.062s GC time
Loading theory "Draft.Templates" (required by "Draft.SingleStepStateMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.SingleStepState"
### 0.047s elapsed time, 0.115s cpu time, 0.045s GC time
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.072s elapsed time, 0.156s cpu time, 0.045s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.SingleStepStateMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.471s elapsed time, 0.509s cpu time, 0.045s GC time
Loading theory "Draft.SingleStepStateMoreTemplates"
val templateLemmas =
   [("SingleStepState.lm04_07_one_step_relation_state",
     "[| is_valid_initial ?c ?p ?a; ?d < length ?p |]
      ==> S ?c ?p ?d (Suc ?t) =
          \<Sum>S+ ?p ?d (%k. S ?c ?p k ?t)  +
          \<Sum>S- ?p ?d (%k. Z ?c ?p (modifies (?p ! k)) ?t *
                              S ?c ?p k ?t)  +
          \<Sum>S0 ?p ?d (%k. (1 - Z ?c ?p (modifies (?p ! k)) ?t) *
                              S ?c ?p k ?t)  +
          (if ishalt (?p ! fst (steps ?c ?p ?t)) & ?d = fst (steps ?c ?p ?t)
           then Suc 0 else 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 21, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 19, template_var 3))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 17, template_var 4),
                    template_var 3),
                  template_var 1),
                template_app (template_hole 16, template_var 0))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app
                    (template_hole 15,
                     template_app
                      (template_app
                        (template_hole 15,
                         template_app
                          (template_app
                            (template_app
                              (template_hole 14, template_var 3),
                             template_var 1),
                           t_empty)),
                       template_app
                        (template_app
                          (template_app (template_hole 13, template_var 3),
                           template_var 1),
                         t_empty))),
                   template_app
                    (template_app
                      (template_app (template_hole 8, template_var 3),
                       template_var 1),
                     t_empty))),
               template_app
                (template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_hole 3,
                           template_app
                            (template_app (template_hole 9, template_var 3),
                             template_app
                              (template_hole 2,
                               template_app
                                (template_app
                                  (template_app
                                    (template_hole 1, template_var 4),
                                   template_var 3),
                                 template_var 0))))),
                       template_app
                        (template_app (template_hole 18, template_var 1),
                         template_app
                          (template_hole 2,
                           template_app
                            (template_app
                              (template_app
                                (template_hole 1, template_var 4),
                               template_var 3),
                             template_var 0))))),
                   template_app (template_hole 16, template_hole 0)),
                 template_hole 0))
             ))))]:
   (string * thm * template) list
### theory "Draft.SingleStepStateMoreTemplates"
### 0.302s elapsed time, 0.395s cpu time, 0.000s GC time
val it = (): unit
