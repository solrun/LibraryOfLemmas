   [("KrsticGoel.wfLexLessState",
     "finite ?decisionVars ==> wf (lexLessState ?F0.0 ?decisionVars)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("KrsticGoel.wfTerminationLess",
     "finite ?decisionVars ==> wf (terminationLess ?F0.0 ?decisionVars)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("KrsticGoel.invariantsHoldInInitialState",
     "isInitialState ?state ?F0.0 ==>
      invariantsHoldInState ?state ?F0.0 ?decisionVars",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("KrsticGoel.conflictFlagIsDecreasedByConflict",
     "appliedConflict ?stateA ?stateB ==> getM ?stateA = getM ?stateB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("KrsticGoel.conflictClauseIsDecreasedByExplain",
     "appliedExplain ?stateA ?stateB ==>
      getConflictFlag ?stateA = getConflictFlag ?stateB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("KrsticGoel.conflictClauseIsDecreasedByExplain",
     "appliedExplain ?stateA ?stateB ==> getM ?stateA = getM ?stateB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("KrsticGoel.formulaIsDecreasedByLearn",
     "appliedLearn ?stateA ?stateB ==>
      getConflictFlag ?stateA = getConflictFlag ?stateB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("KrsticGoel.formulaIsDecreasedByLearn",
     "appliedLearn ?stateA ?stateB ==> getC ?stateA = getC ?stateB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("KrsticGoel.formulaIsDecreasedByLearn",
     "appliedLearn ?stateA ?stateB ==> getM ?stateA = getM ?stateB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("KrsticGoel.conflictFlagIsDecreasedByConflict",
     "appliedConflict ?stateA ?stateB ==>
      (getConflictFlag ?stateB, getConflictFlag ?stateA) : boolLess",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)),
                 template_app (template_hole 1, template_var 1))),
             template_hole 0)
           ))),
    ("KrsticGoel.applicableLearnCharacterization",
     "applicableLearn ?stateA =
      (getConflictFlag ?stateA = True & ~ getC ?stateA el getF ?stateA)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 5, template_var 0)),
                 template_hole 4)),
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)),
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("KrsticGoel.conflictClauseIsDecreasedByExplain",
     "appliedExplain ?stateA ?stateB ==>
      (getC ?stateB, getC ?stateA) : multLess (getM ?stateA)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_app (template_hole 2, template_var 1))),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))
           ))),
    ("KrsticGoel.formulaIsDecreasedByLearn",
     "appliedLearn ?stateA ?stateB ==>
      (getF ?stateB, getF ?stateA) : learnLess (getC ?stateA)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_app (template_hole 2, template_var 1))),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))
           ))),
    ("KrsticGoel.minimalStatesAreFinal",
     "[| invariantsHoldInState ?state ?F0.0 ?decisionVars;
         isMinimalState ?state ?F0.0 ?decisionVars |]
      ==> isFinalState ?state ?F0.0 ?decisionVars",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("KrsticGoel.transitionsPreserveInvariants",
     "[| transition ?stateA ?stateB ?F0.0 ?decisionVars;
         invariantsHoldInState ?stateA ?F0.0 ?decisionVars |]
      ==> invariantsHoldInState ?stateB ?F0.0 ?decisionVars",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("KrsticGoel.invariantsHoldInValidRunsFromInitialState",
     "[| isInitialState ?state0.0 ?F0.0;
         (?state0.0, ?state) : transitionRelation ?F0.0 ?decisionVars |]
      ==> invariantsHoldInState ?state ?F0.0 ?decisionVars",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 1)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0)
           ))),
    ("KrsticGoel.applicableBackjumpCharacterization",
     "applicableBackjump ?stateA =
      (EX l level.
          getConflictFlag ?stateA = True &
          isBackjumpLevel level l (getC ?stateA) (getM ?stateA))",
     template_equation
      (template_app (template_hole 8, template_var 0),
       template_app (template_hole 7, t_empty))),
    ("KrsticGoel.invariantsHoldInValidRuns",
     "[| invariantsHoldInState ?stateA ?F0.0 ?decisionVars;
         (?stateA, ?stateB) : transitionRelation ?F0.0 ?decisionVars |]
      ==> invariantsHoldInState ?stateB ?F0.0 ?decisionVars",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 0)),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("KrsticGoel.applicableConflictCharacterization",
     "applicableConflict ?stateA =
      (EX clause.
          getConflictFlag ?stateA = False &
          formulaEntailsClause (getF ?stateA) clause &
          clauseFalse clause (elements (getM ?stateA)))",
     template_equation
      (template_app (template_hole 9, template_var 0),
       template_app (template_hole 8, t_empty))),
    ("KrsticGoel.stateIsDecreasedByValidTransitions",
     "[| invariantsHoldInState ?stateA ?F0.0 ?decisionVars;
         transition ?stateA ?stateB ?F0.0 ?decisionVars |]
      ==> (?stateB, ?stateA) : terminationLess ?F0.0 ?decisionVars",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 0),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("KrsticGoel.finalNonConflictState",
     "[| getConflictFlag ?state = False;
         ~ applicableDecide ?state ?decisionVars;
         ~ applicableConflict ?state |]
      ==> ?decisionVars <= vars (elements (getM ?state))",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 1), template_hole 7),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0)
                )
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 1))
            )],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)))))),
    ("KrsticGoel.finalNonConflictState",
     "[| getConflictFlag ?state = False;
         ~ applicableDecide ?state ?decisionVars;
         ~ applicableConflict ?state |]
      ==> ~ formulaFalse (getF ?state) (elements (getM ?state))",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 1), template_hole 7),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0)
                )
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 1))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)))
               )
           ))),
    ("KrsticGoel.applicableDecideCharacterization",
     "applicableDecide ?stateA ?decisionVars =
      (EX l. var l : ?decisionVars &
             ~ l el elements (getM ?stateA) &
             ~ opposite l el elements (getM ?stateA))",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1), template_var 0),
       template_app (template_hole 8, t_empty))),
    ("KrsticGoel.noInfiniteTransitionChains",
     "finite ?decisionVars ==>
      \<nexists>Q.
         EX state0:Q.
            isInitialState state0 ?F0.0 &
            (ALL state:Q.
                EX state':Q. transition state state' ?F0.0 ?decisionVars)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_negation
        (template_predicate (template_app (template_hole 5, t_empty))))),
    ("KrsticGoel.wfTransitionRelation",
     "[| finite ?decisionVars; isInitialState ?state0.0 ?F0.0 |]
      ==> wf {(stateB, stateA).
              (?state0.0, stateA) : transitionRelation ?F0.0 ?decisionVars &
              transition stateA stateB ?F0.0 ?decisionVars}",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 7,
             template_app
              (template_hole 6, template_app (template_hole 5, t_empty)))
           ))),
    ("KrsticGoel.applicableUnitPropagateCharacterization",
     "applicableUnitPropagate ?stateA ?F0.0 ?decisionVars =
      (EX uc ul.
          formulaEntailsClause (getF ?stateA) uc &
          var ul : ?decisionVars Un vars ?F0.0 &
          isUnitClause uc ul (elements (getM ?stateA)))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 12, template_var 2), template_var 1),
         template_var 0),
       template_app (template_hole 11, t_empty))),
    ("KrsticGoel.applicableExplainCharacterization",
     "applicableExplain ?stateA =
      (EX l reason.
          getConflictFlag ?stateA = True &
          l el getC ?stateA &
          formulaEntailsClause (getF ?stateA) reason &
          isReason reason (opposite l) (elements (getM ?stateA)))",
     template_equation
      (template_app (template_hole 13, template_var 0),
       template_app (template_hole 12, t_empty))),
    ("KrsticGoel.soundnessForUNSAT",
     "[| isInitialState ?state0.0 ?F0.0;
         (?state0.0, ?state) : transitionRelation ?F0.0 ?decisionVars;
         getConflictFlag ?state = True; getC ?state = [] |]
      ==> ~ satisfiable ?F0.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 3),
                  template_var 1)),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_var 0))
            ),
        template_equation
         (template_app (template_hole 6, template_var 1), template_hole 5),
        template_equation
         (template_app (template_hole 3, template_var 1), template_hole 2)],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 2))
           ))),
    ("KrsticGoel.finalStateNonApplicable",
     "isFinalState ?state ?F0.0 ?decisionVars =
      (~ applicableDecide ?state ?decisionVars &
       ~ applicableUnitPropagate ?state ?F0.0 ?decisionVars &
       ~ applicableBackjump ?state &
       ~ applicableLearn ?state &
       ~ applicableConflict ?state & ~ applicableExplain ?state)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 8, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 0))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app (template_hole 3, template_var 2))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 2, template_var 2))),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 1, template_var 2))),
                 template_app
                  (template_hole 6,
                   template_app (template_hole 0, template_var 2))))))))),
    ("KrsticGoel.partialCorrectness",
     "[| vars ?F0.0 <= ?decisionVars; isInitialState ?state0.0 ?F0.0;
         (?state0.0, ?state) : transitionRelation ?F0.0 ?decisionVars;
         isFinalState ?state ?F0.0 ?decisionVars |]
      ==> satisfiable ?F0.0 = (~ getConflictFlag ?state)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 9, template_var 3),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 0)),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 0),
                template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("KrsticGoel.trailIsDecreasedByDeciedUnitPropagateAndBackjump",
     "[| invariantsHoldInState ?stateA ?F0.0 ?decisionVars;
         appliedDecide ?stateA ?stateB ?decisionVars |
         appliedUnitPropagate ?stateA ?stateB ?F0.0 ?decisionVars |
         appliedBackjump ?stateA ?stateB |]
      ==> (getM ?stateB, getM ?stateA)
          : lexLessRestricted (vars ?F0.0 Un ?decisionVars)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_app (template_hole 8, template_var 3),
                    template_var 0),
                  template_var 1)),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 7, template_var 3),
                        template_var 0),
                      template_var 2),
                    template_var 1)),
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0)),
                 template_app (template_hole 3, template_var 3))),
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 template_var 1)))
           ))),
    ("KrsticGoel.finalConflictingState",
     "[| InvariantUniq (getM ?state);
         InvariantReasonClauses (getF ?state) (getM ?state);
         InvariantCFalse (getConflictFlag ?state) (getM ?state)
          (getC ?state);
         ~ applicableExplain ?state; ~ applicableBackjump ?state;
         getConflictFlag ?state |]
      ==> getC ?state = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 11,
              template_app (template_hole 10, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 0)),
              template_app (template_hole 10, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 0)),
                template_app (template_hole 10, template_var 0)),
              template_app (template_hole 5, template_var 0))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 0))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 0))
            ),
        template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app (template_hole 5, template_var 0), template_hole 0))),
    ("KrsticGoel.completenessForUNSAT",
     "[| vars ?F0.0 <= ?decisionVars; ~ satisfiable ?F0.0;
         isInitialState ?state0.0 ?F0.0;
         (?state0.0, ?state) : transitionRelation ?F0.0 ?decisionVars;
         isFinalState ?state ?F0.0 ?decisionVars |]
      ==> getConflictFlag ?state = True & getC ?state = []",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 14, template_var 3),
          template_var 2),
        template_negation
         (
            template_predicate
             (template_app (template_hole 12, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_var 0)),
              template_app
               (template_app (template_hole 8, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 0),
                template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 0)),
                 template_hole 3)),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_hole 0))
           ))),
    ("KrsticGoel.completenessForSAT",
     "[| satisfiable ?F0.0; isInitialState ?state0.0 ?F0.0;
         (?state0.0, ?state) : transitionRelation ?F0.0 ?decisionVars;
         isFinalState ?state ?F0.0 ?decisionVars |]
      ==> getConflictFlag ?state = False &
          ~ formulaFalse (getF ?state) (elements (getM ?state)) &
          ?decisionVars <= vars (elements (getM ?state))",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 12, template_var 3),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_var 1)),
                 template_hole 7)),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app (template_hole 4, template_var 1)),
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 1))))),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app
                  (template_hole 0,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 1))))))
           ))),
    ("KrsticGoel.soundnessForSAT",
     "[| vars ?F0.0 <= ?decisionVars; isInitialState ?state0.0 ?F0.0;
         (?state0.0, ?state) : transitionRelation ?F0.0 ?decisionVars;
         getConflictFlag ?state = False;
         ~ formulaFalse (getF ?state) (elements (getM ?state));
         ?decisionVars <= vars (elements (getM ?state)) |]
      ==> model (elements (getM ?state)) ?F0.0",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 14, template_var 3),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 1),
                  template_var 0)),
              template_app
               (template_app (template_hole 10, template_var 3),
                template_var 2))
            ),
        template_equation
         (template_app (template_hole 8, template_var 0), template_hole 7),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 0)),
                  template_app
                   (template_hole 3,
                    template_app (template_hole 2, template_var 0)))
                )
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 1,
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0))))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0))),
             template_var 3)
           ))),
    ("KrsticGoel.finalStateCharacterization",
     "[| isInitialState ?state0.0 ?F0.0;
         (?state0.0, ?state) : transitionRelation ?F0.0 ?decisionVars;
         isFinalState ?state ?F0.0 ?decisionVars |]
      ==> getConflictFlag ?state = False &
          ~ formulaFalse (getF ?state) (elements (getM ?state)) &
          ?decisionVars <= vars (elements (getM ?state)) |
          getConflictFlag ?state = True & getC ?state = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app
                 (template_app (template_hole 18, template_var 3),
                  template_var 1)),
              template_app
               (template_app (template_hole 17, template_var 2),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 16, template_var 1),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app
                  (template_hole 14,
                   template_app
                    (template_app
                      (template_hole 13,
                       template_app (template_hole 12, template_var 1)),
                     template_hole 11)),
                 template_app
                  (template_app
                    (template_hole 14,
                     template_app
                      (template_hole 10,
                       template_app
                        (template_app
                          (template_hole 9,
                           template_app (template_hole 8, template_var 1)),
                         template_app
                          (template_hole 7,
                           template_app
                            (template_hole 6, template_var 1))))),
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 6, template_var 1))))))),
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app
                    (template_hole 13,
                     template_app (template_hole 12, template_var 1)),
                   template_hole 3)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 template_hole 0)))
           ))),
    ("KrsticGoel.finalStateCharacterizationLemma",
     "[| InvariantUniq (getM ?state);
         InvariantReasonClauses (getF ?state) (getM ?state);
         InvariantCFalse (getConflictFlag ?state) (getM ?state)
          (getC ?state);
         ~ applicableDecide ?state ?decisionVars;
         ~ applicableConflict ?state; ~ applicableExplain ?state;
         ~ applicableBackjump ?state |]
      ==> getConflictFlag ?state = False &
          ~ formulaFalse (getF ?state) (elements (getM ?state)) &
          ?decisionVars <= vars (elements (getM ?state)) |
          getConflictFlag ?state = True & getC ?state = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 22,
              template_app (template_hole 21, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app (template_hole 19, template_var 1)),
              template_app (template_hole 21, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 18,
                  template_app (template_hole 17, template_var 1)),
                template_app (template_hole 21, template_var 1)),
              template_app (template_hole 16, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 14, template_var 1),
                  template_var 0)
                )
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 13, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 12, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 11, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app (template_hole 17, template_var 1)),
                     template_hole 7)),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_hole 15,
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app (template_hole 19, template_var 1)),
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 21, template_var 1))))),
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 21, template_var 1))))))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 17, template_var 1)),
                   template_hole 2)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 16, template_var 1)),
                 template_hole 0)))
           )))]
