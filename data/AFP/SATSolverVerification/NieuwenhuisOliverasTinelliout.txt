Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.NieuwenhuisOliverasTinelliMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Cancellation" (required by "Draft.NieuwenhuisOliverasTinelliMoreTemplates" via "Draft.NieuwenhuisOliverasTinelli" via "Draft.SatSolverVerification" via "Draft.CNF" via "Draft.MoreList" via "HOL-Library.Multiset")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.NieuwenhuisOliverasTinelliMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.NieuwenhuisOliverasTinelliMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.135s elapsed time, 0.562s cpu time, 0.054s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.NieuwenhuisOliverasTinelliMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.226s elapsed time, 0.920s cpu time, 0.054s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.NieuwenhuisOliverasTinelliMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.335s elapsed time, 1.350s cpu time, 0.129s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.NieuwenhuisOliverasTinelliMoreTemplates" via "Draft.ExtrEqs")
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.456s elapsed time, 1.833s cpu time, 0.129s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.NieuwenhuisOliverasTinelliMoreTemplates" via "Draft.NieuwenhuisOliverasTinelli" via "Draft.SatSolverVerification" via "Draft.CNF" via "Draft.MoreList")
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
Found termination order: "size <*mlex*> {}"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.BigO"
### 1.006s elapsed time, 3.793s cpu time, 0.846s GC time
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.085s elapsed time, 3.941s cpu time, 0.814s GC time
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
Found termination order: "size <*mlex*> {}"
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
consts
  mset :: "'a list => 'a multiset"
Found termination order: "size <*mlex*> {}"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
### theory "HOL-Library.Tree"
### 2.020s elapsed time, 6.325s cpu time, 1.137s GC time
Loading theory "Draft.Templates" (required by "Draft.NieuwenhuisOliverasTinelliMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.053s elapsed time, 0.106s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.NieuwenhuisOliverasTinelliMoreTemplates")
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.539s elapsed time, 1.124s cpu time, 0.107s GC time
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
### theory "HOL-Library.Multiset"
### 3.063s elapsed time, 7.058s cpu time, 1.295s GC time
Loading theory "Draft.MoreList" (required by "Draft.NieuwenhuisOliverasTinelliMoreTemplates" via "Draft.NieuwenhuisOliverasTinelli" via "Draft.SatSolverVerification" via "Draft.CNF")
consts
  uniq :: "'a list => bool"
consts
  firstPos :: "'a => 'a list => nat"
consts
  list_diff :: "'a list => 'a list => 'a list"
### theory "Draft.MoreList"
### 0.423s elapsed time, 1.059s cpu time, 0.811s GC time
Loading theory "Draft.CNF" (required by "Draft.NieuwenhuisOliverasTinelliMoreTemplates" via "Draft.NieuwenhuisOliverasTinelli" via "Draft.SatSolverVerification")
Loading theory "Draft.Trail" (required by "Draft.NieuwenhuisOliverasTinelliMoreTemplates" via "Draft.NieuwenhuisOliverasTinelli" via "Draft.SatSolverVerification")
consts
  elements :: "('a * bool) list => 'a list"
consts
  markedElements :: "('a * bool) list => 'a list"
consts
  prefixBeforeElement :: "'a => ('a * bool) list => ('a * bool) list"
consts
  prefixToElement :: "'a => ('a * bool) list => ('a * bool) list"
consts
  prefixToLevel_aux :: "('a * bool) list => nat => nat => ('a * bool) list"
overloading
  literalElClause \<equiv> member :: Literal => Literal list => bool
overloading
  clauseElFormula \<equiv> member ::
    Literal list => Literal list list => bool
consts
  levelsCounter_aux :: "('a * bool) list => nat list => nat list"
overloading
  el_literal \<equiv> member :: Literal => Literal list list => bool
consts
  el_literal :: "Literal => Literal list list => bool"
consts
  var :: "Literal => nat"
consts
  varsClause :: "Literal list => nat set"
consts
  varsFormula :: "Literal list list => nat set"
overloading
  vars_clause \<equiv> vars :: Literal list => nat set
overloading
  vars_formula \<equiv> vars :: Literal list list => nat set
overloading
  vars_set \<equiv> vars :: Literal set => nat set
consts
  prefixBeforeLastMarked :: "('a * bool) list => ('a * bool) list"
### theory "Draft.Trail"
### 0.368s elapsed time, 0.811s cpu time, 0.168s GC time
consts
  opposite :: "Literal => Literal"
consts
  clauseTautology :: "Literal list => bool"
consts
  clauseTrue :: "Literal list => Literal list => bool"
consts
  clauseFalse :: "Literal list => Literal list => bool"
consts
  formulaTrue :: "Literal list list => Literal list => bool"
consts
  formulaFalse :: "Literal list list => Literal list => bool"
consts
  val2form :: "Literal list => Literal list list"
consts
  inconsistent :: "Literal list => bool"
overloading
  modelFormula \<equiv> model :: Literal list => Literal list list => bool
overloading
  modelClause \<equiv> model :: Literal list => Literal list => bool
### theory "Draft.CNF"
### 0.763s elapsed time, 1.277s cpu time, 0.281s GC time
Loading theory "Draft.SatSolverVerification" (required by "Draft.NieuwenhuisOliverasTinelliMoreTemplates" via "Draft.NieuwenhuisOliverasTinelli")
### theory "Draft.SatSolverVerification"
### 0.507s elapsed time, 0.700s cpu time, 0.262s GC time
Loading theory "Draft.NieuwenhuisOliverasTinelli" (required by "Draft.NieuwenhuisOliverasTinelliMoreTemplates")
### theory "Draft.NieuwenhuisOliverasTinelli"
### 0.735s elapsed time, 1.601s cpu time, 1.197s GC time
Loading theory "Draft.NieuwenhuisOliverasTinelliMoreTemplates"
val templateLemmas =
   [("NieuwenhuisOliverasTinelli.wfLearnLessState",
     "wf ?learnL ==> wf (learnLessState ?learnL)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("NieuwenhuisOliverasTinelli.wfLexLessState",
     "finite ?decisionVars ==> wf (lexLessState ?F0.0 ?decisionVars)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("NieuwenhuisOliverasTinelli.invariantsHoldInInitialState",
     "isInitialState ?state ?F0.0 ==>
      invariantsHoldInState ?state ?F0.0 ?decisionVars",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("NieuwenhuisOliverasTinelli.finalNonConflictState",
     "~ applicableDecide ?state ?decisionVars ==>
      ?decisionVars <= vars (elements (getM ?state))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)
                )
            )],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)))))),
    ("NieuwenhuisOliverasTinelli.wfTerminationLess",
     "[| finite ?decisionVars; wf ?learnL |]
      ==> wf (terminationLess ?F0.0 ?decisionVars ?learnL)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("NieuwenhuisOliverasTinelli.transitionsPreserveInvariants",
     "[| transition ?stateA ?stateB ?decisionVars;
         invariantsHoldInState ?stateA ?F0.0 ?decisionVars |]
      ==> invariantsHoldInState ?stateB ?F0.0 ?decisionVars",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("NieuwenhuisOliverasTinelli.invariantsHoldInValidRunsFromInitialState",
     "[| isInitialState ?state0.0 ?F0.0;
         (?state0.0, ?state) : transitionRelation ?decisionVars |]
      ==> invariantsHoldInState ?state ?F0.0 ?decisionVars",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 1)),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0)
           ))),
    ("NieuwenhuisOliverasTinelli.applicableUnitPropagateCharacterization",
     "applicableUnitPropagate ?stateA =
      (EX uc ul.
          uc el getF ?stateA &
          isUnitClause uc ul (elements (getM ?stateA)))",
     template_equation
      (template_app (template_hole 8, template_var 0),
       template_app (template_hole 7, t_empty))),
    ("NieuwenhuisOliverasTinelli.invariantsHoldInValidRuns",
     "[| invariantsHoldInState ?stateA ?F0.0 ?decisionVars;
         (?stateA, ?stateB) : transitionRelation ?decisionVars |]
      ==> invariantsHoldInState ?stateB ?F0.0 ?decisionVars",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 0)),
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("NieuwenhuisOliverasTinelli.finalStateNonApplicable",
     "isFinalState ?state ?decisionVars =
      (~ applicableDecide ?state ?decisionVars &
       ~ applicableUnitPropagate ?state &
       ~ applicableBackjump ?state & ~ applicableLearn ?state)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 2, template_var 1))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 1, template_var 1))),
             template_app
              (template_hole 4,
               template_app (template_hole 0, template_var 1))))))),
    ("NieuwenhuisOliverasTinelli.applicableLearnCharacterization",
     "applicableLearn ?stateA =
      (EX c. formulaEntailsClause (getF ?stateA) c &
             vars c
             <= vars (getF ?stateA) Un vars (elements (getM ?stateA)))",
     template_equation
      (template_app (template_hole 10, template_var 0),
       template_app (template_hole 9, t_empty))),
    ("NieuwenhuisOliverasTinelli.applicableDecideCharacterization",
     "applicableDecide ?stateA ?decisionVars =
      (EX l. var l : ?decisionVars &
             ~ l el elements (getM ?stateA) &
             ~ opposite l el elements (getM ?stateA))",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1), template_var 0),
       template_app (template_hole 8, t_empty))),
    ("NieuwenhuisOliverasTinelli.trailIsDecreasedByDeciedUnitPropagateAndBackjump",
     "[| invariantsHoldInState ?stateA ?F0.0 ?decisionVars;
         appliedDecide ?stateA ?stateB ?decisionVars |
         appliedUnitPropagate ?stateA ?stateB |
         appliedBackjump ?stateA ?stateB |]
      ==> (getM ?stateB, getM ?stateA)
          : lexLessRestricted (vars ?F0.0 Un ?decisionVars)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_app (template_hole 8, template_var 3),
                    template_var 0),
                  template_var 1)),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 7, template_var 3),
                    template_var 0)),
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0)),
                 template_app (template_hole 3, template_var 3))),
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 template_var 1)))
           ))),
    ("NieuwenhuisOliverasTinelli.soundnessForUNSAT",
     "[| isInitialState ?state0.0 ?F0.0;
         (?state0.0, ?state) : transitionRelation ?decisionVars;
         formulaFalse (getF ?state) (elements (getM ?state));
         decisions (getM ?state) = [] |]
      ==> ~ satisfiable ?F0.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_var 1)),
              template_app (template_hole 9, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)),
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)))
            ),
        template_equation
         (template_app
           (template_hole 3,
            template_app (template_hole 5, template_var 1)),
          template_hole 2)],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 2))
           ))),
    ("NieuwenhuisOliverasTinelli.stateIsDecreasedByValidTransitions",
     "[| invariantsHoldInState ?stateA ?F0.0 ?decisionVars;
         transition ?stateA ?stateB ?decisionVars;
         appliedLearn ?stateA ?stateB -->
         (getF ?stateB, getF ?stateA) : ?learnL |]
      ==> (?stateB, ?stateA) : terminationLess ?F0.0 ?decisionVars ?learnL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 1)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app (template_hole 3, template_var 1)),
                    template_app (template_hole 3, template_var 4))),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 4)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 0))
           ))),
    ("NieuwenhuisOliverasTinelli.minimalStatesAreFinal",
     "[| ALL stateA stateB.
            appliedLearn stateA stateB -->
            (getF stateB, getF stateA) : ?learnL;
         invariantsHoldInState ?state ?F0.0 ?decisionVars;
         isMinimalState ?state ?F0.0 ?decisionVars ?learnL |]
      ==> isFinalState ?state ?decisionVars",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1),
                template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("NieuwenhuisOliverasTinelli.partialCorrectness",
     "[| vars ?F0.0 <= ?decisionVars; isInitialState ?state0.0 ?F0.0;
         (?state0.0, ?state) : transitionRelation ?decisionVars;
         isFinalState ?state ?decisionVars |]
      ==> satisfiable ?F0.0 =
          (~ formulaFalse (getF ?state) (elements (getM ?state)))",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 12, template_var 3),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_var 0)),
              template_app (template_hole 8, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app (template_hole 5, template_var 3),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))))))),
    ("NieuwenhuisOliverasTinelli.finalConflictingState",
     "[| InvariantUniq (getM ?state); InvariantConsistent (getM ?state);
         InvariantImpliedLiterals (getF ?state) (getM ?state);
         ~ applicableBackjump ?state;
         formulaFalse (getF ?state) (elements (getM ?state)) |]
      ==> decisions (getM ?state) = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 11,
              template_app (template_hole 10, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 9,
              template_app (template_hole 10, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 0)),
              template_app (template_hole 10, template_var 0))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 7, template_var 0)),
              template_app
               (template_hole 3,
                template_app (template_hole 10, template_var 0)))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app (template_hole 10, template_var 0)),
         template_hole 0))),
    ("NieuwenhuisOliverasTinelli.completenessForSAT",
     "[| satisfiable ?F0.0; isInitialState ?state0.0 ?F0.0;
         (?state0.0, ?state) : transitionRelation ?decisionVars;
         isFinalState ?state ?decisionVars |]
      ==> ~ formulaFalse (getF ?state) (elements (getM ?state)) &
          ?decisionVars <= vars (elements (getM ?state))",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_var 1)),
              template_app (template_hole 9, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_var 1)),
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 1))))),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_hole 0,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)))))
           ))),
    ("NieuwenhuisOliverasTinelli.completenessForUNSAT",
     "[| vars ?F0.0 <= ?decisionVars; ~ satisfiable ?F0.0;
         isInitialState ?state0.0 ?F0.0;
         (?state0.0, ?state) : transitionRelation ?decisionVars;
         isFinalState ?state ?decisionVars |]
      ==> formulaFalse (getF ?state) (elements (getM ?state)) &
          decisions (getM ?state) = []",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 15, template_var 3),
          template_var 2),
        template_negation
         (
            template_predicate
             (template_app (template_hole 13, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_var 0)),
              template_app (template_hole 9, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0)),
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0)))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 3, template_var 0))),
               template_hole 0))
           ))),
    ("NieuwenhuisOliverasTinelli.soundnessForSAT",
     "[| vars ?F0.0 <= ?decisionVars; isInitialState ?state0.0 ?F0.0;
         (?state0.0, ?state) : transitionRelation ?decisionVars;
         ~ formulaFalse (getF ?state) (elements (getM ?state));
         ?decisionVars <= vars (elements (getM ?state)) |]
      ==> model (elements (getM ?state)) ?F0.0",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 11, template_var 3),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_var 0)),
              template_app (template_hole 7, template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 0)),
                  template_app
                   (template_hole 3,
                    template_app (template_hole 2, template_var 0)))
                )
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 1,
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0))))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0))),
             template_var 3)
           ))),
    ("NieuwenhuisOliverasTinelli.applicableBackjumpCharacterization",
     "applicableBackjump ?stateA =
      (EX bc bl level.
          isUnitClause bc bl
           (elements (prefixToLevel level (getM ?stateA))) &
          formulaEntailsClause (getF ?stateA) bc &
          var bl : vars (getF ?stateA) Un vars (elements (getM ?stateA)) &
          0 <= level & level < currentLevel (getM ?stateA))",
     template_equation
      (template_app (template_hole 19, template_var 0),
       template_app (template_hole 18, t_empty))),
    ("NieuwenhuisOliverasTinelli.finalStateCharacterization",
     "[| isInitialState ?state0.0 ?F0.0;
         (?state0.0, ?state) : transitionRelation ?decisionVars;
         isFinalState ?state ?decisionVars |]
      ==> ~ formulaFalse (getF ?state) (elements (getM ?state)) &
          ?decisionVars <= vars (elements (getM ?state)) |
          formulaFalse (getF ?state) (elements (getM ?state)) &
          decisions (getM ?state) = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 3),
                  template_var 1)),
              template_app (template_hole 13, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_hole 9,
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app (template_hole 7, template_var 1)),
                       template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_var 1))))),
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_app
                    (template_hole 3,
                     template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_var 1)))))),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_var 1)),
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_var 1)))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 5, template_var 1))),
                 template_hole 0)))
           ))),
    ("NieuwenhuisOliverasTinelli.noInfiniteTransitionChains",
     "[| finite ?decisionVars;
         EX learnL.
            wf learnL &
            (ALL stateA stateB.
                appliedLearn stateA stateB -->
                (getF stateB, getF stateA) : learnL) |]
      ==> \<nexists>Q.
             EX state0:Q.
                isInitialState state0 ?F0.0 &
                (ALL state:Q.
                    EX state':Q. transition state state' ?decisionVars)",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 1)),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_negation
        (template_predicate (template_app (template_hole 4, t_empty))))),
    ("NieuwenhuisOliverasTinelli.wfTransitionRelation",
     "[| finite ?decisionVars; isInitialState ?state0.0 ?F0.0;
         EX learnL.
            wf learnL &
            (ALL stateA stateB.
                appliedLearn stateA stateB -->
                (getF stateB, getF stateA) : learnL) |]
      ==> wf {(stateB, stateA).
              (?state0.0, stateA) : transitionRelation ?decisionVars &
              transition stateA stateB ?decisionVars}",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 6,
             template_app
              (template_hole 5, template_app (template_hole 4, t_empty)))
           ))),
    ("NieuwenhuisOliverasTinelli.finalStateCharacterizationLemma",
     "[| InvariantUniq (getM ?state); InvariantConsistent (getM ?state);
         InvariantImpliedLiterals (getF ?state) (getM ?state);
         ~ applicableDecide ?state ?decisionVars;
         ~ applicableBackjump ?state |]
      ==> ~ formulaFalse (getF ?state) (elements (getM ?state)) &
          ?decisionVars <= vars (elements (getM ?state)) |
          formulaFalse (getF ?state) (elements (getM ?state)) &
          decisions (getM ?state) = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 16,
              template_app (template_hole 15, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 14,
              template_app (template_hole 15, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 1)),
              template_app (template_hole 15, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_var 0)
                )
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 9, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 11,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app (template_hole 12, template_var 1)),
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 15, template_var 1))))),
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_app
                    (template_hole 3,
                     template_app
                      (template_hole 5,
                       template_app (template_hole 15, template_var 1)))))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 12, template_var 1)),
                   template_app
                    (template_hole 5,
                     template_app (template_hole 15, template_var 1)))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 15, template_var 1))),
                 template_hole 0)))
           )))]:
   (string * thm * template) list
### theory "Draft.NieuwenhuisOliverasTinelliMoreTemplates"
### 0.451s elapsed time, 0.682s cpu time, 0.091s GC time
val it = (): unit
