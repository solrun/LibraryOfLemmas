   [("Trail.isPrefixPrefixBeforeLastMarked",
     "isPrefix (prefixBeforeLastMarked ?M) ?M",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 0)
         )),
    ("Trail.isPrefixPrefixBeforeElement",
     "isPrefix (prefixBeforeElement ?e ?t) ?t",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 0)
         )),
    ("Trail.isPrefixPrefixToElement", "isPrefix (prefixToElement ?e ?t) ?t",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 0)
         )),
    ("Trail.isPrefixPrefixToLevel", "isPrefix (prefixToLevel ?l ?t) ?t",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 0)
         )),
    ("Trail.markedElementsToArePrefixOfMarkedElements",
     "isPrefix (markedElementsTo ?e ?M) (markedElements ?M)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Trail.elementLevelLeqCurrentLevel",
     "elementLevel ?a ?M <= currentLevel ?M",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Trail.currentLevelPrefixToLevel",
     "currentLevel (prefixToLevel ?level ?M) <= ?level",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Trail.elementsButlastTrailIsButlastElementsTrail",
     "elements (butlast ?M) = butlast (elements ?M)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Trail.elementsEmptyIffTrailEmpty",
     "(elements ?list = []) = (?list = [])",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Trail.isPrefixPrefixToLevel_aux",
     "EX s. prefixToLevel_aux ?t ?l ?i @ s = ?t",
     template_predicate (template_app (template_hole 3, t_empty))),
    ("Trail.elementsAppend",
     "elements (?a @ ?b) = elements ?a @ elements ?b",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Trail.markedElementsAppend",
     "markedElements (?M1.0 @ ?M2.0) =
      markedElements ?M1.0 @ markedElements ?M2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Trail.isPrefixElements",
     "isPrefix ?a ?b ==> isPrefix (elements ?a) (elements ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Trail.currentLevelPrefix",
     "isPrefix ?a ?b ==> currentLevel ?a <= currentLevel ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Trail.currentLevelNonMarked",
     "currentLevel ?M = currentLevel (?M @ [(?l, False)])",
     template_equation
      (template_app (template_hole 5, template_var 1),
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             template_hole 0))))),
    ("Trail.currentLevelZeroTrailEqualsItsPrefixToLevelZero",
     "currentLevel ?M = 0 ==> ?M = prefixToLevel 0 ?M",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 0), template_hole 2)],
       template_equation
        (template_var 0,
         template_app
          (template_app (template_hole 0, template_hole 2),
           template_var 0)))),
    ("Trail.markedElementsEmptyImpliesMarkedElementsToEmpty",
     "markedElements ?M = [] ==> markedElementsTo ?e ?M = []",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1), template_hole 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_hole 1))),
    ("Trail.markedElementIsMarkedTrue",
     "(?m : set (markedElements ?M)) = ((?m, True) : set ?M)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1),
         template_app
          (template_hole 5,
           template_app (template_hole 4, template_var 0))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Trail.prefixElementsAreTrailElements",
     "isPrefix ?p ?M ==> set (elements ?p) <= set (elements ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Trail.isPrefixPrefixToLevelLowerLevel",
     "?level < ?level' ==>
      isPrefix (prefixToLevel ?level ?M) (prefixToLevel ?level' ?M)",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Trail.currentLevelPrefixToLevelEq",
     "?level <= currentLevel ?M ==>
      currentLevel (prefixToLevel ?level ?M) = ?level",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1))),
    ("Trail.elementMemElements",
     "?x : set ?M ==> element ?x : set (elements ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Trail.markedElementsAreElements",
     "?m : set (markedElements ?M) ==> ?m : set (elements ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Trail.levelsCounter_auxSuffixContinues",
     "ALL l.
         levelsCounter_aux (?a @ ?b) l =
         levelsCounter_aux ?b (levelsCounter_aux ?a l)",
     template_predicate (template_app (template_hole 3, t_empty))),
    ("Trail.levelsCounter_auxNotEmpty",
     "ALL l. l ~= [] --> levelsCounter_aux ?a l ~= []",
     template_predicate (template_app (template_hole 5, t_empty))),
    ("Trail.eitherMarkedOrNotMarkedElement",
     "?a = (element ?a, True) | ?a = (element ?a, False)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_hole 1))),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0)),
               template_hole 0)))
         )),
    ("Trail.elementLastTrailIsLastElementsTrail",
     "?M ~= [] ==> element (last ?M) = last (elements ?M)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Trail.lastMarkedIsMarkedElement",
     "markedElements ?M ~= [] ==> lastMarked ?M : set (markedElements ?M)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app
              (template_hole 0,
               template_app (template_hole 4, template_var 0)))
           ))),
    ("Trail.markedElementsToAreMarkedElements",
     "?m : set (markedElementsTo ?e ?M) ==> ?m : set (markedElements ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Trail.uniqElementsTrailImpliesUniqElementsPrefix",
     "[| isPrefix ?p ?M; uniq (elements ?M) |] ==> uniq (elements ?p)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_hole 1,
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1))
           ))),
    ("Trail.isPrefixPrefixToLevel_auxLowerLevel",
     "?i <= ?j ==>
      isPrefix (prefixToLevel_aux ?M ?i ?k) (prefixToLevel_aux ?M ?j ?k)",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 3),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2),
               template_var 0))
           ))),
    ("Trail.currentLevelPrefixToLevel_aux",
     "?i <= ?l ==> currentLevel (prefixToLevel_aux ?M ?l ?i) <= ?l - ?i",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("Trail.prefixToLevelPrefixToLevelHigherLevel",
     "?level <= ?level' ==>
      prefixToLevel ?level ?M =
      prefixToLevel ?level (prefixToLevel ?level' ?M)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Trail.lastTrailElementNotMarkedImpliesMarkedElementsToLAreMarkedElementsToLInButlastTrail",
     "~ marked (last ?M) ==>
      markedElementsTo ?e ?M = markedElementsTo ?e (butlast ?M)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Trail.elementLevelPrecedesLeq",
     "precedes ?a ?b (elements ?M) ==>
      elementLevel ?a ?M <= elementLevel ?b ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Trail.prefixToElementContainsTrailElement",
     "?e : set (elements ?M) ==>
      ?e : set (elements (prefixToElement ?e ?M))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))))
           ))),
    ("Trail.markedElementsToNonMemberAreAllMarkedElements",
     "?e ~: set (elements ?M) ==>
      markedElementsTo ?e ?M = markedElements ?M",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 0)))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Trail.prefixToLevelElementsElementLevel",
     "?e : set (elements (prefixToLevel ?level ?M)) ==>
      elementLevel ?e ?M <= ?level",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_var 0))))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("Trail.literalNotInEarlierLevelsThanItsLevel",
     "?level < elementLevel ?e ?M ==>
      ?e ~: set (elements (prefixToLevel ?level ?M))",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 5, template_var 1),
            template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 0))))
               )
           ))),
    ("Trail.prefixBeforeElementDoesNotContainTrailElement",
     "?e : set (elements ?M) ==>
      ?e ~: set (elements (prefixBeforeElement ?e ?M))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0))))
               )
           ))),
    ("Trail.prefixBeforeLastMarkedIsPrefixBeforeLastLevel",
     "markedElements ?M ~= [] ==>
      prefixBeforeLastMarked ?M = prefixToLevel (currentLevel ?M - 1) ?M",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 7, template_var 0),
              template_hole 6)
            )],
       template_equation
        (template_app (template_hole 4, template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_hole 0)),
           template_var 0)))),
    ("Trail.elementLevelAppend",
     "?a : set (elements ?M) ==>
      elementLevel ?a ?M = elementLevel ?a (?M @ ?M')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Trail.markedAndMemberImpliesIsMarkedElement",
     "[| marked ?m; ?m : set ?M |]
      ==> element ?m : set (markedElements ?M)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Trail.prefixToLevel_auxPrefixToLevel_auxHigherLevel",
     "?i <= ?j ==>
      prefixToLevel_aux ?a ?i ?k =
      prefixToLevel_aux (prefixToLevel_aux ?a ?j ?k) ?i ?k",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2),
                 template_var 0)),
             template_var 3),
           template_var 0)))),
    ("Trail.markedElementsPrefixAreMarkedElementsTrail",
     "[| isPrefix ?p ?M; ?m : set (markedElements ?p) |]
      ==> ?m : set (markedElements ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Trail.elementLevelMarkedGeq1",
     "[| uniq (elements ?M); ?e : set (markedElements ?M) |]
      ==> 1 <= elementLevel ?e ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)))
            )],
       template_inequation
        (less_equals, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Trail.levelsCounter_aux_startIrellevant",
     "ALL y.
         y ~= [] -->
         levelsCounter_aux ?a (?x @ y) = ?x @ levelsCounter_aux ?a y",
     template_predicate (template_app (template_hole 6, t_empty))),
    ("Trail.prefixToLevel_auxIncreaseAuxilaryCounter",
     "?i <= ?k ==>
      prefixToLevel_aux ?M ?l ?i =
      prefixToLevel_aux ?M (?l + (?k - ?i)) ?k",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3))),
           template_var 2)))),
    ("Trail.markedElementsAreElementsBeforeLastDecisionAndLastDecision",
     "markedElements ?M ~= [] ==>
      markedElements ?M =
      markedElements (prefixBeforeLastMarked ?M) @ [lastMarked ?M]",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_equation
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 5,
               template_app (template_hole 2, template_var 0))),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_hole 4))))),
    ("Trail.elementLevelPrefixElement",
     "?e : set (elements (prefixToLevel ?level ?M)) ==>
      elementLevel ?e (prefixToLevel ?level ?M) = elementLevel ?e ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_var 0))))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Trail.markedElementsToPrefixElement",
     "[| isPrefix ?p ?M; ?e : set (elements ?p) |]
      ==> markedElementsTo ?e ?M = markedElementsTo ?e ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Trail.prefixToElementToPrefixElement",
     "[| isPrefix ?p ?M; ?e : set (elements ?p) |]
      ==> prefixToElement ?e ?M = prefixToElement ?e ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Trail.markedElementsToLastMarkedAreAllMarkedElements",
     "[| uniq (elements ?M); markedElements ?M ~= [] |]
      ==> markedElementsTo (lastMarked ?M) ?M = markedElements ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 0))
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 0),
         template_app (template_hole 3, template_var 0)))),
    ("Trail.prefixToElementAppend",
     "prefixToElement ?e (?M1.0 @ ?M2.0) =
      (if ?e : set (elements ?M1.0) then prefixToElement ?e ?M1.0
       else ?M1.0 @ prefixToElement ?e ?M2.0)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)))),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 0))))),
    ("Trail.removeLastMarkedFromMarkedElementsToLastMarkedAreAllMarkedElementsInPrefixLastMarked",
     "markedElements ?M ~= [] ==>
      removeAll (lastMarked ?M) (markedElementsTo (lastMarked ?M) ?M) =
      markedElements (prefixBeforeElement (lastMarked ?M) ?M)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 2, template_var 0)),
             template_var 0)),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 0)),
             template_var 0))))),
    ("Trail.eitherMarkedOrNotMarked",
     "?e : set (elements ?M) ==>
      (?e, True) : set ?M | (?e, False) : set ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_hole 2)),
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_hole 0)),
               template_app (template_hole 1, template_var 0)))
           ))),
    ("Trail.lastMarkedNotInPrefixBeforeLastMarked",
     "[| uniq (elements ?M); markedElements ?M ~= [] |]
      ==> lastMarked ?M ~: set (elements (prefixBeforeLastMarked ?M))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 0))
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 8,
                     template_app (template_hole 0, template_var 0))))
               )
           ))),
    ("Trail.lastMarkedIsMemberOfItsMarkedElementsTo",
     "[| uniq (elements ?M); markedElements ?M ~= [] |]
      ==> lastMarked ?M : set (markedElementsTo (lastMarked ?M) ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 0))
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 2, template_var 0)),
                 template_var 0)))
           ))),
    ("Trail.levelsCounter_auxIncreasesFirst",
     "ALL m n l1 l2. levelsCounter_aux ?a (m # l1) = n # l2 --> m <= n",
     template_predicate (template_app (template_hole 6, t_empty))),
    ("Trail.markedElementsToAppend",
     "markedElementsTo ?e (?M1.0 @ ?M2.0) =
      (if ?e : set (elements ?M1.0) then markedElementsTo ?e ?M1.0
       else markedElements ?M1.0 @ markedElementsTo ?e ?M2.0)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 2),
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1)))),
           template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app
            (template_app (template_hole 7, template_var 2),
             template_var 0))))),
    ("Trail.prefixToLevelAppend",
     "prefixToLevel ?level (?a @ ?b) =
      (if ?level < currentLevel ?a then prefixToLevel ?level ?a
       else ?a @ prefixToLevel_aux ?b ?level (currentLevel ?a))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app (template_hole 1, template_var 1))),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_app (template_hole 1, template_var 1)))))),
    ("Trail.elementLevelLtLevelImpliesMemberPrefixToLevel",
     "[| ?e : set (elements ?M); elementLevel ?e ?M <= ?level |]
      ==> ?e : set (elements (prefixToLevel ?level ?M))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))))
           ))),
    ("Trail.uniqImpliesExclusiveTrueOrFalse",
     "[| (?e, ?d) : set ?M; uniq (elements ?M) |] ==> (?e, ~ ?d) ~: set ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_app (template_hole 3, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_app (template_hole 0, template_var 1))),
                 template_app (template_hole 3, template_var 0))
               )
           ))),
    ("Trail.currentLevelPrefixToLevelEq_aux",
     "[| ?i <= ?l; ?l - ?i <= currentLevel ?M |]
      ==> currentLevel (prefixToLevel_aux ?M ?l ?i) = ?l - ?i",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 1), template_var 2),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 2)))),
    ("Trail.uniqImpliesPrefixBeforeLastMarkedIsPrefixBeforeLastMarked",
     "[| markedElements ?M ~= []; lastMarked ?M ~: set (elements ?M) |]
      ==> prefixBeforeLastMarked ?M =
          prefixBeforeElement (lastMarked ?M) ?M",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 8, template_var 0),
              template_hole 7)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 0)),
                  template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 0)))
                )
            )],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 5, template_var 0)),
           template_var 0)))),
    ("Trail.markedElementIsMemberOfItsMarkedElementsTo",
     "[| uniq (elements ?M); marked ?e; ?e : set ?M |]
      ==> element ?e : set (markedElementsTo (element ?e) ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 1))
            ),
        template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 2, template_var 0)),
                 template_var 1)))
           ))),
    ("Trail.isProperPrefixPrefixToLevel",
     "?level < currentLevel ?t ==>
      EX s. prefixToLevel ?level ?t @ s = ?t & s ~= [] & marked (hd s)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 9, template_var 0))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("Trail.prefixToLevelAppend_aux1",
     "[| ?i <= ?l; ?l - ?i < currentLevel ?a |]
      ==> prefixToLevel_aux (?a @ ?b) ?l ?i = prefixToLevel_aux ?a ?l ?i",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 4, template_var 2), template_var 3),
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 2),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2),
           template_var 3)))),
    ("Trail.lastTrailElementMarkedImpliesMarkedElementsToLastElementAreAllMarkedElements",
     "[| marked (last ?M);
         last (elements ?M) ~: set (butlast (elements ?M)) |]
      ==> markedElementsTo (last (elements ?M)) ?M = markedElements ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 0))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app (template_hole 5, template_var 0))),
                  template_app
                   (template_hole 4,
                    template_app
                     (template_hole 3,
                      template_app (template_hole 5, template_var 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 0))),
           template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Trail.elementOnCurrentLevel",
     "?a ~: set (elements ?M) ==>
      elementLevel ?a (?M @ [(?a, ?d)]) = currentLevel (?M @ [(?a, ?d)])",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_var 1)))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 2),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 0)),
               template_hole 1))),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 0)),
               template_hole 1)))))),
    ("Trail.levelsCounterPrefix",
     "isPrefix ?p ?a ==>
      EX rest.
         rest ~= [] &
         levelsCounter ?a = butlast (levelsCounter ?p) @ rest &
         last (levelsCounter ?p) <= hd rest",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Trail.prefixToLevelAppend_aux2",
     "[| ?i <= ?l; currentLevel ?a + ?i <= ?l |]
      ==> prefixToLevel_aux (?a @ ?b) ?l ?i =
          ?a @ prefixToLevel_aux ?b ?l (?i + currentLevel ?a)",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            template_var 3),
          template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 2),
           template_var 3),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2),
             template_app
              (template_app (template_hole 4, template_var 3),
               template_app (template_hole 3, template_var 1))))))),
    ("Trail.elementLevelLtLevelImpliesMemberPrefixToLevel_aux",
     "[| ?e : set (elements ?M); elementLevel ?e ?M + ?i <= ?level;
         ?i <= ?level |]
      ==> ?e : set (elements (prefixToLevel_aux ?M ?level ?i))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2)),
            template_var 1),
          template_var 0),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 3),
             template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0),
                   template_var 1))))
           ))),
    ("Trail.markedElementsTrailMemPrefixAreMarkedElementsPrefix",
     "[| uniq (elements ?M); isPrefix ?p ?M; ?m : set (elements ?p);
         ?m : set (markedElements ?M) |]
      ==> ?m : set (markedElements ?p)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_hole 1,
                template_app (template_hole 4, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Trail.levelsCounterPrefixToLevel",
     "[| ?p = prefixToLevel ?level ?a; 0 <= ?level;
         ?level < currentLevel ?a |]
      ==> EX rest. rest ~= [] & levelsCounter ?a = levelsCounter ?p @ rest",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 11, template_var 1),
            template_var 0)),
        template_inequation (less_equals, template_hole 9, template_var 1),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 7, template_var 0))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Trail.elementLevelPrecedesMarkedElementLt",
     "[| uniq (elements ?M); ?e ~= ?d; ?d : set (markedElements ?M);
         precedes ?e ?d (elements ?M) |]
      ==> elementLevel ?e ?M < elementLevel ?d ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 2))
            ),
        template_negation
         (template_equation (template_var 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0),
              template_app (template_hole 8, template_var 2))
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Trail.differentMarkedElementsHaveDifferentLevels",
     "[| uniq (elements ?M); ?a : set (markedElements ?M);
         ?b : set (markedElements ?M); ?a ~= ?b |]
      ==> elementLevel ?a ?M ~= elementLevel ?b ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)))
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           )))]
