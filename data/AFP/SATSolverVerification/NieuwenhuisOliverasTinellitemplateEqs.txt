   [("NieuwenhuisOliverasTinelli.applicableUnitPropagateCharacterization",
     "applicableUnitPropagate ?stateA =
      (EX uc ul.
          uc el getF ?stateA &
          isUnitClause uc ul (elements (getM ?stateA)))",
     template_equation
      (template_app (template_hole 8, template_var 0),
       template_app (template_hole 7, t_empty))),
    ("NieuwenhuisOliverasTinelli.finalStateNonApplicable",
     "isFinalState ?state ?decisionVars =
      (~ applicableDecide ?state ?decisionVars &
       ~ applicableUnitPropagate ?state &
       ~ applicableBackjump ?state & ~ applicableLearn ?state)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 2, template_var 1))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 1, template_var 1))),
             template_app
              (template_hole 4,
               template_app (template_hole 0, template_var 1))))))),
    ("NieuwenhuisOliverasTinelli.applicableLearnCharacterization",
     "applicableLearn ?stateA =
      (EX c. formulaEntailsClause (getF ?stateA) c &
             vars c
             <= vars (getF ?stateA) Un vars (elements (getM ?stateA)))",
     template_equation
      (template_app (template_hole 10, template_var 0),
       template_app (template_hole 9, t_empty))),
    ("NieuwenhuisOliverasTinelli.applicableDecideCharacterization",
     "applicableDecide ?stateA ?decisionVars =
      (EX l. var l : ?decisionVars &
             ~ l el elements (getM ?stateA) &
             ~ opposite l el elements (getM ?stateA))",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1), template_var 0),
       template_app (template_hole 8, t_empty))),
    ("NieuwenhuisOliverasTinelli.applicableBackjumpCharacterization",
     "applicableBackjump ?stateA =
      (EX bc bl level.
          isUnitClause bc bl
           (elements (prefixToLevel level (getM ?stateA))) &
          formulaEntailsClause (getF ?stateA) bc &
          var bl : vars (getF ?stateA) Un vars (elements (getM ?stateA)) &
          0 <= level & level < currentLevel (getM ?stateA))",
     template_equation
      (template_app (template_hole 19, template_var 0),
       template_app (template_hole 18, t_empty)))]
