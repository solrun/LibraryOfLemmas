   [("SatSolverVerification.finiteVarsFormula", "finite (vars ?F)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("SatSolverVerification.finiteVarsClause", "finite (vars ?c)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("SatSolverVerification.transLexLessRestricted",
     "trans (lexLessRestricted ?Vbl)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("SatSolverVerification.wfLearnLess", "wf (learnLess ?C)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("SatSolverVerification.wfMultLess", "wf (multLess ?M)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("SatSolverVerification.irreflexiveLexLess", "(?x, ?x) ~: lexLess",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 0)),
               template_hole 0)
             )
         )),
    ("SatSolverVerification.irreflexiveDecisionLess",
     "(?x, ?x) ~: decisionLess",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 0)),
               template_hole 0)
             )
         )),
    ("SatSolverVerification.wfLexLessRestricted",
     "finite ?Vbl ==> wf (lexLessRestricted ?Vbl)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("SatSolverVerification.finiteListDecompose",
     "finite {(a, b). ?l = a @ b}",
     template_predicate
      (
         template_app
          (template_hole 4,
           template_app
            (template_hole 3, template_app (template_hole 2, t_empty)))
         )),
    ("SatSolverVerification.lexLessAppend",
     "?b ~= [] ==> (?a @ ?b, ?a) : lexLess",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 1)),
                 template_var 0)),
             template_hole 0)
           ))),
    ("SatSolverVerification.InvariantImpliedLiteralsHoldsForPrefix",
     "[| InvariantImpliedLiterals ?F ?M; isPrefix ?prefix ?M |]
      ==> InvariantImpliedLiterals ?F ?prefix",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("SatSolverVerification.multLessListDiff",
     "(?a, ?b) : multLess ?M ==> (list_diff ?a ?x, ?b) : multLess ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 0)),
                 template_var 2)),
             template_app (template_hole 1, template_var 1))
           ))),
    ("SatSolverVerification.transIrreflexiveOrderingIsAcyclic",
     "[| trans ?r; ALL x. (x, x) ~: ?r |] ==> acyclic ?r",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("SatSolverVerification.InvariantImpliedLiteralsAfterLearn",
     "[| InvariantImpliedLiterals ?F ?M; ?F' = ?F @ [?C] |]
      ==> InvariantImpliedLiterals ?F' ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 2, template_var 3),
            template_app
             (template_app (template_hole 1, template_var 0),
              template_hole 0)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1), template_var 2)
           ))),
    ("SatSolverVerification.InvariantReasonClausesHoldsForPrefix",
     "[| InvariantReasonClauses ?F ?M; InvariantUniq ?M; isPrefix ?p ?M |]
      ==> InvariantReasonClauses ?F ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), template_var 0)
           ))),
    ("SatSolverVerification.InvariantImpliedLiteralsAndFormulaFalseThenFormulaAndDecisionsAreNotSatisfiable",
     "[| InvariantImpliedLiterals ?F ?M; formulaFalse ?F (elements ?M) |]
      ==> ~ satisfiable (?F @ val2form (decisions ?M))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 0))))
               )
           ))),
    ("SatSolverVerification.InvariantCEntailedAfterLearn",
     "[| InvariantCEntailed ?conflictFlag ?F ?C; ?F' = ?F @ [?C] |]
      ==> InvariantCEntailed ?conflictFlag ?F' ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 2, template_var 2),
            template_app
             (template_app (template_hole 1, template_var 1),
              template_hole 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_var 0),
             template_var 1)
           ))),
    ("SatSolverVerification.finiteUniqAndConsistentTrailsWithGivenVariableSet",
     "finite ?V ==>
      finite
       {M. vars (elements M) = ?V &
           uniq (elements M) & consistent (elements M)}",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 7, template_app (template_hole 6, t_empty))
           ))),
    ("SatSolverVerification.finiteUniqAndConsistentTrailsWithGivenVariableSuperset",
     "finite ?V ==>
      finite
       {M. vars (elements M) <= ?V &
           uniq (elements M) & consistent (elements M)}",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 7, template_app (template_hole 6, t_empty))
           ))),
    ("SatSolverVerification.finiteListDecomposeSet",
     "finite ?L ==> finite {(a, b). EX l. l : ?L & l = a @ b}",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 7,
             template_app
              (template_hole 6, template_app (template_hole 5, t_empty)))
           ))),
    ("SatSolverVerification.InvariantImpliedLiteralsAndElementsEntailLiteralThenDecisionsEntailLiteral",
     "[| InvariantImpliedLiterals ?F ?M;
         formulaEntailsLiteral (?F @ val2form (elements ?M)) ?literal |]
      ==> formulaEntailsLiteral (?F @ val2form (decisions ?M)) ?literal",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 1)))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_hole 2,
                   template_app (template_hole 0, template_var 1)))),
             template_var 0)
           ))),
    ("SatSolverVerification.InvariantCFalseAfterDecide",
     "[| InvariantCFalse ?conflictFlag ?M ?C;
         ?M' = ?M @ [(?literal, True)] |]
      ==> InvariantCFalse ?conflictFlag ?M' ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 4, template_var 3),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, template_var 4),
               template_var 1),
             template_var 2)
           ))),
    ("SatSolverVerification.InvariantCFalseAfterUnitPropagate",
     "[| InvariantCFalse ?conflictFlag ?M ?C;
         ?M' = ?M @ [(?uLiteral, False)] |]
      ==> InvariantCFalse ?conflictFlag ?M' ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 4, template_var 3),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, template_var 4),
               template_var 1),
             template_var 2)
           ))),
    ("SatSolverVerification.InvariantEquivalentAfterLearn",
     "[| InvariantEquivalent ?F0.0 ?F; formulaEntailsClause ?F ?C;
         ?F' = ?F @ [?C] |]
      ==> InvariantEquivalent ?F0.0 ?F'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 2, template_var 2),
            template_app
             (template_app (template_hole 1, template_var 1),
              template_hole 0)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 3), template_var 0)
           ))),
    ("SatSolverVerification.InvariantReasonClausesAfterLearn",
     "[| InvariantReasonClauses ?F ?M; formulaEntailsClause ?F ?C;
         ?F' = ?F @ [?C] |]
      ==> InvariantReasonClauses ?F' ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 1)
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 2, template_var 3),
            template_app
             (template_app (template_hole 1, template_var 1),
              template_hole 0)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 0), template_var 2)
           ))),
    ("SatSolverVerification.unsatReportExtensiveExplain",
     "[| InvariantEquivalent ?F0.0 ?F;
         InvariantCEntailed ?conflictFlag ?F ?C; ?conflictFlag; ?C = [] |]
      ==> ~ satisfiable ?F0.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 2),
              template_var 0)
            ),
        template_predicate (template_var 1),
        template_equation (template_var 0, template_hole 2)],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 3))
           ))),
    ("SatSolverVerification.multLessResolve",
     "[| opposite ?l el ?C; isReason ?reason ?l (elements ?M) |]
      ==> (resolve ?C ?reason (opposite ?l), ?C) : multLess ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_var 3),
              template_app (template_hole 4, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 1),
                     template_app (template_hole 6, template_var 3))),
                 template_var 2)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("SatSolverVerification.wellFoundedEmbed",
     "[| ALL x y. (x, y) : ?rel --> (x, y) : ?rel'; wf ?rel' |]
      ==> wf ?rel",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("SatSolverVerification.InvariantReasonClausesAfterDecide",
     "[| InvariantReasonClauses ?F ?M; InvariantUniq ?M;
         ?M' = ?M @ [(?literal, True)] |]
      ==> InvariantReasonClauses ?F ?M'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 6, template_var 2)),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 4, template_var 2),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 3), template_var 1)
           ))),
    ("SatSolverVerification.lexLessBacktrack",
     "[| ?p = prefixBeforeLastDecision ?a; decisions ?a ~= [] |]
      ==> (?p @ [(?x, False)], ?a) : lexLess",
     template_implication
      ([template_equation
         (template_var 2, template_app (template_hole 12, template_var 1)),
        template_negation
         (
            template_equation
             (template_app (template_hole 9, template_var 1),
              template_hole 8)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 3, template_var 0),
                           template_hole 2)),
                       template_hole 1))),
                 template_var 1)),
             template_hole 0)
           ))),
    ("SatSolverVerification.InvariantConsistentAfterUnitPropagate",
     "[| InvariantConsistent ?M;
         isUnitClause ?uClause ?uLiteral (elements ?M);
         ?M' = ?M @ [(?uLiteral, False)] |]
      ==> InvariantConsistent ?M'",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_app (template_hole 6, template_var 3))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 4, template_var 3),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (template_app (template_hole 8, template_var 0)))),
    ("SatSolverVerification.InvariantUniqAfterUnitPropagate",
     "[| InvariantUniq ?M; isUnitClause ?uClause ?uLiteral (elements ?M);
         ?M' = ?M @ [(?uLiteral, False)] |]
      ==> InvariantUniq ?M'",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_app (template_hole 6, template_var 3))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 4, template_var 3),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (template_app (template_hole 8, template_var 0)))),
    ("SatSolverVerification.InvariantCEntailedAfterExplain",
     "[| InvariantCEntailed ?conflictFlag ?F ?C;
         formulaEntailsClause ?F ?reason;
         ?C' = resolve ?C ?reason (opposite ?l) |]
      ==> InvariantCEntailed ?conflictFlag ?F ?C'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 2)
            ),
        template_equation
         (template_var 1,
          template_app
           (template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2),
            template_app (template_hole 0, template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 5),
               template_var 4),
             template_var 1)
           ))),
    ("SatSolverVerification.unsatReport",
     "[| InvariantImpliedLiterals ?F ?M; InvariantEquivalent ?F0.0 ?F;
         decisions ?M = []; formulaFalse ?F (elements ?M) |]
      ==> ~ satisfiable ?F0.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 5, template_var 1), template_hole 4),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            )],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("SatSolverVerification.InvariantConsistentAfterDecide",
     "[| InvariantConsistent ?M; var ?literal ~: vars (elements ?M);
         ?M' = ?M @ [(?literal, True)] |]
      ==> InvariantConsistent ?M'",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 1)),
                  template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 2)))
                )
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 4, template_var 2),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (template_app (template_hole 11, template_var 0)))),
    ("SatSolverVerification.InvariantUniqAfterDecide",
     "[| InvariantUniq ?M; var ?literal ~: vars (elements ?M);
         ?M' = ?M @ [(?literal, True)] |]
      ==> InvariantUniq ?M'",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 1)),
                  template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 2)))
                )
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 4, template_var 2),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (template_app (template_hole 11, template_var 0)))),
    ("SatSolverVerification.InvariantVarsMAfterDecide",
     "[| InvariantVarsM ?M ?F0.0 ?Vbl; var ?literal : ?Vbl;
         ?M' = ?M @ [(?literal, True)] |]
      ==> InvariantVarsM ?M' ?F0.0 ?Vbl",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)),
              template_var 2)
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 4, template_var 4),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 8, template_var 0),
               template_var 3),
             template_var 2)
           ))),
    ("SatSolverVerification.InvariantImpliedLiteralsAfterDecide",
     "[| InvariantImpliedLiterals ?F ?M; var ?literal ~: vars (elements ?M);
         ?M' = ?M @ [(?literal, True)] |]
      ==> InvariantImpliedLiterals ?F ?M'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 1)),
                  template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 2)))
                )
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 4, template_var 2),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 11, template_var 3),
             template_var 0)
           ))),
    ("SatSolverVerification.InvariantVarsFAfterLearn",
     "[| InvariantVarsF ?F ?F0.0 ?Vbl; vars ?C <= vars ?F0.0 Un ?Vbl;
         ?F' = ?F @ [?C] |]
      ==> InvariantVarsF ?F' ?F0.0 ?Vbl",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 1),
          template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 3)),
            template_var 2)),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 2, template_var 4),
            template_app
             (template_app (template_hole 1, template_var 1),
              template_hole 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 8, template_var 0),
               template_var 3),
             template_var 2)
           ))),
    ("SatSolverVerification.lexLessBackjump",
     "[| ?p = prefixToLevel ?level ?a; 0 <= ?level;
         ?level < currentLevel ?a |]
      ==> (?p @ [(?x, False)], ?a) : lexLess",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 12, template_var 2),
            template_var 1)),
        template_inequation (less_equals, template_hole 10, template_var 2),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 8, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 3),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 3, template_var 0),
                           template_hole 2)),
                       template_hole 1))),
                 template_var 1)),
             template_hole 0)
           ))),
    ("SatSolverVerification.InvariantConsistentAfterBackjump",
     "[| InvariantConsistent ?M; isPrefix ?p ?M;
         isUnitClause ?bClause ?bLiteral (elements ?p);
         ?M' = ?p @ [(?bLiteral, False)] |]
      ==> InvariantConsistent ?M'",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_app (template_hole 6, template_var 3))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 4, template_var 3),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (template_app (template_hole 9, template_var 0)))),
    ("SatSolverVerification.InvariantUniqAfterBackjump",
     "[| InvariantUniq ?M; isPrefix ?p ?M;
         isUnitClause ?bClause ?bLiteral (elements ?p);
         ?M' = ?p @ [(?bLiteral, False)] |]
      ==> InvariantUniq ?M'",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_app (template_hole 6, template_var 3))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 4, template_var 3),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (template_app (template_hole 9, template_var 0)))),
    ("SatSolverVerification.lastAssertedLiteralHasHighestElementLevel",
     "[| isLastAssertedLiteral ?literal ?clause (elements ?M);
         uniq (elements ?M) |]
      ==> ALL l'.
             l' el ?clause & l' el elements ?M -->
             elementLevel l' ?M <= elementLevel ?literal ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1),
              template_app (template_hole 7, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 7, template_var 0))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("SatSolverVerification.InvariantVarsMAfterUnitPropagate",
     "[| InvariantVarsM ?M ?F0.0 ?Vbl; var ?uLiteral : vars ?F0.0 Un ?Vbl;
         ?M' = ?M @ [(?uLiteral, False)] |]
      ==> InvariantVarsM ?M' ?F0.0 ?Vbl",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 1)),
              template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 3)),
                template_var 2))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 4, template_var 4),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 10, template_var 0),
               template_var 3),
             template_var 2)
           ))),
    ("SatSolverVerification.backjumpLevelZero",
     "[| isLastAssertedLiteral (opposite ?l) (oppositeLiteralList ?C)
          (elements ?M);
         0 < elementLevel (opposite ?l) ?M; set ?C = {?l} |]
      ==> isBackjumpLevel 0 ?l ?C ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_var 2)),
                template_app (template_hole 9, template_var 1)),
              template_app (template_hole 8, template_var 0))
            ),
        template_inequation
         (less_than, template_hole 6,
          template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 10, template_var 2)),
            template_var 0)),
        template_equation
         (template_app (template_hole 3, template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_hole 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_hole 6),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("SatSolverVerification.isBackjumpLevelEnsuresIsUnitInPrefix",
     "[| consistent (elements ?M); uniq (elements ?M);
         clauseFalse ?c (elements ?M); isBackjumpLevel ?level ?l ?c ?M |]
      ==> isUnitClause ?c ?l (elements (prefixToLevel ?level ?M))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app (template_hole 5, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 5, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0),
                template_var 2),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0),
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3)))
           ))),
    ("SatSolverVerification.InvariantImpliedLiteralsWeakerVariant",
     "ALL l.
         l el elements ?M -->
         formulaEntailsLiteral (?F @ val2form (decisionsTo l ?M)) l ==>
      ALL l.
         l el elements ?M -->
         formulaEntailsLiteral (?F @ val2form (decisions ?M)) l",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("SatSolverVerification.allDecisionsThenUIP",
     "[| uniq (elements ?M);
         ALL l'. l' el ?c --> opposite l' el decisions ?M;
         isLastAssertedLiteral (opposite ?l) (oppositeLiteralList ?c)
          (elements ?M) |]
      ==> isUIP ?l ?c ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 2))
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 4, template_var 0)),
                template_app (template_hole 1, template_var 1)),
              template_app (template_hole 8, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1),
             template_var 2)
           ))),
    ("SatSolverVerification.InvariantVarsMAfterBacktrack",
     "[| InvariantVarsM ?M ?F0.0 ?Vbl; decisions ?M ~= [];
         ?M' =
         prefixBeforeLastDecision ?M @
         [(opposite (lastDecision ?M), False)] |]
      ==> InvariantVarsM ?M' ?F0.0 ?Vbl",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 10, template_var 3),
              template_hole 9)
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 3)),
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_hole 3,
                      template_app (template_hole 2, template_var 3))),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 13, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("SatSolverVerification.InvariantConsistentAfterBacktrack",
     "[| InvariantUniq ?M; InvariantConsistent ?M; decisions ?M ~= [];
         ?M' =
         prefixBeforeLastDecision ?M @
         [(opposite (lastDecision ?M), False)] |]
      ==> InvariantConsistent ?M'",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 1)),
        template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_negation
         (
            template_equation
             (template_app (template_hole 10, template_var 1),
              template_hole 9)
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 1)),
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_hole 3,
                      template_app (template_hole 2, template_var 1))),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (template_app (template_hole 13, template_var 0)))),
    ("SatSolverVerification.InvariantUniqAfterBacktrack",
     "[| InvariantUniq ?M; InvariantConsistent ?M; decisions ?M ~= [];
         ?M' =
         prefixBeforeLastDecision ?M @
         [(opposite (lastDecision ?M), False)] |]
      ==> InvariantUniq ?M'",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 1)),
        template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_negation
         (
            template_equation
             (template_app (template_hole 10, template_var 1),
              template_hole 9)
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 1)),
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_hole 3,
                      template_app (template_hole 2, template_var 1))),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (template_app (template_hole 14, template_var 0)))),
    ("SatSolverVerification.lastDecisionThenUIP",
     "[| uniq (elements ?M); opposite ?l el decisions ?M;
         clauseFalse ?c (elements ?M);
         isLastAssertedLiteral (opposite ?l) (oppositeLiteralList ?c)
          (elements ?M) |]
      ==> isUIP ?l ?c ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 7, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 5, template_var 1)),
                template_app (template_hole 1, template_var 0)),
              template_app (template_hole 7, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2)
           ))),
    ("SatSolverVerification.InvariantImpliedLiteralsAfterUnitPropagate",
     "[| InvariantImpliedLiterals ?F ?M; formulaEntailsClause ?F ?uClause;
         isUnitClause ?uClause ?uLiteral (elements ?M);
         ?M' = ?M @ [(?uLiteral, False)] |]
      ==> InvariantImpliedLiterals ?F ?M'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_app (template_hole 6, template_var 3))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 4, template_var 3),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 9, template_var 4), template_var 0)
           ))),
    ("SatSolverVerification.InvariantReasonClausesAfterUnitPropagate",
     "[| InvariantReasonClauses ?F ?M; formulaEntailsClause ?F ?uClause;
         isUnitClause ?uClause ?uLiteral (elements ?M);
         ?M' = ?M @ [(?uLiteral, False)] |]
      ==> InvariantReasonClauses ?F ?M'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_app (template_hole 6, template_var 3))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 4, template_var 3),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 9, template_var 4), template_var 0)
           ))),
    ("SatSolverVerification.multLessRemdups",
     "(?a, ?b) : multLess ?M ==>
      (remdups ?a, remdups ?b) : multLess ?M &
      (remdups ?a, ?b) : multLess ?M & (?a, remdups ?b) : multLess ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 0, template_var 2)),
                     template_app (template_hole 0, template_var 1))),
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app (template_hole 0, template_var 2)),
                       template_var 1)),
                   template_app (template_hole 2, template_var 0))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_app (template_hole 0, template_var 1))),
                 template_app (template_hole 2, template_var 0))))
           ))),
    ("SatSolverVerification.isUIPExistsBackjumpLevel",
     "[| clauseFalse ?c (elements ?M); isUIP ?l ?c ?M; uniq (elements ?M);
         0 < elementLevel (opposite ?l) ?M |]
      ==> EX level. isBackjumpLevel level ?l ?c ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 8, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 0),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 8, template_var 1))
            ),
        template_inequation
         (less_than, template_hole 4,
          template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0)),
            template_var 1))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("SatSolverVerification.InvariantCFalseAfterExplain",
     "[| InvariantCFalse ?conflictFlag ?M ?C; opposite ?literal el ?C;
         isReason ?reason ?literal (elements ?M);
         ?C' = resolve ?C ?reason (opposite ?literal) |]
      ==> InvariantCFalse ?conflictFlag ?M ?C'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 2),
              template_app (template_hole 2, template_var 4))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 1),
            template_app (template_hole 4, template_var 2)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, template_var 5),
               template_var 4),
             template_var 0)
           ))),
    ("SatSolverVerification.allDecisionsThenExistsBackjumpLevel",
     "[| uniq (elements ?M);
         ALL l'. l' el ?c --> opposite l' el decisions ?M;
         isLastAssertedLiteral (opposite ?l) (oppositeLiteralList ?c)
          (elements ?M) |]
      ==> EX level. isBackjumpLevel level ?l ?c ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 2))
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 5, template_var 0)),
                template_app (template_hole 2, template_var 1)),
              template_app (template_hole 9, template_var 2))
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("SatSolverVerification.InvariantReasonClausesHoldsForPrefixElements",
     "[| InvariantReasonClauses ?F ?p; isPrefix ?p ?M;
         ?literal el elements ?p; ~ ?literal el decisions ?M |]
      ==> EX clause.
             formulaEntailsClause ?F clause &
             isReason clause ?literal (elements ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 0),
                  template_app (template_hole 4, template_var 1))
                )
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("SatSolverVerification.InvariantVarsMAfterBackjump",
     "[| InvariantVarsM ?M ?F0.0 ?Vbl; isPrefix ?p ?M;
         var ?bLiteral : vars ?F0.0 Un ?Vbl;
         ?M' = ?p @ [(?bLiteral, False)] |]
      ==> InvariantVarsM ?M' ?F0.0 ?Vbl",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 1)),
              template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 4)),
                template_var 3))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 4, template_var 2),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 11, template_var 0),
               template_var 4),
             template_var 3)
           ))),
    ("SatSolverVerification.InvariantImpliedLiteralsHoldsForUnitLiteral",
     "[| InvariantImpliedLiterals ?F ?M; formulaEntailsClause ?F ?uClause;
         isUnitClause ?uClause ?uLiteral (elements ?M);
         ?M' = ?M @ [(?uLiteral, False)] |]
      ==> formulaEntailsLiteral (?F @ val2form (decisionsTo ?uLiteral ?M'))
           ?uLiteral",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 2),
                template_var 1),
              template_app (template_hole 10, template_var 3))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 8, template_var 3),
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_hole 5)),
              template_hole 4)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 4),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)))),
             template_var 1)
           ))),
    ("SatSolverVerification.InvariantImpliedLiteralsAfterBackjump",
     "[| InvariantImpliedLiterals ?F ?M; isPrefix ?p ?M;
         formulaEntailsClause ?F ?bClause;
         isUnitClause ?bClause ?bLiteral (elements ?p);
         ?M' = ?p @ [(?bLiteral, False)] |]
      ==> InvariantImpliedLiterals ?F ?M'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_app (template_hole 6, template_var 3))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 4, template_var 3),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 10, template_var 5),
             template_var 0)
           ))),
    ("SatSolverVerification.invariantCEntailedAfterConflict",
     "[| ?conflictFlag = False; formulaFalse ?F (elements ?M);
         ?clause el ?F; clauseFalse ?clause (elements ?M); ?C' = ?clause;
         ?conflictFlag' = True |]
      ==> InvariantCEntailed ?conflictFlag' ?F ?C'",
     template_implication
      ([template_equation (template_var 5, template_hole 7),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app (template_hole 5, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 5, template_var 3))
            ),
        template_equation (template_var 1, template_var 2),
        template_equation (template_var 0, template_hole 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 4),
             template_var 1)
           ))),
    ("SatSolverVerification.invariantCFalseAfterConflict",
     "[| ?conflictFlag = False; formulaFalse ?F (elements ?M);
         ?clause el ?F; clauseFalse ?clause (elements ?M); ?C' = ?clause;
         ?conflictFlag' = True |]
      ==> InvariantCFalse ?conflictFlag' ?M ?C'",
     template_implication
      ([template_equation (template_var 5, template_hole 7),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app (template_hole 5, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 5, template_var 3))
            ),
        template_equation (template_var 1, template_var 2),
        template_equation (template_var 0, template_hole 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 3),
             template_var 1)
           ))),
    ("SatSolverVerification.backjumpLevelLastLast",
     "[| isUIP ?l ?C ?M; uniq (elements ?M); clauseFalse ?C (elements ?M);
         isLastAssertedLiteral (opposite ?ll)
          (removeAll (opposite ?l) (oppositeLiteralList ?C))
          (elements ?M) |]
      ==> isBackjumpLevel (elementLevel (opposite ?ll) ?M) ?l ?C ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 7, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 0)),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 4, template_var 3)),
                  template_app (template_hole 2, template_var 2))),
              template_app (template_hole 7, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_hole 0,
                       template_app (template_hole 4, template_var 0)),
                     template_var 1)),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("SatSolverVerification.isMinimalBackjumpLevelEnsuresIsNotUnitBeforePrefix",
     "[| consistent (elements ?M); uniq (elements ?M);
         clauseFalse ?c (elements ?M);
         isMinimalBackjumpLevel ?level ?l ?c ?M; ?level' < ?level |]
      ==> \<nexists>l'.
             isUnitClause ?c l' (elements (prefixToLevel ?level' ?M))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_hole 7,
              template_app (template_hole 8, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app (template_hole 8, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1),
                template_var 3),
              template_var 4)
            ),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_negation
        (template_predicate (template_app (template_hole 2, t_empty))))),
    ("SatSolverVerification.satReport",
     "[| vars ?F0.0 <= ?Vbl; InvariantVarsF ?F ?F0.0 ?Vbl;
         InvariantConsistent ?M; InvariantEquivalent ?F0.0 ?F;
         ~ formulaFalse ?F (elements ?M); ?Vbl <= vars (elements ?M) |]
      ==> model (elements ?M) ?F0.0",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 8, template_var 3),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 1),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app (template_hole 2, template_var 0))
                )
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 1,
            template_app (template_hole 2, template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 0)),
             template_var 3)
           ))),
    ("SatSolverVerification.explainApplicableToEachNonDecision",
     "[| InvariantReasonClauses ?F ?M; InvariantCFalse ?conflictFlag ?M ?C;
         ?conflictFlag = True; opposite ?literal el ?C;
         ~ ?literal el decisions ?M |]
      ==> EX clause.
             formulaEntailsClause ?F clause &
             isReason clause ?literal (elements ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 2),
                template_var 3),
              template_var 1)
            ),
        template_equation (template_var 2, template_hole 9),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 0)),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 0),
                  template_app (template_hole 5, template_var 3))
                )
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("SatSolverVerification.InvariantReasonClausesAfterBackjump",
     "[| InvariantReasonClauses ?F ?M; InvariantUniq ?M; isPrefix ?p ?M;
         isUnitClause ?bClause ?bLiteral (elements ?p);
         formulaEntailsClause ?F ?bClause;
         ?M' = ?p @ [(?bLiteral, False)] |]
      ==> InvariantReasonClauses ?F ?M'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 5),
              template_var 4)
            ),
        template_predicate
         (template_app (template_hole 10, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1),
              template_app (template_hole 7, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 5),
              template_var 2)
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 4, template_var 3),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 11, template_var 5),
             template_var 0)
           ))),
    ("SatSolverVerification.isMinimalBackjumpLevelCharacterization",
     "[| isUIP ?l ?c ?M; clauseFalse ?c (elements ?M); uniq (elements ?M) |]
      ==> isMinimalBackjumpLevel ?level ?l ?c ?M =
          (isBackjumpLevel ?level ?l ?c ?M &
           (ALL level'<?level. ~ isBackjumpLevel level' ?l ?c ?M))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app (template_hole 9, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 8,
              template_app (template_hole 9, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_var 0),
               template_var 3),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_var 0),
                   template_var 3),
                 template_var 2),
               template_var 1)),
           template_app (template_hole 3, t_empty))))),
    ("SatSolverVerification.InvariantImpliedLiteralsAfterBacktrack",
     "[| InvariantImpliedLiterals ?F ?M; InvariantUniq ?M;
         InvariantConsistent ?M; decisions ?M ~= [];
         formulaFalse ?F (elements ?M);
         ?M' =
         prefixBeforeLastDecision ?M @
         [(opposite (lastDecision ?M), False)] |]
      ==> InvariantImpliedLiterals ?F ?M'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 2),
              template_var 1)
            ),
        template_predicate
         (template_app (template_hole 16, template_var 1)),
        template_predicate
         (template_app (template_hole 15, template_var 1)),
        template_negation
         (
            template_equation
             (template_app (template_hole 12, template_var 1),
              template_hole 11)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app (template_hole 9, template_var 1))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 1)),
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_hole 3,
                      template_app (template_hole 2, template_var 1))),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 17, template_var 2),
             template_var 0)
           )))]
