   [("BasicDPLL.wfTerminationLess",
     "finite ?decisionVars ==> wf (terminationLess ?F0.0 ?decisionVars)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("BasicDPLL.invariantsHoldInInitialState",
     "isInitialState ?state ?F0.0 ==>
      invariantsHoldInState ?state ?F0.0 ?decisionVars",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("BasicDPLL.finalNonConflictState",
     "~ applicableDecide ?state ?decisionVars ==>
      ?decisionVars <= vars (elements (getM ?state))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)
                )
            )],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)))))),
    ("BasicDPLL.applicableBacktrackCharacterization",
     "applicableBacktrack ?stateA ?F0.0 =
      (formulaFalse ?F0.0 (elements (getM ?stateA)) &
       decisions (getM ?stateA) ~= [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 1)))),
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 4, template_var 1))),
                 template_hole 0)))
           ))),
    ("BasicDPLL.minimalStatesAreFinal",
     "[| invariantsHoldInState ?state ?F0.0 ?decisionVars;
         isMinimalState ?state ?F0.0 ?decisionVars |]
      ==> isFinalState ?state ?F0.0 ?decisionVars",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("BasicDPLL.transitionsPreserveInvariants",
     "[| transition ?stateA ?stateB ?F0.0 ?decisionVars;
         invariantsHoldInState ?stateA ?F0.0 ?decisionVars |]
      ==> invariantsHoldInState ?stateB ?F0.0 ?decisionVars",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("BasicDPLL.applicableUnitPropagateCharacterization",
     "applicableUnitPropagate ?stateA ?F0.0 =
      (EX uc ul.
          uc el ?F0.0 & isUnitClause uc ul (elements (getM ?stateA)))",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app (template_hole 6, t_empty))),
    ("BasicDPLL.invariantsHoldInValidRunsFromInitialState",
     "[| isInitialState ?state0.0 ?F0.0;
         (?state0.0, ?state) : transitionRelation ?F0.0 ?decisionVars |]
      ==> invariantsHoldInState ?state ?F0.0 ?decisionVars",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 1)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0)
           ))),
    ("BasicDPLL.finalConflictingState",
     "[| ~ applicableBacktrack ?state ?F0.0;
         formulaFalse ?F0.0 (elements (getM ?state)) |]
      ==> decisions (getM ?state) = []",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 0)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)))
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 1)),
         template_hole 0))),
    ("BasicDPLL.finalStateNonApplicable",
     "isFinalState ?state ?F0.0 ?decisionVars =
      (~ applicableDecide ?state ?decisionVars &
       ~ applicableUnitPropagate ?state ?F0.0 &
       ~ applicableBacktrack ?state ?F0.0)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1))),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)))))),
    ("BasicDPLL.invariantsHoldInValidRuns",
     "[| invariantsHoldInState ?stateA ?F0.0 ?decisionVars;
         (?stateA, ?stateB) : transitionRelation ?F0.0 ?decisionVars |]
      ==> invariantsHoldInState ?stateB ?F0.0 ?decisionVars",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 0)),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("BasicDPLL.stateIsDecreasedByValidTransitions",
     "[| invariantsHoldInState ?stateA ?F0.0 ?decisionVars;
         transition ?stateA ?stateB ?F0.0 ?decisionVars |]
      ==> (?stateB, ?stateA) : terminationLess ?F0.0 ?decisionVars",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 0),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("BasicDPLL.applicableDecideCharacterization",
     "applicableDecide ?stateA ?decisionVars =
      (EX l. var l : ?decisionVars &
             ~ l el elements (getM ?stateA) &
             ~ opposite l el elements (getM ?stateA))",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1), template_var 0),
       template_app (template_hole 8, t_empty))),
    ("BasicDPLL.noInfiniteTransitionChains",
     "finite ?decisionVars ==>
      \<nexists>Q.
         EX state0:Q.
            isInitialState state0 ?F0.0 &
            (ALL state:Q.
                EX state':Q. transition state state' ?F0.0 ?decisionVars)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_negation
        (template_predicate (template_app (template_hole 5, t_empty))))),
    ("BasicDPLL.wfTransitionRelation",
     "[| finite ?decisionVars; isInitialState ?state0.0 ?F0.0 |]
      ==> wf {(stateB, stateA).
              (?state0.0, stateA) : transitionRelation ?F0.0 ?decisionVars &
              transition stateA stateB ?F0.0 ?decisionVars}",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 7,
             template_app
              (template_hole 6, template_app (template_hole 5, t_empty)))
           ))),
    ("BasicDPLL.soundnessForUNSAT",
     "[| isInitialState ?state0.0 ?F0.0;
         (?state0.0, ?state) : transitionRelation ?F0.0 ?decisionVars;
         formulaFalse ?F0.0 (elements (getM ?state));
         decisions (getM ?state) = [] |]
      ==> ~ satisfiable ?F0.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 3),
                  template_var 1)),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)))
            ),
        template_equation
         (template_app
           (template_hole 3,
            template_app (template_hole 5, template_var 1)),
          template_hole 2)],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 2))
           ))),
    ("BasicDPLL.trailIsDecreasedByDeciedUnitPropagateAndBacktrack",
     "[| invariantsHoldInState ?stateA ?F0.0 ?decisionVars;
         appliedDecide ?stateA ?stateB ?decisionVars |
         appliedUnitPropagate ?stateA ?stateB ?F0.0 |
         appliedBacktrack ?stateA ?stateB ?F0.0 |]
      ==> (getM ?stateB, getM ?stateA)
          : lexLessRestricted (vars ?F0.0 Un ?decisionVars)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_app (template_hole 8, template_var 3),
                    template_var 0),
                  template_var 1)),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app
                     (template_app (template_hole 7, template_var 3),
                      template_var 0),
                    template_var 2)),
                template_app
                 (template_app
                   (template_app (template_hole 6, template_var 3),
                    template_var 0),
                  template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0)),
                 template_app (template_hole 3, template_var 3))),
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 template_var 1)))
           ))),
    ("BasicDPLL.partialCorrectness",
     "[| vars ?F0.0 <= ?decisionVars; isInitialState ?state0.0 ?F0.0;
         (?state0.0, ?state) : transitionRelation ?F0.0 ?decisionVars;
         isFinalState ?state ?F0.0 ?decisionVars |]
      ==> satisfiable ?F0.0 =
          (~ formulaFalse ?F0.0 (elements (getM ?state)))",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 11, template_var 3),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_var 0)),
              template_app
               (template_app (template_hole 7, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 0),
                template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app (template_hole 4, template_var 3),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))))))),
    ("BasicDPLL.finalStateCharacterizationLemma",
     "[| ~ applicableDecide ?state ?decisionVars;
         ~ applicableBacktrack ?state ?F0.0 |]
      ==> ~ formulaFalse ?F0.0 (elements (getM ?state)) &
          ?decisionVars <= vars (elements (getM ?state)) |
          formulaFalse ?F0.0 (elements (getM ?state)) &
          decisions (getM ?state) = []",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 2),
                  template_var 1)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_var 0)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_hole 12,
                     template_app
                      (template_app (template_hole 7, template_var 0),
                       template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_var 2))))),
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_app
                    (template_hole 3,
                     template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_var 2)))))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 0),
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_var 2)))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 5, template_var 2))),
                 template_hole 0)))
           ))),
    ("BasicDPLL.completenessForSAT",
     "[| satisfiable ?F0.0; isInitialState ?state0.0 ?F0.0;
         (?state0.0, ?state) : transitionRelation ?F0.0 ?decisionVars;
         isFinalState ?state ?F0.0 ?decisionVars |]
      ==> ~ formulaFalse ?F0.0 (elements (getM ?state)) &
          ?decisionVars <= vars (elements (getM ?state))",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 8, template_var 3),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 1))))),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_hole 0,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)))))
           ))),
    ("BasicDPLL.soundnessForSAT",
     "[| vars ?F0.0 <= ?decisionVars; isInitialState ?state0.0 ?F0.0;
         (?state0.0, ?state) : transitionRelation ?F0.0 ?decisionVars;
         ~ formulaFalse ?F0.0 (elements (getM ?state));
         ?decisionVars <= vars (elements (getM ?state)) |]
      ==> model (elements (getM ?state)) ?F0.0",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 10, template_var 3),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 0)),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app
                   (template_hole 3,
                    template_app (template_hole 2, template_var 0)))
                )
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 1,
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0))))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0))),
             template_var 3)
           ))),
    ("BasicDPLL.completenessForUNSAT",
     "[| vars ?F0.0 <= ?decisionVars; ~ satisfiable ?F0.0;
         isInitialState ?state0.0 ?F0.0;
         (?state0.0, ?state) : transitionRelation ?F0.0 ?decisionVars;
         isFinalState ?state ?F0.0 ?decisionVars |]
      ==> formulaFalse ?F0.0 (elements (getM ?state)) &
          decisions (getM ?state) = []",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 14, template_var 3),
          template_var 2),
        template_negation
         (
            template_predicate
             (template_app (template_hole 12, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_var 0)),
              template_app
               (template_app (template_hole 8, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 0),
                template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 3),
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0)))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 3, template_var 0))),
               template_hole 0))
           ))),
    ("BasicDPLL.finalStateCharacterization",
     "[| isInitialState ?state0.0 ?F0.0;
         (?state0.0, ?state) : transitionRelation ?F0.0 ?decisionVars;
         isFinalState ?state ?F0.0 ?decisionVars |]
      ==> ~ formulaFalse ?F0.0 (elements (getM ?state)) &
          ?decisionVars <= vars (elements (getM ?state)) |
          formulaFalse ?F0.0 (elements (getM ?state)) &
          decisions (getM ?state) = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 3),
                  template_var 1)),
              template_app
               (template_app (template_hole 12, template_var 2),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 1),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_var 2),
                       template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_var 1))))),
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_app
                    (template_hole 3,
                     template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_var 1)))))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 7, template_var 2),
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_var 1)))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 5, template_var 1))),
                 template_hole 0)))
           )))]
