   [("UnitPropagate.conflictFlagOrQEmptyAfterExhaustiveUnitPropagate",
     "exhaustiveUnitPropagate_dom ?state ==>
      let state' = exhaustiveUnitPropagate ?state
      in getConflictFlag state' | getQ state' = []",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 0)),
             t_empty)
           ))),
    ("UnitPropagate.InvariantVarsQTl",
     "[| InvariantVarsQ ?Q ?F0.0 ?Vbl; ?Q ~= [] |]
      ==> InvariantVarsQ (tl ?Q) ?F0.0 ?Vbl",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 2, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 0, template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("SatSolverVerification.InvariantCFalseAfterUnitPropagate",
     "[| InvariantCFalse ?conflictFlag ?M ?C;
         ?M' = ?M @ [(?uLiteral, False)] |]
      ==> InvariantCFalse ?conflictFlag ?M' ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 4, template_var 3),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, template_var 4),
               template_var 1),
             template_var 2)
           ))),
    ("SatSolverVerification.InvariantConsistentAfterUnitPropagate",
     "[| InvariantConsistent ?M;
         isUnitClause ?uClause ?uLiteral (elements ?M);
         ?M' = ?M @ [(?uLiteral, False)] |]
      ==> InvariantConsistent ?M'",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_app (template_hole 6, template_var 3))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 4, template_var 3),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (template_app (template_hole 8, template_var 0)))),
    ("SatSolverVerification.InvariantUniqAfterUnitPropagate",
     "[| InvariantUniq ?M; isUnitClause ?uClause ?uLiteral (elements ?M);
         ?M' = ?M @ [(?uLiteral, False)] |]
      ==> InvariantUniq ?M'",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_app (template_hole 6, template_var 3))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 4, template_var 3),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (template_app (template_hole 8, template_var 0)))),
    ("SatSolverVerification.InvariantVarsMAfterUnitPropagate",
     "[| InvariantVarsM ?M ?F0.0 ?Vbl; var ?uLiteral : vars ?F0.0 Un ?Vbl;
         ?M' = ?M @ [(?uLiteral, False)] |]
      ==> InvariantVarsM ?M' ?F0.0 ?Vbl",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 1)),
              template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 3)),
                template_var 2))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 4, template_var 4),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 10, template_var 0),
               template_var 3),
             template_var 2)
           ))),
    ("SatSolverVerification.InvariantImpliedLiteralsAfterUnitPropagate",
     "[| InvariantImpliedLiterals ?F ?M; formulaEntailsClause ?F ?uClause;
         isUnitClause ?uClause ?uLiteral (elements ?M);
         ?M' = ?M @ [(?uLiteral, False)] |]
      ==> InvariantImpliedLiterals ?F ?M'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_app (template_hole 6, template_var 3))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 4, template_var 3),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 9, template_var 4), template_var 0)
           ))),
    ("SatSolverVerification.InvariantReasonClausesAfterUnitPropagate",
     "[| InvariantReasonClauses ?F ?M; formulaEntailsClause ?F ?uClause;
         isUnitClause ?uClause ?uLiteral (elements ?M);
         ?M' = ?M @ [(?uLiteral, False)] |]
      ==> InvariantReasonClauses ?F ?M'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_app (template_hole 6, template_var 3))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 4, template_var 3),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_hole 0)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 9, template_var 4), template_var 0)
           ))),
    ("UnitPropagate.InvariantUniqQAfterApplyUnitPropagate",
     "[| InvariantWatchesEl (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchListsContainOnlyClausesFromF (getWatchList ?state)
          (getF ?state);
         InvariantUniqQ (getQ ?state); getQ ?state ~= [] |]
      ==> let state'' = applyUnitPropagate ?state
          in InvariantUniqQ (getQ state'')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 11, template_var 0)),
                template_app (template_hole 10, template_var 0)),
              template_app (template_hole 9, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 0)),
              template_app (template_hole 11, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 0))
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 5, template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             t_empty)
           ))),
    ("UnitPropagate.InvariantConflictClauseCharacterizationAfterApplyUnitPropagate",
     "[| InvariantWatchesEl (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchListsContainOnlyClausesFromF (getWatchList ?state)
          (getF ?state);
         InvariantWatchListsCharacterization (getWatchList ?state)
          (getWatch1 ?state) (getWatch2 ?state);
         InvariantWatchListsUniq (getWatchList ?state);
         ~ getConflictFlag ?state |]
      ==> let state' = applyUnitPropagate ?state
          in InvariantConflictClauseCharacterization
              (getConflictFlag state') (getConflictClause state')
              (getF state') (getM state')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 14,
                  template_app (template_hole 13, template_var 0)),
                template_app (template_hole 12, template_var 0)),
              template_app (template_hole 11, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 0)),
              template_app (template_hole 13, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 9, template_var 0)),
                template_app (template_hole 12, template_var 0)),
              template_app (template_hole 11, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 7,
              template_app (template_hole 9, template_var 0))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             t_empty)
           ))),
    ("UnitPropagate.InvariantConsistentAfterApplyUnitPropagate",
     "[| InvariantConsistent (getM ?state);
         InvariantWatchesEl (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchListsContainOnlyClausesFromF (getWatchList ?state)
          (getF ?state);
         InvariantQCharacterization (getConflictFlag ?state) (getQ ?state)
          (getF ?state) (getM ?state);
         getQ ?state ~= []; ~ getConflictFlag ?state |]
      ==> let state' = applyUnitPropagate ?state
          in InvariantConsistent (getM state')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 15,
              template_app (template_hole 14, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 13,
                  template_app (template_hole 12, template_var 0)),
                template_app (template_hole 11, template_var 0)),
              template_app (template_hole 10, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 0)),
              template_app (template_hole 12, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 0)),
                  template_app (template_hole 5, template_var 0)),
                template_app (template_hole 12, template_var 0)),
              template_app (template_hole 14, template_var 0))
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 5, template_var 0),
              template_hole 2)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             t_empty)
           ))),
    ("UnitPropagate.InvariantUniqAfterApplyUnitPropagate",
     "[| InvariantUniq (getM ?state);
         InvariantWatchesEl (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchListsContainOnlyClausesFromF (getWatchList ?state)
          (getF ?state);
         InvariantQCharacterization (getConflictFlag ?state) (getQ ?state)
          (getF ?state) (getM ?state);
         getQ ?state ~= []; ~ getConflictFlag ?state |]
      ==> let state' = applyUnitPropagate ?state
          in InvariantUniq (getM state')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 15,
              template_app (template_hole 14, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 13,
                  template_app (template_hole 12, template_var 0)),
                template_app (template_hole 11, template_var 0)),
              template_app (template_hole 10, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 0)),
              template_app (template_hole 12, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 0)),
                  template_app (template_hole 5, template_var 0)),
                template_app (template_hole 12, template_var 0)),
              template_app (template_hole 14, template_var 0))
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 5, template_var 0),
              template_hole 2)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             t_empty)
           ))),
    ("UnitPropagate.exhaustiveUnitPropagatePreservedVariables",
     "[| exhaustiveUnitPropagate_dom ?state;
         InvariantWatchListsContainOnlyClausesFromF (getWatchList ?state)
          (getF ?state);
         InvariantWatchListsUniq (getWatchList ?state);
         InvariantWatchListsCharacterization (getWatchList ?state)
          (getWatch1 ?state) (getWatch2 ?state);
         InvariantWatchesEl (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchesDiffer (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state) |]
      ==> let state' = exhaustiveUnitPropagate ?state
          in getSATFlag state' = getSATFlag ?state",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 0)),
              template_app (template_hole 10, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 9,
              template_app (template_hole 11, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 11, template_var 0)),
                template_app (template_hole 7, template_var 0)),
              template_app (template_hole 6, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 10, template_var 0)),
                template_app (template_hole 7, template_var 0)),
              template_app (template_hole 6, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 10, template_var 0)),
                template_app (template_hole 7, template_var 0)),
              template_app (template_hole 6, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             t_empty)
           ))),
    ("UnitPropagate.exhaustiveUnitPropagatePreservesCurrentLevel",
     "[| exhaustiveUnitPropagate_dom ?state;
         InvariantWatchListsContainOnlyClausesFromF (getWatchList ?state)
          (getF ?state);
         InvariantWatchListsUniq (getWatchList ?state);
         InvariantWatchListsCharacterization (getWatchList ?state)
          (getWatch1 ?state) (getWatch2 ?state);
         InvariantWatchesEl (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchesDiffer (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state) |]
      ==> let state' = exhaustiveUnitPropagate ?state
          in currentLevel (getM state') = currentLevel (getM ?state)",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 0)),
              template_app (template_hole 11, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 10,
              template_app (template_hole 12, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 12, template_var 0)),
                template_app (template_hole 8, template_var 0)),
              template_app (template_hole 7, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 11, template_var 0)),
                template_app (template_hole 8, template_var 0)),
              template_app (template_hole 7, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 11, template_var 0)),
                template_app (template_hole 8, template_var 0)),
              template_app (template_hole 7, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             t_empty)
           ))),
    ("UnitPropagate.InvariantEquivalentZLAfterApplyUnitPropagate",
     "[| InvariantEquivalentZL (getF ?state) (getM ?state) ?Phi;
         InvariantWatchesEl (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchListsContainOnlyClausesFromF (getWatchList ?state)
          (getF ?state);
         InvariantQCharacterization (getConflictFlag ?state) (getQ ?state)
          (getF ?state) (getM ?state);
         ~ getConflictFlag ?state; getQ ?state ~= [] |]
      ==> let state' = applyUnitPropagate ?state
          in InvariantEquivalentZL (getF state') (getM state') ?Phi",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 14, template_var 1)),
                template_app (template_hole 13, template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 14, template_var 1)),
                template_app (template_hole 11, template_var 1)),
              template_app (template_hole 10, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 1)),
              template_app (template_hole 14, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 1)),
                  template_app (template_hole 5, template_var 1)),
                template_app (template_hole 14, template_var 1)),
              template_app (template_hole 13, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_var 1))
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 5, template_var 1),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             t_empty)
           ))),
    ("UnitPropagate.InvariantConflictClauseCharacterizationAfterExhaustivePropagate",
     "[| exhaustiveUnitPropagate_dom ?state;
         InvariantWatchListsContainOnlyClausesFromF (getWatchList ?state)
          (getF ?state);
         InvariantWatchListsUniq (getWatchList ?state);
         InvariantWatchListsCharacterization (getWatchList ?state)
          (getWatch1 ?state) (getWatch2 ?state);
         InvariantWatchesEl (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchesDiffer (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantConflictClauseCharacterization (getConflictFlag ?state)
          (getConflictClause ?state) (getF ?state) (getM ?state) |]
      ==> let state' = exhaustiveUnitPropagate ?state
          in InvariantConflictClauseCharacterization
              (getConflictFlag state') (getConflictClause state')
              (getF state') (getM state')",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app (template_hole 13, template_var 0)),
              template_app (template_hole 12, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 11,
              template_app (template_hole 13, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 13, template_var 0)),
                template_app (template_hole 9, template_var 0)),
              template_app (template_hole 8, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 12, template_var 0)),
                template_app (template_hole 9, template_var 0)),
              template_app (template_hole 8, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 12, template_var 0)),
                template_app (template_hole 9, template_var 0)),
              template_app (template_hole 8, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 0)),
                  template_app (template_hole 3, template_var 0)),
                template_app (template_hole 12, template_var 0)),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             t_empty)
           ))),
    ("UnitPropagate.applyUnitPropagateEffect",
     "[| InvariantWatchesEl (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchListsContainOnlyClausesFromF (getWatchList ?state)
          (getF ?state);
         InvariantQCharacterization (getConflictFlag ?state) (getQ ?state)
          (getF ?state) (getM ?state);
         ~ getConflictFlag ?state; getQ ?state ~= [] |]
      ==> let uLiteral = hd (getQ ?state);
              state' = applyUnitPropagate ?state
          in EX uClause.
                formulaEntailsClause (getF ?state) uClause &
                isUnitClause uClause uLiteral (elements (getM ?state)) &
                getM state' = getM ?state @ [(uLiteral, False)]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 27,
                  template_app (template_hole 26, template_var 0)),
                template_app (template_hole 25, template_var 0)),
              template_app (template_hole 24, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app (template_hole 22, template_var 0)),
              template_app (template_hole 26, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 21,
                    template_app (template_hole 20, template_var 0)),
                  template_app (template_hole 19, template_var 0)),
                template_app (template_hole 26, template_var 0)),
              template_app (template_hole 18, template_var 0))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 20, template_var 0))
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 19, template_var 0),
              template_hole 15)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_hole 13,
                 template_app (template_hole 19, template_var 0))),
             t_empty)
           ))),
    ("UnitPropagate.InvariantNoDecisionsWhenConflictNorUnitAfterUnitPropagate",
     "[| InvariantWatchesEl (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchListsContainOnlyClausesFromF (getWatchList ?state)
          (getF ?state);
         InvariantConflictFlagCharacterization (getConflictFlag ?state)
          (getF ?state) (getM ?state);
         InvariantQCharacterization (getConflictFlag ?state) (getQ ?state)
          (getF ?state) (getM ?state);
         InvariantNoDecisionsWhenConflict (getF ?state) (getM ?state)
          (currentLevel (getM ?state));
         InvariantNoDecisionsWhenUnit (getF ?state) (getM ?state)
          (currentLevel (getM ?state)) |]
      ==> let state' = applyUnitPropagate ?state
          in InvariantNoDecisionsWhenConflict (getF state') (getM state')
              (currentLevel (getM state')) &
             InvariantNoDecisionsWhenUnit (getF state') (getM state')
              (currentLevel (getM state'))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 16,
                  template_app (template_hole 15, template_var 0)),
                template_app (template_hole 14, template_var 0)),
              template_app (template_hole 13, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 0)),
              template_app (template_hole 15, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 0)),
                template_app (template_hole 15, template_var 0)),
              template_app (template_hole 8, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 9, template_var 0)),
                  template_app (template_hole 6, template_var 0)),
                template_app (template_hole 15, template_var 0)),
              template_app (template_hole 8, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 15, template_var 0)),
                template_app (template_hole 8, template_var 0)),
              template_app
               (template_hole 4,
                template_app (template_hole 8, template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 15, template_var 0)),
                template_app (template_hole 8, template_var 0)),
              template_app
               (template_hole 4,
                template_app (template_hole 8, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             t_empty)
           ))),
    ("UnitPropagate.InvariantGetReasonIsReasonAfterApplyUnitPropagate",
     "[| InvariantWatchListsContainOnlyClausesFromF (getWatchList ?state)
          (getF ?state);
         InvariantWatchListsUniq (getWatchList ?state);
         InvariantWatchListsCharacterization (getWatchList ?state)
          (getWatch1 ?state) (getWatch2 ?state);
         InvariantWatchesEl (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantConflictFlagCharacterization (getConflictFlag ?state)
          (getF ?state) (getM ?state);
         InvariantUniqQ (getQ ?state);
         InvariantGetReasonIsReason (getReason ?state) (getF ?state)
          (getM ?state) (set (getQ ?state));
         getQ ?state ~= []; ~ getConflictFlag ?state |]
      ==> let state' = applyUnitPropagate ?state
          in InvariantGetReasonIsReason (getReason state') (getF state')
              (getM state') (set (getQ state'))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app (template_hole 19, template_var 0)),
              template_app (template_hole 18, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 17,
              template_app (template_hole 19, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 16,
                  template_app (template_hole 19, template_var 0)),
                template_app (template_hole 15, template_var 0)),
              template_app (template_hole 14, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 13,
                  template_app (template_hole 18, template_var 0)),
                template_app (template_hole 15, template_var 0)),
              template_app (template_hole 14, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 11, template_var 0)),
                template_app (template_hole 18, template_var 0)),
              template_app (template_hole 10, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 0)),
                  template_app (template_hole 18, template_var 0)),
                template_app (template_hole 10, template_var 0)),
              template_app
               (template_hole 5,
                template_app (template_hole 8, template_var 0)))
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 8, template_var 0),
              template_hole 2)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 11, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             t_empty)
           ))),
    ("UnitPropagate.InvariantWatchCharacterizationAfterApplyUnitPropagate",
     "[| InvariantConsistent (getM ?state); InvariantUniq (getM ?state);
         InvariantWatchListsContainOnlyClausesFromF (getWatchList ?state)
          (getF ?state);
         InvariantWatchListsUniq (getWatchList ?state);
         InvariantWatchListsCharacterization (getWatchList ?state)
          (getWatch1 ?state) (getWatch2 ?state);
         InvariantWatchesEl (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchesDiffer (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchCharacterization (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state) (getM ?state);
         InvariantQCharacterization (getConflictFlag ?state) (getQ ?state)
          (getF ?state) (getM ?state);
         getQ ?state ~= []; ~ getConflictFlag ?state |]
      ==> let state' = applyUnitPropagate ?state
          in InvariantWatchCharacterization (getF state') (getWatch1 state')
              (getWatch2 state') (getM state')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 20,
              template_app (template_hole 19, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 18,
              template_app (template_hole 19, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app (template_hole 16, template_var 0)),
              template_app (template_hole 15, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 14,
              template_app (template_hole 16, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 13,
                  template_app (template_hole 16, template_var 0)),
                template_app (template_hole 12, template_var 0)),
              template_app (template_hole 11, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 15, template_var 0)),
                template_app (template_hole 12, template_var 0)),
              template_app (template_hole 11, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 15, template_var 0)),
                template_app (template_hole 12, template_var 0)),
              template_app (template_hole 11, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 15, template_var 0)),
                  template_app (template_hole 12, template_var 0)),
                template_app (template_hole 11, template_var 0)),
              template_app (template_hole 19, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 0)),
                  template_app (template_hole 5, template_var 0)),
                template_app (template_hole 15, template_var 0)),
              template_app (template_hole 19, template_var 0))
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 5, template_var 0),
              template_hole 2)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             t_empty)
           ))),
    ("UnitPropagate.InvariantConflictFlagCharacterizationAfterApplyUnitPropagate",
     "[| InvariantConsistent (getM ?state); InvariantUniq (getM ?state);
         InvariantWatchListsContainOnlyClausesFromF (getWatchList ?state)
          (getF ?state);
         InvariantWatchListsUniq (getWatchList ?state);
         InvariantWatchListsCharacterization (getWatchList ?state)
          (getWatch1 ?state) (getWatch2 ?state);
         InvariantWatchesEl (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchesDiffer (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchCharacterization (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state) (getM ?state);
         InvariantQCharacterization (getConflictFlag ?state) (getQ ?state)
          (getF ?state) (getM ?state);
         InvariantConflictFlagCharacterization (getConflictFlag ?state)
          (getF ?state) (getM ?state);
         ~ getConflictFlag ?state; getQ ?state ~= [] |]
      ==> let state' = applyUnitPropagate ?state
          in InvariantConflictFlagCharacterization (getConflictFlag state')
              (getF state') (getM state')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 21,
              template_app (template_hole 20, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 19,
              template_app (template_hole 20, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app (template_hole 17, template_var 0)),
              template_app (template_hole 16, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 15,
              template_app (template_hole 17, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 14,
                  template_app (template_hole 17, template_var 0)),
                template_app (template_hole 13, template_var 0)),
              template_app (template_hole 12, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app (template_hole 16, template_var 0)),
                template_app (template_hole 13, template_var 0)),
              template_app (template_hole 12, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 16, template_var 0)),
                template_app (template_hole 13, template_var 0)),
              template_app (template_hole 12, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 16, template_var 0)),
                  template_app (template_hole 13, template_var 0)),
                template_app (template_hole 12, template_var 0)),
              template_app (template_hole 20, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_var 0)),
                  template_app (template_hole 6, template_var 0)),
                template_app (template_hole 16, template_var 0)),
              template_app (template_hole 20, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 7, template_var 0)),
                template_app (template_hole 16, template_var 0)),
              template_app (template_hole 20, template_var 0))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 7, template_var 0))
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 6, template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             t_empty)
           ))),
    ("UnitPropagate.InvariantQCharacterizationAfterApplyUnitPropagate",
     "[| InvariantConsistent (getM ?state);
         InvariantWatchListsContainOnlyClausesFromF (getWatchList ?state)
          (getF ?state);
         InvariantWatchListsUniq (getWatchList ?state);
         InvariantWatchListsCharacterization (getWatchList ?state)
          (getWatch1 ?state) (getWatch2 ?state);
         InvariantWatchesEl (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchesDiffer (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchCharacterization (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state) (getM ?state);
         InvariantConflictFlagCharacterization (getConflictFlag ?state)
          (getF ?state) (getM ?state);
         InvariantQCharacterization (getConflictFlag ?state) (getQ ?state)
          (getF ?state) (getM ?state);
         InvariantUniqQ (getQ ?state); getQ ?state ~= [];
         ~ getConflictFlag ?state |]
      ==> let state'' = applyUnitPropagate ?state
          in InvariantQCharacterization (getConflictFlag state'')
              (getQ state'') (getF state'') (getM state'')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 21,
              template_app (template_hole 20, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app (template_hole 18, template_var 0)),
              template_app (template_hole 17, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 16,
              template_app (template_hole 18, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 18, template_var 0)),
                template_app (template_hole 14, template_var 0)),
              template_app (template_hole 13, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 17, template_var 0)),
                template_app (template_hole 14, template_var 0)),
              template_app (template_hole 13, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app (template_hole 17, template_var 0)),
                template_app (template_hole 14, template_var 0)),
              template_app (template_hole 13, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 17, template_var 0)),
                  template_app (template_hole 14, template_var 0)),
                template_app (template_hole 13, template_var 0)),
              template_app (template_hole 20, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 0)),
                template_app (template_hole 17, template_var 0)),
              template_app (template_hole 20, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 8, template_var 0)),
                  template_app (template_hole 6, template_var 0)),
                template_app (template_hole 17, template_var 0)),
              template_app (template_hole 20, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 5,
              template_app (template_hole 6, template_var 0))
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 6, template_var 0),
              template_hole 2)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 8, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             t_empty)
           ))),
    ("UnitPropagate.InvariantEquivalentZLAfterExhaustiveUnitPropagate",
     "[| exhaustiveUnitPropagate_dom ?state;
         InvariantConsistent (getM ?state); InvariantUniq (getM ?state);
         InvariantEquivalentZL (getF ?state) (getM ?state) ?Phi;
         InvariantWatchListsContainOnlyClausesFromF (getWatchList ?state)
          (getF ?state);
         InvariantWatchListsUniq (getWatchList ?state);
         InvariantWatchListsCharacterization (getWatchList ?state)
          (getWatch1 ?state) (getWatch2 ?state);
         InvariantWatchesEl (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchesDiffer (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchCharacterization (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state) (getM ?state);
         InvariantConflictFlagCharacterization (getConflictFlag ?state)
          (getF ?state) (getM ?state);
         InvariantQCharacterization (getConflictFlag ?state) (getQ ?state)
          (getF ?state) (getM ?state);
         InvariantUniqQ (getQ ?state) |]
      ==> let state' = exhaustiveUnitPropagate ?state
          in InvariantEquivalentZL (getF state') (getM state') ?Phi",
     template_implication
      ([template_predicate
         (template_app (template_hole 21, template_var 1)),
        template_predicate
         (
            template_app
             (template_hole 20,
              template_app (template_hole 19, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 18,
              template_app (template_hole 19, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 17,
                  template_app (template_hole 16, template_var 1)),
                template_app (template_hole 19, template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app (template_hole 14, template_var 1)),
              template_app (template_hole 16, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 13,
              template_app (template_hole 14, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 14, template_var 1)),
                template_app (template_hole 11, template_var 1)),
              template_app (template_hole 10, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 16, template_var 1)),
                template_app (template_hole 11, template_var 1)),
              template_app (template_hole 10, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 16, template_var 1)),
                template_app (template_hole 11, template_var 1)),
              template_app (template_hole 10, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 16, template_var 1)),
                  template_app (template_hole 11, template_var 1)),
                template_app (template_hole 10, template_var 1)),
              template_app (template_hole 19, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 1)),
                template_app (template_hole 16, template_var 1)),
              template_app (template_hole 19, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 5, template_var 1)),
                  template_app (template_hole 3, template_var 1)),
                template_app (template_hole 16, template_var 1)),
              template_app (template_hole 19, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 3, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             t_empty)
           ))),
    ("UnitPropagate.exhaustiveUnitPropagateTermination",
     "[| InvariantUniq (getM ?state); InvariantConsistent (getM ?state);
         InvariantWatchListsContainOnlyClausesFromF (getWatchList ?state)
          (getF ?state);
         InvariantWatchListsUniq (getWatchList ?state);
         InvariantWatchListsCharacterization (getWatchList ?state)
          (getWatch1 ?state) (getWatch2 ?state);
         InvariantWatchesEl (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchesDiffer (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchCharacterization (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state) (getM ?state);
         InvariantConflictFlagCharacterization (getConflictFlag ?state)
          (getF ?state) (getM ?state);
         InvariantQCharacterization (getConflictFlag ?state) (getQ ?state)
          (getF ?state) (getM ?state);
         InvariantUniqQ (getQ ?state);
         InvariantVarsM (getM ?state) ?F0.0 ?Vbl;
         InvariantVarsQ (getQ ?state) ?F0.0 ?Vbl;
         InvariantVarsF (getF ?state) ?F0.0 ?Vbl; finite ?Vbl |]
      ==> exhaustiveUnitPropagate_dom ?state",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 22,
              template_app (template_hole 21, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 20,
              template_app (template_hole 21, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app (template_hole 18, template_var 2)),
              template_app (template_hole 17, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 16,
              template_app (template_hole 18, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 18, template_var 2)),
                template_app (template_hole 14, template_var 2)),
              template_app (template_hole 13, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 17, template_var 2)),
                template_app (template_hole 14, template_var 2)),
              template_app (template_hole 13, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app (template_hole 17, template_var 2)),
                template_app (template_hole 14, template_var 2)),
              template_app (template_hole 13, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 17, template_var 2)),
                  template_app (template_hole 14, template_var 2)),
                template_app (template_hole 13, template_var 2)),
              template_app (template_hole 21, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 2)),
                template_app (template_hole 17, template_var 2)),
              template_app (template_hole 21, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 8, template_var 2)),
                  template_app (template_hole 6, template_var 2)),
                template_app (template_hole 17, template_var 2)),
              template_app (template_hole 21, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 5,
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 21, template_var 2)),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 6, template_var 2)),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 17, template_var 2)),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 2)))),
    ("UnitPropagate.InvariantGetReasonIsReasonAfterExhaustiveUnitPropagate",
     "[| exhaustiveUnitPropagate_dom ?state;
         InvariantConsistent (getM ?state); InvariantUniq (getM ?state);
         InvariantWatchListsContainOnlyClausesFromF (getWatchList ?state)
          (getF ?state);
         InvariantWatchListsUniq (getWatchList ?state);
         InvariantWatchListsCharacterization (getWatchList ?state)
          (getWatch1 ?state) (getWatch2 ?state);
         InvariantWatchesEl (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchesDiffer (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchCharacterization (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state) (getM ?state);
         InvariantConflictFlagCharacterization (getConflictFlag ?state)
          (getF ?state) (getM ?state);
         InvariantQCharacterization (getConflictFlag ?state) (getQ ?state)
          (getF ?state) (getM ?state);
         InvariantUniqQ (getQ ?state);
         InvariantGetReasonIsReason (getReason ?state) (getF ?state)
          (getM ?state) (set (getQ ?state)) |]
      ==> let state' = exhaustiveUnitPropagate ?state
          in InvariantGetReasonIsReason (getReason state') (getF state')
              (getM state') (set (getQ state'))",
     template_implication
      ([template_predicate
         (template_app (template_hole 23, template_var 0)),
        template_predicate
         (
            template_app
             (template_hole 22,
              template_app (template_hole 21, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 20,
              template_app (template_hole 21, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app (template_hole 18, template_var 0)),
              template_app (template_hole 17, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 16,
              template_app (template_hole 18, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 18, template_var 0)),
                template_app (template_hole 14, template_var 0)),
              template_app (template_hole 13, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 17, template_var 0)),
                template_app (template_hole 14, template_var 0)),
              template_app (template_hole 13, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app (template_hole 17, template_var 0)),
                template_app (template_hole 14, template_var 0)),
              template_app (template_hole 13, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 17, template_var 0)),
                  template_app (template_hole 14, template_var 0)),
                template_app (template_hole 13, template_var 0)),
              template_app (template_hole 21, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 0)),
                template_app (template_hole 17, template_var 0)),
              template_app (template_hole 21, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 8, template_var 0)),
                  template_app (template_hole 6, template_var 0)),
                template_app (template_hole 17, template_var 0)),
              template_app (template_hole 21, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 5,
              template_app (template_hole 6, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 0)),
                  template_app (template_hole 17, template_var 0)),
                template_app (template_hole 21, template_var 0)),
              template_app
               (template_hole 2,
                template_app (template_hole 6, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             t_empty)
           ))),
    ("UnitPropagate.InvariantsVarsAfterApplyUnitPropagate",
     "[| InvariantConsistent (getM ?state); InvariantUniq (getM ?state);
         InvariantWatchesEl (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchListsContainOnlyClausesFromF (getWatchList ?state)
          (getF ?state);
         InvariantWatchListsCharacterization (getWatchList ?state)
          (getWatch1 ?state) (getWatch2 ?state);
         InvariantWatchListsUniq (getWatchList ?state);
         InvariantWatchesDiffer (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchCharacterization (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state) (getM ?state);
         InvariantQCharacterization False (getQ ?state) (getF ?state)
          (getM ?state);
         getQ ?state ~= []; ~ getConflictFlag ?state;
         InvariantVarsM (getM ?state) ?F0.0 ?Vbl;
         InvariantVarsQ (getQ ?state) ?F0.0 ?Vbl;
         InvariantVarsF (getF ?state) ?F0.0 ?Vbl |]
      ==> let state' = applyUnitPropagate ?state
          in InvariantVarsM (getM state') ?F0.0 ?Vbl &
             InvariantVarsQ (getQ state') ?F0.0 ?Vbl",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 25,
              template_app (template_hole 24, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 23,
              template_app (template_hole 24, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 22,
                  template_app (template_hole 21, template_var 2)),
                template_app (template_hole 20, template_var 2)),
              template_app (template_hole 19, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app (template_hole 17, template_var 2)),
              template_app (template_hole 21, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 16,
                  template_app (template_hole 17, template_var 2)),
                template_app (template_hole 20, template_var 2)),
              template_app (template_hole 19, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 15,
              template_app (template_hole 17, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 14,
                  template_app (template_hole 21, template_var 2)),
                template_app (template_hole 20, template_var 2)),
              template_app (template_hole 19, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 13,
                    template_app (template_hole 21, template_var 2)),
                  template_app (template_hole 20, template_var 2)),
                template_app (template_hole 19, template_var 2)),
              template_app (template_hole 24, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_hole 11),
                  template_app (template_hole 10, template_var 2)),
                template_app (template_hole 21, template_var 2)),
              template_app (template_hole 24, template_var 2))
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 10, template_var 2),
              template_hole 7)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 24, template_var 2)),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 10, template_var 2)),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 21, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             t_empty)
           ))),
    ("UnitPropagate.InvariantsNoDecisionsWhenConflictNorUnitAfterExhaustivePropagate",
     "[| exhaustiveUnitPropagate_dom ?state;
         InvariantConsistent (getM ?state); InvariantUniq (getM ?state);
         InvariantWatchListsContainOnlyClausesFromF (getWatchList ?state)
          (getF ?state);
         InvariantWatchListsUniq (getWatchList ?state);
         InvariantWatchListsCharacterization (getWatchList ?state)
          (getWatch1 ?state) (getWatch2 ?state);
         InvariantWatchesEl (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchesDiffer (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchCharacterization (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state) (getM ?state);
         InvariantConflictFlagCharacterization (getConflictFlag ?state)
          (getF ?state) (getM ?state);
         InvariantQCharacterization (getConflictFlag ?state) (getQ ?state)
          (getF ?state) (getM ?state);
         InvariantUniqQ (getQ ?state);
         InvariantNoDecisionsWhenConflict (getF ?state) (getM ?state)
          (currentLevel (getM ?state));
         InvariantNoDecisionsWhenUnit (getF ?state) (getM ?state)
          (currentLevel (getM ?state)) |]
      ==> let state' = exhaustiveUnitPropagate ?state
          in InvariantNoDecisionsWhenConflict (getF state') (getM state')
              (currentLevel (getM state')) &
             InvariantNoDecisionsWhenUnit (getF state') (getM state')
              (currentLevel (getM state'))",
     template_implication
      ([template_predicate
         (template_app (template_hole 24, template_var 0)),
        template_predicate
         (
            template_app
             (template_hole 23,
              template_app (template_hole 22, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 21,
              template_app (template_hole 22, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app (template_hole 19, template_var 0)),
              template_app (template_hole 18, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 17,
              template_app (template_hole 19, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 16,
                  template_app (template_hole 19, template_var 0)),
                template_app (template_hole 15, template_var 0)),
              template_app (template_hole 14, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 13,
                  template_app (template_hole 18, template_var 0)),
                template_app (template_hole 15, template_var 0)),
              template_app (template_hole 14, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 18, template_var 0)),
                template_app (template_hole 15, template_var 0)),
              template_app (template_hole 14, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 18, template_var 0)),
                  template_app (template_hole 15, template_var 0)),
                template_app (template_hole 14, template_var 0)),
              template_app (template_hole 22, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 0)),
                template_app (template_hole 18, template_var 0)),
              template_app (template_hole 22, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 9, template_var 0)),
                  template_app (template_hole 7, template_var 0)),
                template_app (template_hole 18, template_var 0)),
              template_app (template_hole 22, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 7, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 18, template_var 0)),
                template_app (template_hole 22, template_var 0)),
              template_app
               (template_hole 4,
                template_app (template_hole 22, template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 18, template_var 0)),
                template_app (template_hole 22, template_var 0)),
              template_app
               (template_hole 4,
                template_app (template_hole 22, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             t_empty)
           ))),
    ("UnitPropagate.InvariantsAfterExhaustiveUnitPropagate",
     "[| exhaustiveUnitPropagate_dom ?state;
         InvariantConsistent (getM ?state); InvariantUniq (getM ?state);
         InvariantWatchListsContainOnlyClausesFromF (getWatchList ?state)
          (getF ?state);
         InvariantWatchListsUniq (getWatchList ?state);
         InvariantWatchListsCharacterization (getWatchList ?state)
          (getWatch1 ?state) (getWatch2 ?state);
         InvariantWatchesEl (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchesDiffer (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state);
         InvariantWatchCharacterization (getF ?state) (getWatch1 ?state)
          (getWatch2 ?state) (getM ?state);
         InvariantConflictFlagCharacterization (getConflictFlag ?state)
          (getF ?state) (getM ?state);
         InvariantQCharacterization (getConflictFlag ?state) (getQ ?state)
          (getF ?state) (getM ?state);
         InvariantUniqQ (getQ ?state);
         InvariantVarsQ (getQ ?state) ?F0.0 ?Vbl;
         InvariantVarsM (getM ?state) ?F0.0 ?Vbl;
         InvariantVarsF (getF ?state) ?F0.0 ?Vbl |]
      ==> let state' = exhaustiveUnitPropagate ?state
          in InvariantConsistent (getM state') &
             InvariantUniq (getM state') &
             InvariantWatchListsContainOnlyClausesFromF
              (getWatchList state') (getF state') &
             InvariantWatchListsUniq (getWatchList state') &
             InvariantWatchListsCharacterization (getWatchList state')
              (getWatch1 state') (getWatch2 state') &
             InvariantWatchesEl (getF state') (getWatch1 state')
              (getWatch2 state') &
             InvariantWatchesDiffer (getF state') (getWatch1 state')
              (getWatch2 state') &
             InvariantWatchCharacterization (getF state') (getWatch1 state')
              (getWatch2 state') (getM state') &
             InvariantConflictFlagCharacterization (getConflictFlag state')
              (getF state') (getM state') &
             InvariantQCharacterization (getConflictFlag state')
              (getQ state') (getF state') (getM state') &
             InvariantUniqQ (getQ state') &
             InvariantVarsQ (getQ state') ?F0.0 ?Vbl &
             InvariantVarsM (getM state') ?F0.0 ?Vbl &
             InvariantVarsF (getF state') ?F0.0 ?Vbl",
     template_implication
      ([template_predicate
         (template_app (template_hole 24, template_var 2)),
        template_predicate
         (
            template_app
             (template_hole 23,
              template_app (template_hole 22, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 21,
              template_app (template_hole 22, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app (template_hole 19, template_var 2)),
              template_app (template_hole 18, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 17,
              template_app (template_hole 19, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 16,
                  template_app (template_hole 19, template_var 2)),
                template_app (template_hole 15, template_var 2)),
              template_app (template_hole 14, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 13,
                  template_app (template_hole 18, template_var 2)),
                template_app (template_hole 15, template_var 2)),
              template_app (template_hole 14, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 18, template_var 2)),
                template_app (template_hole 15, template_var 2)),
              template_app (template_hole 14, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 18, template_var 2)),
                  template_app (template_hole 15, template_var 2)),
                template_app (template_hole 14, template_var 2)),
              template_app (template_hole 22, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 2)),
                template_app (template_hole 18, template_var 2)),
              template_app (template_hole 22, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 9, template_var 2)),
                  template_app (template_hole 7, template_var 2)),
                template_app (template_hole 18, template_var 2)),
              template_app (template_hole 22, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 7, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 7, template_var 2)),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 22, template_var 2)),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 18, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             t_empty)
           )))]
