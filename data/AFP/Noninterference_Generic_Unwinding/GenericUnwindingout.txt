Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.GenericUnwindingMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.GenericUnwindingMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.GenericUnwindingMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.GenericUnwindingMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.145s elapsed time, 0.593s cpu time, 0.041s GC time
Loading theory "List_Interleaving.ListInterleaving" (required by "Draft.GenericUnwindingMoreTemplates" via "Draft.GenericUnwinding" via "Noninterference_Ipurge_Unwinding.DeterministicProcesses" via "Noninterference_Ipurge_Unwinding.IpurgeUnwinding")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.192s elapsed time, 0.786s cpu time, 0.041s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.GenericUnwindingMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.311s elapsed time, 1.237s cpu time, 0.126s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.GenericUnwindingMoreTemplates" via "Draft.ExtrEqs")
Found termination order:
  "(%p. length (snd (snd (snd p)))) <*mlex*>
   (%p. length (fst (snd (snd p)))) <*mlex*> {}"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.BigO"
### 1.001s elapsed time, 3.799s cpu time, 0.877s GC time
Loading theory "Noninterference_CSP.CSPNoninterference" (required by "Draft.GenericUnwindingMoreTemplates" via "Draft.GenericUnwinding" via "Noninterference_Ipurge_Unwinding.DeterministicProcesses" via "Noninterference_Ipurge_Unwinding.IpurgeUnwinding")
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order:
  "(%p. length (snd (snd (snd p)))) <*mlex*>
   (%p. length (fst (snd (snd p)))) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.095s elapsed time, 4.183s cpu time, 0.867s GC time
Found termination order: "size <*mlex*> {}"
### theory "List_Interleaving.ListInterleaving"
### 1.307s elapsed time, 4.972s cpu time, 0.952s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Noninterference_CSP.CSPNoninterference"
### 0.524s elapsed time, 1.565s cpu time, 0.173s GC time
Loading theory "Noninterference_Ipurge_Unwinding.IpurgeUnwinding" (required by "Draft.GenericUnwindingMoreTemplates" via "Draft.GenericUnwinding" via "Noninterference_Ipurge_Unwinding.DeterministicProcesses")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.077s elapsed time, 6.948s cpu time, 1.206s GC time
Loading theory "Draft.Templates" (required by "Draft.GenericUnwindingMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.053s elapsed time, 0.127s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.GenericUnwindingMoreTemplates")
consts
  sources :: "('d * 'd) set => ('a => 'd) => 'd => 'a list => 'd set"
consts
  ipurge_tr_rev :: "('d * 'd) set => ('a => 'd) => 'd => 'a list => 'a list"
consts
  sources_aux ::
    "('d * 'd) set => ('a => 'd) => 'd set => 'a list => 'd set"
consts
  ipurge_tr_rev_aux ::
    "('d * 'd) set => ('a => 'd) => 'd set => 'a list => 'a list"
consts
  offset :: "nat => 'a => 'a list => nat option"
### theory "Noninterference_Ipurge_Unwinding.IpurgeUnwinding"
### 0.841s elapsed time, 1.816s cpu time, 0.245s GC time
Loading theory "Noninterference_Ipurge_Unwinding.DeterministicProcesses" (required by "Draft.GenericUnwindingMoreTemplates" via "Draft.GenericUnwinding")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.569s elapsed time, 1.242s cpu time, 0.217s GC time
### theory "Noninterference_Ipurge_Unwinding.DeterministicProcesses"
### 0.134s elapsed time, 0.285s cpu time, 0.087s GC time
Loading theory "Draft.GenericUnwinding" (required by "Draft.GenericUnwindingMoreTemplates")
Proofs for inductive predicate(s) "rel_induct_auxp"
  Proving monotonicity ...
### theory "Draft.GenericUnwinding"
### 0.906s elapsed time, 1.515s cpu time, 0.851s GC time
Loading theory "Draft.GenericUnwindingMoreTemplates"
val templateLemmas =
   [("GenericUnwinding.counterexample_next_events_2",
     "(?x : next_events P\<^sub>c ?xs) = (?xs @ [?x] : T\<^sub>c)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1),
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1))),
         template_hole 0))),
    ("GenericUnwinding.counterexample_next_events_1",
     "(?x : next_events (ts_process T\<^sub>c) ?xs) =
      (?xs @ [?x] : T\<^sub>c)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1),
         template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_hole 4)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_hole 4))),
    ("GenericUnwinding.ipurge_tr_aux_single_event",
     "ipurge_tr_aux ?I ?D ?U [?x] =
      (if EX v:?U. (v, ?D ?x) : ?I then [] else [?x])",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2),
           template_var 1),
         template_app
          (template_app (template_hole 5, template_var 0),
           template_hole 4)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1), t_empty)),
           template_hole 4),
         template_app
          (template_app (template_hole 5, template_var 0),
           template_hole 4)))),
    ("GenericUnwinding.rel_induct_auxp_rel_induct_aux_eq",
     "rel_induct_auxp ?P (%x xa. (x, xa) : ?I) ?D =
      (%x xa xb. (x, xa, xb) : rel_induct_aux ?P ?I ?D)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 2), t_empty),
         template_var 0),
       t_empty)),
    ("GenericUnwinding.rel_induct_subset",
     "[| view_partition ?P ?D ?R; weakly_step_consistent ?P ?D ?R;
         locally_respects ?P ?I ?D ?R |]
      ==> rel_induct ?P ?I ?D ?u <= ?R ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 1),
                template_var 3),
              template_var 2)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1),
             template_var 3),
           template_var 0),
         template_app (template_var 2, template_var 0)))),
    ("GenericUnwinding.unaffected_domains_subset",
     "[| ?U <= range ?D; ?U ~= {} |]
      ==> unaffected_domains ?I ?D ?U ?xs
          <= range ?D Int (- ?I) `` range ?D",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app (template_hole 8, template_var 2),
            template_hole 7)),
        template_negation
         (template_equation (template_var 3, template_hole 4))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_var 2),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 8, template_var 2),
               template_hole 7)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app
              (template_app (template_hole 8, template_var 2),
               template_hole 7)))))),
    ("GenericUnwinding.ipurge_tr_aux_cons",
     "ipurge_tr_aux ?I ?D ?U (?x # ?xs) =
      (if EX v:?U. (v, ?D ?x) : ?I
       then ipurge_tr_aux ?I ?D (insert (?D ?x) ?U) ?xs
       else ?x # ipurge_tr_aux ?I ?D ?U ?xs)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_var 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2), t_empty)),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_var 4),
                 template_var 3),
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_var 3, template_var 1)),
                 template_var 2)),
             template_var 0)),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 0))))),
    ("GenericUnwinding.d_generic_unwinding",
     "[| deterministic ?P; view_partition ?P ?D ?R;
         d_weakly_future_consistent ?P ?I ?D ?R;
         weakly_step_consistent ?P ?D ?R; locally_respects ?P ?I ?D ?R |]
      ==> secure ?P ?I ?D",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 0),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 0),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0),
             template_var 2)
           ))),
    ("GenericUnwinding.generic_unwinding",
     "[| ref_union_closed ?P; view_partition ?P ?D ?R;
         weakly_future_consistent ?P ?I ?D ?R;
         weakly_step_consistent ?P ?D ?R; locally_respects ?P ?I ?D ?R |]
      ==> secure ?P ?I ?D",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 0),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 0),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0),
             template_var 2)
           ))),
    ("GenericUnwinding.ts_generic_unwinding",
     "[| trace_set ?T; view_partition (ts_process ?T) ?D ?R;
         d_weakly_future_consistent (ts_process ?T) ?I ?D ?R;
         weakly_step_consistent (ts_process ?T) ?D ?R;
         locally_respects (ts_process ?T) ?I ?D ?R |]
      ==> secure (ts_process ?T) ?I ?D",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 4, template_var 3)),
                  template_var 0),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 4, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 1,
                    template_app (template_hole 4, template_var 3)),
                  template_var 0),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 4, template_var 3)),
               template_var 0),
             template_var 2)
           ))),
    ("GenericUnwinding.ruc_wfc_lr_failures_1",
     "[| ref_union_closed ?P; weakly_future_consistent ?P ?I ?D ?R;
         locally_respects ?P ?I ?D ?R; (?xs @ [?y], ?Y) : failures ?P |]
      ==> (?xs, {x: ?Y. (?D ?y, ?D x) ~: ?I}) : failures ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 13, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 9, template_var 2),
                      template_app
                       (template_app (template_hole 8, template_var 1),
                        template_hole 7))),
                  template_var 0)),
              template_app (template_hole 6, template_var 6))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_var 2),
                 template_app (template_hole 5, t_empty))),
             template_app (template_hole 6, template_var 6))
           ))),
    ("GenericUnwinding.ruc_wfc_lr_failures_2",
     "[| ref_union_closed ?P; weakly_future_consistent ?P ?I ?D ?R;
         locally_respects ?P ?I ?D ?R; (?xs, ?Z) : failures ?P;
         ?xs @ [?y] : traces ?P |]
      ==> (?xs @ [?y], {x: ?Z. (?D ?y, ?D x) ~: ?I}) : failures ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 15, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 14, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 2),
                  template_var 1)),
              template_app (template_hole 11, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_app
                   (template_app (template_hole 8, template_var 0),
                    template_hole 7))),
              template_app (template_hole 6, template_var 6))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app
                  (template_hole 12,
                   template_app
                    (template_app (template_hole 9, template_var 2),
                     template_app
                      (template_app (template_hole 8, template_var 0),
                       template_hole 7))),
                 template_app (template_hole 5, t_empty))),
             template_app (template_hole 11, template_var 6))
           ))),
    ("GenericUnwinding.ruc_wfc_failures",
     "[| ref_union_closed ?P; weakly_future_consistent ?P ?I ?D ?R;
         ?U <= range ?D Int (- ?I) `` range ?D; ?U ~= {};
         ALL u:?U. (?xs, ?xs') : ?R u; (?xs, ?X) : failures ?P |]
      ==> (?xs', ?X Int ?D -` ?U) : failures ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 18, template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 17, template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app
             (template_hole 15,
              template_app
               (template_app (template_hole 14, template_var 5),
                template_hole 13)),
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 6)),
              template_app
               (template_app (template_hole 14, template_var 5),
                template_hole 13)))),
        template_negation
         (template_equation (template_var 3, template_hole 8)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 0)),
              template_app (template_hole 2, template_var 7))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 3)))),
             template_app (template_hole 2, template_var 7))
           ))),
    ("GenericUnwinding.gu_condition_imply_secure_1",
     "[| ref_union_closed ?P; view_partition ?P ?D ?R;
         weakly_future_consistent ?P ?I ?D ?R;
         weakly_step_consistent ?P ?D ?R; locally_respects ?P ?I ?D ?R;
         (?xs @ ?y # ?ys, ?Y) : failures ?P |]
      ==> (?xs @ ipurge_tr ?I ?D (?D ?y) ?ys,
           ipurge_ref ?I ?D (?D ?y) ?ys ?Y)
          : failures ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 7),
                  template_var 4),
                template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 7),
                  template_var 4),
                template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 3),
                      template_app
                       (template_app (template_hole 3, template_var 2),
                        template_var 1))),
                  template_var 0)),
              template_app (template_hole 2, template_var 7))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 3),
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 1, template_var 4),
                           template_var 6),
                         template_app (template_var 6, template_var 2)),
                       template_var 1))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 4),
                         template_var 6),
                       template_app (template_var 6, template_var 2)),
                     template_var 1),
                   template_var 0))),
             template_app (template_hole 2, template_var 7))
           ))),
    ("GenericUnwinding.gu_condition_imply_secure_2",
     "[| ref_union_closed ?P; view_partition ?P ?D ?R;
         weakly_future_consistent ?P ?I ?D ?R;
         weakly_step_consistent ?P ?D ?R; locally_respects ?P ?I ?D ?R;
         ?xs @ [?y] : traces ?P; (?xs @ ?zs, ?Z) : failures ?P |]
      ==> (?xs @ ?y # ipurge_tr ?I ?D (?D ?y) ?zs,
           ipurge_ref ?I ?D (?D ?y) ?zs ?Z)
          : failures ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 7),
                  template_var 4),
                template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 7),
                  template_var 4),
                template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_app
                   (template_app (template_hole 7, template_var 2),
                    template_hole 6))),
              template_app (template_hole 5, template_var 7))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 8, template_var 3),
                      template_var 1)),
                  template_var 0)),
              template_app (template_hole 2, template_var 7))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 8, template_var 3),
                     template_app
                      (template_app (template_hole 7, template_var 2),
                       template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 1, template_var 4),
                             template_var 6),
                           template_app (template_var 6, template_var 2)),
                         template_var 1)))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 4),
                         template_var 6),
                       template_app (template_var 6, template_var 2)),
                     template_var 1),
                   template_var 0))),
             template_app (template_hole 2, template_var 7))
           ))),
    ("GenericUnwinding.gu_condition_imply_secure_aux",
     "[| view_partition ?P ?D ?R; weakly_future_consistent ?P ?I ?D ?R;
         weakly_step_consistent ?P ?D ?R; locally_respects ?P ?I ?D ?R;
         ?U <= range ?D; ?U ~= {}; ?xs @ ?ys : traces ?P;
         !!u. u : unaffected_domains ?I ?D ?U [] ==> (?xs, ?xs') : ?R u;
         ?u : unaffected_domains ?I ?D ?U ?ys |]
      ==> (?xs @ ?ys, ?xs' @ ipurge_tr_aux ?I ?D ?U ?ys) : ?R ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 19, template_var 8),
                template_var 7),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 18, template_var 8),
                  template_var 5),
                template_var 7),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 17, template_var 8),
                template_var 7),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 16, template_var 8),
                  template_var 5),
                template_var 7),
              template_var 6)
            ),
        template_inequation
         (less_equals, template_var 4,
          template_app
           (template_app (template_hole 14, template_var 7),
            template_hole 13)),
        template_negation
         (template_equation (template_var 4, template_hole 10)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 2)),
              template_app (template_hole 7, template_var 8))
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 5),
                    template_var 7),
                  template_var 4),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 8, template_var 3),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 8, template_var 1),
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 5),
                         template_var 7),
                       template_var 4),
                     template_var 2)))),
             template_app (template_var 6, template_var 0))
           )))]:
   (string * thm * template) list
### theory "Draft.GenericUnwindingMoreTemplates"
### 0.305s elapsed time, 0.399s cpu time, 0.000s GC time
val it = (): unit
