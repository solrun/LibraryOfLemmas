   [("Semantics_OpenFlow.OF_match_linear_ne_Undefined",
     "OF_match_linear ?\<gamma> ?ft ?p ~= Undefined",
     template_negation
      (
         template_equation
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0),
           template_hole 0)
         )),
    ("Semantics_OpenFlow.check_no_overlap_alt",
     "check_no_overlap ?\<gamma> ?ft = check_no_overlap2 ?\<gamma> ?ft",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Semantics_OpenFlow.check_no_overlapI",
     "no_overlaps ?\<gamma> ?t ==> check_no_overlap ?\<gamma> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Semantics_OpenFlow.overlap_sort_invar",
     "check_no_overlap ?\<gamma> (sort_descending_key ?k ?ft) =
      check_no_overlap ?\<gamma> ?ft",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2), template_var 0))),
    ("Semantics_OpenFlow.no_overlap_ConsI",
     "check_no_overlap2 ?\<gamma> (?x # ?xs) ==>
      check_no_overlap2 ?\<gamma> ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("Semantics_OpenFlow.no_overlaps_append",
     "no_overlaps ?\<gamma> (?x @ ?y) ==> no_overlaps ?\<gamma> ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("Semantics_OpenFlow.no_overlap_not_unefined",
     "check_no_overlap ?\<gamma> ?ft ==>
      OF_same_priority_match2 ?\<gamma> ?ft ?p ~= Undefined",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("Semantics_OpenFlow.no_overlaps_not_unefined",
     "no_overlaps ?\<gamma> ?ft ==>
      OF_priority_match ?\<gamma> ?ft ?p ~= Undefined",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("Semantics_OpenFlow.no_overlapsI",
     "[| check_no_overlap ?\<gamma> ?t; distinct ?t |]
      ==> no_overlaps ?\<gamma> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Semantics_OpenFlow.OF_lm_noa_none_iff",
     "(OF_match_linear ?\<gamma> ?ft ?p = NoAction) =
      (ALL e:set ?ft. ~ ?\<gamma> (ofe_fields e) ?p)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 4),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         t_empty))),
    ("Semantics_OpenFlow.OF_match_eq2",
     "check_no_overlap ?\<gamma> ?ft ==>
      OF_same_priority_match2 ?\<gamma> ?ft ?p =
      OF_match_linear ?\<gamma> (sort_descending_key ofe_prio ?ft) ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)))),
    ("Semantics_OpenFlow.OF_eq_sort",
     "no_overlaps ?\<gamma> ?f ==>
      OF_priority_match ?\<gamma> ?f ?p =
      OF_match_linear ?\<gamma> (sort_descending_key ofe_prio ?f) ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)))),
    ("Semantics_OpenFlow.OF_lm_noa_none",
     "OF_match_linear ?\<gamma> ?ft ?p = NoAction ==>
      ALL e:set ?ft. ~ ?\<gamma> (ofe_fields e) ?p",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1),
            template_var 0),
          template_hole 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             t_empty)
           ))),
    ("Semantics_OpenFlow.unmatching_insert_agnostic",
     "~ ?\<gamma> (ofe_fields ?a) ?p ==>
      OF_same_priority_match2 ?\<gamma> (?a # ?ft) ?p =
      OF_same_priority_match2 ?\<gamma> ?ft ?p",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_var 3,
                    template_app (template_hole 3, template_var 2)),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0),
           template_var 1)))),
    ("Semantics_OpenFlow.filter_singleton",
     "filter ?f ?s = [?y] ==> ?f ?y & ?y : set ?s",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, t_empty), template_var 1),
          template_app
           (template_app (template_hole 4, template_var 0),
            template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_var 2, template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Semantics_OpenFlow.OF_match_linear_append",
     "OF_match_linear ?\<gamma> (?a @ ?b) ?p =
      (case OF_match_linear ?\<gamma> ?a ?p of Action a => Action a
       | NoAction => OF_match_linear ?\<gamma> ?b ?p
       | Undefined => Undefined)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 3),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, t_empty),
             template_app
              (template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 1),
               template_var 0)),
           template_hole 0),
         template_app
          (template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2),
           template_var 0)))),
    ("Semantics_OpenFlow.OF_eq",
     "[| no_overlaps ?\<gamma> ?f; sorted_descending (map ofe_prio ?f) |]
      ==> OF_match_linear ?\<gamma> ?f ?p =
          OF_priority_match ?\<gamma> ?f ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Semantics_OpenFlow.OF_match_eq",
     "[| sorted_descending (map ofe_prio ?ft);
         check_no_overlap ?\<gamma> ?ft |]
      ==> OF_same_priority_match2 ?\<gamma> ?ft ?p =
          OF_match_linear ?\<gamma> ?ft ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Semantics_OpenFlow.OF_spm3_noa_none",
     "[| no_overlaps ?\<gamma> ?ft;
         OF_priority_match ?\<gamma> ?ft ?p = NoAction |]
      ==> ALL e:set ?ft. ~ ?\<gamma> (ofe_fields e) ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1),
            template_var 0),
          template_hole 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             t_empty)
           ))),
    ("Semantics_OpenFlow.set_eq_rule",
     "[| !!x. x : ?a ==> x : ?b; !!x. x : ?b ==> x : ?a |] ==> ?a = ?b",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Semantics_OpenFlow.OF_spm3_get_fe",
     "OF_priority_match ?\<gamma> ?ft ?p = Action ?a ==>
      EX fe.
         ofe_action fe = ?a &
         fe : set ?ft & OF_priority_match_ana ?\<gamma> ?ft ?p = Action fe",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 10, template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 9, template_var 0))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("Semantics_OpenFlow.OF_match_linear_match_allsameaction",
     "[| ?gr : set ?oms; ?\<gamma> ?gr ?p = True |]
      ==> OF_match_linear ?\<gamma>
           (map (%x. split3 OFEntry (?pri, x, ?act)) ?oms) ?p =
          Action ?act",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 5),
              template_app (template_hole 10, template_var 4))
            ),
        template_equation
         (template_app
           (template_app (template_var 3, template_var 5), template_var 2),
          template_hole 8)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, template_var 3),
             template_app
              (template_app (template_hole 5, t_empty), template_var 4)),
           template_var 2),
         template_app (template_hole 0, template_var 0)))),
    ("Semantics_OpenFlow.no_overlaps_ne1",
     "[| no_overlaps ?\<gamma> (?x @ ?a # ?y @ ?b # ?z);
         (EX p. ?\<gamma> (ofe_fields ?a) p) |
         (EX p. ?\<gamma> (ofe_fields ?b) p) |]
      ==> ?a ~= ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 5),
              template_app
               (template_app (template_hole 6, template_var 4),
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_app
                     (template_app (template_hole 5, template_var 1),
                      template_var 0)))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4, template_app (template_hole 3, t_empty)),
              template_app (template_hole 3, t_empty))
            )],
       template_negation
        (template_equation (template_var 3, template_var 1)))),
    ("Semantics_OpenFlow.prio_match_matcher_alt2",
     "(let matching =
             {f: set ?flow_entries. ?\<gamma> (ofe_fields f) ?packet}
       in {f: matching. ALL fo:matching. ofe_prio fo <= ofe_prio f}) =
      set (let matching =
                 filter (%f. ?\<gamma> (ofe_fields f) ?packet) ?flow_entries
           in filter (%f. ALL fo:set matching. ofe_prio fo <= ofe_prio f)
               matching)",
     template_equation
      (template_app
        (template_app
          (template_hole 10, template_app (template_hole 9, t_empty)),
         t_empty),
       template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, t_empty), template_var 2)),
           t_empty)))),
    ("Semantics_OpenFlow.prio_match_matcher_alt",
     "{f: set ?flow_entries.
       ?\<gamma> (ofe_fields f) ?packet &
       (ALL fo:set ?flow_entries.
           ofe_prio f < ofe_prio fo -->
           ~ ?\<gamma> (ofe_fields fo) ?packet)} =
      (let matching =
             {f: set ?flow_entries. ?\<gamma> (ofe_fields f) ?packet}
       in {f: matching. ALL fo:matching. ofe_prio fo <= ofe_prio f})",
     template_equation
      (template_app (template_hole 11, t_empty),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 11, t_empty)),
         t_empty)))]
