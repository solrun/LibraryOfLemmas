   [("LinuxRouter_OpenFlow_Translation.distinct_annotate_rlen",
     "distinct (annotate_rlen ?l)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("LinuxRouter_OpenFlow_Translation.custom_simpset",
     "SMT.fun_app ?f = ?f",
     template_equation
      (template_app (template_hole 0, template_var 0), template_var 0)),
    ("LinuxRouter_OpenFlow_Translation.distinct_fst_annotate_rlen",
     "distinct (map fst (annotate_rlen ?l))",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0)))
         )),
    ("LinuxRouter_OpenFlow_Translation.prefix_match_00",
     "prefix_match_semantics (PrefixMatch 0 0) ?p",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0)),
           template_var 0)
         )),
    ("LinuxRouter_OpenFlow_Translation.annotate_rlen_len",
     "fst (annotate_rlen_code ?r) = length ?r",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("LinuxRouter_OpenFlow_Translation.map_snd_annotate_rlen",
     "map snd (annotate_rlen ?l) = ?l",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("LinuxRouter_OpenFlow_Translation.annotate_rlen_code",
     "annotate_rlen ?s = snd (annotate_rlen_code ?s)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("LinuxRouter_OpenFlow_Translation.lr_of_tran_s1_valid",
     "valid_prefixes ?rt ==> gsfw_valid (lr_of_tran_s1 ?rt)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("LinuxRouter_OpenFlow_Translation.custom_simpset",
     "?f o ?g = (%x. ?f (?g x))",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       t_empty)),
    ("LinuxRouter_OpenFlow_Translation.simple_action_ne",
     "(?b ~= Accept) = (?b = Drop)",
     template_bimplication
      (template_negation
        (template_equation (template_var 0, template_hole 1)),
       template_equation (template_var 0, template_hole 0))),
    ("LinuxRouter_OpenFlow_Translation.simple_action_ne",
     "(?b ~= Drop) = (?b = Accept)",
     template_bimplication
      (template_negation
        (template_equation (template_var 0, template_hole 1)),
       template_equation (template_var 0, template_hole 0))),
    ("LinuxRouter_OpenFlow_Translation.custom_simpset",
     "concat (map ?f ?xs) = List.maps ?f ?xs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("LinuxRouter_OpenFlow_Translation.distinct_simple_match_to_of_match",
     "distinct ?ifs ==> distinct (simple_match_to_of_match ?m ?ifs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("LinuxRouter_OpenFlow_Translation.inj_inj_on",
     "inj ?F ==> inj_on ?F ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("LinuxRouter_OpenFlow_Translation.custom_simpset",
     "set (map ?f ?xs) = ?f ` set ?xs",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("LinuxRouter_OpenFlow_Translation.simple_match_port_alt",
     "simple_match_port ?m ?p =
      (?p : wordinterval_to_set (uncurry WordInterval ?m))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1))))),
    ("LinuxRouter_OpenFlow_Translation.map_snd_apfst",
     "map snd (map (apfst ?x) ?l) = map snd ?l",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("LinuxRouter_OpenFlow_Translation.fst_annotate_rlen",
     "map fst (annotate_rlen ?l) = rev [0..<length ?l]",
     template_equation
      (template_app
        (template_app (template_hole 6, template_hole 5),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("LinuxRouter_OpenFlow_Translation.aux", "?v = Some ?x ==> the ?v = ?x",
     template_implication
      ([template_equation
         (template_var 1, template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("LinuxRouter_OpenFlow_Translation.custom_simpset",
     "set (concat ?xs) = \<Union> (set ` set ?xs)",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("LinuxRouter_OpenFlow_Translation.and_assoc",
     "(?a & ?b & ?c) = ((?a & ?b) & ?c)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("LinuxRouter_OpenFlow_Translation.custom_simpset",
     "map ?f (map ?g ?xs) = map (?f o ?g) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("LinuxRouter_OpenFlow_Translation.sorted_lr_of_tran_s3",
     "sorted_descending (map fst ?f) ==>
      sorted_descending (map fst (lr_of_tran_s3 ?s ?f))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("LinuxRouter_OpenFlow_Translation.custom_simpset",
     "set (List.maps ?f ?a) = (UN a:set ?a. set (?f a))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("LinuxRouter_OpenFlow_Translation.custom_simpset",
     "(?z : ?f ` ?A) = (EX x:?A. ?z = ?f x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), t_empty))),
    ("LinuxRouter_OpenFlow_Translation.lr_of_tran_sorted_descending",
     "Inr ?r = lr_of_tran ?rt ?fw ?ifs ==>
      sorted_descending (map ofe_prio ?r)",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 3),
          template_app
           (template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 3))
           ))),
    ("LinuxRouter_OpenFlow_Translation.in_annotate_rlen",
     "(?a, ?x) : set (annotate_rlen ?l) ==> ?x : set ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("LinuxRouter_OpenFlow_Translation.fst_annotate_rlen_le",
     "(?k, ?a) : set (annotate_rlen ?l) ==> ?k < length ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)))
            )],
       template_inequation
        (less_than, template_var 2,
         template_app (template_hole 0, template_var 0)))),
    ("LinuxRouter_OpenFlow_Translation.lr_of_tran_s1_split",
     "lr_of_tran_s1 (?a # ?rt) =
      (route2match ?a, routing_oiface ?a) # lr_of_tran_s1 ?rt",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))),
         template_app (template_hole 6, template_var 0)))),
    ("LinuxRouter_OpenFlow_Translation.no_oif_matchD",
     "no_oif_match ?fw ==>
      simple_fw ?fw ?p = simple_fw ?fw (?p(| p_oiface := ?any |))",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, t_empty), template_var 1))))),
    ("LinuxRouter_OpenFlow_Translation.OF_unsafe_safe_match_linear_eq",
     "list_all (all_prerequisites o ofe_fields) ?oft ==>
      OF_match_linear OF_match_fields_unsafe ?oft =
      OF_match_linear OF_match_fields_safe ?oft",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_hole 4)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_app
          (template_app (template_hole 2, template_hole 0),
           template_var 0)))),
    ("LinuxRouter_OpenFlow_Translation.OF_unsafe_safe_match3_eq",
     "list_all (all_prerequisites o ofe_fields) ?oft ==>
      OF_priority_match OF_match_fields_unsafe ?oft =
      OF_priority_match OF_match_fields_safe ?oft",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_hole 4)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_app
          (template_app (template_hole 2, template_hole 0),
           template_var 0)))),
    ("LinuxRouter_OpenFlow_Translation.simple_match_to_of_match_generates_prereqs",
     "[| simple_match_valid ?m;
         ?r : set (simple_match_to_of_match ?m ?ifs) |]
      ==> all_prerequisites ?r",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 0)))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("LinuxRouter_OpenFlow_Translation.distinct_lroft_s3",
     "[| distinct (map fst ?amr); distinct ?ifs |]
      ==> distinct (lr_of_tran_s3 ?ifs ?amr)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_var 1))
            ),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("LinuxRouter_OpenFlow_Translation.route2match_correct",
     "valid_prefix (routing_match ?a) ==>
      prefix_match_semantics (routing_match ?a) (p_dst ?p) =
      simple_matches (route2match ?a) ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 5, template_var 1)),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("LinuxRouter_OpenFlow_Translation.distinct_of_prio_hlp",
     "length ?l < unat (- 1) ==>
      distinct (map word_of_nat (map fst (annotate_rlen ?l)))",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 9, template_var 0),
          template_app
           (template_hole 8,
            template_app (template_hole 7, template_hole 6)))],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("LinuxRouter_OpenFlow_Translation.custom_simpset",
     "(?b : \<Union> (?B ` ?A)) = (EX x:?A. ?b : ?B x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("LinuxRouter_OpenFlow_Translation.match_ifaceAny_eq",
     "oiface ?m = ifaceAny ==>
      simple_matches ?m ?p = simple_matches ?m (?p(| p_oiface := ?any |))",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 2), template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, t_empty), template_var 1))))),
    ("LinuxRouter_OpenFlow_Translation.sorted_annotated",
     "length ?l <= unat (- 1) ==>
      sorted_descending
       (map fst (map (apfst word_of_nat) (annotate_rlen ?l)))",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 10, template_var 0),
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_hole 7)))],
       template_predicate
        (
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1)),
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("LinuxRouter_OpenFlow_Translation.lr_of_tran_no_overlaps",
     "[| distinct ?ifs; Inr ?t = lr_of_tran ?rt ?fw ?ifs |]
      ==> no_overlaps OF_match_fields_unsafe ?t",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 3)),
        template_equation
         (template_app (template_hole 3, template_var 2),
          template_app
           (template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0),
            template_var 3))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2)
           ))),
    ("LinuxRouter_OpenFlow_Translation.simple_match_valid_fbs",
     "[| valid_prefixes ?rt; simple_fw_valid ?fw |]
      ==> list_all simple_match_valid
           (map fst (lr_of_tran_fbs ?rt ?fw ?ifs))",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0)))
           ))),
    ("LinuxRouter_OpenFlow_Translation.prefix_match_semantics_simple_match",
     "[| toprefixmatch ?m = Some ?pm; valid_prefix ?pm |]
      ==> prefix_match_semantics ?pm = simple_match_ip ?m",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1),
          template_app (template_hole 4, template_var 0)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("LinuxRouter_OpenFlow_Translation.sorted_word_upt",
     "length ?l <= unat (- 1) ==>
      sorted_descending (map word_of_nat (rev [0..<Suc (length ?l)]))",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 10, template_var 0),
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_hole 7)))],
       template_predicate
        (
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_app
                    (template_hole 0,
                     template_app (template_hole 10, template_var 0))))))
           ))),
    ("LinuxRouter_OpenFlow_Translation.simple_match_dst_alt",
     "simple_match_valid ?r ==>
      simple_match_ip (dst ?r) ?p =
      prefix_match_semantics (PrefixMatch (fst (dst ?r)) (snd (dst ?r)))
       ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 4, template_var 1))),
               template_app
                (template_hole 0,
                 template_app (template_hole 4, template_var 1)))),
           template_var 0)))),
    ("LinuxRouter_OpenFlow_Translation.simple_match_src_alt",
     "simple_match_valid ?r ==>
      simple_match_ip (src ?r) ?p =
      prefix_match_semantics (PrefixMatch (fst (src ?r)) (snd (src ?r)))
       ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 4, template_var 1))),
               template_app
                (template_hole 0,
                 template_app (template_hole 4, template_var 1)))),
           template_var 0)))),
    ("LinuxRouter_OpenFlow_Translation.no_overlaps_lroft_s3_hlp",
     "[| distinct (map fst ?amr); distinct ?ifs |]
      ==> no_overlaps OF_match_fields_unsafe
           (map (split3 OFEntry) (lr_of_tran_s3 ?ifs ?amr))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_var 1))
            ),
        template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("LinuxRouter_OpenFlow_Translation.max_16_word_max", "?a <= 65535",
     template_inequation
      (less_equals, template_var 0,
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_hole 1,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 1,
                               template_app
                                (template_hole 1,
                                 template_app
                                  (template_hole 1,
                                   template_app
                                    (template_hole 1,
                                     template_app
(template_hole 1, template_hole 0)))))))))))))))))),
    ("LinuxRouter_OpenFlow_Translation.distinct_of_nat_list",
     "[| distinct ?l; ALL e:set ?l. e <= unat (- 1) |]
      ==> distinct (map word_of_nat ?l)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("LinuxRouter_OpenFlow_Translation.no_oif_match_fbs",
     "no_oif_match ?fw ==>
      list_all (%m. oiface (fst (snd m)) = ifaceAny)
       (map (apfst of_nat) (annotate_rlen (lr_of_tran_fbs ?rt ?fw ?ifs)))",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 10, t_empty),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)),
               template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 2),
                   template_var 0))))
           ))),
    ("LinuxRouter_OpenFlow_Translation.annotate_first_le_hlp",
     "length ?l < unat (- 1) ==>
      ALL e:set (map fst (annotate_rlen ?l)). e <= unat (- 1)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 9, template_var 0),
          template_app
           (template_hole 8,
            template_app (template_hole 7, template_hole 6)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 1, template_var 0)))),
             t_empty)
           ))),
    ("LinuxRouter_OpenFlow_Translation.OF_match_linear_not_noD",
     "OF_match_linear ?\<gamma> ?oms ?p ~= NoAction ==>
      EX ome. ome : set ?oms & ?\<gamma> (ofe_fields ome) ?p",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1),
                template_var 0),
              template_hole 5)
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("LinuxRouter_OpenFlow_Translation.sorted_lr_of_tran_s3_hlp",
     "[| ALL x:set ?f. fst x <= ?a; ?b : set (lr_of_tran_s3 ?s ?f) |]
      ==> fst ?b <= ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 3)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 3)))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 2))),
    ("LinuxRouter_OpenFlow_Translation.lr_of_tran_prereqs",
     "[| valid_prefixes ?rt; simple_fw_valid ?fw;
         lr_of_tran ?rt ?fw ?ifs = Inr ?oft |]
      ==> list_all (all_prerequisites o ofe_fields) ?oft",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate (template_app (template_hole 7, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_hole 0)),
             template_var 0)
           ))),
    ("LinuxRouter_OpenFlow_Translation.simple_match_valid_fbs_rlen",
     "[| valid_prefixes ?rt; simple_fw_valid ?fw;
         (?a, ?aa, ?ab, ?b)
         : set (annotate_rlen (lr_of_tran_fbs ?rt ?fw ?ifs)) |]
      ==> simple_match_valid ?aa",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 6)),
        template_predicate (template_app (template_hole 8, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_app
                     (template_app (template_hole 4, template_var 2),
                      template_var 1)))),
              template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app
                   (template_app
                     (template_app (template_hole 1, template_var 6),
                      template_var 5),
                    template_var 0))))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 3)))),
    ("LinuxRouter_OpenFlow_Translation.smtoms_eq_hlp",
     "(simple_match_to_of_match_single ?r ?a ?b ?c ?d =
       simple_match_to_of_match_single ?r ?f ?g ?h ?i) =
      (?a = ?f & ?b = ?g & ?c = ?h & ?d = ?i)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 8),
                 template_var 7),
               template_var 6),
             template_var 5),
           template_var 4),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 8),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 7),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 1, template_var 6),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 0))))
           ))),
    ("LinuxRouter_OpenFlow_Translation.s1_correct",
     "[| valid_prefixes ?rt; has_default_route ?rt |]
      ==> EX rm ra.
             generalized_sfw (lr_of_tran_s1 ?rt) ?p = Some (rm, ra) &
             ra = output_iface (routing_table_semantics ?rt (p_dst ?p))",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_predicate
         (template_app (template_hole 12, template_var 1))],
       template_predicate (template_app (template_hole 11, t_empty)))),
    ("LinuxRouter_OpenFlow_Translation.simple_match_to_of_matchD",
     "[| ?gr : set (simple_match_to_of_match ?r ?ifs);
         OF_match_fields ?gr ?p = Some True;
         match_iface (oiface ?r) (p_oiface ?p); simple_match_valid ?r |]
      ==> simple_matches ?r ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_var 1)))
            ),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 3), template_var 0),
          template_app (template_hole 6, template_hole 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 2)),
              template_app (template_hole 2, template_var 0))
            ),
        template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("LinuxRouter_OpenFlow_Translation.lr_of_tran_fbs_dropD",
     "[| valid_prefixes ?rt; has_default_route ?rt; no_oif_match ?fw;
         generalized_sfw (lr_of_tran_fbs ?rt ?fw ?ifs) ?p =
         Some (?r, ?oif, Drop) |]
      ==> simple_linux_router_nol12 ?rt ?fw ?p = None",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 5)),
        template_predicate
         (template_app (template_hole 11, template_var 5)),
        template_predicate
         (template_app (template_hole 10, template_var 4)),
        template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_app (template_hole 7, template_var 5),
                  template_var 4),
                template_var 3)),
            template_var 2),
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 0),
                template_hole 3))))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_var 4),
           template_var 2),
         template_hole 0))),
    ("LinuxRouter_OpenFlow_Translation.no_overlaps_lroft_hlp2",
     "[| distinct (map fst ?amr); !!r. distinct (?fm r) |]
      ==> distinct
           (concat
             (map (%(p, r, c, a). map (%b. (p, b, ?fs a c)) (?fm r))
               ?amr))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 13,
              template_app
               (template_app (template_hole 12, template_hole 11),
                template_var 2))
            ),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, t_empty)),
                 template_var 2)))
           ))),
    ("LinuxRouter_OpenFlow_Translation.lr_of_tran_fbs_acceptD",
     "[| valid_prefixes ?rt; has_default_route ?rt; no_oif_match ?fw;
         generalized_sfw (lr_of_tran_fbs ?rt ?fw ?ifs) ?p =
         Some (?r, ?oif, Accept) |]
      ==> simple_linux_router_nol12 ?rt ?fw ?p =
          Some (?p(| p_oiface := ?oif |))",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 5)),
        template_predicate
         (template_app (template_hole 12, template_var 5)),
        template_predicate
         (template_app (template_hole 11, template_var 4)),
        template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app
                 (template_app (template_hole 8, template_var 5),
                  template_var 4),
                template_var 3)),
            template_var 2),
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 0),
                template_hole 4))))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 5),
             template_var 4),
           template_var 2),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 2))))),
    ("LinuxRouter_OpenFlow_Translation.lr_of_tran_s3_Cons",
     "lr_of_tran_s3 ?ifs (?a # ?ard) =
      concat
       (map (%(p, r, c, a).
                map (%b. (p, b,
                          case a of Accept => [Forward c] | Drop => []))
                 (simple_match_to_of_match r ?ifs))
         [?a]) @
      lr_of_tran_s3 ?ifs ?ard",
     template_equation
      (template_app
        (template_app (template_hole 16, template_var 2),
         template_app
          (template_app (template_hole 15, template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 14,
           template_app
            (template_hole 13,
             template_app
              (template_app
                (template_hole 12,
                 template_app (template_hole 11, t_empty)),
               template_app
                (template_app (template_hole 15, template_var 1),
                 template_hole 0)))),
         template_app
          (template_app (template_hole 16, template_var 2),
           template_var 0)))),
    ("LinuxRouter_OpenFlow_Translation.s3_noaction_hlp",
     "[| simple_match_valid ?ac; ~ simple_matches ?ac ?p;
         match_iface (oiface ?ac) (p_oiface ?p) |]
      ==> OF_match_linear OF_match_fields_safe
           (map (%x. split3 OFEntry
                      (?x1.0, x,
                       case ?ba of Accept => [Forward ?ad] | Drop => []))
             (simple_match_to_of_match ?ac ?ifs))
           ?p =
          NoAction",
     template_implication
      ([template_predicate
         (template_app (template_hole 19, template_var 5)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 17, template_var 5),
                  template_var 4)
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app (template_hole 15, template_var 5)),
              template_app (template_hole 14, template_var 4))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 12, template_hole 11),
             template_app
              (template_app (template_hole 10, t_empty),
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 0))),
           template_var 4),
         template_hole 0))),
    ("LinuxRouter_OpenFlow_Translation.no_overlaps_lroft_hlp3",
     "[| distinct (map fst ?amr);
         (?aa, ?ab, ?ac) : set (lr_of_tran_s3 ?ifs ?amr);
         (?ba, ?bb, ?bc) : set (lr_of_tran_s3 ?ifs ?amr); ?ac ~= ?bc |]
      ==> ?aa ~= ?ba",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_var 7))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 6),
                  template_app
                   (template_app (template_hole 5, template_var 5),
                    template_var 4))),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 7)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_app
                   (template_app (template_hole 5, template_var 1),
                    template_var 0))),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 7)))
            ),
        template_negation
         (template_equation (template_var 4, template_var 0))],
       template_negation
        (template_equation (template_var 6, template_var 2)))),
    ("LinuxRouter_OpenFlow_Translation.lr_of_tran_correct",
     "[| lr_of_tran ?rt ?fw ?ifs = Inr ?oft; p_l2type ?p = 2048;
         p_iiface ?p : set ?ifs |]
      ==> OF_priority_match OF_match_fields_safe ?oft ?p ~= NoAction",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 14, template_var 4),
              template_var 3),
            template_var 2),
          template_app (template_hole 13, template_var 1)),
        template_equation
         (template_app (template_hole 11, template_var 0),
          template_app
           (template_hole 10,
            template_app
             (template_hole 9,
              template_app
               (template_hole 9,
                template_app
                 (template_hole 9,
                  template_app
                   (template_hole 9,
                    template_app
                     (template_hole 9,
                      template_app
                       (template_hole 9,
                        template_app
                         (template_hole 9,
                          template_app
                           (template_hole 9,
                            template_app
                             (template_hole 9,
                              template_app
                               (template_hole 9,
                                template_app
                                 (template_hole 9,
                                  template_hole 8))))))))))))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)),
              template_app (template_hole 5, template_var 2))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("LinuxRouter_OpenFlow_Translation.lr_of_tran_correct",
     "[| lr_of_tran ?rt ?fw ?ifs = Inr ?oft; p_l2type ?p = 2048;
         p_iiface ?p : set ?ifs |]
      ==> OF_priority_match OF_match_fields_safe ?oft ?p ~= Undefined",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 14, template_var 4),
              template_var 3),
            template_var 2),
          template_app (template_hole 13, template_var 1)),
        template_equation
         (template_app (template_hole 11, template_var 0),
          template_app
           (template_hole 10,
            template_app
             (template_hole 9,
              template_app
               (template_hole 9,
                template_app
                 (template_hole 9,
                  template_app
                   (template_hole 9,
                    template_app
                     (template_hole 9,
                      template_app
                       (template_hole 9,
                        template_app
                         (template_hole 9,
                          template_app
                           (template_hole 9,
                            template_app
                             (template_hole 9,
                              template_app
                               (template_hole 9,
                                template_app
                                 (template_hole 9,
                                  template_hole 8))))))))))))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)),
              template_app (template_hole 5, template_var 2))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("LinuxRouter_OpenFlow_Translation.lr_of_tran_fbs_dropI",
     "[| valid_prefixes ?rt; has_default_route ?rt; no_oif_match ?fw;
         has_default_policy ?fw;
         simple_linux_router_nol12 ?rt ?fw ?p = None |]
      ==> EX r oif.
             generalized_sfw (lr_of_tran_fbs ?rt ?fw ?ifs) ?p =
             Some (r, oif, Drop)",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 3)),
        template_predicate
         (template_app (template_hole 14, template_var 3)),
        template_predicate
         (template_app (template_hole 13, template_var 2)),
        template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 10, template_var 3),
              template_var 2),
            template_var 1),
          template_hole 9)],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("LinuxRouter_OpenFlow_Translation.distinct_simple_match_to_of_match_portlist_hlp",
     "distinct ?ifs ==>
      distinct
       (if fst ?ps = 0 & snd ?ps = - 1 then [None]
        else if fst ?ps <= snd ?ps
             then map (Some o (%pfx. (pfxm_prefix pfx, ~~ pfxm_mask pfx)))
                   (wordinterval_CIDR_split_prefixmatch
                     (WordInterval (fst ?ps) (snd ?ps)))
             else [])",
     template_implication
      ([template_predicate
         (template_app (template_hole 22, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 21,
             template_app
              (template_app
                (template_app
                  (template_hole 20,
                   template_app
                    (template_app
                      (template_hole 19,
                       template_app
                        (template_app
                          (template_hole 18,
                           template_app (template_hole 17, template_var 0)),
                         template_hole 16)),
                     template_app
                      (template_app
                        (template_hole 18,
                         template_app (template_hole 15, template_var 0)),
                       template_app (template_hole 14, template_hole 13)))),
                 template_app
                  (template_app (template_hole 12, template_hole 11),
                   template_hole 10)),
               template_app
                (template_app
                  (template_app
                    (template_hole 20,
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app (template_hole 17, template_var 0)),
                       template_app (template_hole 15, template_var 0))),
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app (template_hole 7, template_hole 6),
                         t_empty)),
                     template_app
                      (template_hole 1,
                       template_app
                        (template_app
                          (template_hole 0,
                           template_app (template_hole 17, template_var 0)),
                         template_app
                          (template_hole 15, template_var 0))))),
                 template_hole 10)))
           ))),
    ("LinuxRouter_OpenFlow_Translation.lr_of_tran_fbs_acceptI",
     "[| valid_prefixes ?rt; has_default_route ?rt; no_oif_match ?fw;
         has_default_policy ?fw;
         simple_linux_router_nol12 ?rt ?fw ?p =
         Some (?p(| p_oiface := ?oif |)) |]
      ==> EX r. generalized_sfw (lr_of_tran_fbs ?rt ?fw ?ifs) ?p =
                Some (r, ?oif, Accept)",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 4)),
        template_predicate
         (template_app (template_hole 14, template_var 4)),
        template_predicate
         (template_app (template_hole 13, template_var 3)),
        template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 10, template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_hole 9,
            template_app
             (template_app (template_hole 8, t_empty), template_var 2)))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("LinuxRouter_OpenFlow_Translation.lr_of_tran_correct",
     "[| lr_of_tran ?rt ?fw ?ifs = Inr ?oft; p_l2type ?p = 2048;
         p_iiface ?p : set ?ifs |]
      ==> OF_priority_match OF_match_fields_safe ?oft ?p = Action ?ls -->
          length ?ls <= 1",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 17, template_var 5),
              template_var 4),
            template_var 3),
          template_app (template_hole 16, template_var 2)),
        template_equation
         (template_app (template_hole 14, template_var 1),
          template_app
           (template_hole 13,
            template_app
             (template_hole 12,
              template_app
               (template_hole 12,
                template_app
                 (template_hole 12,
                  template_app
                   (template_hole 12,
                    template_app
                     (template_hole 12,
                      template_app
                       (template_hole 12,
                        template_app
                         (template_hole 12,
                          template_app
                           (template_hole 12,
                            template_app
                             (template_hole 12,
                              template_app
                               (template_hole 12,
                                template_app
                                 (template_hole 12,
                                  template_hole 11))))))))))))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 1)),
              template_app (template_hole 8, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_app (template_hole 5, template_hole 4),
                       template_var 2),
                     template_var 1)),
                 template_app (template_hole 3, template_var 0))),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_hole 0))
           ))),
    ("LinuxRouter_OpenFlow_Translation.eq",
     "[| simple_match_valid ?r; simple_matches ?r ?p;
         p_iiface ?p : set ?ifs; p_l2type ?p = 2048 |]
      ==> EX gr:set (simple_match_to_of_match ?r ?ifs).
             OF_match_fields gr ?p = Some True",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app (template_hole 13, template_var 1)),
              template_app (template_hole 12, template_var 0))
            ),
        template_equation
         (template_app (template_hole 10, template_var 1),
          template_app
           (template_hole 9,
            template_app
             (template_hole 8,
              template_app
               (template_hole 8,
                template_app
                 (template_hole 8,
                  template_app
                   (template_hole 8,
                    template_app
                     (template_hole 8,
                      template_app
                       (template_hole 8,
                        template_app
                         (template_hole 8,
                          template_app
                           (template_hole 8,
                            template_app
                             (template_hole 8,
                              template_app
                               (template_hole 8,
                                template_app
                                 (template_hole 8,
                                  template_hole 7)))))))))))))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 0))),
             t_empty)
           ))),
    ("LinuxRouter_OpenFlow_Translation.lr_of_tran_correct",
     "[| lr_of_tran ?rt ?fw ?ifs = Inr ?oft; p_l2type ?p = 2048;
         p_iiface ?p : set ?ifs |]
      ==> EX ls.
             length ls <= 1 &
             OF_priority_match OF_match_fields_safe ?oft ?p = Action ls",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 18, template_var 4),
              template_var 3),
            template_var 2),
          template_app (template_hole 17, template_var 1)),
        template_equation
         (template_app (template_hole 15, template_var 0),
          template_app
           (template_hole 14,
            template_app
             (template_hole 13,
              template_app
               (template_hole 13,
                template_app
                 (template_hole 13,
                  template_app
                   (template_hole 13,
                    template_app
                     (template_hole 13,
                      template_app
                       (template_hole 13,
                        template_app
                         (template_hole 13,
                          template_app
                           (template_hole 13,
                            template_app
                             (template_hole 13,
                              template_app
                               (template_hole 13,
                                template_app
                                 (template_hole 13,
                                  template_hole 12))))))))))))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 0)),
              template_app (template_hole 9, template_var 2))
            )],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("LinuxRouter_OpenFlow_Translation.lr_of_tran_correct",
     "[| lr_of_tran ?rt ?fw ?ifs = Inr ?oft; p_l2type ?p = 2048;
         p_iiface ?p : set ?ifs |]
      ==> (OF_priority_match OF_match_fields_safe ?oft ?p = Action []) =
          (simple_linux_router_nol12 ?rt ?fw ?p = None)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 18, template_var 4),
              template_var 3),
            template_var 2),
          template_app (template_hole 17, template_var 1)),
        template_equation
         (template_app (template_hole 15, template_var 0),
          template_app
           (template_hole 14,
            template_app
             (template_hole 13,
              template_app
               (template_hole 13,
                template_app
                 (template_hole 13,
                  template_app
                   (template_hole 13,
                    template_app
                     (template_hole 13,
                      template_app
                       (template_hole 13,
                        template_app
                         (template_hole 13,
                          template_app
                           (template_hole 13,
                            template_app
                             (template_hole 13,
                              template_app
                               (template_hole 13,
                                template_app
                                 (template_hole 13,
                                  template_hole 12))))))))))))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 0)),
              template_app (template_hole 9, template_var 2))
            )],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 1),
             template_var 0),
           template_app (template_hole 4, template_hole 3)),
         template_equation
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3),
             template_var 0),
           template_hole 0)))),
    ("LinuxRouter_OpenFlow_Translation.no_overlaps_lroft_s3_hlp_hlp",
     "[| distinct (map fst ?amr); OF_match_fields_unsafe ?ab ?p;
         ?ab ~= ?ad | ?ba ~= ?bb; OF_match_fields_unsafe ?ad ?p;
         (?ac, ?ab, ?ba) : set (lr_of_tran_s3 ?ifs ?amr);
         (?ac, ?ad, ?bb) : set (lr_of_tran_s3 ?ifs ?amr) |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 13,
              template_app
               (template_app (template_hole 12, template_hole 11),
                template_var 7))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 6),
                    template_var 4))),
              template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 4),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app
                   (template_app (template_hole 3, template_var 6),
                    template_var 3))),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 7)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 2))),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 7)))
            )],
       template_predicate (template_hole 0))),
    ("LinuxRouter_OpenFlow_Translation.replicate_FT_hlp",
     "[| ?x <= 16 & ?y <= 16;
         replicate (16 - ?x) False @ replicate ?x True =
         replicate (16 - ?y) False @ replicate ?y True |]
      ==> ?x = ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_app
                   (template_hole 9,
                    template_app
                     (template_hole 8,
                      template_app
                       (template_hole 8,
                        template_app
                         (template_hole 8,
                          template_app
                           (template_hole 8, template_hole 7))))))),
              template_app
               (template_app (template_hole 10, template_var 0),
                template_app
                 (template_hole 9,
                  template_app
                   (template_hole 8,
                    template_app
                     (template_hole 8,
                      template_app
                       (template_hole 8,
                        template_app
                         (template_hole 8, template_hole 7)))))))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app
                     (template_hole 3,
                      template_app
                       (template_hole 9,
                        template_app
                         (template_hole 8,
                          template_app
                           (template_hole 8,
                            template_app
                             (template_hole 8,
                              template_app
                               (template_hole 8, template_hole 7)))))),
                    template_var 1)),
                template_hole 2)),
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 1)),
          template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app
                     (template_hole 3,
                      template_app
                       (template_hole 9,
                        template_app
                         (template_hole 8,
                          template_app
                           (template_hole 8,
                            template_app
                             (template_hole 8,
                              template_app
                               (template_hole 8, template_hole 7)))))),
                    template_var 0)),
                template_hole 2)),
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 1)))],
       template_equation (template_var 1, template_var 0))),
    ("LinuxRouter_OpenFlow_Translation.lr_of_tran_correct",
     "[| lr_of_tran ?rt ?fw ?ifs = Inr ?oft; p_l2type ?p = 2048;
         p_iiface ?p : set ?ifs |]
      ==> (OF_priority_match OF_match_fields_safe ?oft ?p =
           Action [Forward ?oif]) =
          (simple_linux_router_nol12 ?rt ?fw ?p =
           Some (?p(| p_oiface := ?oif |)))",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 21, template_var 5),
              template_var 4),
            template_var 3),
          template_app (template_hole 20, template_var 2)),
        template_equation
         (template_app (template_hole 18, template_var 1),
          template_app
           (template_hole 17,
            template_app
             (template_hole 16,
              template_app
               (template_hole 16,
                template_app
                 (template_hole 16,
                  template_app
                   (template_hole 16,
                    template_app
                     (template_hole 16,
                      template_app
                       (template_hole 16,
                        template_app
                         (template_hole 16,
                          template_app
                           (template_hole 16,
                            template_app
                             (template_hole 16,
                              template_app
                               (template_hole 16,
                                template_app
                                 (template_hole 16,
                                  template_hole 15))))))))))))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app (template_hole 13, template_var 1)),
              template_app (template_hole 12, template_var 3))
            )],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_app (template_hole 9, template_hole 8),
               template_var 2),
             template_var 1),
           template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 0)),
               template_hole 4))),
         template_equation
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 5),
               template_var 4),
             template_var 1),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, t_empty),
               template_var 1)))))),
    ("LinuxRouter_OpenFlow_Translation.s3_correct",
     "[| list_all simple_match_valid (map (fst o snd) ?ard);
         p_l2type ?p = 2048; p_iiface ?p : set ?ifs;
         list_all (%m. oiface (fst (snd m)) = ifaceAny) ?ard |]
      ==> (OF_match_linear OF_match_fields_safe (pack_OF_entries ?ifs ?ard)
            ?p =
           Action ?ao) =
          (EX r af.
              generalized_sfw (map snd ?ard) ?p = Some (r, af) &
              (if snd af = Drop then ?ao = []
               else ?ao = [Forward (fst af)]))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 40, template_hole 39),
              template_app
               (template_app
                 (template_hole 38,
                  template_app
                   (template_app (template_hole 37, template_hole 36),
                    template_hole 35)),
                template_var 3))
            ),
        template_equation
         (template_app (template_hole 33, template_var 2),
          template_app
           (template_hole 32,
            template_app
             (template_hole 31,
              template_app
               (template_hole 31,
                template_app
                 (template_hole 31,
                  template_app
                   (template_hole 31,
                    template_app
                     (template_hole 31,
                      template_app
                       (template_hole 31,
                        template_app
                         (template_hole 31,
                          template_app
                           (template_hole 31,
                            template_app
                             (template_hole 31,
                              template_app
                               (template_hole 31,
                                template_app
                                 (template_hole 31,
                                  template_hole 30))))))))))))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 29,
                template_app (template_hole 28, template_var 2)),
              template_app (template_hole 27, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 26, t_empty), template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 21,
             template_app
              (template_app
                (template_app (template_hole 20, template_hole 19),
                 template_app
                  (template_app (template_hole 18, template_var 1),
                   template_var 3)),
               template_var 2)),
           template_app (template_hole 17, template_var 0)),
         template_app (template_hole 16, t_empty))))]
