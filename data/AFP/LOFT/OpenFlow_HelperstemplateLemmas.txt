   [("OpenFlow_Helpers.single_valued_code_lam",
     "single_valued (set ?r) = single_valued_code ?r",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("OpenFlow_Helpers.sorted_const", "sorted (map (%y. ?x) ?k)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, t_empty), template_var 0))
         )),
    ("OpenFlow_Helpers.distinct_fst",
     "distinct (map fst ?a) ==> distinct ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("OpenFlow_Helpers.distinct_snd",
     "distinct (map snd ?a) ==> distinct ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("OpenFlow_Helpers.hrule", "(?S = UNIV) = (ALL x. x : ?S)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_app (template_hole 1, t_empty))),
    ("OpenFlow_Helpers.list_all_map",
     "list_all ?f (map ?g ?l) = list_all (?f o ?g) ?l",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("OpenFlow_Helpers.set_maps",
     "set (List.maps ?f ?a) = (UN a:set ?a. set (?f a))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("OpenFlow_Helpers.foldr_True_set",
     "foldr (%x. (&) (?f x)) ?l True = (ALL x:set ?l. ?f x)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, t_empty), template_var 0),
         template_hole 2),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("OpenFlow_Helpers.set_Cons",
     "(?e : set (?a # ?as)) = (?e = ?a | ?e : set ?as)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_app (template_hole 3, template_var 0)))
           ))),
    ("OpenFlow_Helpers.card1_eE",
     "[| finite ?S; EX y. y : ?S |] ==> 1 <= card ?S",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("OpenFlow_Helpers.f_Img_ex_set", "{?f x |x. ?P x} = ?f ` {x. ?P x}",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, t_empty)))),
    ("OpenFlow_Helpers.card1_eI",
     "1 <= card ?S ==> EX y S'. ?S = {y} Un S' & y ~: S'",
     template_implication
      ([template_inequation
         (less_equals, template_hole 10,
          template_app (template_hole 9, template_var 0))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("OpenFlow_Helpers.card2_eI",
     "2 <= card ?S ==> EX x y. x ~= y & x : ?S & y : ?S",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 8,
            template_app (template_hole 7, template_hole 6)),
          template_app (template_hole 5, template_var 0))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("OpenFlow_Helpers.card2_eE",
     "[| finite ?S; EX x y. x ~= y & x : ?S & y : ?S |] ==> 2 <= card ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_app (template_hole 0, template_var 0)))),
    ("OpenFlow_Helpers.inter_empty_fst2",
     "(%(p, m, a). (p, m)) ` ?S Int (%(p, m, a). (p, m)) ` ?T = {} ==>
      ?S Int ?T = {}",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 7, template_app (template_hole 6, t_empty)),
                template_var 1)),
            template_app
             (template_app
               (template_hole 7, template_app (template_hole 6, t_empty)),
              template_var 0)),
          template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("OpenFlow_Helpers.card3_eI",
     "3 <= card ?S ==>
      EX x y z. x ~= y & x ~= z & y ~= z & x : ?S & y : ?S",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 8,
            template_app (template_hole 7, template_hole 6)),
          template_app (template_hole 5, template_var 0))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("OpenFlow_Helpers.distinct_2lcomprI",
     "[| distinct ?as; distinct ?bs;
         !!a b e i. ?f a b = ?f e i ==> a = e & b = i |]
      ==> distinct (concat (map (%a. map (?f a) ?bs) ?as))",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, t_empty), template_var 2)))
           ))),
    ("OpenFlow_Helpers.distinct_3lcomprI",
     "[| distinct ?as; distinct ?bs; distinct ?cs;
         !!a b c e i g. ?f a b c = ?f e i g ==> a = e & b = i & c = g |]
      ==> distinct
           (concat
             (map (%a. concat (map (%b. map (?f a b) ?cs) ?bs)) ?as))",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 3)),
        template_predicate
         (template_app (template_hole 14, template_var 2)),
        template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, t_empty), template_var 3)))
           )))]
