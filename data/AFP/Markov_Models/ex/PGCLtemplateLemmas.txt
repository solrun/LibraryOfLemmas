   [("PGCL.step_finite", "finite (step ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("PGCL.continuous_rF", "sup_continuous (rF ?f)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("PGCL.wp_mono", "mono (wp ?c)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("PGCL.mono_rF", "mono (rF ?f)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("PGCL.step_non_empty", "step ?x ~= {}",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("PGCL.measurable_r", "r ?f : borel_measurable step.St",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 0))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_hole 0))
         )),
    ("PGCL.E_inf_Skip", "step.E_inf (Skip, ?s) (r ?f) = ?f ?s",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app (template_var 0, template_var 1))),
    ("PGCL.E_inf_r_eq_wp", "step.E_inf (?c, ?s) (r ?f) = wp ?c ?f ?s",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("PGCL.mono_r", "?F <= ?G ==> r ?F ?\<omega> <= r ?G ?\<omega>",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("PGCL.measurable_rF",
     "?F : borel_measurable step.St ==>
      rF ?f ?F : borel_measurable step.St",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_hole 2))),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2))),
               template_hole 1))
           ))),
    ("PGCL.r_unfold",
     "r ?f ?\<omega> =
      (if fst (shd ?\<omega>) = Skip then ?f (snd (shd ?\<omega>))
       else r ?f (stl ?\<omega>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_var 0))),
                   template_hole 2)),
               template_app
                (template_var 1,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 3, template_var 0)))),
             template_app
              (template_app
                (template_hole 8,
                 template_app (template_hole 7, template_var 1)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("PGCL.mono_r'",
     "mono
       (%F s. \<Sqinter>D\<in>step s.
                 \<integral>\<^sup>+ t.
(if fst t = Skip then ?f (snd t) else F t)
                                    \<partial>measure_pmf D)",
     template_predicate (template_app (template_hole 10, t_empty))),
    ("PGCL.E_inf_While",
     "step.E_inf (While ?g ?c, ?s) (r ?f) =
      lfp (%F s. if ?g s then step.E_inf (?c, s) (r F) else ?f s) ?s",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_hole 6),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 2)),
             template_var 1)),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app (template_hole 1, t_empty), template_var 1))),
    ("PGCL.E_inf_r_unfold",
     "step.E_inf ?s (r ?f) =
      (\<Sqinter>D\<in>step ?s.
          \<integral>\<^sup>+ t. (if fst t = Skip then ?f (snd t)
                                  else step.E_inf t (r ?f))
                             \<partial>measure_pmf D)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 12, template_hole 11),
           template_var 1),
         template_app
          (template_hole 10,
           template_app (template_hole 9, template_var 0))),
       template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, t_empty),
           template_app (template_hole 11, template_var 1))))),
    ("PGCL.E_inf_r",
     "step.E_inf ?s (r ?f) =
      lfp (%F s. \<Sqinter>D\<in>step s.
                    \<integral>\<^sup>+ t.
   (if fst t = Skip then ?f (snd t) else F t)
 \<partial>measure_pmf D)
       ?s",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 13, template_hole 12),
           template_var 1),
         template_app
          (template_hole 11,
           template_app (template_hole 10, template_var 0))),
       template_app
        (template_app (template_hole 9, t_empty), template_var 1))),
    ("PGCL.E_inf_Seq",
     "(!!x. 0 <= ?f x) ==>
      step.E_inf (Seq ?a ?b, ?s) (r ?f) =
      step.E_inf (?a, ?s) (r (%s. step.E_inf (?b, s) (r ?f)))",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1)),
               template_var 0)),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 3))),
         template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0)),
           template_app
            (template_hole 1, template_app (template_hole 0, t_empty)))))),
    ("PGCL.E_inf_r_induct",
     "[| ?P ?s ?y;
         !!F s y.
            [| ?P s y; !!s y. ?P s y ==> F s <= y;
               !!s. F s <= step.E_inf s (r ?f) |]
            ==> (\<Sqinter>D\<in>step s.
                    \<integral>\<^sup>+ t.
   (if fst t = Skip then ?f (snd t) else F t)
 \<partial>measure_pmf D)
                <= y |]
      ==> step.E_inf ?s (r ?f) <= ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 2), template_var 1)
            ),
        template_predicate (template_app (template_hole 16, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 12, template_hole 11),
             template_var 2),
           template_app
            (template_hole 10,
             template_app (template_hole 9, template_var 0))),
         template_var 1)))]
