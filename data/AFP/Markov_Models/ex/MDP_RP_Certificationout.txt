Loading theory "HOL-Library.Function_Algebras" (required by "Draft.MDP_RP_CertificationTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Markov_Models_Auxiliary" (required by "Draft.MDP_RP_CertificationTemplates" via "Draft.MDP_RP_Certification" via "Draft.MDP_Reachability_Problem" via "Draft.Markov_Decision_Process" via "Draft.Discrete_Time_Markov_Chain")
Loading theory "Draft.Templates" (required by "Draft.MDP_RP_CertificationTemplates" via "Draft.ExtrEqs")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.080s elapsed time, 0.271s cpu time, 0.000s GC time
### theory "HOL-Library.Function_Algebras"
### 0.114s elapsed time, 0.338s cpu time, 0.000s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.MDP_RP_CertificationTemplates" via "Draft.ExtrEqs")
class order = preorder +
  assumes "order_antisym": "!!x y. [| x <= y; y <= x |] ==> x = y"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
### theory "HOL-Library.BigO"
### 0.652s elapsed time, 1.322s cpu time, 0.049s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.MDP_RP_CertificationTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.561s elapsed time, 1.159s cpu time, 0.125s GC time
consts
  eexp :: "ereal => ennreal"
### theory "Draft.Markov_Models_Auxiliary"
### 1.668s elapsed time, 3.212s cpu time, 0.243s GC time
Loading theory "Draft.Discrete_Time_Markov_Chain" (required by "Draft.MDP_RP_CertificationTemplates" via "Draft.MDP_RP_Certification" via "Draft.MDP_Reachability_Problem" via "Draft.Markov_Decision_Process")
locale MC_syntax
  fixes K :: "'s => 's pmf"
Proofs for coinductive predicate(s) "enabled"
  Proving monotonicity ...
consts
  force_enabled :: "'s => 's stream => 's stream"
consts
  walk :: "'s => ('s => 's) stream => 's stream"
locale MC_with_rewards
  fixes K :: "'s => 's pmf"
    and \<iota> :: "'s => 's => ennreal"
    and \<rho> :: "'s => ennreal"
  assumes "MC_with_rewards \<iota> \<rho>"
locale MC_pair
  fixes K1 :: "'a => 'a pmf"
    and K2 :: "'b => 'b pmf"
### theory "Draft.Discrete_Time_Markov_Chain"
### 1.072s elapsed time, 1.382s cpu time, 0.461s GC time
Loading theory "Draft.Markov_Decision_Process" (required by "Draft.MDP_RP_CertificationTemplates" via "Draft.MDP_RP_Certification" via "Draft.MDP_Reachability_Problem")
Proofs for coinductive predicate(s) "eq_scheduler"
  Proving monotonicity ...
### Generation of a parametrized correspondence relation failed.
### Reason:  No relator for the type "Markov_Decision_Process.scheduler" found.
Proofs for coinductive predicate(s) "rel_cfg"
  Proving monotonicity ...
locale Markov_Decision_Process
  fixes K :: "'s => 's pmf set"
  assumes "Markov_Decision_Process K"
Proofs for coinductive predicate(s) "cfg_onp"
  Proving monotonicity ...
locale Finite_Markov_Decision_Process
  fixes K :: "'s => 's pmf set"
    and S :: "'s set"
  assumes "Finite_Markov_Decision_Process K S"
### theory "Draft.Markov_Decision_Process"
### 1.415s elapsed time, 1.467s cpu time, 0.083s GC time
Loading theory "Draft.MDP_Reachability_Problem" (required by "Draft.MDP_RP_CertificationTemplates" via "Draft.MDP_RP_Certification")
Proofs for inductive predicate(s) "directed_towardsp"
  Proving monotonicity ...
locale Reachability_Problem
  fixes K :: "'s => 's pmf set"
    and S :: "'s set"
    and S1 :: "'s set"
    and S2 :: "'s set"
  assumes "Reachability_Problem K S S1 S2"
### theory "Draft.MDP_Reachability_Problem"
### 0.542s elapsed time, 0.591s cpu time, 0.079s GC time
Loading theory "Draft.MDP_RP_Certification" (required by "Draft.MDP_RP_CertificationTemplates")
locale Reachability_Problem
  fixes K :: "'s => 's pmf set"
    and S :: "'s set"
    and S1 :: "'s set"
    and S2 :: "'s set"
  assumes "Reachability_Problem K S S1 S2"
consts
  lookup :: "'a => ('b * 'a) list => 'b => 'a"
### theory "Draft.MDP_RP_Certification"
### 2.468s elapsed time, 2.561s cpu time, 0.155s GC time
Loading theory "Draft.MDP_RP_CertificationTemplates"
val templateLemmas =
   [("MDP_RP_Certification.valid_mdp_rpD_length",
     "valid_mdp_rp ?mdp ==> 0 < state_count ?mdp",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("MDP_RP_Certification.valid_mdp_rpD_length",
     "valid_mdp_rp ?mdp ==>
      IArray.length (states1 ?mdp) = state_count ?mdp",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("MDP_RP_Certification.valid_mdp_rpD_length",
     "valid_mdp_rp ?mdp ==>
      IArray.length (states2 ?mdp) = state_count ?mdp",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("MDP_RP_Certification.valid_mdp_rpD_length",
     "valid_mdp_rp ?mdp ==> IArray.length (distrs ?mdp) = state_count ?mdp",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("MDP_RP_Certification.lookup_eq_map_of",
     "lookup ?d ?xs ?x = (case map_of ?xs ?x of None => ?d | Some x => x)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), t_empty),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("MDP_RP_Certification.lookup_not_in_set",
     "?x ~: fst ` set ?xs ==> lookup ?d ?xs ?x = ?d",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_app (template_hole 2, template_var 1)))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1),
           template_var 2),
         template_var 0))),
    ("MDP_RP_Certification.valid_mdp_rpD",
     "[| valid_mdp_rp ?mdp; ?i < state_count ?mdp |]
      ==> distrs ?mdp !! ?i ~= []",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_var 1))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_var 0),
             template_hole 0)
           ))),
    ("MDP_RP_Certification.valid_mdp_rpD",
     "[| valid_mdp_rp ?mdp; ?i < state_count ?mdp |]
      ==> ~ (states1 ?mdp !! ?i & states2 ?mdp !! ?i)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_var 1))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_var 1)),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 0, template_var 1)),
                   template_var 0))
               )
           ))),
    ("MDP_RP_Certification.lookup_in_set",
     "[| distinct (map fst ?xs); ?x : set ?xs |]
      ==> lookup ?d ?xs (fst ?x) = snd ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2),
           template_app (template_hole 5, template_var 1)),
         template_app (template_hole 0, template_var 1)))),
    ("MDP_RP_Certification.lookup_nonneg",
     "(!!x v. (x, v) : set ?xs ==> (0::?'a) <= v) ==>
      (0::?'a) <= lookup (0::?'a) ?xs ?x",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals, template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_hole 1),
             template_var 1),
           template_var 0)))),
    ("MDP_RP_Certification.valid_mdp_rpD",
     "[| valid_mdp_rp ?mdp; ?i < state_count ?mdp;
         ?ds : set (distrs ?mdp !! ?i) |]
      ==> distinct (map fst ?ds)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 2)),
                  template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("MDP_RP_Certification.P_max",
     "[| valid_mdp_rp ?mdp; valid_cert ?mdp ?c; ?i < state_count ?mdp |]
      ==> P_max ?mdp ?i <= real_of_rat (solution (pos_cert ?c) !! ?i)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 6, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 4, template_var 2), template_var 0),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1))),
             template_var 0))))),
    ("MDP_RP_Certification.P_min",
     "[| valid_mdp_rp ?mdp; valid_cert ?mdp ?c; ?i < state_count ?mdp |]
      ==> real_of_rat (solution (neg_cert ?c) !! ?i) <= P_min ?mdp ?i",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 6, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1))),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("MDP_RP_Certification.valid_mdp_rpD",
     "[| valid_mdp_rp ?mdp; ?i < state_count ?mdp;
         ?ds : set (distrs ?mdp !! ?i) |]
      ==> sum_list (map snd ?ds) = 1",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 9, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 2)),
                  template_var 1)))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0))),
    ("MDP_RP_Certification.sum_list_eq_sum_lookup",
     "[| list_all (%(n, x). n < ?M) ?xs; distinct (map fst ?xs) |]
      ==> sum_list (map snd ?xs) = sum (lookup (0::?'a) ?xs) {..<?M}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13, template_app (template_hole 12, t_empty)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 0)),
         template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 0, template_var 1))))),
    ("MDP_RP_Certification.valid_sub_certD",
     "[| valid_mdp_rp ?mdp; valid_sub_cert ?mdp ?c ?ord ?check;
         ?i < state_count ?mdp; states1 ?mdp !! ?i |]
      ==> 0 <= solution ?c !! ?i",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 6, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 4)),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 3)),
           template_var 0)))),
    ("MDP_RP_Certification.valid_sub_certD",
     "[| valid_mdp_rp ?mdp; valid_sub_cert ?mdp ?c ?ord ?check;
         ?i < state_count ?mdp; states2 ?mdp !! ?i |]
      ==> solution ?c !! ?i = 1",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 6, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 4)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 3)),
           template_var 0),
         template_hole 0))),
    ("MDP_RP_Certification.valid_mdp_rpD",
     "[| valid_mdp_rp ?mdp; ?i < state_count ?mdp;
         ?ds : set (distrs ?mdp !! ?i); (?n, ?x) : set ?ds |]
      ==> 0 <= ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 4)),
        template_inequation
         (less_than, template_var 3,
          template_app (template_hole 9, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 4)),
                  template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_app (template_hole 2, template_var 2))
            )],
       template_inequation (less_equals, template_hole 0, template_var 0))),
    ("MDP_RP_Certification.valid_mdp_rpD",
     "[| valid_mdp_rp ?mdp; ?i < state_count ?mdp;
         ?ds : set (distrs ?mdp !! ?i); (?n, ?x) : set ?ds |]
      ==> ?n < state_count ?mdp",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 4)),
        template_inequation
         (less_than, template_var 3,
          template_app (template_hole 7, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 4)),
                  template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)),
              template_app (template_hole 0, template_var 2))
            )],
       template_inequation
        (less_than, template_var 1,
         template_app (template_hole 7, template_var 4)))),
    ("MDP_RP_Certification.sparse_mult_eq_sum_lookup",
     "[| list_all (%(n, x). n < ?M) ?xs; distinct (map fst ?xs) |]
      ==> sparse_mult ?xs ?y = (SUM i<?M. lookup (0::?'a) ?xs i * ?y !! i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13, template_app (template_hole 12, t_empty)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 5, t_empty),
           template_app (template_hole 0, template_var 2))))),
    ("MDP_RP_Certification.valid_mdp_rp_sparse_mult",
     "[| valid_mdp_rp ?mdp; ?i < state_count ?mdp;
         ?ds : set (distrs ?mdp !! ?i) |]
      ==> sparse_mult ?ds ?y = (SUM i:S ?mdp. lookup 0 ?ds i * ?y !! i)",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 3)),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 12, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 3)),
                  template_var 2)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 5, t_empty),
           template_app
            (template_hole 0,
             template_app (template_hole 12, template_var 3)))))),
    ("MDP_RP_Certification.valid_sub_certD",
     "[| valid_mdp_rp ?mdp; valid_sub_cert ?mdp ?c ?ord ?check;
         ?i < state_count ?mdp; ~ states1 ?mdp !! ?i;
         ~ states2 ?mdp !! ?i |]
      ==> solution ?c !! ?i = 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 8, template_var 4)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 4)),
                  template_var 0)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 4, template_var 4)),
                  template_var 0)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 3)),
           template_var 0),
         template_hole 0))),
    ("MDP_RP_Certification.valid_sub_certD",
     "[| valid_mdp_rp ?mdp; valid_sub_cert ?mdp ?c ?ord ?check;
         ?i < state_count ?mdp; states1 ?mdp !! ?i |]
      ==> 0 < solution ?c !! ?i -->
          ?check (distrs ?mdp !! ?i) (witness ?c !! ?i)",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 13, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 11, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 4)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_var 3)),
                   template_var 0))),
             template_app
              (template_app
                (template_var 1,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 4)),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 3)),
                 template_var 0)))
           ))),
    ("MDP_RP_Certification.valid_sub_certD",
     "[| valid_mdp_rp ?mdp; valid_sub_cert ?mdp ?c ?ord ?check;
         ?i < state_count ?mdp; states1 ?mdp !! ?i;
         ?ds : set (distrs ?mdp !! ?i) |]
      ==> ?ord (sparse_mult ?ds (solution ?c)) (solution ?c !! ?i)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 9, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 5)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 5)),
                  template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_var 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 1, template_var 4))),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 4)),
               template_var 1))
           ))),
    ("MDP_RP_Certification.valid_neg_certD",
     "[| valid_mdp_rp ?mdp; valid_neg_cert ?mdp ?c; ?i < state_count ?mdp;
         states1 ?mdp !! ?i; 0 < solution ?c !! ?i;
         witness ?c !! ?i = (?js, ?n) |]
      ==> list_all2
           (%j ds.
               j < state_count ?mdp &
               snd (witness ?c !! j) < ?n &
               lookup 0 ds j ~= 0 & 0 < solution ?c !! j)
           ?js (distrs ?mdp !! ?i)",
     template_implication
      ([template_predicate
         (template_app (template_hole 21, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 4),
              template_var 3)
            ),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 18, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app (template_hole 16, template_var 4)),
              template_var 2)
            ),
        template_inequation
         (less_than, template_hole 14,
          template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 3)),
            template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 3)),
            template_var 2),
          template_app
           (template_app (template_hole 8, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, t_empty), template_var 1),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 4)),
               template_var 2))
           ))),
    ("MDP_RP_Certification.valid_pos_certD",
     "[| valid_mdp_rp ?mdp; valid_pos_cert ?mdp ?c; ?i < state_count ?mdp;
         states1 ?mdp !! ?i; 0 < solution ?c !! ?i;
         witness ?c !! ?i = ((?j, ?a), ?n) |]
      ==> snd (witness ?c !! ?j) < ?n &
          ?j < state_count ?mdp &
          ?a < length (distrs ?mdp !! ?i) &
          lookup 0 (distrs ?mdp !! ?i ! ?a) ?j ~= 0 &
          0 < solution ?c !! ?j",
     template_implication
      ([template_predicate
         (template_app (template_hole 23, template_var 5)),
        template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 5),
              template_var 4)
            ),
        template_inequation
         (less_than, template_var 3,
          template_app (template_hole 20, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app (template_hole 18, template_var 5)),
              template_var 3)
            ),
        template_inequation
         (less_than, template_hole 16,
          template_app
           (template_app
             (template_hole 15,
              template_app (template_hole 14, template_var 4)),
            template_var 3)),
        template_equation
         (template_app
           (template_app
             (template_hole 12,
              template_app (template_hole 11, template_var 4)),
            template_var 3),
          template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1)),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 21,
                   template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 12,
                         template_app (template_hole 11, template_var 4)),
                       template_var 2))),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 21, template_var 2),
                   template_app (template_hole 20, template_var 5))),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 21, template_var 1),
                     template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app (template_hole 4, template_var 5)),
                         template_var 3)))),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app
                            (template_app
                              (template_app
                                (template_hole 1, template_hole 16),
                               template_app
                                (template_app
                                  (template_hole 0,
                                   template_app
                                    (template_app
(template_hole 5, template_app (template_hole 4, template_var 5)),
                                     template_var 3)),
                                 template_var 1)),
                             template_var 2)),
                         template_hole 16))),
                   template_app
                    (template_app (template_hole 17, template_hole 16),
                     template_app
                      (template_app
                        (template_hole 15,
                         template_app (template_hole 14, template_var 4)),
                       template_var 2))))))
           )))]:
   (string * thm * template) list
### theory "Draft.MDP_RP_CertificationTemplates"
### 1.377s elapsed time, 1.690s cpu time, 0.185s GC time
val it = (): unit
