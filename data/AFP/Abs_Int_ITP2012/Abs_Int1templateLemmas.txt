   [("Abs_Int1.listrel_converse", "listrel (?r^-1) = (listrel ?r)^-1",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Abs_Int1.strict_inv_image",
     "strict (inv_image ?r ?f) = inv_image (strict ?r) ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))),
         template_var 0))),
    ("Abs_Int1.acc_inv_image", "acc ?r ==> acc (inv_image ?r ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_app
                   (template_hole 5,
                    template_app (template_hole 7, template_var 1)))))
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0)),
                 template_app
                  (template_hole 0,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 0))))))
           ))),
    ("Abs_Int1.listrel_Cons_iff",
     "((?x # ?xs, ?y # ?ys) : listrel ?r) =
      ((?x, ?y) : ?r & (?xs, ?ys) : listrel ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 4),
                 template_var 3)),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1))),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 2)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 3),
               template_var 1)),
           template_app (template_hole 3, template_var 0))))),
    ("Abs_Int1.le_iff_le_annos",
     "(?c1.0 \<sqsubseteq> ?c2.0) =
      ((annos ?c1.0, annos ?c2.0) : listrel {(x, y). x \<sqsubseteq> y} &
       strip ?c1.0 = strip ?c2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 1)),
                     template_app (template_hole 6, template_var 0))),
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, t_empty))))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Abs_Int1.listrel_app",
     "[| (?xs1.0, ?ys1.0) : listrel ?r; (?xs2.0, ?ys2.0) : listrel ?r |]
      ==> (?xs1.0 @ ?xs2.0, ?ys1.0 @ ?ys2.0) : listrel ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3)),
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_app (template_hole 2, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0))),
             template_app (template_hole 2, template_var 2))
           ))),
    ("Abs_Int1.listrel_app_same_size",
     "[| length ?xs1.0 = length ?ys1.0; length ?xs2.0 = length ?ys2.0 |]
      ==> ((?xs1.0 @ ?xs2.0, ?ys1.0 @ ?ys2.0) : listrel ?r) =
          ((?xs1.0, ?ys1.0) : listrel ?r & (?xs2.0, ?ys2.0) : listrel ?r)",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 4),
          template_app (template_hole 7, template_var 3)),
        template_equation
         (template_app (template_hole 8, template_var 2),
          template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 4),
                   template_var 2)),
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1))),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 4),
                   template_var 3)),
               template_app (template_hole 1, template_var 0))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1)),
             template_app (template_hole 1, template_var 0)))))),
    ("Abs_Int1.acc_listrel",
     "[| refl ?r; trans ?r; acc ?r |] ==> acc (listrel ?r - {([], [])})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_hole 15),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 14, template_var 0)),
        template_predicate
         (
            template_app
             (template_hole 13,
              template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 0),
                  template_app
                   (template_hole 10,
                    template_app (template_hole 12, template_var 0)))))
            )],
       template_predicate
        (
           template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_var 0)),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 3, template_hole 2),
                           template_hole 2)),
                       template_hole 1))),
                 template_app
                  (template_hole 0,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_var 0)),
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app
                            (template_app
                              (template_hole 3, template_hole 2),
                             template_hole 2)),
                         template_hole 1)))))))
           ))),
    ("Abs_Int1.pfp_termination",
     "[| !!x y. x \<sqsubseteq> y ==> ?f x \<sqsubseteq> ?f y;
         acc {(x, y). x \<sqsubseteq> y}; ?x0.0 \<sqsubseteq> ?f ?x0.0 |]
      ==> EX x. pfp ?f ?x0.0 = Some x",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app (template_hole 5, t_empty))),
                  template_app
                   (template_hole 4,
                    template_app
                     (template_hole 8,
                      template_app
                       (template_hole 6,
                        template_app (template_hole 5, t_empty)))))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_app (template_var 1, template_var 0))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Abs_Int1.lpfpc_termination",
     "[| acc {(x, y). x \<sqsubseteq> y};
         !!x y. x \<sqsubseteq> y ==> ?f x \<sqsubseteq> ?f y;
         !!c. strip (?f c) = strip c |]
      ==> EX c'. lpfp\<^sub>c ?f ?c = Some c'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 14,
              template_app
               (template_hole 13,
                template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_hole 11,
                      template_app (template_hole 10, t_empty))),
                  template_app
                   (template_hole 8,
                    template_app
                     (template_hole 13,
                      template_app
                       (template_hole 11,
                        template_app (template_hole 10, t_empty)))))))
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Abs_Int1.measure_st",
     "[| (strict {(x, y). x \<sqsubseteq> y})^-1 <= measure ?m;
         ALL x y. x \<sqsubseteq> y & y \<sqsubseteq> x --> ?m x = ?m y |]
      ==> (strict {(S, S'). S \<sqsubseteq> S'})^-1
          <= measure
              (%fd. SUM x |
                       x : set (Abs_State.dom fd) &
                       ~ \<top> \<sqsubseteq> fun fd x.
                       ?m (fun fd x) + 1)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 28,
            template_app
             (template_app
               (template_hole 27,
                template_app
                 (template_hole 26,
                  template_app (template_hole 25, t_empty))),
              template_app
               (template_hole 23,
                template_app
                 (template_hole 28,
                  template_app
                   (template_hole 26,
                    template_app (template_hole 25, t_empty)))))),
          template_app (template_hole 22, template_var 0)),
        template_predicate (template_app (template_hole 21, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 16,
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_hole 14,
                 template_app (template_hole 13, t_empty))),
             template_app
              (template_hole 11,
               template_app
                (template_hole 16,
                 template_app
                  (template_hole 14,
                   template_app (template_hole 13, t_empty)))))),
         template_app (template_hole 10, t_empty))))]
