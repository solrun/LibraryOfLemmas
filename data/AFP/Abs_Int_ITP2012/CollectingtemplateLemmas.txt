   [("Collecting.mono_step", "mono (step ?S)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Collecting.strip_CS", "strip (CS ?c) = ?c",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Collecting.strip_step", "strip (step ?S ?c) = strip ?c",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Collecting.CS_unfold", "CS ?c = step UNIV (CS ?c)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app (template_hole 2, template_var 0)))),
    ("Collecting.le_post", "?c <= ?d ==> post ?c <= post ?d",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Collecting.SKIP_le",
     "(SKIP {?S} <= ?c) = (EX S'. ?c = SKIP {S'} & ?S <= S')",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_var 0),
       template_app (template_hole 3, t_empty))),
    ("Collecting.mono2_step",
     "[| ?c1.0 <= ?c2.0; ?S1.0 <= ?S2.0 |]
      ==> step ?S1.0 ?c1.0 <= step ?S2.0 ?c2.0",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 3),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Collecting.Assign_le",
     "(?x ::= ?e {?S} <= ?c) = (EX S'. ?c = ?x ::= ?e {S'} & ?S <= S')",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 3, t_empty))),
    ("Collecting.index_lfp", "Collecting.lfp ?f ?i : {c'. strip c' = ?i}",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 5, t_empty),
                   template_app (template_hole 1, t_empty)),
                 template_var 1),
               template_var 0)),
           template_app (template_hole 4, t_empty))
         )),
    ("Collecting.Seq_le",
     "(?c1.0;;
       ?c2.0 <= ?c) =
      (EX c1' c2'. ?c = c1';;
                   c2' &
                   ?c1.0 <= c1' & ?c2.0 <= c2')",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Collecting.Glb_in_L",
     "?A <= {c'. strip c' = ?i} ==>
      lift \<Inter> ?i ?A : {c'. strip c' = ?i}",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, t_empty), template_var 0),
                 template_var 1)),
             template_app (template_hole 5, t_empty))
           ))),
    ("Collecting.Glb_lower",
     "[| ?A <= {c'. strip c' = ?i}; ?a : ?A |]
      ==> lift \<Inter> ?i ?A <= ?a",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, t_empty), template_var 1),
           template_var 2),
         template_var 0))),
    ("Collecting.Glb_greatest",
     "[| ?b : {c'. strip c' = ?i}; ALL a:?A. ?b <= a |]
      ==> ?b <= lift \<Inter> ?i ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0), t_empty)
            )],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app
            (template_app (template_hole 1, t_empty), template_var 1),
           template_var 0)))),
    ("Collecting.lfp_lowerbound",
     "[| ?a : {c'. strip c' = ?i}; ?f ?a <= ?a |]
      ==> Collecting.lfp ?f ?i <= ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, t_empty))
            ),
        template_inequation
         (less_equals, template_app (template_var 0, template_var 2),
          template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app (template_hole 1, t_empty)),
             template_var 0),
           template_var 1),
         template_var 2))),
    ("Collecting.If_le",
     "(IF ?b THEN ?c1.0 ELSE ?c2.0
       {?S}
       <= ?c) =
      (EX c1' c2' S'.
          ?c = IF ?b THEN c1' ELSE c2'
               {S'} &
          ?c1.0 <= c1' & ?c2.0 <= c2' & ?S <= S')",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Collecting.While_le",
     "({?Inv}
       WHILE ?b DO ?c
       {?P}
       <= ?w) =
      (EX Inv' c' P'.
          ?w = {Inv'}
               WHILE ?b DO c'
               {P'} &
          ?c <= c' & ?Inv <= Inv' & ?P <= P')",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Collecting.lfp_cs_unfold",
     "Collecting.lfp (step ?S) ?c = step ?S (Collecting.lfp (step ?S) ?c)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, t_empty),
             template_app (template_hole 2, t_empty)),
           template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 6, t_empty),
               template_app (template_hole 2, t_empty)),
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Collecting.lfp_greatest",
     "[| ?a : {c'. strip c' = ?i};
         !!u. [| u : {c'. strip c' = ?i}; ?f u <= u |] ==> ?a <= u |]
      ==> ?a <= Collecting.lfp ?f ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app (template_hole 7, t_empty))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app (template_hole 1, t_empty)),
             template_var 0),
           template_var 1)))),
    ("Collecting.lfp_unfold",
     "[| !!x i. (?f x : {c'. strip c' = i}) = (x : {c'. strip c' = i});
         mono ?f |]
      ==> Collecting.lfp ?f ?i = ?f (Collecting.lfp ?f ?i)",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app (template_hole 1, t_empty)),
             template_var 1),
           template_var 0),
         template_app
          (template_var 1,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, t_empty),
                 template_app (template_hole 1, t_empty)),
               template_var 1),
             template_var 0)))))]
