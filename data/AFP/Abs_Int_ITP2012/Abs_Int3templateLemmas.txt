   [("Abs_Int3.m_ivl_height", "m_ivl ?ivl <= 2",
     template_inequation
      (less_equals, template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 2,
         template_app (template_hole 1, template_hole 0)))),
    ("Abs_Int3.AI_ivl'_termination", "EX c'. AI_ivl' ?c = Some c'",
     template_predicate (template_app (template_hole 3, t_empty))),
    ("Abs_Int3.Top_less_ivl", "\<top> \<sqsubseteq> ?x ==> m_ivl ?x = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Abs_Int3.iter_winden_step_ivl_termination",
     "EX c. iter_widen (step_ivl \<top>) (\<bottom>\<^sub>c ?c0.0) =
            Some c",
     template_predicate (template_app (template_hole 6, t_empty))),
    ("Abs_Int3.domo_narrow_subset",
     "domo (?S1.0 \<triangle> ?S2.0) <= domo ?S1.0 Un domo ?S2.0",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Abs_Int3.domo_widen_subset",
     "domo (?S1.0 \<nabla> ?S2.0) <= domo ?S1.0 Un domo ?S2.0",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Abs_Int3.n_ivl_mono", "?x \<sqsubseteq> ?y ==> n_ivl ?x <= n_ivl ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Abs_Int3.m_ivl_anti_mono",
     "?y \<sqsubseteq> ?x ==> m_ivl ?x <= m_ivl ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Abs_Int3.narrow1_acom",
     "?y \<sqsubseteq> ?x ==> ?y \<sqsubseteq> ?x \<triangle>\<^sub>c ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0),
               template_var 1))
           ))),
    ("Abs_Int3.narrow2_acom",
     "?y \<sqsubseteq> ?x ==> ?x \<triangle>\<^sub>c ?y \<sqsubseteq> ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 0),
                 template_var 1)),
             template_var 0)
           ))),
    ("Abs_Int3.m_st_anti_mono",
     "?S1.0 \<sqsubseteq> ?S2.0 ==> m_st m_ivl ?S2.0 <= m_st m_ivl ?S1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 1)))),
    ("Abs_Int3.iter_widen_pfp",
     "iter_widen ?f ?c = Some ?c' ==> ?f ?c' \<sqsubseteq> ?c'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_var 2, template_var 0)),
             template_var 0)
           ))),
    ("Abs_Int3.m_ivl_widen",
     "~ ?y \<sqsubseteq> ?x ==> m_ivl (?x \<nabla> ?y) < m_ivl ?x",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)
                )
            )],
       template_inequation
        (less_than,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Abs_Int3.widen1_acom",
     "strip ?c = strip ?c' ==> ?c \<sqsubseteq> ?c \<nabla>\<^sub>c ?c'",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1),
               template_var 0))
           ))),
    ("Abs_Int3.widen2_acom",
     "strip ?c = strip ?c' ==> ?c' \<sqsubseteq> ?c \<nabla>\<^sub>c ?c'",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1),
               template_var 0))
           ))),
    ("Abs_Int3.m_st_widen",
     "~ ?S2.0 \<sqsubseteq> ?S1.0 ==>
      m_st m_ivl (?S1.0 \<nabla> ?S2.0) < m_st m_ivl ?S1.0",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)
                )
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)))),
    ("Abs_Int3.strip_map2_acom",
     "strip ?c1.0 = strip ?c2.0 ==>
      strip (map2_acom ?f ?c1.0 ?c2.0) = strip ?c1.0",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 2),
          template_app (template_hole 1, template_var 1))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 1)),
         template_app (template_hole 1, template_var 2)))),
    ("Abs_Int3.strip_narrow_acom",
     "strip ?c' = strip ?c ==>
      strip (?c \<triangle>\<^sub>c ?c') = strip ?c",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0),
             template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Abs_Int3.strip_widen_acom",
     "strip ?c' = strip ?c ==> strip (?c \<nabla>\<^sub>c ?c') = strip ?c",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0),
             template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Abs_Int3.AI_wn_sound",
     "AI_ivl' ?c = Some ?c' ==> CS ?c <= \<gamma>\<^sub>c ?c'",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 1),
          template_app (template_hole 6, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 4, template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))),
           template_var 0)))),
    ("Abs_Int3.n_ivl_narrow",
     "~ ?x \<sqsubseteq> ?x \<triangle> ?y ==>
      n_ivl (?x \<triangle> ?y) < n_ivl ?x",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_var 0))
                )
            )],
       template_inequation
        (less_than,
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Abs_Int3.pfp_wn_pfp",
     "[| preord_class.mono ?f; pfp_wn ?f ?c = Some ?c' |]
      ==> ?f ?c' \<sqsubseteq> ?c'",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_var 2, template_var 0)),
             template_var 0)
           ))),
    ("Abs_Int3.m_st_height",
     "[| finite ?X; set (Abs_State.dom ?S) <= ?X |]
      ==> m_st m_ivl ?S <= 2 * card ?X",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_var 0)),
          template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 6, template_hole 5), template_var 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_app (template_hole 0, template_var 1))))),
    ("Abs_Int3.strip_pfp_wn",
     "[| ALL c. strip (?f c) = strip c; pfp_wn ?f ?c = Some ?c' |]
      ==> strip ?c' = ?c",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_equation
        (template_app (template_hole 3, template_var 0), template_var 1))),
    ("Abs_Int3.strip_iter_widen",
     "[| ALL c. strip (?f c) = strip c; iter_widen ?f ?c = Some ?c' |]
      ==> strip ?c' = strip ?c",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_equation
        (template_app (template_hole 3, template_var 0),
         template_app (template_hole 3, template_var 1)))),
    ("Abs_Int3.iter_narrow_step_ivl_termination",
     "[| ?c0.0 : Com (vars (strip ?c0.0));
         step_ivl \<top> ?c0.0 \<sqsubseteq> ?c0.0 |]
      ==> EX c. iter_narrow (step_ivl \<top>) ?c0.0 = Some c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 0))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 0)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Abs_Int3.strip_while",
     "[| ALL c. strip (?f c) = strip c; while_option ?P ?f ?c = Some ?c' |]
      ==> strip ?c' = strip ?c",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 2),
              template_var 3),
            template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_equation
        (template_app (template_hole 3, template_var 0),
         template_app (template_hole 3, template_var 1)))),
    ("Abs_Int3.annos_narrow_acom",
     "strip ?c1.0 = strip ?c2.0 ==>
      annos (?c1.0 \<triangle>\<^sub>c ?c2.0) =
      map2 (\<triangle>) (annos ?c1.0) (annos ?c2.0)",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 1),
          template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 1, t_empty)),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 5, template_var 1)),
             template_app (template_hole 5, template_var 0)))))),
    ("Abs_Int3.annos_widen_acom",
     "strip ?c1.0 = strip ?c2.0 ==>
      annos (?c1.0 \<nabla>\<^sub>c ?c2.0) =
      map2 (\<nabla>) (annos ?c1.0) (annos ?c2.0)",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 1),
          template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 1, t_empty)),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 5, template_var 1)),
             template_app (template_hole 5, template_var 0)))))),
    ("Abs_Int3.iter_narrow_pfp",
     "[| preord_class.mono ?f; ?f ?c0.0 \<sqsubseteq> ?c0.0;
         iter_narrow ?f ?c0.0 = Some ?c |]
      ==> ?f ?c \<sqsubseteq> ?c & ?c \<sqsubseteq> ?c0.0",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_var 2, template_var 1)),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_var 2, template_var 0)),
                 template_var 0)),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_var 1))
           ))),
    ("Abs_Int3.narrow_acom_Com",
     "[| strip ?c2.0 = strip ?c1.0; ?c1.0 : Com ?X; ?c2.0 : Com ?X |]
      ==> ?c1.0 \<triangle>\<^sub>c ?c2.0 : Com ?X",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 2),
          template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 1),
                 template_var 2)),
             template_app (template_hole 2, template_var 0))
           ))),
    ("Abs_Int3.widen_acom_Com",
     "[| strip ?c2.0 = strip ?c1.0; ?c1.0 : Com ?X; ?c2.0 : Com ?X |]
      ==> ?c1.0 \<nabla>\<^sub>c ?c2.0 : Com ?X",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 2),
          template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 1),
                 template_var 2)),
             template_app (template_hole 2, template_var 0))
           ))),
    ("Abs_Int3.iter_widen_step'_Com",
     "[| iter_widen (step_ivl \<top>) ?c = Some ?c'; vars (strip ?c) <= ?X;
         ?c : Com ?X |]
      ==> ?c' : Com ?X",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_hole 6)),
            template_var 2),
          template_app (template_hole 5, template_var 1)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 2)),
          template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Abs_Int3.n_o_mono",
     "[| domo ?S1.0 <= ?X; domo ?S2.0 <= ?X; ?S1.0 \<sqsubseteq> ?S2.0 |]
      ==> n_o (n_st n_ivl ?X) ?S1.0 <= n_o (n_st n_ivl ?X) ?S2.0",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 5, template_var 2),
          template_var 1),
        template_inequation
         (less_equals, template_app (template_hole 5, template_var 0),
          template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)))),
    ("Abs_Int3.n_st_mono",
     "[| set (Abs_State.dom ?S1.0) <= ?X; set (Abs_State.dom ?S2.0) <= ?X;
         ?S1.0 \<sqsubseteq> ?S2.0 |]
      ==> n_st n_ivl ?X ?S1.0 <= n_st n_ivl ?X ?S2.0",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 5,
            template_app (template_hole 4, template_var 2)),
          template_var 1),
        template_inequation
         (less_equals,
          template_app
           (template_hole 5,
            template_app (template_hole 4, template_var 0)),
          template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)))),
    ("Abs_Int3.m_o_anti_mono",
     "[| finite ?X; domo ?S2.0 <= ?X; ?S1.0 \<sqsubseteq> ?S2.0 |]
      ==> m_o (m_st m_ivl) (2 * card ?X) ?S2.0
          <= m_o (m_st m_ivl) (2 * card ?X) ?S1.0",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 10, template_var 1),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_hole 5)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_app (template_hole 0, template_var 2))),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_hole 5)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_app (template_hole 0, template_var 2))),
           template_var 0)))),
    ("Abs_Int3.m_o_widen",
     "[| finite ?X; domo ?S2.0 <= ?X; ~ ?S2.0 \<sqsubseteq> ?S1.0 |]
      ==> m_o (m_st m_ivl) (2 * card ?X) (?S1.0 \<nabla> ?S2.0)
          < m_o (m_st m_ivl) (2 * card ?X) ?S1.0",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 12, template_var 1),
          template_var 2),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_var 0)
                )
            )],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app (template_hole 7, template_hole 6)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2))),
               template_app (template_hole 1, template_var 2))),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app (template_hole 7, template_hole 6)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2))),
               template_app (template_hole 1, template_var 2))),
           template_var 0)))),
    ("Abs_Int3.n_o_narrow",
     "[| finite ?X; domo ?S1.0 <= ?X; domo ?S2.0 <= ?X;
         ?S2.0 \<sqsubseteq> ?S1.0;
         ~ ?S1.0 \<sqsubseteq> ?S1.0 \<triangle> ?S2.0 |]
      ==> n_o (n_st n_ivl ?X) (?S1.0 \<triangle> ?S2.0)
          < n_o (n_st n_ivl ?X) ?S1.0",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 7, template_var 1),
          template_var 2),
        template_inequation
         (less_equals, template_app (template_hole 7, template_var 0),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_var 0))
                )
            )],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2)),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2)),
           template_var 1)))),
    ("Abs_Int3.n_st_narrow",
     "[| finite ?X; set (Abs_State.dom ?S1.0) <= ?X;
         set (Abs_State.dom ?S2.0) <= ?X; ?S2.0 \<sqsubseteq> ?S1.0;
         ~ ?S1.0 \<sqsubseteq> ?S1.0 \<triangle> ?S2.0 |]
      ==> n_st n_ivl ?X (?S1.0 \<triangle> ?S2.0) < n_st n_ivl ?X ?S1.0",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app (template_hole 6, template_var 1)),
          template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app (template_hole 6, template_var 0)),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_var 0))
                )
            )],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2),
           template_var 1)))),
    ("Abs_Int3.measure_m_c",
     "finite ?X ==>
      {(c, c \<nabla>\<^sub>c c') |c c'.
       strip c' = strip c &
       c : Com ?X & c' : Com ?X & ~ c' \<sqsubseteq> c}^-1
      <= measure (m_c (m_o (m_st m_ivl) (2 * card ?X)))",
     template_implication
      ([template_predicate
         (template_app (template_hole 25, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 23, template_app (template_hole 22, t_empty)),
         template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_hole 5)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1))),
                 template_app (template_hole 0, template_var 0)))))))),
    ("Abs_Int3.measure_n_c",
     "finite ?X ==>
      {(c, c \<triangle>\<^sub>c c') |c c'.
       strip c = strip c' &
       c : Com ?X &
       c' : Com ?X &
       c' \<sqsubseteq> c & ~ c \<sqsubseteq> c \<triangle>\<^sub>c c'}^-1
      <= measure (m_c (n_o (n_st n_ivl ?X)))",
     template_implication
      ([template_predicate
         (template_app (template_hole 20, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 18, template_app (template_hole 17, t_empty)),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))))))),
    ("Abs_Int3.iter_widen_Com",
     "[| iter_widen ?f ?c = Some ?c';
         ALL c. c : Com ?X --> vars (strip c) <= ?X --> ?f c : Com ?X;
         !!c. strip (?f c) = strip c; ?c : Com ?X; vars (strip ?c) <= ?X |]
      ==> ?c' : Com ?X",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 10, template_var 3),
            template_var 2),
          template_app (template_hole 9, template_var 1)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 0))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 2)),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 1),
             template_app (template_hole 5, template_var 0))
           ))),
    ("Abs_Int3.while_Com",
     "[| while_option ?P ?f ?c = Some ?c'; !!c. strip (?f c) = strip c;
         ALL c. c : Com ?X --> vars (strip c) <= ?X --> ?f c : Com ?X;
         ?c : Com ?X; vars (strip ?c) <= ?X |]
      ==> ?c' : Com ?X",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 10, template_var 4),
              template_var 3),
            template_var 2),
          template_app (template_hole 9, template_var 1)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 0))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 0,
            template_app (template_hole 6, template_var 2)),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app (template_hole 2, template_var 0))
           ))),
    ("Abs_Int3.iter_narrow_termination",
     "[| !!c. ?P c ==> ?P (c \<triangle>\<^sub>c ?f c);
         wf ({uu_.
              EX c c'.
                 uu_ = (c, c \<triangle>\<^sub>c ?f c) &
                 ?P c & ~ c \<sqsubseteq> c \<triangle>\<^sub>c ?f c}^-1);
         ?P ?c0.0 |]
      ==> EX c. iter_narrow ?f ?c0.0 = Some c",
     template_implication
      ([template_predicate (template_app (template_hole 16, t_empty)),
        template_predicate
         (
            template_app
             (template_hole 12,
              template_app
               (template_hole 11, template_app (template_hole 10, t_empty)))
            ),
        template_predicate (template_app (template_var 2, template_var 0))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Abs_Int3.iter_widen_termination",
     "[| !!c. ?P c ==> ?P (?f c);
         !!c c'. [| ?P c; ?P c' |] ==> ?P (c \<nabla>\<^sub>c c');
         wf ({(c, c \<nabla>\<^sub>c c') |c c'.
              ?P c & ?P c' & ~ c' \<sqsubseteq> c}^-1);
         ?P ?c0.0; ?c0.0 \<sqsubseteq> ?f ?c0.0 |]
      ==> EX c. iter_widen ?f ?c0.0 = Some c",
     template_implication
      ([template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate
         (
            template_app
             (template_hole 11,
              template_app
               (template_hole 10, template_app (template_hole 9, t_empty)))
            ),
        template_predicate (template_app (template_var 2, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_var 1, template_var 0))
            )],
       template_predicate (template_app (template_hole 8, t_empty))))]
