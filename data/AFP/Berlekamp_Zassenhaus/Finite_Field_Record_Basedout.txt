Loading theory "Draft.Arithmetic_Record_Based" (required by "Draft.Finite_Field_Record_BasedTemplates" via "Draft.Finite_Field_Record_Based")
Loading theory "Draft.Finite_Field" (required by "Draft.Finite_Field_Record_BasedTemplates" via "Draft.Finite_Field_Record_Based")
Loading theory "Draft.Templates" (required by "Draft.Finite_Field_Record_BasedTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.069s elapsed time, 0.240s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Finite_Field_Record_BasedTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.577s elapsed time, 1.672s cpu time, 0.175s GC time
instantiation
  mod_ring :: (finite) equal
  equal_mod_ring == equal_class.equal :: 'a mod_ring => 'a mod_ring => bool
instantiation
  mod_ring :: (finite) comm_ring
  uminus_mod_ring == uminus :: 'a mod_ring => 'a mod_ring
  times_mod_ring == times :: 'a mod_ring => 'a mod_ring => 'a mod_ring
  zero_mod_ring == zero_class.zero :: 'a mod_ring
  minus_mod_ring == minus :: 'a mod_ring => 'a mod_ring => 'a mod_ring
  plus_mod_ring == plus :: 'a mod_ring => 'a mod_ring => 'a mod_ring
### Additional type variable(s) in locale specification "nontriv": 'a
class nontriv = type +
  assumes "nontriv": "1 < CARD('a)"
instantiation
  mod_ring :: (nontriv) comm_ring_1
  one_mod_ring == one_class.one :: 'a mod_ring
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
locale arith_ops
  fixes ops :: "'i arith_ops_record"  (structure)
### Additional type variable(s) in locale specification "prime_card": 'a
locale ring_ops
  fixes ops :: "'i arith_ops_record"
    and R :: "'i => 'a => bool"
  assumes "ring_ops ops R"
locale idom_ops
  fixes ops :: "'i arith_ops_record"
    and R :: "'i => 'a => bool"
  assumes "idom_ops ops R"
class prime_card = type +
  assumes "prime_card": "prime CARD('a)"
locale idom_divide_ops
  fixes ops :: "'i arith_ops_record"
    and R :: "'i => 'a => bool"
  assumes "idom_divide_ops ops R"
locale euclidean_semiring_ops
  fixes ops :: "'i arith_ops_record"
    and R :: "'i => 'a => bool"
  assumes "euclidean_semiring_ops ops R"
locale euclidean_ring_ops
  fixes ops :: "'i arith_ops_record"
    and R :: "'i => 'a => bool"
  assumes "euclidean_ring_ops ops R"
locale field_ops
  fixes ops :: "'i arith_ops_record"
    and R :: "'i => 'a => bool"
  assumes "field_ops ops R"
### theory "Draft.Arithmetic_Record_Based"
### 1.576s elapsed time, 3.802s cpu time, 0.411s GC time
instantiation
  mod_ring :: (prime_card) field
  inverse_mod_ring == inverse :: 'a mod_ring => 'a mod_ring
  divide_mod_ring == divide :: 'a mod_ring => 'a mod_ring => 'a mod_ring
instantiation
  mod_ring :: (prime_card) {normalization_euclidean_semiring,euclidean_ring}
  normalize_mod_ring == normalize :: 'a mod_ring => 'a mod_ring
  unit_factor_mod_ring == unit_factor :: 'a mod_ring => 'a mod_ring
  euclidean_size_mod_ring == euclidean_size :: 'a mod_ring => nat
  modulo_mod_ring == modulo :: 'a mod_ring => 'a mod_ring => 'a mod_ring
instantiation
  mod_ring :: (prime_card) euclidean_ring_gcd
  Gcd_mod_ring == Gcd :: 'a mod_ring set => 'a mod_ring
  Lcm_mod_ring == Lcm :: 'a mod_ring set => 'a mod_ring
  gcd_mod_ring == gcd :: 'a mod_ring => 'a mod_ring => 'a mod_ring
  lcm_mod_ring == lcm :: 'a mod_ring => 'a mod_ring => 'a mod_ring
instantiation
  mod_ring :: (prime_card) unique_euclidean_ring
  division_segment_mod_ring == division_segment ::
    'a mod_ring => 'a mod_ring
### theory "Draft.Finite_Field"
### 1.787s elapsed time, 4.016s cpu time, 0.411s GC time
Loading theory "Draft.Finite_Field_Record_Based" (required by "Draft.Finite_Field_Record_BasedTemplates")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale mod_ring_locale
  fixes p :: "int"
    and ty :: "'a itself"
  assumes "mod_ring_locale TYPE('a) p"
locale prime_field
  fixes p :: "int"
    and ty :: "'a itself"
  assumes "prime_field TYPE('a) p"
locale mod_ring_locale
  fixes p :: "int"
    and ty :: "'a itself"
  assumes "mod_ring_locale TYPE('a) p"
locale prime_field
  fixes p :: "int"
    and ty :: "'a itself"
  assumes "prime_field TYPE('a) p"
locale mod_ring_locale
  fixes p :: "int"
    and ty :: "'a itself"
  assumes "mod_ring_locale TYPE('a) p"
locale prime_field
  fixes p :: "int"
    and ty :: "'a itself"
  assumes "prime_field TYPE('a) p"
locale mod_ring_locale
  fixes p :: "int"
    and ty :: "'a itself"
  assumes "mod_ring_locale TYPE('a) p"
locale prime_field
  fixes p :: "int"
    and ty :: "'a itself"
  assumes "prime_field TYPE('a) p"
locale prime_field
  fixes p :: "int"
    and ty :: "'a itself"
  assumes "prime_field TYPE('a) p"
[| p = int_of_uint64 ?pp; p <= 4294967295 |]
==> field_ops (finite_field_ops64 ?pp) mod_ring_rel64
[| p = int_of_uint32 ?pp; p <= 65535 |]
==> field_ops (finite_field_ops32 ?pp) mod_ring_rel32
p = int_of_integer ?pp ==>
field_ops (finite_field_ops_integer ?pp) mod_ring_rel_integer
field_ops (finite_field_ops_int p) mod_ring_rel
locale mod_ring_locale
  fixes p :: "int"
    and ty :: "'a itself"
  assumes "mod_ring_locale TYPE('a) p"
[| p = int_of_uint64 ?pp; p <= 4294967295 |]
==> ring_ops (finite_field_ops64 ?pp) mod_ring_rel64
[| p = int_of_uint32 ?pp; p <= 65535 |]
==> ring_ops (finite_field_ops32 ?pp) mod_ring_rel32
p = int_of_integer ?pp ==>
ring_ops (finite_field_ops_integer ?pp) mod_ring_rel_integer
ring_ops (finite_field_ops_int p) mod_ring_rel
### theory "Draft.Finite_Field_Record_Based"
### 2.517s elapsed time, 2.880s cpu time, 0.588s GC time
Loading theory "Draft.Finite_Field_Record_BasedTemplates"
val templateLemmas =
   [("Finite_Field_Record_Based.int_of_uint32_ge_0",
     "0 <= int_of_uint32 ?n",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Finite_Field_Record_Based.int_of_uint64_ge_0",
     "0 <= int_of_uint64 ?n",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Finite_Field_Record_Based.int_of_integer_inv",
     "int_of_integer (integer_of_int ?x) = ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Finite_Field_Record_Based.shiftr_uint32_code",
     "drop_bit 1 ?x = uint32_shiftr ?x 1",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Finite_Field_Record_Based.shiftr_uint64_code",
     "drop_bit 1 ?x = uint64_shiftr ?x 1",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Finite_Field_Record_Based.shiftr_integer_code",
     "drop_bit 1 ?x = integer_shiftr ?x 1",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Finite_Field_Record_Based.int_of_integer_0_iff",
     "(int_of_integer ?n = 0) = (?n = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Finite_Field_Record_Based.int_of_uint32_0_iff",
     "(int_of_uint32 ?n = 0) = (?n = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Finite_Field_Record_Based.int_of_uint64_0_iff",
     "(int_of_uint64 ?n = 0) = (?n = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Finite_Field_Record_Based.int_of_integer_minus",
     "int_of_integer (?x - ?y) = int_of_integer ?x - int_of_integer ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Finite_Field_Record_Based.int_of_integer_plus",
     "int_of_integer (?x + ?y) = int_of_integer ?x + int_of_integer ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Finite_Field_Record_Based.int_of_integer_mult",
     "int_of_integer (?x * ?y) = int_of_integer ?x * int_of_integer ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Finite_Field_Record_Based.int_of_integer_mod",
     "int_of_integer (?x mod ?y) = int_of_integer ?x mod int_of_integer ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Finite_Field_Record_Based.int_of_uint32_mod",
     "int_of_uint32 (?x mod ?y) = int_of_uint32 ?x mod int_of_uint32 ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Finite_Field_Record_Based.int_of_uint64_mod",
     "int_of_uint64 (?x mod ?y) = int_of_uint64 ?x mod int_of_uint64 ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Finite_Field_Record_Based.int_of_integer_shift",
     "int_of_integer (drop_bit ?k ?n) = int_of_integer ?n div 2 ^ ?k",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 6, template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))),
           template_var 1)))),
    ("Finite_Field_Record_Based.int_of_uint32_shift",
     "int_of_uint32 (drop_bit ?k ?n) = int_of_uint32 ?n div 2 ^ ?k",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 6, template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))),
           template_var 1)))),
    ("Finite_Field_Record_Based.int_of_uint64_shift",
     "int_of_uint64 (drop_bit ?k ?n) = int_of_uint64 ?n div 2 ^ ?k",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 6, template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))),
           template_var 1)))),
    ("Finite_Field_Record_Based.mod_nonneg_pos_int",
     "[| 0 <= ?x; 0 < ?y |] ==> mod_nonneg_pos_int ?x ?y = ?x mod ?y",
     template_implication
      ([template_inequation (less_equals, template_hole 4, template_var 1),
        template_inequation (less_than, template_hole 4, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Finite_Field_Record_Based.int_of_uint32_minus",
     "int_of_uint32 (?x - ?y) =
      (int_of_uint32 ?x - int_of_uint32 ?y) mod 4294967296",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 6, template_var 1)),
             template_app (template_hole 6, template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 1,
                               template_app
                                (template_hole 1,
                                 template_app
                                  (template_hole 1,
                                   template_app
                                    (template_hole 1,
                                     template_app
(template_hole 1,
 template_app
  (template_hole 1,
   template_app
    (template_hole 1,
     template_app
      (template_hole 1,
       template_app
        (template_hole 1,
         template_app
          (template_hole 1,
           template_app
            (template_hole 1,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 1,
                               template_app
                                (template_hole 1,
                                 template_app
                                  (template_hole 1,
                                   template_app
                                    (template_hole 1,
                                     template_hole
0)))))))))))))))))))))))))))))))))))),
    ("Finite_Field_Record_Based.int_of_uint32_plus",
     "int_of_uint32 (?x + ?y) =
      (int_of_uint32 ?x + int_of_uint32 ?y) mod 4294967296",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 6, template_var 1)),
             template_app (template_hole 6, template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 1,
                               template_app
                                (template_hole 1,
                                 template_app
                                  (template_hole 1,
                                   template_app
                                    (template_hole 1,
                                     template_app
(template_hole 1,
 template_app
  (template_hole 1,
   template_app
    (template_hole 1,
     template_app
      (template_hole 1,
       template_app
        (template_hole 1,
         template_app
          (template_hole 1,
           template_app
            (template_hole 1,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 1,
                               template_app
                                (template_hole 1,
                                 template_app
                                  (template_hole 1,
                                   template_app
                                    (template_hole 1,
                                     template_hole
0)))))))))))))))))))))))))))))))))))),
    ("Finite_Field_Record_Based.int_of_uint32_mult",
     "int_of_uint32 (?x * ?y) =
      int_of_uint32 ?x * int_of_uint32 ?y mod 4294967296",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 6, template_var 1)),
             template_app (template_hole 6, template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 1,
                               template_app
                                (template_hole 1,
                                 template_app
                                  (template_hole 1,
                                   template_app
                                    (template_hole 1,
                                     template_app
(template_hole 1,
 template_app
  (template_hole 1,
   template_app
    (template_hole 1,
     template_app
      (template_hole 1,
       template_app
        (template_hole 1,
         template_app
          (template_hole 1,
           template_app
            (template_hole 1,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 1,
                               template_app
                                (template_hole 1,
                                 template_app
                                  (template_hole 1,
                                   template_app
                                    (template_hole 1,
                                     template_hole
0)))))))))))))))))))))))))))))))))))),
    ("Finite_Field_Record_Based.int_of_uint32_inv",
     "[| 0 <= ?x; ?x < 4294967296 |]
      ==> int_of_uint32 (uint32_of_int ?x) = ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 7, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_hole 5,
            template_app
             (template_hole 4,
              template_app
               (template_hole 4,
                template_app
                 (template_hole 4,
                  template_app
                   (template_hole 4,
                    template_app
                     (template_hole 4,
                      template_app
                       (template_hole 4,
                        template_app
                         (template_hole 4,
                          template_app
                           (template_hole 4,
                            template_app
                             (template_hole 4,
                              template_app
                               (template_hole 4,
                                template_app
                                 (template_hole 4,
                                  template_app
                                   (template_hole 4,
                                    template_app
                                     (template_hole 4,
template_app
 (template_hole 4,
  template_app
   (template_hole 4,
    template_app
     (template_hole 4,
      template_app
       (template_hole 4,
        template_app
         (template_hole 4,
          template_app
           (template_hole 4,
            template_app
             (template_hole 4,
              template_app
               (template_hole 4,
                template_app
                 (template_hole 4,
                  template_app
                   (template_hole 4,
                    template_app
                     (template_hole 4,
                      template_app
                       (template_hole 4,
                        template_app
                         (template_hole 4,
                          template_app
                           (template_hole 4,
                            template_app
                             (template_hole 4,
                              template_app
                               (template_hole 4,
                                template_app
                                 (template_hole 4,
                                  template_app
                                   (template_hole 4,
                                    template_app
                                     (template_hole 4,
template_hole 3))))))))))))))))))))))))))))))))))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Finite_Field_Record_Based.int_of_uint64_minus",
     "int_of_uint64 (?x - ?y) =
      (int_of_uint64 ?x - int_of_uint64 ?y) mod 18446744073709551616",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 6, template_var 1)),
             template_app (template_hole 6, template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 1,
                               template_app
                                (template_hole 1,
                                 template_app
                                  (template_hole 1,
                                   template_app
                                    (template_hole 1,
                                     template_app
(template_hole 1,
 template_app
  (template_hole 1,
   template_app
    (template_hole 1,
     template_app
      (template_hole 1,
       template_app
        (template_hole 1,
         template_app
          (template_hole 1,
           template_app
            (template_hole 1,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 1,
                               template_app
                                (template_hole 1,
                                 template_app
                                  (template_hole 1,
                                   template_app
                                    (template_hole 1,
                                     template_app
(template_hole 1,
 template_app
  (template_hole 1,
   template_app
    (template_hole 1,
     template_app
      (template_hole 1,
       template_app
        (template_hole 1,
         template_app
          (template_hole 1,
           template_app
            (template_hole 1,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 1,
                               template_app
                                (template_hole 1,
                                 template_app
                                  (template_hole 1,
                                   template_app
                                    (template_hole 1,
                                     template_app
(template_hole 1,
 template_app
  (template_hole 1,
   template_app
    (template_hole 1,
     template_app
      (template_hole 1,
       template_app
        (template_hole 1,
         template_app
          (template_hole 1,
           template_app
            (template_hole 1,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 1,
                         template_hole
                          0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),
    ("Finite_Field_Record_Based.int_of_uint64_plus",
     "int_of_uint64 (?x + ?y) =
      (int_of_uint64 ?x + int_of_uint64 ?y) mod 18446744073709551616",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 6, template_var 1)),
             template_app (template_hole 6, template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 1,
                               template_app
                                (template_hole 1,
                                 template_app
                                  (template_hole 1,
                                   template_app
                                    (template_hole 1,
                                     template_app
(template_hole 1,
 template_app
  (template_hole 1,
   template_app
    (template_hole 1,
     template_app
      (template_hole 1,
       template_app
        (template_hole 1,
         template_app
          (template_hole 1,
           template_app
            (template_hole 1,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 1,
                               template_app
                                (template_hole 1,
                                 template_app
                                  (template_hole 1,
                                   template_app
                                    (template_hole 1,
                                     template_app
(template_hole 1,
 template_app
  (template_hole 1,
   template_app
    (template_hole 1,
     template_app
      (template_hole 1,
       template_app
        (template_hole 1,
         template_app
          (template_hole 1,
           template_app
            (template_hole 1,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 1,
                               template_app
                                (template_hole 1,
                                 template_app
                                  (template_hole 1,
                                   template_app
                                    (template_hole 1,
                                     template_app
(template_hole 1,
 template_app
  (template_hole 1,
   template_app
    (template_hole 1,
     template_app
      (template_hole 1,
       template_app
        (template_hole 1,
         template_app
          (template_hole 1,
           template_app
            (template_hole 1,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 1,
                         template_hole
                          0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),
    ("Finite_Field_Record_Based.int_of_uint64_mult",
     "int_of_uint64 (?x * ?y) =
      int_of_uint64 ?x * int_of_uint64 ?y mod 18446744073709551616",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 6, template_var 1)),
             template_app (template_hole 6, template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 1,
                               template_app
                                (template_hole 1,
                                 template_app
                                  (template_hole 1,
                                   template_app
                                    (template_hole 1,
                                     template_app
(template_hole 1,
 template_app
  (template_hole 1,
   template_app
    (template_hole 1,
     template_app
      (template_hole 1,
       template_app
        (template_hole 1,
         template_app
          (template_hole 1,
           template_app
            (template_hole 1,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 1,
                               template_app
                                (template_hole 1,
                                 template_app
                                  (template_hole 1,
                                   template_app
                                    (template_hole 1,
                                     template_app
(template_hole 1,
 template_app
  (template_hole 1,
   template_app
    (template_hole 1,
     template_app
      (template_hole 1,
       template_app
        (template_hole 1,
         template_app
          (template_hole 1,
           template_app
            (template_hole 1,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 1,
                               template_app
                                (template_hole 1,
                                 template_app
                                  (template_hole 1,
                                   template_app
                                    (template_hole 1,
                                     template_app
(template_hole 1,
 template_app
  (template_hole 1,
   template_app
    (template_hole 1,
     template_app
      (template_hole 1,
       template_app
        (template_hole 1,
         template_app
          (template_hole 1,
           template_app
            (template_hole 1,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 1,
                         template_hole
                          0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),
    ("Finite_Field_Record_Based.int_of_uint64_inv",
     "[| 0 <= ?x; ?x < 18446744073709551616 |]
      ==> int_of_uint64 (uint64_of_int ?x) = ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 7, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_hole 5,
            template_app
             (template_hole 4,
              template_app
               (template_hole 4,
                template_app
                 (template_hole 4,
                  template_app
                   (template_hole 4,
                    template_app
                     (template_hole 4,
                      template_app
                       (template_hole 4,
                        template_app
                         (template_hole 4,
                          template_app
                           (template_hole 4,
                            template_app
                             (template_hole 4,
                              template_app
                               (template_hole 4,
                                template_app
                                 (template_hole 4,
                                  template_app
                                   (template_hole 4,
                                    template_app
                                     (template_hole 4,
template_app
 (template_hole 4,
  template_app
   (template_hole 4,
    template_app
     (template_hole 4,
      template_app
       (template_hole 4,
        template_app
         (template_hole 4,
          template_app
           (template_hole 4,
            template_app
             (template_hole 4,
              template_app
               (template_hole 4,
                template_app
                 (template_hole 4,
                  template_app
                   (template_hole 4,
                    template_app
                     (template_hole 4,
                      template_app
                       (template_hole 4,
                        template_app
                         (template_hole 4,
                          template_app
                           (template_hole 4,
                            template_app
                             (template_hole 4,
                              template_app
                               (template_hole 4,
                                template_app
                                 (template_hole 4,
                                  template_app
                                   (template_hole 4,
                                    template_app
                                     (template_hole 4,
template_app
 (template_hole 4,
  template_app
   (template_hole 4,
    template_app
     (template_hole 4,
      template_app
       (template_hole 4,
        template_app
         (template_hole 4,
          template_app
           (template_hole 4,
            template_app
             (template_hole 4,
              template_app
               (template_hole 4,
                template_app
                 (template_hole 4,
                  template_app
                   (template_hole 4,
                    template_app
                     (template_hole 4,
                      template_app
                       (template_hole 4,
                        template_app
                         (template_hole 4,
                          template_app
                           (template_hole 4,
                            template_app
                             (template_hole 4,
                              template_app
                               (template_hole 4,
                                template_app
                                 (template_hole 4,
                                  template_app
                                   (template_hole 4,
                                    template_app
                                     (template_hole 4,
template_app
 (template_hole 4,
  template_app
   (template_hole 4,
    template_app
     (template_hole 4,
      template_app
       (template_hole 4,
        template_app
         (template_hole 4,
          template_app
           (template_hole 4,
            template_app
             (template_hole 4,
              template_app
               (template_hole 4,
                template_app
                 (template_hole 4,
                  template_app
                   (template_hole 4,
                    template_app
                     (template_hole 4,
                      template_app
                       (template_hole 4,
                        template_app
                         (template_hole 4,
                          template_hole
                           3))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0)))]:
   (string * thm * template) list
### theory "Draft.Finite_Field_Record_BasedTemplates"
### 1.035s elapsed time, 1.244s cpu time, 0.178s GC time
val it = (): unit
