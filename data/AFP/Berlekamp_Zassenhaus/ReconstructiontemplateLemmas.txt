   [("Reconstruction.foldr_of_Cons", "foldr (#) ?xs ?ys = ?xs @ ?ys",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Reconstruction.coeff_mult_0",
     "coeff (?f * ?g) 0 = coeff ?f 0 * coeff ?g 0",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 1)))),
    ("Reconstruction.foldr_map_prod",
     "foldr (%x. map_prod (?f x) (?g x)) ?xs ?base =
      (foldr ?f ?xs (fst ?base), foldr ?g ?xs (snd ?base))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, t_empty), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 1),
             template_app (template_hole 2, template_var 0))),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Reconstruction.mset_subseqs_size",
     "mset ` {ys: set (subseqs ?xs). length ys = ?n} =
      {ws. ws <=# mset ?xs & size ws = ?n}",
     template_equation
      (template_app
        (template_app (template_hole 11, template_hole 10),
         template_app (template_hole 9, t_empty)),
       template_app (template_hole 2, t_empty))),
    ("Reconstruction.lead_coeff_factor",
     "?u = ?v * ?w ==>
      lead_coeff (Polynomial.smult (lead_coeff ?v) ?w) = lead_coeff ?u",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_app (template_hole 0, template_var 1))),
               template_var 0)),
           template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_app (template_hole 0, template_var 1))),
               template_var 0))),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app (template_hole 0, template_var 2))))),
    ("Reconstruction.lead_coeff_factor",
     "?u = ?v * ?w ==>
      lead_coeff (Polynomial.smult (lead_coeff ?w) ?v) = lead_coeff ?u",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app (template_hole 0, template_var 0))),
               template_var 1)),
           template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app (template_hole 0, template_var 0))),
               template_var 1))),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app (template_hole 0, template_var 2))))),
    ("Reconstruction.lead_coeff_factor",
     "?u = ?v * ?w ==>
      Polynomial.smult (lead_coeff ?u) ?u =
      Polynomial.smult (lead_coeff ?w) ?v *
      Polynomial.smult (lead_coeff ?v) ?w",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 2))),
           template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_app (template_hole 0, template_var 0))),
               template_var 1)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 0, template_var 1))),
             template_var 0))))),
    ("Reconstruction.n",
     "[| prime ?p; comm_monoid_mult_class.coprime (lead_coeff ?f) ?p;
         poly_mod.square_free_m ?p ?f; 0 < degree ?f;
         berlekamp_hensel ?p ?n ?f = ?hs;
         2 * \<bar>lead_coeff ?f\<bar> * factor_bound ?f (degree_bound ?hs)
         < ?p ^ ?n |]
      ==> ?n ~= 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 19, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_app (template_hole 17, template_var 2),
                  template_app (template_hole 16, template_var 2))),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_than, template_hole 13,
          template_app (template_hole 16, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 11, template_var 3),
              template_var 1),
            template_var 2),
          template_var 0),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_hole 6))),
                template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 17, template_var 2),
                    template_app (template_hole 16, template_var 2))))),
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 0))),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 1))],
       template_negation
        (template_equation (template_var 1, template_hole 13)))),
    ("Reconstruction.not_irreducible\<^sub>d_lead_coeff_factors",
     "[| ~ irreducible\<^sub>d ?u; degree ?u ~= 0 |]
      ==> EX f g.
             Polynomial.smult (lead_coeff ?u) ?u = f * g &
             lead_coeff f = lead_coeff ?u &
             lead_coeff g = lead_coeff ?u &
             degree f < degree ?u & degree g < degree ?u",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 11, template_var 0))
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 9, template_var 0),
              template_hole 8)
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Reconstruction.zassenhaus_reconstruction_irreducible\<^sub>d",
     "[| prime ?p; comm_monoid_mult_class.coprime (lead_coeff ?f) ?p;
         poly_mod.square_free_m ?p ?f; 0 < degree ?f;
         berlekamp_hensel ?p ?n ?f = ?hs;
         2 * \<bar>lead_coeff ?f\<bar> * factor_bound ?f (degree_bound ?hs)
         < ?p ^ ?n;
         zassenhaus_reconstruction ?hs ?p ?n ?f = ?fs |]
      ==> ?f = prod_list ?fs & (ALL fi:set ?fs. irreducible\<^sub>d fi)",
     template_implication
      ([template_predicate
         (template_app (template_hole 24, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app
                 (template_app (template_hole 22, template_var 3),
                  template_app (template_hole 21, template_var 3))),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 4),
              template_var 3)
            ),
        template_inequation
         (less_than, template_hole 18,
          template_app (template_hole 21, template_var 3)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 16, template_var 4),
              template_var 2),
            template_var 3),
          template_var 1),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 14,
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_hole 13,
                    template_app (template_hole 12, template_hole 11))),
                template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 22, template_var 3),
                    template_app (template_hole 21, template_var 3))))),
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app (template_hole 8, template_var 1))),
          template_app
           (template_app (template_hole 7, template_var 4),
            template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_var 4),
              template_var 2),
            template_var 3),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_app (template_hole 3, template_var 0))),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               t_empty))
           ))),
    ("Reconstruction.zassenhaus_reconstruction",
     "[| prime ?p; comm_monoid_mult_class.coprime (lead_coeff ?f) ?p;
         poly_mod.square_free_m ?p ?f; 0 < degree ?f;
         berlekamp_hensel ?p ?n ?f = ?hs;
         2 * \<bar>lead_coeff ?f\<bar> * factor_bound ?f (degree_bound ?hs)
         < ?p ^ ?n;
         primitive ?f; zassenhaus_reconstruction ?hs ?p ?n ?f = ?fs |]
      ==> ?f = prod_list ?fs & (ALL fi:set ?fs. irreducible fi)",
     template_implication
      ([template_predicate
         (template_app (template_hole 25, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 24,
                template_app
                 (template_app (template_hole 23, template_var 3),
                  template_app (template_hole 22, template_var 3))),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 21, template_var 4),
              template_var 3)
            ),
        template_inequation
         (less_than, template_hole 19,
          template_app (template_hole 22, template_var 3)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 17, template_var 4),
              template_var 2),
            template_var 3),
          template_var 1),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 15,
              template_app
               (template_app
                 (template_hole 15,
                  template_app
                   (template_hole 14,
                    template_app (template_hole 13, template_hole 12))),
                template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 23, template_var 3),
                    template_app (template_hole 22, template_var 3))))),
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app (template_hole 9, template_var 1))),
          template_app
           (template_app (template_hole 8, template_var 4),
            template_var 2)),
        template_predicate (template_app (template_hole 7, template_var 3)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_var 4),
              template_var 2),
            template_var 3),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_app (template_hole 3, template_var 0))),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               t_empty))
           ))),
    ("Reconstruction.zassenhaus_reconstruction_generic",
     "[| prime ?p; comm_monoid_mult_class.coprime (lead_coeff ?f) ?p;
         poly_mod.square_free_m ?p ?f; 0 < degree ?f;
         berlekamp_hensel ?p ?n ?f = ?hs;
         2 * \<bar>lead_coeff ?f\<bar> * factor_bound ?f (degree_bound ?hs)
         < ?p ^ ?n;
         correct_subseqs_foldr_impl
          (%v. map_prod (poly_mod.mul_const (?p ^ ?n) v) ((#) v)) ?sl_impl
          ?sli;
         zassenhaus_reconstruction_generic ?sl_impl ?hs ?p ?n ?f = ?fs |]
      ==> ?f = prod_list ?fs & (ALL fi:set ?fs. irreducible\<^sub>d fi)",
     template_implication
      ([template_predicate
         (template_app (template_hole 28, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 27,
                template_app
                 (template_app (template_hole 26, template_var 5),
                  template_app (template_hole 25, template_var 5))),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 6),
              template_var 5)
            ),
        template_inequation
         (less_than, template_hole 22,
          template_app (template_hole 25, template_var 5)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 20, template_var 6),
              template_var 4),
            template_var 5),
          template_var 3),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 18,
              template_app
               (template_app
                 (template_hole 18,
                  template_app
                   (template_hole 17,
                    template_app (template_hole 16, template_hole 15))),
                template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 26, template_var 5),
                    template_app (template_hole 25, template_var 5))))),
            template_app
             (template_app (template_hole 13, template_var 5),
              template_app (template_hole 12, template_var 3))),
          template_app
           (template_app (template_hole 11, template_var 6),
            template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, t_empty), template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 3),
                template_var 6),
              template_var 4),
            template_var 5),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 5),
                 template_app (template_hole 3, template_var 0))),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               t_empty))
           )))]
