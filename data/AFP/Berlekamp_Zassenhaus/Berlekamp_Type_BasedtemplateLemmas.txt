   [("Berlekamp_Type_Based.finite_carrier_vec", "finite (carrier_vec ?n)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Berlekamp_Type_Based.row_echelon_form_berlekamp_resulting_mat",
     "row_echelon_form (berlekamp_resulting_mat ?u)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Berlekamp_Type_Based.inj_on_list_of_vec",
     "inj_on list_of_vec (carrier_vec ?n)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Berlekamp_Type_Based.list_of_vec_vec_of_list",
     "list_of_vec (vec_of_list ?a) = ?a",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Berlekamp_Type_Based.vec_of_list_list_of_vec",
     "vec_of_list (list_of_vec ?a) = ?a",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Berlekamp_Type_Based.inj_Poly_list_of_vec",
     "inj_on (Poly o list_of_vec) (carrier_vec ?n)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Berlekamp_Type_Based.berlekamp_mat_closed",
     "dim_col (berlekamp_mat ?u) = degree ?u",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Berlekamp_Type_Based.berlekamp_resulting_mat_closed",
     "dim_col (berlekamp_resulting_mat ?u) = degree ?u",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Berlekamp_Type_Based.berlekamp_mat_closed",
     "dim_row (berlekamp_mat ?u) = degree ?u",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Berlekamp_Type_Based.berlekamp_resulting_mat_closed",
     "dim_row (berlekamp_resulting_mat ?u) = degree ?u",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Berlekamp_Type_Based.dim_vec_of_list",
     "dim_vec (vec_of_list ?x) = length ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Berlekamp_Type_Based.length_list_of_vec",
     "length (list_of_vec ?A) = dim_vec ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Berlekamp_Type_Based.mat_of_rows_list_dim",
     "dim_col (mat_of_rows_list ?n ?vs) = ?n"  ,
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Berlekamp_Type_Based.fermat_theorem_mod_ring", "?a ^ CARD(?'a) = ?a",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)),
       template_var 0)),
    ("Berlekamp_Type_Based.vec_of_list_carrier",
     "vec_of_list ?x : carrier_vec (length ?x)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("Berlekamp_Type_Based.mat_of_rows_list_dim",
     "dim_row (mat_of_rows_list ?n ?vs) = length ?vs"  ,
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Berlekamp_Type_Based.coprime_id_is_unit",
     "comm_monoid_mult_class.coprime ?a ?a = is_unit ?a",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Berlekamp_Type_Based.card_carrier_vec",
     "card (carrier_vec ?n) = CARD(?'b) ^ ?n",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0)),
         template_var 0))),
    ("Berlekamp_Type_Based.card_set_berlekamp_basis",
     "card (set (berlekamp_basis ?u)) = length (berlekamp_basis ?u)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("Berlekamp_Type_Based.length_power_polys",
     "length (power_polys ?mult_p ?u ?curr_p ?n) = ?n"  ,
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_var 0)),
    ("Berlekamp_Type_Based.prod_list_normalize",
     "normalize (prod_list ?P) = prod_list (map normalize ?P)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_hole 2),
           template_var 0)))),
    ("Berlekamp_Type_Based.mat_of_rows_list_dim",
     "mat_of_rows_list ?n ?vs : carrier_mat (length ?vs) ?n"  ,
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1))
         )),
    ("Berlekamp_Type_Based.berlekamp_mat_closed",
     "berlekamp_mat ?u : carrier_mat (degree ?u) (degree ?u)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_app (template_hole 0, template_var 0)))
         )),
    ("Berlekamp_Type_Based.berlekamp_resulting_mat_closed",
     "berlekamp_resulting_mat ?u : carrier_mat (degree ?u) (degree ?u)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_app (template_hole 0, template_var 0)))
         )),
    ("Berlekamp_Type_Based.row_echelon_form_dim0_row",
     "?A : carrier_mat 0 ?n ==> row_echelon_form ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Berlekamp_Type_Based.row_echelon_form_dim0_col",
     "?A : carrier_mat ?n 0 ==> row_echelon_form ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_hole 1))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Berlekamp_Type_Based.inj_Poly_list_of_vec'",
     "inj_on (Poly o list_of_vec) {v. dim_vec v = ?n}",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_hole 3)),
           template_app (template_hole 2, t_empty))
         )),
    ("Berlekamp_Type_Based.list_of_vec_rw_map",
     "list_of_vec ?m = map (($) ?m) [0..<dim_vec ?m]",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("Berlekamp_Type_Based.set_berlekamp_basis_constant",
     "degree ?u = 0 ==> set (berlekamp_basis ?u) = {}",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0), template_hole 4)],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Berlekamp_Type_Based.berlekamp_resulting_mat_constant",
     "degree ?u = 0 ==> berlekamp_resulting_mat ?u = 1\<^sub>m 0",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_hole 3)))),
    ("Berlekamp_Type_Based.degree_Poly'",
     "?xs ~= [] ==> degree (Poly ?xs) < length ?xs",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_inequation
        (less_than,
         template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Berlekamp_Type_Based.mod_eq_dvd_iff_poly",
     "(?x mod ?n = ?y mod ?n) = (?n dvd ?x - ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Berlekamp_Type_Based.berlekamp_basis_code",
     "berlekamp_basis ?u =
      map (poly_of_list o list_of_vec)
       (find_base_vectors (berlekamp_resulting_mat ?u))",
     template_equation
      (template_app (template_hole 9, template_var 0),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_hole 5)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2),
             template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("Berlekamp_Type_Based.cong_gcd_eq_poly",
     "[?a = ?b] (mod ?m) ==> gcd ?a ?m = gcd ?b ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Berlekamp_Type_Based.monic_normalize",
     "?p ~= 0 ==> monic (normalize ?p)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_hole 1,
             template_app (template_hole 2, template_var 0))),
         template_hole 0))),
    ("Berlekamp_Type_Based.mat_kernel_berlekamp_resulting_mat_degree_0",
     "degree ?u = 0 ==>
      mat_kernel (berlekamp_resulting_mat ?u) = {0\<^sub>v 0}",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 0), template_hole 6)],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 6)),
           template_hole 0)))),
    ("Berlekamp_Type_Based.list_of_vec_nth",
     "?i < dim_vec ?x ==> list_of_vec ?x ! ?i = ?x $ ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Berlekamp_Type_Based.degree_minus_eq_right",
     "degree ?q < degree ?p ==> degree (?p - ?q) = degree ?p"  ,
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Berlekamp_Type_Based.berlekamp_basis_eq_8",
     "?v : set (berlekamp_basis ?u) ==> [?v ^ CARD(?'a) = ?v] (mod ?u)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_app (template_hole 1, template_hole 0))),
               template_var 1),
             template_var 0)
           ))),
    ("Berlekamp_Type_Based.prime_not_dvd_fact",
     "[| ?k < ?n; prime ?n |] ==> ~ ?n dvd fact ?k"  ,
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 1))
               )
           ))),
    ("Berlekamp_Type_Based.set_berlekamp_basis_eq",
     "set (berlekamp_basis ?u) =
      (Poly o list_of_vec) `
      set (find_base_vectors (berlekamp_resulting_mat ?u))",
     template_equation
      (template_app
        (template_hole 11, template_app (template_hole 10, template_var 0)),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_hole 7),
             template_hole 6)),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_hole 2),
               template_hole 1),
             template_app (template_hole 0, template_var 0)))))),
    ("Berlekamp_Type_Based.poly_identity_mod_p",
     "?v ^ CARD(?'a) - ?v = (PROD x:UNIV. ?v - [:x:])",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 0),
             template_app (template_hole 5, template_hole 4))),
         template_var 0),
       template_app
        (template_app (template_hole 3, t_empty), template_hole 0))),
    ("Berlekamp_Type_Based.coeff_Poly_list_of_vec_nth'",
     "?i < dim_vec ?x ==> coeff (Poly (list_of_vec ?x)) ?i = ?x $ ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0))),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Berlekamp_Type_Based.add_power_poly_mod_ring",
     "(?x + ?y) ^ CARD(?'a) = ?x ^ CARD(?'a) + ?y ^ CARD(?'a)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_hole 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app (template_hole 1, template_hole 0))),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app (template_hole 1, template_hole 0))))),
    ("Berlekamp_Type_Based.degree_Poly_berlekamp_le",
     "?i < degree ?u ==>
      degree (Poly (list_of_vec (row (berlekamp_mat ?u) ?i))) < degree ?u",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_var 1)))),
         template_app (template_hole 4, template_var 0)))),
    ("Berlekamp_Type_Based.coprime_prod",
     "ALL x:?A. comm_monoid_mult_class.coprime (?g ?a) (?g x) ==>
      comm_monoid_mult_class.coprime (?g ?a) (prod ?g ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 1, template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("Berlekamp_Type_Based.coprime_prod2",
     "[| Ball ?A (comm_monoid_mult_class.coprime ?a); finite ?A |]
      ==> comm_monoid_mult_class.coprime ?a (\<Prod>?A)"
       ,
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            ),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 0, t_empty), template_var 1))
           ))),
    ("Berlekamp_Type_Based.poly_mod_sum",
     "finite ?A ==> sum ?f ?A mod ?z = (SUM i:?A. ?f i mod ?z)"  ,
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 0, t_empty), template_var 2)))),
    ("Berlekamp_Type_Based.coprime_h_c_poly",
     "?c1.0 ~= ?c2.0 ==>
      comm_monoid_mult_class.coprime (?h - [:?c1.0:]) (?h - [:?c2.0:])",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_hole 0))),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)))
           ))),
    ("Berlekamp_Type_Based.distinct_find_base_vectors",
     "[| row_echelon_form ?A; ?A : carrier_mat ?nr ?nc |]
      ==> distinct (find_base_vectors ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_hole 1),
                 template_hole 0),
               template_var 2))
           ))),
    ("Berlekamp_Type_Based.degree_Poly_list_of_vec",
     "[| ?x : carrier_vec ?n; 0 < ?n |]
      ==> degree (Poly (list_of_vec ?x)) < ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            ),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1))),
         template_var 0))),
    ("Berlekamp_Type_Based.poly_power_card_as_sum_of_monoms",
     "?h ^ CARD(?'a) =
      (SUM i<=degree ?h. monom (coeff ?h i) (CARD(?'a) * i))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 0),
         template_app (template_hole 7, template_hole 6)),
       template_app
        (template_app (template_hole 5, t_empty),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Berlekamp_Type_Based.list_of_vec_row_nth",
     "?x < dim_col ?A ==> list_of_vec (row ?A ?i) ! ?x = ?A $$ (?i, ?x)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0))),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Berlekamp_Type_Based.power_poly_sum_mod_ring",
     "finite ?A ==> sum ?f ?A ^ CARD(?'a) = (SUM i:?A. ?f i ^ CARD(?'a))",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           template_app (template_hole 1, template_hole 0)),
         template_app
          (template_app (template_hole 2, t_empty), template_var 1)))),
    ("Berlekamp_Type_Based.coeff_Poly_list_of_vec_nth",
     "?x < dim_col ?A ==>
      coeff (Poly (list_of_vec (row ?A ?i))) ?x = ?A $$ (?i, ?x)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0)))),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Berlekamp_Type_Based.normalize_eq_imp_smult",
     "normalize ?p = normalize ?q ==>
      EX c. c ~= (0::?'b) & ?q = Polynomial.smult c ?p",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 6, template_var 0))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Berlekamp_Type_Based.transpose_minus_1",
     "dim_row ?Q = dim_col ?Q ==>
      (?Q - 1\<^sub>m (dim_row ?Q))\<^sup>T =
      ?Q\<^sup>T - 1\<^sub>m (dim_row ?Q)"
       ,
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_hole 0,
               template_app (template_hole 5, template_var 0)))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_hole 0,
             template_app (template_hole 5, template_var 0)))))),
    ("Berlekamp_Type_Based.prod_list_dvd_prod_list_subset",
     "[| distinct ?A; distinct ?B; set ?A <= set ?B |]
      ==> prod_list ?A dvd prod_list ?B",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Berlekamp_Type_Based.coprime_not_unit_not_dvd",
     "[| ?a dvd ?b; comm_monoid_mult_class.coprime ?b ?c; ~ is_unit ?a |]
      ==> ~ ?a dvd ?c"
       ,
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_hole 0)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 0)
               )
           ))),
    ("Berlekamp_Type_Based.prod_list_map_filter",
     "prod_list (map ?g (filter ?f ?xs)) *
      prod_list (map ?g (filter (%x. ~ ?f x) ?xs)) =
      prod_list (map ?g ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, t_empty), template_var 0)))),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Berlekamp_Type_Based.in_mat_kernel_berlekamp_resulting_mat",
     "[| (berlekamp_mat ?u)\<^sup>T *\<^sub>v ?x = ?x;
         ?x : carrier_vec (degree ?u) |]
      ==> ?x : mat_kernel (berlekamp_resulting_mat ?u)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1))),
            template_var 0),
          template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Berlekamp_Type_Based.vec_of_list_coeffs_nth",
     "[| ?i : {..degree ?h}; ?h ~= 0 |]
      ==> vec_of_list (coeffs ?h) $ ?i = coeff ?h ?i"
       ,
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 0)))
            ),
        template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0))),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Berlekamp_Type_Based.dim_vec_of_list_h",
     "degree ?h < degree ?u ==>
      dim_vec
       (vec_of_list
         (coeffs ?h @
          replicate (degree ?u - length (coeffs ?h)) (0::?'b))) =
      degree ?u"
       ,
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 10, template_var 1),
          template_app (template_hole 9, template_var 0))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 1)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app (template_hole 9, template_var 0)),
                     template_app
                      (template_hole 1,
                       template_app (template_hole 4, template_var 1)))),
                 template_hole 0)))),
         template_app (template_hole 9, template_var 0)))),
    ("Berlekamp_Type_Based.prod_list_map_partition",
     "List.partition ?f ?xs = (?ys, ?zs) ==>
      prod_list (map ?g ?xs) =
      prod_list (map ?g ?ys) * prod_list (map ?g ?zs)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 3)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2))),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)))))),
    ("Berlekamp_Type_Based.gcd_monic_constant",
     "[| monic ?f; degree ?g = 0 |] ==> gcd ?f ?g : {1, ?f}",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 9, template_var 1),
            template_app (template_hole 8, template_var 1)),
          template_hole 7),
        template_equation
         (template_app (template_hole 8, template_var 0), template_hole 5)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 0)))
           ))),
    ("Berlekamp_Type_Based.Poly_berlekamp_cong_mat",
     "?k < degree ?u ==>
      [Poly
        (list_of_vec
          (row (berlekamp_mat ?u)
            ?k)) = [:0, 1:] ^ (CARD(?'a) * ?k)] (mod ?u)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 13, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 10,
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app (template_hole 8, template_var 0)),
                       template_var 1)))),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app
                      (template_app (template_hole 6, template_hole 4),
                       template_hole 3))),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_hole 0)),
                   template_var 1))),
             template_var 0)
           ))),
    ("Berlekamp_Type_Based.fin_dim_kernel_berlekamp",
     "0 < degree ?u ==>
      vectorspace.fin_dim class_ring (??.Berlekamp_Type_Based.V ?u)",
     template_implication
      ([template_inequation
         (less_than, template_hole 16,
          template_app (template_hole 15, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 13, template_hole 12),
                 template_app
                  (template_app
                    (template_app (template_hole 11, template_hole 10),
                     template_hole 9),
                   template_app
                    (template_app
                      (template_app (template_hole 8, template_hole 7),
                       template_hole 6),
                     template_hole 5)))),
             template_app
              (template_app (template_hole 4, t_empty),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_app (template_hole 15, template_var 0))))
           ))),
    ("Berlekamp_Type_Based.Poly_berlekamp_mat",
     "?k < degree ?u ==>
      Poly (list_of_vec (row (berlekamp_mat ?u) ?k)) =
      [:0, 1:] ^ (CARD(?'a) * ?k) mod ?u",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 14, template_var 0))],
       template_equation
        (template_app
          (template_hole 12,
           template_app
            (template_hole 11,
             template_app
              (template_app
                (template_hole 10,
                 template_app (template_hole 9, template_var 0)),
               template_var 1))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app
                    (template_app (template_hole 6, template_hole 4),
                     template_hole 3))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0)),
                 template_var 1))),
           template_var 0)))),
    ("Berlekamp_Type_Based.vec_of_list_coeffs_replicate_nth_0",
     "?i : {..<degree ?u} ==>
      vec_of_list
       (coeffs 0 @ replicate (degree ?u - length (coeffs 0)) (0::?'c)) $
      ?i =
      coeff 0 ?i"
       ,
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_app
               (template_hole 14,
                template_app (template_hole 13, template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_hole 7)),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app (template_hole 13, template_var 0)),
                       template_app
                        (template_hole 4,
                         template_app (template_hole 3, template_hole 2)))),
                   template_hole 1)))),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_hole 7),
           template_var 1)))),
    ("Berlekamp_Type_Based.length_find_base_vectors",
     "[| row_echelon_form ?A; ?A : carrier_mat ?nr ?nc |]
      ==> length (find_base_vectors ?A) =
          card (set (find_base_vectors ?A))",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_app (template_hole 8, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_hole 3),
               template_hole 2),
             template_var 2)),
         template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_hole 3),
                 template_hole 2),
               template_var 2)))))),
    ("Berlekamp_Type_Based.berlekamp_resulting_mat_basis",
     "vectorspace.basis class_ring (??.Berlekamp_Type_Based.V ?u)
       (set (find_base_vectors (berlekamp_resulting_mat ?u)))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 18,
               template_app
                (template_app (template_hole 17, template_hole 16),
                 template_app
                  (template_app
                    (template_app (template_hole 15, template_hole 14),
                     template_hole 13),
                   template_app
                    (template_app
                      (template_app (template_hole 12, template_hole 11),
                       template_hole 10),
                     template_hole 9)))),
             template_app
              (template_app (template_hole 8, t_empty),
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app (template_hole 3, template_var 0)))),
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_hole 11),
                 template_hole 13),
               template_app (template_hole 6, template_var 0))))
         )),
    ("Berlekamp_Type_Based.dvd_choose_prime",
     "[| ?k < ?n; ?k ~= 0; ?n ~= 0; prime ?n |] ==> ?n dvd ?n choose ?k"
       ,
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0),
        template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_negation
         (template_equation (template_var 0, template_hole 3)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Berlekamp_Type_Based.power_polys_works",
     "[| ?i < ?n; ?curr_p = ?curr_p mod ?u |]
      ==> power_polys ?mult_p ?u ?curr_p ?n ! ?i =
          ?curr_p * ?mult_p ^ ?i mod ?u"
       ,
     template_implication
      ([template_inequation (less_than, template_var 4, template_var 3),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 0),
                   template_var 1),
                 template_var 2),
               template_var 3)),
           template_var 4),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 4))),
           template_var 1)))),
    ("Berlekamp_Type_Based.coprime_h_c_poly2",
     "[| comm_monoid_mult_class.coprime (?h - [:?c1.0:]) (?h - [:?c2.0:]);
         ~ is_unit (?h - [:?c1.0:]) |]
      ==> ?c1.0 ~= ?c2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_app
                   (template_app (template_hole 5, template_var 1),
                    template_hole 4))),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_hole 4)))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 6, template_var 2),
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        template_hole 4))),
                  template_hole 1)
                )
            )],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("Berlekamp_Type_Based.monom_card_pow_mod_sum_berlekamp",
     "?i < degree ?u ==>
      monom 1 (CARD(?'a) * ?i) mod ?u =
      (SUM j<degree ?u. monom (berlekamp_mat ?u $$ (?i, j)) j)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 12, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_hole 8),
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_hole 5)),
                 template_var 1))),
           template_var 0),
         template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_hole 0,
             template_app (template_hole 12, template_var 0)))))),
    ("Berlekamp_Type_Based.col_scalar_prod_as_sum",
     "dim_vec ?v = dim_row ?A ==>
      col ?A ?j \<bullet> ?v =
      (SUM i = 0..<dim_vec ?v. ?A $$ (i, ?j) * ?v $ i)"
       ,
     template_implication
      ([template_equation
         (template_app (template_hole 11, template_var 2),
          template_app (template_hole 10, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 6, t_empty),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app (template_hole 11, template_var 2)))))),
    ("Berlekamp_Type_Based.coprime_gcd",
     "algebraic_semidom_class.coprime (?h - [:?c1.0:]) (?h - [:?c2.0:]) ==>
      algebraic_semidom_class.coprime (gcd ?f (?h - [:?c1.0:]))
       (gcd ?f (?h - [:?c2.0:]))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_hole 1))),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_hole 1)))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_hole 1))))
           ))),
    ("Berlekamp_Type_Based.poly_as_sum_eq_monoms",
     "[| (SUM i<?n. monom (?f i) i) = (SUM i<?n. monom (?g i) i); ?a < ?n |]
      ==> ?f ?a = ?g ?a"
       ,
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, t_empty),
            template_app (template_hole 2, template_var 2)),
          template_app
           (template_app (template_hole 4, t_empty),
            template_app (template_hole 2, template_var 2))),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_equation
        (template_app (template_var 3, template_var 0),
         template_app (template_var 1, template_var 0)))),
    ("Berlekamp_Type_Based.system_if_mat_kernel",
     "[| dim_row ?Q = dim_col ?Q; dim_row ?Q = dim_vec ?v |]
      ==> (?Q\<^sup>T *\<^sub>v ?v = ?v) =
          (?v : mat_kernel (?Q - 1\<^sub>m (dim_row ?Q))\<^sup>T)"
       ,
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 1),
          template_app (template_hole 9, template_var 1)),
        template_equation
         (template_app (template_hole 10, template_var 1),
          template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 1)),
               template_var 0)),
           template_var 0),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_hole 2,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_hole 0,
                   template_app (template_hole 10, template_var 1))))))))),
    ("Berlekamp_Type_Based.row_mat_of_rows_list",
     "[| ?b < length ?A; ALL i<length ?A. length (?A ! i) = ?nc |]
      ==> row (mat_of_rows_list ?nc ?A) ?b = vec_of_list (?A ! ?b)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 9, template_var 1)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 2))))),
    ("Berlekamp_Type_Based.vec_of_list_coeffs_replicate_nth",
     "[| ?i : {..<degree ?u}; degree ?h < degree ?u |]
      ==> vec_of_list
           (coeffs ?h @
            replicate (degree ?u - length (coeffs ?h)) (0::?'c)) $
          ?i =
          coeff ?h ?i"
       ,
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 1)))
            ),
        template_inequation
         (less_than, template_app (template_hole 10, template_var 0),
          template_app (template_hole 12, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app (template_hole 12, template_var 1)),
                       template_app
                        (template_hole 2,
                         template_app (template_hole 5, template_var 0)))),
                   template_hole 1)))),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Berlekamp_Type_Based.subspace_Berlekamp",
     "degree ?f ~= 0 ==>
      VectorSpace.subspace class_ring
       {v. [v ^ CARD(?'a) = v] (mod ?f) & degree v < degree ?f}
       poly_abelian_monoid",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 19, template_var 0),
              template_hole 18)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 17,
                 template_app
                  (template_app (template_hole 16, template_hole 15),
                   template_app
                    (template_app
                      (template_app (template_hole 14, template_hole 13),
                       template_hole 12),
                     template_app
                      (template_app
                        (template_app (template_hole 11, template_hole 10),
                         template_hole 9),
                       template_hole 8)))),
               template_app (template_hole 7, t_empty)),
             template_hole 0)
           ))),
    ("Berlekamp_Type_Based.system_iff",
     "[| dim_row ?Q = dim_col ?Q; dim_row ?Q = dim_vec ?v |]
      ==> (?Q\<^sup>T *\<^sub>v ?v = ?v) =
          ((?Q\<^sup>T - 1\<^sub>m (dim_row ?Q)) *\<^sub>v ?v =
           0\<^sub>v (dim_vec ?v))"
       ,
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 1),
          template_app (template_hole 8, template_var 1)),
        template_equation
         (template_app (template_hole 9, template_var 1),
          template_app (template_hole 7, template_var 0))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_var 0),
           template_var 0),
         template_equation
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 3, template_var 1)),
                 template_app
                  (template_hole 1,
                   template_app (template_hole 9, template_var 1)))),
             template_var 0),
           template_app
            (template_hole 0,
             template_app (template_hole 7, template_var 0)))))),
    ("Berlekamp_Type_Based.Berlekamp_gcd_step",
     "[| [?h ^ CARD(?'a) = ?h] (mod ?f); monic ?f; square_free ?f |]
      ==> ?f = (PROD c:UNIV. gcd ?f (?h - [:c:]))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 15,
                  template_app
                   (template_app (template_hole 14, template_var 1),
                    template_app (template_hole 13, template_hole 12))),
                template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app (template_hole 10, template_var 0),
            template_app (template_hole 9, template_var 0)),
          template_hole 8),
        template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_equation
        (template_var 0,
         template_app
          (template_app (template_hole 5, t_empty), template_hole 0)))),
    ("Berlekamp_Type_Based.Berlekamp_subspace_fin_dim",
     "0 < degree ?u ==>
      vectorspace.fin_dim class_ring (??.Berlekamp_Type_Based.W ?u)",
     template_implication
      ([template_inequation
         (less_than, template_hole 19,
          template_app (template_hole 18, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 17,
               template_app
                (template_app (template_hole 16, template_hole 15),
                 template_app
                  (template_app
                    (template_app (template_hole 14, template_hole 13),
                     template_hole 12),
                   template_app
                    (template_app
                      (template_app (template_hole 11, template_hole 10),
                       template_hole 9),
                     template_hole 8)))),
             template_app
              (template_app (template_hole 7, t_empty), template_hole 0))
           ))),
    ("Berlekamp_Type_Based.monic_prod_gcd",
     "[| finite ?A; ?f ~= 0 |] ==> monic (PROD c:?A. gcd ?f (?h - [:c:]))"
       ,
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_negation
         (template_equation (template_var 1, template_hole 8))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, t_empty), template_var 2)),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 5, t_empty), template_var 2))),
         template_hole 0))),
    ("Berlekamp_Type_Based.linear_Poly_list_of_vec",
     "Poly o list_of_vec
      : LinearCombinations.module_hom class_ring
         (??.Berlekamp_Type_Based.V ?u)
         (poly_abelian_monoid
          (| carrier := {v. [v ^ CARD(?'a) = v] (mod ?u)} |))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 26,
             template_app
              (template_app (template_hole 25, template_hole 24),
               template_hole 23)),
           template_app
            (template_app
              (template_app
                (template_hole 22,
                 template_app
                  (template_app (template_hole 21, template_hole 20),
                   template_app
                    (template_app
                      (template_app (template_hole 19, template_hole 18),
                       template_hole 17),
                     template_app
                      (template_app
                        (template_app (template_hole 16, template_hole 15),
                         template_hole 14),
                       template_hole 13)))),
               template_app
                (template_app (template_hole 12, t_empty),
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_app (template_hole 7, template_var 0)))),
             template_app
              (template_app (template_hole 6, t_empty), template_hole 0)))
         )),
    ("Berlekamp_Type_Based.row_transpose_scalar_prod_as_sum",
     "[| ?j < dim_col ?A; dim_vec ?v = dim_row ?A |]
      ==> row ?A\<^sup>T ?j \<bullet> ?v =
          (SUM i = 0..<dim_vec ?v. ?A $$ (i, ?j) * ?v $ i)"
       ,
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 14, template_var 1)),
        template_equation
         (template_app (template_hole 12, template_var 0),
          template_app (template_hole 11, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app (template_hole 7, template_var 1)),
               template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 6, t_empty),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app (template_hole 12, template_var 0)))))),
    ("Berlekamp_Type_Based.berlekamp_basis_basis",
     "0 < degree ?u ==>
      vectorspace.basis class_ring (??.Berlekamp_Type_Based.W ?u)
       (set (berlekamp_basis ?u))",
     template_implication
      ([template_inequation
         (less_than, template_hole 21,
          template_app (template_hole 20, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 19,
                 template_app
                  (template_app (template_hole 18, template_hole 17),
                   template_app
                    (template_app
                      (template_app (template_hole 16, template_hole 15),
                       template_hole 14),
                     template_app
                      (template_app
                        (template_app (template_hole 13, template_hole 12),
                         template_hole 11),
                       template_hole 10)))),
               template_app
                (template_app (template_hole 9, t_empty), template_hole 2)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Berlekamp_Type_Based.divides_prod",
     "[| ALL c1 c2.
            c1 : ?A & c2 : ?A & c1 ~= c2 -->
            comm_monoid_mult_class.coprime (?g c1) (?g c2);
         ALL c:?A. ?g c dvd ?f |]
      ==> prod ?g ?A dvd ?f",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_var 0)
           ))),
    ("Berlekamp_Type_Based.vec_of_list_coeffs_nth'",
     "[| ?i : {..degree ?h}; ?h ~= 0; degree ?h < degree ?u |]
      ==> vec_of_list
           (coeffs ?h @
            replicate (degree ?u - length (coeffs ?h)) (0::?'b)) $
          ?i =
          coeff ?h ?i"
       ,
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 2),
              template_app
               (template_hole 16,
                template_app (template_hole 15, template_var 1)))
            ),
        template_negation
         (template_equation (template_var 1, template_hole 12)),
        template_inequation
         (less_than, template_app (template_hole 15, template_var 1),
          template_app (template_hole 10, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 1)),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app (template_hole 10, template_var 0)),
                       template_app
                        (template_hole 2,
                         template_app (template_hole 5, template_var 1)))),
                   template_hole 1)))),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("Berlekamp_Type_Based.coprime_polynomial_factorization",
     "[| ?as <= {q. irreducible q & monic q}; finite ?as; ?a1.0 : ?as;
         ?a2.0 : ?as; ?a1.0 ~= ?a2.0 |]
      ==> comm_monoid_mult_class.coprime ?a1.0 ?a2.0"
       ,
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Berlekamp_Type_Based.linear_Poly_list_of_vec'",
     "0 < degree ?u ==>
      Poly o list_of_vec
      : LinearCombinations.module_hom ?R (??.Berlekamp_Type_Based.V ?u)
         (??.Berlekamp_Type_Based.W ?u)",
     template_implication
      ([template_inequation
         (less_than, template_hole 19,
          template_app (template_hole 18, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 17,
               template_app
                (template_app (template_hole 16, template_hole 15),
                 template_hole 14)),
             template_app
              (template_app
                (template_app (template_hole 13, template_var 0),
                 template_app
                  (template_app (template_hole 12, t_empty),
                   template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_app (template_hole 18, template_var 1)))),
               template_app
                (template_app (template_hole 7, t_empty), template_hole 0)))
           ))),
    ("Berlekamp_Type_Based.length_berlekamp_basis_numbers_factors",
     "[| 0 < degree ?u; finite ?P; ?u = \<Prod>?P;
         ?P <= {q. irreducible q & monic q} |]
      ==> length (berlekamp_basis ?u) = card ?P",
     template_implication
      ([template_inequation
         (less_than, template_hole 15,
          template_app (template_hole 14, template_var 1)),
        template_predicate
         (template_app (template_hole 13, template_var 0)),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 11, t_empty), template_var 0)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Berlekamp_Type_Based.surj_Poly_list_of_vec",
     "0 < degree ?u ==>
      (Poly o list_of_vec) ` carrier (??.Berlekamp_Type_Based.V ?u) =
      carrier (??.Berlekamp_Type_Based.W ?u)",
     template_implication
      ([template_inequation
         (less_than, template_hole 21,
          template_app (template_hole 20, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 18,
             template_app
              (template_app (template_hole 17, template_hole 16),
               template_hole 15)),
           template_app
            (template_hole 14,
             template_app
              (template_app (template_hole 13, t_empty),
               template_app
                (template_app (template_hole 10, template_hole 9),
                 template_app (template_hole 20, template_var 0))))),
         template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, t_empty), template_hole 0))))),
    ("Berlekamp_Type_Based.divides_prod2",
     "[| finite ?A; ALL a:?A. a dvd ?c;
         ALL a1 a2.
            a1 : ?A & a2 : ?A & a1 ~= a2 -->
            comm_monoid_mult_class.coprime a1 a2 |]
      ==> \<Prod>?A dvd ?c"
       ,
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1), t_empty)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 0, t_empty), template_var 1)),
             template_var 0)
           ))),
    ("Berlekamp_Type_Based.card_berlekamp_basis_number_factors",
     "[| 0 < degree ?u; finite ?P; ?u = \<Prod>?P;
         ?P <= {q. irreducible q & monic q} |]
      ==> card (set (berlekamp_basis ?u)) = card ?P",
     template_implication
      ([template_inequation
         (less_than, template_hole 15,
          template_app (template_hole 14, template_var 1)),
        template_predicate
         (template_app (template_hole 13, template_var 0)),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 11, t_empty), template_var 0)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1))),
         template_app (template_hole 2, template_var 0)))),
    ("Berlekamp_Type_Based.power_poly_f_mod_binary",
     "power_poly_f_mod ?m ?a ?n =
      (if ?n = 0 then 1 mod ?m
       else let (d, r) = divmod_nat ?n 2;
                rec = power_poly_f_mod ?m (?a * ?a mod ?m) d
            in if r = 0 then rec else rec * ?a mod ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 11, template_var 0),
                   template_hole 10)),
               template_app
                (template_app (template_hole 9, template_hole 8),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 0),
                   template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_hole 3)))),
               template_app (template_hole 2, t_empty)))
           ))),
    ("Berlekamp_Type_Based.divides_prod_gcd",
     "ALL c1 c2.
         c1 : ?A & c2 : ?A & c1 ~= c2 -->
         comm_monoid_mult_class.coprime (?h - [:c1:]) (?h - [:c2:]) ==>
      (PROD c:?A. gcd ?f (?h - [:c:])) dvd ?f",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, t_empty), template_var 2)),
             template_var 0)
           ))),
    ("Berlekamp_Type_Based.berlekamp_basis_length_factorization",
     "[| square_free ?f; ?n = length (berlekamp_basis ?f); monic ?f;
         ?f = prod_list ?us; !!u. u : set ?us ==> 0 < degree u |]
      ==> length ?us <= ?n",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 2)),
        template_equation
         (template_var 1,
          template_app
           (template_hole 13,
            template_app (template_hole 12, template_var 2))),
        template_equation
         (template_app
           (template_app (template_hole 10, template_var 2),
            template_app (template_hole 9, template_var 2)),
          template_hole 8),
        template_equation
         (template_var 2, template_app (template_hole 6, template_var 0)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 13, template_var 0),
         template_var 1))),
    ("Berlekamp_Type_Based.equation_13",
     "degree ?h < degree ?u ==>
      [?h ^ CARD(?'a) = ?h] (mod ?u) =
      ((berlekamp_mat ?u)\<^sup>T *\<^sub>v
       vec_of_list
        (coeffs ?h @ replicate (degree ?u - length (coeffs ?h)) 0) =
       vec_of_list
        (coeffs ?h @ replicate (degree ?u - length (coeffs ?h)) 0))",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 16, template_var 1),
          template_app (template_hole 16, template_var 0))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_app
                   (template_hole 14,
                    template_app
                     (template_app (template_hole 13, template_var 1),
                      template_app (template_hole 12, template_hole 11))),
                  template_var 1),
                template_var 0)
              )],
         template_equation
          (template_app
            (template_app
              (template_hole 9,
               template_app
                (template_hole 8,
                 template_app (template_hole 7, template_var 0))),
             template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 1)),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app (template_hole 16, template_var 0)),
                       template_app
                        (template_hole 1,
                         template_app (template_hole 4, template_var 1)))),
                   template_hole 0)))),
           template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 1)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app (template_hole 16, template_var 0)),
                     template_app
                      (template_hole 1,
                       template_app (template_hole 4, template_var 1)))),
                 template_hole 0))))))),
    ("Berlekamp_Type_Based.W_eq_berlekamp_mat",
     "{v. [v ^ CARD(?'a) = v] (mod ?u) & degree v < degree ?u} =
      {h. let H = vec_of_list
                   (coeffs h @ replicate (degree ?u - length (coeffs h)) 0)
          in (berlekamp_mat ?u)\<^sup>T *\<^sub>v H = H &
             degree h < degree ?u}",
     template_equation
      (template_app (template_hole 19, t_empty),
       template_app (template_hole 19, t_empty))),
    ("Berlekamp_Type_Based.linear_map_Poly_list_of_vec'",
     "0 < degree ?u ==>
      linear_map class_ring (??.Berlekamp_Type_Based.V ?u)
       (??.Berlekamp_Type_Based.W ?u) (Poly o list_of_vec)",
     template_implication
      ([template_inequation
         (less_than, template_hole 27,
          template_app (template_hole 26, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 25,
                   template_app
                    (template_app (template_hole 24, template_hole 23),
                     template_app
                      (template_app
                        (template_app (template_hole 22, template_hole 21),
                         template_hole 20),
                       template_app
                        (template_app
                          (template_app
                            (template_hole 19, template_hole 18),
                           template_hole 17),
                         template_hole 16)))),
                 template_app
                  (template_app (template_hole 15, t_empty),
                   template_app
                    (template_app (template_hole 12, template_hole 11),
                     template_app (template_hole 26, template_var 0)))),
               template_app
                (template_app (template_hole 10, t_empty),
                 template_hole 3)),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0))
           ))),
    ("Berlekamp_Type_Based.coprime_cong_mult_factorization_poly",
     "[| finite ?P; ?P <= Collect irreducible; Ball ?P (cong ?a ?b);
         ALL p1 p2.
            p1 : ?P & p2 : ?P & p1 ~= p2 -->
            comm_monoid_mult_class.coprime p1 p2 |]
      ==> [?a = ?b] (mod \<Prod>?P)"
       ,
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 2)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 11, template_hole 10)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_app (template_hole 8, template_var 1),
                template_var 0))
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 8, template_var 1),
               template_var 0),
             template_app
              (template_app (template_hole 0, t_empty), template_var 2))
           ))),
    ("Berlekamp_Type_Based.degree_u_mod_irreducible\<^sub>d_factor_0",
     "[| ?v : {v. [v ^ CARD(?'a) = v] (mod ?u)}; finite ?U; ?u = \<Prod>?U;
         ?U <= {q. irreducible q & monic q}; ?fi : ?U |]
      ==> degree (?v mod ?fi) = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 3),
              template_app (template_hole 17, t_empty))
            ),
        template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 10, t_empty), template_var 1)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 17, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0)),
         template_hole 0))),
    ("Berlekamp_Type_Based.berlekamp_basis_irreducible",
     "[| square_free ?f; ?n = length (berlekamp_basis ?f); monic ?f;
         ?f = prod_list ?us; length ?us = ?n;
         !!u. u : set ?us ==> 0 < degree u; ?u : set ?us |]
      ==> irreducible ?u",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 3)),
        template_equation
         (template_var 2,
          template_app
           (template_hole 13,
            template_app (template_hole 12, template_var 3))),
        template_equation
         (template_app
           (template_app (template_hole 10, template_var 3),
            template_app (template_hole 9, template_var 3)),
          template_hole 8),
        template_equation
         (template_var 3, template_app (template_hole 6, template_var 1)),
        template_equation
         (template_app (template_hole 13, template_var 1), template_var 2),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Berlekamp_Type_Based.exists_s_factor_dvd_h_s",
     "[| finite ?P; ?f = \<Prod>?P; ?P <= {q. irreducible q & monic q};
         ?fi : ?P; ?h : {v. [v ^ CARD(?'a) = v] (mod ?f)} |]
      ==> EX s. ?fi dvd ?h - [:s:]",
     template_implication
      ([template_predicate
         (template_app (template_hole 20, template_var 3)),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 18, t_empty), template_var 3)),
        template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 16, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app (template_hole 16, t_empty))
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Berlekamp_Type_Based.exists_unique_s_factor_dvd_h_s",
     "[| finite ?P; ?f = \<Prod>?P; ?P <= {q. irreducible q & monic q};
         ?fi : ?P; ?h : {v. [v ^ CARD(?'a) = v] (mod ?f)} |]
      ==> EX! s. ?fi dvd ?h - [:s:]",
     template_implication
      ([template_predicate
         (template_app (template_hole 20, template_var 3)),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 18, t_empty), template_var 3)),
        template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 16, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app (template_hole 16, t_empty))
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Berlekamp_Type_Based.berlekamp_monic_factorization",
     "[| square_free ?f; berlekamp_monic_factorization ?d ?f = ?us;
         !!g. [| g dvd ?f; degree g = ?d |] ==> irreducible g;
         0 < degree ?f; monic ?f |]
      ==> ?f = prod_list ?us & (ALL u:set ?us. monic u & irreducible u)",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 15, template_var 1),
            template_var 2),
          template_var 0),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_inequation
         (less_than, template_hole 8,
          template_app (template_hole 11, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 2),
            template_app (template_hole 11, template_var 2)),
          template_hole 5)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               t_empty))
           ))),
    ("Berlekamp_Type_Based.exists_factorization_prod_list",
     "[| 0 < degree (prod_list ?P);
         !!u. u : set ?P ==> 0 < degree u & monic u;
         square_free (prod_list ?P) |]
      ==> EX Q. prod_list Q = prod_list ?P &
                length ?P <= length Q &
                (ALL u. u : set Q --> irreducible u & monic u)",
     template_implication
      ([template_inequation
         (less_than, template_hole 17,
          template_app
           (template_hole 16,
            template_app (template_hole 15, template_var 0))),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate
         (
            template_app
             (template_hole 7,
              template_app (template_hole 15, template_var 0))
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Berlekamp_Type_Based.Berlekamp_subspace_dim",
     "[| 0 < degree ?u; finite ?P; ?u = \<Prod>?P;
         ?P <= {q. irreducible q & monic q} |]
      ==> vectorspace.dim class_ring (??.Berlekamp_Type_Based.W ?u) =
          card ?P",
     template_implication
      ([template_inequation
         (less_than, template_hole 28,
          template_app (template_hole 27, template_var 1)),
        template_predicate
         (template_app (template_hole 26, template_var 0)),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 24, t_empty), template_var 0)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 22, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 15,
             template_app
              (template_app (template_hole 14, template_hole 13),
               template_app
                (template_app
                  (template_app (template_hole 12, template_hole 11),
                   template_hole 17),
                 template_app
                  (template_app
                    (template_app (template_hole 10, template_hole 9),
                     template_hole 8),
                   template_hole 7)))),
           template_app
            (template_app (template_hole 6, t_empty), template_hole 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Berlekamp_Type_Based.not_irreducible_factor_yields_prime_factors",
     "[| ?u dvd ?f; finite ?P; ?f = \<Prod>?P;
         ?P <= {q. irreducible q & monic q}; 0 < degree ?u;
         ~ irreducible ?u |]
      ==> EX pi pj. pi : ?P & pj : ?P & pi ~= pj & pi dvd ?u & pj dvd ?u"
       ,
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 2),
              template_var 1)
            ),
        template_predicate
         (template_app (template_hole 15, template_var 0)),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 13, t_empty), template_var 0)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 11, t_empty)),
        template_inequation
         (less_than, template_hole 3,
          template_app (template_hole 6, template_var 2)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 9, template_var 2))
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Berlekamp_Type_Based.Berlekamp_subspace_eq_dim_vec",
     "[| 0 < degree ?u; finite ?P; ?u = \<Prod>?P;
         ?P <= {q. irreducible q & monic q} |]
      ==> vectorspace.dim class_ring (??.Berlekamp_Type_Based.W ?u) =
          vectorspace.dim class_ring
           (module_vec TYPE(?'a mod_ring) (card ?P))",
     template_implication
      ([template_inequation
         (less_than, template_hole 31,
          template_app (template_hole 30, template_var 1)),
        template_predicate
         (template_app (template_hole 29, template_var 0)),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 27, t_empty), template_var 0)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 25, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 18,
             template_app
              (template_app (template_hole 17, template_hole 16),
               template_app
                (template_app
                  (template_app (template_hole 15, template_hole 14),
                   template_hole 20),
                 template_app
                  (template_app
                    (template_app (template_hole 13, template_hole 12),
                     template_hole 11),
                   template_hole 10)))),
           template_app
            (template_app (template_hole 9, t_empty), template_hole 4)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 17, template_hole 16),
               template_app
                (template_app
                  (template_app (template_hole 15, template_hole 14),
                   template_hole 20),
                 template_app
                  (template_app
                    (template_app (template_hole 13, template_hole 12),
                     template_hole 11),
                   template_hole 10)))),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0)))))),
    ("Berlekamp_Type_Based.finsum_sum",
     "[| 0 < degree ?u; finite ?B; ?a : ?B \<rightarrow> carrier ?R;
         ?B <= carrier (??.Berlekamp_Type_Based.W ?u) |]
      ==> (\<Oplus>\<^bsub>??.Berlekamp_Type_Based.W ?u\<^esub>v\<in>?B. ?a
                                    v \<odot>\<^bsub>??.Berlekamp_Type_Based.W ?u\<^esub>
                                   v) =
          (SUM v:?B. Polynomial.smult (?a v) v)",
     template_implication
      ([template_inequation
         (less_than, template_hole 20,
          template_app (template_hole 19, template_var 3)),
        template_predicate
         (template_app (template_hole 18, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 1),
              template_app
               (template_app (template_hole 16, template_var 2), t_empty))
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 13,
            template_app
             (template_app (template_hole 12, t_empty), template_hole 5)))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 12, t_empty),
                 template_hole 5)),
             t_empty),
           template_var 2),
         template_app
          (template_app (template_hole 1, t_empty), template_var 2)))),
    ("Berlekamp_Type_Based.exists_bijective_linear_map_W_vec",
     "[| 0 < degree ?u; finite ?P; ?u = \<Prod>?P;
         ?P <= {q. irreducible q & monic q} |]
      ==> EX f. linear_map class_ring (??.Berlekamp_Type_Based.W ?u)
                 (module_vec TYPE(?'a mod_ring) (card ?P)) f &
                bij_betw f (carrier (??.Berlekamp_Type_Based.W ?u))
                 (carrier_vec (card ?P))",
     template_implication
      ([template_inequation
         (less_than, template_hole 33,
          template_app (template_hole 32, template_var 1)),
        template_predicate
         (template_app (template_hole 31, template_var 0)),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 29, t_empty), template_var 0)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 27, t_empty))],
       template_predicate (template_app (template_hole 21, t_empty)))),
    ("Berlekamp_Type_Based.exists_vector_in_Berlekamp_basis_dvd_aux",
     "[| 0 < degree ?u;
         vectorspace.basis class_ring (??.Berlekamp_Type_Based.W ?u) ?B;
         finite ?B; finite ?P; ?u = \<Prod>?P;
         ?P <= {q. irreducible q & monic q}; ?p_i : ?P; ?p_j : ?P;
         ?p_i ~= ?p_j; monic ?u; square_free ?u; ~ irreducible ?w;
         ?w dvd ?u; monic ?w; ?p_i dvd ?w; ?p_j dvd ?w |]
      ==> EX v:?B. v mod ?p_i ~= v mod ?p_j",
     template_implication
      ([template_inequation
         (less_than, template_hole 32,
          template_app (template_hole 31, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 30,
                  template_app
                   (template_app (template_hole 29, template_hole 28),
                    template_app
                     (template_app
                       (template_app (template_hole 27, template_hole 26),
                        template_hole 25),
                      template_app
                       (template_app
                         (template_app (template_hole 24, template_hole 23),
                          template_hole 22),
                        template_hole 21)))),
                template_app
                 (template_app (template_hole 20, t_empty),
                  template_hole 13)),
              template_var 4)
            ),
        template_predicate
         (template_app (template_hole 12, template_var 4)),
        template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_equation
         (template_var 5,
          template_app
           (template_app (template_hole 10, t_empty), template_var 3)),
        template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 19, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 3)
            ),
        template_negation
         (template_equation (template_var 2, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 5),
            template_app (template_hole 31, template_var 5)),
          template_hole 25),
        template_predicate (template_app (template_hole 3, template_var 5)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 8, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 5)
            ),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 0),
            template_app (template_hole 31, template_var 0)),
          template_hole 25),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 4), t_empty)
           ))),
    ("Berlekamp_Type_Based.exists_vector_in_Berlekamp_subspace_dvd",
     "[| 0 < degree ?u; finite ?P; ?u = \<Prod>?P;
         ?P <= {q. irreducible q & monic q}; ?p_i : ?P; ?p_j : ?P;
         ?p_i ~= ?p_j; monic ?u; square_free ?u; ~ irreducible ?w;
         ?w dvd ?u; monic ?w; ?p_i dvd ?w; ?p_j dvd ?w |]
      ==> EX v. v : {h. [h ^ CARD(?'a) = h] (mod ?u) &
                        degree h < degree ?u} &
                v mod ?p_i ~= v mod ?p_j &
                degree (v mod ?p_i) = 0 &
                degree (v mod ?p_j) = 0 &
                (EX s. gcd ?w (v - [:s:]) ~= ?w & gcd ?w (v - [:s:]) ~= 1)",
     template_implication
      ([template_inequation
         (less_than, template_hole 28,
          template_app (template_hole 27, template_var 4)),
        template_predicate
         (template_app (template_hole 26, template_var 3)),
        template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 24, t_empty), template_var 3)),
        template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 22, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 2),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_var 3)
            ),
        template_negation
         (template_equation (template_var 2, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 18, template_var 4),
            template_app (template_hole 27, template_var 4)),
          template_hole 17),
        template_predicate
         (template_app (template_hole 14, template_var 4)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 20, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 0),
              template_var 4)
            ),
        template_equation
         (template_app
           (template_app (template_hole 18, template_var 0),
            template_app (template_hole 27, template_var 0)),
          template_hole 17),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 12, t_empty)))),
    ("Berlekamp_Type_Based.exists_vector_in_Berlekamp_basis_dvd",
     "[| 0 < degree ?u;
         vectorspace.basis class_ring (??.Berlekamp_Type_Based.W ?u) ?B;
         finite ?B; finite ?P; ?u = \<Prod>?P;
         ?P <= {q. irreducible q & monic q}; ?p_i : ?P; ?p_j : ?P;
         ?p_i ~= ?p_j; monic ?u; square_free ?u; ~ irreducible ?w;
         ?w dvd ?u; monic ?w; ?p_i dvd ?w; ?p_j dvd ?w |]
      ==> EX v:?B.
             v mod ?p_i ~= v mod ?p_j &
             degree (v mod ?p_i) = 0 &
             degree (v mod ?p_j) = 0 &
             (EX s. gcd ?w (v - [:s:]) ~= ?w &
                    ~ comm_monoid_mult_class.coprime ?w (v - [:s:]))",
     template_implication
      ([template_inequation
         (less_than, template_hole 39,
          template_app (template_hole 38, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 37,
                  template_app
                   (template_app (template_hole 36, template_hole 35),
                    template_app
                     (template_app
                       (template_app (template_hole 34, template_hole 33),
                        template_hole 32),
                      template_app
                       (template_app
                         (template_app (template_hole 31, template_hole 30),
                          template_hole 29),
                        template_hole 28)))),
                template_app
                 (template_app (template_hole 27, t_empty),
                  template_hole 20)),
              template_var 4)
            ),
        template_predicate
         (template_app (template_hole 19, template_var 4)),
        template_predicate
         (template_app (template_hole 19, template_var 3)),
        template_equation
         (template_var 5,
          template_app
           (template_app (template_hole 17, t_empty), template_var 3)),
        template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 26, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_var 3)
            ),
        template_negation
         (template_equation (template_var 2, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 13, template_var 5),
            template_app (template_hole 38, template_var 5)),
          template_hole 32),
        template_predicate
         (template_app (template_hole 10, template_var 5)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 15, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_var 5)
            ),
        template_equation
         (template_app
           (template_app (template_hole 13, template_var 0),
            template_app (template_hole 38, template_var 0)),
          template_hole 32),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_var 4), t_empty)
           ))),
    ("Berlekamp_Type_Based.berlekamp_factorization_main",
     "[| square_free ?f; ?vs = ?vs1.0 @ ?vs2.0; ?vs = berlekamp_basis ?f;
         ?n = length (berlekamp_basis ?f); ?n = length ?us1.0 + ?n2.0;
         ?us = ?us1.0 @ berlekamp_factorization_main ?d ?divs ?vs2.0 ?n2.0;
         !!u. u : set ?us1.0 ==> monic u & irreducible u;
         !!d. d : set ?divs ==> monic d & 0 < degree d;
         !!u v i.
            [| v : set ?vs1.0; u : set ?us1.0 Un set ?divs; i < CARD(?'a) |]
            ==> gcd u (v - [:of_nat i:]) : {1, u};
         ?f = prod_list (?us1.0 @ ?divs); 0 < degree ?f;
         !!g. [| g dvd ?f; degree g = ?d |] ==> irreducible g |]
      ==> ?f = prod_list ?us & (ALL u:set ?us. monic u & irreducible u)",
     template_implication
      ([template_predicate
         (template_app (template_hole 34, template_var 9)),
        template_equation
         (template_var 8,
          template_app
           (template_app (template_hole 32, template_var 7),
            template_var 6)),
        template_equation
         (template_var 8, template_app (template_hole 31, template_var 9)),
        template_equation
         (template_var 5,
          template_app
           (template_hole 29,
            template_app (template_hole 31, template_var 9))),
        template_equation
         (template_var 5,
          template_app
           (template_app
             (template_hole 28,
              template_app (template_hole 29, template_var 4)),
            template_var 3)),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 32, template_var 4),
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 27, template_var 1),
                  template_var 0),
                template_var 6),
              template_var 3))),
        template_predicate (template_app (template_hole 26, t_empty)),
        template_predicate (template_app (template_hole 26, t_empty)),
        template_predicate (template_app (template_hole 26, t_empty)),
        template_equation
         (template_var 9,
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 32, template_var 4),
              template_var 0))),
        template_inequation
         (less_than, template_hole 16,
          template_app (template_hole 20, template_var 9)),
        template_predicate (template_app (template_hole 26, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 23,
               template_app
                (template_app (template_hole 3, template_var 9),
                 template_app (template_hole 2, template_var 2))),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 24, template_var 2)),
               t_empty))
           )))]
