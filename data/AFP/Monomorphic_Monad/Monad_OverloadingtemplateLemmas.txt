   [("Monad_Overloading.run_fail_envT", "run_env fail ?r = fail",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Monad_Overloading.extract_return",
     "extract (Monad_Overloading.return ?x) = ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Monad_Overloading.run_fail_stateT", "run_state fail ?s = fail",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Monad_Overloading.run_return_envT",
     "run_env (Monad_Overloading.return ?x) ?r =
      Monad_Overloading.return ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("Monad_Overloading.run_return_optionT",
     "run_option (Monad_Overloading.return ?x) =
      Monad_Overloading.return (Some ?x)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Monad_Overloading.run_return_nondetT",
     "run_nondet (Monad_Overloading.return ?x) =
      Monad_Overloading.return {#?x#}",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Monad_Overloading.run_return_writerT",
     "run_writer (Monad_Overloading.return ?x) =
      Monad_Overloading.return (?x, [])",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Monad_Overloading.run_ask_nondetT",
     "run_nondet (ask ?f) = ask (%r. run_nondet (?f r))",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, t_empty))),
    ("Monad_Overloading.run_get_nondetT",
     "run_nondet (get ?f) = get (%s. run_nondet (?f s))",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, t_empty))),
    ("Monad_Overloading.run_ask_optionT",
     "run_option (ask ?f) = ask (%r. run_option (?f r))",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, t_empty))),
    ("Monad_Overloading.run_get_optionT",
     "run_option (get ?f) = get (%s. run_option (?f s))",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, t_empty))),
    ("Monad_Overloading.run_ask_writerT",
     "run_writer (ask ?f) = ask (%r. run_writer (?f r))",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, t_empty))),
    ("Monad_Overloading.run_get_writerT",
     "run_writer (get ?f) = get (%s. run_writer (?f s))",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, t_empty))),
    ("Monad_Overloading.run_ask_envT",
     "run_env (ask ?f) ?r = run_env (?f ?r) ?r",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_var 1, template_var 0)),
         template_var 0))),
    ("Monad_Overloading.extract_bind'",
     "extract (Monad_Overloading.bind ?x ?f) = extract (?f (extract ?x))",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_var 0,
           template_app (template_hole 1, template_var 1))))),
    ("Monad_Overloading.run_put_nondetT",
     "run_nondet (put ?s ?m) = put ?s (run_nondet ?m)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Monad_Overloading.run_put_optionT",
     "run_option (put ?s ?m) = put ?s (run_option ?m)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Monad_Overloading.run_tell_optionT",
     "run_option (tell ?w ?m) = tell ?w (run_option ?m)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Monad_Overloading.run_get_state",
     "run_state (get ?f) ?s = run_state (?f ?s) ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_var 1, template_var 0)),
         template_var 0))),
    ("Monad_Overloading.run_return_stateT",
     "run_state (Monad_Overloading.return ?x) ?s =
      Monad_Overloading.return (?x, ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Monad_Overloading.run_put_writerT",
     "run_writer (put ?s ?m) = put ?s (run_writer ?m)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Monad_Overloading.run_put_stateT",
     "run_state (put ?s ?m) ?s' = run_state ?m ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 2))),
    ("Monad_Overloading.run_alt_optionT",
     "run_option (alt ?m ?m') = alt (run_option ?m) (run_option ?m')",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Monad_Overloading.run_altc_optionT",
     "run_option (altc ?C ?f) = altc ?C (run_option o ?f)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_hole 3),
           template_var 0)))),
    ("Monad_Overloading.run_alt_writerT",
     "run_writer (alt ?m ?m') = alt (run_writer ?m) (run_writer ?m')",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Monad_Overloading.run_altc_writerT",
     "run_writer (altc ?C ?f) = altc ?C (run_writer o ?f)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_hole 3),
           template_var 0)))),
    ("Monad_Overloading.run_get_envT",
     "run_env (get ?f) ?r = get (%s. run_env (?f s) ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app (template_hole 0, t_empty))),
    ("Monad_Overloading.run_pause_optionT",
     "run_option (pause ?out ?c) =
      pause ?out (%input. run_option (?c input))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Monad_Overloading.run_sample_optionT",
     "run_option (sample ?p ?f) = sample ?p (%x. run_option (?f x))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Monad_Overloading.run_ask_stateT",
     "run_state (ask ?f) ?s = ask (%r. run_state (?f r) ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app (template_hole 0, t_empty))),
    ("Monad_Overloading.run_pause_writerT",
     "run_writer (pause ?out ?c) =
      pause ?out (%input. run_writer (?c input))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Monad_Overloading.run_sample_writerT",
     "run_writer (sample ?p ?f) = sample ?p (%x. run_writer (?f x))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Monad_Overloading.run_put_envT",
     "run_env (put ?s ?m) ?r = put ?s (run_env ?m ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Monad_Overloading.run_tell_envT",
     "run_env (tell ?s ?m) ?r = tell ?s (run_env ?m ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Monad_Overloading.run_tell_stateT",
     "run_state (tell ?w ?m) ?s = tell ?w (run_state ?m ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Monad_Overloading.run_alt_envT",
     "run_env (alt ?m ?m') ?r = alt (run_env ?m ?r) (run_env ?m' ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Monad_Overloading.run_altc_envT",
     "run_env (altc ?C ?f) ?r = altc ?C (%x. run_env (?f x) ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Monad_Overloading.run_catch_envT",
     "run_env (catch ?m ?h) ?r = catch (run_env ?m ?r) (run_env ?h ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Monad_Overloading.run_pause_envT",
     "run_env (pause ?out ?c) ?r =
      pause ?out (%input. run_env (?c input) ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Monad_Overloading.run_sample_envT",
     "run_env (sample ?p ?f) ?r = sample ?p (%x. run_env (?f x) ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Monad_Overloading.run_alt_stateT",
     "run_state (alt ?m ?m') ?s = alt (run_state ?m ?s) (run_state ?m' ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Monad_Overloading.run_altc_stateT",
     "run_state (altc ?C ?f) ?s = altc ?C (%x. run_state (?f x) ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Monad_Overloading.run_pause_stateT",
     "run_state (pause ?out ?c) ?s =
      pause ?out (%input. run_state (?c input) ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Monad_Overloading.run_sample_stateT",
     "run_state (sample ?p ?f) ?s = sample ?p (%x. run_state (?f x) ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Monad_Overloading.run_bind_envT",
     "run_env (Monad_Overloading.bind ?x ?f) ?r =
      Monad_Overloading.bind (run_env ?x ?r) (%y. run_env (?f y) ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         t_empty))),
    ("Monad_Overloading.run_bind_nondetT",
     "run_nondet (Monad_Overloading.bind ?m ?f) =
      Monad_Overloading.bind (run_nondet ?m)
       (%A. mUnionMT TYPE(?'a) (image_mset (run_nondet o ?f) A))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 6, template_var 1)),
         t_empty))),
    ("Monad_Overloading.run_bind_stateT",
     "run_state (Monad_Overloading.bind ?x ?f) ?s =
      Monad_Overloading.bind (run_state ?x ?s)
       (%(a, s'). run_state (?f a) s')",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0)),
         template_app (template_hole 0, t_empty)))),
    ("Monad_Overloading.run_alt_nondetT",
     "run_nondet (alt ?m ?m') =
      Monad_Overloading.bind (run_nondet ?m)
       (%A. Monad_Overloading.bind (run_nondet ?m')
             (%B. Monad_Overloading.return (A + B)))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 4, template_var 1)),
         t_empty))),
    ("Monad_Overloading.run_bind_optionT",
     "run_option (Monad_Overloading.bind ?x ?f) =
      Monad_Overloading.bind (run_option ?x)
       (%x. case x of None => Monad_Overloading.return None
            | Some y => run_option (?f y))",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 5, template_var 1)),
         t_empty))),
    ("Monad_Overloading.run_catch_optionT",
     "run_option (catch ?m ?h) =
      Monad_Overloading.bind (run_option ?m)
       (%x. if x = None then run_option ?h
            else Monad_Overloading.return x)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 6, template_var 1)),
         t_empty))),
    ("Monad_Overloading.run_tell_writerT",
     "run_writer (tell ?w ?m) =
      Monad_Overloading.bind (run_writer ?m)
       (%(a, ws). Monad_Overloading.return (a, ?w # ws))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 6, template_var 0)),
         template_app (template_hole 3, t_empty)))),
    ("Monad_Overloading.run_bind_writerT",
     "run_writer (Monad_Overloading.bind ?m ?f) =
      Monad_Overloading.bind (run_writer ?m)
       (%(a, ws).
           Monad_Overloading.bind (run_writer (?f a))
            (%(b, ws'). Monad_Overloading.return (b, ws @ ws')))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 6, template_var 1)),
         template_app (template_hole 3, t_empty))))]
