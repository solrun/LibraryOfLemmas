Loading theory "HOL-Library.Function_Algebras" (required by "Draft.VS_GroupsTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Stream" (required by "Draft.VS_GroupsTemplates" via "Draft.ExtrEqs")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.VS_GroupsTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.VS_GroupsTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.126s elapsed time, 0.516s cpu time, 0.059s GC time
Loading theory "Draft.VS_Prerequisites" (required by "Draft.VS_GroupsTemplates" via "Draft.VS_Groups")
theorem
  bij_betw_ow.transfer:
    [| bi_unique ?A2.0; bi_unique ?A1.0 |]
    ==> ((?A1.0 ===> ?A2.0) ===> rel_set ?A1.0 ===> rel_set ?A2.0 ===> (=))
         bij_betw bij_betw
### theory "Draft.VS_Prerequisites"
### 0.090s elapsed time, 0.361s cpu time, 0.000s GC time
Loading theory "Draft.VS_Groups" (required by "Draft.VS_GroupsTemplates")
### theory "HOL-Library.Set_Algebras"
### 0.250s elapsed time, 1.009s cpu time, 0.059s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.VS_GroupsTemplates" via "Draft.ExtrEqs")
locale semigroup_add_ow
  fixes S :: "'a set"
    and
    pls :: "'a => 'a => 'a"
      (infixl \<open>\<oplus>\<^sub>o\<^sub>w\<close> 65)
  assumes "semigroup_add_ow S (\<oplus>\<^sub>o\<^sub>w)"
locale ab_semigroup_add_ow
  fixes S :: "'a set"
    and
    pls :: "'a => 'a => 'a"
      (infixl \<open>\<oplus>\<^sub>o\<^sub>w\<close> 65)
  assumes "ab_semigroup_add_ow S (\<oplus>\<^sub>o\<^sub>w)"
locale comm_monoid_add_ow
  fixes S :: "'a set"
    and
    pls :: "'a => 'a => 'a"
      (infixl \<open>\<oplus>\<^sub>o\<^sub>w\<close> 65)
    and z :: "'a"
  assumes "comm_monoid_add_ow S (\<oplus>\<^sub>o\<^sub>w) z"
locale comm_monoid_add_ow
  fixes S :: "'a set"
    and
    pls :: "'a => 'a => 'a"
      (infixl \<open>\<oplus>\<^sub>o\<^sub>w\<close> 65)
    and z :: "'a"
  assumes "comm_monoid_add_ow S (\<oplus>\<^sub>o\<^sub>w) z"
locale ab_group_add_ow
  fixes S :: "'a set"
    and
    pls :: "'a => 'a => 'a"
      (infixl \<open>\<oplus>\<^sub>o\<^sub>w\<close> 65)
    and z :: "'a"
    and mns :: "'a => 'a => 'a"
    and um :: "'a => 'a"
  assumes "ab_group_add_ow S (\<oplus>\<^sub>o\<^sub>w) z mns um"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
locale ab_group_add_ow
  fixes S :: "'a set"
    and
    pls :: "'a => 'a => 'a"
      (infixl \<open>\<oplus>\<^sub>o\<^sub>w\<close> 65)
    and z :: "'a"
    and mns :: "'a => 'a => 'a"
    and um :: "'a => 'a"
  assumes "ab_group_add_ow S (\<oplus>\<^sub>o\<^sub>w) z mns um"
consts
  snth :: "'a stream => nat => 'a"
### theory "Draft.VS_Groups"
### 0.284s elapsed time, 1.093s cpu time, 0.128s GC time
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.781s elapsed time, 2.817s cpu time, 0.235s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.696s elapsed time, 2.171s cpu time, 0.257s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.818s elapsed time, 4.413s cpu time, 0.790s GC time
Loading theory "Draft.Templates" (required by "Draft.VS_GroupsTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.067s elapsed time, 0.116s cpu time, 0.043s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.VS_GroupsTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.475s elapsed time, 0.480s cpu time, 0.000s GC time
Loading theory "Draft.VS_GroupsTemplates"
val templateLemmas =
   [("VS_Groups.sum_with_empty", "sum_with ?pls ?z ?f {} = ?z",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0),
         template_hole 0),
       template_var 1)),
    ("VS_Groups.ab_semigroup_add_on_with_transfer",
     "bi_unique ?A ==>
      rel_fun (rel_set ?A) (rel_fun (rel_fun ?A (rel_fun ?A ?A)) (=))
       ab_semigroup_add_ow ab_semigroup_add_ow",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_app
                        (template_app (template_hole 3, template_var 0),
                         template_var 0))),
                   template_hole 2)),
               template_hole 1),
             template_hole 0)
           ))),
    ("VS_Groups.semigroup_add_on_with_transfer",
     "bi_unique ?A ==>
      rel_fun (rel_set ?A) (rel_fun (rel_fun ?A (rel_fun ?A ?A)) (=))
       semigroup_add_ow semigroup_add_ow",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_app
                        (template_app (template_hole 3, template_var 0),
                         template_var 0))),
                   template_hole 2)),
               template_hole 1),
             template_hole 0)
           ))),
    ("VS_Groups.Domainp_applyI",
     "[| rel_fun ?A ?B ?f ?g; ?A ?x ?y |] ==> Domainp ?B (?f ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 5, template_var 1), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 4),
             template_app (template_var 3, template_var 1))
           ))),
    ("VS_Groups.comm_monoid_add_on_with_transfer",
     "bi_unique ?A ==>
      rel_fun (rel_set ?A)
       (rel_fun (rel_fun ?A (rel_fun ?A ?A)) (rel_fun ?A (=)))
       comm_monoid_add_ow comm_monoid_add_ow",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 7, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 0),
                       template_app
                        (template_app (template_hole 4, template_var 0),
                         template_var 0))),
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_hole 2))),
               template_hole 1),
             template_hole 0)
           ))),
    ("VS_Groups.right_total_ab_semigroup_add_transfer",
     "[| right_total ?A; bi_unique ?A |]
      ==> rel_fun (rel_fun ?A (rel_fun ?A ?A)) (=)
           (ab_semigroup_add_ow (Collect (Domainp ?A)))
           class.ab_semigroup_add",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 0)),
        template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 0),
                     template_app
                      (template_app (template_hole 5, template_var 0),
                       template_var 0))),
                 template_hole 4),
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)))),
             template_hole 0)
           ))),
    ("VS_Groups.right_total_semigroup_add_transfer",
     "[| right_total ?A; bi_unique ?A |]
      ==> rel_fun (rel_fun ?A (rel_fun ?A ?A)) (=)
           (semigroup_add_ow (Collect (Domainp ?A))) class.semigroup_add",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 0)),
        template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 0),
                     template_app
                      (template_app (template_hole 5, template_var 0),
                       template_var 0))),
                 template_hole 4),
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)))),
             template_hole 0)
           ))),
    ("VS_Groups.right_total_comm_monoid_add_transfer",
     "[| right_total ?A; bi_unique ?A |]
      ==> rel_fun (rel_fun ?A (rel_fun ?A ?A)) (rel_fun ?A (=))
           (comm_monoid_add_ow (Collect (Domainp ?A)))
           class.comm_monoid_add",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_var 0),
                     template_app
                      (template_app (template_hole 6, template_var 0),
                       template_var 0))),
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_hole 4)),
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)))),
             template_hole 0)
           ))),
    ("VS_Groups.Domainp_apply2I",
     "[| rel_fun ?A (rel_fun ?B ?C) ?f ?g; ?A ?x ?y; ?B ?x' ?y' |]
      ==> Domainp ?C (?f ?x ?x')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 8),
                  template_app
                   (template_app (template_hole 1, template_var 7),
                    template_var 6)),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 8, template_var 3), template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 7, template_var 1), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 6),
             template_app
              (template_app (template_var 5, template_var 3),
               template_var 1))
           ))),
    ("VS_Groups.sum_with_transfer",
     "[| right_total ?A; bi_unique ?A; bi_unique ?B |]
      ==> rel_fun (rel_fun ?A (rel_fun ?A ?A))
           (rel_fun ?A (rel_fun (rel_fun ?B ?A) (rel_fun (rel_set ?B) ?A)))
           sum_with sum_with",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate
         (template_app (template_hole 10, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_var 1),
                     template_app
                      (template_app (template_hole 7, template_var 1),
                       template_var 1))),
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_var 0),
                         template_var 1)),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app (template_hole 2, template_var 0)),
                       template_var 1)))),
               template_hole 1),
             template_hole 0)
           ))),
    ("VS_Groups.ab_group_add_transfer",
     "[| right_total ?A; bi_unique ?A |]
      ==> rel_fun (rel_fun ?A (rel_fun ?A ?A))
           (rel_fun ?A
             (rel_fun (rel_fun ?A (rel_fun ?A ?A))
               (rel_fun (rel_fun ?A ?A) (=))))
           (ab_group_add_ow (Collect (Domainp ?A))) class.ab_group_add",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 0)),
        template_predicate
         (template_app (template_hole 11, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_var 0),
                     template_app
                      (template_app (template_hole 8, template_var 0),
                       template_var 0))),
                 template_app
                  (template_app (template_hole 7, template_var 0),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 9, template_var 0),
                         template_app
                          (template_app (template_hole 8, template_var 0),
                           template_var 0))),
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app (template_hole 8, template_var 0),
                           template_var 0)),
                       template_hole 4)))),
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)))),
             template_hole 0)
           ))),
    ("VS_Groups.DsI",
     "[| !!x. x : ?t ==> Domainp ?A (?r x); ?t <= Collect (Domainp ?A);
         rel_fun ?A (rel_fun ?A ?A) ?p ?p'; ?A ?z ?z' |]
      ==> Domainp ?A (sum_with ?p ?z ?r ?t)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_inequation
         (less_equals, template_var 6,
          template_app
           (template_hole 3,
            template_app (template_hole 5, template_var 5))),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 5)),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 5, template_var 1), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 5),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 4),
               template_var 6))
           ))),
    ("VS_Groups.sum_with_cases",
     "[| !!C. [| ?f ` ?S <= C; comm_monoid_add_ow C ?pls ?z |]
              ==> ?P (Finite_Set.fold (?pls o ?f) ?z ?S);
         (!!C. comm_monoid_add_ow C ?pls ?z ==> EX s:?S. ?f s ~: C) ==>
         ?P ?z |]
      ==> ?P (sum_with ?pls ?z ?f ?S)",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_implication
         ([template_predicate (template_app (template_hole 10, t_empty))],
          template_predicate
           (template_app (template_var 0, template_var 1)))],
       template_predicate
        (
           template_app
            (template_var 0,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 4),
               template_var 3))
           ))),
    ("VS_Groups.ex_comm_monoid_add_around_imageE",
     "[| EX C. ?f ` ?S <= C & comm_monoid_add_ow C ?pls ?zero;
         rel_fun ?A (rel_fun ?A ?A) ?pls ?pls'; ?A ?zero ?zero';
         Domainp (rel_set ?B) ?S; !!x. x : ?S ==> Domainp ?A (?f x);
         !!C. [| comm_monoid_add_ow C ?pls ?zero; ?f ` ?S <= C;
                 Domainp (rel_set ?A) C |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 4),
                  template_app
                   (template_app (template_hole 8, template_var 4),
                    template_var 4)),
                template_var 6),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 4, template_var 5), template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)),
              template_var 7)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.VS_GroupsTemplates"
### 0.303s elapsed time, 0.437s cpu time, 0.057s GC time
val it = (): unit
