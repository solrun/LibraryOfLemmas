Loading theory "HOL-Library.Function_Algebras" (required by "Draft.VS_ModulesTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.VS_ModulesTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Stream" (required by "Draft.VS_ModulesTemplates" via "Draft.ExtrEqs")
Loading theory "HOL-Library.Tree" (required by "Draft.VS_ModulesTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.138s elapsed time, 0.547s cpu time, 0.049s GC time
Loading theory "Draft.VS_Prerequisites" (required by "Draft.VS_ModulesTemplates" via "Draft.VS_Modules" via "Draft.VS_Groups")
theorem
  bij_betw_ow.transfer:
    [| bi_unique ?A2.0; bi_unique ?A1.0 |]
    ==> ((?A1.0 ===> ?A2.0) ===> rel_set ?A1.0 ===> rel_set ?A2.0 ===> (=))
         bij_betw bij_betw
### theory "HOL-Library.Set_Algebras"
### 0.224s elapsed time, 0.897s cpu time, 0.049s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.VS_ModulesTemplates" via "Draft.ExtrEqs")
### theory "Draft.VS_Prerequisites"
### 0.098s elapsed time, 0.388s cpu time, 0.000s GC time
Loading theory "Draft.VS_Groups" (required by "Draft.VS_ModulesTemplates" via "Draft.VS_Modules")
locale semigroup_add_ow
  fixes S :: "'a set"
    and
    pls :: "'a => 'a => 'a"
      (infixl \<open>\<oplus>\<^sub>o\<^sub>w\<close> 65)
  assumes "semigroup_add_ow S (\<oplus>\<^sub>o\<^sub>w)"
locale ab_semigroup_add_ow
  fixes S :: "'a set"
    and
    pls :: "'a => 'a => 'a"
      (infixl \<open>\<oplus>\<^sub>o\<^sub>w\<close> 65)
  assumes "ab_semigroup_add_ow S (\<oplus>\<^sub>o\<^sub>w)"
locale comm_monoid_add_ow
  fixes S :: "'a set"
    and
    pls :: "'a => 'a => 'a"
      (infixl \<open>\<oplus>\<^sub>o\<^sub>w\<close> 65)
    and z :: "'a"
  assumes "comm_monoid_add_ow S (\<oplus>\<^sub>o\<^sub>w) z"
locale comm_monoid_add_ow
  fixes S :: "'a set"
    and
    pls :: "'a => 'a => 'a"
      (infixl \<open>\<oplus>\<^sub>o\<^sub>w\<close> 65)
    and z :: "'a"
  assumes "comm_monoid_add_ow S (\<oplus>\<^sub>o\<^sub>w) z"
locale ab_group_add_ow
  fixes S :: "'a set"
    and
    pls :: "'a => 'a => 'a"
      (infixl \<open>\<oplus>\<^sub>o\<^sub>w\<close> 65)
    and z :: "'a"
    and mns :: "'a => 'a => 'a"
    and um :: "'a => 'a"
  assumes "ab_group_add_ow S (\<oplus>\<^sub>o\<^sub>w) z mns um"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
locale ab_group_add_ow
  fixes S :: "'a set"
    and
    pls :: "'a => 'a => 'a"
      (infixl \<open>\<oplus>\<^sub>o\<^sub>w\<close> 65)
    and z :: "'a"
    and mns :: "'a => 'a => 'a"
    and um :: "'a => 'a"
  assumes "ab_group_add_ow S (\<oplus>\<^sub>o\<^sub>w) z mns um"
consts
  left :: "'a tree => 'a tree"
### theory "Draft.VS_Groups"
### 0.283s elapsed time, 1.099s cpu time, 0.131s GC time
Loading theory "Draft.VS_Modules" (required by "Draft.VS_ModulesTemplates")
consts
  snth :: "'a stream => nat => 'a"
consts
  right :: "'a tree => 'a tree"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.853s elapsed time, 3.336s cpu time, 0.311s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
locale module_with
  fixes
    plus\<^sub>M :: "'m => 'm => 'm"  (infixl \<open>+\<^sub>M\<close> 65)
    and zero\<^sub>M :: "'m"  (\<open>0\<^sub>M\<close>)
    and
    minus\<^sub>M :: "'m => 'm => 'm"  (infixl \<open>-\<^sub>M\<close> 65)
    and uminus\<^sub>M :: "'m => 'm"  (\<open>-\<^sub>M _\<close> [81] 80)
    and
    scale :: "'cr1 => 'm => 'm"
      (infixr \<open>*s\<^sub>w\<^sub>i\<^sub>t\<^sub>h\<close> 75)
  assumes
    "module_with (+\<^sub>M) 0\<^sub>M (-\<^sub>M) uminus\<^sub>M
      (*s\<^sub>w\<^sub>i\<^sub>t\<^sub>h)"
### theory "HOL-Library.BigO"
### 0.891s elapsed time, 3.255s cpu time, 0.727s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
locale module_pair_with
  fixes
    plus\<^sub>M\<^sub>_\<^sub>1 :: "'m_1 => 'm_1 => 'm_1"
      (infixl \<open>+\<^sub>M\<^sub>'_\<^sub>1\<close> 65)
    and
    zero\<^sub>M\<^sub>_\<^sub>1 :: "'m_1"
      (\<open>0\<^sub>M\<^sub>'_\<^sub>1\<close>)
    and
    minus\<^sub>M\<^sub>_\<^sub>1 :: "'m_1 => 'm_1 => 'm_1"
      (infixl \<open>-\<^sub>M\<^sub>'_\<^sub>1\<close> 65)
    and
    uminus\<^sub>M\<^sub>_\<^sub>1 :: "'m_1 => 'm_1"
      (\<open>-\<^sub>M\<^sub>'_\<^sub>1 _\<close> [81] 80)
    and
    scale\<^sub>1 :: "'a => 'm_1 => 'm_1"
      (infixr
        \<open>*s\<^sub>w\<^sub>i\<^sub>t\<^sub>h\<^sub>'_\<^sub>1\<close>
        75)
    and
    plus\<^sub>M\<^sub>_\<^sub>2 :: "'m_2 => 'm_2 => 'm_2"
      (infixl \<open>+\<^sub>M\<^sub>'_\<^sub>2\<close> 65)
    and
    zero\<^sub>M\<^sub>_\<^sub>2 :: "'m_2"
      (\<open>0\<^sub>M\<^sub>'_\<^sub>2\<close>)
    and
    minus\<^sub>M\<^sub>_\<^sub>2 :: "'m_2 => 'm_2 => 'm_2"
      (infixl \<open>-\<^sub>M\<^sub>'_\<^sub>2\<close> 65)
    and
    uminus\<^sub>M\<^sub>_\<^sub>2 :: "'m_2 => 'm_2"
      (\<open>-\<^sub>M\<^sub>'_\<^sub>2 _\<close> [81] 80)
    and
    scale\<^sub>2 :: "'b => 'm_2 => 'm_2"
      (infixr
        \<open>*s\<^sub>w\<^sub>i\<^sub>t\<^sub>h\<^sub>'_\<^sub>2\<close>
        75)
  assumes
    "module_pair_with (+\<^sub>M\<^sub>_\<^sub>1) 0\<^sub>M\<^sub>_\<^sub>1
      (-\<^sub>M\<^sub>_\<^sub>1) uminus\<^sub>M\<^sub>_\<^sub>1
      (*s\<^sub>w\<^sub>i\<^sub>t\<^sub>h\<^sub>_\<^sub>1)
      (+\<^sub>M\<^sub>_\<^sub>2) 0\<^sub>M\<^sub>_\<^sub>2
      (-\<^sub>M\<^sub>_\<^sub>2) uminus\<^sub>M\<^sub>_\<^sub>2
      (*s\<^sub>w\<^sub>i\<^sub>t\<^sub>h\<^sub>_\<^sub>2)"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
locale module_hom_with
  fixes
    plus\<^sub>M\<^sub>_\<^sub>1 :: "'m_1 => 'm_1 => 'm_1"
      (infixl \<open>+\<^sub>M\<^sub>'_\<^sub>1\<close> 65)
    and
    zero\<^sub>M\<^sub>_\<^sub>1 :: "'m_1"
      (\<open>0\<^sub>M\<^sub>'_\<^sub>1\<close>)
    and
    minus\<^sub>M\<^sub>_\<^sub>1 :: "'m_1 => 'm_1 => 'm_1"
      (infixl \<open>-\<^sub>M\<^sub>'_\<^sub>1\<close> 65)
    and
    uminus\<^sub>M\<^sub>_\<^sub>1 :: "'m_1 => 'm_1"
      (\<open>-\<^sub>M\<^sub>'_\<^sub>1 _\<close> [81] 80)
    and
    scale\<^sub>1 :: "'a => 'm_1 => 'm_1"
      (infixr
        \<open>*s\<^sub>w\<^sub>i\<^sub>t\<^sub>h\<^sub>'_\<^sub>1\<close>
        75)
    and
    plus\<^sub>M\<^sub>_\<^sub>2 :: "'m_2 => 'm_2 => 'm_2"
      (infixl \<open>+\<^sub>M\<^sub>'_\<^sub>2\<close> 65)
    and
    zero\<^sub>M\<^sub>_\<^sub>2 :: "'m_2"
      (\<open>0\<^sub>M\<^sub>'_\<^sub>2\<close>)
    and
    minus\<^sub>M\<^sub>_\<^sub>2 :: "'m_2 => 'm_2 => 'm_2"
      (infixl \<open>-\<^sub>M\<^sub>'_\<^sub>2\<close> 65)
    and
    uminus\<^sub>M\<^sub>_\<^sub>2 :: "'m_2 => 'm_2"
      (\<open>-\<^sub>M\<^sub>'_\<^sub>2 _\<close> [81] 80)
    and
    scale\<^sub>2 :: "'a => 'm_2 => 'm_2"
      (infixr
        \<open>*s\<^sub>w\<^sub>i\<^sub>t\<^sub>h\<^sub>'_\<^sub>2\<close>
        75)
    and f :: "'m_1 => 'm_2"
  assumes
    "module_hom_with (+\<^sub>M\<^sub>_\<^sub>1) 0\<^sub>M\<^sub>_\<^sub>1
      (-\<^sub>M\<^sub>_\<^sub>1) uminus\<^sub>M\<^sub>_\<^sub>1
      (*s\<^sub>w\<^sub>i\<^sub>t\<^sub>h\<^sub>_\<^sub>1)
      (+\<^sub>M\<^sub>_\<^sub>2) 0\<^sub>M\<^sub>_\<^sub>2
      (-\<^sub>M\<^sub>_\<^sub>2) uminus\<^sub>M\<^sub>_\<^sub>2
      (*s\<^sub>w\<^sub>i\<^sub>t\<^sub>h\<^sub>_\<^sub>2) f"
theorem
  subspace.with_def:
    subspace.with ?plus ?zero ==
    %scale S.
       ?zero : S &
       (ALL x:S. ALL y:S. ?plus x y : S) & (ALL c. ALL x:S. scale c x : S)
theorem subspace.with: module.subspace == subspace.with (+) (0::?'b)
theorem
  span.with_def:
    span.with ?zero ?plus ==
    %scale b.
       {sum_with ?plus ?zero (%a. scale (r a) a) t |t r. finite t & t <= b}
theorem span.with: module.span == span.with (0::?'b) (+)
theorem
  dependent.with_def:
    dependent.with ?zero ?zeroa ?plus ==
    %scale s.
       EX t u.
          finite t &
          t <= s &
          sum_with ?plus ?zeroa (%v. scale (u v) v) t = ?zeroa &
          (EX v:t. u v ~= ?zero)
theorem
  dependent.with: module.dependent == dependent.with (0::?'a) (0::?'b) (+)
theorem
  representation.with_def:
    representation.with ?plus ?zero ?zeroa ==
    %scale basis v.
       if ~ (with ?zeroa ?zero ?plus scale : \<guillemotleft>dependent\<guillemotright> basis) &
          v : (with ?zero ?plus scale : \<guillemotleft>span\<guillemotright> basis)
       then SOME f.
               (ALL v. f v ~= ?zeroa --> v : basis) &
               finite {v. f v ~= ?zeroa} &
               sum_with ?plus ?zero (%v. scale (f v) v) {v. f v ~= ?zeroa} =
               v
       else (%b. ?zeroa)
theorem
  representation.with:
    module.representation == representation.with (+) (0::?'b) (0::?'a)
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
theorem
  subspace_with.transfer:
    [| is_equality ?A; bi_unique ?B |]
    ==> ((?B ===> ?B ===> ?B) ===>
         ?B ===> (?A ===> ?B ===> ?B) ===> rel_set ?B ===> (=))
         subspace.with subspace.with
locale module_ow
  fixes U\<^sub>M :: "'m set"
    and
    plus\<^sub>M :: "'m => 'm => 'm"  (infixl \<open>+\<^sub>M\<close> 65)
    and zero\<^sub>M :: "'m"  (\<open>0\<^sub>M\<close>)
    and
    minus\<^sub>M :: "'m => 'm => 'm"  (infixl \<open>-\<^sub>M\<close> 65)
    and uminus\<^sub>M :: "'m => 'm"  (\<open>-\<^sub>M _\<close> [81] 80)
    and scale :: "'cr1 => 'm => 'm"  (infixr \<open>*s\<^sub>M\<close> 75)
  assumes
    "module_ow U\<^sub>M (+\<^sub>M) 0\<^sub>M (-\<^sub>M) uminus\<^sub>M
      (*s\<^sub>M)"
locale module_pair_ow
  fixes U\<^sub>M\<^sub>_\<^sub>1 :: "'m_1 set"
    and
    plus\<^sub>M\<^sub>_\<^sub>1 :: "'m_1 => 'm_1 => 'm_1"
      (infixl \<open>+\<^sub>M\<^sub>'_\<^sub>1\<close> 65)
    and
    zero\<^sub>M\<^sub>_\<^sub>1 :: "'m_1"
      (\<open>0\<^sub>M\<^sub>'_\<^sub>1\<close>)
    and
    minus\<^sub>M\<^sub>_\<^sub>1 :: "'m_1 => 'm_1 => 'm_1"
      (infixl \<open>-\<^sub>M\<^sub>'_\<^sub>1\<close> 65)
    and
    uminus\<^sub>M\<^sub>_\<^sub>1 :: "'m_1 => 'm_1"
      (\<open>-\<^sub>M\<^sub>'_\<^sub>1 _\<close> [81] 80)
    and
    scale\<^sub>1 :: "'cr1 => 'm_1 => 'm_1"
      (infixr \<open>*s\<^sub>M\<^sub>'_\<^sub>1\<close> 75)
    and U\<^sub>M\<^sub>_\<^sub>2 :: "'m_2 set"
    and
    plus\<^sub>M\<^sub>_\<^sub>2 :: "'m_2 => 'm_2 => 'm_2"
      (infixl \<open>+\<^sub>M\<^sub>'_\<^sub>2\<close> 65)
    and
    zero\<^sub>M\<^sub>_\<^sub>2 :: "'m_2"
      (\<open>0\<^sub>M\<^sub>'_\<^sub>2\<close>)
    and
    minus\<^sub>M\<^sub>_\<^sub>2 :: "'m_2 => 'm_2 => 'm_2"
      (infixl \<open>-\<^sub>M\<^sub>'_\<^sub>2\<close> 65)
    and
    uminus\<^sub>M\<^sub>_\<^sub>2 :: "'m_2 => 'm_2"
      (\<open>-\<^sub>M\<^sub>'_\<^sub>2 _\<close> [81] 80)
    and
    scale\<^sub>2 :: "'cr1 => 'm_2 => 'm_2"
      (infixr \<open>*s\<^sub>M\<^sub>'_\<^sub>2\<close> 75)
  assumes
    "module_pair_ow U\<^sub>M\<^sub>_\<^sub>1 (+\<^sub>M\<^sub>_\<^sub>1)
      0\<^sub>M\<^sub>_\<^sub>1 (-\<^sub>M\<^sub>_\<^sub>1)
      uminus\<^sub>M\<^sub>_\<^sub>1 (*s\<^sub>M\<^sub>_\<^sub>1)
      U\<^sub>M\<^sub>_\<^sub>2 (+\<^sub>M\<^sub>_\<^sub>2)
      0\<^sub>M\<^sub>_\<^sub>2 (-\<^sub>M\<^sub>_\<^sub>2)
      uminus\<^sub>M\<^sub>_\<^sub>2 (*s\<^sub>M\<^sub>_\<^sub>2)"
locale module_hom_ow
  fixes U\<^sub>M\<^sub>_\<^sub>1 :: "'m_1 set"
    and
    plus\<^sub>M\<^sub>_\<^sub>1 :: "'m_1 => 'm_1 => 'm_1"
      (infixl \<open>+\<^sub>M\<^sub>'_\<^sub>1\<close> 65)
    and
    zero\<^sub>M\<^sub>_\<^sub>1 :: "'m_1"
      (\<open>0\<^sub>M\<^sub>'_\<^sub>1\<close>)
    and
    minus\<^sub>M\<^sub>_\<^sub>1 :: "'m_1 => 'm_1 => 'm_1"
      (infixl \<open>-\<^sub>M\<^sub>'_\<^sub>1\<close> 65)
    and
    uminus\<^sub>M\<^sub>_\<^sub>1 :: "'m_1 => 'm_1"
      (\<open>-\<^sub>M\<^sub>'_\<^sub>1 _\<close> [81] 80)
    and
    scale\<^sub>1 :: "'cr1 => 'm_1 => 'm_1"
      (infixr \<open>*s\<^sub>M\<^sub>'_\<^sub>1\<close> 75)
    and U\<^sub>M\<^sub>_\<^sub>2 :: "'m_2 set"
    and
    plus\<^sub>M\<^sub>_\<^sub>2 :: "'m_2 => 'm_2 => 'm_2"
      (infixl \<open>+\<^sub>M\<^sub>'_\<^sub>2\<close> 65)
    and
    zero\<^sub>M\<^sub>_\<^sub>2 :: "'m_2"
      (\<open>0\<^sub>M\<^sub>'_\<^sub>2\<close>)
    and
    minus\<^sub>M\<^sub>_\<^sub>2 :: "'m_2 => 'm_2 => 'm_2"
      (infixl \<open>-\<^sub>M\<^sub>'_\<^sub>2\<close> 65)
    and
    uminus\<^sub>M\<^sub>_\<^sub>2 :: "'m_2 => 'm_2"
      (\<open>-\<^sub>M\<^sub>'_\<^sub>2 _\<close> [81] 80)
    and
    scale\<^sub>2 :: "'cr1 => 'm_2 => 'm_2"
      (infixr \<open>*s\<^sub>M\<^sub>'_\<^sub>2\<close> 75)
    and f :: "'m_1 => 'm_2"
  assumes
    "module_hom_ow U\<^sub>M\<^sub>_\<^sub>1 (+\<^sub>M\<^sub>_\<^sub>1)
      0\<^sub>M\<^sub>_\<^sub>1 (-\<^sub>M\<^sub>_\<^sub>1)
      uminus\<^sub>M\<^sub>_\<^sub>1 (*s\<^sub>M\<^sub>_\<^sub>1)
      U\<^sub>M\<^sub>_\<^sub>2 (+\<^sub>M\<^sub>_\<^sub>2)
      0\<^sub>M\<^sub>_\<^sub>2 (-\<^sub>M\<^sub>_\<^sub>2)
      uminus\<^sub>M\<^sub>_\<^sub>2 (*s\<^sub>M\<^sub>_\<^sub>2) f"
Found termination order: "size <*mlex*> {}"
locale module_on
  fixes U\<^sub>M :: "'b set"
    and scale :: "'a => 'b => 'b"  (infixr \<open>*s\<close> 75)
  assumes "module_on U\<^sub>M (*s)"
### theory "HOL-Library.Tree"
### 1.862s elapsed time, 5.727s cpu time, 0.941s GC time
Loading theory "Draft.Templates" (required by "Draft.VS_ModulesTemplates" via "Draft.ExtrEqs")
locale module_pair_on
  fixes U\<^sub>M\<^sub>_\<^sub>1 :: "'b set"
    and U\<^sub>M\<^sub>_\<^sub>2 :: "'c set"
    and
    scale\<^sub>1 :: "'a => 'b => 'b"  (infixr \<open>*s\<^sub>1\<close> 75)
    and
    scale\<^sub>2 :: "'a => 'c => 'c"  (infixr \<open>*s\<^sub>2\<close> 75)
  assumes
    "module_pair_on U\<^sub>M\<^sub>_\<^sub>1 U\<^sub>M\<^sub>_\<^sub>2
      (*s\<^sub>1) (*s\<^sub>2)"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.056s elapsed time, 0.130s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.VS_ModulesTemplates")
locale module_hom_on
  fixes U\<^sub>M\<^sub>_\<^sub>1 :: "'b set"
    and U\<^sub>M\<^sub>_\<^sub>2 :: "'c set"
    and
    scale\<^sub>1 :: "'a => 'b => 'b"  (infixr \<open>*s\<^sub>1\<close> 75)
    and
    scale\<^sub>2 :: "'a => 'c => 'c"  (infixr \<open>*s\<^sub>2\<close> 75)
    and f :: "'b => 'c"
  assumes
    "module_hom_on U\<^sub>M\<^sub>_\<^sub>1 U\<^sub>M\<^sub>_\<^sub>2
      (*s\<^sub>1) (*s\<^sub>2) f"
locale module_on
  fixes U\<^sub>M :: "'b set"
    and scale :: "'a => 'b => 'b"  (infixr \<open>*s\<close> 75)
  assumes "module_on U\<^sub>M (*s)"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.542s elapsed time, 1.113s cpu time, 0.074s GC time
locale module_pair_on
  fixes U\<^sub>M\<^sub>_\<^sub>1 :: "'b set"
    and U\<^sub>M\<^sub>_\<^sub>2 :: "'c set"
    and
    scale\<^sub>1 :: "'a => 'b => 'b"  (infixr \<open>*s\<^sub>1\<close> 75)
    and
    scale\<^sub>2 :: "'a => 'c => 'c"  (infixr \<open>*s\<^sub>2\<close> 75)
  assumes
    "module_pair_on U\<^sub>M\<^sub>_\<^sub>1 U\<^sub>M\<^sub>_\<^sub>2
      (*s\<^sub>1) (*s\<^sub>2)"
### theory "Draft.VS_Modules"
### 9.798s elapsed time, 12.900s cpu time, 1.129s GC time
Loading theory "Draft.VS_ModulesTemplates"
val templateLemmas =
   [("VS_Modules.implicit_module_ow",
     "module_ow ?U\<^sub>M (+) (0::?'b) (-) uminus = module_on ?U\<^sub>M",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_var 0),
               template_hole 4),
             template_hole 3),
           template_hole 2),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("VS_Modules.implicit_module_hom_ow",
     "module_hom_ow ?U\<^sub>M\<^sub>_\<^sub>1 (+) (0::?'a) (-) uminus
       ?scale\<^sub>1 ?U\<^sub>M\<^sub>_\<^sub>2 (+) (0::?'b) (-) uminus
       ?scale\<^sub>2 =
      module_hom_on ?U\<^sub>M\<^sub>_\<^sub>1 ?U\<^sub>M\<^sub>_\<^sub>2
       ?scale\<^sub>1 ?scale\<^sub>2",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 9, template_var 3),
                             template_hole 8),
                           template_hole 7),
                         template_hole 6),
                       template_hole 5),
                     template_var 2),
                   template_var 1),
                 template_hole 4),
               template_hole 3),
             template_hole 2),
           template_hole 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 2),
         template_var 0))),
    ("VS_Modules.implicit_module_pair_ow",
     "module_pair_ow ?U\<^sub>M\<^sub>_\<^sub>1 (+) (0::?'a) (-) uminus
       ?scale\<^sub>1 ?U\<^sub>M\<^sub>_\<^sub>2 (+) (0::?'c) (-) uminus
       ?scale\<^sub>2 =
      module_pair_on ?U\<^sub>M\<^sub>_\<^sub>1 ?U\<^sub>M\<^sub>_\<^sub>2
       ?scale\<^sub>1 ?scale\<^sub>2",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 9, template_var 3),
                             template_hole 8),
                           template_hole 7),
                         template_hole 6),
                       template_hole 5),
                     template_var 2),
                   template_var 1),
                 template_hole 4),
               template_hole 3),
             template_hole 2),
           template_hole 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 2),
         template_var 0))),
    ("VS_Modules.span_with_transfer",
     "[| right_total ?A; bi_unique ?A |]
      ==> rel_fun ?A
           (rel_fun (rel_fun ?A (rel_fun ?A ?A))
             (rel_fun (rel_fun (=) (rel_fun ?A ?A))
               (rel_fun (rel_set ?A) (rel_set ?A))))
           span.with span.with",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 0)),
        template_predicate
         (template_app (template_hole 11, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 10, template_var 0),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 8, template_var 0),
                       template_app
                        (template_app (template_hole 7, template_var 0),
                         template_var 0))),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 5, template_hole 4),
                         template_app
                          (template_app (template_hole 7, template_var 0),
                           template_var 0))),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app (template_hole 2, template_var 0)),
                       template_app (template_hole 2, template_var 0))))),
               template_hole 1),
             template_hole 0)
           ))),
    ("VS_Modules.dependent_with_transfer",
     "[| right_total ?A; bi_unique ?A |]
      ==> rel_fun (=)
           (rel_fun ?A
             (rel_fun (rel_fun ?A (rel_fun ?A ?A))
               (rel_fun (rel_fun (=) (rel_fun ?A ?A))
                 (rel_fun (rel_set ?A) (=)))))
           dependent.with dependent.with",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 0)),
        template_predicate
         (template_app (template_hole 13, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 12, template_hole 11),
                 template_app
                  (template_app (template_hole 10, template_var 0),
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 8, template_var 0),
                         template_app
                          (template_app (template_hole 7, template_var 0),
                           template_var 0))),
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_app (template_hole 5, template_hole 11),
                           template_app
                            (template_app (template_hole 7, template_var 0),
                             template_var 0))),
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app (template_hole 3, template_var 0)),
                         template_hole 2))))),
               template_hole 1),
             template_hole 0)
           ))),
    ("VS_Modules.module_with_transfer",
     "[| bi_unique ?B; right_total ?B |]
      ==> rel_fun (rel_fun ?B (rel_fun ?B ?B))
           (rel_fun ?B
             (rel_fun (rel_fun ?B (rel_fun ?B ?B))
               (rel_fun (rel_fun ?B ?B)
                 (rel_fun (rel_fun (=) (rel_fun ?B ?B)) (=)))))
           (module_ow (Collect (Domainp ?B))) module_with",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 0)),
        template_predicate
         (template_app (template_hole 14, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 13,
                   template_app
                    (template_app (template_hole 12, template_var 0),
                     template_app
                      (template_app (template_hole 11, template_var 0),
                       template_var 0))),
                 template_app
                  (template_app (template_hole 10, template_var 0),
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 12, template_var 0),
                         template_app
                          (template_app (template_hole 11, template_var 0),
                           template_var 0))),
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app (template_hole 11, template_var 0),
                           template_var 0)),
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_app
                              (template_hole 6, template_hole 5),
                             template_app
                              (template_app
                                (template_hole 11, template_var 0),
                               template_var 0))),
                         template_hole 4))))),
               t_empty),
             template_hole 0)
           ))),
    ("VS_Modules.module_pair_with_transfer",
     "[| bi_unique ?B\<^sub>1; right_total ?B\<^sub>1; bi_unique ?B\<^sub>2;
         right_total ?B\<^sub>2 |]
      ==> rel_fun (rel_fun ?B\<^sub>1 (rel_fun ?B\<^sub>1 ?B\<^sub>1))
           (rel_fun ?B\<^sub>1
             (rel_fun (rel_fun ?B\<^sub>1 (rel_fun ?B\<^sub>1 ?B\<^sub>1))
               (rel_fun (rel_fun ?B\<^sub>1 ?B\<^sub>1)
                 (rel_fun (rel_fun (=) (rel_fun ?B\<^sub>1 ?B\<^sub>1))
                   (rel_fun
                     (rel_fun ?B\<^sub>2 (rel_fun ?B\<^sub>2 ?B\<^sub>2))
                     (rel_fun ?B\<^sub>2
                       (rel_fun
                         (rel_fun ?B\<^sub>2
                           (rel_fun ?B\<^sub>2 ?B\<^sub>2))
                         (rel_fun (rel_fun ?B\<^sub>2 ?B\<^sub>2)
                           (rel_fun
                             (rel_fun (=) (rel_fun ?B\<^sub>2 ?B\<^sub>2))
                             (=))))))))))
           (%plus\<^sub>M\<^sub>_\<^sub>1 zero\<^sub>M\<^sub>_\<^sub>1
               minus\<^sub>M\<^sub>_\<^sub>1 uminus\<^sub>M\<^sub>_\<^sub>1
               scale\<^sub>1.
               module_pair_ow (Collect (Domainp ?B\<^sub>1))
                plus\<^sub>M\<^sub>_\<^sub>1 zero\<^sub>M\<^sub>_\<^sub>1
                minus\<^sub>M\<^sub>_\<^sub>1 uminus\<^sub>M\<^sub>_\<^sub>1
                scale\<^sub>1 (Collect (Domainp ?B\<^sub>2)))
           module_pair_with",
     template_implication
      ([template_predicate
         (template_app (template_hole 27, template_var 1)),
        template_predicate
         (template_app (template_hole 26, template_var 1)),
        template_predicate
         (template_app (template_hole 25, template_var 0)),
        template_predicate
         (template_app (template_hole 24, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 23,
                   template_app
                    (template_app (template_hole 22, template_var 1),
                     template_app
                      (template_app (template_hole 21, template_var 1),
                       template_var 1))),
                 template_app
                  (template_app (template_hole 20, template_var 1),
                   template_app
                    (template_app
                      (template_hole 19,
                       template_app
                        (template_app (template_hole 22, template_var 1),
                         template_app
                          (template_app (template_hole 21, template_var 1),
                           template_var 1))),
                     template_app
                      (template_app
                        (template_hole 18,
                         template_app
                          (template_app (template_hole 21, template_var 1),
                           template_var 1)),
                       template_app
                        (template_app
                          (template_hole 17,
                           template_app
                            (template_app
                              (template_hole 16, template_hole 15),
                             template_app
                              (template_app
                                (template_hole 21, template_var 1),
                               template_var 1))),
                         template_app
                          (template_app
                            (template_hole 14,
                             template_app
                              (template_app
                                (template_hole 13, template_var 0),
                               template_app
                                (template_app
                                  (template_hole 12, template_var 0),
                                 template_var 0))),
                           template_app
                            (template_app
                              (template_hole 11, template_var 0),
                             template_app
                              (template_app
                                (template_hole 10,
                                 template_app
                                  (template_app
                                    (template_hole 13, template_var 0),
                                   template_app
                                    (template_app
(template_hole 12, template_var 0),
                                     template_var 0))),
                               template_app
                                (template_app
                                  (template_hole 9,
                                   template_app
                                    (template_app
(template_hole 12, template_var 0),
                                     template_var 0)),
                                 template_app
                                  (template_app
                                    (template_hole 8,
                                     template_app
(template_app (template_hole 7, template_hole 15),
 template_app
  (template_app (template_hole 12, template_var 0), template_var 0))),
                                   template_hole 6)))))))))),
               t_empty),
             template_hole 0)
           ))),
    ("VS_Modules.module_hom_with_transfer",
     "[| bi_unique ?B\<^sub>1; right_total ?B\<^sub>1; bi_unique ?B\<^sub>2;
         right_total ?B\<^sub>2 |]
      ==> rel_fun (rel_fun ?B\<^sub>1 (rel_fun ?B\<^sub>1 ?B\<^sub>1))
           (rel_fun ?B\<^sub>1
             (rel_fun (rel_fun ?B\<^sub>1 (rel_fun ?B\<^sub>1 ?B\<^sub>1))
               (rel_fun (rel_fun ?B\<^sub>1 ?B\<^sub>1)
                 (rel_fun (rel_fun (=) (rel_fun ?B\<^sub>1 ?B\<^sub>1))
                   (rel_fun
                     (rel_fun ?B\<^sub>2 (rel_fun ?B\<^sub>2 ?B\<^sub>2))
                     (rel_fun ?B\<^sub>2
                       (rel_fun
                         (rel_fun ?B\<^sub>2
                           (rel_fun ?B\<^sub>2 ?B\<^sub>2))
                         (rel_fun (rel_fun ?B\<^sub>2 ?B\<^sub>2)
                           (rel_fun
                             (rel_fun (=) (rel_fun ?B\<^sub>2 ?B\<^sub>2))
                             (rel_fun (rel_fun ?B\<^sub>1 ?B\<^sub>2)
                               (=)))))))))))
           (%plus\<^sub>M\<^sub>_\<^sub>1 zero\<^sub>M\<^sub>_\<^sub>1
               minus\<^sub>M\<^sub>_\<^sub>1 uminus\<^sub>M\<^sub>_\<^sub>1
               scale\<^sub>1.
               module_hom_ow (Collect (Domainp ?B\<^sub>1))
                plus\<^sub>M\<^sub>_\<^sub>1 zero\<^sub>M\<^sub>_\<^sub>1
                minus\<^sub>M\<^sub>_\<^sub>1 uminus\<^sub>M\<^sub>_\<^sub>1
                scale\<^sub>1 (Collect (Domainp ?B\<^sub>2)))
           module_hom_with",
     template_implication
      ([template_predicate
         (template_app (template_hole 29, template_var 1)),
        template_predicate
         (template_app (template_hole 28, template_var 1)),
        template_predicate
         (template_app (template_hole 27, template_var 0)),
        template_predicate
         (template_app (template_hole 26, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 25,
                   template_app
                    (template_app (template_hole 24, template_var 1),
                     template_app
                      (template_app (template_hole 23, template_var 1),
                       template_var 1))),
                 template_app
                  (template_app (template_hole 22, template_var 1),
                   template_app
                    (template_app
                      (template_hole 21,
                       template_app
                        (template_app (template_hole 24, template_var 1),
                         template_app
                          (template_app (template_hole 23, template_var 1),
                           template_var 1))),
                     template_app
                      (template_app
                        (template_hole 20,
                         template_app
                          (template_app (template_hole 23, template_var 1),
                           template_var 1)),
                       template_app
                        (template_app
                          (template_hole 19,
                           template_app
                            (template_app
                              (template_hole 18, template_hole 17),
                             template_app
                              (template_app
                                (template_hole 23, template_var 1),
                               template_var 1))),
                         template_app
                          (template_app
                            (template_hole 16,
                             template_app
                              (template_app
                                (template_hole 15, template_var 0),
                               template_app
                                (template_app
                                  (template_hole 14, template_var 0),
                                 template_var 0))),
                           template_app
                            (template_app
                              (template_hole 13, template_var 0),
                             template_app
                              (template_app
                                (template_hole 12,
                                 template_app
                                  (template_app
                                    (template_hole 15, template_var 0),
                                   template_app
                                    (template_app
(template_hole 14, template_var 0),
                                     template_var 0))),
                               template_app
                                (template_app
                                  (template_hole 11,
                                   template_app
                                    (template_app
(template_hole 14, template_var 0),
                                     template_var 0)),
                                 template_app
                                  (template_app
                                    (template_hole 10,
                                     template_app
(template_app (template_hole 9, template_hole 17),
 template_app
  (template_app (template_hole 14, template_var 0), template_var 0))),
                                   template_app
                                    (template_app
(template_hole 8,
 template_app
  (template_app (template_hole 7, template_var 1), template_var 0)),
                                     template_hole 6))))))))))),
               t_empty),
             template_hole 0)
           )))]:
   (string * thm * template) list
### theory "Draft.VS_ModulesTemplates"
### 0.304s elapsed time, 0.405s cpu time, 0.000s GC time
val it = (): unit
