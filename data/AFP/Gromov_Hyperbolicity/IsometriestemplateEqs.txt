   [("Isometries.some_geodesic_same_endpoints", "{?x--?S--?x} = {?x}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_var 1),
       template_app
        (template_app (template_hole 1, template_var 1), template_hole 0))),
    ("Isometries.some_geodesic_commute", "{?x--?S--?y} = {?y--?S--?x}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 2))),
    ("Isometries.geodesic_segment_between_x_x",
     "geodesic_segment_between ?G ?x ?x = (?G = {?x})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_var 0)
            )],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Isometries.closed_segment_as_isometric_image",
     "(%t. ?x + (t / dist ?x ?y) *\<^sub>R (?y - ?x)) ` {0..dist ?x ?y} =
      closed_segment ?x ?y",
     template_equation
      (template_app
        (template_app (template_hole 8, t_empty),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0)))]
