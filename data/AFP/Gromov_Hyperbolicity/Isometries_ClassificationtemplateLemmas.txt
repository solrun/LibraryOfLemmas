   [("Isometries_Classification.stable_translation_length_nonneg",
     "0 <= stable_translation_length ?f",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Isometries_Classification.translation_length_nonneg",
     "0 <= translation_length ?f",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Isometries_Classification.elliptic_isometryD",
     "elliptic_isometry ?f ==> isometry ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Isometries_Classification.loxodromic_isometryD",
     "loxodromic_isometry ?f ==> isometry ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Isometries_Classification.parabolic_isometryD",
     "parabolic_isometry ?f ==> isometry ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Isometries_Classification.translation_length_le",
     "translation_length ?f <= dist ?x (?f ?x)",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 1),
       template_app
        (template_app (template_hole 0, template_var 0),
         template_app (template_var 1, template_var 0)))),
    ("Isometries_Classification.elliptic_imp_not_parabolic_loxodromic",
     "elliptic_isometry ?f ==> ~ loxodromic_isometry ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("Isometries_Classification.elliptic_imp_not_parabolic_loxodromic",
     "elliptic_isometry ?f ==> ~ parabolic_isometry ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("Isometries_Classification.loxodromic_isometryD",
     "loxodromic_isometry ?f ==> ~ elliptic_isometry ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("Isometries_Classification.loxodromic_imp_not_elliptic_parabolic",
     "loxodromic_isometry ?f ==> ~ parabolic_isometry ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("Isometries_Classification.parabolic_isometryD",
     "parabolic_isometry ?f ==> ~ elliptic_isometry ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("Isometries_Classification.parabolic_imp_not_elliptic_loxodromic",
     "parabolic_isometry ?f ==> ~ loxodromic_isometry ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("Isometries_Classification.elliptic_isometry_stable_translation_length",
     "elliptic_isometry ?f ==> stable_translation_length ?f = 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Isometries_Classification.elliptic_isometry_inv",
     "elliptic_isometry ?f ==> elliptic_isometry (inv ?f)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Isometries_Classification.loxodromic_isometry_inv",
     "loxodromic_isometry ?f ==> loxodromic_isometry (inv ?f)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Isometries_Classification.loxodromic_isometryD",
     "loxodromic_isometry ?f ==> 0 < stable_translation_length ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Isometries_Classification.loxodromic_attracting_fixed_point",
     "loxodromic_isometry ?f ==>
      attracting_fixed_point ?f : Gromov_boundary",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("Isometries_Classification.loxodromic_repelling_fixed_point",
     "loxodromic_isometry ?f ==>
      repelling_fixed_point ?f : Gromov_boundary",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("Isometries_Classification.parabolic_isometryD",
     "parabolic_isometry ?f ==> stable_translation_length ?f = 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Isometries_Classification.parabolic_isometry_inv",
     "parabolic_isometry ?f ==> parabolic_isometry (inv ?f)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Isometries_Classification.parabolic_fixed_point",
     "parabolic_isometry ?f ==> neutral_fixed_point ?f : Gromov_boundary",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("Isometries_Classification.tree_no_parabolic_isometry",
     "isometry ?f ==> elliptic_isometry ?f | loxodromic_isometry ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Isometries_Classification.stable_translation_length_le_translation_length",
     "real ?n * stable_translation_length ?f
      <= translation_length (?f ^^ ?n)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Isometries_Classification.attracting_fixed_point_neq_repelling_fixed_point",
     "loxodromic_isometry ?f ==>
      attracting_fixed_point ?f ~= repelling_fixed_point ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Isometries_Classification.loxodromic_repelling_fixed_point",
     "loxodromic_isometry ?f ==>
      0 < additive_strength ?f (repelling_fixed_point ?f)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_than, template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 0))))),
    ("Isometries_Classification.loxodromic_attracting_fixed_point",
     "loxodromic_isometry ?f ==>
      additive_strength ?f (attracting_fixed_point ?f) < 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Isometries_Classification.parabolic_fixed_point",
     "parabolic_isometry ?f ==>
      additive_strength ?f (neutral_fixed_point ?f) = 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Isometries_Classification.stable_translation_length_inv",
     "isometry ?f ==>
      stable_translation_length (inv ?f) = stable_translation_length ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)),
         template_app (template_hole 2, template_var 0)))),
    ("Isometries_Classification.loxodromic_attracting_fixed_point",
     "loxodromic_isometry ?f ==>
      Gromov_extension ?f (attracting_fixed_point ?f) =
      attracting_fixed_point ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Isometries_Classification.loxodromic_repelling_fixed_point",
     "loxodromic_isometry ?f ==>
      Gromov_extension ?f (repelling_fixed_point ?f) =
      repelling_fixed_point ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Isometries_Classification.parabolic_fixed_point",
     "parabolic_isometry ?f ==>
      Gromov_extension ?f (neutral_fixed_point ?f) =
      neutral_fixed_point ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Isometries_Classification.elliptic_or_parabolic_or_loxodromic",
     "isometry ?f ==>
      elliptic_isometry ?f |
      parabolic_isometry ?f | loxodromic_isometry ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 1, template_var 0)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Isometries_Classification.semicontraction_iterates",
     "1-lipschitz_on UNIV ?f ==> 1-lipschitz_on UNIV (?f ^^ ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_hole 2),
                template_hole 1),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Isometries_Classification.isometry_with_fixed_point_is_elliptic",
     "[| isometry ?f; ?f ?x = ?x |] ==> elliptic_isometry ?f",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_equation
         (template_app (template_var 1, template_var 0), template_var 0)],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Isometries_Classification.elliptic_isometry_inv_iff",
     "bij ?f ==> elliptic_isometry (inv ?f) = elliptic_isometry ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 0),
                template_hole 3),
              template_hole 3)
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_hole 3),
             template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Isometries_Classification.loxodromic_isometryI",
     "[| isometry ?f; stable_translation_length ?f ~= 0 |]
      ==> loxodromic_isometry ?f",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 0)),
        template_negation
         (
            template_equation
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Isometries_Classification.parabolic_unique_fixed_point",
     "parabolic_isometry ?f ==>
      (Gromov_extension ?f ?xi = ?xi) = (?xi = neutral_fixed_point ?f)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_var 0),
         template_equation
          (template_var 0,
           template_app (template_hole 0, template_var 1))))),
    ("Isometries_Classification.elliptic_isometryD",
     "elliptic_isometry ?f ==> bounded {(?f ^^ n) ?x |n. True}",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 6, template_app (template_hole 5, t_empty))
           ))),
    ("Isometries_Classification.loxodromic_isometryD",
     "loxodromic_isometry ?f ==> ~ bounded {(?f ^^ n) ?x |n. True}",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 6, template_app (template_hole 5, t_empty))
               )
           ))),
    ("Isometries_Classification.parabolic_isometryD",
     "parabolic_isometry ?f ==> ~ bounded {(?f ^^ n) ?x |n. True}",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 6, template_app (template_hole 5, t_empty))
               )
           ))),
    ("Isometries_Classification.stable_translation_length_eq_additive_strength",
     "[| isometry ?f; Gromov_extension ?f ?xi = ?xi |]
      ==> stable_translation_length ?f =
          \<bar>additive_strength ?f ?xi\<bar>",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 1), template_var 0),
          template_var 0)],
       template_equation
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Isometries_Classification.loxodromic_unique_fixed_points",
     "loxodromic_isometry ?f ==>
      (Gromov_extension ?f ?xi = ?xi) =
      (?xi = attracting_fixed_point ?f | ?xi = repelling_fixed_point ?f)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0),
           template_var 0),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_app (template_hole 1, template_var 1))),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app (template_hole 0, template_var 1)))
             )))),
    ("Isometries_Classification.stable_translation_length_as_limit",
     "1-lipschitz_on UNIV ?f ==>
      (%n. translation_length (?f ^^ n) / real n)
      \<longlonglongrightarrow> stable_translation_length ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_hole 9),
                template_hole 8),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, t_empty),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0))),
             template_hole 0)
           ))),
    ("Isometries_Classification.stable_translation_length_as_pointwise_limit",
     "1-lipschitz_on UNIV ?f ==>
      (%n. dist ?x ((?f ^^ n) ?x) / real n)
      \<longlonglongrightarrow> stable_translation_length ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_hole 9),
                template_hole 8),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, t_empty),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1))),
             template_hole 0)
           ))),
    ("Isometries_Classification.additive_strength_inv",
     "[| isometry ?f; Gromov_extension ?f ?xi = ?xi |]
      ==> additive_strength (inv ?f) ?xi = - additive_strength ?f ?xi",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 1), template_var 0),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1)),
           template_var 0),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))))),
    ("Isometries_Classification.elliptic_isometryI",
     "[| bounded {(?f ^^ n) ?x |n. True}; isometry ?f |]
      ==> elliptic_isometry ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8, template_app (template_hole 7, t_empty))
            ),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Isometries_Classification.loxodromic_attracting_fixed_point_attracts",
     "[| loxodromic_isometry ?f; ?xi ~= repelling_fixed_point ?f |]
      ==> (%n. (Gromov_extension ?f ^^ n) ?xi)
          \<longlonglongrightarrow> attracting_fixed_point ?f",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app (template_hole 6, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1))),
             template_hole 0)
           ))),
    ("Isometries_Classification.isometry_not_elliptic_has_repelling_fixed_point",
     "[| isometry ?f; ~ elliptic_isometry ?f |]
      ==> EX xi:Gromov_boundary.
             Gromov_extension ?f xi = xi & 0 <= additive_strength ?f xi",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 8, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_hole 6), t_empty)
           ))),
    ("Isometries_Classification.isometry_not_elliptic_has_attracting_fixed_point",
     "[| isometry ?f; ~ elliptic_isometry ?f |]
      ==> EX xi:Gromov_boundary.
             Gromov_extension ?f xi = xi & additive_strength ?f xi <= 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 8, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_hole 6), t_empty)
           ))),
    ("Isometries_Classification.stable_translation_length_eq_additive_strength_aux",
     "[| isometry ?f; Gromov_extension ?f ?xi = ?xi;
         0 <= additive_strength ?f ?xi |]
      ==> stable_translation_length ?f = additive_strength ?f ?xi",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 1), template_var 0),
          template_var 0),
        template_inequation
         (less_equals, template_hole 3,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Isometries_Classification.additive_strength_as_limit",
     "[| isometry ?f; Gromov_extension ?f ?xi = ?xi |]
      ==> (%n. Busemann_function_at ?xi ((?f ^^ n) ?x) ?x / real n)
          \<longlonglongrightarrow> additive_strength ?f ?xi",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 8, template_var 2), template_var 1),
          template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, t_empty),
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1))),
             template_hole 0)
           ))),
    ("Isometries_Classification.parabolic_isometryI",
     "[| isometry ?f; ~ bounded {(?f ^^ n) ?x |n. True};
         stable_translation_length ?f = 0 |]
      ==> parabolic_isometry ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 10, template_app (template_hole 9, t_empty))
                )
            ),
        template_equation
         (template_app (template_hole 2, template_var 1), template_hole 1)],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Isometries_Classification.high_scores",
     "~ bdd_above (range ?u) ==>
      EX n. (ALL l<=n. ?u l <= ?u n) & ?C <= ?u n & ?i <= n",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 2),
                    template_hole 6))
                )
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Isometries_Classification.Busemann_function_eq_additive_strength",
     "[| isometry ?f; Gromov_extension ?f ?xi = ?xi |]
      ==> \<bar>Busemann_function_at ?xi ((?f ^^ ?n) ?x) ?x -
                real ?n * additive_strength ?f ?xi\<bar>
          <= 2 * deltaG TYPE(?'a)",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 13, template_var 3),
            template_var 2),
          template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_app (template_hole 9, template_var 2),
                   template_app
                    (template_app
                      (template_app (template_hole 8, template_var 1),
                       template_var 3),
                     template_var 0)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 1)),
               template_app
                (template_app (template_hole 5, template_var 3),
                 template_var 2)))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2))),
           template_app (template_hole 1, template_hole 0))))),
    ("Isometries_Classification.loxodromic_attracting_fixed_point_attracts_uniformly",
     "loxodromic_isometry ?f ==>
      EX N. ALL n>=N.
               ALL x.
                  extended_Gromov_product_at basepoint x
                   (repelling_fixed_point ?f)
                  <= ereal ?K -->
                  ereal ?M
                  <= extended_Gromov_product_at basepoint
                      ((Gromov_extension ?f ^^ n) x)
                      (attracting_fixed_point ?f)",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 2))],
       template_predicate (template_app (template_hole 12, t_empty)))),
    ("Isometries_Classification.parabolic_logarithmic_growth",
     "[| parabolic_isometry ?f; 1 <= ?n |]
      ==> dist ?x ((?f ^^ ?n) ?x)
          <= dist ?x (?f ?x) +
             real_of_int (\<lceil>log 2 (real ?n)\<rceil> * 16) *
             deltaG TYPE(?'a)",
     template_implication
      ([template_predicate
         (template_app (template_hole 18, template_var 2)),
        template_inequation
         (less_equals, template_hole 16, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 14, template_var 0),
           template_app
            (template_app
              (template_app (template_hole 13, template_var 1),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app (template_hole 14, template_var 0),
               template_app (template_var 2, template_var 0))),
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_hole 8,
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 5, template_hole 4))),
                         template_app (template_hole 3, template_var 1)))),
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 5, template_hole 4)))))))),
             template_app (template_hole 1, template_hole 0)))))),
    ("Isometries_Classification.dist_le_additive_strength",
     "[| isometry ?f; Gromov_extension ?f ?xi = ?xi;
         0 <= additive_strength ?f ?xi; 1 <= ?n |]
      ==> dist ?x ((?f ^^ ?n) ?x)
          <= dist ?x (?f ?x) + real ?n * additive_strength ?f ?xi +
             real_of_int (\<lceil>log 2 (real ?n)\<rceil> * 16) *
             deltaG TYPE(?'a)",
     template_implication
      ([template_predicate
         (template_app (template_hole 22, template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 20, template_var 3),
            template_var 2),
          template_var 2),
        template_inequation
         (less_equals, template_hole 18,
          template_app
           (template_app (template_hole 17, template_var 3),
            template_var 2)),
        template_inequation
         (less_equals, template_hole 15, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 14, template_var 0),
           template_app
            (template_app
              (template_app (template_hole 13, template_var 1),
               template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 14, template_var 0),
                   template_app (template_var 3, template_var 0))),
               template_app
                (template_app
                  (template_hole 11,
                   template_app (template_hole 10, template_var 1)),
                 template_app
                  (template_app (template_hole 17, template_var 3),
                   template_var 2)))),
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app
                            (template_hole 5,
                             template_app
                              (template_hole 4, template_hole 3))),
                         template_app (template_hole 10, template_var 1)))),
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 4,
                         template_app
                          (template_hole 4,
                           template_app
                            (template_hole 4, template_hole 3)))))))),
             template_app (template_hole 1, template_hole 0))))))]
