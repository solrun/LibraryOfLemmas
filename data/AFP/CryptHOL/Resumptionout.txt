Loading theory "Draft.Partial_Function_Set" (required by "Draft.ResumptionTemplates" via "Draft.Resumption")
Loading theory "Draft.Misc_CryptHOL" (required by "Draft.ResumptionTemplates" via "Draft.Resumption")
Loading theory "Draft.Templates" (required by "Draft.ResumptionTemplates" via "Draft.ExtrEqs")
Loading theory "HOL-Library.BigO" (required by "Draft.ResumptionTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.101s elapsed time, 0.432s cpu time, 0.000s GC time
### theory "Draft.Partial_Function_Set"
### 0.260s elapsed time, 0.889s cpu time, 0.043s GC time
### theory "HOL-Library.BigO"
### 0.665s elapsed time, 1.702s cpu time, 0.078s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.ResumptionTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.493s elapsed time, 1.014s cpu time, 0.081s GC time
Proofs for inductive predicate(s) "Imagep"
  Proving monotonicity ...
specification
  relcompp_witness1: (?A OO ?B) (fst ?xy) (snd ?xy) ==> ?A (fst ?xy) (relcompp_witness ?A ?B ?xy)
  relcompp_witness2: (?A OO ?B) (fst ?xy) (snd ?xy) ==> ?B (relcompp_witness ?A ?B ?xy) (snd ?xy)
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
consts
  assert_option :: "bool => unit option"
consts
  sup_option :: "'a option => 'a option => 'a option"
consts
  enforce_option :: "('a => bool) => 'a option => 'a option"
### Ignoring duplicate rewrite rule:
### real ?n1 <= 1 == ?n1 <= 1
Proofs for inductive predicate(s) "finite_chains"
  Proving monotonicity ...
locale partial_function_definitions
  fixes leq :: "'a => 'a => bool"
    and lub :: "'a set => 'a"
  assumes "partial_function_definitions leq lub"
Proofs for inductive predicate(s) "nlistsp"
  Proving monotonicity ...
consts
  sprefix :: "'a list => 'a stream => bool"
locale monad_fail_hom
  fixes return1 :: "'a => 'm1"
    and bind1 :: "'m1 => ('a => 'm1) => 'm1"
    and fail1 :: "'m1"
    and return2 :: "'a => 'm2"
    and bind2 :: "'m2 => ('a => 'm2) => 'm2"
    and fail2 :: "'m2"
    and h :: "'m1 => 'm2"
  assumes "monad_fail_hom return1 bind1 fail1 return2 bind2 fail2 h"
specification
  set_rel_witness_pmf': rel_pmf ?A (fst ?xy) (snd ?xy) ==>
set_pmf (rel_witness_pmf ?A ?xy) <= {(a, b). ?A a b}
  map1_rel_witness_pmf': rel_pmf ?A (fst ?xy) (snd ?xy) ==>
map_pmf fst (rel_witness_pmf ?A ?xy) = fst ?xy
  map2_rel_witness_pmf': rel_pmf ?A (fst ?xy) (snd ?xy) ==>
map_pmf snd (rel_witness_pmf ?A ?xy) = snd ?xy
locale option_to_spmf
locale option_le_spmf
### theory "Draft.Misc_CryptHOL"
### 4.609s elapsed time, 6.541s cpu time, 0.857s GC time
Loading theory "Draft.Resumption" (required by "Draft.ResumptionTemplates")
consts
  bind_resumption ::
    "('a, 'out, 'in) Resumption.resumption
     => ('a => ('b, 'out, 'in) Resumption.resumption)
        => ('b, 'out, 'in) Resumption.resumption"
consts
  ensure :: "bool => (unit, 'out, 'in) Resumption.resumption"
Proofs for coinductive predicate(s) "resumption_ord"
  Proving monotonicity ...
consts
  resumption_lub ::
    "('a, 'out, 'in) Resumption.resumption set
     => ('a, 'out, 'in) Resumption.resumption"
### Cannot skip proof of schematic goal statement
### theory "Draft.Resumption"
### 1.661s elapsed time, 2.123s cpu time, 0.665s GC time
Loading theory "Draft.ResumptionTemplates"
val templateLemmas =
   [("Resumption.is_Done_DONE", "Resumption.resumption.is_Done (DONE ?a)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Resumption.resumption_ord_ABORT", "resumption_ord ABORT ?r",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Resumption.resumption_ord_refl", "resumption_ord ?r ?r",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Resumption.DONE_neq_ABORT", "DONE ?a ~= ABORT",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Resumption.ABORT_neq_DONE", "ABORT ~= DONE ?a",
     template_negation
      (
         template_equation
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Resumption.outputs_DONE", "outputs (DONE ?x) = {}",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Resumption.bind_DONE", "?x >>= DONE = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Resumption.ABORT_bind", "ABORT >>= ?f = ABORT",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Resumption.ABORT_neq_Pause",
     "ABORT ~= Resumption.resumption.Pause ?out ?c",
     template_negation
      (
         template_equation
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Resumption.Pause_neq_ABORT",
     "Resumption.resumption.Pause ?out ?c ~= ABORT",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_hole 0)
         )),
    ("Resumption.resume_ABORT",
     "Resumption.resumption.resume (Resumption.resumption.Done ?r) =
      (%inp. ABORT)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       t_empty)),
    ("Resumption.result_DONE",
     "Resumption.resumption.result (DONE ?a) = Some ?a",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Resumption.DONE_neq_Pause",
     "DONE ?a ~= Resumption.resumption.Pause ?out ?c",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Resumption.Pause_neq_DONE",
     "Resumption.resumption.Pause ?out ?c ~= DONE ?a",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Resumption.results_DONE", "results (DONE ?x) = {?x}",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Resumption.resumption_ord_ABORT2",
     "resumption_ord ?r ABORT = (?r = ABORT)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("Resumption.DONE_bind", "DONE ?a >>= ?f = ?f ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app (template_var 0, template_var 1))),
    ("Resumption.ABORT_eq_Done",
     "(ABORT = Resumption.resumption.Done ?a) = (?a = None)",
     template_bimplication
      (template_equation
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_equation (template_var 0, template_hole 0))),
    ("Resumption.Done_eq_ABORT",
     "(Resumption.resumption.Done ?a = ABORT) = (?a = None)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Resumption.is_Done_map_resumption",
     "Resumption.resumption.is_Done
       (Resumption.resumption.map_resumption ?f1.0 ?f2.0 ?r) =
      Resumption.resumption.is_Done ?r",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Resumption.is_Done_resumption_lub",
     "Resumption.resumption.is_Done (resumption_lub ?R) =
      (ALL r:?R. Resumption.resumption.is_Done r)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Resumption.resumption_ord_DONE1",
     "resumption_ord (DONE ?x) ?r = (?r = DONE ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_var 0, template_app (template_hole 1, template_var 1)))),
    ("Resumption.DONE_inject", "(DONE ?a = DONE ?b) = (?a = ?b)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Resumption.DONE_eq_Done",
     "(DONE ?a = Resumption.resumption.Done ?b) = (?b = Some ?a)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_equation
        (template_var 0, template_app (template_hole 0, template_var 1)))),
    ("Resumption.Done_eq_DONE",
     "(Resumption.resumption.Done ?b = DONE ?a) = (?b = Some ?a)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Resumption.resumption_ord_is_DoneD",
     "[| resumption_ord ?r ?r'; Resumption.resumption.is_Done ?r' |]
      ==> Resumption.resumption.is_Done ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Resumption.Done_bind",
     "Resumption.resumption.Done ?a >>= ?f =
      (case ?a of None => Resumption.resumption.Done None
       | Some a => ?f a)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)),
           t_empty),
         template_var 1))),
    ("Resumption.rel_resumption_is_DoneD",
     "Resumption.resumption.rel_resumption ?A ?B ?r1.0 ?r2.0 ==>
      Resumption.resumption.is_Done ?r1.0 =
      Resumption.resumption.is_Done ?r2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Resumption.bi_total_rel_resumption",
     "[| bi_total ?A; bi_total ?B |]
      ==> bi_total (Resumption.resumption.rel_resumption ?A ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Resumption.bi_unique_rel_resumption",
     "[| bi_unique ?A; bi_unique ?B |]
      ==> bi_unique (Resumption.resumption.rel_resumption ?A ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Resumption.left_total_rel_resumption",
     "[| left_total ?R1.0; left_total ?R2.0 |]
      ==> left_total (Resumption.resumption.rel_resumption ?R1.0 ?R2.0)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Resumption.left_unique_rel_resumption",
     "[| left_unique ?R1.0; left_unique ?R2.0 |]
      ==> left_unique (Resumption.resumption.rel_resumption ?R1.0 ?R2.0)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Resumption.right_total_rel_resumption",
     "[| right_total ?R1.0; right_total ?R2.0 |]
      ==> right_total (Resumption.resumption.rel_resumption ?R1.0 ?R2.0)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Resumption.right_unique_rel_resumption",
     "[| right_unique ?R1.0; right_unique ?R2.0 |]
      ==> right_unique (Resumption.resumption.rel_resumption ?R1.0 ?R2.0)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Resumption.results_bind_resumption",
     "results (?x >>= ?f) = (UN a:results ?x. results (?f a))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 1))))),
    ("Resumption.not_is_Done_conv_Pause",
     "(~ Resumption.resumption.is_Done ?r) =
      (EX out c. ?r = Resumption.resumption.Pause out c)",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Resumption.bind_resumption_Pause",
     "Resumption.resumption.Pause ?out ?cont >>= ?f =
      Resumption.resumption.Pause ?out (%inp. ?cont inp >>= ?f)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Resumption.bind_bind_resumption",
     "?r >>= ?f >>= ?g = ?r >>= (%x. ?f x >>= ?g)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Resumption.resumption_ord_antisym",
     "[| resumption_ord ?r ?r'; resumption_ord ?r' ?r |] ==> ?r = ?r'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Resumption.resumption_ord_trans",
     "[| resumption_ord ?r ?r'; resumption_ord ?r' ?r'' |]
      ==> resumption_ord ?r ?r''",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Resumption.result_map_resumption",
     "Resumption.resumption.is_Done ?r ==>
      Resumption.resumption.result
       (Resumption.resumption.map_resumption ?f1.0 ?f2.0 ?r) =
      map_option ?f1.0 (Resumption.resumption.result ?r)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 2))))),
    ("Resumption.output_map_resumption",
     "~ Resumption.resumption.is_Done ?r ==>
      Resumption.resumption.output
       (Resumption.resumption.map_resumption ?f1.0 ?f2.0 ?r) =
      ?f2.0 (Resumption.resumption.output ?r)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_var 2)),
         template_app
          (template_var 0,
           template_app (template_hole 0, template_var 2))))),
    ("Resumption.rel_resumption_OO",
     "Resumption.resumption.rel_resumption ?A ?B OO
      Resumption.resumption.rel_resumption ?C ?D =
      Resumption.resumption.rel_resumption (?A OO ?C) (?B OO ?D)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Resumption.mono2mono_results",
     "monotone ?orda resumption_ord ?t ==>
      monotone ?orda (<=) (%x. results (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_hole 3),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1),
             t_empty)
           ))),
    ("Resumption.mono2mono_outputs",
     "monotone ?orda resumption_ord ?t ==>
      monotone ?orda (<=) (%x. outputs (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_hole 3),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1),
             t_empty)
           ))),
    ("Resumption.resumption_ord_resultD",
     "[| resumption_ord ?r ?r'; Resumption.resumption.is_Done ?r' |]
      ==> option_ord (Resumption.resumption.result ?r)
           (Resumption.resumption.result ?r')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Resumption.resumption_ord_outputD",
     "[| resumption_ord ?r ?r'; ~ Resumption.resumption.is_Done ?r |]
      ==> Resumption.resumption.output ?r =
          Resumption.resumption.output ?r'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 1))
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Resumption.pred_resumption_antimono",
     "[| Resumption.resumption.pred_resumption ?A ?C ?r';
         resumption_ord ?r ?r' |]
      ==> Resumption.resumption.pred_resumption ?A ?C ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Resumption.outputs_bind_resumption",
     "outputs (?r >>= ?f) =
      outputs ?r Un (UN x:results ?r. outputs (?f x))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty),
             template_app (template_hole 0, template_var 1)))))),
    ("Resumption.resumption_ord_simps",
     "resumption_ord ?r (Resumption.resumption.Done ?a) =
      (EX a. ?r = Resumption.resumption.Done a & option_ord a ?a)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1),
         template_app (template_hole 5, template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Resumption.mono_resumption_resume",
     "mono_resumption ?B ==>
      mono_resumption (%f. Resumption.resumption.resume (?B f) ?inp)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_hole 2)),
                template_hole 1),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)),
               template_hole 1),
             t_empty)
           ))),
    ("Resumption.result_resumption_lub",
     "ALL r:?R. Resumption.resumption.is_Done r ==>
      Resumption.resumption.result (resumption_lub ?R) =
      flat_lub None (Resumption.resumption.result ` ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0), t_empty)
            )],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_hole 4),
             template_var 0))))),
    ("Resumption.resume_map_resumption",
     "~ Resumption.resumption.is_Done ?r ==>
      Resumption.resumption.resume
       (Resumption.resumption.map_resumption ?f1.0 ?f2.0 ?r) =
      Resumption.resumption.map_resumption ?f1.0 ?f2.0 o
      Resumption.resumption.resume ?r",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 2))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 2))))),
    ("Resumption.result_bind_resumption",
     "Resumption.resumption.is_Done (?x >>= ?f) ==>
      Resumption.resumption.result (?x >>= ?f) =
      Resumption.resumption.result ?x >>=
      Resumption.resumption.result o ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app
            (template_app (template_hole 0, template_hole 3),
             template_var 0))))),
    ("Resumption.resumption_ord_resumeD",
     "[| resumption_ord ?r ?r'; ~ Resumption.resumption.is_Done ?r |]
      ==> rel_fun (=) resumption_ord (Resumption.resumption.resume ?r)
           (Resumption.resumption.resume ?r')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_hole 5),
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Resumption.rel_resumption_resultD1",
     "[| Resumption.resumption.rel_resumption ?A ?B ?r1.0 ?r2.0;
         Resumption.resumption.is_Done ?r1.0 |]
      ==> rel_option ?A (Resumption.resumption.result ?r1.0)
           (Resumption.resumption.result ?r2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Resumption.rel_resumption_resultD2",
     "[| Resumption.resumption.rel_resumption ?A ?B ?r1.0 ?r2.0;
         Resumption.resumption.is_Done ?r2.0 |]
      ==> rel_option ?A (Resumption.resumption.result ?r1.0)
           (Resumption.resumption.result ?r2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Resumption.rel_resumption_outputD1",
     "[| Resumption.resumption.rel_resumption ?A ?B ?r1.0 ?r2.0;
         ~ Resumption.resumption.is_Done ?r1.0 |]
      ==> ?B (Resumption.resumption.output ?r1.0)
           (Resumption.resumption.output ?r2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_var 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Resumption.rel_resumption_outputD2",
     "[| Resumption.resumption.rel_resumption ?A ?B ?r1.0 ?r2.0;
         ~ Resumption.resumption.is_Done ?r2.0 |]
      ==> ?B (Resumption.resumption.output ?r1.0)
           (Resumption.resumption.output ?r2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_var 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Resumption.bind_resumption_is_Done",
     "Resumption.resumption.is_Done ?f ==>
      ?f >>= ?g =
      (if Resumption.resumption.result ?f = None then ABORT
       else ?g (the (Resumption.resumption.result ?f)))",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_var 1)),
                     template_hole 2)),
                 template_hole 1),
               template_app
                (template_var 0,
                 template_app
                  (template_hole 0,
                   template_app (template_hole 3, template_var 1))))
             )))),
    ("Resumption.resumption_ord_abort",
     "[| resumption_ord ?r ?r'; Resumption.resumption.is_Done ?r;
         ~ Resumption.resumption.is_Done ?r' |]
      ==> Resumption.resumption.result ?r = None",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app (template_hole 1, template_var 1), template_hole 0))),
    ("Resumption.results_mono",
     "set.mono_body
       (%f. case ?x of Resumption.resumption.Done x => set_option x
            | Resumption.resumption.Pause out c => UN input. f (c input))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_hole 5)),
             template_hole 5),
           t_empty)
         )),
    ("Resumption.is_Done_bind_resumption",
     "Resumption.resumption.is_Done (?x >>= ?f) =
      (Resumption.resumption.is_Done ?x &
       (Resumption.resumption.result ?x ~= None -->
        Resumption.resumption.is_Done
         (?f (the (Resumption.resumption.result ?x)))))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 1)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 1)),
                     template_hole 1))),
               template_app
                (template_hole 9,
                 template_app
                  (template_var 0,
                   template_app
                    (template_hole 0,
                     template_app (template_hole 2, template_var 1))))))
           ))),
    ("Resumption.resumption_ord_simps",
     "resumption_ord (Resumption.resumption.Pause ?out ?c) ?r =
      (EX c'.
          ?r = Resumption.resumption.Pause ?out c' &
          rel_fun (=) resumption_ord ?c c')",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Resumption.mcont2mcont_results",
     "mcont ?lub ?ord resumption_lub resumption_ord ?t ==>
      mcont ?lub ?ord \<Union> (<=) (%x. results (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 2),
                    template_var 1),
                  template_hole 5),
                template_hole 4),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 1),
                 template_hole 2),
               template_hole 1),
             t_empty)
           ))),
    ("Resumption.mcont2mcont_outputs",
     "mcont ?lub ?ord resumption_lub resumption_ord ?t ==>
      mcont ?lub ?ord \<Union> (<=) (%x. outputs (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 2),
                    template_var 1),
                  template_hole 5),
                template_hole 4),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 1),
                 template_hole 2),
               template_hole 1),
             t_empty)
           ))),
    ("Resumption.outputs_mono",
     "set.mono_body
       (%f. case ?x of Resumption.resumption.Done x => {}
            | Resumption.resumption.Pause out c =>
                insert out (UN input. f (c input)))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app (template_hole 7, template_hole 6)),
             template_hole 6),
           t_empty)
         )),
    ("Resumption.resumption_ord_chain_resume",
     "Complete_Partial_Order.chain resumption_ord ?R ==>
      Complete_Partial_Order.chain resumption_ord
       ((%c. c ?inp) `
        Resumption.resumption.resume `
        (?R Int {r. ~ Resumption.resumption.is_Done r}))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_hole 7),
             template_app
              (template_app (template_hole 6, t_empty),
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_app (template_hole 2, t_empty)))))
           ))),
    ("Resumption.rel_resumption_resumeD1",
     "[| Resumption.resumption.rel_resumption ?A ?B ?r1.0 ?r2.0;
         ~ Resumption.resumption.is_Done ?r1.0 |]
      ==> Resumption.resumption.rel_resumption ?A ?B
           (Resumption.resumption.resume ?r1.0 ?inp)
           (Resumption.resumption.resume ?r2.0 ?inp)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 4),
                 template_var 3),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Resumption.rel_resumption_resumeD2",
     "[| Resumption.resumption.rel_resumption ?A ?B ?r1.0 ?r2.0;
         ~ Resumption.resumption.is_Done ?r2.0 |]
      ==> Resumption.resumption.rel_resumption ?A ?B
           (Resumption.resumption.resume ?r1.0 ?inp)
           (Resumption.resumption.resume ?r2.0 ?inp)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 4),
                 template_var 3),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Resumption.output_bind_resumption",
     "~ Resumption.resumption.is_Done (?x >>= ?f) ==>
      Resumption.resumption.output (?x >>= ?f) =
      (if Resumption.resumption.is_Done ?x
       then Resumption.resumption.output
             (?f (the (Resumption.resumption.result ?x)))
       else Resumption.resumption.output ?x)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 1),
                    template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 7, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_app
              (template_hole 5,
               template_app
                (template_var 0,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1))))),
           template_app (template_hole 0, template_var 1))))),
    ("Resumption.is_Done_cases",
     "[| Resumption.resumption.is_Done ?r; !!x. ?r = DONE x ==> ?thesis;
         ?r = ABORT ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_implication
         ([template_equation (template_var 1, template_hole 0)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Resumption.output_resumption_lub",
     "EX r:?R. ~ Resumption.resumption.is_Done r ==>
      Resumption.resumption.output (resumption_lub ?R) =
      (THE out.
          out
          : Resumption.resumption.output `
            (?R Int {r. ~ Resumption.resumption.is_Done r}))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0), t_empty)
            )],
       template_equation
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_app (template_hole 4, t_empty)))),
    ("Resumption.resume_bind_resumption",
     "~ Resumption.resumption.is_Done (?x >>= ?f) ==>
      Resumption.resumption.resume (?x >>= ?f) =
      (if Resumption.resumption.is_Done ?x
       then Resumption.resumption.resume
             (?f (the (Resumption.resumption.result ?x)))
       else (%inp. Resumption.resumption.resume ?x inp >>= ?f))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 1),
                    template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 7, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_app
              (template_hole 5,
               template_app
                (template_var 0,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1))))),
           t_empty)))),
    ("Resumption.bind_resumption_eq_Done_iff",
     "(?f >>= ?g = Resumption.resumption.Done ?x) =
      ((EX y. ?f = DONE y & ?g y = Resumption.resumption.Done ?x) |
       ?f = ABORT & ?x = None)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 9, template_var 2), template_var 1),
         template_app (template_hole 8, template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7, template_app (template_hole 6, t_empty)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_hole 2)),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("Resumption.resume_resumption_lub",
     "EX r:?R. ~ Resumption.resumption.is_Done r ==>
      Resumption.resumption.resume (resumption_lub ?R) ?inp =
      resumption_lub
       ((%c. c ?inp) `
        Resumption.resumption.resume `
        (?R Int {r. ~ Resumption.resumption.is_Done r}))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1), t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 1)),
           template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app (template_hole 2, template_hole 5),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 0, t_empty)))))))),
    ("Resumption.bind_resumption_cong",
     "[| ?x = ?y; !!z. z : results ?y ==> ?f z = ?g z |]
      ==> ?x >>= ?f = ?y >>= ?g",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Resumption.Quotient_resumption",
     "[| Quotient ?R1.0 ?Abs1.0 ?Rep1.0 ?T1.0;
         Quotient ?R2.0 ?Abs2.0 ?Rep2.0 ?T2.0 |]
      ==> Quotient (Resumption.resumption.rel_resumption ?R1.0 ?R2.0)
           (Resumption.resumption.map_resumption ?Abs1.0 ?Abs2.0)
           (Resumption.resumption.map_resumption ?Rep1.0 ?Rep2.0)
           (Resumption.resumption.rel_resumption ?T1.0 ?T2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 7),
                     template_var 3)),
                 template_app
                  (template_app (template_hole 2, template_var 6),
                   template_var 2)),
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0))
           ))),
    ("Resumption.bind_resumption_mono",
     "[| mono_resumption ?B; !!y. mono_resumption (?C y) |]
      ==> mono_resumption (%f. ?B f >>= (%y. ?C y f))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_hole 5)),
                template_hole 4),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 6, template_hole 5)),
               template_hole 1),
             t_empty)
           ))),
    ("Resumption.mcont_case_resumption",
     "[| mcont (flat_lub None) option_ord ?lub ?ord ?f;
         !!out.
            mcont resumption.lub_fun resumption.le_fun ?lub ?ord
             (%c. ?g out c (Resumption.resumption.Pause out c));
         class.ccpo ?lub ?ord (mk_less ?ord); !!x. ?ord (?f None) x |]
      ==> mcont resumption_lub resumption_ord ?lub ?ord
           (%r. case r of Resumption.resumption.Done x => ?f x
                | Resumption.resumption.Pause out c => ?g out c r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_hole 15,
                      template_app (template_hole 14, template_hole 13)),
                    template_app (template_hole 12, template_hole 13)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_hole 8),
                   template_hole 6),
                 template_var 3),
               template_var 2),
             t_empty)
           ))),
    ("Resumption.rel_resumption_coinduct",
     "[| ?X ?r1.0 ?r2.0;
         !!r1 r2.
            ?X r1 r2 ==>
            Resumption.resumption.is_Done r1 =
            Resumption.resumption.is_Done r2 &
            (Resumption.resumption.is_Done r1 -->
             Resumption.resumption.is_Done r2 -->
             rel_option ?A (Resumption.resumption.result r1)
              (Resumption.resumption.result r2));
         !!r1 r2.
            [| ?X r1 r2; ~ Resumption.resumption.is_Done r1;
               ~ Resumption.resumption.is_Done r2 |]
            ==> ?B (Resumption.resumption.output r1)
                 (Resumption.resumption.output r2) &
                (ALL inp.
                    ?X (Resumption.resumption.resume r1 inp)
                     (Resumption.resumption.resume r2 inp)) |]
      ==> Resumption.resumption.rel_resumption ?A ?B ?r1.0 ?r2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 4, template_var 3), template_var 2)
            ),
        template_predicate (template_app (template_hole 16, t_empty)),
        template_predicate (template_app (template_hole 16, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 3),
             template_var 2)
           ))),
    ("Resumption.resumption_ord_coinduct",
     "[| ?X ?r ?r';
         !!r r'.
            [| ?X r r'; Resumption.resumption.is_Done r' |]
            ==> Resumption.resumption.is_Done r &
                option_ord (Resumption.resumption.result r)
                 (Resumption.resumption.result r');
         !!r r'.
            [| ?X r r'; ~ Resumption.resumption.is_Done r';
               Resumption.resumption.is_Done r |]
            ==> Resumption.resumption.result r = None;
         !!r r'.
            [| ?X r r'; ~ Resumption.resumption.is_Done r;
               ~ Resumption.resumption.is_Done r' |]
            ==> Resumption.resumption.output r =
                Resumption.resumption.output r' &
                rel_fun (=) (%r r'. ?X r r' | resumption_ord r r')
                 (Resumption.resumption.resume r)
                 (Resumption.resumption.resume r') |]
      ==> resumption_ord ?r ?r'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 2, template_var 1), template_var 0)
            ),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           )))]:
   (string * thm * template) list
### theory "Draft.ResumptionTemplates"
### 1.581s elapsed time, 1.984s cpu time, 0.254s GC time
val it = (): unit
