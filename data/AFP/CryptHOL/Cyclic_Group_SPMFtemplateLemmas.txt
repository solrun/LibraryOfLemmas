   [("Cyclic_Group_SPMF.lossless_sample_uniform",
     "lossless_spmf (sample_uniform ?n) = (0 < ?n)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Cyclic_Group_SPMF.set_spmf_sample_uniform",
     "0 < ?n ==> set_spmf (sample_uniform ?n) = {..<?n}",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 0)],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Cyclic_Group_SPMF.spmf_sample_uniform",
     "spmf (sample_uniform ?n) ?x = indicat_real {..<?n} ?x / real ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Cyclic_Group_SPMF.weight_sample_uniform",
     "weight_spmf (sample_uniform ?n) = indicat_real (range Suc) ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 0))),
         template_app
          (template_hole 4,
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 0)))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0)),
         template_var 0))),
    ("Cyclic_Group_SPMF.weight_sample_uniform_gt_0",
     "0 < ?n ==> weight_spmf (sample_uniform ?n) = 1",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0))),
           template_app
            (template_hole 1,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)))),
         template_hole 0)))]
