   [("Partial_Function_Set.Diff_mono1",
     "monotone set.le_fun (<=) ?A ==>
      monotone set.le_fun (<=) (%f. ?A f - ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_hole 2)),
                template_hole 1),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)),
               template_hole 1),
             t_empty)
           ))),
    ("Partial_Function_Set.image_mono",
     "monotone set.le_fun (<=) ?A ==>
      monotone set.le_fun (<=) (%f. ?g ` ?A f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_hole 2)),
                template_hole 1),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)),
               template_hole 1),
             t_empty)
           ))),
    ("Partial_Function_Set.insert_mono",
     "monotone set.le_fun (<=) ?A ==>
      monotone set.le_fun (<=) (%f. insert ?x (?A f))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_hole 2)),
                template_hole 1),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)),
               template_hole 1),
             t_empty)
           ))),
    ("Partial_Function_Set.vimage_mono",
     "monotone set.le_fun (<=) ?A ==>
      monotone set.le_fun (<=) (%f. ?g -` ?A f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_hole 2)),
                template_hole 1),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)),
               template_hole 1),
             t_empty)
           ))),
    ("Partial_Function_Set.set_admissible",
     "set.admissible (%f. ALL x y. y : f x --> ?P x y)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 8, template_app (template_hole 7, t_empty)),
             template_app (template_hole 5, template_hole 4)),
           t_empty)
         )),
    ("Partial_Function_Set.coset_admissible",
     "coset.admissible (%f. ALL x y. ?P x y --> y : f x)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 8, template_app (template_hole 7, t_empty)),
             template_app (template_hole 5, t_empty)),
           t_empty)
         )),
    ("Partial_Function_Set.Int_mono",
     "[| monotone set.le_fun (<=) ?A; monotone set.le_fun (<=) ?B |]
      ==> monotone set.le_fun (<=) (%f. ?A f Int ?B f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_hole 2)),
                template_hole 1),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_hole 2)),
                template_hole 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)),
               template_hole 1),
             t_empty)
           ))),
    ("Partial_Function_Set.Un_mono",
     "[| monotone set.le_fun (<=) ?A; monotone set.le_fun (<=) ?B |]
      ==> monotone set.le_fun (<=) (%f. ?A f Un ?B f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_hole 2)),
                template_hole 1),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_hole 2)),
                template_hole 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)),
               template_hole 1),
             t_empty)
           ))),
    ("Partial_Function_Set.gfp_eq_fixp",
     "monotone (%x y. y <= x) (%x y. y <= x) ?f ==>
      gfp ?f = ccpo.fixp Inf (%x y. y <= x) ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, t_empty), t_empty),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0), t_empty),
           template_var 0)))),
    ("Partial_Function_Set.set_bind_mono",
     "[| monotone set.le_fun (<=) ?B;
         !!y. monotone set.le_fun (<=) (?C y) |]
      ==> monotone set.le_fun (<=) (%f. Set.bind (?B f) (%y. ?C y f))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_hole 5)),
                template_hole 4),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 6, template_hole 5)),
               template_hole 1),
             t_empty)
           ))),
    ("Partial_Function_Set.insert_mono'",
     "monotone coset.le_fun (%x y. y <= x) ?A ==>
      monotone coset.le_fun (%x y. y <= x) (%f. insert ?x (?A f))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4, template_app (template_hole 3, t_empty)),
                t_empty),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4, template_app (template_hole 3, t_empty)),
               t_empty),
             t_empty)
           ))),
    ("Partial_Function_Set.UNION_mono",
     "[| monotone set.le_fun (<=) ?B;
         !!y. monotone set.le_fun (<=) (?C y) |]
      ==> monotone set.le_fun (<=) (%f. UN y:?B f. ?C y f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6)),
                template_hole 5),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 7, template_hole 6)),
               template_hole 2),
             t_empty)
           ))),
    ("Partial_Function_Set.test2_coinduct",
     "[| ?P ?x ?y;
         !!x y.
            ?P x y ==>
            y = x |
            ?P (Suc x) y | y : ??.Partial_Function_Set.test2 (Suc x) |]
      ==> ?y : ??.Partial_Function_Set.test2 ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 2, template_var 1), template_var 0)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Partial_Function_Set.Int_mono'",
     "[| monotone coset.le_fun (%x y. y <= x) ?A;
         monotone coset.le_fun (%x y. y <= x) ?B |]
      ==> monotone coset.le_fun (%x y. y <= x) (%f. ?A f Int ?B f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4, template_app (template_hole 3, t_empty)),
                t_empty),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4, template_app (template_hole 3, t_empty)),
                t_empty),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4, template_app (template_hole 3, t_empty)),
               t_empty),
             t_empty)
           ))),
    ("Partial_Function_Set.Un_mono'",
     "[| monotone coset.le_fun (%x y. y <= x) ?A;
         monotone coset.le_fun (%x y. y <= x) ?B |]
      ==> monotone coset.le_fun (%x y. y <= x) (%f. ?A f Un ?B f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4, template_app (template_hole 3, t_empty)),
                t_empty),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4, template_app (template_hole 3, t_empty)),
                t_empty),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4, template_app (template_hole 3, t_empty)),
               t_empty),
             t_empty)
           ))),
    ("Partial_Function_Set.set_bind_mono'",
     "[| monotone coset.le_fun (%x y. y <= x) ?B;
         !!y. monotone coset.le_fun (%x y. y <= x) (?C y) |]
      ==> monotone coset.le_fun (%x y. y <= x)
           (%f. Set.bind (?B f) (%y. ?C y f))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7, template_app (template_hole 6, t_empty)),
                t_empty),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2, template_app (template_hole 6, t_empty)),
               t_empty),
             t_empty)
           ))),
    ("Partial_Function_Set.UNION_mono'",
     "[| monotone coset.le_fun (%x y. y <= x) ?B;
         !!y. monotone coset.le_fun (%x y. y <= x) (?C y) |]
      ==> monotone coset.le_fun (%x y. y <= x) (%f. UN y:?B f. ?C y f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8, template_app (template_hole 7, t_empty)),
                t_empty),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3, template_app (template_hole 7, t_empty)),
               t_empty),
             t_empty)
           )))]
