   [("RF_LTL.ccard_zero", "card {i. ?n < i & i <= ?n & ?p i} = 0",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, t_empty)),
       template_hole 0)),
    ("RF_LTL.ccard_ub",
     "card {i. ?n < i & i <= ?n' & ?p i} <= Suc ?n' - ?n",
     template_inequation
      (less_equals,
       template_app
        (template_hole 5, template_app (template_hole 4, t_empty)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 2))),
    ("RF_LTL.ccard_same",
     "~ ?p (Suc ?n') ==>
      card {i. ?n < i & i <= ?n' & ?p i} =
      card {i. ?n < i & i <= Suc ?n' & ?p i}",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_var 2,
                  template_app (template_hole 6, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty))))),
    ("RF_LTL.ccard_mono",
     "[| ?n <= ?n'; ?n' <= ?n'' |]
      ==> card {i. ?n < i & i <= ?n' & ?p i}
          <= card {i. ?n < i & i <= ?n'' & ?p i}",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_app
          (template_hole 3, template_app (template_hole 2, t_empty))))),
    ("RF_LTL.ccard_inc",
     "[| ?p (Suc ?n'); ?n <= ?n' |]
      ==> card {i. ?n < i & i <= Suc ?n' & ?p i} =
          Suc (card {i. ?n < i & i <= ?n' & ?p i})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_var 2,
              template_app (template_hole 6, template_var 1))
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_app
          (template_hole 6,
           template_app
            (template_hole 3, template_app (template_hole 2, t_empty)))))),
    ("RF_LTL.ccard_ex",
     "[| 1 <= ?c; ?c < card {i. ?n < i & i <= ?n'' & ?P i} |]
      ==> EX n'<?n''. ?n < n' & card {i. ?n < i & i <= n' & ?P i} = ?c",
     template_implication
      ([template_inequation (less_equals, template_hole 6, template_var 3),
        template_inequation
         (less_than, template_var 3,
          template_app
           (template_hole 4, template_app (template_hole 3, t_empty)))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("RF_LTL.ccard_sum",
     "[| ?n'' <= ?n'; ?n <= ?n'' |]
      ==> card {i. ?n < i & i <= ?n' & ?P i} =
          card {i. ?n < i & i <= ?n'' & ?P i} +
          card {i. ?n'' < i & i <= ?n' & ?P i}",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 3)],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 4, template_app (template_hole 3, t_empty))),
           template_app
            (template_hole 4, template_app (template_hole 3, t_empty)))))),
    ("RF_LTL.ccard_freq",
     "[| ?n <= ?n';
         card {i. ?n < i & i <= ?n' & ?Q i} + ?cnf
         < card {i. ?n < i & i <= ?n' & ?P i} |]
      ==> EX n' n''.
             ?cnf < card {i. n' < i & i <= n'' & ?P i} &
             card {i. n' < i & i <= n'' & ?Q i} <= ?cnf",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_hole 3, template_app (template_hole 2, t_empty))),
            template_var 1),
          template_app
           (template_hole 3, template_app (template_hole 2, t_empty)))],
       template_predicate (template_app (template_hole 0, t_empty))))]
