   [("Auxiliary.cardEx",
     "[| finite ?A; finite ?B; card ?B < card ?A |] ==> EX x:?A. x ~: ?B",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_inequation
         (less_than, template_app (template_hole 3, template_var 0),
          template_app (template_hole 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1), t_empty)
           ))),
    ("Auxiliary.Greatest_ex_le_nat",
     "EX k. ?P k & (ALL k'. ?P k' --> k' <= k) ==>
      ~ (EX n'>Greatest ?P. ?P n')",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_negation
        (template_predicate (template_app (template_hole 7, t_empty))))),
    ("Auxiliary.disjE3",
     "[| ?P | ?Q | ?R; ?P ==> ?S; ?Q ==> ?S; ?R ==> ?S |] ==> ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate (template_var 3)],
          template_predicate (template_var 0)),
        template_implication
         ([template_predicate (template_var 2)],
          template_predicate (template_var 0)),
        template_implication
         ([template_predicate (template_var 1)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Auxiliary.ge_induct",
     "[| ?i <= ?j; !!n. [| ?i <= n; ALL m>=?i. m < n --> ?P m |] ==> ?P n |]
      ==> ?P ?j",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Auxiliary.cardshift",
     "card {i. ?n < i & i <= ?n' & ?p (?n'' + i)} =
      card {i. ?n + ?n'' < i & i <= ?n' + ?n'' & ?p i}",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, t_empty)),
       template_app
        (template_hole 5, template_app (template_hole 4, t_empty)))),
    ("Auxiliary.my_induct",
     "[| ?i <= ?j; ?P ?j;
         !!n. [| ?i <= n; n < ?j; ALL n'>n. n' <= ?j --> ?P n' |]
              ==> ?P n |]
      ==> ?P ?i",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate (template_app (template_var 0, template_var 1)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (template_app (template_var 0, template_var 2))))]
