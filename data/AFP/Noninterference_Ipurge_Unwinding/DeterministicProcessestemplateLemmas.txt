   [("DeterministicProcesses.trace_set_traces", "trace_set (traces ?P)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("DeterministicProcesses.d_implies_ruc",
     "deterministic ?P ==> ref_union_closed ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("DeterministicProcesses.ts_process_d",
     "trace_set ?T ==> deterministic (ts_process ?T)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("DeterministicProcesses.d_equals_ts_process_traces",
     "deterministic ?P = (ts_process (traces ?P) = ?P)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("DeterministicProcesses.d_divergences",
     "deterministic ?P ==> divergences ?P = {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("DeterministicProcesses.d_implies_ts_process_traces",
     "deterministic ?P ==> ts_process (traces ?P) = ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("DeterministicProcesses.ts_process_traces",
     "trace_set ?T ==> traces (ts_process ?T) = ?T",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("DeterministicProcesses.ts_process_traces_implies_d",
     "ts_process (traces ?P) = ?P ==> deterministic ?P",
     template_implication
      ([template_equation
         (template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 0)),
          template_var 0)],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("DeterministicProcesses.dfc_implies_dwfc",
     "d_future_consistent ?P ?D ?R ==>
      d_weakly_future_consistent ?P ?I ?D ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("DeterministicProcesses.d_fc_equals_dfc",
     "deterministic ?P ==>
      future_consistent ?P ?D ?R = d_future_consistent ?P ?D ?R",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("DeterministicProcesses.d_wfc_equals_dwfc",
     "deterministic ?P ==>
      weakly_future_consistent ?P ?I ?D ?R =
      d_weakly_future_consistent ?P ?I ?D ?R",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("DeterministicProcesses.dfc_equals_dwfc_rel_ipurge",
     "d_future_consistent ?P ?D (rel_ipurge ?P ?I ?D) =
      d_weakly_future_consistent ?P ?I ?D (rel_ipurge ?P ?I ?D)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0),
           template_var 1)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0),
           template_var 1)))),
    ("DeterministicProcesses.d_ipurge_unwinding",
     "deterministic ?P ==>
      secure ?P ?I ?D =
      d_weakly_future_consistent ?P ?I ?D (rel_ipurge ?P ?I ?D)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0))))),
    ("DeterministicProcesses.ts_process_next_events",
     "trace_set ?T ==>
      (?x : next_events (ts_process ?T) ?xs) = (?xs @ [?x] : ?T)",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 2)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0))),
           template_var 2)))),
    ("DeterministicProcesses.ts_ipurge_unwinding",
     "trace_set ?T ==>
      secure (ts_process ?T) ?I ?D =
      d_weakly_future_consistent (ts_process ?T) ?I ?D
       (rel_ipurge (ts_process ?T) ?I ?D)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 2)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 2, template_var 2)),
               template_var 1),
             template_var 0),
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 2, template_var 2)),
               template_var 1),
             template_var 0))))),
    ("DeterministicProcesses.ts_process_failures",
     "trace_set ?T ==>
      failures (ts_process ?T) =
      {(xs, X). xs : ?T & (ALL x:X. xs @ [x] ~: ?T)}",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 0))],
       template_equation
        (template_app
          (template_hole 10,
           template_app (template_hole 9, template_var 0)),
         template_app
          (template_hole 8, template_app (template_hole 7, t_empty))))),
    ("DeterministicProcesses.ts_process_refusals",
     "[| trace_set ?T; ?xs : ?T |]
      ==> refusals (ts_process ?T) ?xs = {X. ALL x:X. ?xs @ [x] ~: ?T}",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 1)),
           template_var 0),
         template_app (template_hole 5, t_empty)))),
    ("DeterministicProcesses.ts_process_rep",
     "trace_set ?T ==>
      Rep_process (ts_process ?T) =
      ({(xs, X). xs : ?T & (ALL x:X. xs @ [x] ~: ?T)}, {})",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 0))],
       template_equation
        (template_app
          (template_hole 12,
           template_app (template_hole 11, template_var 0)),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_hole 9, template_app (template_hole 8, t_empty))),
           template_hole 0)))),
    ("DeterministicProcesses.ts_process_futures",
     "trace_set ?T ==>
      futures (ts_process ?T) ?xs =
      {(ys, Y). ?xs @ ys : ?T & (ALL y:Y. ?xs @ ys @ [y] ~: ?T)}",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app (template_hole 9, template_var 1)),
           template_var 0),
         template_app
          (template_hole 8, template_app (template_hole 7, t_empty)))))]
