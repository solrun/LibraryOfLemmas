Loading theory "Draft.Algebraic_Numbers_Prelim" (required by "Draft.Show_Real_ApproxTemplates" via "Draft.Show_Real_Approx" via "Draft.Show_Real_Alg" via "Draft.Real_Algebraic_Numbers" via "Draft.Algebraic_Numbers")
Loading theory "Draft.Bivariate_Polynomials" (required by "Draft.Show_Real_ApproxTemplates" via "Draft.Show_Real_Approx" via "Draft.Show_Real_Alg" via "Draft.Real_Algebraic_Numbers" via "Draft.Algebraic_Numbers" via "Draft.Resultant")
Loading theory "Draft.Templates" (required by "Draft.Show_Real_ApproxTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.072s elapsed time, 0.276s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Show_Real_ApproxTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.539s elapsed time, 1.563s cpu time, 0.145s GC time
### Ignoring duplicate rewrite rule:
### content (pCons ?a1 ?p1) == gcd ?a1 (content ?p1)
### theory "Draft.Bivariate_Polynomials"
### 1.138s elapsed time, 2.909s cpu time, 0.288s GC time
Loading theory "Draft.Resultant" (required by "Draft.Show_Real_ApproxTemplates" via "Draft.Show_Real_Approx" via "Draft.Show_Real_Alg" via "Draft.Real_Algebraic_Numbers" via "Draft.Algebraic_Numbers")
locale dvd_preserving_hom
  fixes hom :: "'a => 'b"
  assumes "dvd_preserving_hom hom"
Found termination order: "length <*mlex*> {}"
### theory "Draft.Algebraic_Numbers_Prelim"
### 1.500s elapsed time, 3.639s cpu time, 0.389s GC time
Loading theory "Draft.Min_Int_Poly" (required by "Draft.Show_Real_ApproxTemplates" via "Draft.Show_Real_Approx" via "Draft.Show_Real_Alg" via "Draft.Real_Algebraic_Numbers")
Loading theory "Draft.Sturm_Rat" (required by "Draft.Show_Real_ApproxTemplates" via "Draft.Show_Real_Approx" via "Draft.Show_Real_Alg" via "Draft.Real_Algebraic_Numbers")
Loading theory "Draft.Factors_of_Int_Poly" (required by "Draft.Show_Real_ApproxTemplates" via "Draft.Show_Real_Approx" via "Draft.Show_Real_Alg" via "Draft.Real_Algebraic_Numbers")
### theory "Draft.Min_Int_Poly"
### 0.091s elapsed time, 0.356s cpu time, 0.000s GC time
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
### theory "Draft.Factors_of_Int_Poly"
### 0.625s elapsed time, 1.961s cpu time, 0.256s GC time
Found termination order: "(%p. size (snd (snd (snd (snd p))))) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
### theory "Draft.Resultant"
### 1.329s elapsed time, 3.442s cpu time, 0.471s GC time
Loading theory "Draft.Algebraic_Numbers" (required by "Draft.Show_Real_ApproxTemplates" via "Draft.Show_Real_Approx" via "Draft.Show_Real_Alg" via "Draft.Real_Algebraic_Numbers")
locale idom_isom
  fixes hom :: "'a => 'b"
  assumes "idom_isom hom"
### theory "Draft.Sturm_Rat"
### 1.987s elapsed time, 4.772s cpu time, 0.644s GC time
### theory "Draft.Algebraic_Numbers"
### 1.061s elapsed time, 2.113s cpu time, 0.274s GC time
Loading theory "Draft.Real_Algebraic_Numbers" (required by "Draft.Show_Real_ApproxTemplates" via "Draft.Show_Real_Approx" via "Draft.Show_Real_Alg")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
locale map_poly_zero_hom_0
  fixes hom :: "'a => 'b"
  assumes "map_poly_zero_hom_0 hom"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
instantiation
  real_alg :: uminus
  uminus_real_alg == uminus :: real_alg => real_alg
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
instantiation
  real_alg :: plus
  plus_real_alg == plus :: real_alg => real_alg => real_alg
instantiation
  real_alg :: minus
  minus_real_alg == minus :: real_alg => real_alg => real_alg
instantiation
  real_alg :: zero
  zero_real_alg == zero_class.zero :: real_alg
instantiation
  real_alg :: one
  one_real_alg == one_class.one :: real_alg
instantiation
  real_alg :: times
  times_real_alg == times :: real_alg => real_alg => real_alg
instantiation
  real_alg :: inverse
  inverse_real_alg == inverse :: real_alg => real_alg
  divide_real_alg == divide :: real_alg => real_alg => real_alg
instantiation
  real_alg :: sgn
  sgn_real_alg == sgn :: real_alg => real_alg
instantiation
  real_alg :: equal
  equal_real_alg == equal_class.equal :: real_alg => real_alg => bool
instantiation
  real_alg :: ord
  less_eq_real_alg == less_eq :: real_alg => real_alg => bool
  less_real_alg == less :: real_alg => real_alg => bool
instantiation
  real_alg :: compare_order
  compare_real_alg == compare :: real_alg => real_alg => order
instantiation
  real_alg :: abs
  abs_real_alg == abs :: real_alg => real_alg
instantiation
  real_alg :: floor_ceiling
  floor_real_alg == floor :: real_alg => int
instantiation
  real_alg ::
    {normalization_euclidean_semiring,unique_euclidean_ring,normalization_semidom_multiplicative}
  division_segment_real_alg == division_segment :: real_alg => real_alg
  normalize_real_alg == normalize :: real_alg => real_alg
  unit_factor_real_alg == unit_factor :: real_alg => real_alg
  euclidean_size_real_alg == euclidean_size :: real_alg => nat
  modulo_real_alg == modulo :: real_alg => real_alg => real_alg
instantiation
  real_alg :: euclidean_ring_gcd
  Gcd_real_alg == Gcd :: real_alg set => real_alg
  Lcm_real_alg == Lcm :: real_alg set => real_alg
  gcd_real_alg == gcd :: real_alg => real_alg => real_alg
  lcm_real_alg == lcm :: real_alg => real_alg => real_alg
### theory "Draft.Real_Algebraic_Numbers"
### 8.475s elapsed time, 9.050s cpu time, 0.986s GC time
Loading theory "Draft.Show_Real_Alg" (required by "Draft.Show_Real_ApproxTemplates" via "Draft.Show_Real_Approx")
deriving "show" instance for type "Real_Algebraic_Numbers.real_alg"
overloading
  show_real \<equiv> show_real :: real => char list
### theory "Draft.Show_Real_Alg"
### 0.376s elapsed time, 0.420s cpu time, 0.053s GC time
Loading theory "Draft.Show_Real_Approx" (required by "Draft.Show_Real_ApproxTemplates")
overloading
  show_real_alg \<equiv> show_real_alg :: real_alg => char list
### theory "Draft.Show_Real_Approx"
### 0.066s elapsed time, 0.066s cpu time, 0.000s GC time
Loading theory "Draft.Show_Real_ApproxTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.Show_Real_ApproxTemplates"
### 2.478s elapsed time, 2.902s cpu time, 0.352s GC time
val it = (): unit
