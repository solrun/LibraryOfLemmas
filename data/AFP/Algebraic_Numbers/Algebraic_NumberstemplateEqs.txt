   [("Algebraic_Numbers_Prelim.content_uminus",
     "content (- ?p) = content ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Algebraic_Numbers_Prelim.degree_abs_int_poly",
     "degree (abs_int_poly ?p) = degree ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Algebraic_Numbers_Prelim.degree_cf_pos_poly",
     "degree (cf_pos_poly ?p) = degree ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Algebraic_Numbers.degree_poly_x_minus_y",
     "degree (poly_x_minus_y ?p) = degree ?p",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Algebraic_Numbers.degree_poly_x_mult_y",
     "degree (poly_x_mult_y ?p) = degree ?p",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Algebraic_Numbers_Prelim.irreducible_abs_int_poly",
     "irreducible (abs_int_poly ?p) = irreducible ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Algebraic_Numbers_Prelim.primitive_abs_int_poly",
     "primitive (abs_int_poly ?p) = primitive ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Algebraic_Numbers.algebraic_int_sqrt_iff",
     "algebraic_int (sqrt ?x) = algebraic_int ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Algebraic_Numbers.algebraic_int_csqrt_iff",
     "algebraic_int (csqrt ?x) = algebraic_int ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Algebraic_Numbers_Prelim.poly_uminus_code",
     "poly_uminus ?p = poly_uminus_inner (coeffs ?p)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Algebraic_Numbers.coeff_0_poly_x_minus_y",
     "coeff (poly_x_minus_y ?p) 0 = ?p",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_var 0)),
    ("Algebraic_Numbers.poly_y_x_poly_x_minus_y",
     "poly_y_x (poly_x_minus_y ?p) =
      ??.Algebraic_Numbers.poly_y_minus_x ?p",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Algebraic_Numbers_Prelim.content_poly_uminus_inner",
     "content (poly_uminus_inner ?as) = content (Poly ?as)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 2, template_app (template_hole 0, template_var 0)))),
    ("Algebraic_Numbers_Prelim.degree_poly_uminus_inner",
     "degree (poly_uminus_inner ?as) = degree (Poly ?as)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 2, template_app (template_hole 0, template_var 0)))),
    ("Algebraic_Numbers_Prelim.degree_poly_add_rat",
     "degree (poly_add_rat ?r ?p) = degree ?p",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Algebraic_Numbers.degree_poly_y_minus_x",
     "degree (poly_y_x (poly_x_minus_y ?p)) = degree ?p",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Algebraic_Numbers.primitive_field_poly", "primitive ?p = (?p ~= 0)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Algebraic_Numbers.poly2_x_y",
     "poly2 Algebraic_Numbers.x_y ?x ?y = ?x - ?y",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Algebraic_Numbers_Prelim.poly_rat", "ipoly (poly_rat ?x) ?x = 0",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 0))),
         template_var 0),
       template_hole 0)),
    ("Algebraic_Numbers_Prelim.algebraic_iff_represents",
     "algebraic ?x = (EX p. p represents ?x)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Algebraic_Numbers_Prelim.represents_of_rat",
     "?p represents of_rat ?x = ?p represents ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Algebraic_Numbers_Prelim.abs_int_poly_represents",
     "abs_int_poly ?p represents ?x = ?p represents ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Algebraic_Numbers_Prelim.cf_pos_poly_represents",
     "cf_pos_poly ?p represents ?x = ?p represents ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Algebraic_Numbers_Prelim.represents_of_real",
     "?p represents of_real ?x = ?p represents ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Algebraic_Numbers_Prelim.abs_int_poly_eq_0_iff",
     "(abs_int_poly ?p = 0) = (?p = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Algebraic_Numbers_Prelim.cf_pos_poly_eq_0",
     "(cf_pos_poly ?f = 0) = (?f = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Algebraic_Numbers_Prelim.abs_int_poly_dvd",
     "(abs_int_poly ?p dvd ?q) = (?p dvd ?q)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Algebraic_Numbers_Prelim.content_pCons",
     "content (pCons ?a ?p) = gcd ?a (content ?p)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Algebraic_Numbers_Prelim.poly_rat",
     "ipoly (poly_rat ?x) (of_rat ?x) = (0::?'a)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 2, template_var 0))),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Algebraic_Numbers_Prelim.poly_uminus_inner_0",
     "(poly_uminus_inner ?as = 0) = (Poly ?as = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_equation
        (template_app (template_hole 0, template_var 0), template_hole 1))),
    ("Algebraic_Numbers_Prelim.poly_add_rat_0",
     "(poly_add_rat ?r ?p = 0) = (?p = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Algebraic_Numbers_Prelim.smult_prod",
     "Polynomial.smult ?a ?b = monom ?a 0 * ?b",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0))),
    ("Algebraic_Numbers_Prelim.content_cf_pos_poly",
     "content (cf_pos_poly ?f) = (if ?f = 0 then 0 else 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 0))
            )],
       template_dunno)),
    ("Algebraic_Numbers.degree_coeff_poly_x_minus_y",
     "degree (coeff (poly_x_minus_y ?p) ?i) = degree ?p - ?i",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 3, template_var 1)),
         template_var 0))),
    ("Algebraic_Numbers.coeff_poly_x_mult_y",
     "coeff (poly_x_mult_y ?p) ?i = monom (coeff ?p ?i) ?i",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Algebraic_Numbers_Prelim.abs_int_poly_inv",
     "Polynomial.smult (sgn (lead_coeff ?p)) (abs_int_poly ?p) = ?p",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app (template_hole 1, template_var 0)))),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Algebraic_Numbers.poly2_poly_x_minus_y",
     "poly2 (poly_x_minus_y ?p) ?x ?y = poly ?p (?x - ?y)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebraic_Numbers.poly2_poly_x_mult_y",
     "poly2 (poly_x_mult_y ?p) ?x ?y = poly ?p (?x * ?y)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebraic_Numbers.algebraic_int_power_iff",
     "algebraic_int (?x ^ ?n) = (?n = 0 | algebraic_int ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("Algebraic_Numbers.algebraic_int_nth_root_real_iff",
     "algebraic_int (root ?n ?x) = (?n = 0 | algebraic_int ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("Algebraic_Numbers_Prelim.lead_coeff_abs_int_poly",
     "lead_coeff (abs_int_poly ?p) = \<bar>lead_coeff ?p\<bar>",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app (template_hole 1, template_var 0))))),
    ("Algebraic_Numbers.poly_y_x_const", "poly_y_x [:[:?a:]:] = [:[:?a:]:]"
