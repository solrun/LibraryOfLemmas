   [("Resultant_Prelim.resultant_1", "resultant 1 ?p = (1::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Resultant_Prelim.resultant_1", "resultant ?p 1 = (1::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Resultant.poly_of_vec_0", "poly_of_vec (0\<^sub>v ?n) = 0",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Resultant.poly_of_vec_of_poly", "poly_of_vec (vec_of_poly ?p) = ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Resultant.mk_poly_dim", "dim_col (mk_poly ?A) = dim_col ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Resultant.mk_poly_dim", "dim_row (mk_poly ?A) = dim_row ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Resultant.vec_of_poly_rev_shifted_dim",
     "dim_vec (vec_of_poly_rev_shifted ?p ?n ?j) = ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_var 1)),
    ("Resultant.mk_poly_sub_dim",
     "dim_col (??.Resultant.mk_poly_sub ?A ?l ?j) = dim_col ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("Resultant.mk_poly_sub_dim",
     "dim_row (??.Resultant.mk_poly_sub ?A ?l ?j) = dim_row ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("Resultant.mk_poly2_col_dim",
     "dim_vec (??.Resultant.mk_poly2_col ?A ?pv ?j) = dim_vec ?pv",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Resultant.det_mk_poly", "det (mk_poly ?A) = [:det ?A:]",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Resultant_Prelim.sylvester_mat_0",
     "sylvester_mat 0 ?q = 0\<^sub>m (degree ?q) (degree ?q)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Resultant_Prelim.sylvester_mat_sub_0",
     "sylvester_mat_sub 0 ?n 0 ?q = 0\<^sub>m ?n ?n",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1),
           template_hole 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 1))),
    ("Resultant_Prelim.resultant_const",
     "resultant ?p [:?a:] = ?a ^ degree ?p",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Resultant_Prelim.resultant_const",
     "resultant [:?a:] ?q = ?a ^ degree ?q",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Resultant_Prelim.sylvester_mat_dim",
     "dim_col (sylvester_mat ?p ?q) = degree ?p + degree ?q",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Resultant_Prelim.sylvester_mat_dim",
     "dim_row (sylvester_mat ?p ?q) = degree ?p + degree ?q",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Resultant_Prelim.sylvester_mat_sub_dim",
     "dim_col (sylvester_mat_sub ?m ?n ?p ?q) = ?m + ?n",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 3), template_var 2))),
    ("Resultant_Prelim.sylvester_mat_sub_dim",
     "dim_row (sylvester_mat_sub ?m ?n ?p ?q) = ?m + ?n",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 3), template_var 2))),
    ("Resultant.mk_poly2_row_dim",
     "dim_vec (??.Resultant.mk_poly2_row ?A ?d ?j ?pv ?i) = dim_vec ?pv",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Resultant.image_diff_atMost", "(-) ?n ` {..?n} = {..?n}",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty),
         template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Resultant.poly_of_vec_0_iff",
     "(poly_of_vec ?v = 0) = (?v = 0\<^sub>v (dim_vec ?v))",
     template_bimplication
      (template_equation
        (template_app (template_hole 4, template_var 0), template_hole 3),
       template_equation
        (template_var 0,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Resultant_Prelim.resultant_sub",
     "resultant ?p ?q = resultant_sub (degree ?p) (degree ?q) ?p ?q",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0)),
           template_var 1),
         template_var 0))),
    ("Resultant_Prelim.sylvester_mat_const",
     "sylvester_mat ?p [:?a:] = ?a \<cdot>\<^sub>m 1\<^sub>m (degree ?p)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_hole 3)),
       template_app
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 1))))),
    ("Resultant_Prelim.sylvester_mat_const",
     "sylvester_mat [:?a:] ?q = ?a \<cdot>\<^sub>m 1\<^sub>m (degree ?q)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_hole 3)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Resultant.foo",
     "monom (1::?'a) ?d \<cdot>\<^sub>v coeff_lift_hom.vec_hom ?v =
      map_vec (%a. monom a ?d) ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 2, t_empty), template_var 0))),
    ("Resultant.coeff_poly_of_vec",
     "coeff (poly_of_vec ?v) ?i =
      (if ?i < dim_vec ?v then ?v $ (dim_vec ?v - Suc ?i) else (0::?'a))",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 0),
               template_app (template_hole 4, template_var 1))),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 4, template_var 1)),
               template_app (template_hole 1, template_var 0)))),
         template_hole 0)))]
