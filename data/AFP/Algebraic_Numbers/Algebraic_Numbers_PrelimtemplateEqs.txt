   [("Algebraic_Numbers_Prelim.content_uminus",
     "content (- ?p) = content ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Algebraic_Numbers_Prelim.degree_abs_int_poly",
     "degree (abs_int_poly ?p) = degree ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Algebraic_Numbers_Prelim.degree_cf_pos_poly",
     "degree (cf_pos_poly ?p) = degree ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Algebraic_Numbers_Prelim.irreducible_abs_int_poly",
     "irreducible (abs_int_poly ?p) = irreducible ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Algebraic_Numbers_Prelim.primitive_abs_int_poly",
     "primitive (abs_int_poly ?p) = primitive ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Algebraic_Numbers_Prelim.poly_uminus_code",
     "poly_uminus ?p = poly_uminus_inner (coeffs ?p)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Algebraic_Numbers_Prelim.content_poly_uminus_inner",
     "content (poly_uminus_inner ?as) = content (Poly ?as)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 2, template_app (template_hole 0, template_var 0)))),
    ("Algebraic_Numbers_Prelim.degree_poly_uminus_inner",
     "degree (poly_uminus_inner ?as) = degree (Poly ?as)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 2, template_app (template_hole 0, template_var 0)))),
    ("Algebraic_Numbers_Prelim.degree_poly_add_rat",
     "degree (poly_add_rat ?r ?p) = degree ?p",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Algebraic_Numbers_Prelim.poly_rat", "ipoly (poly_rat ?x) ?x = 0",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 0))),
         template_var 0),
       template_hole 0)),
    ("Algebraic_Numbers_Prelim.algebraic_iff_represents",
     "algebraic ?x = (EX p. p represents ?x)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Algebraic_Numbers_Prelim.represents_of_rat",
     "?p represents of_rat ?x = ?p represents ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Algebraic_Numbers_Prelim.abs_int_poly_represents",
     "abs_int_poly ?p represents ?x = ?p represents ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Algebraic_Numbers_Prelim.cf_pos_poly_represents",
     "cf_pos_poly ?p represents ?x = ?p represents ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Algebraic_Numbers_Prelim.represents_of_real",
     "?p represents of_real ?x = ?p represents ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Algebraic_Numbers_Prelim.abs_int_poly_eq_0_iff",
     "(abs_int_poly ?p = 0) = (?p = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Algebraic_Numbers_Prelim.cf_pos_poly_eq_0",
     "(cf_pos_poly ?f = 0) = (?f = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Algebraic_Numbers_Prelim.abs_int_poly_dvd",
     "(abs_int_poly ?p dvd ?q) = (?p dvd ?q)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Algebraic_Numbers_Prelim.content_pCons",
     "content (pCons ?a ?p) = gcd ?a (content ?p)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Algebraic_Numbers_Prelim.poly_rat",
     "ipoly (poly_rat ?x) (of_rat ?x) = (0::?'a)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 2, template_var 0))),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Algebraic_Numbers_Prelim.poly_uminus_inner_0",
     "(poly_uminus_inner ?as = 0) = (Poly ?as = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_equation
        (template_app (template_hole 0, template_var 0), template_hole 1))),
    ("Algebraic_Numbers_Prelim.poly_add_rat_0",
     "(poly_add_rat ?r ?p = 0) = (?p = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Algebraic_Numbers_Prelim.smult_prod", "smult ?a ?b = monom ?a 0 * ?b",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0))),
    ("Algebraic_Numbers_Prelim.content_cf_pos_poly",
     "content (cf_pos_poly ?f) = (if ?f = 0 then 0 else 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 0))
            )],
       template_dunno)),
    ("Algebraic_Numbers_Prelim.abs_int_poly_inv",
     "smult (sgn (lead_coeff ?p)) (abs_int_poly ?p) = ?p",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app (template_hole 1, template_var 0)))),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Algebraic_Numbers_Prelim.lead_coeff_abs_int_poly",
     "lead_coeff (abs_int_poly ?p) = \<bar>lead_coeff ?p\<bar>",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app (template_hole 1, template_var 0))))),
    ("Algebraic_Numbers_Prelim.ipoly_of_real",
     "ipoly ?p (of_real ?x) = of_real (poly (real_of_int_poly ?p) ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 1)),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)))),
    ("Algebraic_Numbers_Prelim.ipoly_of_rat",
     "ipoly ?p (of_rat ?y) = of_rat (ipoly ?p ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 1)),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)))),
    ("Algebraic_Numbers_Prelim.poly_rat",
     "(ipoly (poly_rat ?x) ?y = (0::?'a)) = (?y = of_rat ?x)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app (template_hole 2, template_var 1))),
           template_var 0),
         template_hole 1),
       template_equation
        (template_var 0, template_app (template_hole 0, template_var 1)))),
    ("Algebraic_Numbers_Prelim.pos_poly_abs_poly",
     "(0 < lead_coeff (abs_int_poly ?p)) = (?p ~= 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 0)),
                template_app
                 (template_hole 3,
                  template_app (template_hole 4, template_var 0))))
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Algebraic_Numbers_Prelim.lead_coeff_cf_pos_poly",
     "(0 < lead_coeff (cf_pos_poly ?f)) = (?f ~= 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 0)),
                template_app
                 (template_hole 3,
                  template_app (template_hole 4, template_var 0))))
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Algebraic_Numbers_Prelim.cf_pos_poly_main",
     "smult (sgn (lead_coeff ?f) * content ?f) (cf_pos_poly ?f) = ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_app (template_hole 2, template_var 0)))),
             template_app (template_hole 1, template_var 0))),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Algebraic_Numbers_Prelim.ipoly_uminus_inner",
     "ipoly (poly_uminus_inner ?as) ?x = ipoly (Poly ?as) (- ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 2, template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 1, template_var 1))),
         template_app (template_hole 0, template_var 0)))),
    ("Algebraic_Numbers_Prelim.cf_pos_poly_eq_1",
     "(cf_pos_poly ?f = 1) = (degree ?f = 0 & ?f ~= 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 7, template_var 0), template_hole 6),
       template_dunno)),
    ("Algebraic_Numbers_Prelim.of_int_monom",
     "(of_int_poly ?p = [:rat_of_int ?c:]) = (?p = [:?c:])",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, template_hole 5), template_var 1),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 5, template_var 0)),
           template_hole 3)),
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Algebraic_Numbers_Prelim.poly_uminus_pCons_pCons",
     "poly_uminus (pCons ?a (pCons ?b ?p)) =
      pCons ?a (pCons (- ?b) (poly_uminus ?p))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("Algebraic_Numbers_Prelim.ipoly_nth_root",
     "ipoly (poly_nth_root ?n ?p) ?x = ipoly ?p (?x ^ ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Algebraic_Numbers_Prelim.poly_prod_mset_zero_iff",
     "(poly (\<Prod>\<^sub># ?F) ?x = (0::?'a)) =
      (\<exists>f:#?F. poly f ?x = (0::?'a))",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         t_empty))),
    ("Algebraic_Numbers_Prelim.ipoly_cf_pos_poly_eq_0",
     "(ipoly (cf_pos_poly ?p) ?x = (0::?'a)) = (ipoly ?p ?x = (0::?'a))",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 1))),
           template_var 0),
         template_hole 0),
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 1)),
           template_var 0),
         template_hole 0))),
    ("Algebraic_Numbers_Prelim.ipoly_abs_int_poly_eq_zero_iff",
     "(ipoly (abs_int_poly ?p) ?x = (0::?'a)) = (ipoly ?p ?x = (0::?'a))",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 1))),
           template_var 0),
         template_hole 0),
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 1)),
           template_var 0),
         template_hole 0))),
    ("Algebraic_Numbers_Prelim.ipoly_poly_compose",
     "ipoly (?p \<circ>\<^sub>p ?q) ?x = ipoly ?p (ipoly ?q ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1)),
           template_var 0)))),
    ("Algebraic_Numbers_Prelim.poly_map_poly_code",
     "poly (map_poly ?h ?p) ?x =
      fold_coeffs (%a b. ?h a + ?x * b) ?p (0::?'a)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, t_empty), template_var 1),
         template_hole 0))),
    ("Algebraic_Numbers_Prelim.algebraic_altdef_ipoly",
     "algebraic ?x = (EX p. ipoly p ?x = (0::?'a) & p ~= 0)",
     template_equation
      (template_app (template_hole 10, template_var 0),
       template_app (template_hole 9, t_empty))),
    ("Algebraic_Numbers_Prelim.sgn_ipoly_add_rat",
     "sgn (ipoly (poly_add_rat ?r ?p) ?x) =
      sgn (ipoly ?p (?x - of_rat ?r))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1))),
           template_var 0)),
       template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2)))))),
    ("Algebraic_Numbers_Prelim.coeff_abs_int_poly",
     "coeff (abs_int_poly ?p) ?n =
      (if lead_coeff ?p < 0 then - coeff ?p ?n else coeff ?p ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_app (template_hole 2, template_var 1))),
               template_hole 1)),
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 6, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 6, template_var 1),
           template_var 0)))),
    ("Algebraic_Numbers_Prelim.add_rat_roots",
     "(ipoly (poly_add_rat ?r ?p) ?x = (0::?'a)) =
      (ipoly ?p (?x - of_rat ?r) = (0::?'a))",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1))),
           template_var 0),
         template_hole 2),
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2))),
         template_hole 2))),
    ("Algebraic_Numbers_Prelim.ipoly_add_rat_pos_neg",
     "((0::?'a) < ipoly (poly_add_rat ?r ?p) ?x) =
      ((0::?'a) < ipoly ?p (?x - of_rat ?r))",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1))),
           template_var 0)),
       template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2)))))),
    ("Algebraic_Numbers_Prelim.ipoly_add_rat_pos_neg",
     "(ipoly (poly_add_rat ?r ?p) ?x < (0::?'a)) =
      (ipoly ?p (?x - of_rat ?r) < (0::?'a))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 1))),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 2)))),
         template_hole 2))),
    ("Algebraic_Numbers_Prelim.coeff_poly_mult_rat_main",
     "coeff (poly_mult_rat_main ?n ?d ?f) ?i =
      coeff ?f ?i * ?n ^ (degree ?f - ?i) * ?d ^ ?i",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)),
                 template_var 0)))),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Algebraic_Numbers_Prelim.ipoly_add_rat",
     "ipoly (poly_add_rat ?r ?p) ?x =
      of_int (snd (quotient_of ?r)) ^ degree ?p *
      ipoly ?p (?x - of_rat ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_hole 8),
             template_app
              (template_app (template_hole 7, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 8,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 2)))),
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_hole 8),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2)))))),
    ("Algebraic_Numbers_Prelim.gcd_of_int_poly",
     "gcd (of_int_poly ?f) (of_int_poly ?g) =
      smult (inverse (of_int (lead_coeff (gcd ?f ?g))))
       (of_int_poly (gcd ?f ?g))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_var 1)),
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0)),
                 template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0)))))),
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)))))]
