Loading theory "Draft.Bivariate_Polynomials" (required by "Draft.ResultantTemplates" via "Draft.Resultant")
Loading theory "Draft.Templates" (required by "Draft.ResultantTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.083s elapsed time, 0.199s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.ResultantTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.554s elapsed time, 1.127s cpu time, 0.150s GC time
### theory "Draft.Bivariate_Polynomials"
### 1.121s elapsed time, 1.824s cpu time, 0.199s GC time
Loading theory "Draft.Resultant" (required by "Draft.ResultantTemplates")
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd (snd (snd p))))) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
### theory "Draft.Resultant"
### 1.127s elapsed time, 1.247s cpu time, 0.156s GC time
Loading theory "Draft.ResultantTemplates"
val templateLemmas =
   [("Resultant_Prelim.resultant_1", "resultant 1 ?p = (1::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Resultant_Prelim.resultant_1", "resultant ?p 1 = (1::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Resultant.poly_of_vec_0", "poly_of_vec (0\<^sub>v ?n) = 0",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Resultant.poly_of_vec_of_poly", "poly_of_vec (vec_of_poly ?p) = ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Resultant.mk_poly_dim", "dim_col (mk_poly ?A) = dim_col ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Resultant.mk_poly_dim", "dim_row (mk_poly ?A) = dim_row ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Resultant.inj_on_diff_nat2", "inj_on ((-) ?n) {..?n}",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, t_empty),
           template_app (template_hole 0, template_var 0))
         )),
    ("Resultant.vec_of_poly_rev_shifted_dim",
     "dim_vec (vec_of_poly_rev_shifted ?p ?n ?j) = ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_var 1)),
    ("Resultant.mk_poly_sub_dim",
     "dim_col (??.Resultant.mk_poly_sub ?A ?l ?j) = dim_col ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("Resultant.mk_poly_sub_dim",
     "dim_row (??.Resultant.mk_poly_sub ?A ?l ?j) = dim_row ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("Resultant.mk_poly2_col_dim",
     "dim_vec (??.Resultant.mk_poly2_col ?A ?pv ?j) = dim_vec ?pv",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Resultant.det_mk_poly", "det (mk_poly ?A) = [:det ?A:]",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Resultant_Prelim.sylvester_mat_0",
     "sylvester_mat 0 ?q = 0\<^sub>m (degree ?q) (degree ?q)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Resultant_Prelim.sylvester_mat_sub_0",
     "sylvester_mat_sub 0 ?n 0 ?q = 0\<^sub>m ?n ?n",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1),
           template_hole 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 1))),
    ("Resultant_Prelim.resultant_const",
     "resultant ?p [:?a:] = ?a ^ degree ?p",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Resultant_Prelim.resultant_const",
     "resultant [:?a:] ?q = ?a ^ degree ?q",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Resultant_Prelim.sylvester_mat_dim",
     "dim_col (sylvester_mat ?p ?q) = degree ?p + degree ?q",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Resultant_Prelim.sylvester_mat_dim",
     "dim_row (sylvester_mat ?p ?q) = degree ?p + degree ?q",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Resultant_Prelim.sylvester_mat_sub_dim",
     "dim_col (sylvester_mat_sub ?m ?n ?p ?q) = ?m + ?n",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 3), template_var 2))),
    ("Resultant_Prelim.sylvester_mat_sub_dim",
     "dim_row (sylvester_mat_sub ?m ?n ?p ?q) = ?m + ?n",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 3), template_var 2))),
    ("Resultant.mk_poly2_row_dim",
     "dim_vec (??.Resultant.mk_poly2_row ?A ?d ?j ?pv ?i) = dim_vec ?pv",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Resultant.image_diff_atMost", "(-) ?n ` {..?n} = {..?n}",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty),
         template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Resultant.poly_of_vec_0_iff",
     "(poly_of_vec ?v = 0) = (?v = 0\<^sub>v (dim_vec ?v))",
     template_bimplication
      (template_equation
        (template_app (template_hole 4, template_var 0), template_hole 3),
       template_equation
        (template_var 0,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Resultant_Prelim.resultant_sub",
     "resultant ?p ?q = resultant_sub (degree ?p) (degree ?q) ?p ?q",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0)),
           template_var 1),
         template_var 0))),
    ("Resultant_Prelim.sylvester_mat_const",
     "sylvester_mat ?p [:?a:] = ?a \<cdot>\<^sub>m 1\<^sub>m (degree ?p)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_hole 3)),
       template_app
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 1))))),
    ("Resultant_Prelim.sylvester_mat_const",
     "sylvester_mat [:?a:] ?q = ?a \<cdot>\<^sub>m 1\<^sub>m (degree ?q)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_hole 3)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Resultant_Prelim.resultant_0",
     "0 < degree ?p ==> resultant 0 ?p = (0::?'a)",
     template_implication
      ([template_inequation
         (less_than, template_hole 5,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0))),
    ("Resultant_Prelim.resultant_0",
     "0 < degree ?p ==> resultant ?p 0 = (0::?'a)",
     template_implication
      ([template_inequation
         (less_than, template_hole 5,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_hole 1),
         template_hole 0))),
    ("Resultant.degree_poly_of_vec_less",
     "0 < dim_vec ?v ==> degree (poly_of_vec ?v) < dim_vec ?v",
     template_implication
      ([template_inequation
         (less_than, template_hole 3,
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 2, template_var 0)))),
    ("Resultant_Prelim.sylvester_mat_sub_carrier",
     "sylvester_mat_sub ?m ?n ?p ?q : carrier_mat (?m + ?n) (?m + ?n)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)))
         )),
    ("Resultant_Prelim.sylvester_carrier_mat",
     "sylvester_mat ?p ?q
      : carrier_mat (degree ?p + degree ?q) (degree ?p + degree ?q)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)),
                 template_app (template_hole 0, template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 0, template_var 0))))
         )),
    ("Resultant.mk_poly_sub_carrier",
     "?A : carrier_mat ?nr ?nc ==>
      ??.Resultant.mk_poly_sub ?A ?l ?j : carrier_mat ?nr ?nc",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2))
           ))),
    ("Resultant.col_mk_poly_mk_poly2",
     "0 < dim_col ?A ==>
      col (mk_poly ?A) (dim_col ?A - 1) = ??.Resultant.mk_poly2 ?A",
     template_implication
      ([template_inequation
         (less_than, template_hole 7,
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 6, template_var 0)),
             template_hole 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Resultant.foo",
     "monom (1::?'a) ?d \<cdot>\<^sub>v coeff_lift_hom.vec_hom ?v =
      map_vec (%a. monom a ?d) ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 2, t_empty), template_var 0))),
    ("Resultant.coeff_poly_of_vec",
     "coeff (poly_of_vec ?v) ?i =
      (if ?i < dim_vec ?v then ?v $ (dim_vec ?v - Suc ?i) else (0::?'a))",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 0),
               template_app (template_hole 4, template_var 1))),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 4, template_var 1)),
               template_app (template_hole 1, template_var 0)))),
         template_hole 0))),
    ("Resultant.mk_poly2_sylvester_upper",
     "?i < degree ?q ==>
      ??.Resultant.mk_poly2 (sylvester_mat ?p ?q) $ ?i =
      monom (1::?'a) (degree ?q - Suc ?i) * ?p",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 9, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_var 1))),
           template_var 2),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 9, template_var 1)),
                 template_app (template_hole 0, template_var 2)))),
           template_var 0)))),
    ("Resultant.col_mk_poly_sub",
     "[| ?l ~= ?j'; ?j' < dim_col ?A |]
      ==> col (??.Resultant.mk_poly_sub ?A ?l ?j) ?j' = col ?A ?j'",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2)),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Resultant.det_mk_poly_sub",
     "[| ?A : carrier_mat ?n ?n; ?i < ?n |]
      ==> det (??.Resultant.mk_poly_sub ?A (?n - 1) ?i) = det ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 1))
            ),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)),
             template_var 0)),
         template_app (template_hole 3, template_var 2)))),
    ("Resultant.resultant_non_zero_imp_coprime",
     "[| resultant ?f ?g ~= (0::?'a); ?f ~= 0 | ?g ~= 0 |]
      ==> comm_monoid_mult_class.coprime ?f ?g",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_hole 1))),
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_hole 1)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Resultant.resultant_zero_imp_common_factor",
     "[| 0 < degree ?p | 0 < degree ?q; resultant ?p ?q = (0::?'a) |]
      ==> ~ comm_monoid_mult_class.coprime ?p ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_app (template_hole 5, template_var 1))),
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_app (template_hole 5, template_var 0)))
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_hole 2)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)
               )
           ))),
    ("Resultant_Prelim.sylvester_mat_sub_map",
     "?f (0::?'b) = (0::?'a) ==>
      map_mat ?f (sylvester_mat_sub ?m ?n ?p ?q) =
      sylvester_mat_sub ?m ?n (map_poly ?f ?p) (map_poly ?f ?q)",
     template_implication
      ([template_equation
         (template_app (template_var 4, template_hole 6), template_hole 5)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 4),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 4),
             template_var 0))))),
    ("Resultant.col_sylvester",
     "?j < degree ?p + degree ?q ==>
      col (sylvester_mat ?p ?q) ?j =
      vec_of_poly_rev_shifted ?p (degree ?q) ?j @\<^sub>v
      vec_of_poly_rev_shifted ?q (degree ?p) ?j",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1)),
            template_app (template_hole 5, template_var 0)))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_app (template_hole 5, template_var 0)),
               template_var 2)),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_app (template_hole 5, template_var 1)),
             template_var 2))))),
    ("Resultant.mk_poly_mk_poly2",
     "[| 0 < dim_col ?A; ?i < dim_row ?A |]
      ==> mk_poly ?A $$ (?i, dim_col ?A - 1) =
          ??.Resultant.mk_poly2 ?A $ ?i",
     template_implication
      ([template_inequation
         (less_than, template_hole 10,
          template_app (template_hole 9, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1)),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 9, template_var 1)),
               template_hole 2))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Resultant.mk_poly_delete",
     "?i < dim_row ?A ==>
      mat_delete (mk_poly ?A) ?i (dim_col ?A - 1) =
      coeff_lift_hom.mat_hom (mat_delete ?A ?i (dim_col ?A - 1))",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 10, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app (template_hole 7, template_var 0)),
             template_var 1),
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 0)),
             template_hole 4)),
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1),
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 0)),
               template_hole 4)))))),
    ("Resultant.mk_poly2_pre",
     "?i < dim_row ?A ==>
      ??.Resultant.mk_poly2 ?A $ ?i =
      (SUM j'<dim_col ?A. monom (?A $$ (?i, dim_col ?A - Suc j')) j')",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 11, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app (template_hole 8, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 7, t_empty),
           template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 0)))))),
    ("Resultant.mk_poly_others",
     "[| ?i < dim_row ?A; ?j < dim_col ?A - 1 |]
      ==> mk_poly ?A $$ (?i, ?j) = [:?A $$ (?i, ?j):]",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 10, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 1)),
            template_hole 7))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 1)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 0))),
           template_hole 0)))),
    ("Resultant.mk_poly_sylvester_upper",
     "?i < degree ?q ==>
      mk_poly (sylvester_mat ?p ?q) $$ (?i, degree ?p + degree ?q - 1) =
      monom (1::?'a) (degree ?q - Suc ?i) * ?p",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 12, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 0),
                 template_var 1))),
           template_app
            (template_app (template_hole 7, template_var 2),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 12, template_var 0)),
                   template_app (template_hole 12, template_var 1))),
               template_hole 4))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 12, template_var 1)),
                 template_app (template_hole 0, template_var 2)))),
           template_var 0)))),
    ("Resultant.resultant_zero",
     "[| 0 < degree ?p | 0 < degree ?q; poly ?p ?x = (0::?'a);
         poly ?q ?x = (0::?'a) |]
      ==> resultant ?p ?q = (0::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_app (template_hole 4, template_var 2))),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_app (template_hole 4, template_var 1)))
            ),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 0),
          template_hole 1),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 0),
          template_hole 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_hole 1))),
    ("Resultant.degree_sum_smaller",
     "[| 0 < ?n; finite ?A; !!x. x : ?A ==> degree (?f x) < ?n |]
      ==> degree (sum ?f ?A) < ?n",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_than,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 1)),
         template_var 2))),
    ("Resultant.mk_poly_sub_others",
     "[| ?l ~= ?j'; ?i < dim_row ?A; ?j' < dim_col ?A |]
      ==> ??.Resultant.mk_poly_sub ?A ?l ?j $$ (?i, ?j') = ?A $$ (?i, ?j')",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_var 3)),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 5, template_var 1)),
        template_inequation
         (less_than, template_var 3,
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 4),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 3)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 3))))),
    ("Resultant.mk_poly2_row",
     "?n <= dim_vec ?pv ==>
      ??.Resultant.mk_poly2_row ?A ?d ?j ?pv ?n $ ?i =
      (if ?i < ?n then ?pv $ ?i + monom (?A $$ (?i, ?j)) ?d else ?pv $ ?i)",
     template_implication
      ([template_inequation
         (less_equals, template_var 5,
          template_app (template_hole 9, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 6, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 4),
               template_var 5)),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 5)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 7, template_var 4),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 1))),
                 template_var 2))),
           template_app
            (template_app (template_hole 7, template_var 4),
             template_var 0))))),
    ("Resultant.sylvester_vec_poly",
     "?v : carrier_vec (degree ?p + degree ?q) ==>
      poly_of_vec ((sylvester_mat ?p ?q)\<^sup>T *\<^sub>v ?v) =
      poly_of_vec (vec_first ?v (degree ?q)) * ?p +
      poly_of_vec (vec_last ?v (degree ?p)) * ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 1)),
                  template_app (template_hole 9, template_var 0))))
            )],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 0))),
             template_var 2)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_app (template_hole 9, template_var 0)))),
               template_var 1)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_app (template_hole 9, template_var 1)))),
             template_var 0))))),
    ("Resultant.mk_poly2",
     "[| ?i < dim_row ?A; 0 < dim_col ?A |]
      ==> ??.Resultant.mk_poly2 ?A $ ?i =
          (SUM j'<dim_col ?A.
           monom (?A $$ (?i, j')) (dim_col ?A - Suc j'))",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 12, template_var 0)),
        template_inequation
         (less_than, template_hole 11,
          template_app (template_hole 10, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app (template_hole 7, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 6, t_empty),
           template_app
            (template_hole 0,
             template_app (template_hole 10, template_var 0)))))),
    ("Resultant.mk_poly2_sylvester_lower",
     "[| degree ?q <= ?i; ?i < degree ?p + degree ?q |]
      ==> ??.Resultant.mk_poly2 (sylvester_mat ?p ?q) $ ?i =
          monom (1::?'a) (degree ?p + degree ?q - Suc ?i) * ?q",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 11, template_var 2),
          template_var 1),
        template_inequation
         (less_than, template_var 1,
          template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 11, template_var 0)),
            template_app (template_hole 11, template_var 2)))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_var 2))),
           template_var 1),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app (template_hole 11, template_var 0)),
                     template_app (template_hole 11, template_var 2))),
                 template_app (template_hole 0, template_var 1)))),
           template_var 2)))),
    ("Resultant.poly_resultant_zero",
     "[| 0 < degree ?p | 0 < degree ?q; poly2 ?p ?x ?y = (0::?'a);
         poly2 ?q ?x ?y = (0::?'a) |]
      ==> poly (resultant ?p ?q) ?x = (0::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_app (template_hole 5, template_var 3))),
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_app (template_hole 5, template_var 2)))
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 3),
              template_var 1),
            template_var 0),
          template_hole 2),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1),
            template_var 0),
          template_hole 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_hole 2))),
    ("Resultant.mk_poly2_row_col",
     "[| dim_vec ?pv = ?n; dim_row ?A = ?n; ?j < dim_col ?A |]
      ==> ??.Resultant.mk_poly2_row ?A ?d ?j ?pv ?n =
          ?pv + map_vec (%a. monom a ?d) (col ?A ?j)",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 4), template_var 3),
        template_equation
         (template_app (template_hole 8, template_var 2), template_var 3),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 6, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 0),
               template_var 1),
             template_var 4),
           template_var 3),
         template_app
          (template_app (template_hole 3, template_var 4),
           template_app
            (template_app (template_hole 2, t_empty),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)))))),
    ("Resultant.vec_of_poly_rev_shifted_scalar_prod",
     "[| degree ?p = ?m; dim_vec ?v = ?n; ?j < ?m + ?n |]
      ==> vec_of_poly_rev_shifted ?p ?n (?n + ?m - Suc ?j) \<bullet> ?v =
          coeff (?p * poly_of_vec ?v) ?j",
     template_implication
      ([template_equation
         (template_app (template_hole 11, template_var 4), template_var 3),
        template_equation
         (template_app (template_hole 10, template_var 2), template_var 1),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 8, template_var 3),
            template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 5, template_var 4),
                 template_var 1),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 8, template_var 1),
                     template_var 3)),
                 template_app (template_hole 3, template_var 0)))),
           template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 4),
               template_app (template_hole 0, template_var 2))),
           template_var 0)))),
    ("Resultant.mk_poly2_col",
     "[| ?i < dim_row ?A; dim_row ?A = dim_vec ?pv |]
      ==> ??.Resultant.mk_poly2_col ?A ?pv ?j $ ?i =
          ?pv $ ?i +
          (SUM j'<?j. monom (?A $$ (?i, dim_col ?A - Suc j')) j')",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 14, template_var 2)),
        template_equation
         (template_app (template_hole 14, template_var 2),
          template_app (template_hole 12, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app
                (template_app (template_hole 9, template_var 2),
                 template_var 1),
               template_var 0)),
           template_var 3),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 10, template_var 1),
               template_var 3)),
           template_app
            (template_app (template_hole 7, t_empty),
             template_app (template_hole 0, template_var 0)))))),
    ("Resultant.mk_poly_sub_corresp",
     "[| dim_col ?A = Suc ?l; dim_vec ?pv = dim_row ?A; ?j < dim_col ?A |]
      ==> ?pv +
          col (??.Resultant.mk_poly_sub (coeff_lift_hom.mat_hom ?A) ?l ?j)
           ?l =
          ??.Resultant.mk_poly2_col ?A ?pv (Suc ?j)",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 3),
          template_app (template_hole 11, template_var 2)),
        template_equation
         (template_app (template_hole 10, template_var 1),
          template_app (template_hole 9, template_var 3)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 12, template_var 3))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, t_empty),
                       template_var 3)),
                   template_var 2),
                 template_var 0)),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_app (template_hole 11, template_var 0))))),
    ("Resultant.sylvester_sum_mat_upper",
     "?i < degree ?q ==>
      (SUM j<degree ?p + degree ?q.
       monom (sylvester_mat ?p ?q $$ (?i, j))
        (degree ?p + degree ?q - Suc j)) =
      monom (1::?'a) (degree ?q - Suc ?i) * ?p",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 12, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 10, t_empty),
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 12, template_var 0)),
               template_app (template_hole 12, template_var 1)))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 9, template_hole 0),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 12, template_var 1)),
                 template_app (template_hole 3, template_var 2)))),
           template_var 0)))),
    ("Resultant.resultant_as_poly",
     "[| 0 < degree ?p; 0 < degree ?q |]
      ==> EX p' q'.
             degree p' < degree ?q &
             degree q' < degree ?p &
             [:resultant ?p ?q:] = p' * ?p + q' * ?q",
     template_implication
      ([template_inequation
         (less_than, template_hole 9,
          template_app (template_hole 8, template_var 1)),
        template_inequation
         (less_than, template_hole 9,
          template_app (template_hole 8, template_var 0))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Resultant.mk_poly_sylvester_lower",
     "[| degree ?q <= ?i; ?i < degree ?p + degree ?q |]
      ==> mk_poly (sylvester_mat ?p ?q) $$ (?i, degree ?p + degree ?q - 1) =
          monom (1::?'a) (degree ?p + degree ?q - Suc ?i) * ?q",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 13, template_var 2),
          template_var 1),
        template_inequation
         (less_than, template_var 1,
          template_app
           (template_app
             (template_hole 11,
              template_app (template_hole 13, template_var 0)),
            template_app (template_hole 13, template_var 2)))],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_var 2))),
           template_app
            (template_app (template_hole 6, template_var 1),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app (template_hole 13, template_var 0)),
                   template_app (template_hole 13, template_var 2))),
               template_hole 4))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app (template_hole 13, template_var 0)),
                     template_app (template_hole 13, template_var 2))),
                 template_app (template_hole 0, template_var 1)))),
           template_var 2)))),
    ("Resultant.resultant_as_nonzero_poly",
     "[| 0 < degree ?p; 0 < degree ?q |]
      ==> EX p' q'.
             degree p' < degree ?q &
             degree q' < degree ?p &
             [:resultant ?p ?q:] = p' * ?p + q' * ?q & p' ~= 0 & q' ~= 0",
     template_implication
      ([template_inequation
         (less_than, template_hole 10,
          template_app (template_hole 9, template_var 1)),
        template_inequation
         (less_than, template_hole 10,
          template_app (template_hole 9, template_var 0))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("Resultant.sylvester_sum_mat_lower",
     "[| degree ?q <= ?i; ?i < degree ?p + degree ?q |]
      ==> (SUM j<degree ?p + degree ?q.
           monom (sylvester_mat ?p ?q $$ (?i, j))
            (degree ?p + degree ?q - Suc j)) =
          monom (1::?'a) (degree ?p + degree ?q - Suc ?i) * ?q",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 13, template_var 2),
          template_var 1),
        template_inequation
         (less_than, template_var 1,
          template_app
           (template_app
             (template_hole 11,
              template_app (template_hole 13, template_var 0)),
            template_app (template_hole 13, template_var 2)))],
       template_equation
        (template_app
          (template_app (template_hole 9, t_empty),
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 11,
                 template_app (template_hole 13, template_var 0)),
               template_app (template_hole 13, template_var 2)))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 8, template_hole 0),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app (template_hole 13, template_var 0)),
                     template_app (template_hole 13, template_var 2))),
                 template_app (template_hole 3, template_var 1)))),
           template_var 2)))),
    ("Resultant.resultant_as_nonzero_poly_weak",
     "[| 0 < degree ?p; 0 < degree ?q; resultant ?p ?q ~= (0::?'a) |]
      ==> EX p' q'.
             degree p' < degree ?q &
             degree q' < degree ?p &
             [:resultant ?p ?q:] = p' * ?p + q' * ?q & p' ~= 0 & q' ~= 0",
     template_implication
      ([template_inequation
         (less_than, template_hole 12,
          template_app (template_hole 11, template_var 1)),
        template_inequation
         (less_than, template_hole 12,
          template_app (template_hole 11, template_var 0)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 8, template_var 1),
                template_var 0),
              template_hole 7)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Resultant_Prelim.sylvester_mat_sub_index",
     "[| ?i < ?m + ?n; ?j < ?m + ?n |]
      ==> sylvester_mat_sub ?m ?n ?p ?q $$ (?i, ?j) =
          (if ?i < ?n
           then if ?i <= ?j & ?j - ?i <= ?m then coeff ?p (?m + ?i - ?j)
                else (0::?'a)
           else if ?i - ?n <= ?j & ?j <= ?i then coeff ?q (?i - ?j)
                else (0::?'a))",
     template_implication
      ([template_inequation
         (less_than, template_var 5,
          template_app
           (template_app (template_hole 10, template_var 4),
            template_var 3)),
        template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 10, template_var 4),
            template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 7, template_var 4),
                   template_var 3),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 6, template_var 5),
             template_var 2)),
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 11, template_var 5),
                 template_var 3)),
             template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 5),
                         template_var 2)),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 2, template_var 2),
                           template_var 5)),
                       template_var 4))),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 10, template_var 4),
                         template_var 5)),
                     template_var 2))),
               template_hole 0)),
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 2, template_var 5),
                           template_var 3)),
                       template_var 2)),
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_var 5))),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 2))),
             template_hole 0))))),
    ("Resultant_Prelim.sylvester_index_mat2",
     "[| ?i < degree ?p + degree ?q; ?j < degree ?p + degree ?q |]
      ==> sylvester_mat ?p ?q $$ (?i, ?j) =
          (if ?i < degree ?q
           then coeff (monom (1::?'a) (degree ?q - ?i) * ?p)
                 (degree ?p + degree ?q - ?j)
           else coeff (monom (1::?'a) (degree ?p + degree ?q - ?i) * ?q)
                 (degree ?p + degree ?q - ?j))",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app
           (template_app
             (template_hole 11,
              template_app (template_hole 10, template_var 2)),
            template_app (template_hole 10, template_var 1))),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app
             (template_hole 11,
              template_app (template_hole 10, template_var 2)),
            template_app (template_hole 10, template_var 1)))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 6, template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 12, template_var 3),
                 template_app (template_hole 10, template_var 1))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_app
                        (template_app
                          (template_hole 0,
                           template_app (template_hole 10, template_var 1)),
                         template_var 3))),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app (template_hole 10, template_var 2)),
                     template_app (template_hole 10, template_var 1))),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app
                          (template_app
                            (template_hole 11,
                             template_app
                              (template_hole 10, template_var 2)),
                           template_app
                            (template_hole 10, template_var 1))),
                       template_var 3))),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app (template_hole 10, template_var 2)),
                   template_app (template_hole 10, template_var 1))),
               template_var 0)))))),
    ("Resultant_Prelim.sylvester_index_mat",
     "[| ?i < degree ?p + degree ?q; ?j < degree ?p + degree ?q |]
      ==> sylvester_mat ?p ?q $$ (?i, ?j) =
          (if ?i < degree ?q
           then if ?i <= ?j & ?j - ?i <= degree ?p
                then coeff ?p (degree ?p + ?i - ?j) else (0::?'a)
           else if ?i - degree ?q <= ?j & ?j <= ?i then coeff ?q (?i - ?j)
                else (0::?'a))",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app
           (template_app
             (template_hole 11,
              template_app (template_hole 10, template_var 2)),
            template_app (template_hole 10, template_var 1))),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app
             (template_hole 11,
              template_app (template_hole 10, template_var 2)),
            template_app (template_hole 10, template_var 1)))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 6, template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 12, template_var 3),
                 template_app (template_hole 10, template_var 1))),
             template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 3),
                         template_var 0)),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 2, template_var 0),
                           template_var 3)),
                       template_app (template_hole 10, template_var 2)))),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app
                          (template_hole 11,
                           template_app (template_hole 10, template_var 2)),
                         template_var 3)),
                     template_var 0))),
               template_hole 0)),
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 2, template_var 3),
                           template_app
                            (template_hole 10, template_var 1))),
                       template_var 0)),
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_var 3))),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 0))),
             template_hole 0)))))]:
   (string * thm * template) list
### theory "Draft.ResultantTemplates"
### 0.976s elapsed time, 1.499s cpu time, 0.535s GC time
val it = (): unit
