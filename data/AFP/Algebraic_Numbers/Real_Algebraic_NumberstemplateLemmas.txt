   [("Real_Algebraic_Numbers.of_rat_1", "invariant_1 (of_rat_1 ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Real_Algebraic_Numbers.of_rat_2", "invariant_2 (of_rat_2 ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Real_Algebraic_Numbers.algebraic_real_code",
     "algebraic_real (real_of ?x) = True",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Real_Algebraic_Numbers.real_alg_of_real_code",
     "real_alg_of_real (real_of ?x) = ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Real_Algebraic_Numbers.floor_3",
     "floor_3 ?x = \<lfloor>real_of_3 ?x\<rfloor>",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.floor_real_alg",
     "\<lfloor>real_of ?x\<rfloor> = \<lfloor>?x\<rfloor>",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Real_Algebraic_Numbers.to_rat_real_alg",
     "to_rat (real_of ?x) = to_rat_real_alg ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Real_Algebraic_Numbers.is_rat_real_alg",
     "is_rat (real_of ?x) = is_rat_real_alg ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Real_Algebraic_Numbers.of_rat_real_alg",
     "real_of_rat ?x = real_of (of_rat_real_alg ?x)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.of_rat_2",
     "real_of_2 (of_rat_2 ?x) = real_of_rat ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Real_Algebraic_Numbers.of_rat_3",
     "real_of_3 (of_rat_3 ?x) = real_of_rat ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Real_Algebraic_Numbers.min_int_poly_real_alg_real_of",
     "min_int_poly_real_alg ?x = min_int_poly (real_of ?x)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.min_int_poly_real_code",
     "min_int_poly_real (real_of ?x) = min_int_poly_real_alg ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Real_Algebraic_Numbers.normalize_bound_1_poly",
     "poly_real_alg_1 (normalize_bounds_1 ?rai) = poly_real_alg_1 ?rai",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Real_Algebraic_Numbers.irreducible_root_free",
     "irreducible ?p ==> root_free ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.poly_condD", "poly_cond ?p ==> irreducible ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.poly_condD", "poly_cond ?p ==> root_free ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.poly_condD", "poly_cond ?p ==> square_free ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.poly_cond2D", "poly_cond2 ?p ==> poly_cond ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.bij_minus", "bij (%x. x - ?y)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, t_empty), template_hole 0),
           template_hole 0)
         )),
    ("Real_Algebraic_Numbers.bij_add", "bij (%x. x + ?y)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, t_empty), template_hole 0),
           template_hole 0)
         )),
    ("Real_Algebraic_Numbers.inverse_real_alg",
     "inverse (real_of ?x) = real_of (inverse ?x)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.abs_real_alg",
     "\<bar>real_of ?x\<bar> = real_of \<bar>?x\<bar>",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.sgn_real_alg",
     "sgn (real_of ?x) = real_of (sgn ?x)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.uminus_real_alg",
     "- real_of ?x = real_of (- ?x)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.real_of_of_int",
     "real_of_rat (rat_of_int ?z) = real_of (of_int ?z)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.sgn_3",
     "real_of_rat (sgn_3 ?x) = sgn (real_of_3 ?x)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.sgn_real_alg_rat",
     "real_of_rat (sgn_real_alg_rat ?x) = sgn (real_of ?x)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.inverse_3",
     "real_of_3 (inverse_3 ?x) = inverse (real_of_3 ?x)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Real_Algebraic_Numbers.uminus_3",
     "real_of_3 (uminus_3 ?x) = - real_of_3 ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Real_Algebraic_Numbers.invariant_1D",
     "invariant_1 ?plr ==> primitive (poly_real_alg_1 ?plr)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Real_Algebraic_Numbers.invariant_1D",
     "invariant_1 ?plr ==> poly_cond (poly_real_alg_1 ?plr)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Real_Algebraic_Numbers.real_alg_2",
     "invariant_1 ?rai ==> invariant_2 (real_alg_2 ?rai)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Real_Algebraic_Numbers.invariant_1_2_poly_cond2",
     "invariant_1_2 ?rai ==> poly_cond2 (poly_real_alg_1 ?rai)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Real_Algebraic_Numbers.inverse_2",
     "invariant_2 ?x ==> invariant_2 (inverse_2 ?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Real_Algebraic_Numbers.uminus_2",
     "invariant_2 ?x ==> invariant_2 (uminus_2 ?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Real_Algebraic_Numbers.real_of_post",
     "real_of (Real_Alg_Quotient (Real_Alg_Invariant (Rational ?x))) =
      real_of_rat ?x",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)))),
       template_app (template_hole 0, template_var 0))),
    ("Real_Algebraic_Numbers.root_2",
     "invariant_2 ?x ==> invariant_2 (root_2 ?n ?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Real_Algebraic_Numbers.poly_condD", "poly_cond ?p ==> ?p ~= 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Real_Algebraic_Numbers.poly_cond2D",
     "poly_cond2 ?p ==> 1 < degree ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.equal_3",
     "equal_3 ?x ?y = (real_of_3 ?x = real_of_3 ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.real_of_inj",
     "(real_of ?x = real_of ?y) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Real_Algebraic_Numbers.equal_real_alg",
     "equal_class.equal (real_of ?x) (real_of ?y) = (?x = ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_app (template_hole 1, template_var 0))
            )],
       template_equation (template_var 1, template_var 0))),
    ("Real_Algebraic_Numbers.less_real_alg",
     "(real_of ?x < real_of ?y) = (?x < ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Real_Algebraic_Numbers.less_eq_real_alg",
     "(real_of ?x <= real_of ?y) = (?x <= ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Real_Algebraic_Numbers.root_real_alg",
     "root ?n (real_of ?x) = real_of (root_real_alg ?n ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Real_Algebraic_Numbers.root_3",
     "real_of_3 (root_3 ?n ?x) = root ?n (real_of_3 ?x)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Real_Algebraic_Numbers.of_rat_1",
     "real_of_1 (of_rat_1 ?x) = real_of_rat ?x",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("Real_Algebraic_Numbers.real_alg_1",
     "real_of_1 (real_alg_1 ?x) = real_of_2 ?x",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("Real_Algebraic_Numbers.compare_3",
     "compare_3 ?x ?y = compare (real_of_3 ?x) (real_of_3 ?y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.compare_real_of_rat",
     "compare (real_of_rat ?x) (real_of_rat ?y) = compare ?x ?y",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Real_Algebraic_Numbers.compare_real_alg",
     "compare (real_of ?x) (real_of ?y) = compare ?x ?y",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Real_Algebraic_Numbers.invariant_1D",
     "invariant_1 ?plr ==> EX! x. root_cond ?plr x",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Real_Algebraic_Numbers.invariant_1D",
     "invariant_1 ?plr ==> 0 < degree (poly_real_alg_1 ?plr)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_than, template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Real_Algebraic_Numbers.card_shift_image",
     "card ((%x. x - ?d) ` ?X) = card ?X",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("Real_Algebraic_Numbers.card_shift_image",
     "card ((%x. x + ?d) ` ?X) = card ?X",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("Real_Algebraic_Numbers.add_3",
     "real_of_3 (add_3 ?x ?y) = real_of_3 ?x + real_of_3 ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Real_Algebraic_Numbers.mult_3",
     "real_of_3 (mult_3 ?x ?y) = real_of_3 ?x * real_of_3 ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Real_Algebraic_Numbers.minus_real_alg",
     "real_of ?x - real_of ?y = real_of (?x - ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Real_Algebraic_Numbers.plus_real_alg",
     "real_of ?x + real_of ?y = real_of (?x + ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Real_Algebraic_Numbers.times_real_alg",
     "real_of ?x * real_of ?y = real_of (?x * ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Real_Algebraic_Numbers.divide_real_alg",
     "real_of ?x / real_of ?y = real_of (?x / ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Real_Algebraic_Numbers.poly_real_alg_1_add_rat",
     "poly_real_alg_1 (add_rat_1 ?r ?y) =
      cf_pos_poly (poly_add_rat ?r (poly_real_alg_1 ?y))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 3, template_var 0))))),
    ("Real_Algebraic_Numbers.invariant_1_degree_0",
     "invariant_1 ?rai ==> degree (poly_real_alg_1 ?rai) ~= 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_negation
        (
           template_equation
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("Real_Algebraic_Numbers.floor_2",
     "invariant_2 ?x ==> floor_2 ?x = \<lfloor>real_of_2 ?x\<rfloor>",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Real_Algebraic_Numbers.poly_condD",
     "poly_cond ?p ==> 0 < lead_coeff ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_than, template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 0))))),
    ("Real_Algebraic_Numbers.ipoly_root_delta",
     "?p ~= 0 ==> 0 < ipoly_root_delta ?p",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.inv_minus", "inv (%x. x - ?y) = (%x. x + ?y)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), t_empty),
       t_empty)),
    ("Real_Algebraic_Numbers.inv_add", "inv (%x. x + ?y) = (%x. x - ?y)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), t_empty),
       t_empty)),
    ("Real_Algebraic_Numbers.ex1_shift",
     "(EX! x. ?P (x - ?y)) = (EX! y. ?P y)",
     template_equation
      (template_app (template_hole 1, t_empty),
       template_app (template_hole 1, t_empty))),
    ("Real_Algebraic_Numbers.ex1_shift",
     "(EX! x. ?P (x + ?y)) = (EX! y. ?P y)",
     template_equation
      (template_app (template_hole 1, t_empty),
       template_app (template_hole 1, t_empty))),
    ("Real_Algebraic_Numbers.invariant_1D",
     "invariant_1 ?plr ==> sgn (rai_lb ?plr) = sgn (rai_ub ?plr)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 2,
           template_app (template_hole 0, template_var 0))))),
    ("Real_Algebraic_Numbers.invariant_1D",
     "invariant_1 ?plr ==> root_cond ?plr (real_of_1 ?plr)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, t_empty))
           ))),
    ("Real_Algebraic_Numbers.sgn_2",
     "invariant_2 ?x ==> real_of_rat (sgn_2 ?x) = sgn (real_of_2 ?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Real_Algebraic_Numbers.inverse_2",
     "invariant_2 ?x ==> real_of_2 (inverse_2 ?x) = inverse (real_of_2 ?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 0,
           template_app (template_hole 2, template_var 0))))),
    ("Real_Algebraic_Numbers.uminus_2",
     "invariant_2 ?x ==> real_of_2 (uminus_2 ?x) = - real_of_2 ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 0,
           template_app (template_hole 2, template_var 0))))),
    ("Real_Algebraic_Numbers.card_1_Collect_ex1",
     "card (Collect ?P) = 1 ==> EX! x. ?P x",
     template_implication
      ([template_equation
         (template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 0)),
          template_hole 1)],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Real_Algebraic_Numbers.unique_root_lr",
     "EX! x. root_cond ?plr x ==> rai_lb ?plr <= rai_ub ?plr",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.info_3_fun",
     "real_of_3 ?x = real_of_3 ?y ==> info_3 ?x = info_3 ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.info_real_alg",
     "info_real_alg ?x = Inl ?q ==> real_of ?x = real_of_rat ?q",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.add_2",
     "[| invariant_2 ?x; invariant_2 ?y |] ==> invariant_2 (add_2 ?x ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Real_Algebraic_Numbers.mult_2",
     "[| invariant_2 ?x; invariant_2 ?y |] ==> invariant_2 (mult_2 ?x ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Real_Algebraic_Numbers.poly_cond2I",
     "[| poly_cond ?p; 1 < degree ?p |] ==> poly_cond2 ?p",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 0)),
        template_inequation
         (less_than, template_hole 2,
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.ipoly_0_0",
     "(ipoly ?f (0::?'a) = (0::?'a)) = (poly ?f 0 = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 0)),
           template_hole 3),
         template_hole 3),
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_hole 0),
         template_hole 0))),
    ("Real_Algebraic_Numbers.real_alg_2",
     "invariant_1 ?rai ==> real_of_2 (real_alg_2 ?rai) = real_of_1 ?rai",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app (template_hole 1, t_empty)))),
    ("Real_Algebraic_Numbers.invariant_1_2_of_rat",
     "invariant_1_2 ?rai ==> real_of_1 ?rai ~= real_of_rat ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_negation
        (
           template_equation
            (template_app (template_hole 2, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Real_Algebraic_Numbers.floor_1",
     "invariant_1_2 ?x ==> \<lfloor>real_of_1 ?x\<rfloor> = floor_1 ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.root_2",
     "invariant_2 ?x ==> real_of_2 (root_2 ?n ?x) = root ?n (real_of_2 ?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 2, template_var 1))))),
    ("Real_Algebraic_Numbers.poly_cond2_no_rat_root",
     "poly_cond2 ?p ==> poly (real_of_int_poly ?p) (real_of_rat ?x) ~= 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 1)),
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("Real_Algebraic_Numbers.bij_imp_card_image",
     "bij ?f ==> card (?f ` ?X) = card ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_hole 5),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.invariant_1_2I",
     "[| invariant_1 ?rai; 1 < degree (poly_real_alg_1 ?rai) |]
      ==> invariant_1_2 ?rai",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 0)),
        template_inequation
         (less_than, template_hole 3,
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 0)))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.ex1_imp_Collect_singleton",
     "((EX! x. ?P x) & ?P ?x) = (Collect ?P = {?x})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5, template_app (template_hole 4, t_empty)),
              template_app (template_var 1, template_var 0))
            )],
       template_equation
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Real_Algebraic_Numbers.sgn_1",
     "invariant_1 ?x ==> real_of_rat (sgn_1 ?x) = sgn (real_of_1 ?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 2, template_app (template_hole 1, t_empty))))),
    ("Real_Algebraic_Numbers.real_of_2_Irrational",
     "invariant_2 (Irrational ?n ?rai) ==>
      real_of_2 (Irrational ?n ?rai) ~= real_of_rat ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Real_Algebraic_Numbers.unique_rootD",
     "EX! x. root_cond ?plr x ==> root_cond ?plr (real_of_1 ?plr)",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, t_empty))
           ))),
    ("Real_Algebraic_Numbers.poly_condI",
     "[| 0 < lead_coeff ?p; irreducible ?p |] ==> poly_cond ?p",
     template_implication
      ([template_inequation
         (less_than, template_hole 4,
          template_app
           (template_app (template_hole 3, template_var 0),
            template_app (template_hole 2, template_var 0))),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.ex1_iff_Collect_singleton",
     "?P ?x ==> (EX! x. ?P x) = (Collect ?P = {?x})",
     template_implication
      ([template_predicate (template_app (template_var 1, template_var 0))],
       template_implication
        ([template_predicate (template_app (template_hole 4, t_empty))],
         template_equation
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Real_Algebraic_Numbers.invariant_1_root_cond",
     "invariant_1 ?plr ==> root_cond ?plr ?y = (?y = real_of_1 ?plr)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0)
              )],
         template_equation
          (template_var 0, template_app (template_hole 0, t_empty))))),
    ("Real_Algebraic_Numbers.invariant_1D",
     "invariant_1 ?plr ==>
      sgn (real_of_1 ?plr) = real_of_rat (sgn (rai_ub ?plr))",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Real_Algebraic_Numbers.sgn_less_eq_1_rat",
     "[| sgn ?a = 1; ?a <= ?b |] ==> sgn ?b = 1",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1), template_hole 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app (template_hole 2, template_var 0), template_hole 1))),
    ("Real_Algebraic_Numbers.sgn_less_eq_1_real",
     "[| sgn ?a = 1; ?a <= ?b |] ==> sgn ?b = 1",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1), template_hole 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app (template_hole 2, template_var 0), template_hole 1))),
    ("Real_Algebraic_Numbers.sgn_real_alg_sound",
     "sgn ?x = (if ?x = 0 then 0 else if 0 < real_of ?x then 1 else - 1)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 8, template_var 0),
                   template_hole 5)),
               template_hole 5),
             template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_app (template_hole 2, template_var 0))),
                 template_hole 1),
               template_app (template_hole 0, template_hole 1)))
           ))),
    ("Real_Algebraic_Numbers.compare_1_rat",
     "invariant_1 ?y ==>
      compare_1_rat ?y ?x = compare (real_of_rat ?x) (real_of_1 ?y)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 1, t_empty))))),
    ("Real_Algebraic_Numbers.compare_rat_1",
     "invariant_1_2 ?y ==>
      compare_rat_1 ?x ?y = compare (real_of_rat ?x) (real_of_1 ?y)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0), template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 1, t_empty))))),
    ("Real_Algebraic_Numbers.bij_imp_ex1_iff",
     "bij ?f ==> (EX! x. ?P (?f x)) = (EX! y. ?P y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_hole 4),
              template_hole 3)
            )],
       template_equation
        (template_app (template_hole 1, t_empty),
         template_app (template_hole 0, t_empty)))),
    ("Real_Algebraic_Numbers.ipoly_roots_finite",
     "?p ~= 0 ==> finite {x. ipoly ?p x = (0::?'a)}",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 7))],
       template_predicate
        (
           template_app
            (template_hole 6, template_app (template_hole 5, t_empty))
           ))),
    ("Real_Algebraic_Numbers.unique_rootD",
     "EX! x. root_cond ?plr x ==>
      real_of_rat (rai_lb ?plr) <= real_of_1 ?plr",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, t_empty)))),
    ("Real_Algebraic_Numbers.unique_rootD",
     "EX! x. root_cond ?plr x ==>
      real_of_1 ?plr <= real_of_rat (rai_ub ?plr)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 2, t_empty),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Real_Algebraic_Numbers.info_2_card",
     "[| invariant_2 ?x; info_2 ?x = Inl ?y |]
      ==> real_of_2 ?x = real_of_rat ?y",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.real_of_1_0",
     "[| invariant_1 (?p, ?l, ?r); ?l = 0 |] ==> ?r = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            ),
        template_equation (template_var 1, template_hole 0)],
       template_equation (template_var 0, template_hole 0))),
    ("Real_Algebraic_Numbers.real_of_1_0",
     "[| invariant_1 (?p, ?l, ?r); ?r = 0 |] ==> ?l = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            ),
        template_equation (template_var 0, template_hole 0)],
       template_equation (template_var 1, template_hole 0))),
    ("Real_Algebraic_Numbers.invariant_1_pos",
     "[| invariant_1 (?p, ?l, ?r); 0 < ?l |] ==> 0 < ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            ),
        template_inequation (less_than, template_hole 0, template_var 1)],
       template_inequation (less_than, template_hole 0, template_var 0))),
    ("Real_Algebraic_Numbers.invariant_1_pos",
     "[| invariant_1 (?p, ?l, ?r); 0 < ?r |] ==> 0 < ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            ),
        template_inequation (less_than, template_hole 0, template_var 0)],
       template_inequation (less_than, template_hole 0, template_var 1))),
    ("Real_Algebraic_Numbers.invariant_1_pos",
     "[| invariant_1 (?p, ?l, ?r); ?l < 0 |] ==> ?r < 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            ),
        template_inequation (less_than, template_var 1, template_hole 0)],
       template_inequation (less_than, template_var 0, template_hole 0))),
    ("Real_Algebraic_Numbers.invariant_1_pos",
     "[| invariant_1 (?p, ?l, ?r); ?r < 0 |] ==> ?l < 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            ),
        template_inequation (less_than, template_var 0, template_hole 0)],
       template_inequation (less_than, template_var 1, template_hole 0))),
    ("Real_Algebraic_Numbers.to_rat_3",
     "to_rat_3 ?x =
      (if real_of_3 ?x : \<rat>
       then Some (THE q. real_of_3 ?x = real_of_rat q) else None)",
     template_equation
      (template_app (template_hole 9, template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 0)),
               template_hole 5)),
           template_app
            (template_hole 4, template_app (template_hole 3, t_empty))),
         template_hole 0))),
    ("Real_Algebraic_Numbers.to_rat_real_alg_main",
     "to_rat_real_alg_main ?x =
      (if real_of ?x : \<rat> then Some (THE q. real_of ?x = real_of_rat q)
       else None)",
     template_equation
      (template_app (template_hole 9, template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 0)),
               template_hole 5)),
           template_app
            (template_hole 4, template_app (template_hole 3, t_empty))),
         template_hole 0))),
    ("Real_Algebraic_Numbers.equal_2",
     "[| invariant_2 ?x; invariant_2 ?y |]
      ==> equal_2 ?x ?y = (real_of_2 ?x = real_of_2 ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0)
              )],
         template_equation
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Real_Algebraic_Numbers.compare_2",
     "[| invariant_2 ?x; invariant_2 ?y |]
      ==> compare_2 ?x ?y = compare (real_of_2 ?x) (real_of_2 ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Real_Algebraic_Numbers.inverse_1",
     "invariant_1_2 ?x ==>
      invariant_2 (inverse_1 ?x) &
      real_of_2 (inverse_1 ?x) = inverse (real_of_1 ?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 0))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 5, template_var 0))),
               template_app
                (template_hole 2, template_app (template_hole 1, t_empty))))
           ))),
    ("Real_Algebraic_Numbers.bij_imp_card",
     "bij ?f ==> card {x. ?P (?f x)} = card {x. ?P x}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 1),
                template_hole 6),
              template_hole 5)
            )],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_app
          (template_hole 1, template_app (template_hole 0, t_empty))))),
    ("Real_Algebraic_Numbers.unique_rootD",
     "EX! x. root_cond ?plr x ==>
      (?y = real_of_1 ?plr) = root_cond ?plr ?y",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, t_empty)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("Real_Algebraic_Numbers.unique_rootD",
     "EX! x. root_cond ?plr x ==>
      (real_of_1 ?plr = ?y) = root_cond ?plr ?y",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 1, template_app (template_hole 0, t_empty)),
           template_var 0),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("Real_Algebraic_Numbers.real_alg_2''",
     "degree ?p ~= 1 ==>
      real_alg_2'' ?ri ?p ?l ?r = real_alg_2' ?ri ?p ?l ?r",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 4, template_var 3),
              template_hole 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3),
             template_var 1),
           template_var 0)))),
    ("Real_Algebraic_Numbers.add_2",
     "[| invariant_2 ?x; invariant_2 ?y |]
      ==> real_of_2 (add_2 ?x ?y) = real_of_2 ?x + real_of_2 ?y",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("Real_Algebraic_Numbers.mult_2",
     "[| invariant_2 ?x; invariant_2 ?y |]
      ==> real_of_2 (mult_2 ?x ?y) = real_of_2 ?x * real_of_2 ?y",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("Real_Algebraic_Numbers.poly_cond_degree_0_imp_no_root",
     "[| poly_cond ?p; degree ?p = 0 |] ==> ipoly ?p ?x ~= (0::?'b)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_equation
         (template_app (template_hole 7, template_var 1), template_hole 6)],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 1)),
               template_var 0),
             template_hole 0)
           ))),
    ("Real_Algebraic_Numbers.poly_cond2E",
     "[| poly_cond2 ?p; [| poly_cond ?p; 1 < degree ?p |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_implication
         ([template_predicate
            (template_app (template_hole 3, template_var 1))],
          template_implication
           ([template_inequation
              (less_than, template_hole 1,
               template_app (template_hole 0, template_var 1))],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Real_Algebraic_Numbers.ex1_the_shift",
     "EX! y. ?P y ==> (THE x. ?P (x - ?d)) = (THE y. ?P y) + ?d",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app
            (template_hole 0, template_app (template_hole 2, t_empty)),
           template_var 0)))),
    ("Real_Algebraic_Numbers.ex1_the_shift",
     "EX! y. ?P y ==> (THE x. ?P (x + ?d)) = (THE y. ?P y) - ?d",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app
            (template_hole 0, template_app (template_hole 2, t_empty)),
           template_var 0)))),
    ("Real_Algebraic_Numbers.unique_rootD",
     "EX! x. root_cond ?plr x ==>
      poly (real_of_int_poly (poly_real_alg_1 ?plr)) (real_of_1 ?plr) = 0",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app (template_hole 2, template_var 0))),
           template_app (template_hole 1, t_empty)),
         template_hole 0))),
    ("Real_Algebraic_Numbers.real_alg_2_main",
     "[| invariant_1 ?rai;
         irreducible (poly_real_alg_1 ?rai) ==>
         root_info_cond ?ri (poly_real_alg_1 ?rai) |]
      ==> invariant_2 (real_alg_2_main ?ri ?rai)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 1))
               )],
          template_predicate
           (
              template_app
               (template_app (template_hole 2, template_var 0),
                template_app (template_hole 3, template_var 1))
              ))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Real_Algebraic_Numbers.invariant_1_2E",
     "[| invariant_1_2 ?rai;
         [| invariant_1 ?rai; 1 < degree (poly_real_alg_1 ?rai) |]
         ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_implication
         ([template_predicate
            (template_app (template_hole 4, template_var 1))],
          template_implication
           ([template_inequation
              (less_than, template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)))],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Real_Algebraic_Numbers.info_2",
     "[| invariant_2 ?x; invariant_2 ?y |]
      ==> (info_2 ?x = info_2 ?y) = (real_of_2 ?x = real_of_2 ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_bimplication
        (template_equation
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 2, template_var 0)),
         template_equation
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Real_Algebraic_Numbers.the_unique_root_eqI",
     "[| EX! x. root_cond ?plr x; root_cond ?plr ?y |]
      ==> ?y = real_of_1 ?plr",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_var 0, template_app (template_hole 0, t_empty)))),
    ("Real_Algebraic_Numbers.the_unique_root_eqI",
     "[| EX! x. root_cond ?plr x; root_cond ?plr ?y |]
      ==> real_of_1 ?plr = ?y",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Real_Algebraic_Numbers.normalize_bounds_1",
     "invariant_1_2 ?x ==>
      invariant_1_2 (normalize_bounds_1 ?x) &
      real_of_1 (normalize_bounds_1 ?x) = real_of_1 ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 5,
                 template_app (template_hole 3, template_var 0))),
             template_app
              (template_app
                (template_hole 2, template_app (template_hole 1, t_empty)),
               template_app (template_hole 1, t_empty)))
           ))),
    ("Real_Algebraic_Numbers.bij_imp_Collect_image",
     "bij ?f ==> {x. ?P (?f x)} = inv ?f ` {y. ?P y}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 1),
                template_hole 6),
              template_hole 5)
            )],
       template_equation
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 6),
               template_var 1)),
           template_app (template_hole 0, t_empty))))),
    ("Real_Algebraic_Numbers.info_2_unique",
     "[| invariant_2 ?x; invariant_2 ?y; real_of_2 ?x = real_of_2 ?y |]
      ==> info_2 ?x = info_2 ?y",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.info_2_inj",
     "[| invariant_2 ?x; invariant_2 ?y; info_2 ?x = info_2 ?y |]
      ==> real_of_2 ?x = real_of_2 ?y",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.uminus_1",
     "invariant_1 ?x ==>
      invariant_1 (uminus_1 ?x) & real_of_1 (uminus_1 ?x) = - real_of_1 ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 6,
                 template_app (template_hole 4, template_var 0))),
             template_app
              (template_app
                (template_hole 3, template_app (template_hole 2, t_empty)),
               template_app
                (template_hole 0, template_app (template_hole 2, t_empty))))
           ))),
    ("Real_Algebraic_Numbers.root_1",
     "invariant_1 ?x ==>
      invariant_2 (root_1 ?n ?x) &
      real_of_2 (root_1 ?n ?x) = root ?n (real_of_1 ?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_var 1))),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 1, t_empty))))
           ))),
    ("Real_Algebraic_Numbers.uminus_1_2",
     "invariant_1_2 ?x ==>
      invariant_1_2 (uminus_1 ?x) &
      real_of_1 (uminus_1 ?x) = - real_of_1 ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 6,
                 template_app (template_hole 4, template_var 0))),
             template_app
              (template_app
                (template_hole 3, template_app (template_hole 2, t_empty)),
               template_app
                (template_hole 0, template_app (template_hole 2, t_empty))))
           ))),
    ("Real_Algebraic_Numbers.to_rat_2",
     "invariant_2 ?x ==>
      to_rat_2 ?x =
      (if real_of_2 ?x : \<rat>
       then Some (THE q. real_of_2 ?x = real_of_rat q) else None)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 0))],
       template_equation
        (template_app (template_hole 9, template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_var 0)),
                 template_hole 5)),
             template_app
              (template_hole 4, template_app (template_hole 3, t_empty))),
           template_hole 0)))),
    ("Real_Algebraic_Numbers.mult_rat_1",
     "invariant_1 ?y ==>
      invariant_2 (mult_rat_1 ?x ?y) &
      real_of_2 (mult_rat_1 ?x ?y) = real_of_rat ?x * real_of_1 ?y",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 0),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 6, template_var 0),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_app (template_hole 1, t_empty))))
           ))),
    ("Real_Algebraic_Numbers.sgn_cf_pos",
     "0 < lead_coeff ?p ==>
      sgn (ipoly (cf_pos_poly ?p) ?x) = sgn (ipoly ?p ?x)",
     template_implication
      ([template_inequation
         (less_than, template_hole 8,
          template_app
           (template_app (template_hole 7, template_var 1),
            template_app (template_hole 6, template_var 1)))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 1))),
             template_var 0)),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1)),
             template_var 0))))),
    ("Real_Algebraic_Numbers.unique_rootI",
     "[| !!y. root_cond ?plr y ==> ?x = y; root_cond ?plr ?x |]
      ==> EX! x. root_cond ?plr x",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Real_Algebraic_Numbers.ex1_Collect_singleton",
     "[| EX! x. ?P x; ?P ?x; Collect ?P = {?x} ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_var 2, template_var 1)),
        template_implication
         ([template_equation
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Real_Algebraic_Numbers.real_of_1_0",
     "invariant_1 (?p, ?l, ?r) ==> (real_of_1 (?p, ?l, ?r) = 0) = (?r = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_var 2),
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 0)))
            )],
       template_bimplication
        (template_equation
          (template_app (template_hole 4, t_empty), template_hole 2),
         template_equation (template_var 0, template_hole 0)))),
    ("Real_Algebraic_Numbers.invariant_1_pos",
     "invariant_1 (?p, ?l, ?r) ==> (0 < real_of_1 (?p, ?l, ?r)) = (0 < ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_var 2),
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_hole 4),
           template_app (template_hole 3, t_empty)),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Real_Algebraic_Numbers.invariant_1_pos",
     "invariant_1 (?p, ?l, ?r) ==> (real_of_1 (?p, ?l, ?r) < 0) = (?r < 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_var 2),
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5, template_app (template_hole 4, t_empty)),
           template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Real_Algebraic_Numbers.invariant_1_pos",
     "invariant_1 (?p, ?l, ?r) ==>
      (0 <= real_of_1 (?p, ?l, ?r)) = (0 <= ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_var 2),
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_hole 4),
           template_app (template_hole 3, t_empty)),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Real_Algebraic_Numbers.invariant_1_pos",
     "invariant_1 (?p, ?l, ?r) ==>
      (real_of_1 (?p, ?l, ?r) <= 0) = (?r <= 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_var 2),
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5, template_app (template_hole 4, t_empty)),
           template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Real_Algebraic_Numbers.rational_root_free_degree_iff",
     "[| root_free (of_int_poly ?p); ipoly ?p ?x = (0::?'a) |]
      ==> (?x : \<rat>) = (degree ?p = 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 13,
              template_app
               (template_app (template_hole 12, template_hole 11),
                template_var 1))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_var 1)),
            template_var 0),
          template_hole 6)],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 4, template_var 0),
                template_hole 3)
              )],
         template_equation
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Real_Algebraic_Numbers.poly_cond_degree_gt_1",
     "[| poly_cond ?p; 1 < degree ?p; ipoly ?p ?x = (0::?'a) |]
      ==> ?x ~: \<rat>",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_inequation
         (less_than, template_hole 9,
          template_app (template_hole 8, template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 1)),
            template_var 0),
          template_hole 3)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)
               )
           ))),
    ("Real_Algebraic_Numbers.initial_lower_bound",
     "[| ?n ~= 0; 0 < ?l; real_of_rat ?l <= ?x |]
      ==> sgn (??.Real_Algebraic_Numbers.initial_lower_bound ?n ?l) = 1",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 8)),
        template_inequation (less_than, template_hole 6, template_var 1),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_hole 0))),
    ("Real_Algebraic_Numbers.initial_upper_bound",
     "[| ?n ~= 0; 0 < ?x; ?x <= real_of_rat ?r |]
      ==> sgn (??.Real_Algebraic_Numbers.initial_upper_bound ?n ?r) = 1",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 8)),
        template_inequation (less_than, template_hole 6, template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_hole 0))),
    ("Real_Algebraic_Numbers.invariant_1I",
     "[| EX! x. root_cond ?plr x; sgn (rai_lb ?plr) = sgn (rai_ub ?plr);
         poly_cond (poly_real_alg_1 ?plr) |]
      ==> invariant_1 ?plr",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_equation
         (template_app
           (template_hole 5,
            template_app (template_hole 4, template_var 0)),
          template_app
           (template_hole 5,
            template_app (template_hole 3, template_var 0))),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.add_rat_root_cond",
     "root_cond (cf_pos_poly (poly_add_rat ?m ?p), ?l, ?r) ?x =
      root_cond (?p, ?l - ?m, ?r - ?m) (?x - real_of_rat ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 4),
                   template_var 3))),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 3),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 4)),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 4)))),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 4))))),
    ("Real_Algebraic_Numbers.add_rat_1",
     "invariant_1_2 ?y ==>
      invariant_1_2 (add_rat_1 ?r1.0 ?y) &
      real_of_1 (add_rat_1 ?r1.0 ?y) = real_of_rat ?r1.0 + real_of_1 ?y",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 4, template_app (template_hole 3, t_empty)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_app (template_hole 3, t_empty))))
           ))),
    ("Real_Algebraic_Numbers.real_alg_2_main",
     "[| invariant_1 ?rai;
         irreducible (poly_real_alg_1 ?rai) ==>
         root_info_cond ?ri (poly_real_alg_1 ?rai) |]
      ==> real_of_2 (real_alg_2_main ?ri ?rai) = real_of_1 ?rai",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 1))
               )],
          template_predicate
           (
              template_app
               (template_app (template_hole 5, template_var 0),
                template_app (template_hole 6, template_var 1))
              ))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app (template_hole 1, t_empty)))),
    ("Real_Algebraic_Numbers.bij_ex1_imp_the_shift",
     "[| bij ?f; EX! y. ?P y |]
      ==> (THE x. ?P (?f x)) = inv ?f (THE y. ?P y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 1),
                template_hole 6),
              template_hole 5)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 6),
             template_var 1),
           template_app (template_hole 0, t_empty))))),
    ("Real_Algebraic_Numbers.initial_lower_bound",
     "[| ?n ~= 0; 0 < ?l; real_of_rat ?l <= ?x |]
      ==> real_of_rat (??.Real_Algebraic_Numbers.initial_lower_bound ?n ?l)
          <= root ?n ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 6)),
        template_inequation (less_than, template_hole 4, template_var 1),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Real_Algebraic_Numbers.initial_upper_bound",
     "[| ?n ~= 0; 0 < ?x; ?x <= real_of_rat ?r |]
      ==> root ?n ?x
          <= real_of_rat
              (??.Real_Algebraic_Numbers.initial_upper_bound ?n ?r)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 6)),
        template_inequation (less_than, template_hole 4, template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Real_Algebraic_Numbers.add_rat_unique_root",
     "(EX! x. root_cond (cf_pos_poly (poly_add_rat ?m ?p), ?l, ?r) x) =
      (EX! x. root_cond (?p, ?l - ?m, ?r - ?m) x)",
     template_equation
      (template_app (template_hole 6, t_empty),
       template_app (template_hole 6, t_empty))),
    ("Real_Algebraic_Numbers.degree_1_ipoly",
     "degree ?p = Suc 0 ==>
      (poly (real_of_int_poly ?p) ?x = 0) =
      (?x = real_of_rat (Rat.Fract (- coeff ?p 0) (coeff ?p 1)))",
     template_implication
      ([template_equation
         (template_app (template_hole 13, template_var 1),
          template_app (template_hole 12, template_hole 11))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_var 1)),
             template_var 0),
           template_hole 5),
         template_equation
          (template_var 0,
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_hole 11))),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0))))))),
    ("Real_Algebraic_Numbers.sgn_1_inj",
     "[| invariant_1 ?x; invariant_1 ?y; real_of_1 ?x = real_of_1 ?y |]
      ==> sgn_1 ?x = sgn_1 ?y",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_equation
         (template_app (template_hole 3, t_empty),
          template_app (template_hole 3, t_empty))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Real_Algebraic_Numbers.normalize_bounds_1_main",
     "[| 0 < ?eps; invariant_1_2 ?x |]
      ==> invariant_1_2 (normalize_bounds_1_main ?eps ?x) &
          real_of_1 (normalize_bounds_1_main ?eps ?x) = real_of_1 ?x",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 1),
        template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 2, template_app (template_hole 1, t_empty)),
               template_app (template_hole 1, t_empty)))
           ))),
    ("Real_Algebraic_Numbers.mult_rat_1_pos",
     "[| 0 < ?r1.0; invariant_1 ?y |]
      ==> invariant_2 (??.Real_Algebraic_Numbers.mult_rat_1_pos ?r1.0 ?y) &
          real_of_2 (??.Real_Algebraic_Numbers.mult_rat_1_pos ?r1.0 ?y) =
          real_of_rat ?r1.0 * real_of_1 ?y",
     template_implication
      ([template_inequation (less_than, template_hole 10, template_var 1),
        template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 6, template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_app (template_hole 1, t_empty))))
           ))),
    ("Real_Algebraic_Numbers.rational_poly_cond_iff",
     "[| poly_cond ?p; ipoly ?p ?x = (0::?'a); 1 < degree ?p |]
      ==> (?x : \<rat>) = (degree ?p = 1)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_var 1)),
            template_var 0),
          template_hole 7),
        template_inequation
         (less_than, template_hole 5,
          template_app (template_hole 4, template_var 1))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 2, template_var 0),
                template_hole 1)
              )],
         template_equation
          (template_app (template_hole 4, template_var 1),
           template_hole 5)))),
    ("Real_Algebraic_Numbers.root_condI",
     "[| real_of_rat (rai_lb ?plr) <= ?x; ?x <= real_of_rat (rai_ub ?plr);
         poly (real_of_int_poly (poly_real_alg_1 ?plr)) ?x = 0 |]
      ==> root_cond ?plr ?x",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_var 1)),
          template_var 0),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_hole 9,
            template_app (template_hole 7, template_var 1))),
        template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_app (template_hole 2, template_var 1))),
            template_var 0),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Real_Algebraic_Numbers.add_1",
     "[| invariant_1_2 ?x; invariant_1_2 ?y |]
      ==> invariant_2 (add_1 ?x ?y) &
          real_of_2 (add_1 ?x ?y) = real_of_1 ?x + real_of_1 ?y",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, t_empty)),
                 template_app (template_hole 1, t_empty))))
           ))),
    ("Real_Algebraic_Numbers.mult_1",
     "[| invariant_1_2 ?x; invariant_1_2 ?y |]
      ==> invariant_2 (mult_1 ?x ?y) &
          real_of_2 (mult_1 ?x ?y) = real_of_1 ?x * real_of_1 ?y",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, t_empty)),
                 template_app (template_hole 1, t_empty))))
           ))),
    ("Real_Algebraic_Numbers.ipoly_root_delta",
     "[| ?p ~= 0; 2 <= card (Collect (root_cond (?p, ?l, ?r))) |]
      ==> ipoly_root_delta ?p <= real_of_rat (?r - ?l) / 4",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 15)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 13,
            template_app (template_hole 12, template_hole 11)),
          template_app
           (template_hole 10,
            template_app
             (template_hole 9,
              template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_var 0))))))],
       template_inequation
        (less_equals, template_app (template_hole 4, template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1))),
           template_app
            (template_hole 0,
             template_app
              (template_hole 12,
               template_app (template_hole 12, template_hole 11))))))),
    ("Real_Algebraic_Numbers.root_condE",
     "[| root_cond ?plr ?x;
         [| real_of_rat (rai_lb ?plr) <= ?x;
            ?x <= real_of_rat (rai_ub ?plr);
            poly (real_of_int_poly (poly_real_alg_1 ?plr)) ?x = 0 |]
         ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_inequation
            (less_equals,
             template_app
              (template_hole 8,
               template_app (template_hole 7, template_var 2)),
             template_var 1)],
          template_implication
           ([template_inequation
              (less_equals, template_var 1,
               template_app
                (template_hole 8,
                 template_app (template_hole 6, template_var 2)))],
            template_implication
             ([template_equation
                (template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_app (template_hole 1, template_var 2))),
                   template_var 1),
                 template_hole 0)],
              template_predicate (template_var 0))))],
       template_predicate (template_var 0))),
    ("Real_Algebraic_Numbers.root_pos_1",
     "[| ?n ~= 0; invariant_1 ?x; 0 < rai_ub ?x |]
      ==> invariant_2 (??.Real_Algebraic_Numbers.root_pos_1 ?n ?x) &
          real_of_2 (??.Real_Algebraic_Numbers.root_pos_1 ?n ?x) =
          root ?n (real_of_1 ?x)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 12)),
        template_predicate
         (template_app (template_hole 11, template_var 0)),
        template_inequation
         (less_than, template_hole 9,
          template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_var 0))),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app (template_hole 1, t_empty))))
           ))),
    ("Real_Algebraic_Numbers.info_real_alg",
     "info_real_alg ?x = Inr (?p, ?n) ==>
      ?p represents real_of ?x &
      card {y. y <= real_of ?x & poly (real_of_int_poly ?p) y = 0} = ?n &
      irreducible ?p",
     template_implication
      ([template_equation
         (template_app (template_hole 15, template_var 2),
          template_app
           (template_hole 14,
            template_app
             (template_app (template_hole 13, template_var 1),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 11, template_var 1),
                 template_app (template_hole 10, template_var 2))),
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_hole 8,
                       template_app (template_hole 7, t_empty))),
                   template_var 0)),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Real_Algebraic_Numbers.poly_condE",
     "[| poly_cond ?p;
         [| irreducible ?p; 0 < lead_coeff ?p; root_free ?p; square_free ?p;
            ?p ~= 0 |]
         ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_implication
         ([template_predicate
            (template_app (template_hole 9, template_var 1))],
          template_implication
           ([template_inequation
              (less_than, template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_app (template_hole 5, template_var 1)))],
            template_implication
             ([template_predicate
                (template_app (template_hole 4, template_var 1))],
              template_implication
               ([template_predicate
                  (template_app (template_hole 3, template_var 1))],
                template_implication
                 ([template_negation
                    (template_equation (template_var 1, template_hole 0))],
                  template_predicate (template_var 0))))))],
       template_predicate (template_var 0))),
    ("Real_Algebraic_Numbers.invariant_2_realI",
     "[| root_cond ?plr ?x; sgn (rai_lb ?plr) = sgn (rai_ub ?plr);
         EX! x. root_cond ?plr x; poly_cond (poly_real_alg_1 ?plr) |]
      ==> invariant_2 (real_alg_2 ?plr) & real_of_2 (real_alg_2 ?plr) = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_hole 10,
            template_app (template_hole 9, template_var 1)),
          template_app
           (template_hole 10,
            template_app (template_hole 8, template_var 1))),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_hole 0,
                   template_app (template_hole 2, template_var 1))),
               template_var 0))
           ))),
    ("Real_Algebraic_Numbers.invariant_1_realI",
     "[| root_cond ?plr ?x; sgn (rai_lb ?plr) = sgn (rai_ub ?plr);
         EX! x. root_cond ?plr x; poly_cond (poly_real_alg_1 ?plr) |]
      ==> invariant_1 ?plr & real_of_1 ?plr = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_hole 9,
            template_app (template_hole 8, template_var 1)),
          template_app
           (template_hole 9,
            template_app (template_hole 7, template_var 1))),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_app
              (template_app
                (template_hole 1, template_app (template_hole 0, t_empty)),
               template_var 0))
           ))),
    ("Real_Algebraic_Numbers.invariant_1_2_realI",
     "[| root_cond ?plr ?x; sgn (rai_lb ?plr) = sgn (rai_ub ?plr);
         EX! x. root_cond ?plr x; poly_cond2 (poly_real_alg_1 ?plr) |]
      ==> invariant_1_2 ?plr & real_of_1 ?plr = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_hole 9,
            template_app (template_hole 8, template_var 1)),
          template_app
           (template_hole 9,
            template_app (template_hole 7, template_var 1))),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_app
              (template_app
                (template_hole 1, template_app (template_hole 0, t_empty)),
               template_var 0))
           ))),
    ("Real_Algebraic_Numbers.add_rat_roots_below",
     "{y. y <= ?x & poly (real_of_int_poly (poly_add_rat ?r ?p)) y = 0} =
      (%y. y + real_of_rat ?r) `
      {y. y <= ?x - real_of_rat ?r & poly (real_of_int_poly ?p) y = 0}",
     template_equation
      (template_app (template_hole 12, t_empty),
       template_app
        (template_app (template_hole 3, t_empty),
         template_app (template_hole 12, t_empty)))),
    ("Real_Algebraic_Numbers.invariant_1_sub_interval",
     "[| invariant_1 (?p, ?l, ?r);
         root_cond (?p, ?l', ?r') (real_of_1 (?p, ?l, ?r)); ?l <= ?l';
         ?r' <= ?r |]
      ==> invariant_1 (?p, ?l', ?r')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 4),
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_var 0))),
              template_app (template_hole 1, t_empty))
            ),
        template_inequation (less_equals, template_var 3, template_var 1),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 4),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)))
           ))),
    ("Real_Algebraic_Numbers.select_correct_factor_int_poly",
     "[| converges_to (%i. ?bnd_get ((?bnd_update ^^ i) ?init)) ?x;
         select_correct_factor_int_poly ?bnd_update ?bnd_get ?init ?p =
         ?rai;
         poly (real_of_int_poly ?p) ?x = 0; ?p ~= 0 |]
      ==> invariant_2 ?rai & real_of_2 ?rai = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, t_empty), template_var 2)
            ),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 11, template_var 4),
                template_var 5),
              template_var 3),
            template_var 1),
          template_var 0),
        template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_var 1)),
            template_var 2),
          template_hole 6),
        template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app
              (template_app
                (template_hole 10,
                 template_app (template_hole 0, template_var 0)),
               template_var 2))
           ))),
    ("Real_Algebraic_Numbers.tighten_poly_bounds",
     "[| tighten_poly_bounds ?p ?l ?r ?sr = (?l', ?r', ?sr');
         EX! x. root_cond (?p, ?l, ?r) x; poly_cond2 ?p;
         ?sr = sgn (ipoly ?p ?r) |]
      ==> ?l <= ?l'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 12, template_var 6),
                template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app (template_hole 11, template_var 2),
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0))),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 6, template_var 6)),
        template_equation
         (template_var 3,
          template_app
           (template_hole 4,
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 6)),
              template_var 4)))],
       template_inequation (less_equals, template_var 5, template_var 2))),
    ("Real_Algebraic_Numbers.tighten_poly_bounds",
     "[| tighten_poly_bounds ?p ?l ?r ?sr = (?l', ?r', ?sr');
         EX! x. root_cond (?p, ?l, ?r) x; poly_cond2 ?p;
         ?sr = sgn (ipoly ?p ?r) |]
      ==> ?l' <= ?r'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 12, template_var 6),
                template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app (template_hole 11, template_var 2),
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0))),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 6, template_var 6)),
        template_equation
         (template_var 3,
          template_app
           (template_hole 4,
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 6)),
              template_var 4)))],
       template_inequation (less_equals, template_var 2, template_var 1))),
    ("Real_Algebraic_Numbers.tighten_poly_bounds",
     "[| tighten_poly_bounds ?p ?l ?r ?sr = (?l', ?r', ?sr');
         EX! x. root_cond (?p, ?l, ?r) x; poly_cond2 ?p;
         ?sr = sgn (ipoly ?p ?r) |]
      ==> ?r' <= ?r",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 12, template_var 6),
                template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app (template_hole 11, template_var 2),
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0))),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 6, template_var 6)),
        template_equation
         (template_var 3,
          template_app
           (template_hole 4,
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 6)),
              template_var 4)))],
       template_inequation (less_equals, template_var 1, template_var 4))),
    ("Real_Algebraic_Numbers.tighten_poly_bounds_for_x",
     "[| EX! x. root_cond (?p, ?l, ?r) x; poly_cond2 ?p;
         tighten_poly_bounds_for_x ?p ?x ?l ?r ?sr = (?l', ?r', ?sr');
         ?sr = sgn (ipoly ?p ?r) |]
      ==> ?l <= ?l'",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 9, template_var 7)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 7),
                  template_var 4),
                template_var 6),
              template_var 5),
            template_var 3),
          template_app
           (template_app (template_hole 6, template_var 2),
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0))),
        template_equation
         (template_var 3,
          template_app
           (template_hole 4,
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 7)),
              template_var 5)))],
       template_inequation (less_equals, template_var 6, template_var 2))),
    ("Real_Algebraic_Numbers.tighten_poly_bounds_for_x",
     "[| EX! x. root_cond (?p, ?l, ?r) x; poly_cond2 ?p;
         tighten_poly_bounds_for_x ?p ?x ?l ?r ?sr = (?l', ?r', ?sr');
         ?sr = sgn (ipoly ?p ?r) |]
      ==> ?l' <= ?r'",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 9, template_var 7)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 7),
                  template_var 4),
                template_var 6),
              template_var 5),
            template_var 3),
          template_app
           (template_app (template_hole 6, template_var 2),
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0))),
        template_equation
         (template_var 3,
          template_app
           (template_hole 4,
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 7)),
              template_var 5)))],
       template_inequation (less_equals, template_var 2, template_var 1))),
    ("Real_Algebraic_Numbers.tighten_poly_bounds_for_x",
     "[| EX! x. root_cond (?p, ?l, ?r) x; poly_cond2 ?p;
         tighten_poly_bounds_for_x ?p ?x ?l ?r ?sr = (?l', ?r', ?sr');
         ?sr = sgn (ipoly ?p ?r) |]
      ==> ?r' <= ?r",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 9, template_var 7)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 7),
                  template_var 4),
                template_var 6),
              template_var 5),
            template_var 3),
          template_app
           (template_app (template_hole 6, template_var 2),
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0))),
        template_equation
         (template_var 3,
          template_app
           (template_hole 4,
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 7)),
              template_var 5)))],
       template_inequation (less_equals, template_var 1, template_var 5))),
    ("Real_Algebraic_Numbers.real_alg_2'",
     "[| EX! x. root_cond (?q, ?l, ?r) x; poly_cond ?q;
         root_info_cond ?ri ?q |]
      ==> invariant_2 (real_alg_2' ?ri ?q ?l ?r) &
          real_of_2 (real_alg_2' ?ri ?q ?l ?r) = real_of_1 (?q, ?l, ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 0),
                       template_var 3),
                     template_var 2),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_var 0),
                         template_var 3),
                       template_var 2),
                     template_var 1))),
               template_app (template_hole 0, t_empty)))
           ))),
    ("Real_Algebraic_Numbers.root_cond_cong",
     "(!!x. [| real_of_rat ?l <= x; x <= real_of_rat ?r |]
            ==> (poly (real_of_int_poly ?p) x = 0) =
                (poly (real_of_int_poly ?q) x = 0)) ==>
      root_cond (?p, ?l, ?r) = root_cond (?q, ?l, ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)))))),
    ("Real_Algebraic_Numbers.tighten_poly_bounds",
     "[| tighten_poly_bounds ?p ?l ?r ?sr = (?l', ?r', ?sr');
         EX! x. root_cond (?p, ?l, ?r) x; poly_cond2 ?p;
         ?sr = sgn (ipoly ?p ?r) |]
      ==> ?sr' = sgn (ipoly ?p ?r')",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 11, template_var 6),
                template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app (template_hole 10, template_var 2),
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 0))),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 5, template_var 6)),
        template_equation
         (template_var 3,
          template_app
           (template_hole 3,
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_hole 0),
                  template_var 6)),
              template_var 4)))],
       template_equation
        (template_var 0,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 6)),
             template_var 1))))),
    ("Real_Algebraic_Numbers.roots_below_the_unique_root",
     "EX! x. root_cond (?p, ?l, ?r) x ==>
      {y. y <= real_of_1 (?p, ?l, ?r) & poly (real_of_int_poly ?p) y = 0} =
      {y. y <= real_of_rat ?r & poly (real_of_int_poly ?p) y = 0}",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty))],
       template_equation
        (template_app (template_hole 9, t_empty),
         template_app (template_hole 9, t_empty)))),
    ("Real_Algebraic_Numbers.mult_1_pos",
     "[| invariant_1_2 ?x; invariant_1_2 ?y; 0 < real_of_1 ?x;
         0 < real_of_1 ?y |]
      ==> invariant_2 (??.Real_Algebraic_Numbers.mult_1_pos ?x ?y) &
          real_of_2 (??.Real_Algebraic_Numbers.mult_1_pos ?x ?y) =
          real_of_1 ?x * real_of_1 ?y",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_inequation
         (less_than, template_hole 8,
          template_app (template_hole 7, t_empty)),
        template_inequation
         (less_than, template_hole 8,
          template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 7, t_empty)),
                 template_app (template_hole 7, t_empty))))
           ))),
    ("Real_Algebraic_Numbers.tighten_poly_bounds_for_x",
     "[| EX! x. root_cond (?p, ?l, ?r) x; poly_cond2 ?p;
         tighten_poly_bounds_for_x ?p ?x ?l ?r ?sr = (?l', ?r', ?sr');
         ?sr = sgn (ipoly ?p ?r) |]
      ==> ~ (?l' <= ?x & ?x <= ?r')",
     template_implication
      ([template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate
         (template_app (template_hole 11, template_var 7)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 7),
                  template_var 4),
                template_var 6),
              template_var 5),
            template_var 3),
          template_app
           (template_app (template_hole 8, template_var 2),
            template_app
             (template_app (template_hole 12, template_var 1),
              template_var 0))),
        template_equation
         (template_var 3,
          template_app
           (template_hole 6,
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_var 7)),
              template_var 5)))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 4)),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1))
               )
           ))),
    ("Real_Algebraic_Numbers.tighten_poly_bounds_for_x",
     "[| EX! x. root_cond (?p, ?l, ?r) x; poly_cond2 ?p;
         tighten_poly_bounds_for_x ?p ?x ?l ?r ?sr = (?l', ?r', ?sr');
         ?sr = sgn (ipoly ?p ?r) |]
      ==> ?sr' = sgn (ipoly ?p ?r')",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 8, template_var 7)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 7),
                  template_var 4),
                template_var 6),
              template_var 5),
            template_var 3),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 0))),
        template_equation
         (template_var 3,
          template_app
           (template_hole 3,
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_hole 0),
                  template_var 7)),
              template_var 5)))],
       template_equation
        (template_var 0,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 7)),
             template_var 1))))),
    ("Real_Algebraic_Numbers.unique_root_sub_interval",
     "[| EX! x. root_cond (?p, ?l, ?r) x;
         root_cond (?p, ?l', ?r') (real_of_1 (?p, ?l, ?r)); ?l <= ?l';
         ?r' <= ?r |]
      ==> EX! x. root_cond (?p, ?l', ?r') x",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_var 0))),
              template_app (template_hole 1, t_empty))
            ),
        template_inequation (less_equals, template_var 3, template_var 1),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Real_Algebraic_Numbers.tighten_poly_bounds_epsilon",
     "[| EX! x. root_cond (?p, ?l, ?r) x; poly_cond2 ?p;
         tighten_poly_bounds_epsilon ?p ?x ?l ?r ?sr = (?l', ?r', ?sr');
         ?sr = sgn (ipoly ?p ?r); 0 < ?x |]
      ==> ?l <= ?l'",
     template_implication
      ([template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate
         (template_app (template_hole 11, template_var 7)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 7),
                  template_var 4),
                template_var 6),
              template_var 5),
            template_var 3),
          template_app
           (template_app (template_hole 8, template_var 2),
            template_app
             (template_app (template_hole 12, template_var 1),
              template_var 0))),
        template_equation
         (template_var 3,
          template_app
           (template_hole 6,
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_var 7)),
              template_var 5))),
        template_inequation (less_than, template_hole 1, template_var 4)],
       template_inequation (less_equals, template_var 6, template_var 2))),
    ("Real_Algebraic_Numbers.tighten_poly_bounds_epsilon",
     "[| EX! x. root_cond (?p, ?l, ?r) x; poly_cond2 ?p;
         tighten_poly_bounds_epsilon ?p ?x ?l ?r ?sr = (?l', ?r', ?sr');
         ?sr = sgn (ipoly ?p ?r); 0 < ?x |]
      ==> ?r' <= ?r",
     template_implication
      ([template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate
         (template_app (template_hole 11, template_var 7)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 7),
                  template_var 4),
                template_var 6),
              template_var 5),
            template_var 3),
          template_app
           (template_app (template_hole 8, template_var 2),
            template_app
             (template_app (template_hole 12, template_var 1),
              template_var 0))),
        template_equation
         (template_var 3,
          template_app
           (template_hole 6,
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_var 7)),
              template_var 5))),
        template_inequation (less_than, template_hole 1, template_var 4)],
       template_inequation (less_equals, template_var 1, template_var 5))),
    ("Real_Algebraic_Numbers.tighten_poly_bounds_for_x",
     "[| EX! x. root_cond (?p, ?l, ?r) x; poly_cond2 ?p;
         tighten_poly_bounds_for_x ?p ?x ?l ?r ?sr = (?l', ?r', ?sr');
         ?sr = sgn (ipoly ?p ?r) |]
      ==> EX! x. root_cond (?p, ?l', ?r') x",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 8, template_var 7)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 7),
                  template_var 4),
                template_var 6),
              template_var 5),
            template_var 3),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 0))),
        template_equation
         (template_var 3,
          template_app
           (template_hole 3,
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_hole 0),
                  template_var 7)),
              template_var 5)))],
       template_predicate (template_app (template_hole 12, t_empty)))),
    ("Real_Algebraic_Numbers.info_2_card",
     "[| invariant_2 ?x; info_2 ?x = Inr (?p, ?n) |]
      ==> poly_cond ?p &
          poly (real_of_int_poly ?p) (real_of_2 ?x) = 0 &
          2 <= degree ?p &
          card {y. y <= real_of_2 ?x & poly (real_of_int_poly ?p) y = 0} =
          ?n",
     template_implication
      ([template_predicate
         (template_app (template_hole 21, template_var 2)),
        template_equation
         (template_app (template_hole 19, template_var 2),
          template_app
           (template_hole 18,
            template_app
             (template_app (template_hole 17, template_var 1),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 16,
               template_app (template_hole 15, template_var 1)),
             template_app
              (template_app
                (template_hole 16,
                 template_app
                  (template_app
                    (template_hole 14,
                     template_app
                      (template_app
                        (template_hole 13,
                         template_app
                          (template_app
                            (template_hole 12, template_hole 11),
                           template_var 1)),
                       template_app (template_hole 10, template_var 2))),
                   template_hole 9)),
               template_app
                (template_app
                  (template_hole 16,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_hole 7,
                         template_app (template_hole 6, template_hole 5))),
                     template_app (template_hole 4, template_var 1))),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_hole 2,
                       template_app (template_hole 1, t_empty))),
                   template_var 0))))
           ))),
    ("Real_Algebraic_Numbers.gt_rat_sign_change",
     "[| EX! x. root_cond ?plr x; poly_cond2 (poly_real_alg_1 ?plr);
         rai_lb ?plr <= ?y; ?y <= rai_ub ?plr |]
      ==> (sgn (ipoly (poly_real_alg_1 ?plr) ?y) =
           sgn (ipoly (poly_real_alg_1 ?plr) (rai_ub ?plr))) =
          (real_of_1 ?plr < real_of_rat ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate
         (
            template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 1))
            ),
        template_inequation
         (less_equals, template_app (template_hole 10, template_var 1),
          template_var 0),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 9, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_app (template_hole 12, template_var 1))),
                 template_var 0))),
           template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app (template_hole 12, template_var 1))),
               template_app (template_hole 9, template_var 1)))),
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 1, t_empty)),
           template_app (template_hole 0, template_var 0))))),
    ("Real_Algebraic_Numbers.tighten_poly_bounds",
     "[| tighten_poly_bounds ?p ?l ?r ?sr = (?l', ?r', ?sr');
         EX! x. root_cond (?p, ?l, ?r) x; poly_cond2 ?p;
         ?sr = sgn (ipoly ?p ?r) |]
      ==> ?r' - ?l' = (?r - ?l) / 2",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 16, template_var 6),
                template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app (template_hole 15, template_var 2),
            template_app
             (template_app (template_hole 14, template_var 1),
              template_var 0))),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate
         (template_app (template_hole 10, template_var 6)),
        template_equation
         (template_var 3,
          template_app
           (template_hole 8,
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 6)),
              template_var 4)))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 4, template_var 4),
               template_var 5)),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Real_Algebraic_Numbers.tighten_poly_bounds_epsilon",
     "[| EX! x. root_cond (?p, ?l, ?r) x; poly_cond2 ?p;
         tighten_poly_bounds_epsilon ?p ?x ?l ?r ?sr = (?l', ?r', ?sr');
         ?sr = sgn (ipoly ?p ?r); 0 < ?x |]
      ==> ?r' - ?l' <= ?x",
     template_implication
      ([template_predicate (template_app (template_hole 16, t_empty)),
        template_predicate
         (template_app (template_hole 12, template_var 7)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 7),
                  template_var 4),
                template_var 6),
              template_var 5),
            template_var 3),
          template_app
           (template_app (template_hole 9, template_var 2),
            template_app
             (template_app (template_hole 13, template_var 1),
              template_var 0))),
        template_equation
         (template_var 3,
          template_app
           (template_hole 7,
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 7)),
              template_var 5))),
        template_inequation (less_than, template_hole 2, template_var 4)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_var 4))),
    ("Real_Algebraic_Numbers.unique_root_cong",
     "(!!x. [| real_of_rat ?l <= x; x <= real_of_rat ?r |]
            ==> (poly (real_of_int_poly ?p) x = 0) =
                (poly (real_of_int_poly ?q) x = 0)) ==>
      (EX! x. root_cond (?p, ?l, ?r) x) =
      (EX! x. root_cond (?q, ?l, ?r) x)",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_equation
        (template_app (template_hole 3, t_empty),
         template_app (template_hole 3, t_empty)))),
    ("Real_Algebraic_Numbers.the_unique_root_cong",
     "(!!x. [| real_of_rat ?l <= x; x <= real_of_rat ?r |]
            ==> (poly (real_of_int_poly ?p) x = 0) =
                (poly (real_of_int_poly ?q) x = 0)) ==>
      real_of_1 (?p, ?l, ?r) = real_of_1 (?q, ?l, ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_equation
        (template_app (template_hole 3, t_empty),
         template_app (template_hole 3, t_empty)))),
    ("Real_Algebraic_Numbers.tighten_poly_bounds_epsilon",
     "[| EX! x. root_cond (?p, ?l, ?r) x; poly_cond2 ?p;
         tighten_poly_bounds_epsilon ?p ?x ?l ?r ?sr = (?l', ?r', ?sr');
         ?sr = sgn (ipoly ?p ?r); 0 < ?x |]
      ==> ?sr' = sgn (ipoly ?p ?r')",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate
         (template_app (template_hole 10, template_var 7)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 7),
                  template_var 4),
                template_var 6),
              template_var 5),
            template_var 3),
          template_app
           (template_app (template_hole 7, template_var 2),
            template_app
             (template_app (template_hole 11, template_var 1),
              template_var 0))),
        template_equation
         (template_var 3,
          template_app
           (template_hole 5,
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_var 7)),
              template_var 5))),
        template_inequation (less_than, template_hole 0, template_var 4)],
       template_equation
        (template_var 0,
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 7)),
             template_var 1))))),
    ("Real_Algebraic_Numbers.tighten_poly_bounds",
     "[| tighten_poly_bounds ?p ?l ?r ?sr = (?l', ?r', ?sr');
         EX! x. root_cond (?p, ?l, ?r) x; poly_cond2 ?p;
         ?sr = sgn (ipoly ?p ?r) |]
      ==> root_cond (?p, ?l', ?r') (real_of_1 (?p, ?l, ?r))",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 12, template_var 6),
                template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app (template_hole 11, template_var 2),
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0))),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 6, template_var 6)),
        template_equation
         (template_var 3,
          template_app
           (template_hole 4,
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 6)),
              template_var 4)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 6),
                 template_app
                  (template_app (template_hole 10, template_var 2),
                   template_var 1))),
             template_app (template_hole 0, t_empty))
           ))),
    ("Real_Algebraic_Numbers.invariant_1_sub_interval",
     "[| invariant_1 (?p, ?l, ?r);
         root_cond (?p, ?l', ?r') (real_of_1 (?p, ?l, ?r)); ?l <= ?l';
         ?r' <= ?r |]
      ==> real_of_1 (?p, ?l', ?r') = real_of_1 (?p, ?l, ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 4),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_var 0))),
              template_app (template_hole 2, t_empty))
            ),
        template_inequation (less_equals, template_var 3, template_var 1),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_equation
        (template_app (template_hole 2, t_empty),
         template_app (template_hole 2, t_empty)))),
    ("Real_Algebraic_Numbers.tighten_poly_bounds_for_x",
     "[| EX! x. root_cond (?p, ?l, ?r) x; poly_cond2 ?p;
         tighten_poly_bounds_for_x ?p ?x ?l ?r ?sr = (?l', ?r', ?sr');
         ?sr = sgn (ipoly ?p ?r) |]
      ==> root_cond (?p, ?l', ?r') (real_of_1 (?p, ?l, ?r))",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 9, template_var 7)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 7),
                  template_var 4),
                template_var 6),
              template_var 5),
            template_var 3),
          template_app
           (template_app (template_hole 6, template_var 2),
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0))),
        template_equation
         (template_var 3,
          template_app
           (template_hole 4,
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 7)),
              template_var 5)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 11, template_var 7),
                 template_app
                  (template_app (template_hole 10, template_var 2),
                   template_var 1))),
             template_app (template_hole 0, t_empty))
           ))),
    ("Real_Algebraic_Numbers.unique_root_sub_interval",
     "[| EX! x. root_cond (?p, ?l, ?r) x;
         root_cond (?p, ?l', ?r') (real_of_1 (?p, ?l, ?r)); ?l <= ?l';
         ?r' <= ?r |]
      ==> real_of_1 (?p, ?l', ?r') = real_of_1 (?p, ?l, ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_var 0))),
              template_app (template_hole 2, t_empty))
            ),
        template_inequation (less_equals, template_var 3, template_var 1),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_equation
        (template_app (template_hole 2, t_empty),
         template_app (template_hole 2, t_empty)))),
    ("Real_Algebraic_Numbers.tighten_poly_bounds_epsilon",
     "[| EX! x. root_cond (?p, ?l, ?r) x; poly_cond2 ?p;
         tighten_poly_bounds_epsilon ?p ?x ?l ?r ?sr = (?l', ?r', ?sr');
         ?sr = sgn (ipoly ?p ?r); 0 < ?x |]
      ==> root_cond (?p, ?l', ?r') (real_of_1 (?p, ?l, ?r))",
     template_implication
      ([template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate
         (template_app (template_hole 11, template_var 7)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 7),
                  template_var 4),
                template_var 6),
              template_var 5),
            template_var 3),
          template_app
           (template_app (template_hole 8, template_var 2),
            template_app
             (template_app (template_hole 12, template_var 1),
              template_var 0))),
        template_equation
         (template_var 3,
          template_app
           (template_hole 6,
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_var 7)),
              template_var 5))),
        template_inequation (less_than, template_hole 1, template_var 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 13, template_var 7),
                 template_app
                  (template_app (template_hole 12, template_var 2),
                   template_var 1))),
             template_app (template_hole 0, t_empty))
           ))),
    ("Real_Algebraic_Numbers.real_alg_2'_code",
     "real_alg_2' ?ri ?p ?l ?r =
      (if degree ?p = 1
       then Rational (Rat.Fract (- coeff ?p 0) (coeff ?p 1))
       else case normalize_bounds_1
                  (case tighten_poly_bounds_for_x ?p 0 ?l ?r
                         (sgn (ipoly ?p ?r)) of
                   (l', r', sr') => (?p, l', r')) of
            (p', l, r) =>
              Irrational (root_info.number_root ?ri r) (p', l, r))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 24, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 23,
                 template_app
                  (template_app
                    (template_hole 22,
                     template_app (template_hole 21, template_var 2)),
                   template_hole 20)),
               template_app
                (template_hole 19,
                 template_app
                  (template_app
                    (template_hole 18,
                     template_app
                      (template_hole 17,
                       template_app
                        (template_app (template_hole 16, template_var 2),
                         template_hole 15))),
                   template_app
                    (template_app (template_hole 16, template_var 2),
                     template_hole 20)))),
             template_app
              (template_app (template_hole 14, t_empty),
               template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, t_empty),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 5, template_var 2),
                           template_hole 4),
                         template_var 1),
                       template_var 0),
                     template_app
                      (template_hole 3,
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app
                            (template_app
                              (template_hole 1, template_hole 0),
                             template_var 2)),
                         template_var 0)))))))
           ))),
    ("Real_Algebraic_Numbers.invariant_1E",
     "[| invariant_1 ?plr;
         [| root_cond ?plr (real_of_1 ?plr);
            sgn (rai_lb ?plr) = sgn (rai_ub ?plr);
            sgn (real_of_1 ?plr) = real_of_rat (sgn (rai_ub ?plr));
            EX! x. root_cond ?plr x; poly_cond (poly_real_alg_1 ?plr);
            0 < degree (poly_real_alg_1 ?plr);
            primitive (poly_real_alg_1 ?plr) |]
         ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 1)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 15, template_var 1),
                 template_app (template_hole 14, t_empty))
               )],
          template_implication
           ([template_equation
              (template_app
                (template_hole 12,
                 template_app (template_hole 11, template_var 1)),
               template_app
                (template_hole 12,
                 template_app (template_hole 10, template_var 1)))],
            template_implication
             ([template_equation
                (template_app
                  (template_hole 8,
                   template_app (template_hole 14, t_empty)),
                 template_app
                  (template_hole 7,
                   template_app
                    (template_hole 12,
                     template_app (template_hole 10, template_var 1))))],
              template_implication
               ([template_predicate
                  (template_app (template_hole 6, t_empty))],
                template_implication
                 ([template_predicate
                    (
                       template_app
                        (template_hole 5,
                         template_app (template_hole 4, template_var 1))
                       )],
                  template_implication
                   ([template_inequation
                      (less_than, template_hole 2,
                       template_app
                        (template_hole 1,
                         template_app (template_hole 4, template_var 1)))],
                    template_implication
                     ([template_predicate
                        (
                           template_app
                            (template_hole 0,
                             template_app (template_hole 4, template_var 1))
                           )],
                      template_predicate (template_var 0))))))))],
       template_predicate (template_var 0))),
    ("Real_Algebraic_Numbers.gt_rat_sign_change_square_free",
     "[| EX! x. root_cond ?plr x; square_free (poly_real_alg_1 ?plr);
         rai_lb ?plr <= ?y; ?y <= rai_ub ?plr;
         ipoly (poly_real_alg_1 ?plr) ?y ~= 0;
         ipoly (poly_real_alg_1 ?plr) (rai_ub ?plr) ~= 0 |]
      ==> (sgn (ipoly (poly_real_alg_1 ?plr) ?y) =
           sgn (ipoly (poly_real_alg_1 ?plr) (rai_ub ?plr))) =
          (real_of_1 ?plr < real_of_rat ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate
         (
            template_app
             (template_hole 15,
              template_app (template_hole 14, template_var 1))
            ),
        template_inequation
         (less_equals, template_app (template_hole 12, template_var 1),
          template_var 0),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 11, template_var 1)),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_app (template_hole 14, template_var 1))),
                template_var 0),
              template_hole 5)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_app (template_hole 14, template_var 1))),
                template_app (template_hole 11, template_var 1)),
              template_hole 5)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     template_app (template_hole 14, template_var 1))),
                 template_var 0))),
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app (template_hole 14, template_var 1))),
               template_app (template_hole 11, template_var 1)))),
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 1, t_empty)),
           template_app (template_hole 0, template_var 0))))),
    ("Real_Algebraic_Numbers.tighten_bound_root",
     "[| sgn ?il = 1; 0 <= real_of_1 ?x;
         real_of_rat ?il <= root ?n (real_of_1 ?x);
         root ?n (real_of_1 ?x) <= real_of_rat ?ir; invariant_1 ?x;
         ?cmpx = compare_1_rat ?x; ?n ~= 0 |]
      ==> converges_to (%i. (tighten_bound_root ?n ?cmpx ^^ i) (?il, ?ir))
           (root ?n (real_of_1 ?x))",
     template_implication
      ([template_equation
         (template_app (template_hole 17, template_var 4),
          template_hole 16),
        template_inequation
         (less_equals, template_hole 14,
          template_app (template_hole 13, t_empty)),
        template_inequation
         (less_equals, template_app (template_hole 11, template_var 4),
          template_app
           (template_app (template_hole 10, template_var 2),
            template_app (template_hole 13, t_empty))),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 10, template_var 2),
            template_app (template_hole 13, t_empty)),
          template_app (template_hole 11, template_var 1)),
        template_predicate (template_app (template_hole 9, template_var 3)),
        template_equation
         (template_var 0, template_app (template_hole 7, template_var 3)),
        template_negation
         (template_equation (template_var 2, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app (template_hole 10, template_var 2),
               template_app (template_hole 13, t_empty)))
           ))),
    ("Real_Algebraic_Numbers.unique_rootE",
     "[| EX! x. root_cond ?plr x;
         [| real_of_rat (rai_lb ?plr) <= real_of_1 ?plr;
            real_of_1 ?plr <= real_of_rat (rai_ub ?plr);
            poly (real_of_int_poly (poly_real_alg_1 ?plr))
             (real_of_1 ?plr) =
            0;
            root_cond ?plr (real_of_1 ?plr);
            !!y. (real_of_1 ?plr = y) = root_cond ?plr y;
            !!y. (y = real_of_1 ?plr) = root_cond ?plr y |]
         ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty)),
        template_implication
         ([template_inequation
            (less_equals,
             template_app
              (template_hole 11,
               template_app (template_hole 10, template_var 1)),
             template_app (template_hole 9, t_empty))],
          template_implication
           ([template_inequation
              (less_equals, template_app (template_hole 9, t_empty),
               template_app
                (template_hole 11,
                 template_app (template_hole 8, template_var 1)))],
            template_implication
             ([template_equation
                (template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_hole 4),
                       template_app (template_hole 3, template_var 1))),
                   template_app (template_hole 9, t_empty)),
                 template_hole 2)],
              template_implication
               ([template_predicate
                  (
                     template_app
                      (template_app (template_hole 13, template_var 1),
                       template_app (template_hole 9, t_empty))
                     )],
                template_implication
                 ([template_predicate
                    (template_app (template_hole 1, t_empty))],
                  template_implication
                   ([template_predicate
                      (template_app (template_hole 1, t_empty))],
                    template_predicate (template_var 0)))))))],
       template_predicate (template_var 0))),
    ("Real_Algebraic_Numbers.compare_1",
     "[| EX! x. root_cond (?p1.0, ?l1.0, ?r1.0) x;
         EX! x. root_cond (?p2.0, ?l2.0, ?r2.0) x; poly_cond2 ?p1.0;
         poly_cond2 ?p2.0;
         real_of_1 (?p1.0, ?l1.0, ?r1.0) ~= real_of_1 (?p2.0, ?l2.0, ?r2.0);
         ?sr1.0 = sgn (ipoly ?p1.0 ?r1.0);
         ?sr2.0 = sgn (ipoly ?p2.0 ?r2.0) |]
      ==> compare_1 ?p1.0 ?p2.0 ?l1.0 ?r1.0 ?sr1.0 ?l2.0 ?r2.0 ?sr2.0 =
          compare (real_of_1 (?p1.0, ?l1.0, ?r1.0))
           (real_of_1 (?p2.0, ?l2.0, ?r2.0))",
     template_implication
      ([template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate
         (template_app (template_hole 11, template_var 7)),
        template_predicate
         (template_app (template_hole 11, template_var 4)),
        template_negation
         (
            template_equation
             (template_app (template_hole 8, t_empty),
              template_app (template_hole 8, t_empty))
            ),
        template_equation
         (template_var 1,
          template_app
           (template_hole 6,
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_var 7)),
              template_var 5))),
        template_equation
         (template_var 0,
          template_app
           (template_hole 6,
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_var 4)),
              template_var 2)))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 7),
                       template_var 4),
                     template_var 6),
                   template_var 5),
                 template_var 1),
               template_var 3),
             template_var 2),
           template_var 0),
         template_app
          (template_app
            (template_hole 0, template_app (template_hole 8, t_empty)),
           template_app (template_hole 8, t_empty))))),
    ("Real_Algebraic_Numbers.root_sign_change",
     "[| poly ?p ?x = 0; poly (pderiv ?p) ?x ~= 0;
         !!d. [| 0 < d; sgn (poly ?p (?x - d)) ~= sgn (poly ?p (?x + d));
                 sgn (poly ?p (?x - d)) ~= 0; 0 ~= sgn (poly ?p (?x + d));
                 ALL d'>0.
                    d' <= d -->
                    sgn (poly ?p (?x + d')) = sgn (poly ?p (?x + d)) &
                    sgn (poly ?p (?x - d')) = sgn (poly ?p (?x - d)) |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 12, template_var 2),
            template_var 1),
          template_hole 11),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 9, template_var 2)),
                template_var 1),
              template_hole 11)
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_var 0))),
    ("Real_Algebraic_Numbers.select_correct_factor",
     "[| converges_to (%i. ?bnd_get ((?bnd_update ^^ i) ?init)) ?x;
         select_correct_factor ?bnd_update ?bnd_get ?init ?polys =
         ((?q, ?ri), ?l, ?r);
         !!q ri. (q, ri) : set ?polys ==> root_info_cond ri q;
         !!q ri. (q, ri) : set ?polys ==> q ~= 0;
         EX q. q : fst ` set ?polys & poly (real_of_int_poly q) ?x = 0;
         distinct (map fst ?polys);
         !!x. EX q. q : fst ` set ?polys &
                    poly (real_of_int_poly q) x = 0 ==>
              EX! q.
                 q : fst ` set ?polys & poly (real_of_int_poly q) x = 0 |]
      ==> (EX! x. root_cond (?q, ?l, ?r) x) &
          (?q, ?ri) : set ?polys & ?x = real_of_1 (?q, ?l, ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 32, t_empty), template_var 5)
            ),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 29, template_var 7),
                template_var 8),
              template_var 6),
            template_var 4),
          template_app
           (template_app
             (template_hole 28,
              template_app
               (template_app (template_hole 27, template_var 3),
                template_var 2)),
            template_app
             (template_app (template_hole 26, template_var 1),
              template_var 0))),
        template_predicate (template_app (template_hole 25, t_empty)),
        template_predicate (template_app (template_hole 25, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_hole 13),
                template_var 4))
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 16, template_app (template_hole 3, t_empty)),
             template_app
              (template_app
                (template_hole 16,
                 template_app
                  (template_app
                    (template_hole 23,
                     template_app
                      (template_app (template_hole 27, template_var 3),
                       template_var 2)),
                   template_app (template_hole 22, template_var 4))),
               template_app
                (template_app (template_hole 12, template_var 5),
                 template_app (template_hole 0, t_empty))))
           ))),
    ("Real_Algebraic_Numbers.select_correct_factor_main",
     "[| converges_to ?f ?x; at_step ?bnd_update ?bnd_get ?f ?i ?a;
         select_correct_factor_main ?bnd_update ?bnd_get ?a ?todo ?old ?l ?r
          ?n =
         ((?q, ?ri_fin), ?l_fin, ?r_fin);
         ?bnd_get ?a = (?l, ?r);
         !!q ri. (q, ri) : set ?todo Un set ?old ==> root_info_cond ri q;
         !!q ri. (q, ri) : set ?todo Un set ?old ==> q ~= 0;
         EX q. q : fst ` set ?todo Un fst ` set ?old &
               poly (real_of_int_poly q) ?x = 0;
         distinct (map fst (?todo @ ?old));
         !!q ri. (q, ri) : set ?old ==> root_info.l_r ri ?l ?r ~= 0;
         !!x. EX q. q : fst ` set ?todo Un fst ` set ?old &
                    poly (real_of_int_poly q) x = 0 ==>
              EX! q.
                 q : fst ` set ?todo Un fst ` set ?old &
                 poly (real_of_int_poly q) x = 0;
         ?n = (SUM (q, ri)<-?old. root_info.l_r ri ?l ?r) |]
      ==> (EX! x. root_cond (?q, ?l_fin, ?r_fin) x) &
          (?q, ?ri_fin) : set ?todo Un set ?old &
          ?x = real_of_1 (?q, ?l_fin, ?r_fin)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 42, template_var 14),
              template_var 13)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 41, template_var 12),
                    template_var 11),
                  template_var 14),
                template_var 10),
              template_var 9)
            ),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 39, template_var 12),
                        template_var 11),
                      template_var 9),
                    template_var 8),
                  template_var 7),
                template_var 6),
              template_var 5),
            template_var 4),
          template_app
           (template_app
             (template_hole 38,
              template_app
               (template_app (template_hole 37, template_var 3),
                template_var 2)),
            template_app
             (template_app (template_hole 36, template_var 1),
              template_var 0))),
        template_equation
         (template_app (template_var 11, template_var 9),
          template_app
           (template_app (template_hole 36, template_var 6),
            template_var 5)),
        template_predicate (template_app (template_hole 34, t_empty)),
        template_predicate (template_app (template_hole 34, t_empty)),
        template_predicate (template_app (template_hole 25, t_empty)),
        template_predicate
         (
            template_app
             (template_hole 14,
              template_app
               (template_app (template_hole 13, template_hole 20),
                template_app
                 (template_app (template_hole 12, template_var 8),
                  template_var 7)))
            ),
        template_predicate (template_app (template_hole 34, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_equation
         (template_var 4,
          template_app
           (template_hole 6,
            template_app
             (template_app
               (template_hole 5, template_app (template_hole 4, t_empty)),
              template_var 7)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 24, template_app (template_hole 3, t_empty)),
             template_app
              (template_app
                (template_hole 24,
                 template_app
                  (template_app
                    (template_hole 32,
                     template_app
                      (template_app (template_hole 37, template_var 3),
                       template_var 2)),
                   template_app
                    (template_app
                      (template_hole 31,
                       template_app (template_hole 30, template_var 8)),
                     template_app (template_hole 30, template_var 7)))),
               template_app
                (template_app (template_hole 19, template_var 13),
                 template_app (template_hole 0, t_empty))))
           ))),
    ("Real_Algebraic_Numbers.tighten_poly_bounds_binary",
     "[| EX! x. root_cond (?p1.0, ?l1.0, ?r1.0) x;
         EX! x. root_cond (?p2.0, ?l2.0, ?r2.0) x; poly_cond2 ?p1.0;
         poly_cond2 ?p2.0;
         !!l1 r1 l2 r2 l r sr1 sr2.
            [| ?I l1; ?I l2;
               root_cond (?p1.0, l1, r1) (real_of_1 (?p1.0, ?l1.0, ?r1.0));
               root_cond (?p2.0, l2, r2) (real_of_1 (?p2.0, ?l2.0, ?r2.0));
               ?bnd ((l1, r1, sr1), l2, r2, sr2) = (l, r) |]
            ==> real_of_rat l
                <= ?f (real_of_1 (?p1.0, ?l1.0, ?r1.0))
                    (real_of_1 (?p2.0, ?l2.0, ?r2.0)) &
                ?f (real_of_1 (?p1.0, ?l1.0, ?r1.0))
                 (real_of_1 (?p2.0, ?l2.0, ?r2.0))
                <= real_of_rat r;
         !!l1 r1 l2 r2 l1' r1' l2' r2' l l' r r' sr1 sr2 sr1' sr2'.
            [| ?I l1; ?I l2; l1 <= r1; l2 <= r2;
               (l, r) = ?bnd ((l1, r1, sr1), l2, r2, sr2);
               (l', r') = ?bnd ((l1', r1', sr1'), l2', r2', sr2');
               (l1', r1') : {(l1, (l1 + r1) / 2), ((l1 + r1) / 2, r1)};
               (l2', r2') : {(l2, (l2 + r2) / 2), ((l2 + r2) / 2, r2)} |]
            ==> r' - l' <= 3 / 4 * (r - l) & l <= l' & r' <= r;
         !!l l'. [| ?I l; l <= l' |] ==> ?I l'; ?I ?l1.0; ?I ?l2.0;
         ?sr1.0 = sgn (ipoly ?p1.0 ?r1.0);
         ?sr2.0 = sgn (ipoly ?p2.0 ?r2.0) |]
      ==> converges_to
           (%i. ?bnd
                 ((tighten_poly_bounds_binary ?p1.0 ?p2.0 ^^ i)
                   ((?l1.0, ?r1.0, ?sr1.0), ?l2.0, ?r2.0, ?sr2.0)))
           (?f (real_of_1 (?p1.0, ?l1.0, ?r1.0))
             (real_of_1 (?p2.0, ?l2.0, ?r2.0)))",
     template_implication
      ([template_predicate (template_app (template_hole 32, t_empty)),
        template_predicate (template_app (template_hole 32, t_empty)),
        template_predicate
         (template_app (template_hole 28, template_var 10)),
        template_predicate
         (template_app (template_hole 28, template_var 7)),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_predicate (template_app (template_var 4, template_var 9)),
        template_predicate (template_app (template_var 4, template_var 6)),
        template_equation
         (template_var 1,
          template_app
           (template_hole 6,
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_var 10)),
              template_var 8))),
        template_equation
         (template_var 0,
          template_app
           (template_hole 6,
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_var 7)),
              template_var 5)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty),
             template_app
              (template_app
                (template_var 2, template_app (template_hole 26, t_empty)),
               template_app (template_hole 26, t_empty)))
           )))]
