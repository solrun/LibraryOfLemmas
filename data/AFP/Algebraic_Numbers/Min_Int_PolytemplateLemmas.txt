   [("Min_Int_Poly.min_int_poly_irreducible",
     "irreducible (min_int_poly ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Min_Int_Poly.min_int_poly_prime_elem", "prime_elem (min_int_poly ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Min_Int_Poly.min_int_poly_prime", "prime (min_int_poly ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Min_Int_Poly.min_int_poly_primitive", "primitive (min_int_poly ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Min_Int_Poly.min_int_poly_nonzero", "min_int_poly ?x ~= 0",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Min_Int_Poly.min_int_poly_content", "content (min_int_poly ?x) = 1",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Min_Int_Poly.degree_min_int_poly_pos", "0 < degree (min_int_poly ?x)",
     template_inequation
      (less_than, template_hole 2,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Min_Int_Poly.degree_min_int_poly_nonzero",
     "degree (min_int_poly ?x) ~= 0",
     template_negation
      (
         template_equation
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("Min_Int_Poly.min_int_poly_of_rat",
     "min_int_poly (of_rat ?r) = poly_rat ?r",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Min_Int_Poly.min_int_poly_real_basic_impl",
     "min_int_poly_real (real_of_rat ?x) = poly_rat ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Min_Int_Poly.min_int_poly_normalize",
     "normalize (min_int_poly ?x) = min_int_poly ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Min_Int_Poly.lead_coeff_min_int_poly_pos",
     "0 < lead_coeff (min_int_poly ?x)",
     template_inequation
      (less_than, template_hole 3,
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 0,
           template_app (template_hole 1, template_var 0))))),
    ("Min_Int_Poly.min_int_poly_represents",
     "algebraic ?x ==> min_int_poly ?x represents ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 0)
           ))),
    ("Min_Int_Poly.min_int_poly_of_int",
     "min_int_poly (of_int ?n) = [:- of_int ?n, 1:]",
     template_equation
      (template_app
        (template_hole 6, template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0))),
         template_app
          (template_app (template_hole 4, template_hole 1),
           template_hole 0)))),
    ("Min_Int_Poly.min_int_poly_of_nat",
     "min_int_poly (of_nat ?n) = [:- int ?n, 1:]",
     template_equation
      (template_app
        (template_hole 6, template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0))),
         template_app
          (template_app (template_hole 4, template_hole 1),
           template_hole 0)))),
    ("Min_Int_Poly.ipoly_min_int_poly",
     "algebraic ?x ==> ipoly (min_int_poly ?x) ?x = (0::?'a)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 0))),
           template_var 0),
         template_hole 0))),
    ("Min_Int_Poly.poly_min_int_poly_0_eq_0_iff",
     "algebraic ?x ==> (poly (min_int_poly ?x) 0 = 0) = (?x = (0::?'a))",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             template_hole 2),
           template_hole 2),
         template_equation (template_var 0, template_hole 0)))),
    ("Min_Int_Poly.min_int_poly_unique",
     "[| ?p represents ?x; irreducible ?p; 0 < lead_coeff ?p |]
      ==> min_int_poly ?x = ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 6, template_var 1)),
        template_inequation
         (less_than, template_hole 4,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_app (template_hole 2, template_var 1)))],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Min_Int_Poly.min_int_poly_eqI",
     "[| ?p represents ?x; irreducible ?p; 0 <= lead_coeff ?p |]
      ==> min_int_poly ?x = ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 6, template_var 1)),
        template_inequation
         (less_equals, template_hole 4,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_app (template_hole 2, template_var 1)))],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 1)))]
