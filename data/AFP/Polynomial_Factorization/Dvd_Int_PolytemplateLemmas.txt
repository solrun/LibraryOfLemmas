   [("Dvd_Int_Poly.dvd_int_poly", "dvd_int_poly ?q ?p = (?q dvd ?p)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Dvd_Int_Poly.pCons_of_rp_contains_ints",
     "of_int_poly ?a = pCons ?b ?c ==> is_int_rat ?b",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_hole 2),
            template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Dvd_Int_Poly.div_int_then_rqp",
     "div_int_poly ?p ?q = Some ?r ==> ?q ~= 0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 2), template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_negation
        (template_equation (template_var 1, template_hole 0)))),
    ("Dvd_Int_Poly.dvd_int_poly_non_0",
     "?q ~= 0 ==> dvd_int_poly_non_0 ?q ?p = (?q dvd ?p)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Dvd_Int_Poly.div_int_then_rqp",
     "div_int_poly ?p ?q = Some ?r ==> ?r * ?q = ?p",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 2))),
    ("Dvd_Int_Poly.div_mod_int_poly_then_pdivmod",
     "div_mod_int_poly ?p ?q = Some (?r, ?m) ==> ?q ~= 0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 3), template_var 2),
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)))],
       template_negation
        (template_equation (template_var 2, template_hole 0)))),
    ("Dvd_Int_Poly.div_int_poly_step_surjective",
     "Some ?a = div_int_poly_step ?q ?b ?c ==> EX c'. ?c = Some c'",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 3),
          template_app
           (template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1),
            template_var 0))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Dvd_Int_Poly.div_int_poly",
     "(div_int_poly ?p ?q = Some ?r) = (?q ~= 0 & ?p = ?r * ?q)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, template_var 2), template_var 1),
         template_app (template_hole 5, template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_hole 1))),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Dvd_Int_Poly.is_int_rat_division",
     "?y ~= 0 ==>
      is_int_rat (rat_of_int ?x / rat_of_int ?y) = (?x mod ?y = 0)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 0)),
                  template_app (template_hole 1, template_var 1)))
              )],
         template_equation
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1),
           template_hole 5)))),
    ("Dvd_Int_Poly.rqp_then_div_int",
     "[| ?r * ?q = ?p; ?q ~= 0 |] ==> div_int_poly ?p ?q = Some ?r",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_var 0),
        template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app (template_hole 0, template_var 2)))),
    ("Dvd_Int_Poly.div_mod_int_poly_then_pdivmod",
     "div_mod_int_poly ?p ?q = Some (?r, ?m) ==>
      (of_int_poly ?p div of_int_poly ?q,
       of_int_poly ?p mod of_int_poly ?q) =
      (of_int_poly ?r, of_int_poly ?m)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 8, template_var 3), template_var 2),
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 3)),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 2))),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 3)),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0))))),
    ("Dvd_Int_Poly.int_step_then_rat_poly_step",
     "Some (?a1.0, ?a2.0) =
      div_int_poly_step ?q ?b (Some (?c1.0, ?c2.0)) ==>
      (of_int_poly ?a1.0, of_int_poly ?a2.0) =
      (div_rat_poly_step (of_int_poly ?q) o rat_of_int) ?b
       (of_int_poly ?c1.0, of_int_poly ?c2.0)",
     template_implication
      ([template_equation
         (template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4)),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2),
            template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0))))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 5)),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 4)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_var 3))),
               template_hole 2),
             template_var 2),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 0)))))),
    ("Dvd_Int_Poly.div_rat_poly_step_sur",
     "(case ?a of (a, b) => (of_int_poly a, of_int_poly b)) =
      (div_rat_poly_step (of_int_poly ?q) o rat_of_int) ?x ?pair ==>
      EX c'. ?pair = (case c' of (a, b) => (of_int_poly a, of_int_poly b))",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, t_empty), template_var 3),
          template_app
           (template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_hole 1,
                    template_app
                     (template_app (template_hole 4, template_hole 3),
                      template_var 2))),
                template_hole 3),
              template_var 1),
            template_var 0))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Dvd_Int_Poly.pdivmod_then_div_mod_int_poly",
     "[| ?q ~= 0;
         (of_int_poly ?p div of_int_poly ?q,
          of_int_poly ?p mod of_int_poly ?q) =
         (of_int_poly ?r, of_int_poly ?m) |]
      ==> div_mod_int_poly ?p ?q = Some (?r, ?m)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 10)),
        template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_var 2)),
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 3))),
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 2)),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 3))),
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 1)),
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 0)))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 3),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Dvd_Int_Poly.rat_step_then_int_poly_step",
     "[| ?q ~= 0;
         (of_int_poly ?a1.0, of_int_poly ?a2.0) =
         (div_rat_poly_step (of_int_poly ?q) o rat_of_int) ?b2.0
          (of_int_poly ?c1.0, of_int_poly ?c2.0) |]
      ==> Some (?a1.0, ?a2.0) =
          div_int_poly_step ?q ?b2.0 (Some (?c1.0, ?c2.0))",
     template_implication
      ([template_negation
         (template_equation (template_var 5, template_hole 10)),
        template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_var 4)),
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 3)),
          template_app
           (template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 7, template_hole 6),
                      template_var 5))),
                template_hole 6),
              template_var 2),
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_var 1)),
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_var 0))))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 4),
             template_var 3)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 5),
             template_var 2),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)))))),
    ("Dvd_Int_Poly.rat_int_poly_step_agree",
     "coeff (pCons ?b ?c2.0) (degree ?q) mod lead_coeff ?q = 0 ==>
      ((of_int_poly ?a1.0, of_int_poly ?a2.0) =
       (div_rat_poly_step (of_int_poly ?q) o rat_of_int) ?b
        (of_int_poly ?c1.0, of_int_poly ?c2.0)) =
      (Some (?a1.0, ?a2.0) =
       div_int_poly_step ?q ?b (Some (?c1.0, ?c2.0)))",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 15,
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 13, template_var 5),
                    template_var 4)),
                template_app (template_hole 12, template_var 3))),
            template_app
             (template_app (template_hole 14, template_var 3),
              template_app (template_hole 12, template_var 3))),
          template_hole 11)],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_var 2)),
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_var 1)),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 7, template_hole 6),
                       template_var 3))),
                 template_hole 6),
               template_var 5),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_var 0)),
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_var 4)))),
         template_equation
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 5),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 4))))))),
    ("Dvd_Int_Poly.foldr_cong_plus",
     "[| !!a b c.
            [| b : ?s; ?f' a = ?f b (?f' c) |] ==> ?g' a = ?g b (?g' c);
         !!a b. ?f' a = ?f' b ==> a = b;
         !!a b c. ?f' a = ?f b c ==> EX c'. c = ?f' c'; set ?lst <= ?s;
         ?f' ?a = foldr ?f ?lst (?f' ?b) |]
      ==> ?g' ?a = foldr ?g ?lst (?g' ?b)",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 2),
          template_var 7),
        template_equation
         (template_app (template_var 6, template_var 1),
          template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 2),
            template_app (template_var 6, template_var 0)))],
       template_equation
        (template_app (template_var 4, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_app (template_var 4, template_var 0)))))]
