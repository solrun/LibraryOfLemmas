   [("Square_Free_Factorization.square_free_iff_separable",
     "square_free ?f = separable ?f",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Square_Free_Factorization.irreducible\<^sub>d_square_free",
     "irreducible\<^sub>d ?p ==> square_free ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Square_Free_Factorization.rsquarefree_square_free_complex",
     "rsquarefree ?p ==> square_free ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Square_Free_Factorization.separable_imp_square_free",
     "separable ?f ==> square_free ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Square_Free_Factorization.square_free_rsquarefree",
     "square_free ?f ==> rsquarefree ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Square_Free_Factorization.square_free_imp_separable",
     "square_free ?f ==> separable ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Square_Free_Factorization.yun_factorization_0",
     "yun_factorization ?Gcd 0 = (0::?'a, [])",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 0), template_hole 3),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_hole 0))),
    ("Square_Free_Factorization.square_free_multD",
     "square_free (?f * ?g) ==> square_free ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 1, template_var 1)))),
    ("Square_Free_Factorization.square_free_multD",
     "square_free (?f * ?g) ==> square_free ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("Square_Free_Factorization.square_free_factorizationD",
     "square_free_factorization ?p (?c, ?bs) ==> distinct ?bs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Square_Free_Factorization.yun_factorization",
     "yun_factorization gcd ?p = ?c_bs ==>
      square_free_factorization ?p ?c_bs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_hole 1),
            template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Square_Free_Factorization.square_free_factor",
     "[| ?a dvd ?p; square_free ?p |] ==> square_free ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Square_Free_Factorization.square_free_factorizationD'",
     "square_free_factorization ?p (?c, ?bs) ==>
      square_free (prod_list (map fst ?bs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)))
           ))),
    ("Square_Free_Factorization.square_free_poly",
     "(poly (square_free_poly gcd ?p) ?x = (0::?'a)) =
      (poly ?p ?x = (0::?'a))",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1)),
           template_var 0),
         template_hole 0),
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_hole 0))),
    ("Square_Free_Factorization.square_free_smult_iff",
     "?c ~= (0::?'a) ==> square_free (smult ?c ?f) = square_free ?f",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Square_Free_Factorization.constant_square_free_factorization",
     "degree ?p = 0 ==> square_free_factorization ?p (coeff ?p 0, [])",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0), template_hole 4)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 4)),
               template_hole 0))
           ))),
    ("Square_Free_Factorization.monic_factorization",
     "monic ?p ==> EX as. monic_factorization as ?p",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 0),
            template_app (template_hole 3, template_var 0)),
          template_hole 2)],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Square_Free_Factorization.square_free_smult",
     "[| ?c ~= (0::?'a); square_free ?f |] ==> square_free (smult ?c ?f)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Square_Free_Factorization.prod_list_pow_suc",
     "(PROD x<-?bs. x * x ^ ?i) = prod_list ?bs * prod_list ?bs ^ ?i",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 0)),
           template_var 1)))),
    ("Square_Free_Factorization.yun_monic_factorization",
     "[| yun_gcd.yun_monic_factorization gcd ?p = ?bs; monic ?p |]
      ==> distinct (map snd ?bs)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 8, template_hole 7),
            template_var 1),
          template_var 0),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 1),
            template_app (template_hole 4, template_var 1)),
          template_hole 3)],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Square_Free_Factorization.square_free_factorizationD",
     "[| square_free_factorization ?p (?c, ?bs); ?p = 0 |]
      ==> ?c = (0::?'a) & ?bs = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0))
            ),
        template_equation (template_var 2, template_hole 5)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Square_Free_Factorization.square_free_factorizationD'",
     "[| square_free_factorization ?p (?c, ?bs); ?p = 0 |]
      ==> ?c = (0::?'a) & ?bs = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0))
            ),
        template_equation (template_var 2, template_hole 5)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Square_Free_Factorization.square_free_square_free_factorization",
     "[| square_free ?p; degree ?p ~= 0 |]
      ==> square_free_factorization ?p (1::?'a, [(?p, 0)])",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_negation
         (
            template_equation
             (template_app (template_hole 7, template_var 0),
              template_hole 6)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 0),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_hole 6)),
                 template_hole 0)))
           ))),
    ("Square_Free_Factorization.yun_monic_factorization",
     "[| yun_gcd.yun_monic_factorization gcd ?p = ?bs; monic ?p |]
      ==> square_free_factorization ?p (1::?'a, ?bs)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_hole 6),
            template_var 1),
          template_var 0),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 1),
            template_app (template_hole 3, template_var 1)),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_hole 2),
               template_var 0))
           ))),
    ("Square_Free_Factorization.square_free_factorizationD'",
     "[| square_free_factorization ?p (?c, ?bs); (?b, ?i) : set ?bs |]
      ==> degree ?b ~= 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_app
               (template_app (template_hole 7, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0)),
              template_app (template_hole 4, template_var 2))
            )],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 1),
             template_hole 0)
           ))),
    ("Square_Free_Factorization.square_free_multD",
     "[| square_free (?f * ?g); ?h dvd ?f; ?h dvd ?g |] ==> degree ?h = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Square_Free_Factorization.square_free_factorizationD",
     "square_free_factorization ?p (?c, ?bs) ==>
      ?p = smult ?c (PROD (a, i):set ?bs. a ^ Suc i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app
              (template_hole 4, template_app (template_hole 3, t_empty)),
             template_app (template_hole 0, template_var 0)))))),
    ("Square_Free_Factorization.square_free_factorization_prod_list",
     "square_free_factorization ?p (?c, ?bs) ==>
      ?p = smult ?c (PROD (a, i)<-?bs. a ^ Suc i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3, template_app (template_hole 2, t_empty)),
               template_var 0)))))),
    ("Square_Free_Factorization.square_free_factorizationD'",
     "square_free_factorization ?p (?c, ?bs) ==>
      ?p = smult ?c (PROD (a, i)<-?bs. a ^ Suc i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3, template_app (template_hole 2, t_empty)),
               template_var 0)))))),
    ("Square_Free_Factorization.square_free_monic_poly",
     "monic ?p ==>
      (poly (yun_gcd.square_free_monic_poly gcd ?p) ?x = (0::?'a)) =
      (poly ?p ?x = (0::?'a))",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_var 1),
            template_app (template_hole 6, template_var 1)),
          template_hole 5)],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1)),
             template_var 0),
           template_hole 0),
         template_equation
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0),
           template_hole 0)))),
    ("Square_Free_Factorization.square_free_prod_list_distinct",
     "[| square_free (prod_list ?us); !!u. u : set ?us ==> 0 < degree u |]
      ==> distinct ?us",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 0))
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Square_Free_Factorization.square_free_factorization_smult",
     "[| ?c ~= (0::?'a); square_free_factorization ?p (?d, ?bs) |]
      ==> square_free_factorization (smult ?c ?p) (?c * ?d, ?bs)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_var 0))
           ))),
    ("Square_Free_Factorization.yun_factorization",
     "[| yun_factorization gcd ?p = ?c_bs; (?b, ?i) : set (snd ?c_bs) |]
      ==> monic ?b",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 9, template_hole 8),
            template_var 3),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 0)),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 1)),
         template_hole 0))),
    ("Square_Free_Factorization.square_free_factorizationD",
     "[| square_free_factorization ?p (?c, ?bs); (?a, ?i) : set ?bs |]
      ==> square_free ?a & degree ?a ~= 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 4),
              template_app
               (template_app (template_hole 9, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 0)),
              template_app (template_hole 6, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 1)),
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 template_hole 0)))
           ))),
    ("Square_Free_Factorization.square_free_separable_main",
     "[| square_free ?f; ~ separable ?f |]
      ==> EX g k. ?f = g * k & degree g ~= 0 & pderiv g = 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 0)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 9, template_var 0))
            )],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("Square_Free_Factorization.yun_monic_factorization",
     "[| yun_gcd.yun_monic_factorization gcd ?p = ?bs; monic ?p;
         (?b, ?i) : set ?bs |]
      ==> monic ?b",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 8, template_hole 7),
            template_var 3),
          template_var 2),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 3),
            template_app (template_hole 4, template_var 3)),
          template_hole 3),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)),
              template_app (template_hole 0, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1),
           template_app (template_hole 4, template_var 1)),
         template_hole 3))),
    ("Square_Free_Factorization.square_free_prodD",
     "[| square_free (\<Prod>?fs); finite ?fs; ?f : ?fs; ?g : ?fs;
         ?f ~= ?g |]
      ==> coprime ?f ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, t_empty), template_var 2))
            ),
        template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Square_Free_Factorization.square_freeI",
     "[| !!q. [| 0 < degree q; q ~= 0; q * q dvd ?p |] ==> False; ?p ~= 0 |]
      ==> square_free ?p",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty)),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Square_Free_Factorization.square_free_factorization_order_root_mem",
     "[| square_free_factorization ?p (?c, ?bs); ?p ~= 0;
         (?a, ?i) : set ?bs; poly ?a ?x = (0::?'a) |]
      ==> order ?x ?p = Suc ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 5),
              template_app
               (template_app (template_hole 12, template_var 4),
                template_var 3))
            ),
        template_negation
         (template_equation (template_var 5, template_hole 9)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1)),
              template_app (template_hole 6, template_var 3))
            ),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 2), template_var 0),
          template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 5),
         template_app (template_hole 0, template_var 1)))),
    ("Square_Free_Factorization.square_free_factorizationD",
     "[| square_free_factorization ?p (?c, ?bs); (?a, ?i) : set ?bs;
         (?b, ?j) : set ?bs; (?a, ?i) ~= (?b, ?j) |]
      ==> coprime ?a ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 6),
              template_app
               (template_app (template_hole 6, template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_app (template_hole 3, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)),
              template_app (template_hole 3, template_var 4))
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 3), template_var 1)
           ))),
    ("Square_Free_Factorization.monic_square_free_irreducible_factorization",
     "[| monic ?f; square_free ?f |]
      ==> EX P. finite P &
                ?f = \<Prod>P & P <= {q. irreducible q & monic q}",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 11, template_var 0),
            template_app (template_hole 10, template_var 0)),
          template_hole 9),
        template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Square_Free_Factorization.square_free_factorization_order_root_no_mem",
     "[| square_free_factorization ?p (?c, ?bs); ?p ~= 0;
         !!a i. (a, i) : set ?bs ==> poly a ?x ~= (0::?'a) |]
      ==> order ?x ?p = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 3),
              template_app
               (template_app (template_hole 14, template_var 2),
                template_var 1))
            ),
        template_negation
         (template_equation (template_var 3, template_hole 11)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 3),
         template_hole 0))),
    ("Square_Free_Factorization.square_free_factorization_root",
     "[| square_free_factorization ?p (?c, ?bs); ?p ~= 0 |]
      ==> {x. poly ?p x = (0::?'a)} =
          {x. EX a i. (a, i) : set ?bs & poly a x = (0::?'a)}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2),
              template_app
               (template_app (template_hole 14, template_var 1),
                template_var 0))
            ),
        template_negation
         (template_equation (template_var 2, template_hole 11))],
       template_equation
        (template_app (template_hole 9, t_empty),
         template_app (template_hole 9, t_empty)))),
    ("Square_Free_Factorization.square_free_factorization_prod_listI",
     "[| square_free_factorization ?p
          (?c, ?bs1.0 @ (prod_list ?bs, ?i) # ?bs2.0);
         !!b. b : set ?bs ==> 0 < degree b |]
      ==> square_free_factorization ?p
           (?c, ?bs1.0 @ map (%b. (b, ?i)) ?bs @ ?bs2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 5),
              template_app
               (template_app (template_hole 11, template_var 4),
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app
                       (template_app
                         (template_hole 8,
                          template_app (template_hole 7, template_var 2)),
                        template_var 1)),
                    template_var 0))))
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 12, template_var 5),
             template_app
              (template_app (template_hole 11, template_var 4),
               template_app
                (template_app (template_hole 10, template_var 3),
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_app (template_hole 0, t_empty),
                       template_var 2)),
                   template_var 0))))
           ))),
    ("Square_Free_Factorization.square_free_factorization_smult_prod_listI",
     "[| square_free_factorization ?p
          (?c, ?bs1.0 @ (smult ?b (prod_list ?bs), ?i) # ?bs2.0);
         !!b. b : set ?bs ==> 0 < degree b |]
      ==> square_free_factorization ?p
           (?c * ?b ^ Suc ?i, ?bs1.0 @ map (%b. (b, ?i)) ?bs @ ?bs2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 6),
              template_app
               (template_app (template_hole 15, template_var 5),
                template_app
                 (template_app (template_hole 14, template_var 4),
                  template_app
                   (template_app
                     (template_hole 13,
                      template_app
                       (template_app
                         (template_hole 12,
                          template_app
                           (template_app (template_hole 11, template_var 3),
                            template_app
                             (template_hole 10, template_var 2))),
                        template_var 1)),
                    template_var 0))))
            ),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 16, template_var 6),
             template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app (template_hole 3, template_var 5),
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_app (template_hole 1, template_var 1)))),
               template_app
                (template_app (template_hole 14, template_var 4),
                 template_app
                  (template_app
                    (template_hole 14,
                     template_app
                      (template_app (template_hole 0, t_empty),
                       template_var 2)),
                   template_var 0))))
           ))),
    ("Square_Free_Factorization.square_free_factorization_factorI",
     "[| square_free_factorization ?p (?c, ?bs1.0 @ (?a, ?i) # ?bs2.0);
         degree ?r ~= 0; degree ?s ~= 0; ?a = ?r * ?s |]
      ==> square_free_factorization ?p
           (?c, ?bs1.0 @ (?r, ?i) # (?s, ?i) # ?bs2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 7),
              template_app
               (template_app (template_hole 9, template_var 6),
                template_app
                 (template_app (template_hole 8, template_var 5),
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 6, template_var 4),
                        template_var 3)),
                    template_var 2))))
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 3, template_var 1),
              template_hole 2)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            ),
        template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 10, template_var 7),
             template_app
              (template_app (template_hole 9, template_var 6),
               template_app
                (template_app (template_hole 8, template_var 5),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_var 1),
                       template_var 3)),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 6, template_var 0),
                         template_var 3)),
                     template_var 2)))))
           ))),
    ("Square_Free_Factorization.monic_factorization_uniqueness",
     "[| finite ?P; \<Prod>?P = \<Prod>?Q;
         ?P <= {q. irreducible\<^sub>d q & monic q}; finite ?Q;
         ?Q <= {q. irreducible\<^sub>d q & monic q} |]
      ==> ?P = ?Q",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 9, t_empty), template_var 1),
          template_app
           (template_app (template_hole 9, t_empty), template_var 0)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 7, t_empty)),
        template_predicate
         (template_app (template_hole 11, template_var 0)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 7, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Square_Free_Factorization.square_free_factorizationI'",
     "[| ?p = smult ?c (PROD (a, i)<-?bs. a ^ Suc i);
         square_free (prod_list (map fst ?bs));
         !!b i. (b, i) : set ?bs ==> 0 < degree b;
         ?p = 0 ==> ?c = (0::?'a) & ?bs = [] |]
      ==> square_free_factorization ?p (?c, ?bs)",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 23, template_var 1),
            template_app
             (template_hole 22,
              template_app
               (template_app
                 (template_hole 21,
                  template_app (template_hole 20, t_empty)),
                template_var 0)))),
        template_predicate
         (
            template_app
             (template_hole 17,
              template_app
               (template_hole 22,
                template_app
                 (template_app (template_hole 21, template_hole 16),
                  template_var 0)))
            ),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_implication
         ([template_equation (template_var 2, template_hole 7)],
          template_predicate
           (
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 1),
                    template_hole 4)),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_hole 2))
              ))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Square_Free_Factorization.square_free_factorization_order_root",
     "[| square_free_factorization ?p (?c, ?bs); ?p ~= 0 |]
      ==> (order ?x ?p = ?i) =
          (?i = 0 & (ALL a j. (a, j) : set ?bs --> poly a ?x ~= (0::?'a)) |
           (EX a j. (a, j) : set ?bs & poly a ?x = (0::?'a) & ?i = Suc j))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 4),
              template_app
               (template_app (template_hole 21, template_var 3),
                template_var 2))
            ),
        template_negation
         (template_equation (template_var 4, template_hole 18))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 15, template_var 1),
             template_var 4),
           template_var 0),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app
                    (template_hole 13,
                     template_app
                      (template_app (template_hole 16, template_var 0),
                       template_hole 12)),
                   template_app (template_hole 11, t_empty))),
               template_app (template_hole 2, t_empty))
             )))),
    ("Square_Free_Factorization.yun_factorization_induct",
     "[| !!bn cn. bn = 1 ==> ?P bn cn;
         !!bn cn.
            [| bn ~= 1;
               ?P (bn div gcd bn (cn - pderiv bn))
                ((cn - pderiv bn) div gcd bn (cn - pderiv bn)) |]
            ==> ?P bn cn;
         ?bn = ?p div gcd ?p (pderiv ?p);
         ?cn = pderiv ?p div gcd ?p (pderiv ?p); monic ?p |]
      ==> ?P ?bn ?cn",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 7, template_var 1),
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 4, template_var 1)))),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 4, template_var 1)),
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 4, template_var 1)))),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1),
            template_app (template_hole 1, template_var 1)),
          template_hole 0)],
       template_predicate
        (
           template_app
            (template_app (template_var 3, template_var 2), template_var 0)
           ))),
    ("Square_Free_Factorization.square_free_factorization_further_factorization",
     "[| square_free_factorization ?p (?c, ?bs);
         !!b i d fs.
            [| (b, i) : set ?bs; ?f b = (d, fs) |]
            ==> b = smult d (prod_list fs) & (ALL f:set fs. 0 < degree f);
         ?h =
         (%(b, i).
             case ?f b of (d, fs) => (d ^ Suc i, map (%f. (f, i)) fs));
         ?gs = map ?h ?bs; ?d = ?c * prod_list (map fst ?gs);
         ?es = concat (map snd ?gs) |]
      ==> square_free_factorization ?p (?d, ?es)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 36, template_var 7),
              template_app
               (template_app (template_hole 35, template_var 6),
                template_var 5))
            ),
        template_predicate (template_app (template_hole 34, t_empty)),
        template_equation
         (template_var 3, template_app (template_hole 15, t_empty)),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 9, template_var 3),
            template_var 5)),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 7, template_var 6),
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 2)))),
        template_equation
         (template_var 0,
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_hole 0),
              template_var 2)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 36, template_var 7),
             template_app
              (template_app (template_hole 35, template_var 1),
               template_var 0))
           )))]
