   [("Prime_Factorization.divisors_int", "distinct (divisors_int ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Prime_Factorization.divisors_int_pos",
     "distinct (divisors_int_pos ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Prime_Factorization.divisors_nat", "distinct (divisors_nat ?n)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Prime_Factorization.prime_nat", "prime_nat ?n = prime ?n",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Prime_Factorization.prime_factorization_nat",
     "Ball (set (prime_factorization_nat ?n)) prime",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0))),
           template_hole 0)
         )),
    ("Prime_Factorization.multiset_prime_factorization_nat_correct",
     "prime_factorization ?n = mset (prime_factorization_nat ?n)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Prime_Factorization.prime_factorization_nat",
     "?n = 0 ==> prime_factorization_nat ?n = []",
     template_implication
      ([template_equation (template_var 0, template_hole 3)],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Prime_Factorization.prime_factorization_nat",
     "?n ~= 0 ==> prod_list (prime_factorization_nat ?n) = ?n",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Prime_Factorization.prod_mset_multiset_prime_factorization_nat",
     "?x ~= 0 ==> \<Prod>\<^sub># (prime_factorization ?x) = ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Prime_Factorization.next_candidates",
     "[| next_candidates ?n = (?m, ?ps); candidate_invariant ?n |]
      ==> distinct ?ps",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 2),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Prime_Factorization.next_candidates",
     "[| next_candidates ?n = (?m, ?ps); candidate_invariant ?n |]
      ==> candidate_invariant ?m",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0)),
        template_predicate
         (template_app (template_hole 0, template_var 2))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Prime_Factorization.divisors_int",
     "?x ~= 0 ==> set (divisors_int ?x) = {i. i dvd ?x}",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app (template_hole 1, t_empty)))),
    ("Prime_Factorization.divisors_nat",
     "?n ~= 0 ==> set (divisors_nat ?n) = {p. p dvd ?n}",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app (template_hole 1, t_empty)))),
    ("Prime_Factorization.next_candidates",
     "[| next_candidates ?n = (?m, ?ps); candidate_invariant ?n |]
      ==> sorted ?ps",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)
           ))),
    ("Prime_Factorization.next_candidates",
     "[| next_candidates ?n = (?m, ?ps); candidate_invariant ?n |]
      ==> ?n < ?m",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 2),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_inequation (less_than, template_var 2, template_var 1))),
    ("Prime_Factorization.next_candidates",
     "[| next_candidates ?n = (?m, ?ps); candidate_invariant ?n |]
      ==> ?ps ~= []",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0)),
        template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Prime_Factorization.divisors_int_pos",
     "?x ~= 0 ==> set (divisors_int_pos ?x) = {i. i dvd ?x & 0 < i}",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 7))],
       template_equation
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app (template_hole 3, t_empty)))),
    ("Prime_Factorization.divisors_funD",
     "[| divisors_fun ?df; ?x ~= (0::?'a); ?d dvd ?x |]
      ==> ?d : set (?df ?x)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_hole 0,
               template_app (template_var 2, template_var 1)))
           ))),
    ("Prime_Factorization.next_candidates",
     "[| next_candidates ?n = (?m, ?ps); candidate_invariant ?n |]
      ==> set ?ps <= {2..} Int {?n..<?m}",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 2),
          template_app
           (template_app (template_hole 9, template_var 1),
            template_var 0)),
        template_predicate
         (template_app (template_hole 8, template_var 2))],
       template_inequation
        (less_equals, template_app (template_hole 6, template_var 0),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1)))),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("Prime_Factorization.prime_factorization_unique''",
     "[| !!p. p :# ?A ==> prime p; \<Prod>\<^sub># ?A = normalize ?x |]
      ==> prime_factorization ?x = ?A",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Prime_Factorization.prime_divisor",
     "[| 2 <= ?j; ?j dvd ?n |] ==> EX p. prime p & p dvd ?j & p dvd ?n",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 6,
            template_app (template_hole 5, template_hole 4)),
          template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Prime_Factorization.divisors_pos_funD",
     "[| divisors_pos_fun ?df; ?x ~= (0::?'a); ?d dvd ?x; (0::?'a) < ?d |]
      ==> ?d : set (?df ?x)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            ),
        template_inequation (less_than, template_hole 4, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_hole 0,
               template_app (template_var 2, template_var 1)))
           ))),
    ("Prime_Factorization.next_candidates",
     "[| next_candidates ?n = (?m, ?ps); candidate_invariant ?n |]
      ==> {i. prime i & ?n <= i & i < ?m} <= set ?ps",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 2),
          template_app
           (template_app (template_hole 8, template_var 1),
            template_var 0)),
        template_predicate
         (template_app (template_hole 7, template_var 2))],
       template_inequation
        (less_equals, template_app (template_hole 5, t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("Prime_Factorization.prime_sqrtI",
     "[| 2 <= ?n; !!j. [| 2 <= j; j < ?i |] ==> ~ j dvd ?n;
         ~ ?i * ?i <= ?n |]
      ==> prime ?n",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 8,
            template_app (template_hole 7, template_hole 6)),
          template_var 1),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_negation
         (
            template_inequation
             (less_equals,
              template_app
               (template_app (template_hole 1, template_var 0),
                template_var 0),
              template_var 1)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Prime_Factorization.remove_prime_factor",
     "[| remove_prime_factor ?i ?n ?ps = (?m, ?qs); 1 < ?i; ?n ~= 0 |]
      ==> EX rs.
             ?qs = rs @ ?ps &
             ?n = ?m * prod_list rs & ~ ?i dvd ?m & set rs <= {?i}",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 17, template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 16, template_var 1),
            template_var 0)),
        template_inequation (less_than, template_hole 14, template_var 4),
        template_negation
         (template_equation (template_var 3, template_hole 11))],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Prime_Factorization.prime_test_iterate2",
     "[| !!j. [| 2 <= j; j < ?i |] ==> ~ j dvd ?n; odd ?n; 3 <= ?n; 3 <= ?i;
         odd ?i; ~ ?i dvd ?n; 2 <= ?j; ?j < ?i + 2 |]
      ==> ~ ?j dvd ?n",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_hole 7,
                      template_app (template_hole 6, template_hole 5))),
                  template_var 1)
                )
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app (template_hole 1, template_hole 5)),
          template_var 1),
        template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app (template_hole 1, template_hole 5)),
          template_var 2),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_hole 7,
                      template_app (template_hole 6, template_hole 5))),
                  template_var 2)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)
                )
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app (template_hole 6, template_hole 5)),
          template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 0, template_var 2),
            template_app
             (template_hole 7,
              template_app (template_hole 6, template_hole 5))))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 1)
               )
           ))),
    ("Prime_Factorization.prime_nat_main",
     "[| ?ni = (?n, ?i, ?is); 2 <= ?i; 2 <= ?n;
         !!j. [| 2 <= j; j < ?i |] ==> ~ j dvd ?n;
         !!j. [| ?i <= j; j < ?jj; prime j |] ==> j : set ?is; ?i <= ?jj;
         sorted ?is; distinct ?is; candidate_invariant ?jj;
         set ?is <= {?i..<?jj}; ?res = prime_nat_main ?n ?jj ?is |]
      ==> ?res = prime ?n",
     template_implication
      ([template_equation
         (template_var 5,
          template_app
           (template_app (template_hole 19, template_var 4),
            template_app
             (template_app (template_hole 18, template_var 3),
              template_var 2))),
        template_inequation
         (less_equals,
          template_app
           (template_hole 16,
            template_app (template_hole 15, template_hole 14)),
          template_var 3),
        template_inequation
         (less_equals,
          template_app
           (template_hole 16,
            template_app (template_hole 15, template_hole 14)),
          template_var 4),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_inequation (less_equals, template_var 3, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 17),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 7, template_var 2),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 1)),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_app (template_hole 0, template_var 4),
              template_var 1),
            template_var 2))],
       template_equation
        (template_var 0, template_app (template_hole 9, template_var 4)))),
    ("Prime_Factorization.prime_factorization_nat_main",
     "[| ?ni = (?n, ?i, ?is); 2 <= ?i; 2 <= ?n;
         !!j. [| 2 <= j; j < ?i |] ==> ~ j dvd ?n;
         !!j. [| ?i <= j; j < ?jj; prime j |] ==> j : set ?is; ?i <= ?jj;
         sorted ?is; distinct ?is; candidate_invariant ?jj;
         set ?is <= {?i..<?jj};
         ?res = prime_factorization_nat_main ?n ?jj ?is ?ps |]
      ==> EX qs. ?res = qs @ ?ps & Ball (set qs) prime & ?n = prod_list qs",
     template_implication
      ([template_equation
         (template_var 6,
          template_app
           (template_app (template_hole 25, template_var 5),
            template_app
             (template_app (template_hole 24, template_var 4),
              template_var 3))),
        template_inequation
         (less_equals,
          template_app
           (template_hole 22,
            template_app (template_hole 21, template_hole 20)),
          template_var 4),
        template_inequation
         (less_equals,
          template_app
           (template_hole 22,
            template_app (template_hole 21, template_hole 20)),
          template_var 5),
        template_predicate (template_app (template_hole 19, t_empty)),
        template_predicate (template_app (template_hole 19, t_empty)),
        template_inequation (less_equals, template_var 4, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_hole 23),
              template_var 3)
            ),
        template_predicate
         (template_app (template_hole 11, template_var 3)),
        template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 13, template_var 3),
          template_app
           (template_app (template_hole 8, template_var 4),
            template_var 2)),
        template_equation
         (template_var 1,
          template_app
           (template_app
             (template_app
               (template_app (template_hole 6, template_var 5),
                template_var 2),
              template_var 3),
            template_var 0))],
       template_predicate (template_app (template_hole 5, t_empty))))]
