   [("Missing_List.map_id", "map id ?t = ?t",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Missing_List.remdups_sort", "set (remdups_sort ?xs) = set ?xs",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Missing_List.adjust_idx_rev1",
     "adjust_idx_rev ?i (adjust_idx ?i ?j) = ?j",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Missing_List.concat_map_empty", "concat (map (%_. []) ?xs) = []",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_hole 0)),
    ("Missing_List.sum_list_concat",
     "sum_list (concat ?ls) = sum_list (map sum_list ?ls)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 0, template_hole 2),
           template_var 0)))),
    ("Missing_List.concat_lists_listset",
     "set (concat_lists ?xs) = listset (map set ?xs)",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Missing_List.is_partition_code",
     "is_partition ?as = (??.Missing_List.is_partition_impl ?as ~= None)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Missing_List.concat_map_concat",
     "concat (map concat ?xs) = concat (concat ?xs)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 2),
           template_var 0)),
       template_app
        (template_hole 2, template_app (template_hole 0, template_var 0)))),
    ("Missing_List.foldl_foldr_o_id", "foldl (o) id ?fs = foldr (o) ?fs id",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_hole 2), template_var 0),
         template_hole 1))),
    ("Missing_List.sum_list_replicate_length",
     "sum_list (replicate (length ?xs) (Suc 0)) = length ?xs",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 1, template_hole 0))),
       template_app (template_hole 2, template_var 0))),
    ("Missing_List.set_list_diff",
     "set (list_diff ?xs ?ys) = set ?xs - set ?ys",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Missing_List.set_list_inter",
     "set (list_inter ?xs ?ys) = set ?xs Int set ?ys",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Missing_List.set_list_union",
     "set (list_union ?xs ?ys) = set ?xs Un set ?ys",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Missing_List.mem_idx_sound2",
     "(?x ~: set ?as) = (mem_idx ?x ?as = None)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 1),
                template_app (template_hole 3, template_var 0)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Missing_List.span",
     "span ?P ?xs = (takeWhile ?P ?xs, dropWhile ?P ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Missing_List.foldr_o_o_id",
     "foldr ((o) o ?f) ?xs id ?a = foldr ?f ?xs ?a",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 2)),
             template_var 1),
           template_hole 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Missing_List.concat_concat_map",
     "concat (concat (map ?f ?xs)) = concat (map (concat o ?f) ?xs)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_hole 4),
               template_var 1)),
           template_var 0)))),
    ("Missing_List.mem_idx_sound",
     "(?x : set ?as) = (EX i. mem_idx ?x ?as = Some i)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app (template_hole 4, template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Missing_List.subset_set_code",
     "(set ?xs <= set ?ys) = list_all (%x. x : set ?ys) ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, t_empty), template_var 1))),
    ("Missing_List.map_upt_len_conv",
     "map (%i. ?f (?xs ! i)) [0..<length ?xs] = map ?f ?xs",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Missing_List.case_prod_partition",
     "(case partition ?p ?xs of (x, xa) => ?f x xa) =
      ?f (filter ?p ?xs) (filter (Not o ?p) ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_var 2,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)))),
    ("Missing_List.is_partition_Cons",
     "is_partition (?x # ?xs) =
      (is_partition ?xs & ?x Int \<Union> (set ?xs) = {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("Missing_List.foldr_append2_Nil",
     "foldr ((@) o ?f) ?xs [] @ ?zs = foldr ((@) o ?f) ?xs ?zs",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 3),
                   template_var 2)),
               template_var 1),
             template_hole 0)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 3),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("Missing_List.set_generate_lists",
     "set (generate_lists ?n ?xs) =
      {as. length as = ?n & set as <= set ?xs}",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Missing_List.full_list_subseqs",
     "{ys: set (subseqs ?xs). length ys = length ?xs} = {?xs}",
     template_equation
      (template_app (template_hole 8, t_empty),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Missing_List.map_upt_add'",
     "map ?f [?a..<?a + ?b] = map (%i. ?f (?a + i)) [0..<?b]",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app (template_hole 2, template_hole 0),
           template_var 0)))),
    ("Missing_List.foldr_append2",
     "foldr ((@) o ?f) ?xs (?ys @ ?zs) = foldr ((@) o ?f) ?xs ?ys @ ?zs",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 3)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 3)),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("Missing_List.ex_set_conv_ex_nth",
     "(EX x:set ?xs. ?P x) = (EX i<length ?xs. ?P (?xs ! i))",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         t_empty),
       template_app (template_hole 4, t_empty))),
    ("Missing_List.set_foldr_remdups_set_map_conv",
     "set (foldr (%x xs. remdups (?f x @ xs)) ?xs []) =
      \<Union> (set (map (set o ?f) ?xs))",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app
            (template_app (template_hole 7, t_empty), template_var 0),
           template_hole 4)),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_hole 8),
                 template_var 1)),
             template_var 0))))),
    ("Missing_List.listset",
     "listset ?xs =
      {ys. length ys = length ?xs & (ALL i<length ?xs. ys ! i : ?xs ! i)}",
     template_equation
      (template_app (template_hole 11, template_var 0),
       template_app (template_hole 10, t_empty))),
    ("Missing_List.distinct_eq_append",
     "distinct_eq ?eq (?xs @ ?ys) =
      (distinct_eq ?eq ?xs &
       distinct_eq ?eq ?ys & (ALL x:set ?xs. ALL y:set ?ys. ~ ?eq y x))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             t_empty))))),
    ("Missing_List.set_concat_lists",
     "set (concat_lists ?xs) =
      {as.
       length as = length ?xs &
       (ALL i<length ?xs. as ! i : set (?xs ! i))}",
     template_equation
      (template_app
        (template_hole 13, template_app (template_hole 12, template_var 0)),
       template_app (template_hole 11, t_empty))),
    ("Missing_List.UNION_set_zip",
     "\<Union> (?g ` set (zip [0..<length ?xs] (map ?f ?xs))) =
      (UN i<length ?xs. ?g (i, ?f (?xs ! i)))",
     template_equation
      (template_app
        (template_hole 11,
         template_app
          (template_app (template_hole 10, t_empty),
           template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app (template_hole 5, template_var 1))),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 1))))),
       template_app
        (template_hole 11,
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_hole 0,
             template_app (template_hole 5, template_var 1)))))),
    ("Missing_List.map_eq_conv'",
     "(map ?f ?xs = map ?g ?ys) =
      (length ?xs = length ?ys &
       (ALL i<length ?xs. ?f (?xs ! i) = ?g (?ys ! i)))",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 11, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 10, template_var 1),
           template_var 0)),
       template_dunno))]
