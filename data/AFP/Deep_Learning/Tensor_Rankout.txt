Loading theory "Draft.Tensor" (required by "Draft.Tensor_RankMoreTemplates" via "Draft.Tensor_Rank" via "Draft.Tensor_Unit_Vec" via "Draft.Tensor_Product" via "Draft.Tensor_Scalar_Mult" via "Draft.Tensor_Plus" via "Draft.Tensor_Subtensor")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Tensor_RankMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Tensor_RankMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Tensor_RankMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Proofs for inductive predicate(s) "valid_index"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
  Proving monotonicity ...
### theory "HOL-Library.Function_Algebras"
### 0.153s elapsed time, 0.627s cpu time, 0.046s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Tensor_RankMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### Missing patterns in function definition:
### !!v va b. lookup_base (v # va) b [] = undefined
### !!b v va. lookup_base [] b (v # va) = undefined
### theory "HOL-Library.Set_Algebras"
### 0.206s elapsed time, 0.840s cpu time, 0.046s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Tensor_RankMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "(%p. size_list size (snd (snd p))) <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.346s elapsed time, 1.381s cpu time, 0.139s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Tensor_RankMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
### theory "Draft.Tensor"
### 0.417s elapsed time, 1.669s cpu time, 0.139s GC time
Loading theory "Draft.Tensor_Subtensor" (required by "Draft.Tensor_RankMoreTemplates" via "Draft.Tensor_Rank" via "Draft.Tensor_Unit_Vec" via "Draft.Tensor_Product" via "Draft.Tensor_Scalar_Mult" via "Draft.Tensor_Plus")
### theory "Draft.Tensor_Subtensor"
### 0.073s elapsed time, 0.289s cpu time, 0.000s GC time
Loading theory "Draft.Tensor_Plus" (required by "Draft.Tensor_RankMoreTemplates" via "Draft.Tensor_Rank" via "Draft.Tensor_Unit_Vec" via "Draft.Tensor_Product" via "Draft.Tensor_Scalar_Mult")
instantiation
  tensor :: (semigroup_add) plus
  plus_tensor == plus :: 'a tensor => 'a tensor => 'a tensor
### theory "Draft.Tensor_Plus"
### 0.150s elapsed time, 0.583s cpu time, 0.101s GC time
Loading theory "Draft.Tensor_Scalar_Mult" (required by "Draft.Tensor_RankMoreTemplates" via "Draft.Tensor_Rank" via "Draft.Tensor_Unit_Vec" via "Draft.Tensor_Product")
### theory "Draft.Tensor_Scalar_Mult"
### 0.093s elapsed time, 0.360s cpu time, 0.087s GC time
Loading theory "Draft.Tensor_Product" (required by "Draft.Tensor_RankMoreTemplates" via "Draft.Tensor_Rank" via "Draft.Tensor_Unit_Vec")
instantiation
  tensor :: (ring) semigroup_mult
  times_tensor == times :: 'a tensor => 'a tensor => 'a tensor
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
instantiation
  tensor :: (ring_1) monoid_mult
  one_tensor == one_class.one :: 'a tensor
### theory "Draft.Tensor_Product"
### 0.099s elapsed time, 0.398s cpu time, 0.000s GC time
Loading theory "Draft.Tensor_Unit_Vec" (required by "Draft.Tensor_RankMoreTemplates" via "Draft.Tensor_Rank")
consts
  shift :: "'a list => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
### theory "Draft.Tensor_Unit_Vec"
### 0.076s elapsed time, 0.290s cpu time, 0.095s GC time
Loading theory "Draft.Tensor_Rank" (required by "Draft.Tensor_RankMoreTemplates")
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "cprank_max1"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
Proofs for inductive predicate(s) "cprank_max"
  Proving monotonicity ...
consts
  stake :: "nat => 'a stream => 'a list"
Found termination order: "size <*mlex*> {}"
consts
  sdrop :: "nat => 'a stream => 'a stream"
### theory "HOL-Library.BigO"
### 1.023s elapsed time, 3.835s cpu time, 0.970s GC time
### theory "Draft.Tensor_Rank"
### 0.317s elapsed time, 1.060s cpu time, 0.594s GC time
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.177s elapsed time, 3.920s cpu time, 0.924s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.999s elapsed time, 5.420s cpu time, 1.142s GC time
Loading theory "Draft.Templates" (required by "Draft.Tensor_RankMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.047s elapsed time, 0.061s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Tensor_RankMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.456s elapsed time, 0.515s cpu time, 0.074s GC time
Loading theory "Draft.Tensor_RankMoreTemplates"
val templateLemmas =
   [("Tensor_Rank.cprank_max_cprank", "cprank_max (cprank ?A) ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 0)
         )),
    ("Tensor_Rank.cprank_max_upper_bound",
     "cprank_max (prod_list (dims ?A)) ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))),
           template_var 0)
         )),
    ("Tensor_Rank.cprank_upper_bound", "cprank ?A <= prod_list (dims ?A)",
     template_inequation
      (less_equals, template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Tensor_Rank.cprank_max1", "cprank_max1 ?A ==> cprank_max 1 ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)
           ))),
    ("Tensor_Rank.cprank_max_0E",
     "cprank_max 0 ?A ==> ?A = tensor0 (dims ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 0)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Tensor_Rank.cprank_max1_prod",
     "[| cprank_max1 ?A; cprank_max1 ?B |]
      ==> cprank_max1 (?A \<otimes> ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Tensor_Rank.cprank_max1_prod_list",
     "(!!B. B : set ?Bs ==> cprank_max1 B) ==> cprank_max1 (prod_list ?Bs)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Tensor_Rank.cprank_max1_order0",
     "[| cprank_max1 ?B; order ?A = 0 |] ==> cprank_max1 (?A \<otimes> ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_equation
         (template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 0)),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Tensor_Rank.cprank_max1_order_le1",
     "[| order ?A <= 0; cprank_max1 ?B |]
      ==> cprank_max1 (?A \<otimes> ?B)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 4,
            template_app (template_hole 3, template_var 1)),
          template_hole 2),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Tensor_Rank.cprank_max_prod_order1",
     "[| order ?A = 1; cprank_max ?n ?B |]
      ==> cprank_max ?n (?A \<otimes> ?B)",
     template_implication
      ([template_equation
         (template_app
           (template_hole 4,
            template_app (template_hole 3, template_var 2)),
          template_hole 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Tensor_Rank.cprank_max_plus",
     "[| cprank_max ?i ?A; cprank_max ?j ?B; dims ?A = dims ?B |]
      ==> cprank_max (?i + ?j) (?A + ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 2, template_var 2),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Tensor_Rank.listsum_prod_distr_right",
     "(!!C. C : set ?CS ==> dims C = ?ds) ==>
      ?A \<otimes> listsum ?ds ?CS =
      listsum (dims ?A @ ?ds) (map ((\<otimes>) ?A) ?CS)",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 5, template_var 0)),
               template_var 1)),
           template_app
            (template_app (template_hole 0, t_empty), template_var 2))))),
    ("Tensor_Rank.cprank_maxI",
     "[| !!B. B : set ?BS ==> cprank_max1 B;
         !!B. B : set ?BS ==> dims B = ?ds |]
      ==> cprank_max (length ?BS) (listsum ?ds ?BS)",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Tensor_Rank.cprank_max1_prod_listE",
     "[| cprank_max1 ?A;
         !!Bs a.
            [| !!B. B : set Bs ==> order B = 1;
               a \<cdot> prod_list Bs = ?A |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_var 0))),
    ("Tensor_Rank.cprank_max_listsum",
     "[| !!A. A : set ?As ==> dims A = ?ds;
         !!A. A : set ?As ==> cprank_max ?n A |]
      ==> cprank_max (?n * length ?As) (listsum ?ds ?As)",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 1, template_var 2))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("Tensor_Rank.cprank_maxE",
     "[| cprank_max ?n ?A;
         !!BS. [| !!B. B : set BS ==> cprank_max1 B;
                  !!B. B : set BS ==> dims ?A = dims B;
                  listsum (dims ?A) BS = ?A; length BS = ?n |]
               ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.Tensor_RankMoreTemplates"
### 0.299s elapsed time, 0.417s cpu time, 0.000s GC time
val it = (): unit
