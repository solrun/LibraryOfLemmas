Loading theory "Draft.Tensor" (required by "Draft.Tensor_Unit_VecMoreTemplates" via "Draft.Tensor_Unit_Vec" via "Draft.Tensor_Product" via "Draft.Tensor_Scalar_Mult" via "Draft.Tensor_Plus" via "Draft.Tensor_Subtensor")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Tensor_Unit_VecMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Tensor_Unit_VecMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Tensor_Unit_VecMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Proofs for inductive predicate(s) "valid_index"
  Proving monotonicity ...
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.126s elapsed time, 0.522s cpu time, 0.039s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Tensor_Unit_VecMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### Missing patterns in function definition:
### !!v va b. lookup_base (v # va) b [] = undefined
### !!b v va. lookup_base [] b (v # va) = undefined
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.213s elapsed time, 0.874s cpu time, 0.039s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Tensor_Unit_VecMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. size_list size (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.369s elapsed time, 1.472s cpu time, 0.129s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Tensor_Unit_VecMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.Tensor"
### 0.418s elapsed time, 1.673s cpu time, 0.129s GC time
Loading theory "Draft.Tensor_Subtensor" (required by "Draft.Tensor_Unit_VecMoreTemplates" via "Draft.Tensor_Unit_Vec" via "Draft.Tensor_Product" via "Draft.Tensor_Scalar_Mult" via "Draft.Tensor_Plus")
### theory "Draft.Tensor_Subtensor"
### 0.108s elapsed time, 0.432s cpu time, 0.108s GC time
Loading theory "Draft.Tensor_Plus" (required by "Draft.Tensor_Unit_VecMoreTemplates" via "Draft.Tensor_Unit_Vec" via "Draft.Tensor_Product" via "Draft.Tensor_Scalar_Mult")
instantiation
  tensor :: (semigroup_add) plus
  plus_tensor == plus :: 'a tensor => 'a tensor => 'a tensor
### theory "Draft.Tensor_Plus"
### 0.129s elapsed time, 0.525s cpu time, 0.000s GC time
Loading theory "Draft.Tensor_Scalar_Mult" (required by "Draft.Tensor_Unit_VecMoreTemplates" via "Draft.Tensor_Unit_Vec" via "Draft.Tensor_Product")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
### theory "Draft.Tensor_Scalar_Mult"
### 0.100s elapsed time, 0.389s cpu time, 0.089s GC time
Loading theory "Draft.Tensor_Product" (required by "Draft.Tensor_Unit_VecMoreTemplates" via "Draft.Tensor_Unit_Vec")
Found termination order: "size <*mlex*> {}"
instantiation
  tensor :: (ring) semigroup_mult
  times_tensor == times :: 'a tensor => 'a tensor => 'a tensor
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
Found termination order: "size <*mlex*> {}"
  Proving monotonicity ...
instantiation
  tensor :: (ring_1) monoid_mult
  one_tensor == one_class.one :: 'a tensor
### theory "Draft.Tensor_Product"
### 0.135s elapsed time, 0.535s cpu time, 0.083s GC time
Loading theory "Draft.Tensor_Unit_Vec" (required by "Draft.Tensor_Unit_VecMoreTemplates")
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
### theory "Draft.Tensor_Unit_Vec"
### 0.050s elapsed time, 0.201s cpu time, 0.000s GC time
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
### theory "HOL-Library.BigO"
### 1.049s elapsed time, 3.832s cpu time, 0.979s GC time
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.095s elapsed time, 3.658s cpu time, 0.937s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.998s elapsed time, 5.391s cpu time, 1.149s GC time
Loading theory "Draft.Templates" (required by "Draft.Tensor_Unit_VecMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.049s elapsed time, 0.064s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Tensor_Unit_VecMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.480s elapsed time, 0.531s cpu time, 0.064s GC time
Loading theory "Draft.Tensor_Unit_VecMoreTemplates"
val templateLemmas =
   [("Tensor_Unit_Vec.dims_unit_vec", "dims (unit_vec ?n ?i) = [?n]",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_hole 0))),
    ("Tensor_Unit_Vec.lookup_unit_vec",
     "?j < ?n ==>
      lookup (unit_vec ?n ?i) [?j] =
      (if ?i = ?j then 1::?'a else (0::?'a))",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_var 0)),
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_hole 4))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_var 2)),
                 template_hole 1),
               template_hole 0)
             )))),
    ("Tensor_Unit_Vec.subtensor_prod_with_unit_vec",
     "?j < ?n ==>
      subtensor (unit_vec ?n ?i \<otimes> ?A) ?j =
      (if ?i = ?j then ?A else tensor0 (dims ?A))",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2)],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app
                       (template_app (template_hole 4, template_var 2),
                        template_var 1)),
                    template_var 0)),
                template_var 3)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 3)),
                 template_var 0),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)))
             )))),
    ("Tensor_Unit_Vec.subtensor_decomposition",
     "dims ?A ~= [] ==>
      listsum (dims ?A)
       (map (%i. unit_vec (hd (dims ?A)) i \<otimes> subtensor ?A i)
         [0..<hd (dims ?A)]) =
      ?A",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 10, template_var 0),
              template_hole 9)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 10, template_var 0)),
           template_app
            (template_app (template_hole 6, t_empty),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_app
                (template_hole 3,
                 template_app (template_hole 10, template_var 0))))),
         template_var 0)))]:
   (string * thm * template) list
### theory "Draft.Tensor_Unit_VecMoreTemplates"
### 0.303s elapsed time, 0.390s cpu time, 0.000s GC time
val it = (): unit
