   [("DL_Deep_Model.witness'_is_deep_model",
     "remove_weights (witness' ?Y ?rs) = deep_model' ?Y ?rs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("DL_Deep_Model.witness_is_deep_model",
     "remove_weights (witness ?Y ?r ?rs) = deep_model ?Y ?r ?rs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("DL_Deep_Model.length_output_witness'",
     "dim_vec (tensors_from_net (witness'_l ?rs)) = ?rs ! 0",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             template_app (template_hole 0, template_var 0)))),
       template_app
        (template_app (template_hole 2, template_var 0), template_hole 1))),
    ("DL_Deep_Model.length_output_witness",
     "dim_vec (tensors_from_net (witness_l ?rs)) = ?rs ! 0",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_hole 2)),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 1)),
             template_app
              (template_hole 0,
               template_app (template_hole 0, template_var 0))))),
       template_app
        (template_app (template_hole 3, template_var 0), template_hole 2))),
    ("DL_Deep_Model.witness_l1",
     "witness ?Y ?r0.0 [?M] =
      Conv (all1_matrix ?Y ?r0.0) (witness' ?r0.0 [?M])",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_hole 3)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_hole 3))))),
    ("DL_Deep_Model.witness_l0'",
     "witness' ?Y [?M] =
      Pool (Conv (id_matrix ?Y ?M) (Input ?M))
       (Conv (id_matrix ?Y ?M) (Input ?M))",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1),
         template_app
          (template_app (template_hole 5, template_var 0),
           template_hole 4)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app (template_hole 0, template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 0))))),
    ("DL_Deep_Model.tensor_prod_unit_vec",
     "unit_vec ?M ?j \<otimes> unit_vec ?M ?j =
      tensor_from_lookup [?M, ?M]
       (%is. if is = [?j, ?j] then 1::?'a else (0::?'a))",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_hole 4))),
         t_empty)))]
