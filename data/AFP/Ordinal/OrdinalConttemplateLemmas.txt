   [("OrdinalCont.continuousD",
     "OrdinalCont.continuous ?F ==>
      ?F (oLimit ?f) = oLimit (%n. ?F (?f n))",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_var 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, t_empty)))),
    ("OrdinalCont.normal_range_eq",
     "[| normal ?F; normal ?G; range ?F = range ?G |] ==> ?F = ?G",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1),
            template_hole 1),
          template_app
           (template_app (template_hole 2, template_var 0),
            template_hole 1))],
       template_equation (template_var 1, template_var 0))),
    ("OrdinalCont.normal_range_le",
     "[| normal ?F; normal ?G; range ?G <= range ?F |] ==> ?F ?x <= ?G ?x",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_hole 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_hole 1))],
       template_inequation
        (less_equals, template_app (template_var 2, template_var 0),
         template_app (template_var 1, template_var 0)))),
    ("OrdinalCont.normalI",
     "[| !!f. OrdinalInduct.strict_mono f ==>
              ?F (oLimit f) = oLimit (%n. ?F (f n));
         !!x. ?F x < ?F (oSuc x) |]
      ==> normal ?F",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("OrdinalCont.continuousI",
     "[| !!f. OrdinalInduct.strict_mono f ==>
              ?F (oLimit f) = oLimit (%n. ?F (f n));
         !!x. ?F x <= ?F (oSuc x) |]
      ==> OrdinalCont.continuous ?F",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0))))]
