   [("OrdinalDef.ord0_order_refl", "?x <= ?x",
     template_inequation (less_equals, template_var 0, template_var 0)),
    ("OrdinalDef.oZero_least", "oZero <= ?x",
     template_inequation (less_equals, template_hole 0, template_var 0)),
    ("OrdinalDef.ordinal_order_refl", "?x <= ?x",
     template_inequation (less_equals, template_var 0, template_var 0)),
    ("OrdinalDef.less_ord0_LimI", "?f ?n < ord0_Lim ?f",
     template_inequation
      (less_than, template_app (template_var 1, template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("OrdinalDef.oStrictLimit_ub", "?f ?n < oStrictLimit ?f",
     template_inequation
      (less_than, template_app (template_var 1, template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("OrdinalDef.ord0_leq_refl", "(?x, ?x) : ord0_leq",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 0)),
           template_hole 0)
         )),
    ("OrdinalDef.ord0_linear", "?x <= ?y | ?y <= ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("OrdinalDef.ordinal_linear", "?x <= ?y | ?y <= ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("OrdinalDef.mem_ord0rel_Image", "?x : ord0rel `` {?x}",
     template_predicate
      (
         template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))
         )),
    ("OrdinalDef.ord0_less_imp_le", "?x < ?y ==> ?x <= ?y",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("OrdinalDef.some_ord0rel", "(?x, SOME y. (?x, y) : ord0rel) : ord0rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app (template_hole 1, t_empty))),
           template_hole 0)
         )),
    ("OrdinalDef.ord0_order_less_le", "(?x < ?y) = (?x <= ?y & ~ ?y <= ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("OrdinalDef.ordinal_order_less_le_not_le",
     "(?x < ?y) = (?x <= ?y & ~ ?y <= ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("OrdinalDef.less_ord0_LimD", "?x < ord0_Lim ?f ==> EX n. ?x <= ?f n",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("OrdinalDef.less_oStrictLimitD",
     "?x < oStrictLimit ?f ==> EX n. ?x <= ?f n",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("OrdinalDef.oStrictLimit_lub",
     "ALL n. ?f n < ?x ==> oStrictLimit ?f <= ?x",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("OrdinalDef.Rep_Abs_ord0rel",
     "Rep_ordinal (Abs_ordinal (ord0rel `` {?x})) = ord0rel `` {?x}",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))),
       template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("OrdinalDef.ord0_less_trans", "[| ?x < ?y; ?y < ?z |] ==> ?x < ?z",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("OrdinalDef.ord0_less_le_trans", "[| ?x < ?y; ?y <= ?z |] ==> ?x < ?z",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("OrdinalDef.rev_ord0_le_less_trans",
     "[| ?y < ?z; ?x <= ?y |] ==> ?x < ?z",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_inequation (less_than, template_var 0, template_var 1))),
    ("OrdinalDef.ord0_le_less_trans", "[| ?x <= ?y; ?y < ?z |] ==> ?x < ?z",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("OrdinalDef.ord0_order_trans", "[| ?x <= ?y; ?y <= ?z |] ==> ?x <= ?z",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("OrdinalDef.ordinal_order_antisym",
     "[| ?x <= ?y; ?y <= ?x |] ==> ?x = ?y",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_equation (template_var 1, template_var 0))),
    ("OrdinalDef.ordinal_order_trans",
     "[| ?x <= ?y; ?y <= ?z |] ==> ?x <= ?z",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("OrdinalDef.ord0relD", "(?x, ?y) : ord0rel ==> ?x <= ?y & ?y <= ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("OrdinalDef.ord0_Lim_le",
     "ALL n. ?f n <= ?g n ==> ord0_Lim ?f <= ord0_Lim ?g",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("OrdinalDef.ord0_leI", "ALL a<?x. a < ?y ==> ?x <= ?y",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("OrdinalDef.ord0_linear_lemma",
     "?m < ?n | ?n < ?m | ?m <= ?n & ?n <= ?m",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1))))
         )),
    ("OrdinalDef.Abs_ordinal_cases2",
     "(!!z. ?x = Abs_ordinal (ord0rel `` {z}) ==> ?P) ==> ?P",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("OrdinalDef.Abs_ordinal_less",
     "(Abs_ordinal (ord0rel `` {?x}) < Abs_ordinal (ord0rel `` {?y})) =
      (?x < ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 1)))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1)))),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("OrdinalDef.Abs_ordinal_le",
     "(Abs_ordinal (ord0rel `` {?x}) <= Abs_ordinal (ord0rel `` {?y})) =
      (?x <= ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 1)))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1)))),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("OrdinalDef.Abs_ordinal_oStrictLimit",
     "Abs_ordinal (ord0rel `` {ord0_Lim ?f}) =
      oStrictLimit (%n. Abs_ordinal (ord0rel `` {?f n}))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_hole 1))),
       template_app (template_hole 0, t_empty))),
    ("OrdinalDef.ord0_Lim_ord0rel",
     "ALL n. (?f n, ?g n) : ord0rel ==>
      (ord0_Lim ?f, ord0_Lim ?g) : ord0rel",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 0, template_var 1)),
                 template_app (template_hole 0, template_var 0))),
             template_hole 1)
           ))),
    ("OrdinalDef.ord0_leq_trans",
     "[| (?x, ?y) : ord0_leq; (?y, ?z) : ord0_leq |]
      ==> (?x, ?z) : ord0_leq",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OrdinalDef.ord0_precD",
     "(?x, ?y) : ord0_prec ==> EX f n. ?x = f n & ?y = ord0_Lim f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 0)),
              template_hole 5)
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("OrdinalDef.oStrictLimit_induct",
     "[| ?P oZero; !!f. ALL n. ?P (f n) ==> ?P (oStrictLimit f) |]
      ==> ?P ?a",
     template_implication
      ([template_predicate (template_app (template_var 1, template_hole 3)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("OrdinalDef.Abs_ordinal_eq",
     "(Abs_ordinal (ord0rel `` {?x}) = Abs_ordinal (ord0rel `` {?y})) =
      (?x <= ?y & ?y <= ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)))),
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2)))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("OrdinalDef.ord0_prec_induct",
     "(!!x. ALL y. (y, x) : ord0_prec^+ --> ?P y ==> ?P x) ==> ?P ?a",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("OrdinalDef.ord0_leqD",
     "[| (?x, ?y) : ord0_leq; (?a, ?x) : ord0_prec^+ |]
      ==> (?a, ?y) : ord0_leq O ord0_prec^+",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_var 2)),
              template_app (template_hole 2, template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_hole 3),
               template_app (template_hole 2, template_hole 1)))
           ))),
    ("OrdinalDef.ord0_leqI",
     "ALL a. (a, ?x) : ord0_prec^+ --> (a, ?y) : ord0_leq O ord0_prec^+ ==>
      (?x, ?y) : ord0_leq",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OrdinalDef.ord0_less_induct",
     "(!!x. ALL y. (y, x) : {(x, y). x < y} --> ?P y ==> ?P x) ==> ?P ?a",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (template_app (template_var 1, template_var 0))))]
