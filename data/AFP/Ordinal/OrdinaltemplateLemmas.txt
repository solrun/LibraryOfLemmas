   [("OrdinalDef.ord0_order_refl", "?x <= ?x",
     template_inequation (less_equals, template_var 0, template_var 0)),
    ("OrdinalInduct.ordinal_0_le", "0 <= ?x",
     template_inequation (less_equals, template_hole 0, template_var 0)),
    ("OrdinalDef.oZero_least", "oZero <= ?x",
     template_inequation (less_equals, template_hole 0, template_var 0)),
    ("OrdinalDef.ordinal_order_refl", "?x <= ?x",
     template_inequation (less_equals, template_var 0, template_var 0)),
    ("OrdinalInverse.ordinal_mono_oLog", "mono (oLog ?b)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("OrdinalArith.continuous_times", "OrdinalCont.continuous ((*) ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("OrdinalArith.normal_plus", "normal ((+) ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("OrdinalFix.normal_oDeriv", "normal (oDeriv ?F)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("OrdinalOmega.is_normalized2_to_cnf2", "is_normalized2 (to_cnf2 ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("OrdinalInduct.ordinal_not_less_0", "~ ?x < 0",
     template_negation
      (template_inequation (less_than, template_var 0, template_hole 0))),
    ("OrdinalInduct.limit_ordinal_not_oSuc", "~ limit_ordinal (oSuc ?p)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("OrdinalOmega.not_limit_ordinal_nat",
     "~ limit_ordinal (ordinal_of_nat ?n)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("OrdinalInduct.zero_less_oSuc", "0 < oSuc ?x",
     template_inequation
      (less_than, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("OrdinalInduct.less_oSuc", "?x < oSuc ?x",
     template_inequation
      (less_than, template_var 0,
       template_app (template_hole 0, template_var 0))),
    ("OrdinalOmega.nat_less_omega", "ordinal_of_nat ?n < \<omega>",
     template_inequation
      (less_than, template_app (template_hole 1, template_var 0),
       template_hole 0)),
    ("OrdinalOmega.nat_le_omega", "ordinal_of_nat ?n <= \<omega>",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_hole 0)),
    ("OrdinalOmega.additive_principal_omega_exp",
     "additive_principal (\<omega> ** ?x)",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))
         )),
    ("OrdinalInverse.ordinal_1_dvd", "oSuc 0 dvd ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)),
           template_var 0)
         )),
    ("OrdinalInduct.oSuc_not_0", "oSuc ?x ~= 0",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("OrdinalVeblen.critical_set_0", "critical_set ?A 0 = ?A",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("OrdinalArith.ordinal_0_minus", "0 - ?x = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("OrdinalArith.ordinal_minus_0", "?x - 0 = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("OrdinalArith.ordinal_0_plus", "0 + ?x = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("OrdinalArith.ordinal_plus_0", "?x + 0 = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("OrdinalArith.ordinal_0_times", "0 * ?x = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("OrdinalArith.ordinal_times_0", "?x * 0 = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("OrdinalArith.ordinal_exp_0", "?x ** 0 = 1",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("OrdinalInduct.oLimit_const", "oLimit (%n. ?x) = ?x",
     template_equation
      (template_app (template_hole 0, t_empty), template_var 0)),
    ("OrdinalInverse.ordinal_oLog_base_0", "oLog 0 ?x = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("OrdinalInverse.ordinal_oLog_0", "oLog ?b 0 = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("OrdinalOmega.to_cnf_inverse", "from_cnf (to_cnf ?x) = ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("OrdinalOmega.to_cnf2_inverse", "from_cnf2 (to_cnf2 ?x) = ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("OrdinalRec.oPrec_oSuc", "oPrec (oSuc ?x) = ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("OrdinalInverse.ordinal_0_div", "0 div ?x = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("OrdinalInverse.ordinal_div_0", "?x div 0 = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("OrdinalInverse.ordinal_0_mod", "0 mod ?x = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("OrdinalInverse.ordinal_mod_0", "?x mod 0 = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("OrdinalInverse.ordinal_mod_self", "?x mod ?x = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("OrdinalDef.less_ord0_LimI", "?f ?n < ord0_Lim ?f",
     template_inequation
      (less_than, template_app (template_var 1, template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("OrdinalDef.oStrictLimit_ub", "?f ?n < oStrictLimit ?f",
     template_inequation
      (less_than, template_app (template_var 1, template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("OrdinalFix.le_oFix", "?a <= oFix ?F ?a",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("OrdinalArith.ordinal_le_plusR", "?x <= ?x + ?y",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("OrdinalArith.ordinal_le_plusL", "?y <= ?x + ?y",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("OrdinalInduct.oLimit_le_oStrictLimit", "oLimit ?f <= oStrictLimit ?f",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("OrdinalInduct.le_oLimit", "?f ?n <= oLimit ?f",
     template_inequation
      (less_equals, template_app (template_var 1, template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("OrdinalInverse.ordinal_oLog_decreasing", "oLog ?b ?x <= ?x",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_var 0)),
    ("OrdinalInverse.ordinal_div_decreasing", "?x div ?y <= ?x",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_var 1)),
    ("OrdinalInverse.ordinal_mono_div", "mono (%x. x div ?y)",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("OrdinalArith.continuous_minus", "OrdinalCont.continuous (%x. x - ?y)",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("OrdinalDef.ord0_leq_refl", "(?x, ?x) : ord0_leq",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 0)),
           template_hole 0)
         )),
    ("OrdinalOmega.normalize_cnf_to_cnf",
     "normalize_cnf (to_cnf ?x) = to_cnf ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("OrdinalOmega.from_cnf_normalize_cnf",
     "from_cnf (normalize_cnf ?xs) = from_cnf ?xs",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("OrdinalOmega.ordinal_of_nat_plus_omega",
     "ordinal_of_nat ?n + \<omega> = \<omega>",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_hole 0)),
    ("OrdinalArith.ordinal_times_1", "?x * oSuc 0 = ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)),
       template_var 0)),
    ("OrdinalArith.ordinal_1_times", "oSuc 0 * ?x = ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0)),
         template_var 0),
       template_var 0)),
    ("OrdinalArith.ordinal_exp_1", "?x ** oSuc 0 = ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)),
       template_var 0)),
    ("OrdinalInverse.ordinal_oLog_base_1", "oLog (oSuc 0) ?x = 0",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0)),
         template_var 0),
       template_hole 0)),
    ("OrdinalRec.ordinal_rec_0", "ordinal_rec ?z ?s 0 = ?z",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_var 1)),
    ("OrdinalInverse.ordinal_div_1", "?x div oSuc 0 = ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)),
       template_var 0)),
    ("OrdinalInverse.ordinal_mod_1", "?x mod oSuc 0 = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)),
       template_hole 0)),
    ("OrdinalFix.le_oFix1", "?F ?a <= oFix ?F ?a",
     template_inequation
      (less_equals, template_app (template_var 1, template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("OrdinalInduct.strict_mono_mono",
     "OrdinalInduct.strict_mono ?f ==> mono ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("OrdinalDef.ord0_linear", "?x <= ?y | ?y <= ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("OrdinalDef.ordinal_linear", "?x <= ?y | ?y <= ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("OrdinalRec.ordinal_rec0_0", "ordinal_rec0 ?z ?s ?l 0 = ?z",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0),
         template_hole 0),
       template_var 2)),
    ("OrdinalInduct.ordinal_le_0", "(?x <= 0) = (?x = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("OrdinalOmega.additive_principal_oSuc",
     "additive_principal (oSuc ?a) = (?a = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0))
            )],
       template_equation (template_var 0, template_hole 0))),
    ("OrdinalFix.oDeriv_0", "oDeriv ?F 0 = oFix ?F 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 0), template_hole 1))),
    ("OrdinalArith.ordinal_1_exp", "oSuc 0 ** ?x = oSuc 0",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0)),
         template_var 0),
       template_app (template_hole 1, template_hole 0))),
    ("OrdinalArith.ordinal_plus_minus1", "?x + ?y - ?x = ?y",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1),
       template_var 0)),
    ("OrdinalInverse.ordinal_times_div_le", "?y * (?x div ?y) <= ?x",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_var 0)),
    ("OrdinalDef.mem_ord0rel_Image", "?x : ord0rel `` {?x}",
     template_predicate
      (
         template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))
         )),
    ("OrdinalFix.mono_oFix", "mono ?F ==> mono (oFix ?F)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("OrdinalInduct.zero_less_limit_ordinal", "limit_ordinal ?x ==> 0 < ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_inequation (less_than, template_hole 0, template_var 0))),
    ("OrdinalInduct.strict_mono_limit_ordinal",
     "OrdinalInduct.strict_mono ?f ==> limit_ordinal (oLimit ?f)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("OrdinalVeblen.oDeriv_plus", "oDeriv ((+) ?a) = (+) (?a * \<omega>)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("OrdinalInduct.ordinal_neq_0", "(?x ~= 0) = (0 < ?x)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_hole 1), template_var 0))),
    ("OrdinalInduct.ordinal_not_0_less", "(~ 0 < ?x) = (?x = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 0))
            )],
       template_equation (template_var 0, template_hole 1))),
    ("OrdinalInduct.less_oSuc0", "(?x < oSuc 0) = (?x = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_hole 1))
            )],
       template_equation (template_var 0, template_hole 1))),
    ("OrdinalInduct.less_oSuc_eq_le", "(?x < oSuc ?y) = (?x <= ?y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("OrdinalOmega.oSuc_less_omega",
     "(oSuc ?x < \<omega>) = (?x < \<omega>)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_app
        (template_app (template_hole 2, template_var 0), template_hole 0))),
    ("OrdinalInduct.oSuc_le_eq_less", "(oSuc ?x <= ?y) = (?x < ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("OrdinalOmega.oSuc_plus_omega", "oSuc ?x + \<omega> = ?x + \<omega>",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_app
        (template_app (template_hole 2, template_var 0), template_hole 0))),
    ("OrdinalRec.limit_ordinal_not_0", "limit_ordinal ?x ==> ?x ~= 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("OrdinalVeblen.normal_set_critical_set",
     "normal_set ?A ==> normal_set (critical_set ?A ?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("OrdinalDef.ord0_less_imp_le", "?x < ?y ==> ?x <= ?y",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("OrdinalArith.continuous_exp",
     "0 < ?x ==> OrdinalCont.continuous ((**) ?x)",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("OrdinalArith.normal_times", "0 < ?x ==> normal ((*) ?x)",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("OrdinalVeblen.oVeblen_1_plus",
     "oVeblen ((+) 1) ?x = (+) (\<omega> ** ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app (template_hole 3, template_hole 2)),
         template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("OrdinalInverse.ordinal_dvd_mod", "(?y dvd ?x) = (?x mod ?y = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("OrdinalInduct.oSuc_eq_oSuc", "(oSuc ?x = oSuc ?y) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("OrdinalOmega.ordinal_of_nat_eq",
     "(ordinal_of_nat ?x = ordinal_of_nat ?y) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("OrdinalInduct.oSuc_less_oSuc", "(oSuc ?x < oSuc ?y) = (?x < ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("OrdinalOmega.ordinal_of_nat_less",
     "(ordinal_of_nat ?x < ordinal_of_nat ?y) = (?x < ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("OrdinalInduct.oSuc_le_oSuc", "(oSuc ?x <= oSuc ?y) = (?x <= ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("OrdinalOmega.ordinal_of_nat_le",
     "(ordinal_of_nat ?x <= ordinal_of_nat ?y) = (?x <= ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("OrdinalVeblen.ordering_0",
     "OrdinalVeblen.ordering ?A 0 = (LEAST z. z : ?A)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_app (template_hole 1, t_empty))),
    ("OrdinalArith.ordinal_plus_oSuc", "?x + oSuc ?y = oSuc (?x + ?y)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("OrdinalOmega.ordinal_plus_times_omega",
     "?x + ?x * \<omega> = ?x * \<omega>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("OrdinalRec.limit_ordinal_not_oSuc",
     "limit_ordinal ?x ==> ?x ~= oSuc ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_negation
        (
           template_equation
            (template_var 1, template_app (template_hole 0, template_var 0))
           ))),
    ("OrdinalInduct.strict_mono_less_oLimit",
     "OrdinalInduct.strict_mono ?f ==> ?f ?n < oLimit ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_inequation
        (less_than, template_app (template_var 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("OrdinalOmega.additive_principal_times_omega",
     "0 < ?x ==> additive_principal (?x * \<omega>)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("OrdinalInduct.oSuc_leI", "?x < ?y ==> oSuc ?x <= ?y",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("OrdinalArith.normal_exp", "oSuc 0 < ?x ==> normal ((**) ?x)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 3, template_hole 2),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("OrdinalOmega.additive_principal_iff",
     "additive_principal ?a = (EX x. ?a = \<omega> ** x)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app (template_hole 3, t_empty))),
    ("OrdinalFix.zero_less_oFix_eq", "(0 < oFix ?F 0) = (0 < ?F 0)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_var 0, template_hole 1)))),
    ("OrdinalArith.ordinal_0_exp", "0 ** ?x = (if ?x = 0 then 1 else 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 2)),
               template_hole 0),
             template_hole 2)
           ))),
    ("OrdinalArith.ordinal_times_oSuc", "?x * oSuc ?y = ?x * ?y + ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_var 1))),
    ("OrdinalArith.ordinal_exp_oSuc", "?x ** oSuc ?y = ?x ** ?y * ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_var 1))),
    ("OrdinalOmega.ordinal_of_nat_plus",
     "ordinal_of_nat ?x + ordinal_of_nat ?y = ordinal_of_nat (?x + ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("OrdinalOmega.ordinal_of_nat_times",
     "ordinal_of_nat ?x * ordinal_of_nat ?y = ordinal_of_nat (?x * ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("OrdinalOmega.ordinal_of_nat_exp",
     "ordinal_of_nat ?x ** ordinal_of_nat ?y = ordinal_of_nat (?x ^ ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("OrdinalVeblen.oFix_plus", "oFix ((+) ?a) 0 = ?a * \<omega>",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty), template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("OrdinalFix.oDeriv_increasing",
     "OrdinalCont.continuous ?F ==> ?F ?x <= oDeriv ?F ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_inequation
        (less_equals, template_app (template_var 1, template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("OrdinalInverse.ordinal_div_self", "0 < ?x ==> ?x div ?x = 1",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 0),
         template_hole 0))),
    ("OrdinalArith.ordinal_le_timesL", "0 < ?x ==> ?y <= ?x * ?y",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 1)],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("OrdinalArith.ordinal_less_plusR", "0 < ?y ==> ?x < ?x + ?y",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 1)],
       template_inequation
        (less_than, template_var 0,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("OrdinalInverse.ordinal_mod_less", "0 < ?y ==> ?x mod ?y < ?y",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("OrdinalArith.ordinal_le_timesR", "0 < ?y ==> ?x <= ?x * ?y",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 1)],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("OrdinalArith.ordinal_le_expR", "0 < ?y ==> ?x <= ?x ** ?y",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 1)],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("OrdinalOmega.less_omega_exp",
     "?x < \<epsilon>\<^sub>0 ==> ?x < \<omega> ** ?x",
     template_implication
      ([template_inequation (less_than, template_var 0, template_hole 2)],
       template_inequation
        (less_than, template_var 0,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("OrdinalInverse.ordinal_div_greater", "?x < ?y ==> ?x div ?y = 0",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("OrdinalInverse.ordinal_mod_greater", "?x < ?y ==> ?x mod ?y = ?x",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("OrdinalArith.ordinal_minus_eq_0", "?x <= ?y ==> ?x - ?y = 0",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("OrdinalInduct.less_oLimitI", "?x < ?f ?n ==> ?x < oLimit ?f",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_var 1, template_var 0))],
       template_inequation
        (less_than, template_var 2,
         template_app (template_hole 0, template_var 1)))),
    ("OrdinalInduct.le_oLimitI", "?x <= ?f ?n ==> ?x <= oLimit ?f",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_var 1, template_var 0))],
       template_inequation
        (less_equals, template_var 2,
         template_app (template_hole 0, template_var 1)))),
    ("OrdinalOmega.additive_principal_oLimit",
     "ALL n. additive_principal (?f n) ==> additive_principal (oLimit ?f)",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("OrdinalArith.not_inject", "(~ ?P) = (~ ?Q) ==> ?P = ?Q",
     template_implication
      ([template_equation
         (template_app (template_hole 0, template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("OrdinalOmega.ordinal_plus_absorb_iff",
     "(?x + ?y = ?y) = (?x * \<omega> <= ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0))),
    ("OrdinalOmega.ordinal_less_plusL_iff",
     "(?y < ?x + ?y) = (?y < ?x * \<omega>)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("OrdinalArith.ordinal_minus_le_eq",
     "(?x - ?y <= ?z) = (?x <= ?y + ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("OrdinalArith.ordinal_plus_left_cancel",
     "(?w + ?x = ?w + ?y) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("OrdinalArith.ordinal_plus_left_cancel_less",
     "(?w + ?x < ?w + ?y) = (?x < ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("OrdinalArith.ordinal_plus_left_cancel_le",
     "(?w + ?x <= ?w + ?y) = (?x <= ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("OrdinalArith.ordinal_oLimit_minus",
     "oLimit ?f - ?y = oLimit (%n. ?f n - ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app (template_hole 0, t_empty))),
    ("OrdinalArith.ordinal_plus_oLimit",
     "?x + oLimit ?f = oLimit (%n. ?x + ?f n)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, t_empty))),
    ("OrdinalArith.ordinal_times_oLimit",
     "?x * oLimit ?f = oLimit (%n. ?x * ?f n)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, t_empty))),
    ("OrdinalFix.oDeriv_oLimit",
     "oDeriv ?F (oLimit ?f) = oLimit (%n. oDeriv ?F (?f n))",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, t_empty))),
    ("OrdinalFix.oDeriv_oSuc",
     "oDeriv ?F (oSuc ?x) = oFix ?F (oSuc (oDeriv ?F ?x))",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("OrdinalOmega.oSuc_plus_ordinal_of_nat",
     "oSuc ?x + ordinal_of_nat ?n = oSuc (?x + ordinal_of_nat ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("OrdinalArith.ordinal_plus_assoc", "?x + ?y + ?z = ?x + (?y + ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("OrdinalArith.ordinal_times_assoc", "?x * ?y * ?z = ?x * (?y * ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("OrdinalArith.ordinal_exp_assoc", "(?x ** ?y) ** ?z = ?x ** (?y * ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("OrdinalInverse.ordinal_div_plus_mod",
     "?y * (?x div ?y) + ?x mod ?y = ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1))),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_var 0)),
    ("OrdinalDef.some_ord0rel", "(?x, SOME y. (?x, y) : ord0rel) : ord0rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app (template_hole 1, t_empty))),
           template_hole 0)
         )),
    ("OrdinalOmega.ordinal_of_nat_times_omega",
     "0 < ?k ==> ordinal_of_nat ?k * \<omega> = \<omega>",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0),
         template_hole 0))),
    ("OrdinalOmega.less_omegaD",
     "?x < \<omega> ==> EX n. ?x = ordinal_of_nat n",
     template_implication
      ([template_inequation (less_than, template_var 0, template_hole 3)],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("OrdinalFix.oFix_eq_self", "?F ?a = ?a ==> oFix ?F ?a = ?a",
     template_implication
      ([template_equation
         (template_app (template_var 1, template_var 0), template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("OrdinalFix.less_oFixI", "?a < ?F ?a ==> ?a < oFix ?F ?a",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_var 0, template_var 1))],
       template_inequation
        (less_than, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("OrdinalOmega.omega_leI",
     "ALL n. ordinal_of_nat n <= ?x ==> \<omega> <= ?x",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation (less_equals, template_hole 0, template_var 0))),
    ("OrdinalDef.ord0_order_less_le", "(?x < ?y) = (?x <= ?y & ~ ?y <= ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("OrdinalDef.ordinal_order_less_le_not_le",
     "(?x < ?y) = (?x <= ?y & ~ ?y <= ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("OrdinalRec.ordinal_rec_oSuc",
     "ordinal_rec ?z ?s (oSuc ?x) = ?s ?x (ordinal_rec ?z ?s ?x)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_var 1, template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("OrdinalFix.oDeriv_fixed",
     "normal ?F ==> ?F (oDeriv ?F ?n) = oDeriv ?F ?n",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_var 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("OrdinalInduct.oSuc_less_limit_ordinal",
     "limit_ordinal ?x ==> (oSuc ?w < ?x) = (?w < ?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("OrdinalOmega.ordinal_of_nat_of_ordinal",
     "?x < \<omega> ==> ordinal_of_nat (inv ordinal_of_nat ?x) = ?x",
     template_implication
      ([template_inequation (less_than, template_var 0, template_hole 4)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_hole 2),
             template_var 0)),
         template_var 0))),
    ("OrdinalArith.ordinal_plus_strict_monoR",
     "?y < ?y' ==> ?x + ?y < ?x + ?y'",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("OrdinalArith.ordinal_plus_monoL", "?x <= ?x' ==> ?x + ?y <= ?x' + ?y",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("OrdinalArith.ordinal_times_monoL",
     "?x <= ?x' ==> ?x * ?y <= ?x' * ?y",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("OrdinalArith.ordinal_exp_monoL",
     "?x <= ?x' ==> ?x ** ?y <= ?x' ** ?y",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("OrdinalInverse.ordinal_div_monoL",
     "?x <= ?x' ==> ?x div ?y <= ?x' div ?y",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("OrdinalArith.ordinal_plus_minus2", "?x <= ?y ==> ?x + (?y - ?x) = ?y",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 0))),
    ("OrdinalVeblen.critical_set_mono",
     "?x <= ?y ==> critical_set ?A ?y <= critical_set ?A ?x",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("OrdinalArith.ordinal_minus_monoL", "?x <= ?y ==> ?x - ?z <= ?y - ?z",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("OrdinalArith.ordinal_minus_monoR", "?x <= ?y ==> ?z - ?y <= ?z - ?x",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("OrdinalInverse.ordinal_oLog_monoR",
     "?x <= ?y ==> oLog ?b ?x <= oLog ?b ?y",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("OrdinalArith.ordinal_plus_monoR", "?y <= ?y' ==> ?x + ?y <= ?x + ?y'",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("OrdinalArith.ordinal_times_monoR",
     "?y <= ?y' ==> ?x * ?y <= ?x * ?y'",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("OrdinalInverse.ordinal_dvd_times_div",
     "?y dvd ?x ==> ?y * (?x div ?y) = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 0))),
    ("OrdinalDef.less_ord0_LimD", "?x < ord0_Lim ?f ==> EX n. ?x <= ?f n",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("OrdinalDef.less_oStrictLimitD",
     "?x < oStrictLimit ?f ==> EX n. ?x <= ?f n",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("OrdinalInduct.less_oLimitD", "?x < oLimit ?f ==> EX n. ?x < ?f n",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("OrdinalInverse.ordinal_oLog_self",
     "oSuc 0 < ?b ==> oLog ?b ?b = oSuc 0",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 3, template_hole 2),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 0),
         template_app (template_hole 3, template_hole 2)))),
    ("OrdinalArith.ordinal_minusI", "?x = ?y + ?z ==> ?x - ?y = ?z",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("OrdinalInverse.ordinal_div_less", "?x < ?y * ?z ==> ?x div ?y < ?z",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("OrdinalOmega.ordinal_less_plusL",
     "?y < ?x * \<omega> ==> ?y < ?x + ?y",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app
           (template_app (template_hole 2, template_var 0),
            template_hole 1))],
       template_inequation
        (less_than, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("OrdinalOmega.ordinal_plus_absorb",
     "?x * \<omega> <= ?y ==> ?x + ?y = ?y",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_hole 2),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("OrdinalDef.oStrictLimit_lub",
     "ALL n. ?f n < ?x ==> oStrictLimit ?f <= ?x",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("OrdinalInduct.oLimit_leI", "ALL n. ?f n <= ?x ==> oLimit ?f <= ?x",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("OrdinalInverse.ordinal_dvd_oLimit",
     "ALL n. ?x dvd ?f n ==> ?x dvd oLimit ?f",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("OrdinalRec.oPrec_less", "EX p. ?x = oSuc p ==> oPrec ?x < ?x",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 0),
         template_var 0))),
    ("OrdinalInduct.limit_ordinal_oLimitI",
     "ALL n. ?f n < oLimit ?f ==> limit_ordinal (oLimit ?f)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 0))
           ))),
    ("OrdinalInduct.strict_mono_natI",
     "(!!n. ?f n < ?f (Suc n)) ==> OrdinalInduct.strict_mono ?f",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("OrdinalInduct.mono_natI", "(!!n. ?f n <= ?f (Suc n)) ==> incseq ?f",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("OrdinalDef.Rep_Abs_ord0rel",
     "Rep_ordinal (Abs_ordinal (ord0rel `` {?x})) = ord0rel `` {?x}",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))),
       template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("OrdinalVeblen.critical_set_oLimit",
     "critical_set ?A (oLimit ?f) = (INT n. critical_set ?A (?f n))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_hole 0)))),
    ("OrdinalArith.ordinal_plus_eq_0", "(?x + ?y = 0) = (?x = 0 & ?y = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 1))
           ))),
    ("OrdinalArith.ordinal_times_eq_0", "(?x * ?y = 0) = (?x = 0 | ?y = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 1))
           ))),
    ("OrdinalArith.ordinal_exp_eq_0", "(?x ** ?y = 0) = (?x = 0 & 0 < ?y)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_hole 2),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_hole 2)),
             template_app
              (template_app (template_hole 0, template_hole 2),
               template_var 0))
           ))),
    ("OrdinalArith.ordinal_plus_not_0", "(0 < ?x + ?y) = (0 < ?x | 0 < ?y)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)))),
    ("OrdinalArith.ordinal_times_not_0",
     "(0 < ?x * ?y) = (0 < ?x & 0 < ?y)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)))),
    ("OrdinalArith.ordinal_exp_not_0", "(0 < ?x ** ?y) = (0 < ?x | ?y = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_hole 3))
           ))),
    ("OrdinalArith.ordinal_times_distrib",
     "?x * (?y + ?z) = ?x * ?y + ?x * ?z",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("OrdinalArith.ordinal_exp_distrib",
     "?x ** (?y + ?z) = ?x ** ?y * ?x ** ?z",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("OrdinalInduct.oLimit_shift_mono",
     "incseq ?f ==> oLimit (%n. ?f (n + ?k)) = oLimit ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app (template_hole 1, t_empty),
         template_app (template_hole 1, template_var 1)))),
    ("OrdinalCont.continuousD",
     "OrdinalCont.continuous ?F ==>
      ?F (oLimit ?f) = oLimit (%n. ?F (?f n))",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_var 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, t_empty)))),
    ("OrdinalInduct.strict_mono_cancel_eq",
     "OrdinalInduct.strict_mono ?f ==> (?f ?x = ?f ?y) = (?x = ?y)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_bimplication
        (template_equation
          (template_app (template_var 2, template_var 1),
           template_app (template_var 2, template_var 0)),
         template_equation (template_var 1, template_var 0)))),
    ("OrdinalInduct.strict_mono_cancel_less",
     "OrdinalInduct.strict_mono ?f ==> (?f ?x < ?f ?y) = (?x < ?y)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_var 2, template_var 1)),
           template_app (template_var 2, template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("OrdinalInduct.strict_mono_cancel_le",
     "OrdinalInduct.strict_mono ?f ==> (?f ?x <= ?f ?y) = (?x <= ?y)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_var 2, template_var 1)),
           template_app (template_var 2, template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("OrdinalArith.ordinal_oSuc_minus2",
     "?x < ?y ==> oSuc ?x - ?y = ?x - ?y",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("OrdinalInverse.ordinal_oLog_exp",
     "oSuc 0 < ?b ==> oLog ?b (?b ** ?x) = ?x",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 4, template_hole 3),
          template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("OrdinalOmega.to_cnf_eq_Cons",
     "to_cnf ?x = ?a # ?list ==> ?a = oLog \<omega> ?x",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 2)))),
    ("OrdinalDef.ord0_less_trans", "[| ?x < ?y; ?y < ?z |] ==> ?x < ?z",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("OrdinalDef.ord0_less_le_trans", "[| ?x < ?y; ?y <= ?z |] ==> ?x < ?z",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("OrdinalDef.rev_ord0_le_less_trans",
     "[| ?y < ?z; ?x <= ?y |] ==> ?x < ?z",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_inequation (less_than, template_var 0, template_var 1))),
    ("OrdinalDef.ord0_le_less_trans", "[| ?x <= ?y; ?y < ?z |] ==> ?x < ?z",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("OrdinalDef.ord0_order_trans", "[| ?x <= ?y; ?y <= ?z |] ==> ?x <= ?z",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("OrdinalDef.ordinal_order_antisym",
     "[| ?x <= ?y; ?y <= ?x |] ==> ?x = ?y",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_equation (template_var 1, template_var 0))),
    ("OrdinalDef.ordinal_order_trans",
     "[| ?x <= ?y; ?y <= ?z |] ==> ?x <= ?z",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("OrdinalRec.ordinal_rec0_oSuc",
     "ordinal_rec0 ?z ?s ?l (oSuc ?x) = ?s ?x (ordinal_rec0 ?z ?s ?l ?x)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_var 2, template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("OrdinalOmega.cnf_lemma",
     "0 < ?x ==> ?x - \<omega> ** oLog \<omega> ?x < ?x",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_hole 1),
               template_var 0))),
         template_var 0))),
    ("OrdinalOmega.cnf2_lemma",
     "0 < ?x ==> ?x mod \<omega> ** oLog \<omega> ?x < ?x",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_hole 1),
               template_var 0))),
         template_var 0))),
    ("OrdinalInverse.ordinal_less_times_div_plus",
     "0 < ?y ==> ?x < ?y * (?x div ?y) + ?y",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 1)],
       template_inequation
        (less_than, template_var 0,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1))),
           template_var 1)))),
    ("OrdinalArith.ordinal_oSuc_minus",
     "?y <= ?x ==> oSuc ?x - ?y = oSuc (?x - ?y)",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("OrdinalDef.ord0relD", "(?x, ?y) : ord0rel ==> ?x <= ?y & ?y <= ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("OrdinalDef.ord0_Lim_le",
     "ALL n. ?f n <= ?g n ==> ord0_Lim ?f <= ord0_Lim ?g",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("OrdinalDef.ord0_leI", "ALL a<?x. a < ?y ==> ?x <= ?y",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("OrdinalInduct.strict_monoD",
     "[| OrdinalInduct.strict_mono ?f; ?A < ?B |] ==> ?f ?A < ?f ?B",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_than, template_app (template_var 2, template_var 1),
         template_app (template_var 2, template_var 0)))),
    ("OrdinalInduct.strict_mono_monoD",
     "[| OrdinalInduct.strict_mono ?f; ?A <= ?B |] ==> ?f ?A <= ?f ?B",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_var 2, template_var 1),
         template_app (template_var 2, template_var 0)))),
    ("OrdinalDef.ord0_linear_lemma",
     "?m < ?n | ?n < ?m | ?m <= ?n & ?n <= ?m",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1))))
         )),
    ("OrdinalOmega.less_ordinal_of_nat",
     "(?x < ordinal_of_nat ?n) = (EX m. ?x = ordinal_of_nat m & m < ?n)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app (template_hole 4, template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("OrdinalOmega.le_ordinal_of_nat",
     "(?x <= ordinal_of_nat ?n) = (EX m. ?x = ordinal_of_nat m & m <= ?n)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app (template_hole 4, template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("OrdinalFix.range_oDeriv",
     "normal ?F ==> range (oDeriv ?F) = {x. ?F x = x}",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_hole 2),
         template_app (template_hole 1, t_empty)))),
    ("OrdinalInverse.ordinal_less_exp_oLog",
     "oSuc 0 < ?b ==> ?x < ?b ** oLog ?b ?x * ?b",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 4, template_hole 3),
          template_var 1)],
       template_inequation
        (less_than, template_var 0,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))),
           template_var 1)))),
    ("OrdinalInverse.ordinal_div_exp_oLog_less",
     "oSuc 0 < ?b ==> ?x div ?b ** oLog ?b ?x < ?b",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 4, template_hole 3),
          template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_var 1))),
    ("OrdinalInduct.oLimit_Suc",
     "?f 0 < oLimit ?f ==> oLimit (%n. ?f (Suc n)) = oLimit ?f",
     template_implication
      ([template_inequation
         (less_than, template_app (template_var 0, template_hole 3),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_hole 2, t_empty),
         template_app (template_hole 2, template_var 0)))),
    ("OrdinalInduct.strict_mono_f_make_mono",
     "ALL n. ?f n < oLimit ?f ==>
      OrdinalInduct.strict_mono (%n. ?f (make_mono ?f n))",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("OrdinalOmega.to_cnf2_eq_Cons",
     "to_cnf2 ?x = (?a, ?b) # ?list ==> ?a = oLog \<omega> ?x",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 3),
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1)),
            template_var 0))],
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 3)))),
    ("OrdinalRec.normal_ordinal_rec",
     "ALL p x. x < ?s p x ==> normal (ordinal_rec ?z ?s)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("OrdinalRec.mono_ordinal_rec",
     "ALL p x. x <= ?s p x ==> mono (ordinal_rec ?z ?s)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("OrdinalRec.continuous_ordinal_rec",
     "ALL p x. x <= ?s p x ==> OrdinalCont.continuous (ordinal_rec ?z ?s)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("OrdinalOmega.oLog_omega_less",
     "[| 0 < ?x; ?x < \<epsilon>\<^sub>0 |] ==> oLog \<omega> ?x < ?x",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0),
        template_inequation (less_than, template_var 0, template_hole 2)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0),
         template_var 0))),
    ("OrdinalFix.oDeriv_fixedD",
     "[| oDeriv ?F ?x = ?x; normal ?F |] ==> ?F ?x = ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 0),
          template_var 0),
        template_predicate
         (template_app (template_hole 0, template_var 1))],
       template_equation
        (template_app (template_var 1, template_var 0), template_var 0))),
    ("OrdinalFix.less_oFix_0D",
     "[| ?x < oFix ?F 0; mono ?F |] ==> ?x < ?F ?x",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app
           (template_app (template_hole 2, template_var 0),
            template_hole 1)),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_inequation
        (less_than, template_var 1,
         template_app (template_var 0, template_var 1)))),
    ("OrdinalVeblen.critical_set_oSuc_lemma",
     "critical_set ?A (oSuc ?n) =
      critical_set ?A ?n Int
      range (oDeriv (OrdinalVeblen.ordering (critical_set ?A ?n)))",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1),
         template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_var 0)))),
           template_hole 0)))),
    ("OrdinalVeblen.ordering_oSuc",
     "OrdinalVeblen.ordering ?A (oSuc ?x) =
      (LEAST z. z : ?A & OrdinalVeblen.ordering ?A ?x < z)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app (template_hole 4, template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("OrdinalVeblen.critical_set_oSuc",
     "normal_set ?A ==>
      critical_set ?A (oSuc ?x) =
      range (oDeriv (OrdinalVeblen.ordering (critical_set ?A ?x)))",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1),
           template_app (template_hole 4, template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_var 0)))),
           template_hole 0)))),
    ("OrdinalArith.ordinal_times_left_cancel",
     "0 < ?w ==> (?w * ?x = ?w * ?y) = (?x = ?y)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 2)],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_equation (template_var 1, template_var 0)))),
    ("OrdinalArith.ordinal_times_left_cancel_less",
     "0 < ?w ==> (?w * ?x < ?w * ?y) = (?x < ?y)",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("OrdinalArith.ordinal_times_left_cancel_le",
     "0 < ?w ==> (?w * ?x <= ?w * ?y) = (?x <= ?y)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("OrdinalArith.ordinal_exp_oLimit",
     "0 < ?x ==> ?x ** oLimit ?f = oLimit (%n. ?x ** ?f n)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, t_empty)))),
    ("OrdinalOmega.absorb_omega_exp2",
     "?a < ?b ==> \<omega> ** ?a + \<omega> ** ?b = \<omega> ** ?b",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("OrdinalArith.ordinal_minus_less_eq",
     "?y <= ?x ==> (?x - ?y < ?z) = (?x < ?y + ?z)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("OrdinalOmega.absorb_omega_exp",
     "?x < \<omega> ** ?a ==> ?x + \<omega> ** ?a = \<omega> ** ?a",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app
           (template_app (template_hole 3, template_hole 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)))),
    ("OrdinalDef.Abs_ordinal_cases2",
     "(!!z. ?x = Abs_ordinal (ord0rel `` {z}) ==> ?P) ==> ?P",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("OrdinalArith.ordinal_less_timesR",
     "[| 0 < ?x; oSuc 0 < ?y |] ==> ?x < ?x * ?y",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 1),
        template_inequation
         (less_than, template_app (template_hole 1, template_hole 2),
          template_var 0)],
       template_inequation
        (less_than, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("OrdinalDef.Abs_ordinal_less",
     "(Abs_ordinal (ord0rel `` {?x}) < Abs_ordinal (ord0rel `` {?y})) =
      (?x < ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 1)))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1)))),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("OrdinalDef.Abs_ordinal_le",
     "(Abs_ordinal (ord0rel `` {?x}) <= Abs_ordinal (ord0rel `` {?y})) =
      (?x <= ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 1)))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1)))),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("OrdinalDef.Abs_ordinal_oStrictLimit",
     "Abs_ordinal (ord0rel `` {ord0_Lim ?f}) =
      oStrictLimit (%n. Abs_ordinal (ord0rel `` {?f n}))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_hole 1))),
       template_app (template_hole 0, t_empty))),
    ("OrdinalArith.ordinal_exp_left_cancel",
     "oSuc 0 < ?w ==> (?w ** ?x = ?w ** ?y) = (?x = ?y)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 4, template_hole 3),
          template_var 2)],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_equation (template_var 1, template_var 0)))),
    ("OrdinalArith.ordinal_exp_left_cancel_less",
     "oSuc 0 < ?w ==> (?w ** ?x < ?w ** ?y) = (?x < ?y)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 3, template_hole 2),
          template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 0)))),
    ("OrdinalArith.ordinal_exp_left_cancel_le",
     "oSuc 0 < ?w ==> (?w ** ?x <= ?w ** ?y) = (?x <= ?y)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 4, template_hole 3),
          template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("OrdinalInduct.make_mono_less",
     "ALL n. ?f n < oLimit ?f ==> make_mono ?f ?n < make_mono ?f (Suc ?n)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("OrdinalFix.oDeriv_total",
     "[| normal ?F; ?F ?x = ?x |] ==> EX n. ?x = oDeriv ?F n",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_equation
         (template_app (template_var 1, template_var 0), template_var 0)],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("OrdinalArith.ordinal_exp_monoR",
     "[| 0 < ?x; ?y <= ?y' |] ==> ?x ** ?y <= ?x ** ?y'",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("OrdinalInverse.ordinal_le_div",
     "[| 0 < ?y; ?y * ?z <= ?x |] ==> ?z <= ?x div ?y",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_var 0)],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("OrdinalArith.ordinal_times_strict_monoR",
     "[| ?y < ?y'; 0 < ?x |] ==> ?x * ?y < ?x * ?y'",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("OrdinalArith.ordinal_plus_mono",
     "[| ?x <= ?x'; ?y <= ?y' |] ==> ?x + ?y <= ?x' + ?y'",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("OrdinalArith.ordinal_times_mono",
     "[| ?x <= ?x'; ?y <= ?y' |] ==> ?x * ?y <= ?x' * ?y'",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("OrdinalInduct.oLimit_shift",
     "ALL n. ?f n < oLimit ?f ==> oLimit (%n. ?f (n + ?k)) = oLimit ?f",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app (template_hole 2, t_empty),
         template_app (template_hole 2, template_var 1)))),
    ("OrdinalInduct.oLimit_make_mono_eq",
     "ALL n. ?f n < oLimit ?f ==>
      oLimit (%n. ?f (make_mono ?f n)) = oLimit ?f",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app (template_hole 2, t_empty),
         template_app (template_hole 2, template_var 0)))),
    ("OrdinalDef.ord0_Lim_ord0rel",
     "ALL n. (?f n, ?g n) : ord0rel ==>
      (ord0_Lim ?f, ord0_Lim ?g) : ord0rel",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 0, template_var 1)),
                 template_app (template_hole 0, template_var 0))),
             template_hole 1)
           ))),
    ("OrdinalInduct.strict_monoI",
     "(!!A B. A < B ==> ?f A < ?f B) ==> OrdinalInduct.strict_mono ?f",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("OrdinalFix.oFix_fixed",
     "[| OrdinalCont.continuous ?F; ?a <= ?F ?a |]
      ==> ?F (oFix ?F ?a) = oFix ?F ?a",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_var 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("OrdinalInverse.ordinal_exp_oLog_le",
     "[| 0 < ?x; oSuc 0 < ?b |] ==> ?b ** oLog ?b ?x <= ?x",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1),
        template_inequation
         (less_than, template_app (template_hole 3, template_hole 4),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 1))),
    ("OrdinalInduct.less_oLimitE",
     "[| ?x < oLimit ?f; !!n. ?x < ?f n ==> ?P |] ==> ?P",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 1, template_var 1)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("OrdinalInverse.ordinal_le_oLog",
     "[| oSuc 0 < ?b; ?b ** ?y <= ?x |] ==> ?y <= oLog ?b ?x",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 4, template_hole 3),
          template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_var 0)],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("OrdinalArith.ordinal_exp_strict_monoR",
     "[| oSuc 0 < ?x; ?y < ?y' |] ==> ?x ** ?y < ?x ** ?y'",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 2, template_hole 1),
          template_var 2),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("OrdinalInduct.f_make_mono_less",
     "ALL n. ?f n < oLimit ?f ==>
      ?f (make_mono ?f ?n) < ?f (make_mono ?f (Suc ?n))",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_than,
         template_app
          (template_var 1,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_var 1,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0)))))),
    ("OrdinalInduct.limit_ordinalI",
     "[| 0 < ?z; ALL x<?z. oSuc x < ?z |] ==> limit_ordinal ?z",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 0),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("OrdinalDef.ord0_leq_trans",
     "[| (?x, ?y) : ord0_leq; (?y, ?z) : ord0_leq |]
      ==> (?x, ?z) : ord0_leq",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OrdinalInverse.ordinal_divI",
     "[| ?x = ?y * ?q + ?r; ?r < ?y |] ==> ?x div ?y = ?q",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1)),
            template_var 0)),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 2),
         template_var 1))),
    ("OrdinalInverse.ordinal_modI",
     "[| ?x = ?y * ?q + ?r; ?r < ?y |] ==> ?x mod ?y = ?r",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1)),
            template_var 0)),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 2),
         template_var 0))),
    ("OrdinalOmega.to_cnf_not_0",
     "0 < ?x ==>
      to_cnf ?x =
      oLog \<omega> ?x # to_cnf (?x - \<omega> ** oLog \<omega> ?x)",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 0)],
       template_equation
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 0)),
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 0, template_hole 2),
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 0)))))))),
    ("OrdinalDef.ord0_precD",
     "(?x, ?y) : ord0_prec ==> EX f n. ?x = f n & ?y = ord0_Lim f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 0)),
              template_hole 5)
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("OrdinalDef.oStrictLimit_induct",
     "[| ?P oZero; !!f. ALL n. ?P (f n) ==> ?P (oStrictLimit f) |]
      ==> ?P ?a",
     template_implication
      ([template_predicate (template_app (template_var 1, template_hole 3)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("OrdinalFix.oFix_least",
     "[| mono ?F; ?F ?x = ?x; ?a <= ?x |] ==> oFix ?F ?a <= ?x",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_equation
         (template_app (template_var 2, template_var 1), template_var 1),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("OrdinalCont.normal_range_eq",
     "[| normal ?F; normal ?G; range ?F = range ?G |] ==> ?F = ?G",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1),
            template_hole 1),
          template_app
           (template_app (template_hole 2, template_var 0),
            template_hole 1))],
       template_equation (template_var 1, template_var 0))),
    ("OrdinalFix.less_oFixD",
     "[| ?x < oFix ?F ?a; mono ?F; ?F ?x = ?x |] ==> ?x < ?a",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0)),
        template_predicate (template_app (template_hole 1, template_var 1)),
        template_equation
         (template_app (template_var 1, template_var 2), template_var 2)],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("OrdinalDef.Abs_ordinal_eq",
     "(Abs_ordinal (ord0rel `` {?x}) = Abs_ordinal (ord0rel `` {?y})) =
      (?x <= ?y & ?y <= ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)))),
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2)))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("OrdinalDef.ord0_prec_induct",
     "(!!x. ALL y. (y, x) : ord0_prec^+ --> ?P y ==> ?P x) ==> ?P ?a",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("OrdinalInverse.ordinal_oLogI",
     "[| ?b ** ?y <= ?x; ?x < ?b ** ?y * ?b |] ==> oLog ?b ?x = ?y",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 4, template_var 2), template_var 1),
          template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1)),
            template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("OrdinalCont.normal_range_le",
     "[| normal ?F; normal ?G; range ?G <= range ?F |] ==> ?F ?x <= ?G ?x",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_hole 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_hole 1))],
       template_inequation
        (less_equals, template_app (template_var 2, template_var 0),
         template_app (template_var 1, template_var 0)))),
    ("OrdinalArith.ordinal_exp_mono",
     "[| 0 < ?x'; ?x <= ?x'; ?y <= ?y' |] ==> ?x ** ?y <= ?x' ** ?y'",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 3),
        template_inequation (less_equals, template_var 2, template_var 3),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("OrdinalDef.ord0_leqD",
     "[| (?x, ?y) : ord0_leq; (?a, ?x) : ord0_prec^+ |]
      ==> (?a, ?y) : ord0_leq O ord0_prec^+",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_var 2)),
              template_app (template_hole 2, template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_hole 3),
               template_app (template_hole 2, template_hole 1)))
           ))),
    ("OrdinalInduct.le_f_make_mono",
     "[| ALL n. ?f n < oLimit ?f; ?m <= make_mono ?f ?n |]
      ==> ?f ?m <= ?f (make_mono ?f ?n)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 0))],
       template_inequation
        (less_equals, template_app (template_var 2, template_var 1),
         template_app
          (template_var 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("OrdinalInverse.ordinal_oLog_less",
     "[| 0 < ?x; oSuc 0 < ?b; ?x < ?b ** ?y |] ==> oLog ?b ?x < ?y",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 2),
        template_inequation
         (less_than, template_app (template_hole 2, template_hole 3),
          template_var 1),
        template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_var 0))),
    ("OrdinalInduct.less_oSucE",
     "[| ?x < oSuc ?y; ?x < ?y ==> ?P; ?x = ?y ==> ?P |] ==> ?P",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 1, template_var 1)),
        template_implication
         ([template_inequation (less_than, template_var 2, template_var 1)],
          template_predicate (template_var 0)),
        template_implication
         ([template_equation (template_var 2, template_var 1)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OrdinalRec.ordinal_rec_oLimit",
     "ALL p x. x <= ?s p x ==>
      ordinal_rec ?z ?s (oLimit ?f) =
      oLimit (%n. ordinal_rec ?z ?s (?f n))",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2),
           template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, t_empty)))),
    ("OrdinalDef.ord0_leqI",
     "ALL a. (a, ?x) : ord0_prec^+ --> (a, ?y) : ord0_leq O ord0_prec^+ ==>
      (?x, ?y) : ord0_leq",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OrdinalVeblen.normal_set_INTER",
     "[| ALL n. normal_set (?A n); ALL n. ?A (Suc n) <= ?A n |]
      ==> normal_set (\<Inter> (range ?A))",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, t_empty), template_hole 0)))
           ))),
    ("OrdinalInduct.le_oSucE",
     "[| ?x <= oSuc ?y; ?x <= ?y ==> ?R; ?x = oSuc ?y ==> ?R |] ==> ?R",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 1, template_var 1)),
        template_implication
         ([template_inequation
            (less_equals, template_var 2, template_var 1)],
          template_predicate (template_var 0)),
        template_implication
         ([template_equation
            (template_var 2,
             template_app (template_hole 1, template_var 1))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OrdinalDef.ord0_less_induct",
     "(!!x. ALL y. (y, x) : {(x, y). x < y} --> ?P y ==> ?P x) ==> ?P ?a",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("OrdinalInduct.oLimit_eqI",
     "[| !!n. EX m. ?f n <= ?g m; !!n. EX m. ?g n <= ?f m |]
      ==> oLimit ?f = oLimit ?g",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("OrdinalInduct.le_oLimitE",
     "[| ?x <= oLimit ?f; !!n. ?x <= ?f n ==> ?R; ?x = oLimit ?f ==> ?R |]
      ==> ?R",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 2, template_var 1)),
        template_predicate (template_app (template_hole 1, t_empty)),
        template_implication
         ([template_equation
            (template_var 2,
             template_app (template_hole 2, template_var 1))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OrdinalOmega.additive_principal_intro2",
     "[| 0 < ?a; !!x y. [| x < ?a; y < ?a |] ==> x + y < ?a |]
      ==> additive_principal ?a",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("OrdinalCont.normalI",
     "[| !!f. OrdinalInduct.strict_mono f ==>
              ?F (oLimit f) = oLimit (%n. ?F (f n));
         !!x. ?F x < ?F (oSuc x) |]
      ==> normal ?F",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("OrdinalCont.continuousI",
     "[| !!f. OrdinalInduct.strict_mono f ==>
              ?F (oLimit f) = oLimit (%n. ?F (f n));
         !!x. ?F x <= ?F (oSuc x) |]
      ==> OrdinalCont.continuous ?F",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("OrdinalOmega.to_cnf2_not_0",
     "0 < ?x ==>
      to_cnf2 ?x =
      (oLog \<omega> ?x,
       inv ordinal_of_nat (?x div \<omega> ** oLog \<omega> ?x)) #
      to_cnf2 (?x mod \<omega> ** oLog \<omega> ?x)",
     template_implication
      ([template_inequation (less_than, template_hole 12, template_var 0)],
       template_equation
        (template_app (template_hole 10, template_var 0),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_var 0)),
               template_app
                (template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_hole 3),
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app
                    (template_app (template_hole 1, template_hole 6),
                     template_app
                      (template_app (template_hole 7, template_hole 6),
                       template_var 0)))))),
           template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app
                (template_app (template_hole 1, template_hole 6),
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_var 0)))))))),
    ("OrdinalInverse.oInv_uniq",
     "[| mono ?F; ?F ?x <= ?a & ?a < ?F (oSuc ?x);
         ?F ?y <= ?a & ?a < ?F (oSuc ?y) |]
      ==> ?x = ?y",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_var 3, template_var 2)),
                  template_var 1)),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_app
                 (template_var 3,
                  template_app (template_hole 1, template_var 2))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_var 3, template_var 0)),
                  template_var 1)),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_app
                 (template_var 3,
                  template_app (template_hole 1, template_var 0))))
            )],
       template_equation (template_var 2, template_var 0))),
    ("OrdinalVeblen.ordering_INTER_0",
     "[| ALL n. normal_set (?A n); ALL n. ?A (Suc n) <= ?A n |]
      ==> OrdinalVeblen.ordering (\<Inter> (range ?A)) 0 =
          oLimit (%n. OrdinalVeblen.ordering (?A n) 0)",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, t_empty),
                 template_hole 2))),
           template_hole 1),
         template_app (template_hole 0, t_empty)))),
    ("OrdinalInduct.oLimit_induct",
     "[| ?P 0; !!x. ?P x ==> ?P (oSuc x);
         !!f. [| OrdinalInduct.strict_mono f; ALL n. ?P (f n) |]
              ==> ?P (oLimit f) |]
      ==> ?P ?a",
     template_implication
      ([template_predicate (template_app (template_var 1, template_hole 6)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("OrdinalInduct.ordinal_cases",
     "[| ?a = 0 ==> ?P; !!x. ?a = oSuc x ==> ?P;
         !!f. [| OrdinalInduct.strict_mono f; ?a = oLimit f |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_implication
         ([template_equation (template_var 1, template_hole 5)],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("OrdinalRec.ordinal_rec0_limit_ordinal",
     "limit_ordinal ?x ==>
      ordinal_rec0 ?z ?s ?l ?x =
      (THE y.
          ALL f.
             (ALL n. f n < oLimit f) & oLimit f = ?x -->
             ?l (%n. ordinal_rec0 ?z ?s ?l (f n)) = y)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 8, template_var 2),
               template_var 1),
             template_var 0),
           template_var 3),
         template_app (template_hole 7, t_empty)))),
    ("OrdinalVeblen.oLimit_mem_INTER",
     "[| ALL n. normal_set (?A n); ALL n. ?A (Suc n) <= ?A n;
         ALL n. ?f n : ?A n; incseq ?f |]
      ==> oLimit ?f : \<Inter> (range ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 3, template_var 0)),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, t_empty), template_hole 0)))
           ))),
    ("OrdinalInverse.ordinal_oLogI2",
     "[| oSuc 0 < ?b; ?x = ?b ** ?y * ?q + ?r; 0 < ?q; ?q < ?b;
         ?r < ?b ** ?y |]
      ==> oLog ?b ?x = ?y",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 6, template_hole 5),
          template_var 4),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 2)),
                template_var 1)),
            template_var 0)),
        template_inequation (less_than, template_hole 5, template_var 1),
        template_inequation (less_than, template_var 1, template_var 4),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 1, template_var 4),
            template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 4), template_var 3),
         template_var 2)))]
