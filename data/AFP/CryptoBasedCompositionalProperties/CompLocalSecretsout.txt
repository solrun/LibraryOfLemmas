Loading theory "Draft.ListExtras" (required by "Draft.CompLocalSecretsMoreTemplates" via "Draft.CompLocalSecrets" via "Draft.Secrecy")
Loading theory "Draft.Secrecy_types" (required by "Draft.CompLocalSecretsMoreTemplates" via "Draft.CompLocalSecrets" via "Draft.Secrecy")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.CompLocalSecretsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.CompLocalSecretsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
consts
  mem :: "'a => 'a list => bool"
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.ListExtras"
### 0.130s elapsed time, 0.537s cpu time, 0.042s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.CompLocalSecretsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
### theory "HOL-Library.Function_Algebras"
### 0.144s elapsed time, 0.596s cpu time, 0.042s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.CompLocalSecretsMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.346s elapsed time, 1.386s cpu time, 0.117s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.CompLocalSecretsMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.220s elapsed time, 0.861s cpu time, 0.075s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.CompLocalSecretsMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
### theory "HOL-Library.BigO"
### 0.856s elapsed time, 3.250s cpu time, 0.686s GC time
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.919s elapsed time, 3.451s cpu time, 0.723s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.782s elapsed time, 5.643s cpu time, 0.941s GC time
Loading theory "Draft.Templates" (required by "Draft.CompLocalSecretsMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.048s elapsed time, 0.096s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.CompLocalSecretsMoreTemplates")
consts
  Expression2KSL :: "Expression list => KS list"
consts
  KS2Expression :: "KS => Expression"
### theory "Draft.Secrecy_types"
### 2.474s elapsed time, 7.388s cpu time, 1.077s GC time
Loading theory "Draft.inout" (required by "Draft.CompLocalSecretsMoreTemplates" via "Draft.CompLocalSecrets" via "Draft.Secrecy")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.518s elapsed time, 1.087s cpu time, 0.095s GC time
### theory "Draft.inout"
### 0.054s elapsed time, 0.091s cpu time, 0.000s GC time
Loading theory "Draft.Secrecy" (required by "Draft.CompLocalSecretsMoreTemplates" via "Draft.CompLocalSecrets")
### theory "Draft.Secrecy"
### 0.298s elapsed time, 0.327s cpu time, 0.041s GC time
Loading theory "Draft.CompLocalSecrets" (required by "Draft.CompLocalSecretsMoreTemplates")
### theory "Draft.CompLocalSecrets"
### 0.091s elapsed time, 0.091s cpu time, 0.000s GC time
Loading theory "Draft.CompLocalSecretsMoreTemplates"
val templateLemmas =
   [("CompLocalSecrets.LocalSecretsComposition1",
     "[| ?ls : LocalSecrets ?P; subcomponents ?PQ = {?P, ?Q} |]
      ==> ?ls : LocalSecrets ?PQ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, template_var 2))
            ),
        template_equation
         (template_app (template_hole 2, template_var 1),
          template_app
           (template_app (template_hole 1, template_var 2),
            template_app
             (template_app (template_hole 1, template_var 0),
              template_hole 0)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 3),
             template_app (template_hole 4, template_var 1))
           ))),
    ("CompLocalSecrets.LocalSecretsComposition_neg_loc_k",
     "[| kKS ?key ~: LocalSecrets ?P; exprChannel ?ch (kE ?key);
         kKS ?key ~: specKeysSecrets ?P |]
      ==> ?ch ~: loc ?P",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 2)),
                  template_app (template_hole 5, template_var 1))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 2)),
                  template_app (template_hole 2, template_var 1))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 1))
               )
           ))),
    ("CompLocalSecrets.LocalSecretsComposition_neg_loc_s",
     "[| sKS ?secret ~: LocalSecrets ?P; exprChannel ?ch (sE ?secret);
         sKS ?secret ~: specKeysSecrets ?P |]
      ==> ?ch ~: loc ?P",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 2)),
                  template_app (template_hole 5, template_var 1))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 2)),
                  template_app (template_hole 2, template_var 1))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 1))
               )
           ))),
    ("CompLocalSecrets.LocalSecretsComposition_exprChannel_k",
     "[| exprChannel ?x (kE ?Keys); ~ ine ?P (kE ?Keys);
         ~ ine ?Q (kE ?Keys); ~ (?x ~: ins ?P & ?x ~: ins ?Q) |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 6, template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app (template_hole 6, template_var 2))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_app (template_hole 6, template_var 2))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_hole 5,
                      template_app
                       (template_app (template_hole 2, template_var 3),
                        template_app (template_hole 1, template_var 1)))),
                  template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 2, template_var 3),
                      template_app (template_hole 1, template_var 0))))
                )
            )],
       template_predicate (template_hole 0))),
    ("CompLocalSecrets.LocalSecretsComposition_exprChannel_s",
     "[| exprChannel ?x (sE ?Secrets); ~ ine ?P (sE ?Secrets);
         ~ ine ?Q (sE ?Secrets); ~ (?x ~: ins ?P & ?x ~: ins ?Q) |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 6, template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app (template_hole 6, template_var 2))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_app (template_hole 6, template_var 2))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_hole 5,
                      template_app
                       (template_app (template_hole 2, template_var 3),
                        template_app (template_hole 1, template_var 1)))),
                  template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 2, template_var 3),
                      template_app (template_hole 1, template_var 0))))
                )
            )],
       template_predicate (template_hole 0))),
    ("CompLocalSecrets.LocalSecretsComposition_ine2_k",
     "[| kKS ?k : LocalSecrets ?PQ; subcomponents ?PQ = {?P, ?Q};
         correctCompositionLoc ?PQ; ~ ine ?P (kE ?k);
         kKS ?k ~: LocalSecrets ?P; kKS ?k ~: LocalSecrets ?Q |]
      ==> ine ?Q (kE ?k)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 3)),
              template_app (template_hole 8, template_var 2))
            ),
        template_equation
         (template_app (template_hole 6, template_var 2),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4))),
        template_predicate (template_app (template_hole 3, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_app (template_hole 0, template_var 3))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 3)),
                  template_app (template_hole 8, template_var 1))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 3)),
                  template_app (template_hole 8, template_var 0))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 3))
           ))),
    ("CompLocalSecrets.LocalSecretsComposition_ine1_k",
     "[| kKS ?k : LocalSecrets ?PQ; subcomponents ?PQ = {?P, ?Q};
         correctCompositionLoc ?PQ; ~ ine ?Q (kE ?k);
         kKS ?k ~: LocalSecrets ?P; kKS ?k ~: LocalSecrets ?Q |]
      ==> ine ?P (kE ?k)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 3)),
              template_app (template_hole 8, template_var 2))
            ),
        template_equation
         (template_app (template_hole 6, template_var 2),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4))),
        template_predicate (template_app (template_hole 3, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app (template_hole 0, template_var 3))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 3)),
                  template_app (template_hole 8, template_var 1))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 3)),
                  template_app (template_hole 8, template_var 0))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 3))
           ))),
    ("CompLocalSecrets.LocalSecretsComposition_ine2_s",
     "[| sKS ?s : LocalSecrets ?PQ; subcomponents ?PQ = {?P, ?Q};
         correctCompositionLoc ?PQ; ~ ine ?P (sE ?s);
         sKS ?s ~: LocalSecrets ?P; sKS ?s ~: LocalSecrets ?Q |]
      ==> ine ?Q (sE ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 3)),
              template_app (template_hole 8, template_var 2))
            ),
        template_equation
         (template_app (template_hole 6, template_var 2),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4))),
        template_predicate (template_app (template_hole 3, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_app (template_hole 0, template_var 3))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 3)),
                  template_app (template_hole 8, template_var 1))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 3)),
                  template_app (template_hole 8, template_var 0))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 3))
           ))),
    ("CompLocalSecrets.LocalSecretsComposition_ine1_s",
     "[| sKS ?s : LocalSecrets ?PQ; subcomponents ?PQ = {?P, ?Q};
         correctCompositionLoc ?PQ; ~ ine ?Q (sE ?s);
         sKS ?s ~: LocalSecrets ?P; sKS ?s ~: LocalSecrets ?Q |]
      ==> ine ?P (sE ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 3)),
              template_app (template_hole 8, template_var 2))
            ),
        template_equation
         (template_app (template_hole 6, template_var 2),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4))),
        template_predicate (template_app (template_hole 3, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app (template_hole 0, template_var 3))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 3)),
                  template_app (template_hole 8, template_var 1))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 3)),
                  template_app (template_hole 8, template_var 0))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 3))
           ))),
    ("CompLocalSecrets.LocalSecretsComposition_neg1_k",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionLoc ?PQ;
         ~ ine ?P (kE ?Keys); ~ ine ?Q (kE ?Keys);
         kKS ?Keys ~: LocalSecrets ?P; kKS ?Keys ~: LocalSecrets ?Q |]
      ==> kKS ?Keys ~: LocalSecrets ?PQ",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 3),
          template_app
           (template_app (template_hole 8, template_var 2),
            template_app
             (template_app (template_hole 8, template_var 1),
              template_hole 7))),
        template_predicate (template_app (template_hole 6, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app (template_hole 3, template_var 0))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app (template_hole 3, template_var 0))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 0)),
                  template_app (template_hole 0, template_var 2))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 0)),
                  template_app (template_hole 0, template_var 1))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)),
                 template_app (template_hole 0, template_var 3))
               )
           ))),
    ("CompLocalSecrets.LocalSecretsComposition_neg1_s",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionLoc ?PQ;
         ~ ine ?P (sE ?s); ~ ine ?Q (sE ?s); sKS ?s ~: LocalSecrets ?P;
         sKS ?s ~: LocalSecrets ?Q |]
      ==> sKS ?s ~: LocalSecrets ?PQ",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 3),
          template_app
           (template_app (template_hole 8, template_var 2),
            template_app
             (template_app (template_hole 8, template_var 1),
              template_hole 7))),
        template_predicate (template_app (template_hole 6, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app (template_hole 3, template_var 0))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app (template_hole 3, template_var 0))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 0)),
                  template_app (template_hole 0, template_var 2))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 0)),
                  template_app (template_hole 0, template_var 1))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)),
                 template_app (template_hole 0, template_var 3))
               )
           ))),
    ("CompLocalSecrets.LocalSecretsDef",
     "LocalSecrets ?A =
      {m. m ~: specKeysSecrets ?A &
          ((EX x y. x : loc ?A & m = kKS y & exprChannel x (kE y)) |
           (EX x z. x : loc ?A & m = sKS z & exprChannel x (sE z)))} Un
      \<Union> (LocalSecrets ` subcomponents ?A)",
     template_equation
      (template_app (template_hole 21, template_var 0),
       template_app
        (template_app
          (template_hole 20, template_app (template_hole 19, t_empty)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 21),
             template_app (template_hole 0, template_var 0)))))),
    ("CompLocalSecrets.correctCompositionKS_exprChannel_k_P",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionKS ?PQ;
         kKS ?key ~: LocalSecrets ?PQ; ?ch : ins ?P;
         exprChannel ?ch (kE ?key); kKS ?key ~: specKeysSecrets ?PQ;
         correctCompositionIn ?PQ |]
      ==> ?ch : ins ?PQ & exprChannel ?ch (kE ?key)",
     template_implication
      ([template_equation
         (template_app (template_hole 14, template_var 4),
          template_app
           (template_app (template_hole 13, template_var 3),
            template_app
             (template_app (template_hole 13, template_var 2),
              template_hole 12))),
        template_predicate
         (template_app (template_hole 11, template_var 4)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 1)),
                  template_app (template_hole 7, template_var 4))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 1)),
                  template_app (template_hole 2, template_var 4))
                )
            ),
        template_predicate
         (template_app (template_hole 1, template_var 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app (template_hole 5, template_var 4))),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app (template_hole 3, template_var 1)))
           ))),
    ("CompLocalSecrets.correctCompositionKS_exprChannel_k_Q",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionKS ?PQ;
         kKS ?key ~: LocalSecrets ?PQ; ?ch : ins ?Q;
         exprChannel ?ch (kE ?key); kKS ?key ~: specKeysSecrets ?PQ;
         correctCompositionIn ?PQ |]
      ==> ?ch : ins ?PQ & exprChannel ?ch (kE ?key)",
     template_implication
      ([template_equation
         (template_app (template_hole 14, template_var 4),
          template_app
           (template_app (template_hole 13, template_var 3),
            template_app
             (template_app (template_hole 13, template_var 2),
              template_hole 12))),
        template_predicate
         (template_app (template_hole 11, template_var 4)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 1)),
                  template_app (template_hole 7, template_var 4))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 1)),
                  template_app (template_hole 2, template_var 4))
                )
            ),
        template_predicate
         (template_app (template_hole 1, template_var 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app (template_hole 5, template_var 4))),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app (template_hole 3, template_var 1)))
           ))),
    ("CompLocalSecrets.correctCompositionKS_exprChannel_s_P",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionKS ?PQ;
         sKS ?secret ~: LocalSecrets ?PQ; ?ch : ins ?P;
         exprChannel ?ch (sE ?secret); sKS ?secret ~: specKeysSecrets ?PQ;
         correctCompositionIn ?PQ |]
      ==> ?ch : ins ?PQ & exprChannel ?ch (sE ?secret)",
     template_implication
      ([template_equation
         (template_app (template_hole 14, template_var 4),
          template_app
           (template_app (template_hole 13, template_var 3),
            template_app
             (template_app (template_hole 13, template_var 2),
              template_hole 12))),
        template_predicate
         (template_app (template_hole 11, template_var 4)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 1)),
                  template_app (template_hole 7, template_var 4))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 1)),
                  template_app (template_hole 2, template_var 4))
                )
            ),
        template_predicate
         (template_app (template_hole 1, template_var 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app (template_hole 5, template_var 4))),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app (template_hole 3, template_var 1)))
           ))),
    ("CompLocalSecrets.correctCompositionKS_exprChannel_s_Q",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionKS ?PQ;
         sKS ?secret ~: LocalSecrets ?PQ; ?ch : ins ?Q;
         exprChannel ?ch (sE ?secret); sKS ?secret ~: specKeysSecrets ?PQ;
         correctCompositionIn ?PQ |]
      ==> ?ch : ins ?PQ & exprChannel ?ch (sE ?secret)",
     template_implication
      ([template_equation
         (template_app (template_hole 14, template_var 4),
          template_app
           (template_app (template_hole 13, template_var 3),
            template_app
             (template_app (template_hole 13, template_var 2),
              template_hole 12))),
        template_predicate
         (template_app (template_hole 11, template_var 4)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 1)),
                  template_app (template_hole 7, template_var 4))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 1)),
                  template_app (template_hole 2, template_var 4))
                )
            ),
        template_predicate
         (template_app (template_hole 1, template_var 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app (template_hole 5, template_var 4))),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app (template_hole 3, template_var 1)))
           ))),
    ("CompLocalSecrets.correctCompositionKS_exprChannel_k_Pex",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionKS ?PQ;
         kKS ?key ~: LocalSecrets ?PQ; ?ch : ins ?P;
         exprChannel ?ch (kE ?key); kKS ?key ~: specKeysSecrets ?PQ;
         correctCompositionIn ?PQ |]
      ==> EX ch. ch : ins ?PQ & exprChannel ch (kE ?key)",
     template_implication
      ([template_equation
         (template_app (template_hole 15, template_var 4),
          template_app
           (template_app (template_hole 14, template_var 3),
            template_app
             (template_app (template_hole 14, template_var 2),
              template_hole 13))),
        template_predicate
         (template_app (template_hole 12, template_var 4)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 1)),
                  template_app (template_hole 8, template_var 4))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 1)),
                  template_app (template_hole 3, template_var 4))
                )
            ),
        template_predicate
         (template_app (template_hole 2, template_var 4))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("CompLocalSecrets.correctCompositionKS_exprChannel_k_Qex",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionKS ?PQ;
         kKS ?key ~: LocalSecrets ?PQ; ?ch : ins ?Q;
         exprChannel ?ch (kE ?key); kKS ?key ~: specKeysSecrets ?PQ;
         correctCompositionIn ?PQ |]
      ==> EX ch. ch : ins ?PQ & exprChannel ch (kE ?key)",
     template_implication
      ([template_equation
         (template_app (template_hole 15, template_var 4),
          template_app
           (template_app (template_hole 14, template_var 3),
            template_app
             (template_app (template_hole 14, template_var 2),
              template_hole 13))),
        template_predicate
         (template_app (template_hole 12, template_var 4)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 1)),
                  template_app (template_hole 8, template_var 4))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 1)),
                  template_app (template_hole 3, template_var 4))
                )
            ),
        template_predicate
         (template_app (template_hole 2, template_var 4))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("CompLocalSecrets.correctCompositionKS_exprChannel_s_Pex",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionKS ?PQ;
         sKS ?secret ~: LocalSecrets ?PQ; ?ch : ins ?P;
         exprChannel ?ch (sE ?secret); sKS ?secret ~: specKeysSecrets ?PQ;
         correctCompositionIn ?PQ |]
      ==> EX ch. ch : ins ?PQ & exprChannel ch (sE ?secret)",
     template_implication
      ([template_equation
         (template_app (template_hole 15, template_var 4),
          template_app
           (template_app (template_hole 14, template_var 3),
            template_app
             (template_app (template_hole 14, template_var 2),
              template_hole 13))),
        template_predicate
         (template_app (template_hole 12, template_var 4)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 1)),
                  template_app (template_hole 8, template_var 4))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 1)),
                  template_app (template_hole 3, template_var 4))
                )
            ),
        template_predicate
         (template_app (template_hole 2, template_var 4))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("CompLocalSecrets.correctCompositionKS_exprChannel_s_Qex",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionKS ?PQ;
         sKS ?secret ~: LocalSecrets ?PQ; ?ch : ins ?Q;
         exprChannel ?ch (sE ?secret); sKS ?secret ~: specKeysSecrets ?PQ;
         correctCompositionIn ?PQ |]
      ==> EX ch. ch : ins ?PQ & exprChannel ch (sE ?secret)",
     template_implication
      ([template_equation
         (template_app (template_hole 15, template_var 4),
          template_app
           (template_app (template_hole 14, template_var 3),
            template_app
             (template_app (template_hole 14, template_var 2),
              template_hole 13))),
        template_predicate
         (template_app (template_hole 12, template_var 4)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 1)),
                  template_app (template_hole 8, template_var 4))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 1)),
                  template_app (template_hole 3, template_var 4))
                )
            ),
        template_predicate
         (template_app (template_hole 2, template_var 4))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("CompLocalSecrets.LocalSecretsComposition_neg_k",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionLoc ?PQ;
         correctCompositionKS ?PQ; kKS ?m ~: specKeysSecrets ?P;
         kKS ?m ~: specKeysSecrets ?Q; ~ ine ?P (kE ?m); ~ ine ?Q (kE ?m);
         kKS ?m ~: LocalSecrets ?P Un LocalSecrets ?Q |]
      ==> kKS ?m ~: LocalSecrets ?PQ",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 3),
          template_app
           (template_app (template_hole 11, template_var 2),
            template_app
             (template_app (template_hole 11, template_var 1),
              template_hole 10))),
        template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate (template_app (template_hole 8, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 0)),
                  template_app (template_hole 4, template_var 2))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 0)),
                  template_app (template_hole 4, template_var 1))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_hole 2, template_var 0))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app (template_hole 2, template_var 0))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 0)),
                  template_app
                   (template_app
                     (template_hole 1,
                      template_app (template_hole 0, template_var 2)),
                    template_app (template_hole 0, template_var 1)))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0)),
                 template_app (template_hole 0, template_var 3))
               )
           ))),
    ("CompLocalSecrets.LocalSecretsComposition_neg_s",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionLoc ?PQ;
         correctCompositionKS ?PQ; sKS ?m ~: specKeysSecrets ?P;
         sKS ?m ~: specKeysSecrets ?Q; ~ ine ?P (sE ?m); ~ ine ?Q (sE ?m);
         sKS ?m ~: LocalSecrets ?P Un LocalSecrets ?Q |]
      ==> sKS ?m ~: LocalSecrets ?PQ",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 3),
          template_app
           (template_app (template_hole 11, template_var 2),
            template_app
             (template_app (template_hole 11, template_var 1),
              template_hole 10))),
        template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate (template_app (template_hole 8, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 0)),
                  template_app (template_hole 4, template_var 2))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 0)),
                  template_app (template_hole 4, template_var 1))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_hole 2, template_var 0))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app (template_hole 2, template_var 0))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 0)),
                  template_app
                   (template_app
                     (template_hole 1,
                      template_app (template_hole 0, template_var 2)),
                    template_app (template_hole 0, template_var 1)))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0)),
                 template_app (template_hole 0, template_var 3))
               )
           ))),
    ("CompLocalSecrets.LocalSecretsComposition_neg1",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionLoc ?PQ;
         ALL m. ?ks = kKS m --> ~ ine ?P (kE m) & ~ ine ?Q (kE m);
         ALL m. ?ks = sKS m --> ~ ine ?P (sE m) & ~ ine ?Q (sE m);
         ?ks ~: LocalSecrets ?P; ?ks ~: LocalSecrets ?Q |]
      ==> ?ks ~: LocalSecrets ?PQ",
     template_implication
      ([template_equation
         (template_app (template_hole 16, template_var 3),
          template_app
           (template_app (template_hole 15, template_var 2),
            template_app
             (template_app (template_hole 15, template_var 1),
              template_hole 14))),
        template_predicate
         (template_app (template_hole 13, template_var 3)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app (template_hole 0, template_var 2))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app (template_hole 0, template_var 1))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 3))
               )
           ))),
    ("CompLocalSecrets.LocalSecretsComposition_neg",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionLoc ?PQ;
         correctCompositionKS ?PQ; ?ks ~: specKeysSecrets ?P;
         ?ks ~: specKeysSecrets ?Q;
         ALL m. ?ks = kKS m --> ~ ine ?P (kE m) & ~ ine ?Q (kE m);
         ALL m. ?ks = sKS m --> ~ ine ?P (sE m) & ~ ine ?Q (sE m);
         ?ks ~: LocalSecrets ?P Un LocalSecrets ?Q |]
      ==> ?ks ~: LocalSecrets ?PQ",
     template_implication
      ([template_equation
         (template_app (template_hole 19, template_var 3),
          template_app
           (template_app (template_hole 18, template_var 2),
            template_app
             (template_app (template_hole 18, template_var 1),
              template_hole 17))),
        template_predicate
         (template_app (template_hole 16, template_var 3)),
        template_predicate
         (template_app (template_hole 15, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 13, template_var 0),
                  template_app (template_hole 12, template_var 2))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 13, template_var 0),
                  template_app (template_hole 12, template_var 1))
                )
            ),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 13, template_var 0),
                  template_app
                   (template_app
                     (template_hole 1,
                      template_app (template_hole 0, template_var 2)),
                    template_app (template_hole 0, template_var 1)))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 13, template_var 0),
                 template_app (template_hole 0, template_var 3))
               )
           )))]:
   (string * thm * template) list
### theory "Draft.CompLocalSecretsMoreTemplates"
### 0.375s elapsed time, 0.517s cpu time, 0.060s GC time
val it = (): unit
