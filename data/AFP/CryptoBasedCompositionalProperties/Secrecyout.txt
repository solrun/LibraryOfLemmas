Loading theory "Draft.ListExtras" (required by "Draft.SecrecyMoreTemplates" via "Draft.Secrecy")
Loading theory "Draft.Secrecy_types" (required by "Draft.SecrecyMoreTemplates" via "Draft.Secrecy")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.SecrecyMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.SecrecyMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
consts
  mem :: "'a => 'a list => bool"
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.121s elapsed time, 0.496s cpu time, 0.045s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.SecrecyMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.ListExtras"
### 0.142s elapsed time, 0.583s cpu time, 0.045s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.SecrecyMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.218s elapsed time, 0.855s cpu time, 0.075s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.SecrecyMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.351s elapsed time, 1.402s cpu time, 0.120s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.SecrecyMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
### theory "HOL-Library.BigO"
### 1.027s elapsed time, 3.886s cpu time, 0.827s GC time
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.086s elapsed time, 4.061s cpu time, 0.870s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.009s elapsed time, 6.394s cpu time, 1.094s GC time
Loading theory "Draft.Templates" (required by "Draft.SecrecyMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.052s elapsed time, 0.104s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.SecrecyMoreTemplates")
consts
  Expression2KSL :: "Expression list => KS list"
consts
  KS2Expression :: "KS => Expression"
### theory "Draft.Secrecy_types"
### 2.712s elapsed time, 8.154s cpu time, 1.234s GC time
Loading theory "Draft.inout" (required by "Draft.SecrecyMoreTemplates" via "Draft.Secrecy")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.531s elapsed time, 1.106s cpu time, 0.094s GC time
### theory "Draft.inout"
### 0.050s elapsed time, 0.089s cpu time, 0.000s GC time
Loading theory "Draft.Secrecy" (required by "Draft.SecrecyMoreTemplates")
### theory "Draft.Secrecy"
### 0.301s elapsed time, 0.329s cpu time, 0.040s GC time
Loading theory "Draft.SecrecyMoreTemplates"
val templateLemmas =
   [("Secrecy.correctCompKS_Keys",
     "correctCompositionKS ?C ==> correctCompositionKeys ?C",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Secrecy.correctCompKS_Secrets",
     "correctCompositionKS ?C ==> correctCompositionSecrets ?C",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Secrecy.eoutM_eout", "eoutM ?P ?M ?E ==> eout ?P ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Secrecy.ineM_ine", "ineM ?P ?M ?E ==> ine ?P ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Secrecy.notSpecKeysSecretsExpr_L2",
     "notSpecKeysSecretsExpr ?P (?a # ?l) ==> notSpecKeysSecretsExpr ?P ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("Secrecy.correctCompKS_KeysSecrets",
     "[| correctCompositionKeys ?C; correctCompositionSecrets ?C |]
      ==> correctCompositionKS ?C",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Secrecy.DecrEnc",
     "EncrDecrKeys ?K1.0 ?K2.0 --> Decr ?K2.0 (Enc ?K1.0 ?E) = ?E",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0))),
             template_var 0))
         )),
    ("Secrecy.ExtSign",
     "EncrDecrKeys ?K1.0 ?K2.0 --> Ext ?K1.0 (Sign ?K2.0 ?E) = ?E",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_var 0))
         )),
    ("Secrecy.not_eout_eoutM", "~ eout ?P ?E ==> ~ eoutM ?P ?M ?E",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0),
                 template_var 1)
               )
           ))),
    ("Secrecy.not_ine_ineM", "~ ine ?P ?E ==> ~ ineM ?P ?M ?E",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0),
                 template_var 1)
               )
           ))),
    ("Secrecy.ineM_Un1", "ineM ?P ?A ?E ==> ineM ?P (?A Un ?B) ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Secrecy.ine_exprChannelSingle_Set",
     "ine_exprChannelSingle ?P ?ch ?E ==> ine_exprChannelSet ?P {?ch} ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)),
             template_var 0)
           ))),
    ("Secrecy.out_exprChannelSingle_Set",
     "out_exprChannelSingle ?P ?ch ?E ==> out_exprChannelSet ?P {?ch} ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)),
             template_var 0)
           ))),
    ("Secrecy.notSpecKeysSecretsExpr_L1",
     "notSpecKeysSecretsExpr ?P (?a # ?l) ==>
      notSpecKeysSecretsExpr ?P [?a]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))
           ))),
    ("Secrecy.ine_exprChannelSet_Single",
     "ine_exprChannelSet ?P {?ch} ?E ==> ine_exprChannelSingle ?P ?ch ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Secrecy.out_exprChannelSet_Single",
     "out_exprChannelSet ?P {?ch} ?E ==> out_exprChannelSingle ?P ?ch ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Secrecy.ine_empty_exprChannelSet",
     "[| ine_exprChannelSet ?P ?ChSet ?E; ?ChSet = {} |] ==> ~ ine ?P ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_equation (template_var 1, template_hole 2)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)
               )
           ))),
    ("Secrecy.ine_nonempty_exprChannelSet",
     "[| ine_exprChannelSet ?P ?ChSet ?E; ?ChSet ~= {} |] ==> ine ?P ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Secrecy.ine_ins_neg1",
     "[| ~ ine ?P ?m; exprChannel ?x ?m |] ==> ?x ~: ins ?P",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 2))
               )
           ))),
    ("Secrecy.correctCompositionKS_subcomp3",
     "[| correctCompositionKS ?C; ?x : subcomponents ?C;
         ?xa : specKeys ?x |]
      ==> ?xa : specKeys ?C",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Secrecy.correctCompositionKS_subcomp4",
     "[| correctCompositionKS ?C; ?x : subcomponents ?C;
         ?xa : specSecrets ?x |]
      ==> ?xa : specSecrets ?C",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Secrecy.correctCompositionKeys_subcomp2",
     "[| correctCompositionKeys ?C; ?xb : subcomponents ?C;
         ?xc : specKeys ?xb |]
      ==> ?xc : specKeys ?C",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Secrecy.correctCompositionSecrets_subcomp2",
     "[| correctCompositionSecrets ?C; ?xb : subcomponents ?C;
         ?xc : specSecrets ?xb |]
      ==> ?xc : specSecrets ?C",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Secrecy.ineM_L1",
     "[| ?ch : ?M; ?ch : ins ?P; exprChannel ?ch ?E |] ==> ineM ?P ?M ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0)
           ))),
    ("Secrecy.correctCompositionKS_subcomp1",
     "[| correctCompositionKS ?C; ?x : subcomponents ?C;
         ?xa : specKeys ?C |]
      ==> EX y:subcomponents ?C. ?xa : specKeys y",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 3, template_var 2)),
             t_empty)
           ))),
    ("Secrecy.correctCompositionKS_subcomp2",
     "[| correctCompositionKS ?C; ?x : subcomponents ?C;
         ?xa : specSecrets ?C |]
      ==> EX y:subcomponents ?C. ?xa : specSecrets y",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 3, template_var 2)),
             t_empty)
           ))),
    ("Secrecy.correctCompositionKeys_subcomp1",
     "[| correctCompositionKeys ?C; ?x : subcomponents ?C;
         ?xb : specKeys ?C |]
      ==> EX x:subcomponents ?C. ?xb : specKeys x",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 3, template_var 2)),
             t_empty)
           ))),
    ("Secrecy.correctCompositionSecrets_subcomp1",
     "[| correctCompositionSecrets ?C; ?x : subcomponents ?C;
         ?s : specSecrets ?C |]
      ==> EX x:subcomponents ?C. ?s : specSecrets x",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 3, template_var 2)),
             t_empty)
           ))),
    ("Secrecy.TBtheorem2a",
     "[| eout ?PQ ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionOut ?PQ |]
      ==> eout ?P ?E | eout ?Q ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 4, template_var 3),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2))),
        template_predicate
         (template_app (template_hole 1, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 6, template_var 0),
               template_var 2))
           ))),
    ("Secrecy.TBtheorem1a",
     "[| ine ?PQ ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionIn ?PQ |]
      ==> ine ?P ?E | ine ?Q ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 4, template_var 3),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2))),
        template_predicate
         (template_app (template_hole 1, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 6, template_var 0),
               template_var 2))
           ))),
    ("Secrecy.correctCompositionKS_negP",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionKS ?PQ;
         ?ks ~: specKeysSecrets ?PQ |]
      ==> ?ks ~: specKeysSecrets ?P",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4))),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app (template_hole 0, template_var 3))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 2))
               )
           ))),
    ("Secrecy.correctCompositionKS_negQ",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionKS ?PQ;
         ?ks ~: specKeysSecrets ?PQ |]
      ==> ?ks ~: specKeysSecrets ?Q",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4))),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app (template_hole 0, template_var 3))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 1))
               )
           ))),
    ("Secrecy.TBtheorem2b",
     "[| eoutM ?PQ ?M ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionOut ?PQ |]
      ==> eoutM ?P ?M ?E | eoutM ?Q ?M ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 4, template_var 4),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2))),
        template_predicate
         (template_app (template_hole 1, template_var 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 6, template_var 1),
                   template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 6, template_var 0),
                 template_var 3),
               template_var 2))
           ))),
    ("Secrecy.TBtheorem1b",
     "[| ineM ?PQ ?M ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionIn ?PQ |]
      ==> ineM ?P ?M ?E | ineM ?Q ?M ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 4, template_var 4),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2))),
        template_predicate
         (template_app (template_hole 1, template_var 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 6, template_var 1),
                   template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 6, template_var 0),
                 template_var 3),
               template_var 2))
           ))),
    ("Secrecy.correctCompositionKS_PQ",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionKS ?PQ;
         ?ks : specKeysSecrets ?PQ |]
      ==> ?ks : specKeysSecrets ?P | ?ks : specKeysSecrets ?Q",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4))),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 1, template_var 2))),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app (template_hole 1, template_var 1)))
           ))),
    ("Secrecy.correctCompositionIn_L2",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionIn ?PQ;
         ?ch : ins ?PQ |]
      ==> ?ch : ins ?P | ?ch : ins ?Q",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4))),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 1, template_var 2))),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app (template_hole 1, template_var 1)))
           ))),
    ("Secrecy.correctCompositionIn_prop1",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionIn ?PQ;
         ?x : ins ?PQ |]
      ==> ?x : ins ?P | ?x : ins ?Q",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4))),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 1, template_var 2))),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app (template_hole 1, template_var 1)))
           ))),
    ("Secrecy.correctCompositionOut_prop1",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionOut ?PQ;
         ?x : out ?PQ |]
      ==> ?x : out ?P | ?x : out ?Q",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4))),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 1, template_var 2))),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app (template_hole 1, template_var 1)))
           ))),
    ("Secrecy.TBtheorem3a",
     "[| ~ ine ?P ?E; ~ ine ?Q ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionIn ?PQ |]
      ==> ~ ine ?PQ ?E",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 2)
                )
            ),
        template_equation
         (template_app (template_hole 3, template_var 0),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1))),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_var 2)
               )
           ))),
    ("Secrecy.correctCompositionIn_L1",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionIn ?PQ;
         ?ch ~: loc ?PQ; ?ch : ins ?P |]
      ==> ?ch : ins ?PQ",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 3),
          template_app
           (template_app (template_hole 6, template_var 2),
            template_app
             (template_app (template_hole 6, template_var 1),
              template_hole 5))),
        template_predicate (template_app (template_hole 4, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_app (template_hole 1, template_var 3))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 0, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 0, template_var 3))
           ))),
    ("Secrecy.TBtheorem5a_empty",
     "[| eout ?P ?E | eout ?Q ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionOut ?PQ; loc ?PQ = {} |]
      ==> eout ?PQ ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 8, template_var 1),
                template_var 2))
            ),
        template_equation
         (template_app (template_hole 6, template_var 0),
          template_app
           (template_app (template_hole 5, template_var 3),
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4))),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_equation
         (template_app (template_hole 1, template_var 0), template_hole 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_var 0), template_var 2)
           ))),
    ("Secrecy.TBtheorem4a_empty",
     "[| ine ?P ?E | ine ?Q ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionIn ?PQ; loc ?PQ = {} |]
      ==> ine ?PQ ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 8, template_var 1),
                template_var 2))
            ),
        template_equation
         (template_app (template_hole 6, template_var 0),
          template_app
           (template_app (template_hole 5, template_var 3),
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4))),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_equation
         (template_app (template_hole 1, template_var 0), template_hole 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_var 0), template_var 2)
           ))),
    ("Secrecy.TBtheorem3b",
     "[| ~ ineM ?P ?M ?E; ~ ineM ?Q ?M ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionIn ?PQ |]
      ==> ~ ineM ?PQ ?M ?E",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 5, template_var 4),
                    template_var 3),
                  template_var 2)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 5, template_var 1),
                    template_var 3),
                  template_var 2)
                )
            ),
        template_equation
         (template_app (template_hole 3, template_var 0),
          template_app
           (template_app (template_hole 2, template_var 4),
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1))),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 0),
                   template_var 3),
                 template_var 2)
               )
           ))),
    ("Secrecy.correctCompositionKS_neg1",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionKS ?PQ;
         ?ks ~: specKeysSecrets ?P; ?ks ~: specKeysSecrets ?Q |]
      ==> ?ks ~: specKeysSecrets ?PQ",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4))),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app (template_hole 0, template_var 2))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app (template_hole 0, template_var 1))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 3))
               )
           ))),
    ("Secrecy.TBtheorem45a_P",
     "[| eout ?P ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionOut ?PQ;
         EX ch. ch : out ?P & exprChannel ch ?E & ch ~: loc ?PQ |]
      ==> eout ?PQ ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 10, template_var 1),
          template_app
           (template_app (template_hole 9, template_var 3),
            template_app
             (template_app (template_hole 9, template_var 0),
              template_hole 8))),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 12, template_var 1),
             template_var 2)
           ))),
    ("Secrecy.TBtheorem4a_P",
     "[| ine ?P ?E; subcomponents ?PQ = {?P, ?Q}; correctCompositionIn ?PQ;
         EX ch. ch : ins ?P & exprChannel ch ?E & ch ~: loc ?PQ |]
      ==> ine ?PQ ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 10, template_var 1),
          template_app
           (template_app (template_hole 9, template_var 3),
            template_app
             (template_app (template_hole 9, template_var 0),
              template_hole 8))),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 12, template_var 1),
             template_var 2)
           ))),
    ("Secrecy.TBtheorem5a_notP1",
     "[| eout ?P ?E; ~ eout ?Q ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionOut ?PQ;
         EX ch. out_exprChannelSingle ?P ch ?E & ch : loc ?PQ |]
      ==> ~ eout ?PQ ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 1),
                  template_var 2)
                )
            ),
        template_equation
         (template_app (template_hole 8, template_var 0),
          template_app
           (template_app (template_hole 7, template_var 3),
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 6))),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 11, template_var 0),
                 template_var 2)
               )
           ))),
    ("Secrecy.TBtheorem4a_notP1",
     "[| ine ?P ?E; ~ ine ?Q ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionIn ?PQ;
         EX ch. ine_exprChannelSingle ?P ch ?E & ch : loc ?PQ |]
      ==> ~ ine ?PQ ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 1),
                  template_var 2)
                )
            ),
        template_equation
         (template_app (template_hole 8, template_var 0),
          template_app
           (template_app (template_hole 7, template_var 3),
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 6))),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 11, template_var 0),
                 template_var 2)
               )
           ))),
    ("Secrecy.TBtheorem5a_notP2",
     "[| ~ eout ?Q ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionOut ?PQ; out_exprChannelSet ?P ?ChSet ?E;
         ALL x. x : ?ChSet --> x : loc ?PQ |]
      ==> ~ eout ?PQ ?E",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 3)
                )
            ),
        template_equation
         (template_app (template_hole 8, template_var 2),
          template_app
           (template_app (template_hole 7, template_var 1),
            template_app
             (template_app (template_hole 7, template_var 4),
              template_hole 6))),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 10, template_var 2),
                 template_var 3)
               )
           ))),
    ("Secrecy.TBtheorem4a_notP2",
     "[| ~ ine ?Q ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionIn ?PQ; ine_exprChannelSet ?P ?ChSet ?E;
         ALL x. x : ?ChSet --> x : loc ?PQ |]
      ==> ~ ine ?PQ ?E",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 3)
                )
            ),
        template_equation
         (template_app (template_hole 8, template_var 2),
          template_app
           (template_app (template_hole 7, template_var 1),
            template_app
             (template_app (template_hole 7, template_var 4),
              template_hole 6))),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 10, template_var 2),
                 template_var 3)
               )
           ))),
    ("Secrecy.TBtheorem5b_notP2",
     "[| ~ eoutM ?Q ?M ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionOut ?PQ; out_exprChannelSet ?P ?ChSet ?E;
         ALL x. x : ?ChSet --> x : loc ?PQ |]
      ==> ~ eoutM ?PQ ?M ?E",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 10, template_var 5),
                    template_var 4),
                  template_var 3)
                )
            ),
        template_equation
         (template_app (template_hole 8, template_var 2),
          template_app
           (template_app (template_hole 7, template_var 1),
            template_app
             (template_app (template_hole 7, template_var 5),
              template_hole 6))),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 10, template_var 2),
                   template_var 4),
                 template_var 3)
               )
           ))),
    ("Secrecy.TBtheorem4b_notP2",
     "[| ~ ineM ?Q ?M ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionIn ?PQ; ine_exprChannelSet ?P ?ChSet ?E;
         ALL x. x : ?ChSet --> x : loc ?PQ |]
      ==> ~ ineM ?PQ ?M ?E",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 10, template_var 5),
                    template_var 4),
                  template_var 3)
                )
            ),
        template_equation
         (template_app (template_hole 8, template_var 2),
          template_app
           (template_app (template_hole 7, template_var 1),
            template_app
             (template_app (template_hole 7, template_var 5),
              template_hole 6))),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 10, template_var 2),
                   template_var 4),
                 template_var 3)
               )
           ))),
    ("Secrecy.TBlemma3b",
     "[| ~ ineM ?P ?M ?E; ~ ineM ?Q ?M ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionIn ?PQ; ?ch : ?M; ?ch : ins ?PQ;
         exprChannel ?ch ?E |]
      ==> False",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 9, template_var 5),
                    template_var 4),
                  template_var 3)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 9, template_var 2),
                    template_var 4),
                  template_var 3)
                )
            ),
        template_equation
         (template_app (template_hole 7, template_var 1),
          template_app
           (template_app (template_hole 6, template_var 5),
            template_app
             (template_app (template_hole 6, template_var 2),
              template_hole 5))),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 3)
            )],
       template_predicate (template_hole 0))),
    ("Secrecy.TBtheore54b_P",
     "[| eoutM ?P ?M ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionOut ?PQ;
         EX ch. ch : out ?Q & exprChannel ch ?E & ch ~: loc ?PQ & ch : ?M |]
      ==> eoutM ?PQ ?M ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 10, template_var 1),
          template_app
           (template_app (template_hole 9, template_var 4),
            template_app
             (template_app (template_hole 9, template_var 0),
              template_hole 8))),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 12, template_var 1),
               template_var 3),
             template_var 2)
           ))),
    ("Secrecy.TBtheorem4b_P",
     "[| ineM ?P ?M ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionIn ?PQ;
         EX ch. ch : ins ?Q & exprChannel ch ?E & ch ~: loc ?PQ & ch : ?M |]
      ==> ineM ?PQ ?M ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 10, template_var 1),
          template_app
           (template_app (template_hole 9, template_var 4),
            template_app
             (template_app (template_hole 9, template_var 0),
              template_hole 8))),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 12, template_var 1),
               template_var 3),
             template_var 2)
           ))),
    ("Secrecy.TBtheorem5a_PQ",
     "[| eout ?P ?E | eout ?Q ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionOut ?PQ;
         EX ch.
            (ch : out ?P | ch : out ?Q) &
            exprChannel ch ?E & ch ~: loc ?PQ |]
      ==> eout ?PQ ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 12, template_var 1),
                template_var 2))
            ),
        template_equation
         (template_app (template_hole 10, template_var 0),
          template_app
           (template_app (template_hole 9, template_var 3),
            template_app
             (template_app (template_hole 9, template_var 1),
              template_hole 8))),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 12, template_var 0),
             template_var 2)
           ))),
    ("Secrecy.TBtheorem4a_PQ",
     "[| ine ?P ?E | ine ?Q ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionIn ?PQ;
         EX ch.
            (ch : ins ?P | ch : ins ?Q) &
            exprChannel ch ?E & ch ~: loc ?PQ |]
      ==> ine ?PQ ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 12, template_var 1),
                template_var 2))
            ),
        template_equation
         (template_app (template_hole 10, template_var 0),
          template_app
           (template_app (template_hole 9, template_var 3),
            template_app
             (template_app (template_hole 9, template_var 1),
              template_hole 8))),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 12, template_var 0),
             template_var 2)
           ))),
    ("Secrecy.TBtheorem5b_notP1",
     "[| eoutM ?P ?M ?E; ~ eoutM ?Q ?M ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionOut ?PQ;
         EX ch. out_exprChannelSingle ?P ch ?E & ch : ?M & ch : loc ?PQ |]
      ==> ~ eoutM ?PQ ?M ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 11, template_var 1),
                    template_var 3),
                  template_var 2)
                )
            ),
        template_equation
         (template_app (template_hole 8, template_var 0),
          template_app
           (template_app (template_hole 7, template_var 4),
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 6))),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 11, template_var 0),
                   template_var 3),
                 template_var 2)
               )
           ))),
    ("Secrecy.TBtheorem4b_notP1",
     "[| ineM ?P ?M ?E; ~ ineM ?Q ?M ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionIn ?PQ;
         EX ch. ine_exprChannelSingle ?P ch ?E & ch : ?M & ch : loc ?PQ |]
      ==> ~ ineM ?PQ ?M ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 11, template_var 1),
                    template_var 3),
                  template_var 2)
                )
            ),
        template_equation
         (template_app (template_hole 8, template_var 0),
          template_app
           (template_app (template_hole 7, template_var 4),
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 6))),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 11, template_var 0),
                   template_var 3),
                 template_var 2)
               )
           ))),
    ("Secrecy.TBtheorem4a_notPQ",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionIn ?PQ;
         ine_exprChannelSet ?P ?ChSetP ?E; ine_exprChannelSet ?Q ?ChSetQ ?E;
         ALL x. x : ?ChSetP --> x : loc ?PQ;
         ALL x. x : ?ChSetQ --> x : loc ?PQ |]
      ==> ~ ine ?PQ ?E",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 5),
          template_app
           (template_app (template_hole 9, template_var 4),
            template_app
             (template_app (template_hole 9, template_var 3),
              template_hole 8))),
        template_predicate (template_app (template_hole 7, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_var 0),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 1)
               )
           ))),
    ("Secrecy.TBtheorem5a_notPQ",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionOut ?PQ;
         out_exprChannelSet ?P ?ChSetP ?E; out_exprChannelSet ?Q ?ChSetQ ?E;
         ALL x. x : ?ChSetP --> x : loc ?PQ;
         ALL x. x : ?ChSetQ --> x : loc ?PQ |]
      ==> ~ eout ?PQ ?E",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 5),
          template_app
           (template_app (template_hole 9, template_var 4),
            template_app
             (template_app (template_hole 9, template_var 3),
              template_hole 8))),
        template_predicate (template_app (template_hole 7, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_var 0),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 1)
               )
           ))),
    ("Secrecy.TBtheorem4b_notPQ",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionIn ?PQ;
         ine_exprChannelSet ?P ?ChSetP ?E; ine_exprChannelSet ?Q ?ChSetQ ?E;
         ALL x. x : ?ChSetP --> x : loc ?PQ;
         ALL x. x : ?ChSetQ --> x : loc ?PQ |]
      ==> ~ ineM ?PQ ?M ?E",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 6),
          template_app
           (template_app (template_hole 9, template_var 5),
            template_app
             (template_app (template_hole 9, template_var 4),
              template_hole 8))),
        template_predicate (template_app (template_hole 7, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 5),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_var 1),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 6),
                   template_var 0),
                 template_var 2)
               )
           ))),
    ("Secrecy.TBtheorem5b_PQ",
     "[| eoutM ?P ?M ?E | eoutM ?Q ?M ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionOut ?PQ;
         EX ch.
            (ch : out ?P | ch : out ?Q) &
            ch : ?M & exprChannel ch ?E & ch ~: loc ?PQ |]
      ==> eoutM ?PQ ?M ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app
                   (template_app (template_hole 12, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_app (template_hole 12, template_var 1),
                  template_var 3),
                template_var 2))
            ),
        template_equation
         (template_app (template_hole 10, template_var 0),
          template_app
           (template_app (template_hole 9, template_var 4),
            template_app
             (template_app (template_hole 9, template_var 1),
              template_hole 8))),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 12, template_var 0),
               template_var 3),
             template_var 2)
           ))),
    ("Secrecy.TBtheorem4b_PQ",
     "[| ineM ?P ?M ?E | ineM ?Q ?M ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionIn ?PQ;
         EX ch.
            (ch : ins ?P | ch : ins ?Q) &
            ch : ?M & exprChannel ch ?E & ch ~: loc ?PQ |]
      ==> ineM ?PQ ?M ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app
                   (template_app (template_hole 12, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_app (template_hole 12, template_var 1),
                  template_var 3),
                template_var 2))
            ),
        template_equation
         (template_app (template_hole 10, template_var 0),
          template_app
           (template_app (template_hole 9, template_var 4),
            template_app
             (template_app (template_hole 9, template_var 1),
              template_hole 8))),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 12, template_var 0),
               template_var 3),
             template_var 2)
           ))),
    ("Secrecy.TBtheorem5b_notPQ",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionOut ?PQ;
         out_exprChannelSet ?P ?ChSetP ?E; out_exprChannelSet ?Q ?ChSetQ ?E;
         ?M = ?ChSetP Un ?ChSetQ; ALL x. x : ?ChSetP --> x : loc ?PQ;
         ALL x. x : ?ChSetQ --> x : loc ?PQ |]
      ==> ~ eoutM ?PQ ?M ?E",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 6),
          template_app
           (template_app (template_hole 11, template_var 5),
            template_app
             (template_app (template_hole 11, template_var 4),
              template_hole 10))),
        template_predicate (template_app (template_hole 9, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 5),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_var 1),
              template_var 2)
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 6, template_var 3),
            template_var 1)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 6),
                   template_var 0),
                 template_var 2)
               )
           )))]:
   (string * thm * template) list
### theory "Draft.SecrecyMoreTemplates"
### 0.388s elapsed time, 0.510s cpu time, 0.000s GC time
val it = (): unit
