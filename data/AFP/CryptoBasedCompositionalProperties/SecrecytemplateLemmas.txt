   [("Secrecy.correctCompKS_Keys",
     "correctCompositionKS ?C ==> correctCompositionKeys ?C",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Secrecy.correctCompKS_Secrets",
     "correctCompositionKS ?C ==> correctCompositionSecrets ?C",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Secrecy.eoutM_eout", "eoutM ?P ?M ?E ==> eout ?P ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Secrecy.ineM_ine", "ineM ?P ?M ?E ==> ine ?P ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Secrecy.notSpecKeysSecretsExpr_L2",
     "notSpecKeysSecretsExpr ?P (?a # ?l) ==> notSpecKeysSecretsExpr ?P ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("Secrecy.correctCompKS_KeysSecrets",
     "[| correctCompositionKeys ?C; correctCompositionSecrets ?C |]
      ==> correctCompositionKS ?C",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Secrecy.DecrEnc",
     "EncrDecrKeys ?K1.0 ?K2.0 --> Decr ?K2.0 (Enc ?K1.0 ?E) = ?E",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0))),
             template_var 0))
         )),
    ("Secrecy.ExtSign",
     "EncrDecrKeys ?K1.0 ?K2.0 --> Ext ?K1.0 (Sign ?K2.0 ?E) = ?E",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_var 0))
         )),
    ("Secrecy.not_eout_eoutM", "~ eout ?P ?E ==> ~ eoutM ?P ?M ?E",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0),
                 template_var 1)
               )
           ))),
    ("Secrecy.not_ine_ineM", "~ ine ?P ?E ==> ~ ineM ?P ?M ?E",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0),
                 template_var 1)
               )
           ))),
    ("Secrecy.ineM_Un1", "ineM ?P ?A ?E ==> ineM ?P (?A Un ?B) ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Secrecy.ine_exprChannelSingle_Set",
     "ine_exprChannelSingle ?P ?ch ?E ==> ine_exprChannelSet ?P {?ch} ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)),
             template_var 0)
           ))),
    ("Secrecy.out_exprChannelSingle_Set",
     "out_exprChannelSingle ?P ?ch ?E ==> out_exprChannelSet ?P {?ch} ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)),
             template_var 0)
           ))),
    ("Secrecy.notSpecKeysSecretsExpr_L1",
     "notSpecKeysSecretsExpr ?P (?a # ?l) ==>
      notSpecKeysSecretsExpr ?P [?a]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))
           ))),
    ("Secrecy.ine_exprChannelSet_Single",
     "ine_exprChannelSet ?P {?ch} ?E ==> ine_exprChannelSingle ?P ?ch ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Secrecy.out_exprChannelSet_Single",
     "out_exprChannelSet ?P {?ch} ?E ==> out_exprChannelSingle ?P ?ch ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Secrecy.ine_empty_exprChannelSet",
     "[| ine_exprChannelSet ?P ?ChSet ?E; ?ChSet = {} |] ==> ~ ine ?P ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_equation (template_var 1, template_hole 2)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)
               )
           ))),
    ("Secrecy.ine_nonempty_exprChannelSet",
     "[| ine_exprChannelSet ?P ?ChSet ?E; ?ChSet ~= {} |] ==> ine ?P ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Secrecy.ine_ins_neg1",
     "[| ~ ine ?P ?m; exprChannel ?x ?m |] ==> ?x ~: ins ?P",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 2))
               )
           ))),
    ("Secrecy.correctCompositionKS_subcomp3",
     "[| correctCompositionKS ?C; ?x : subcomponents ?C;
         ?xa : specKeys ?x |]
      ==> ?xa : specKeys ?C",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Secrecy.correctCompositionKS_subcomp4",
     "[| correctCompositionKS ?C; ?x : subcomponents ?C;
         ?xa : specSecrets ?x |]
      ==> ?xa : specSecrets ?C",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Secrecy.correctCompositionKeys_subcomp2",
     "[| correctCompositionKeys ?C; ?xb : subcomponents ?C;
         ?xc : specKeys ?xb |]
      ==> ?xc : specKeys ?C",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Secrecy.correctCompositionSecrets_subcomp2",
     "[| correctCompositionSecrets ?C; ?xb : subcomponents ?C;
         ?xc : specSecrets ?xb |]
      ==> ?xc : specSecrets ?C",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Secrecy.ineM_L1",
     "[| ?ch : ?M; ?ch : ins ?P; exprChannel ?ch ?E |] ==> ineM ?P ?M ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0)
           ))),
    ("Secrecy.correctCompositionKS_subcomp1",
     "[| correctCompositionKS ?C; ?x : subcomponents ?C;
         ?xa : specKeys ?C |]
      ==> EX y:subcomponents ?C. ?xa : specKeys y",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 3, template_var 2)),
             t_empty)
           ))),
    ("Secrecy.correctCompositionKS_subcomp2",
     "[| correctCompositionKS ?C; ?x : subcomponents ?C;
         ?xa : specSecrets ?C |]
      ==> EX y:subcomponents ?C. ?xa : specSecrets y",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 3, template_var 2)),
             t_empty)
           ))),
    ("Secrecy.correctCompositionKeys_subcomp1",
     "[| correctCompositionKeys ?C; ?x : subcomponents ?C;
         ?xb : specKeys ?C |]
      ==> EX x:subcomponents ?C. ?xb : specKeys x",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 3, template_var 2)),
             t_empty)
           ))),
    ("Secrecy.correctCompositionSecrets_subcomp1",
     "[| correctCompositionSecrets ?C; ?x : subcomponents ?C;
         ?s : specSecrets ?C |]
      ==> EX x:subcomponents ?C. ?s : specSecrets x",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 3, template_var 2)),
             t_empty)
           ))),
    ("Secrecy.TBtheorem2a",
     "[| eout ?PQ ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionOut ?PQ |]
      ==> eout ?P ?E | eout ?Q ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 4, template_var 3),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2))),
        template_predicate
         (template_app (template_hole 1, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 6, template_var 0),
               template_var 2))
           ))),
    ("Secrecy.TBtheorem1a",
     "[| ine ?PQ ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionIn ?PQ |]
      ==> ine ?P ?E | ine ?Q ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 4, template_var 3),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2))),
        template_predicate
         (template_app (template_hole 1, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 6, template_var 0),
               template_var 2))
           ))),
    ("Secrecy.correctCompositionKS_negP",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionKS ?PQ;
         ?ks ~: specKeysSecrets ?PQ |]
      ==> ?ks ~: specKeysSecrets ?P",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4))),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app (template_hole 0, template_var 3))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 2))
               )
           ))),
    ("Secrecy.correctCompositionKS_negQ",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionKS ?PQ;
         ?ks ~: specKeysSecrets ?PQ |]
      ==> ?ks ~: specKeysSecrets ?Q",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4))),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app (template_hole 0, template_var 3))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 1))
               )
           ))),
    ("Secrecy.TBtheorem2b",
     "[| eoutM ?PQ ?M ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionOut ?PQ |]
      ==> eoutM ?P ?M ?E | eoutM ?Q ?M ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 4, template_var 4),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2))),
        template_predicate
         (template_app (template_hole 1, template_var 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 6, template_var 1),
                   template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 6, template_var 0),
                 template_var 3),
               template_var 2))
           ))),
    ("Secrecy.TBtheorem1b",
     "[| ineM ?PQ ?M ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionIn ?PQ |]
      ==> ineM ?P ?M ?E | ineM ?Q ?M ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 4, template_var 4),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2))),
        template_predicate
         (template_app (template_hole 1, template_var 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 6, template_var 1),
                   template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 6, template_var 0),
                 template_var 3),
               template_var 2))
           ))),
    ("Secrecy.correctCompositionKS_PQ",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionKS ?PQ;
         ?ks : specKeysSecrets ?PQ |]
      ==> ?ks : specKeysSecrets ?P | ?ks : specKeysSecrets ?Q",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4))),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 1, template_var 2))),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app (template_hole 1, template_var 1)))
           ))),
    ("Secrecy.correctCompositionIn_L2",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionIn ?PQ;
         ?ch : ins ?PQ |]
      ==> ?ch : ins ?P | ?ch : ins ?Q",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4))),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 1, template_var 2))),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app (template_hole 1, template_var 1)))
           ))),
    ("Secrecy.correctCompositionIn_prop1",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionIn ?PQ;
         ?x : ins ?PQ |]
      ==> ?x : ins ?P | ?x : ins ?Q",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4))),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 1, template_var 2))),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app (template_hole 1, template_var 1)))
           ))),
    ("Secrecy.correctCompositionOut_prop1",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionOut ?PQ;
         ?x : out ?PQ |]
      ==> ?x : out ?P | ?x : out ?Q",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4))),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 1, template_var 2))),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app (template_hole 1, template_var 1)))
           ))),
    ("Secrecy.TBtheorem3a",
     "[| ~ ine ?P ?E; ~ ine ?Q ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionIn ?PQ |]
      ==> ~ ine ?PQ ?E",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 2)
                )
            ),
        template_equation
         (template_app (template_hole 3, template_var 0),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1))),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_var 2)
               )
           ))),
    ("Secrecy.correctCompositionIn_L1",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionIn ?PQ;
         ?ch ~: loc ?PQ; ?ch : ins ?P |]
      ==> ?ch : ins ?PQ",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 3),
          template_app
           (template_app (template_hole 6, template_var 2),
            template_app
             (template_app (template_hole 6, template_var 1),
              template_hole 5))),
        template_predicate (template_app (template_hole 4, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_app (template_hole 1, template_var 3))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 0, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 0, template_var 3))
           ))),
    ("Secrecy.TBtheorem5a_empty",
     "[| eout ?P ?E | eout ?Q ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionOut ?PQ; loc ?PQ = {} |]
      ==> eout ?PQ ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 8, template_var 1),
                template_var 2))
            ),
        template_equation
         (template_app (template_hole 6, template_var 0),
          template_app
           (template_app (template_hole 5, template_var 3),
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4))),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_equation
         (template_app (template_hole 1, template_var 0), template_hole 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_var 0), template_var 2)
           ))),
    ("Secrecy.TBtheorem4a_empty",
     "[| ine ?P ?E | ine ?Q ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionIn ?PQ; loc ?PQ = {} |]
      ==> ine ?PQ ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 8, template_var 1),
                template_var 2))
            ),
        template_equation
         (template_app (template_hole 6, template_var 0),
          template_app
           (template_app (template_hole 5, template_var 3),
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4))),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_equation
         (template_app (template_hole 1, template_var 0), template_hole 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_var 0), template_var 2)
           ))),
    ("Secrecy.TBtheorem3b",
     "[| ~ ineM ?P ?M ?E; ~ ineM ?Q ?M ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionIn ?PQ |]
      ==> ~ ineM ?PQ ?M ?E",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 5, template_var 4),
                    template_var 3),
                  template_var 2)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 5, template_var 1),
                    template_var 3),
                  template_var 2)
                )
            ),
        template_equation
         (template_app (template_hole 3, template_var 0),
          template_app
           (template_app (template_hole 2, template_var 4),
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1))),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 0),
                   template_var 3),
                 template_var 2)
               )
           ))),
    ("Secrecy.correctCompositionKS_neg1",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionKS ?PQ;
         ?ks ~: specKeysSecrets ?P; ?ks ~: specKeysSecrets ?Q |]
      ==> ?ks ~: specKeysSecrets ?PQ",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4))),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app (template_hole 0, template_var 2))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app (template_hole 0, template_var 1))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 3))
               )
           ))),
    ("Secrecy.TBtheorem45a_P",
     "[| eout ?P ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionOut ?PQ;
         EX ch. ch : out ?P & exprChannel ch ?E & ch ~: loc ?PQ |]
      ==> eout ?PQ ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 10, template_var 1),
          template_app
           (template_app (template_hole 9, template_var 3),
            template_app
             (template_app (template_hole 9, template_var 0),
              template_hole 8))),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 12, template_var 1),
             template_var 2)
           ))),
    ("Secrecy.TBtheorem4a_P",
     "[| ine ?P ?E; subcomponents ?PQ = {?P, ?Q}; correctCompositionIn ?PQ;
         EX ch. ch : ins ?P & exprChannel ch ?E & ch ~: loc ?PQ |]
      ==> ine ?PQ ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 10, template_var 1),
          template_app
           (template_app (template_hole 9, template_var 3),
            template_app
             (template_app (template_hole 9, template_var 0),
              template_hole 8))),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 12, template_var 1),
             template_var 2)
           ))),
    ("Secrecy.TBtheorem5a_notP1",
     "[| eout ?P ?E; ~ eout ?Q ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionOut ?PQ;
         EX ch. out_exprChannelSingle ?P ch ?E & ch : loc ?PQ |]
      ==> ~ eout ?PQ ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 1),
                  template_var 2)
                )
            ),
        template_equation
         (template_app (template_hole 8, template_var 0),
          template_app
           (template_app (template_hole 7, template_var 3),
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 6))),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 11, template_var 0),
                 template_var 2)
               )
           ))),
    ("Secrecy.TBtheorem4a_notP1",
     "[| ine ?P ?E; ~ ine ?Q ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionIn ?PQ;
         EX ch. ine_exprChannelSingle ?P ch ?E & ch : loc ?PQ |]
      ==> ~ ine ?PQ ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 1),
                  template_var 2)
                )
            ),
        template_equation
         (template_app (template_hole 8, template_var 0),
          template_app
           (template_app (template_hole 7, template_var 3),
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 6))),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 11, template_var 0),
                 template_var 2)
               )
           ))),
    ("Secrecy.TBtheorem5a_notP2",
     "[| ~ eout ?Q ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionOut ?PQ; out_exprChannelSet ?P ?ChSet ?E;
         ALL x. x : ?ChSet --> x : loc ?PQ |]
      ==> ~ eout ?PQ ?E",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 3)
                )
            ),
        template_equation
         (template_app (template_hole 8, template_var 2),
          template_app
           (template_app (template_hole 7, template_var 1),
            template_app
             (template_app (template_hole 7, template_var 4),
              template_hole 6))),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 10, template_var 2),
                 template_var 3)
               )
           ))),
    ("Secrecy.TBtheorem4a_notP2",
     "[| ~ ine ?Q ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionIn ?PQ; ine_exprChannelSet ?P ?ChSet ?E;
         ALL x. x : ?ChSet --> x : loc ?PQ |]
      ==> ~ ine ?PQ ?E",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 3)
                )
            ),
        template_equation
         (template_app (template_hole 8, template_var 2),
          template_app
           (template_app (template_hole 7, template_var 1),
            template_app
             (template_app (template_hole 7, template_var 4),
              template_hole 6))),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 10, template_var 2),
                 template_var 3)
               )
           ))),
    ("Secrecy.TBtheorem5b_notP2",
     "[| ~ eoutM ?Q ?M ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionOut ?PQ; out_exprChannelSet ?P ?ChSet ?E;
         ALL x. x : ?ChSet --> x : loc ?PQ |]
      ==> ~ eoutM ?PQ ?M ?E",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 10, template_var 5),
                    template_var 4),
                  template_var 3)
                )
            ),
        template_equation
         (template_app (template_hole 8, template_var 2),
          template_app
           (template_app (template_hole 7, template_var 1),
            template_app
             (template_app (template_hole 7, template_var 5),
              template_hole 6))),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 10, template_var 2),
                   template_var 4),
                 template_var 3)
               )
           ))),
    ("Secrecy.TBtheorem4b_notP2",
     "[| ~ ineM ?Q ?M ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionIn ?PQ; ine_exprChannelSet ?P ?ChSet ?E;
         ALL x. x : ?ChSet --> x : loc ?PQ |]
      ==> ~ ineM ?PQ ?M ?E",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 10, template_var 5),
                    template_var 4),
                  template_var 3)
                )
            ),
        template_equation
         (template_app (template_hole 8, template_var 2),
          template_app
           (template_app (template_hole 7, template_var 1),
            template_app
             (template_app (template_hole 7, template_var 5),
              template_hole 6))),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 10, template_var 2),
                   template_var 4),
                 template_var 3)
               )
           ))),
    ("Secrecy.TBlemma3b",
     "[| ~ ineM ?P ?M ?E; ~ ineM ?Q ?M ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionIn ?PQ; ?ch : ?M; ?ch : ins ?PQ;
         exprChannel ?ch ?E |]
      ==> False",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 9, template_var 5),
                    template_var 4),
                  template_var 3)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 9, template_var 2),
                    template_var 4),
                  template_var 3)
                )
            ),
        template_equation
         (template_app (template_hole 7, template_var 1),
          template_app
           (template_app (template_hole 6, template_var 5),
            template_app
             (template_app (template_hole 6, template_var 2),
              template_hole 5))),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 3)
            )],
       template_predicate (template_hole 0))),
    ("Secrecy.TBtheore54b_P",
     "[| eoutM ?P ?M ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionOut ?PQ;
         EX ch. ch : out ?Q & exprChannel ch ?E & ch ~: loc ?PQ & ch : ?M |]
      ==> eoutM ?PQ ?M ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 10, template_var 1),
          template_app
           (template_app (template_hole 9, template_var 4),
            template_app
             (template_app (template_hole 9, template_var 0),
              template_hole 8))),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 12, template_var 1),
               template_var 3),
             template_var 2)
           ))),
    ("Secrecy.TBtheorem4b_P",
     "[| ineM ?P ?M ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionIn ?PQ;
         EX ch. ch : ins ?Q & exprChannel ch ?E & ch ~: loc ?PQ & ch : ?M |]
      ==> ineM ?PQ ?M ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 10, template_var 1),
          template_app
           (template_app (template_hole 9, template_var 4),
            template_app
             (template_app (template_hole 9, template_var 0),
              template_hole 8))),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 12, template_var 1),
               template_var 3),
             template_var 2)
           ))),
    ("Secrecy.TBtheorem5a_PQ",
     "[| eout ?P ?E | eout ?Q ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionOut ?PQ;
         EX ch.
            (ch : out ?P | ch : out ?Q) &
            exprChannel ch ?E & ch ~: loc ?PQ |]
      ==> eout ?PQ ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 12, template_var 1),
                template_var 2))
            ),
        template_equation
         (template_app (template_hole 10, template_var 0),
          template_app
           (template_app (template_hole 9, template_var 3),
            template_app
             (template_app (template_hole 9, template_var 1),
              template_hole 8))),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 12, template_var 0),
             template_var 2)
           ))),
    ("Secrecy.TBtheorem4a_PQ",
     "[| ine ?P ?E | ine ?Q ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionIn ?PQ;
         EX ch.
            (ch : ins ?P | ch : ins ?Q) &
            exprChannel ch ?E & ch ~: loc ?PQ |]
      ==> ine ?PQ ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 12, template_var 1),
                template_var 2))
            ),
        template_equation
         (template_app (template_hole 10, template_var 0),
          template_app
           (template_app (template_hole 9, template_var 3),
            template_app
             (template_app (template_hole 9, template_var 1),
              template_hole 8))),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 12, template_var 0),
             template_var 2)
           ))),
    ("Secrecy.TBtheorem5b_notP1",
     "[| eoutM ?P ?M ?E; ~ eoutM ?Q ?M ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionOut ?PQ;
         EX ch. out_exprChannelSingle ?P ch ?E & ch : ?M & ch : loc ?PQ |]
      ==> ~ eoutM ?PQ ?M ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 11, template_var 1),
                    template_var 3),
                  template_var 2)
                )
            ),
        template_equation
         (template_app (template_hole 8, template_var 0),
          template_app
           (template_app (template_hole 7, template_var 4),
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 6))),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 11, template_var 0),
                   template_var 3),
                 template_var 2)
               )
           ))),
    ("Secrecy.TBtheorem4b_notP1",
     "[| ineM ?P ?M ?E; ~ ineM ?Q ?M ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionIn ?PQ;
         EX ch. ine_exprChannelSingle ?P ch ?E & ch : ?M & ch : loc ?PQ |]
      ==> ~ ineM ?PQ ?M ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 11, template_var 1),
                    template_var 3),
                  template_var 2)
                )
            ),
        template_equation
         (template_app (template_hole 8, template_var 0),
          template_app
           (template_app (template_hole 7, template_var 4),
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 6))),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 11, template_var 0),
                   template_var 3),
                 template_var 2)
               )
           ))),
    ("Secrecy.TBtheorem4a_notPQ",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionIn ?PQ;
         ine_exprChannelSet ?P ?ChSetP ?E; ine_exprChannelSet ?Q ?ChSetQ ?E;
         ALL x. x : ?ChSetP --> x : loc ?PQ;
         ALL x. x : ?ChSetQ --> x : loc ?PQ |]
      ==> ~ ine ?PQ ?E",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 5),
          template_app
           (template_app (template_hole 9, template_var 4),
            template_app
             (template_app (template_hole 9, template_var 3),
              template_hole 8))),
        template_predicate (template_app (template_hole 7, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_var 0),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 1)
               )
           ))),
    ("Secrecy.TBtheorem5a_notPQ",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionOut ?PQ;
         out_exprChannelSet ?P ?ChSetP ?E; out_exprChannelSet ?Q ?ChSetQ ?E;
         ALL x. x : ?ChSetP --> x : loc ?PQ;
         ALL x. x : ?ChSetQ --> x : loc ?PQ |]
      ==> ~ eout ?PQ ?E",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 5),
          template_app
           (template_app (template_hole 9, template_var 4),
            template_app
             (template_app (template_hole 9, template_var 3),
              template_hole 8))),
        template_predicate (template_app (template_hole 7, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_var 0),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 1)
               )
           ))),
    ("Secrecy.TBtheorem4b_notPQ",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionIn ?PQ;
         ine_exprChannelSet ?P ?ChSetP ?E; ine_exprChannelSet ?Q ?ChSetQ ?E;
         ALL x. x : ?ChSetP --> x : loc ?PQ;
         ALL x. x : ?ChSetQ --> x : loc ?PQ |]
      ==> ~ ineM ?PQ ?M ?E",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 6),
          template_app
           (template_app (template_hole 9, template_var 5),
            template_app
             (template_app (template_hole 9, template_var 4),
              template_hole 8))),
        template_predicate (template_app (template_hole 7, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 5),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_var 1),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 6),
                   template_var 0),
                 template_var 2)
               )
           ))),
    ("Secrecy.TBtheorem5b_PQ",
     "[| eoutM ?P ?M ?E | eoutM ?Q ?M ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionOut ?PQ;
         EX ch.
            (ch : out ?P | ch : out ?Q) &
            ch : ?M & exprChannel ch ?E & ch ~: loc ?PQ |]
      ==> eoutM ?PQ ?M ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app
                   (template_app (template_hole 12, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_app (template_hole 12, template_var 1),
                  template_var 3),
                template_var 2))
            ),
        template_equation
         (template_app (template_hole 10, template_var 0),
          template_app
           (template_app (template_hole 9, template_var 4),
            template_app
             (template_app (template_hole 9, template_var 1),
              template_hole 8))),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 12, template_var 0),
               template_var 3),
             template_var 2)
           ))),
    ("Secrecy.TBtheorem4b_PQ",
     "[| ineM ?P ?M ?E | ineM ?Q ?M ?E; subcomponents ?PQ = {?P, ?Q};
         correctCompositionIn ?PQ;
         EX ch.
            (ch : ins ?P | ch : ins ?Q) &
            ch : ?M & exprChannel ch ?E & ch ~: loc ?PQ |]
      ==> ineM ?PQ ?M ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app
                   (template_app (template_hole 12, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_app (template_hole 12, template_var 1),
                  template_var 3),
                template_var 2))
            ),
        template_equation
         (template_app (template_hole 10, template_var 0),
          template_app
           (template_app (template_hole 9, template_var 4),
            template_app
             (template_app (template_hole 9, template_var 1),
              template_hole 8))),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 12, template_var 0),
               template_var 3),
             template_var 2)
           ))),
    ("Secrecy.TBtheorem5b_notPQ",
     "[| subcomponents ?PQ = {?P, ?Q}; correctCompositionOut ?PQ;
         out_exprChannelSet ?P ?ChSetP ?E; out_exprChannelSet ?Q ?ChSetQ ?E;
         ?M = ?ChSetP Un ?ChSetQ; ALL x. x : ?ChSetP --> x : loc ?PQ;
         ALL x. x : ?ChSetQ --> x : loc ?PQ |]
      ==> ~ eoutM ?PQ ?M ?E",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 6),
          template_app
           (template_app (template_hole 11, template_var 5),
            template_app
             (template_app (template_hole 11, template_var 4),
              template_hole 10))),
        template_predicate (template_app (template_hole 9, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 5),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_var 1),
              template_var 2)
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 6, template_var 3),
            template_var 1)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 6),
                   template_var 0),
                 template_var 2)
               )
           )))]
