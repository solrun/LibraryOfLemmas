   [("MFMC_Reduction.bipartite_web_of_sel",
     "edge (bipartite_web_of ?\<Gamma>) ?uv (Inl ?u) = False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("MFMC_Reduction.bipartite_web_of_sel",
     "edge (bipartite_web_of ?\<Gamma>) (Inr ?v) ?uv = False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_hole 0)),
    ("MFMC_Reduction.web_of_network_sel",
     "weight (web_of_network ?\<Delta>) ?e = capacity ?\<Delta> ?e",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("MFMC_Reduction.bipartite_web_of_sel",
     "B (bipartite_web_of ?\<Gamma>) = Inr ` (- A ?\<Gamma>)",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("MFMC_Reduction.flow_flow_of_current",
     "web_flow (web_of_network ?\<Delta>) ?f ==>
      flow ?\<Delta> (flow_of_current ?\<Delta> ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("MFMC_Reduction.bipartite_web_of_sel",
     "A (bipartite_web_of ?\<Gamma>) =
      Inl ` (\<^bold>V\<^bsub>?\<Gamma>\<^esub> - B ?\<Gamma>)",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, template_var 0)),
       template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0))),
           template_app (template_hole 0, template_var 0))))),
    ("MFMC_Reduction.edge_bipartite_webI1",
     "edge ?\<Gamma> ?u ?v ==>
      edge (bipartite_web_of ?\<Gamma>) (Inl ?u) (Inr ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("MFMC_Reduction.bipartite_web_of_sel",
     "weight (bipartite_web_of ?\<Gamma>) (Inl ?u) =
      (if ?u : B ?\<Gamma> then 0 else weight ?\<Gamma> ?u)",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 1)),
         template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app (template_hole 2, template_var 1))),
           template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("MFMC_Reduction.bipartite_web_of_sel",
     "weight (bipartite_web_of ?\<Gamma>) (Inr ?v) =
      (if ?v : A ?\<Gamma> then 0 else weight ?\<Gamma> ?v)",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 1)),
         template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app (template_hole 2, template_var 1))),
           template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("MFMC_Reduction.web_of_network_sel",
     "A (web_of_network ?\<Delta>) =
      {(source ?\<Delta>, x) |x. edge ?\<Delta> (source ?\<Delta>) x}",
     template_equation
      (template_app
        (template_hole 8, template_app (template_hole 7, template_var 0)),
       template_app (template_hole 6, t_empty))),
    ("MFMC_Reduction.web_of_network_sel",
     "B (web_of_network ?\<Delta>) =
      {(x, sink ?\<Delta>) |x. edge ?\<Delta> x (sink ?\<Delta>)}",
     template_equation
      (template_app
        (template_hole 8, template_app (template_hole 7, template_var 0)),
       template_app (template_hole 6, t_empty))),
    ("MFMC_Reduction.vertex_web_of_network",
     "vertex (web_of_network ?\<Delta>) (?x, ?y) =
      (edge ?\<Delta> ?x ?y &
       (EX z. edge ?\<Delta> ?y z | edge ?\<Delta> z ?x))",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0)),
         template_app (template_hole 1, t_empty)))),
    ("MFMC_Reduction.divide_less_1_iff_ennreal",
     "(?a / ?b < 1) = (0 < ?b & ?a < ?b | ?b = 0 & ?a = 0 | ?b = \<top>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 0)),
              template_hole 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 7, template_hole 2),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 7, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_hole 2)),
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_hole 2))),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("MFMC_Reduction.edge_bipartite_webI2",
     "[| ?u : \<^bold>V\<^bsub>?\<Gamma>\<^esub>; ?u ~: A ?\<Gamma>;
         ?u ~: B ?\<Gamma> |]
      ==> edge (bipartite_web_of ?\<Gamma>) (Inl ?u) (Inr ?u)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 0)))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_app (template_hole 5, template_var 0))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_app (template_hole 4, template_var 0))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0)),
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 1))
           ))),
    ("MFMC_Reduction.cut_RF_separating",
     "[| separating_network ?\<Delta> ?V; sink ?\<Delta> ~: ?V |]
      ==> MFMC_Network.cut ?\<Delta>
           (RF\<^sup>N\<^bsub>?\<Delta>\<^esub> ?V)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 1),
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app (template_hole 6, template_var 1)),
                    template_hole 5)),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 4, template_var 1)),
                  template_hole 5)),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 4, template_var 1)),
                  template_var 0)
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 4, template_var 1)),
                   template_hole 5)),
               template_var 0))
           ))),
    ("MFMC_Reduction.web_of_network_sel",
     "edge (web_of_network ?\<Delta>) ?e ?e' =
      (?e : \<^bold>E\<^bsub>?\<Delta>\<^esub> &
       ?e' : \<^bold>E\<^bsub>?\<Delta>\<^esub> & snd ?e = fst ?e')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_app
                  (template_hole 5,
                   template_app (template_hole 4, t_empty)))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 0),
                   template_app
                    (template_hole 5,
                     template_app (template_hole 4, t_empty)))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("MFMC_Reduction.bipartite_web_of_sel",
     "edge (bipartite_web_of ?\<Gamma>) (Inl ?u) (Inr ?v) =
      (edge ?\<Gamma> ?u ?v |
       ?u = ?v &
       ?u : \<^bold>V\<^bsub>?\<Gamma>\<^esub> &
       ?u ~: A ?\<Gamma> & ?v ~: B ?\<Gamma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 13,
                  template_app (template_hole 12, template_var 2)),
                template_app (template_hole 11, template_var 1)),
              template_app (template_hole 10, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_app (template_hole 8, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_var 2)))),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 5, template_var 1),
                         template_app (template_hole 1, template_var 2)))),
                   template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 5, template_var 0),
                       template_app (template_hole 0, template_var 2)))))))
           ))),
    ("MFMC_Reduction.separating_cut",
     "[| separating (web_of_network ?\<Delta>) ?S;
         source ?\<Delta> ~= sink ?\<Delta>;
         !!x. ~ edge ?\<Delta> (sink ?\<Delta>) x |]
      ==> MFMC_Network.cut ?\<Delta> (cut_of_sep ?\<Delta> ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 10, template_var 1)),
                  template_app
                   (template_hole 9,
                    template_app (template_hole 10, template_var 1))),
                template_app
                 (template_hole 8,
                  template_app (template_hole 10, template_var 1))),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("MFMC_Reduction.linkage_quotient_webD",
     "[| current ?\<Gamma> ?f; wave ?\<Gamma> ?f;
         web_flow (quotient_web ?\<Gamma> ?f) ?g;
         linkage (quotient_web ?\<Gamma> ?f) ?g; trimming ?\<Gamma> ?f ?h |]
      ==> web_flow ?\<Gamma> (plus_current ?h ?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("MFMC_Reduction.E_bipartite_web",
     "\<^bold>E\<^bsub>bipartite_web_of ?\<Gamma>\<^esub> =
      (%(x, y). (Inl x, Inr y)) ` \<^bold>E\<^bsub>?\<Gamma>\<^esub> Un
      (%x. (Inl x, Inr x)) `
      (\<^bold>V\<^bsub>?\<Gamma>\<^esub> - A ?\<Gamma> - B ?\<Gamma>)",
     template_equation
      (template_app
        (template_hole 18, template_app (template_hole 17, t_empty)),
       template_app
        (template_app
          (template_hole 14,
           template_app
            (template_app
              (template_hole 13, template_app (template_hole 12, t_empty)),
             template_app
              (template_hole 8, template_app (template_hole 7, t_empty)))),
         template_app
          (template_app (template_hole 5, t_empty),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0))),
                 template_app (template_hole 1, template_var 0))),
             template_app (template_hole 0, template_var 0)))))),
    ("MFMC_Reduction.separating_network_cut_of_sep",
     "[| separating (web_of_network ?\<Delta>) ?S;
         source ?\<Delta> ~= sink ?\<Delta> |]
      ==> separating_network ?\<Delta>
           (fst ` \<E>\<^bsub>web_of_network ?\<Delta>\<^esub> ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 16,
                    template_app (template_hole 15, template_var 1)),
                  template_app
                   (template_hole 14,
                    template_app (template_hole 15, template_var 1))),
                template_app
                 (template_hole 13,
                  template_app (template_hole 15, template_var 1))),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 10, template_var 1),
              template_app (template_hole 9, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 8, template_var 1),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 10, template_var 1)),
                   template_hole 6)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 9, template_var 1)),
                 template_hole 6)),
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app (template_hole 3, t_empty)))
           ))),
    ("MFMC_Reduction.f",
     "[| web_flow (web_of_network ?\<Delta>) ?f;
         orthogonal_current (web_of_network ?\<Delta>) ?f ?S;
         separating (web_of_network ?\<Delta>) ?S;
         !!e. e : \<^bold>E\<^bsub>?\<Delta>\<^esub> ==>
              0 < capacity ?\<Delta> e |]
      ==> current (web_of_network ?\<Delta>) ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app (template_hole 13, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 13, template_var 2)),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 13, template_var 2)),
                  template_app
                   (template_hole 10,
                    template_app (template_hole 13, template_var 2))),
                template_app
                 (template_hole 9,
                  template_app (template_hole 13, template_var 2))),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 13, template_var 2)),
             template_var 1)
           ))),
    ("MFMC_Reduction.linkage_quotient_webD",
     "[| current ?\<Gamma> ?f; wave ?\<Gamma> ?f;
         web_flow (quotient_web ?\<Gamma> ?f) ?g;
         linkage (quotient_web ?\<Gamma> ?f) ?g; trimming ?\<Gamma> ?f ?h |]
      ==> orthogonal_current ?\<Gamma> (plus_current ?h ?g)
           (\<E>\<^bsub>?\<Gamma>\<^esub>
             (TER\<^bsub>?\<Gamma>\<^esub> ?f))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 12, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 9, template_var 3),
               template_app
                (template_app (template_hole 8, template_var 0),
                 template_var 1)),
             template_app (template_hole 7, t_empty))
           ))),
    ("MFMC_Reduction.edge_bipartite_webE",
     "[| edge (bipartite_web_of ?\<Gamma>) ?uv ?uv';
         !!u v.
            [| ?uv = Inl u; ?uv' = Inr v; edge ?\<Gamma> u v |] ==> ?thesis;
         !!u. [| ?uv = Inl u; ?uv' = Inr u;
                 u : \<^bold>V\<^bsub>?\<Gamma>\<^esub>; u ~: A ?\<Gamma>;
                 u ~: B ?\<Gamma> |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 11, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_var 0))),
    ("MFMC_Reduction.orthogonal_leave_RF",
     "[| web_flow (web_of_network ?\<Delta>) ?f;
         orthogonal_current (web_of_network ?\<Delta>) ?f ?S;
         separating (web_of_network ?\<Delta>) ?S;
         !!e. e : \<^bold>E\<^bsub>?\<Delta>\<^esub> ==>
              0 < capacity ?\<Delta> e;
         edge ?\<Delta> ?x ?y; ?x : cut_of_sep ?\<Delta> ?S;
         ?y ~: cut_of_sep ?\<Delta> ?S |]
      ==> (?x, ?y) : ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app (template_hole 16, template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 16, template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 14,
                    template_app (template_hole 16, template_var 4)),
                  template_app
                   (template_hole 13,
                    template_app (template_hole 16, template_var 4))),
                template_app
                 (template_hole 12,
                  template_app (template_hole 16, template_var 4))),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 4),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 4),
                template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 2))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 2)
           ))),
    ("MFMC_Reduction.orthogonal_flow_of_current",
     "[| web_flow (web_of_network ?\<Delta>) ?f;
         orthogonal_current (web_of_network ?\<Delta>) ?f ?S;
         separating (web_of_network ?\<Delta>) ?S;
         !!e. e : \<^bold>E\<^bsub>?\<Delta>\<^esub> ==>
              0 < capacity ?\<Delta> e;
         source ?\<Delta> ~= sink ?\<Delta>;
         !!x. ~ edge ?\<Delta> (sink ?\<Delta>) x;
         ~ edge ?\<Delta> (source ?\<Delta>) (sink ?\<Delta>) |]
      ==> orthogonal ?\<Delta> (flow_of_current ?\<Delta> ?f)
           (cut_of_sep ?\<Delta> ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 21,
                template_app (template_hole 20, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 19,
                  template_app (template_hole 20, template_var 2)),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 18,
                    template_app (template_hole 20, template_var 2)),
                  template_app
                   (template_hole 17,
                    template_app (template_hole 20, template_var 2))),
                template_app
                 (template_hole 16,
                  template_app (template_hole 20, template_var 2))),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_negation
         (
            template_equation
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 11, template_var 2),
                    template_app (template_hole 5, template_var 2)),
                  template_app (template_hole 4, template_var 2))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           )))]
