   [("Linear_Bound_Argument.lin_bound_arg_general_set",
     "[| ?A <= carrier_vec ?nr; vec_space.lin_indpt_vs ?nr ?A |]
      ==> card ?A <= ?nr",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 3, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("Linear_Bound_Argument.lin_bound_arg_general_list",
     "[| distinct ?xs; set ?xs <= carrier_vec ?nr;
         vec_space.lin_indpt_vs ?nr (set ?xs) |]
      ==> length ?xs <= ?nr",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 4, template_var 1))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("Linear_Bound_Argument.lin_bound_arg_general",
     "[| distinct (cols ?A); ?A : carrier_mat ?nr ?nc;
         vec_space.lin_indpt_vs ?nr (set (cols ?A)) |]
      ==> ?nc <= ?nr",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_hole 1,
                template_app (template_hole 5, template_var 2)))
            )],
       template_inequation (less_equals, template_var 0, template_var 1))),
    ("Linear_Bound_Argument.lin_bound_argument",
     "[| distinct (cols ?A); ?A : carrier_mat ?nr ?nc;
         !!f. ?A *\<^sub>v vec ?nc (%i. f (col ?A i)) = 0\<^sub>v ?nr ==>
              ALL v:set (cols ?A). f v = (0::?'a) |]
      ==> ?nc <= ?nr",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 14,
              template_app (template_hole 13, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_app
               (template_app (template_hole 11, template_var 1),
                template_var 0))
            ),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_inequation (less_equals, template_var 0, template_var 1))),
    ("Linear_Bound_Argument.lin_bound_argument2",
     "[| distinct (cols ?A); ?A : carrier_mat ?nr ?nc;
         !!f. vec ?nr (%i. SUM j = 0..<?nc. f (col ?A j) * col ?A j $ i) =
              0\<^sub>v ?nr ==>
              ALL v:set (cols ?A). f v = (0::?'a) |]
      ==> ?nc <= ?nr",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 18,
              template_app (template_hole 17, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 2),
              template_app
               (template_app (template_hole 15, template_var 1),
                template_var 0))
            ),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_inequation (less_equals, template_var 0, template_var 1)))]
