Loading theory "HOL-Combinatorics.Transposition" (required by "Draft.Set_Multiset_ExtrasMoreTemplates" via "Draft.Set_Multiset_Extras" via "HOL-Combinatorics.Multiset_Permutations" via "HOL-Combinatorics.Permutations")
Loading theory "HOL-Library.Cancellation" (required by "Draft.Set_Multiset_ExtrasMoreTemplates" via "Draft.Set_Multiset_Extras" via "Design_Theory.Multisets_Extras" via "HOL-Library.Multiset")
Loading theory "HOL-Library.FuncSet" (required by "Draft.Set_Multiset_ExtrasMoreTemplates" via "Draft.Set_Multiset_Extras" via "Design_Theory.Multisets_Extras" via "Card_Partitions.Set_Partition" via "HOL-Library.Disjoint_Sets")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Set_Multiset_ExtrasMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.122s elapsed time, 0.512s cpu time, 0.036s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Set_Multiset_ExtrasMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
### theory "HOL-Combinatorics.Transposition"
### 0.142s elapsed time, 0.585s cpu time, 0.036s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Set_Multiset_ExtrasMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.206s elapsed time, 0.815s cpu time, 0.066s GC time
Loading theory "HOL-Library.Sublist" (required by "Draft.Set_Multiset_ExtrasMoreTemplates" via "Draft.Set_Multiset_Extras" via "Design_Theory.Multisets_Extras" via "Nested_Multisets_Ordinals.Multiset_More")
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
### theory "HOL-Library.FuncSet"
### 0.396s elapsed time, 1.585s cpu time, 0.101s GC time
Loading theory "HOL-Library.Disjoint_Sets" (required by "Draft.Set_Multiset_ExtrasMoreTemplates" via "Draft.Set_Multiset_Extras" via "Design_Theory.Multisets_Extras" via "Card_Partitions.Set_Partition")
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Nat_Bijection"
### 0.328s elapsed time, 1.279s cpu time, 0.156s GC time
### theory "HOL-Library.Cancellation"
### 0.455s elapsed time, 1.810s cpu time, 0.192s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Set_Multiset_ExtrasMoreTemplates" via "Draft.ExtrEqs")
Loading theory "HOL-Library.Multiset" (required by "Draft.Set_Multiset_ExtrasMoreTemplates" via "Draft.Set_Multiset_Extras" via "Design_Theory.Multisets_Extras")
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
consts
  prefixes :: "'a list => 'a list list"
### theory "HOL-Library.Disjoint_Sets"
### 0.279s elapsed time, 1.103s cpu time, 0.119s GC time
Loading theory "Card_Partitions.Set_Partition" (required by "Draft.Set_Multiset_ExtrasMoreTemplates" via "Draft.Set_Multiset_Extras" via "Design_Theory.Multisets_Extras")
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "Card_Partitions.Set_Partition"
### 0.365s elapsed time, 1.264s cpu time, 0.737s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Set_Multiset_ExtrasMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  suffixes :: "'a list => 'a list list"
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
Proofs for inductive predicate(s) "list_emb"
consts
  flat :: "'a list stream => 'a stream"
  Proving monotonicity ...
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.216s elapsed time, 4.609s cpu time, 1.196s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Set_Multiset_ExtrasMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
consts
  right :: "'a tree => 'a tree"
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sublists :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
### theory "HOL-Library.Sublist"
### 1.745s elapsed time, 6.680s cpu time, 1.460s GC time
Found termination order: "size <*mlex*> {}"
consts
  mset :: "'a list => 'a multiset"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
Found termination order: "size <*mlex*> {}"
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.140s elapsed time, 3.955s cpu time, 1.334s GC time
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
Found termination order: "size <*mlex*> {}"
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.291s elapsed time, 7.484s cpu time, 1.854s GC time
Loading theory "Draft.Templates" (required by "Draft.Set_Multiset_ExtrasMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.072s elapsed time, 0.170s cpu time, 0.062s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Set_Multiset_ExtrasMoreTemplates")
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.543s elapsed time, 1.145s cpu time, 0.138s GC time
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
### theory "HOL-Library.Multiset"
### 4.095s elapsed time, 12.290s cpu time, 3.930s GC time
Loading theory "HOL-Library.Multiset_Order" (required by "Draft.Set_Multiset_ExtrasMoreTemplates" via "Draft.Set_Multiset_Extras" via "Design_Theory.Multisets_Extras" via "Nested_Multisets_Ordinals.Multiset_More")
Loading theory "HOL-Combinatorics.Permutations" (required by "Draft.Set_Multiset_ExtrasMoreTemplates" via "Draft.Set_Multiset_Extras" via "HOL-Combinatorics.Multiset_Permutations")
class preorder = ord +
  assumes "less_le_not_le": "!!x y. (x < y) = (x <= y & ~ y <= x)"
    and "order_refl": "!!x. x <= x"
    and "order_trans": "!!x y z. [| x <= y; y <= z |] ==> x <= z"
instantiation
  multiset :: (preorder) ordered_ab_semigroup_monoid_add_imp_le
instantiation
  multiset :: (wellorder) wellorder
instantiation
  multiset :: (preorder) order_bot
  bot_multiset == bot :: 'a multiset
instantiation
  multiset :: (linorder) distrib_lattice
  inf_multiset == inf :: 'a multiset => 'a multiset => 'a multiset
  sup_multiset == sup :: 'a multiset => 'a multiset => 'a multiset
### theory "HOL-Library.Multiset_Order"
### 0.215s elapsed time, 0.527s cpu time, 0.068s GC time
Loading theory "Nested_Multisets_Ordinals.Multiset_More" (required by "Draft.Set_Multiset_ExtrasMoreTemplates" via "Draft.Set_Multiset_Extras" via "Design_Theory.Multisets_Extras")
Proofs for inductive predicate(s) "swapidseq"
  Proving monotonicity ...
"(bij, bij_betw, permutation)"
  :: "(('a => 'b) => bool) *
      (('c => 'd) => 'c set => 'd set => bool) * (('e => 'e) => bool)"
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
### theory "Nested_Multisets_Ordinals.Multiset_More"
### 0.614s elapsed time, 1.386s cpu time, 0.323s GC time
Loading theory "Nested_Multisets_Ordinals.Duplicate_Free_Multiset" (required by "Draft.Set_Multiset_ExtrasMoreTemplates" via "Draft.Set_Multiset_Extras" via "Design_Theory.Multisets_Extras")
### theory "HOL-Combinatorics.Permutations"
### 0.839s elapsed time, 1.931s cpu time, 0.391s GC time
Loading theory "HOL-Combinatorics.Multiset_Permutations" (required by "Draft.Set_Multiset_ExtrasMoreTemplates" via "Draft.Set_Multiset_Extras")
### theory "Nested_Multisets_Ordinals.Duplicate_Free_Multiset"
### 0.081s elapsed time, 0.224s cpu time, 0.000s GC time
Loading theory "Design_Theory.Multisets_Extras" (required by "Draft.Set_Multiset_ExtrasMoreTemplates" via "Draft.Set_Multiset_Extras")
Found termination order: "length <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
class ordered_semiring = ordered_comm_monoid_add + semiring +
  assumes
    "mult_left_mono":
      "!!a b c. [| a <= b; (0::'a) <= c |] ==> c * a <= c * b"
  assumes
    "mult_right_mono":
      "!!a b c. [| a <= b; (0::'a) <= c |] ==> a * c <= b * c"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
"{[4, 3, 2, 1], [3, 4, 2, 1], [4, 2, 3, 1], [2, 4, 3, 1], [3, 2, 4, 1],
  [2, 3, 4, 1], [4, 3, 1, 2], [3, 4, 1, 2], [4, 1, 3, 2], [1, 4, 3, 2],
  [3, 1, 4, 2], [1, 3, 4, 2], [4, 2, 1, 3], [2, 4, 1, 3], [4, 1, 2, 3],
  [1, 4, 2, 3], [2, 1, 4, 3], [1, 2, 4, 3], [3, 2, 1, 4], [2, 3, 1, 4],
  [3, 1, 2, 4], [1, 3, 2, 4], [2, 1, 3, 4], [1, 2, 3, 4]}"
  :: "int list set"
### theory "HOL-Combinatorics.Multiset_Permutations"
### 0.698s elapsed time, 1.745s cpu time, 0.301s GC time
### theory "Design_Theory.Multisets_Extras"
### 0.636s elapsed time, 1.563s cpu time, 0.301s GC time
Loading theory "Draft.Set_Multiset_Extras" (required by "Draft.Set_Multiset_ExtrasMoreTemplates")
"{''dcba'', ''cdba'', ''dbca'', ''bdca'', ''cbda'', ''bcda'', ''dcab'',
  ''cdab'', ''dacb'', ''adcb'', ''cadb'', ''acdb'', ''dbac'', ''bdac'',
  ''dabc'', ''adbc'', ''badc'', ''abdc'', ''cbad'', ''bcad'', ''cabd'',
  ''acbd'', ''bacd'', ''abcd''}"
  :: "char list set"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
### theory "Draft.Set_Multiset_Extras"
### 0.552s elapsed time, 0.815s cpu time, 0.085s GC time
Loading theory "Draft.Set_Multiset_ExtrasMoreTemplates"
val templateLemmas =
   [("Set_Multiset_Extras.count_list_mset",
     "count_list ?xs ?x = count (mset ?xs) ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Set_Multiset_Extras.removeAll_size_lt",
     "size (removeAll_mset ?C ?M) <= size ?M",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 0))),
       template_app (template_hole 3, template_var 1))),
    ("Set_Multiset_Extras.mset_list_by_index",
     "mset ?xs = image_mset ((!) ?xs) (mset_set {..<length ?xs})",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_app (template_hole 4, t_empty),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Set_Multiset_Extras.elem_permutation_of_mset_empty_iff",
     "?xs : permutations_of_multiset ?A ==> (?xs = []) = (?A = {#})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_bimplication
        (template_equation (template_var 1, template_hole 2),
         template_equation (template_var 0, template_hole 0)))),
    ("Set_Multiset_Extras.elem_permutation_of_set_empty_iff",
     "[| finite ?A; ?xs : permutations_of_set ?A |]
      ==> (?xs = []) = (?A = {})",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 1))
            )],
       template_bimplication
        (template_equation (template_var 0, template_hole 2),
         template_equation (template_var 1, template_hole 0)))),
    ("Set_Multiset_Extras.mset_image_eq_filter_eq",
     "?A = image_mset ?f ?B ==>
      filter_mset ?P ?A = image_mset ?f {#x :# ?B. ?P (?f x)#}",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 3),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, t_empty), template_var 1))))),
    ("Set_Multiset_Extras.size_count_mset_ss",
     "[| finite ?B; set_mset ?A <= ?B |] ==> size ?A = sum (count ?A) ?B",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 0),
          template_var 1)],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_app (template_hole 1, t_empty), template_var 1)))),
    ("Set_Multiset_Extras.insert_filter_set_false",
     "~ ?P ?x ==> {a: insert ?x ?A. ?P a} = {a: ?A. ?P a}",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_var 2, template_var 1))
            )],
       template_equation
        (template_app (template_hole 3, t_empty),
         template_app (template_hole 3, t_empty)))),
    ("Set_Multiset_Extras.insert_filter_set_true",
     "?P ?x ==> {a: insert ?x ?A. ?P a} = insert ?x {a: ?A. ?P a}",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1))],
       template_equation
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 3, t_empty))))),
    ("Set_Multiset_Extras.obtain_set_list_item",
     "[| ?x : set ?xs;
         !!i. [| i < length ?xs; ?xs ! i = ?x |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Set_Multiset_Extras.equal_card_inter_fin_eq_sets",
     "[| finite ?A; finite ?B; card ?A = card ?B;
         card (?A Int ?B) = card ?A |]
      ==> ?A = ?B",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0)),
        template_equation
         (template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)),
          template_app (template_hole 2, template_var 1))],
       template_equation (template_var 1, template_var 0))),
    ("Set_Multiset_Extras.obtain_two_items_mset",
     "[| 1 < size ?A;
         !!x y. [| x :# ?A; y :# remove1_mset x ?A |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation
         (less_than, template_hole 7,
          template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Set_Multiset_Extras.count_mset_split_image_filter",
     "(!!x. x :# ?A ==> ?a ~= ?g x) ==>
      count {#if ?P x then ?a else ?g x. x :# ?A#} ?a =
      size (filter_mset ?P ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, t_empty), template_var 3)),
           template_var 2),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3))))),
    ("Set_Multiset_Extras.count_distinct_mset_list_index",
     "[| ?i1.0 < length ?xs; ?i2.0 < length ?xs; ?i1.0 ~= ?i2.0;
         distinct_mset (mset ?xs) |]
      ==> ?xs ! ?i1.0 ~= ?xs ! ?i2.0",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 6, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 6, template_var 1)),
        template_negation
         (template_equation (template_var 2, template_var 0)),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 1))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Set_Multiset_Extras.count_mset_split_image_filter_not",
     "(!!x. x :# ?A ==> ?b ~= ?f x) ==>
      count {#if ?P x then ?f x else ?b. x :# ?A#} ?b =
      size {#x :# ?A. ~ ?P x#}",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, t_empty), template_var 3)),
           template_var 2),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 3))))),
    ("Set_Multiset_Extras.count_min_2_indices_lt",
     "[| ?i1.0 < ?i2.0; ?xs ! ?i1.0 = ?x; ?xs ! ?i2.0 = ?x;
         ?i1.0 < length ?xs; ?i2.0 < length ?xs |]
      ==> 2 <= count (mset ?xs) ?x",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 1), template_var 3),
          template_var 0),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 1), template_var 2),
          template_var 0),
        template_inequation
         (less_than, template_var 3,
          template_app (template_hole 6, template_var 1)),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 6, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_hole 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Set_Multiset_Extras.count_min_2_indices",
     "[| ?i1.0 ~= ?i2.0; ?xs ! ?i1.0 = ?x; ?xs ! ?i2.0 = ?x;
         ?i1.0 < length ?xs; ?i2.0 < length ?xs |]
      ==> 2 <= count (mset ?xs) ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 8, template_var 1), template_var 3),
          template_var 0),
        template_equation
         (template_app
           (template_app (template_hole 8, template_var 1), template_var 2),
          template_var 0),
        template_inequation
         (less_than, template_var 3,
          template_app (template_hole 6, template_var 1)),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 6, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_hole 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Set_Multiset_Extras.obtain_two_items_mset_filter",
     "[| 1 < size (filter_mset ?P ?A);
         !!x y.
            [| x :# ?A; y :# remove1_mset x ?A; ?P x; ?P y |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation
         (less_than, template_hole 8,
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, t_empty), template_var 1))),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Set_Multiset_Extras.index_remove1_mset_ne",
     "[| ?x :# mset ?xs; ?y :# remove1_mset ?x (mset ?xs); ?xs ! ?j1.0 = ?x;
         ?j1.0 < length ?xs;
         !!j2. [| ?xs ! j2 = ?y; j2 < length ?xs; ?j1.0 ~= j2 |]
               ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 4),
              template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 10, template_var 3)),
                  template_app
                   (template_app (template_hole 8, template_var 4),
                    template_hole 7))))
            ),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 3), template_var 1),
          template_var 4),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 3, template_var 3)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.Set_Multiset_ExtrasMoreTemplates"
### 0.414s elapsed time, 0.651s cpu time, 0.083s GC time
val it = (): unit
