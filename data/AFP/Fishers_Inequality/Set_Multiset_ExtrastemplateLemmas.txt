   [("Set_Multiset_Extras.count_list_mset",
     "count_list ?xs ?x = count (mset ?xs) ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Set_Multiset_Extras.removeAll_size_lt",
     "size (removeAll_mset ?C ?M) <= size ?M",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 0))),
       template_app (template_hole 3, template_var 1))),
    ("Set_Multiset_Extras.mset_list_by_index",
     "mset ?xs = image_mset ((!) ?xs) (mset_set {..<length ?xs})",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_app (template_hole 4, t_empty),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Set_Multiset_Extras.elem_permutation_of_mset_empty_iff",
     "?xs : permutations_of_multiset ?A ==> (?xs = []) = (?A = {#})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_bimplication
        (template_equation (template_var 1, template_hole 2),
         template_equation (template_var 0, template_hole 0)))),
    ("Set_Multiset_Extras.elem_permutation_of_set_empty_iff",
     "[| finite ?A; ?xs : permutations_of_set ?A |]
      ==> (?xs = []) = (?A = {})",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 1))
            )],
       template_bimplication
        (template_equation (template_var 0, template_hole 2),
         template_equation (template_var 1, template_hole 0)))),
    ("Set_Multiset_Extras.mset_image_eq_filter_eq",
     "?A = image_mset ?f ?B ==>
      filter_mset ?P ?A = image_mset ?f {#x :# ?B. ?P (?f x)#}",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 3),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, t_empty), template_var 1))))),
    ("Set_Multiset_Extras.size_count_mset_ss",
     "[| finite ?B; set_mset ?A <= ?B |] ==> size ?A = sum (count ?A) ?B",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 0),
          template_var 1)],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_app (template_hole 1, t_empty), template_var 1)))),
    ("Set_Multiset_Extras.insert_filter_set_false",
     "~ ?P ?x ==> {a: insert ?x ?A. ?P a} = {a: ?A. ?P a}",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_var 2, template_var 1))
            )],
       template_equation
        (template_app (template_hole 3, t_empty),
         template_app (template_hole 3, t_empty)))),
    ("Set_Multiset_Extras.insert_filter_set_true",
     "?P ?x ==> {a: insert ?x ?A. ?P a} = insert ?x {a: ?A. ?P a}",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1))],
       template_equation
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 3, t_empty))))),
    ("Set_Multiset_Extras.obtain_set_list_item",
     "[| ?x : set ?xs;
         !!i. [| i < length ?xs; ?xs ! i = ?x |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Set_Multiset_Extras.equal_card_inter_fin_eq_sets",
     "[| finite ?A; finite ?B; card ?A = card ?B;
         card (?A Int ?B) = card ?A |]
      ==> ?A = ?B",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0)),
        template_equation
         (template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)),
          template_app (template_hole 2, template_var 1))],
       template_equation (template_var 1, template_var 0))),
    ("Set_Multiset_Extras.obtain_two_items_mset",
     "[| 1 < size ?A;
         !!x y. [| x :# ?A; y :# remove1_mset x ?A |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation
         (less_than, template_hole 7,
          template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Set_Multiset_Extras.count_mset_split_image_filter",
     "(!!x. x :# ?A ==> ?a ~= ?g x) ==>
      count {#if ?P x then ?a else ?g x. x :# ?A#} ?a =
      size (filter_mset ?P ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, t_empty), template_var 3)),
           template_var 2),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3))))),
    ("Set_Multiset_Extras.count_distinct_mset_list_index",
     "[| ?i1.0 < length ?xs; ?i2.0 < length ?xs; ?i1.0 ~= ?i2.0;
         distinct_mset (mset ?xs) |]
      ==> ?xs ! ?i1.0 ~= ?xs ! ?i2.0",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 6, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 6, template_var 1)),
        template_negation
         (template_equation (template_var 2, template_var 0)),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 1))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Set_Multiset_Extras.count_mset_split_image_filter_not",
     "(!!x. x :# ?A ==> ?b ~= ?f x) ==>
      count {#if ?P x then ?f x else ?b. x :# ?A#} ?b =
      size {#x :# ?A. ~ ?P x#}",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, t_empty), template_var 3)),
           template_var 2),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 3))))),
    ("Set_Multiset_Extras.count_min_2_indices_lt",
     "[| ?i1.0 < ?i2.0; ?xs ! ?i1.0 = ?x; ?xs ! ?i2.0 = ?x;
         ?i1.0 < length ?xs; ?i2.0 < length ?xs |]
      ==> 2 <= count (mset ?xs) ?x",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 1), template_var 3),
          template_var 0),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 1), template_var 2),
          template_var 0),
        template_inequation
         (less_than, template_var 3,
          template_app (template_hole 6, template_var 1)),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 6, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_hole 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Set_Multiset_Extras.count_min_2_indices",
     "[| ?i1.0 ~= ?i2.0; ?xs ! ?i1.0 = ?x; ?xs ! ?i2.0 = ?x;
         ?i1.0 < length ?xs; ?i2.0 < length ?xs |]
      ==> 2 <= count (mset ?xs) ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 8, template_var 1), template_var 3),
          template_var 0),
        template_equation
         (template_app
           (template_app (template_hole 8, template_var 1), template_var 2),
          template_var 0),
        template_inequation
         (less_than, template_var 3,
          template_app (template_hole 6, template_var 1)),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 6, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_hole 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Set_Multiset_Extras.obtain_two_items_mset_filter",
     "[| 1 < size (filter_mset ?P ?A);
         !!x y.
            [| x :# ?A; y :# remove1_mset x ?A; ?P x; ?P y |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation
         (less_than, template_hole 8,
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, t_empty), template_var 1))),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Set_Multiset_Extras.index_remove1_mset_ne",
     "[| ?x :# mset ?xs; ?y :# remove1_mset ?x (mset ?xs); ?xs ! ?j1.0 = ?x;
         ?j1.0 < length ?xs;
         !!j2. [| ?xs ! j2 = ?y; j2 < length ?xs; ?j1.0 ~= j2 |]
               ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 4),
              template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 10, template_var 3)),
                  template_app
                   (template_app (template_hole 8, template_var 4),
                    template_hole 7))))
            ),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 3), template_var 1),
          template_var 4),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 3, template_var 3)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0)))]
