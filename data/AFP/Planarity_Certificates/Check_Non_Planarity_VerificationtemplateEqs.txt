   [("Check_Non_Planarity_Verification.IGraph_inv_conv",
     "IGraph_inv ?G = pair_fin_digraph (mk_graph' ?G)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Check_Non_Planarity_Verification.IGraph_inv_conv'",
     "IGraph_inv ?G = pair_pseudo_graph (mk_graph ?G)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Check_Non_Planarity_Verification.finite_symcl_iff",
     "finite (?R\<^sup>s) = finite ?R",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Check_Non_Planarity_Verification.verts_mkg",
     "pverts (mk_graph ?G) = set (ig_verts ?G)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Check_Non_Planarity_Verification.verts_mkg'",
     "pverts (mk_graph' ?G) = set (ig_verts ?G)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Check_Non_Planarity_Verification.parcs_mk_symmetric_symcl",
     "parcs (mk_symmetric ?G) = (arcs_ends ?G)\<^sup>s",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Check_Non_Planarity_Verification.arcs_mkg'",
     "parcs (mk_graph' ?G) = set (ig_arcs ?G)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Check_Non_Planarity_Verification.wellformed_pseudo_graph_mkg",
     "pair_wf_digraph (mk_graph ?G) = pair_pseudo_graph (mk_graph ?G)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("Check_Non_Planarity_Verification.ig_arcs_add_v",
     "ig_arcs (ig_add_v ?G ?v) = ig_arcs ?G",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Check_Non_Planarity_Verification.ig_opposite_simps",
     "ig_opposite ?G (?u, ?v) ?u = ?v",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1),
       template_var 0)),
    ("Check_Non_Planarity_Verification.ig_opposite_simps",
     "ig_opposite ?G (?v, ?u) ?u = ?v",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_var 1)),
    ("Check_Non_Planarity_Verification.arcs_mkg",
     "parcs (mk_graph ?G) = (set (ig_arcs ?G))\<^sup>s",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Check_Non_Planarity_Verification.ig_verts_add_e",
     "ig_verts (ig_add_e ?G ?u ?v) = ig_verts ?G",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("Check_Non_Planarity_Verification.select_nodes_prop_add_e",
     "select_nodes_prop ?G (ig_add_e ?H ?u ?v) = select_nodes_prop ?G ?H",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 3), template_var 2))),
    ("Check_Non_Planarity_Verification.is_subgraph_verts_last",
     "is_subgraph_verts_inv ?G ?H (length (ig_verts ?G)) =
      (pverts (mk_graph ?G) <= pverts (mk_graph ?H))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 1))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1))),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Check_Non_Planarity_Verification.ig_arcs_add_e",
     "ig_arcs (ig_add_e ?G ?u ?v) = ig_arcs ?G @ [(?u, ?v)]",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 5, template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_hole 0)))),
    ("Check_Non_Planarity_Verification.is_subgraph_arcs_last",
     "is_subgraph_arcs_inv ?G ?H (length (ig_arcs ?G)) =
      (parcs (mk_graph ?G) <= parcs (mk_graph ?H) &
       pair_pseudo_graph (mk_graph ?G))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_var 1), template_var 0),
         template_app
          (template_hole 6,
           template_app (template_hole 5, template_var 1))),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1))),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)))),
         template_app
          (template_hole 0,
           template_app (template_hole 1, template_var 1))))),
    ("Check_Non_Planarity_Verification.ig_verts_add_v",
     "ig_verts (ig_add_v ?G ?v) =
      ig_verts ?G @ (if ?v : set (ig_verts ?G) then [] else [?v])",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 7, template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_hole 2,
                   template_app (template_hole 7, template_var 1)))),
             template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_hole 1))))),
    ("Check_Non_Planarity_Verification.All_set_ig_verts",
     "(ALL v:set (ig_verts ?G). ?P v) =
      (ALL i<ig_verts_cnt ?G. ?P (ig_verts ?G ! i))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1))),
         t_empty),
       template_app (template_hole 4, t_empty))),
    ("Check_Non_Planarity_Verification.is_K33_outer_last",
     "is_K33_outer_inv ?G (ig_verts_cnt ?G) ?blue =
      (ALL u:set (ig_verts ?G).
          ALL v:set (ig_verts ?G).
             (?blue u = ?blue v) = ((u, v) ~: set (ig_arcs ?G)))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 9, template_var 1),
           template_app (template_hole 8, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1))),
         t_empty))),
    ("Check_Non_Planarity_Verification.is_K33_inner_last",
     "is_K33_inner_inv ?G ?k (ig_verts_cnt ?G) ?blue =
      (ALL v:set (ig_verts ?G).
          (?blue (ig_verts ?G ! ?k) = ?blue v) =
          ((ig_verts ?G ! ?k, v) ~: set (ig_arcs ?G)))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 10, template_var 2),
             template_var 1),
           template_app (template_hole 9, template_var 2)),
         template_var 0),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 2))),
         t_empty)))]
