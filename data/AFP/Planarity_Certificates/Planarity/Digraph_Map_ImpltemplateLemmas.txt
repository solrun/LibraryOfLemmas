   [("Digraph_Map_Impl.nil_not_in_grouped_out_arcs",
     "[] ~: set (grouped_out_arcs ?G_list)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)))
             )
         )),
    ("Digraph_Map_Impl.pair_graph_impl_correct",
     "pair_graph (list_digraph ?G) = pair_graph_impl ?G",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Digraph_Map_Impl.distincts_grouped_by_fst",
     "distinct ?xs ==> distincts (grouped_by_fst ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Digraph_Map_Impl.list_digraph_simps",
     "pverts (list_digraph ?G_list) = set (fst ?G_list)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Digraph_Map_Impl.list_digraph_simps",
     "parcs (list_digraph ?G_list) = set (snd ?G_list)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Digraph_Map_Impl.distincts_grouped_arcs",
     "distinct (snd ?G_list) ==> distincts (grouped_out_arcs ?G_list)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Digraph_Map_Impl.isolated_verts_impl_correct",
     "pre_digraph.isolated_verts (with_proj (list_digraph ?G)) =
      set (isolated_verts_impl ?G)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0))),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Digraph_Map_Impl.union_grouped_by_fst",
     "\<Union> (Executable_Permutations.sset (grouped_by_fst ?ys)) =
      set ?ys",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))),
       template_app (template_hole 2, template_var 0))),
    ("Digraph_Map_Impl.union_grouped_out_arcs",
     "\<Union> (Executable_Permutations.sset (grouped_out_arcs ?G_list)) =
      set (snd ?G_list)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)))),
       template_app
        (template_hole 3, template_app (template_hole 0, template_var 0)))),
    ("Digraph_Map_Impl.comb_planar_impl_altdef",
     "comb_planar_impl ?G =
      (EX M:set (all_maps_list ?G). genus_impl ?G M = 0)",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0))),
         t_empty))),
    ("Digraph_Map_Impl.sccs_verts_impl_correct",
     "pair_pseudo_graph (list_digraph ?G) ==>
      pre_digraph.sccs_verts (with_proj (list_digraph ?G)) =
      sccs_verts_impl ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 0))),
         template_app (template_hole 0, template_var 0)))),
    ("Digraph_Map_Impl.distincts_in_all_maps_list",
     "[| distinct (snd ?X); ?xss : set (all_maps_list ?X) |]
      ==> distincts ?xss",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Digraph_Map_Impl.set_maps_all_maps_list",
     "[| pair_wf_digraph (list_digraph ?G_list); distinct (snd ?G_list) |]
      ==> all_maps (list_digraph ?G_list) =
          set (maps_all_maps_list ?G_list)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Digraph_Map_Impl.elems_all_maps_list",
     "[| ?M : set (all_maps_list ?G); distinct (snd ?G) |]
      ==> \<Union> (Executable_Permutations.sset ?M) = set (snd ?G)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 1))),
         template_app
          (template_hole 1,
           template_app (template_hole 5, template_var 0))))),
    ("Digraph_Map_Impl.comb_planar_impl_correct",
     "[| pair_graph (list_digraph ?G); distinct (fst ?G);
         distinct (snd ?G) |]
      ==> comb_planar (with_proj (list_digraph ?G)) = comb_planar_impl ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 9, template_hole 8),
               template_var 0))),
         template_app (template_hole 0, template_var 0)))),
    ("Digraph_Map_Impl.genus_impl_correct",
     "[| distinct (fst ?G); distinct (snd ?G); lists_digraph_map ?G ?M |]
      ==> pre_digraph_map.euler_genus (with_proj (list_digraph ?G))
           (to_map' (snd ?G) ?M) =
          genus_impl ?G ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 11,
              template_app (template_hole 10, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 10, template_var 1))),
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Digraph_Map_Impl.set_grouped_out_arcs",
     "pair_wf_digraph (list_digraph ?G_list) ==>
      Executable_Permutations.sset (grouped_out_arcs ?G_list) =
      {out_arcs (with_proj (list_digraph ?G_list)) v |v.
       v : pverts (list_digraph ?G_list) &
       out_arcs (with_proj (list_digraph ?G_list)) v ~= {}}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 17,
              template_app
               (template_app (template_hole 16, template_hole 15),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 13, template_hole 12),
           template_app
            (template_hole 11,
             template_app (template_hole 10, template_var 0))),
         template_app (template_hole 9, t_empty))))]
