Loading theory "HOL-Combinatorics.Transposition" (required by "Draft.Permutations_2MoreTemplates" via "Draft.Permutations_2" via "HOL-Combinatorics.Permutations")
Loading theory "HOL-Library.FuncSet" (required by "Draft.Permutations_2MoreTemplates" via "Draft.Permutations_2" via "HOL-Combinatorics.Permutations" via "HOL-Library.Disjoint_Sets")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Permutations_2MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Cancellation" (required by "Draft.Permutations_2MoreTemplates" via "Draft.Permutations_2" via "HOL-Combinatorics.Permutations" via "HOL-Library.Multiset")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.123s elapsed time, 0.515s cpu time, 0.044s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Permutations_2MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
### theory "HOL-Combinatorics.Transposition"
### 0.150s elapsed time, 0.623s cpu time, 0.044s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Permutations_2MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
### theory "HOL-Library.Set_Algebras"
### 0.198s elapsed time, 0.774s cpu time, 0.061s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Permutations_2MoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
### theory "HOL-Library.FuncSet"
### 0.423s elapsed time, 1.685s cpu time, 0.167s GC time
Loading theory "HOL-Library.Disjoint_Sets" (required by "Draft.Permutations_2MoreTemplates" via "Draft.Permutations_2" via "HOL-Combinatorics.Permutations")
### theory "HOL-Library.Nat_Bijection"
### 0.309s elapsed time, 1.208s cpu time, 0.123s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Permutations_2MoreTemplates" via "Draft.ExtrEqs")
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.455s elapsed time, 1.822s cpu time, 0.167s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.Permutations_2MoreTemplates" via "Draft.Permutations_2" via "HOL-Combinatorics.Permutations")
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
### theory "HOL-Library.Disjoint_Sets"
### 0.239s elapsed time, 0.945s cpu time, 0.094s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Permutations_2MoreTemplates" via "Draft.ExtrEqs")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  flat :: "'a list stream => 'a stream"
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.939s elapsed time, 3.593s cpu time, 0.735s GC time
Loading theory "List-Index.List_Index" (required by "Draft.Permutations_2MoreTemplates" via "Draft.Permutations_2" via "Draft.Executable_Permutations" via "Draft.List_Aux")
Found termination order: "size <*mlex*> {}"
consts
  find_index :: "('a => bool) => 'a list => nat"
Found termination order: "size <*mlex*> {}"
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
Found termination order: "size <*mlex*> {}"
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
### theory "HOL-Library.BigO"
### 0.855s elapsed time, 3.263s cpu time, 0.702s GC time
consts
  map_index' :: "nat => (nat => 'a => 'b) => 'a list => 'b list"
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
Found termination order: "size <*mlex*> {}"
consts
  insert_nth :: "nat => 'a => 'a list => 'a list"
Found termination order: "size <*mlex*> {}"
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "List-Index.List_Index"
### 0.326s elapsed time, 1.126s cpu time, 0.118s GC time
Loading theory "Draft.List_Aux" (required by "Draft.Permutations_2MoreTemplates" via "Draft.Permutations_2" via "Draft.Executable_Permutations")
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
### theory "Draft.List_Aux"
### 0.038s elapsed time, 0.112s cpu time, 0.000s GC time
Found termination order: "size <*mlex*> {}"
consts
  mset :: "'a list => 'a multiset"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
Found termination order: "size <*mlex*> {}"
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
### theory "HOL-Library.Tree"
### 1.855s elapsed time, 6.189s cpu time, 1.074s GC time
Loading theory "Draft.Templates" (required by "Draft.Permutations_2MoreTemplates" via "Draft.ExtrEqs")
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.055s elapsed time, 0.111s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Permutations_2MoreTemplates")
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.548s elapsed time, 1.141s cpu time, 0.116s GC time
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
### theory "HOL-Library.Multiset"
### 2.954s elapsed time, 7.628s cpu time, 1.234s GC time
Loading theory "HOL-Combinatorics.Permutations" (required by "Draft.Permutations_2MoreTemplates" via "Draft.Permutations_2")
Proofs for inductive predicate(s) "swapidseq"
  Proving monotonicity ...
"(bij, bij_betw, permutation)"
  :: "(('a => 'b) => bool) *
      (('c => 'd) => 'c set => 'd set => bool) * (('e => 'e) => bool)"
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
### theory "HOL-Combinatorics.Permutations"
### 1.008s elapsed time, 1.843s cpu time, 1.083s GC time
Loading theory "HOL-Combinatorics.Orbits" (required by "Draft.Permutations_2MoreTemplates" via "Draft.Permutations_2" via "Graph_Theory.Auxiliary")
Proofs for inductive predicate(s) "orbitp"
  Proving monotonicity ...
### theory "HOL-Combinatorics.Orbits"
### 0.186s elapsed time, 0.186s cpu time, 0.000s GC time
Loading theory "Graph_Theory.Auxiliary" (required by "Draft.Permutations_2MoreTemplates" via "Draft.Permutations_2")
Proofs for inductive predicate(s) "segmentp"
  Proving monotonicity ...
### theory "Graph_Theory.Auxiliary"
### 0.145s elapsed time, 0.200s cpu time, 0.076s GC time
Loading theory "Draft.Executable_Permutations" (required by "Draft.Permutations_2MoreTemplates" via "Draft.Permutations_2")
Found termination order: "(%p. size_list length (fst p)) <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "length <*mlex*> {}"
Found termination order: "{}"
### theory "Draft.Executable_Permutations"
### 0.590s elapsed time, 0.663s cpu time, 0.072s GC time
Loading theory "Draft.Permutations_2" (required by "Draft.Permutations_2MoreTemplates")
### theory "Draft.Permutations_2"
### 0.097s elapsed time, 0.160s cpu time, 0.082s GC time
Loading theory "Draft.Permutations_2MoreTemplates"
val templateLemmas =
   [("Permutations_2.perm_rem_id", "perm_rem ?a id = id",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Permutations_2.perm_swap_id", "perm_swap ?a ?b id = id",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_hole 0)),
    ("Permutations_2.swap_swap_id",
     "(?x \<rightleftharpoons>\<^sub>F ?y)
       ((?x \<rightleftharpoons>\<^sub>F ?y) ?z) =
      ?z",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_var 0)),
    ("Permutations_2.perm_restrict_dom_subset",
     "has_dom ?f ?A ==> perm_restrict ?f ?A = ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("Permutations_2.bij_perm_rem", "bij (perm_rem ?x ?f) = bij ?f",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_hole 0),
         template_hole 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 0), template_hole 0),
         template_hole 0))),
    ("Permutations_2.bij_perm_swap_iff",
     "bij (perm_swap ?a ?b ?f) = bij ?f",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 0),
         template_hole 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 0), template_hole 0),
         template_hole 0))),
    ("Permutations_2.funpow_perm_swap",
     "perm_swap ?a ?b ?f ^^ ?n = perm_swap ?a ?b (?f ^^ ?n)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_var 0)))),
    ("Permutations_2.bij_swap_compose",
     "bij (?x \<rightleftharpoons>\<^sub>F ?y o ?f) = bij ?f",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1)),
               template_var 0)),
           template_hole 1),
         template_hole 0),
       template_app
        (template_app
          (template_app (template_hole 4, template_var 0), template_hole 1),
         template_hole 0))),
    ("Permutations_2.has_dom_perm_swap",
     "has_dom (perm_swap ?a ?b ?f) ?S =
      has_dom ?f ((?a \<rightleftharpoons>\<^sub>F ?b) ` ?S)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 0)))),
    ("Permutations_2.in_funswapid_image_iff",
     "(?x : (?a \<rightleftharpoons>\<^sub>F ?b) ` ?S) =
      ((?a \<rightleftharpoons>\<^sub>F ?b) ?x : ?S)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 3)),
         template_var 0))),
    ("Permutations_2.perm_rem_permutes",
     "?f permutes ?S Un {?x} ==> perm_rem ?x ?f permutes ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_hole 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_var 1)
           ))),
    ("Permutations_2.cyclic_on_perm_swap",
     "cyclic_on ?f ?S ==>
      cyclic_on (perm_swap ?x ?y ?f)
       ((?x \<rightleftharpoons>\<^sub>F ?y) ` ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_var 2))
           ))),
    ("Permutations_2.bij_eq_iff", "bij ?f ==> (?f ?x = ?f ?y) = (?x = ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_hole 4),
              template_hole 3)
            )],
       template_bimplication
        (template_equation
          (template_app (template_var 2, template_var 1),
           template_app (template_var 2, template_var 0)),
         template_equation (template_var 1, template_var 0)))),
    ("Permutations_2.perm_swap_permutes2",
     "?f permutes (?x \<rightleftharpoons>\<^sub>F ?y) ` ?S ==>
      perm_swap ?x ?y ?f permutes ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 3)),
             template_var 0)
           ))),
    ("Permutations_2.perm_swap_comp",
     "perm_swap ?a ?b (?f o ?g) ?x =
      perm_swap ?a ?b ?f (perm_swap ?a ?b ?g ?x)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3),
             template_var 1),
           template_var 0)))),
    ("Permutations_2.orbit_perm_swap",
     "orbit (perm_swap ?a ?b ?f) ?x =
      (?a \<rightleftharpoons>\<^sub>F ?b) `
      orbit ?f ((?a \<rightleftharpoons>\<^sub>F ?b) ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0))))),
    ("Permutations_2.perm_rem_commutes",
     "bij ?f ==>
      perm_rem ?a (perm_rem ?b ?f) = perm_rem ?b (perm_rem ?a ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_hole 2),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("Permutations_2.perm_rem_simps",
     "[| bij ?f; ?x = ?y |] ==> perm_rem ?x ?f ?y = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_hole 2),
              template_hole 2)
            ),
        template_equation (template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0),
         template_var 1))),
    ("Permutations_2.perm_rem_simps",
     "[| bij ?f; ?f ?y = ?x |] ==> perm_rem ?x ?f ?y = ?f ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_hole 2),
              template_hole 2)
            ),
        template_equation
         (template_app (template_var 2, template_var 1), template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2),
           template_var 1),
         template_app (template_var 2, template_var 0)))),
    ("Permutations_2.perm_rem_same",
     "[| bij ?f; ?f ?y = ?y |] ==> perm_rem ?x ?f ?y = ?f ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_hole 2),
              template_hole 2)
            ),
        template_equation
         (template_app (template_var 2, template_var 1), template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2),
           template_var 1),
         template_app (template_var 2, template_var 1)))),
    ("Permutations_2.orbit_perm_rem",
     "[| bij ?f; ?x ~= ?y |]
      ==> orbit (perm_rem ?y ?f) ?x = orbit ?f ?x - {?y}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 2),
                template_hole 8),
              template_hole 8)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Permutations_2.perm_rem_conv",
     "bij ?f ==>
      perm_rem ?x ?f ?y =
      (if ?x = ?y then ?x else if ?f ?y = ?x then ?f (?f ?y) else ?f ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_hole 3),
              template_hole 3)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 2),
                template_var 0)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 0)),
                 template_var 1),
               template_app
                (template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app (template_var 2, template_var 0)),
                       template_var 1)),
                   template_app
                    (template_var 2,
                     template_app (template_var 2, template_var 0))),
                 template_app (template_var 2, template_var 0)))
             )))),
    ("Permutations_2.orbit_perm_rem_eq",
     "bij ?f ==>
      orbit (perm_rem ?y ?f) ?x =
      (if ?x = ?y then {?y} else orbit ?f ?x - {?y})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 2),
                template_hole 8),
              template_hole 8)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 1),
                    template_var 2)),
                template_var 0)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_hole 1)),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_hole 1)))
             )))),
    ("Permutations_2.perm_rem_simps",
     "[| bij ?f; ?y ~= ?x; ?f ?y ~= ?x |] ==> perm_rem ?x ?f ?y = ?f ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_hole 3),
              template_hole 3)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0)),
        template_negation
         (
            template_equation
             (template_app (template_var 2, template_var 1), template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2),
           template_var 1),
         template_app (template_var 2, template_var 1)))),
    ("Permutations_2.cyclic_on_perm_rem",
     "[| cyclic_on ?f ?S; bij ?f; ?S ~= {?x} |]
      ==> cyclic_on (perm_rem ?x ?f) (?S - {?x})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_hole 6),
              template_hole 6)
            ),
        template_negation
         (
            template_equation
             (template_var 1,
              template_app
               (template_app (template_hole 3, template_var 0),
                template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 2)))
           )))]:
   (string * thm * template) list
### theory "Draft.Permutations_2MoreTemplates"
### 0.672s elapsed time, 1.635s cpu time, 1.130s GC time
val it = (): unit
