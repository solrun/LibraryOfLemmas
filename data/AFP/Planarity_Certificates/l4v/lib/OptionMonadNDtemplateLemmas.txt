   [("OptionMonadND.omonad_simps", "assert_opt (Some ?x) = return ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("OptionMonadND.gets_the_return", "gets_the (oreturn ?x) = return ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("OptionMonadND.gets_the_returnOk",
     "gets_the (oreturnOk ?x) = returnOk ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("OptionMonadND.gets_the_throwError",
     "gets_the (othrow ?e) = throwError ?e",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("OptionMonadND.gets_the_assert", "gets_the (oassert ?P) = assert ?P",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("OptionMonadND.monad_simps", "gets ?f = (%s. ({(?f s, s)}, False))",
     template_equation
      (template_app (template_hole 5, template_var 0), t_empty)),
    ("OptionMonadND.gets_the_obind",
     "gets_the (?f |>> ?g) = do x <- gets_the ?f;
                                gets_the (?g x)
                             od",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         t_empty))),
    ("OptionMonadND.gets_the_opt_map",
     "gets_the (?f |> ?g) = do x <- gets_the ?f;
                               assert_opt (?g x)
                            od",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         t_empty))),
    ("OptionMonadND.gets_the_whileLoop",
     "whileLoop ?C
        (%a. gets_the (?B a))
       ?r =
      gets_the (owhile ?C ?B ?r)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), t_empty),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("OptionMonadND.gets_the_opt_o",
     "gets_the (?f |> Some o ?g) = do x <- gets_the ?f;
return (?g x)
                                   od",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 0))),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         t_empty))),
    ("OptionMonadND.gets_the_conv",
     "gets_the ?B ?s =
      (case ?B ?s of None => ({}, True) | Some r' => ({(r', ?s)}, False))",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_hole 3)),
           t_empty),
         template_app (template_var 1, template_var 0)))),
    ("OptionMonadND.gets_the_loop_terminates",
     "whileLoop_terminates ?C (%a. gets_the (?B a)) ?r ?s =
      (EX rs'. (Some ?r, rs') : option_while' (%a. ?C a ?s) (%a. ?B a ?s))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_var 3), t_empty),
           template_var 1),
         template_var 0),
       template_app (template_hole 4, t_empty)))]
