   [("NonDetMonadLemmas.fail_bind", "fail >>= ?f = fail",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("NonDetMonadLemmas.fail_bindE", "fail >>=E ?f = fail",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("NonDetMonadLemmas.unless_False", "unless False ?X = ?X",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("NonDetMonadLemmas.when_True", "when True ?X = ?X",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("NonDetMonadLemmas.assert_opt_Some",
     "assert_opt (Some ?x) = return ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("NonDetMonadLemmas.gets_to_return", "gets (%s. ?v) = return ?v",
     template_equation
      (template_app (template_hole 1, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("NonDetMonadLemmas.assert_False", "assert False >>= ?f = fail",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_var 0),
       template_hole 0)),
    ("NonDetMonadLemmas.assertE_False", "assertE False >>=E ?f = fail",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_var 0),
       template_hole 0)),
    ("NonDetMonadLemmas.assertE_liftE", "assertE ?P = liftE (assert ?P)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("NonDetMonadLemmas.unless_True", "unless True ?X = return ()",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app (template_hole 1, template_hole 0))),
    ("NonDetMonadLemmas.when_False", "when False ?X = return ()",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app (template_hole 1, template_hole 0))),
    ("NonDetMonadLemmas.unlessE_whenE", "unlessE ?P = whenE (~ ?P)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("NonDetMonadLemmas.unless_when", "unless ?P = when (~ ?P)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("NonDetMonadLemmas.assert_True", "assert True >>= ?f = ?f ()",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_var 0),
       template_app (template_var 0, template_hole 0))),
    ("NonDetMonadLemmas.condition_false_triv", "condition (%_. False)
            ?A
            ?B =
          ?B",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, t_empty), template_var 1),
         template_var 0),
       template_var 0)),
    ("NonDetMonadLemmas.condition_true_triv", "condition (%_. True)
           ?A
           ?B =
         ?A",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, t_empty), template_var 1),
         template_var 0),
       template_var 1)),
    ("NonDetMonadLemmas.assertE_True", "assertE True >>=E ?f = ?f ()",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_var 0),
       template_app (template_var 0, template_hole 0))),
    ("NonDetMonadLemmas.liftE_handleE", "(liftE ?a <handle> ?b) = liftE ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("NonDetMonadLemmas.liftE_handleE'",
     "(liftE ?a <handle2> ?b) = liftE ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("NonDetMonadLemmas.when_False_bind", "when False ?g >>= ?f = ?f ()",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_var 0),
       template_app (template_var 0, template_hole 0))),
    ("NonDetMonadLemmas.whenE_False_bind", "whenE False ?g >>=E ?f = ?f ()",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_var 0),
       template_app (template_var 0, template_hole 0))),
    ("NonDetMonadLemmas.when_True_bind", "when True ?g >>= ?f = ?g >>= ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("NonDetMonadLemmas.whenE_True_bind",
     "whenE True ?g >>=E ?f = ?g >>=E ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("NonDetMonadLemmas.whileLoop_unroll'",
     "whileLoop ?C
        ?B
       ?r =
      condition (?C ?r)
        (?B ?r)
        (return ?r) >>=
      whileLoop ?C
        ?B",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app (template_var 2, template_var 0)),
               template_app (template_var 1, template_var 0)),
             template_app (template_hole 0, template_var 0))),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 1)))),
    ("NonDetMonadLemmas.whileLoop_unroll",
     "whileLoop ?C
        ?B
       ?r =
      condition (?C ?r)
        (?B ?r >>= whileLoop ?C
                     ?B)
        (return ?r)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_var 2, template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 1, template_var 0)),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1))),
         template_app (template_hole 0, template_var 0)))),
    ("NonDetMonadLemmas.whileLoopE_unroll'",
     "whileLoopE ?C
        ?B
       ?r =
      condition (?C ?r)
        (?B ?r)
        (returnOk ?r) >>=E
      whileLoopE ?C
        ?B",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app (template_var 2, template_var 0)),
               template_app (template_var 1, template_var 0)),
             template_app (template_hole 0, template_var 0))),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 1)))),
    ("NonDetMonadLemmas.whileLoopE_unroll",
     "whileLoopE ?C
        ?B
       ?r =
      condition (?C ?r)
        (?B ?r >>=E whileLoopE ?C
                      ?B)
        (returnOk ?r)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_var 2, template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 1, template_var 0)),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1))),
         template_app (template_hole 0, template_var 0)))),
    ("NonDetMonadLemmas.whileLoop_results_simps_no_move",
     "((Some ?x, Some ?x) : whileLoop_results ?C ?B) =
      (~ ?C (fst ?x) (snd ?x))",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 2)),
             template_app (template_hole 4, template_var 2))),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_var 1,
             template_app (template_hole 1, template_var 2)),
           template_app (template_hole 0, template_var 2))))),
    ("NonDetMonadLemmas.nested_bind",
     "do y <- ?f;
         return (?g y)
      od >>=
      ?h =
      do y <- ?f;
         ?h (?g y)
      od",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2), t_empty)),
         t_empty),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("NonDetMonadLemmas.condition_split",
     "?P (condition ?C
            ?a
            ?b
           ?s) =
      ((?C ?s --> ?P (?a ?s)) & (~ ?C ?s --> ?P (?b ?s)))",
     template_equation
      (template_app
        (template_var 4,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 3, template_var 0)),
             template_app
              (template_var 4,
               template_app (template_var 2, template_var 0)))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app (template_var 3, template_var 0))),
           template_app
            (template_var 4,
             template_app (template_var 1, template_var 0)))))),
    ("NonDetMonadLemmas.condition_split_asm",
     "?P (condition ?C
            ?a
            ?b
           ?s) =
      (~ (?C ?s & ~ ?P (?a ?s) | ~ ?C ?s & ~ ?P (?b ?s)))",
     template_equation
      (template_app
        (template_var 4,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_var 3, template_var 0)),
               template_app
                (template_hole 2,
                 template_app
                  (template_var 4,
                   template_app (template_var 2, template_var 0))))),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_hole 2,
                 template_app (template_var 3, template_var 0))),
             template_app
              (template_hole 2,
               template_app
                (template_var 4,
                 template_app (template_var 1, template_var 0))))))))]
