   [("Check_Planarity_Verification.finite_fcs_upto",
     "finite (fcs_upto ?iM ?i)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Check_Planarity_Verification.mkg_simps",
     "head (mk_graph ?IG) = ig_head ?IG",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Check_Planarity_Verification.mkg_simps",
     "tail (mk_graph ?IG) = ig_tail ?IG",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Check_Planarity_Verification.mkg_simps",
     "verts (mk_graph ?IG) = set (fst ?IG)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Check_Planarity_Verification.trivial_label",
     "?P ==> Case_Labeling.CTXT ?IC ?CT ?OC ?P",
     template_implication
      ([template_predicate (template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0),
             template_var 3)
           ))),
    ("Check_Planarity_Verification.arcs_mkg",
     "arcs (mk_graph ?IG) = {0..<length (snd ?IG)}",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Check_Planarity_Verification.arc_to_ends_mkg",
     "arc_to_ends (mk_graph ?IG) ?a = snd ?IG ! ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Check_Planarity_Verification.mkm_simps",
     "edge_rev (mk_map ?G ?iM) = perm_restrict (im_rev ?iM) (arcs ?G)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Check_Planarity_Verification.mkm_simps",
     "edge_succ (mk_map ?G ?iM) = perm_restrict (im_succ ?iM) (arcs ?G)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Check_Planarity_Verification.segment_eq_orbit",
     "?y ~: orbit ?f ?x ==> segment ?f ?x ?y = orbit ?f ?x",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Check_Planarity_Verification.es_eq_im",
     "?a : arcs (mk_graph ?iG) ==>
      edge_succ (mk_map (mk_graph ?iG) ?iM) ?a = im_succ ?iM ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 4, template_var 1)),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Check_Planarity_Verification.ovalidNF_face_cycles",
     "ovalidNF (%s. digraph_map (mk_graph ?iG) ?iM) (face_cycles ?iG ?iM)
       (%r s. r =
              card (pre_digraph_map.face_cycle_sets (mk_graph ?iG) ?iM))",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 6, t_empty),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           t_empty)
         )),
    ("Check_Planarity_Verification.card_orbit_eq_funpow_dist1",
     "?x : orbit ?f ?x ==> card (orbit ?f ?x) = funpow_dist1 ?f ?x ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 0),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_app (template_var 0, template_var 1)),
             template_var 1))))),
    ("Check_Planarity_Verification.orbit_ss",
     "[| ?f : ?A \<rightarrow> ?A; ?a : ?A |] ==> orbit ?f ?a <= ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("Check_Planarity_Verification.ovalidNF_isolated_nodes",
     "ovalidNF (%s. distinct (fst ?iG) & sym_digraph (mk_graph ?iG))
       (isolated_nodes ?iG)
       (%r s. r = card (pre_digraph.isolated_verts (mk_graph ?iG)))",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 9, t_empty),
             template_app (template_hole 3, template_var 0)),
           t_empty)
         )),
    ("Check_Planarity_Verification.funpow_in_funcset",
     "[| ?x : ?A; ?f : ?A \<rightarrow> ?A |] ==> (?f ^^ ?n) ?x : ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 1, template_var 2), t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1),
                 template_var 3)),
             template_var 2)
           ))),
    ("Check_Planarity_Verification.ovalidNF_wp",
     "ovalidNF ?P ?c (%r s. r = ?x) ==>
      ovalidNF (%s. ?Q ?x s & ?P s) ?c ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty), template_var 2),
             template_var 0)
           ))),
    ("Check_Planarity_Verification.all_less_Suc_eq",
     "(ALL x<Suc ?n. ?P x) = ((ALL x<?n. ?P x) & ?P ?n)",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 4, t_empty)),
         template_app (template_var 0, template_var 1)))),
    ("Check_Planarity_Verification.take_nth_distinct",
     "[| distinct ?xs; ?n < length ?xs; ?xs ! ?n : set (take ?n ?xs) |]
      ==> False",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 1)))
            )],
       template_predicate (template_hole 0))),
    ("Check_Planarity_Verification.funpow_dist1_le_card",
     "[| ?y : orbit ?f ?x; ?x : orbit ?f ?x |]
      ==> funpow_dist1 ?f ?x ?y <= card (orbit ?f ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_var 1, template_var 0)),
             template_var 2)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0))))),
    ("Check_Planarity_Verification.in_orbit_imp_in_segment",
     "[| ?y : orbit ?f ?x; ?x ~= ?y; bij ?f |]
      ==> ?y : segment ?f ?x (?f ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            ),
        template_negation
         (template_equation (template_var 0, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_hole 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_app (template_var 1, template_var 2)))
           ))),
    ("Check_Planarity_Verification.funpow_dist1_le",
     "[| ?y : orbit ?f ?x; ?x : orbit ?f ?x |]
      ==> funpow_dist1 ?f ?x ?y <= funpow_dist1 ?f ?x ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_app (template_var 1, template_var 0)),
             template_var 2)),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_app (template_var 1, template_var 0)),
             template_var 0))))),
    ("Check_Planarity_Verification.rev_ok_final",
     "[| wf_digraph (mk_graph ?iG);
         is_map_rev_ok_inv ?iG ?iM ?rev_i ?rev_ok;
         is_map_final ?iG ?rev_i ?rev_ok |]
      ==> ?rev_ok =
          bidirected_digraph (mk_graph ?iG)
           (edge_rev (mk_map (mk_graph ?iG) ?iM))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 6, template_var 3)),
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 6, template_var 3)),
               template_var 2)))))),
    ("Check_Planarity_Verification.ovalidNF_euler_genus",
     "ovalidNF
       (%s. distinct (fst ?iG) &
            digraph_map (mk_graph ?iG) ?iM &
            ?c = card (pre_digraph.sccs (mk_graph ?iG)))
       (euler_genus ?iG ?iM ?c)
       (%r s. r = pre_digraph_map.euler_genus (mk_graph ?iG) ?iM)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 11, t_empty),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1),
               template_var 0)),
           t_empty)
         )),
    ("Check_Planarity_Verification.bij_betwI_finite_dom",
     "[| finite ?A; ?f : ?A \<rightarrow> ?A;
         !!a. a : ?A ==> ?g (?f a) = a |]
      ==> bij_betw ?f ?A ?A",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 2), t_empty))
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 2)
           ))),
    ("Check_Planarity_Verification.funpow_dist1_less_f",
     "[| ?b : orbit ?f ?a; ?a : orbit ?f ?a; ?a ~= ?b |]
      ==> funpow_dist1 ?f ?a ?b < funpow_dist1 ?f ?a (?f ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            ),
        template_negation
         (template_equation (template_var 0, template_var 2))],
       template_inequation
        (less_than,
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_app (template_var 1, template_var 0)),
             template_var 2)),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_app (template_var 1, template_var 0)),
             template_app (template_var 1, template_var 2)))))),
    ("Check_Planarity_Verification.funpow_dist1_f_eq",
     "[| ?b : orbit ?f ?a; ?a : orbit ?f ?a; ?a ~= ?b |]
      ==> funpow_dist1 ?f ?a (?f ?b) = Suc (funpow_dist1 ?f ?a ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            ),
        template_negation
         (template_equation (template_var 0, template_var 2))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_app (template_var 1, template_var 0)),
             template_app (template_var 1, template_var 2))),
         template_app
          (template_hole 1,
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_app (template_var 1, template_var 0)),
               template_var 2)))))),
    ("Check_Planarity_Verification.funpow_eq_funcset",
     "[| ?x : ?A; ?f : ?A \<rightarrow> ?A; !!y. y : ?A ==> ?f y = ?g y |]
      ==> (?f ^^ ?n) ?x = (?g ^^ ?n) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 3), t_empty))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1),
           template_var 4)))),
    ("Check_Planarity_Verification.segment_cong0",
     "[| ?x : ?A; ?f : ?A \<rightarrow> ?A; !!y. y : ?A ==> ?f y = ?g y |]
      ==> segment ?f ?x ?y = segment ?g ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 3), t_empty))
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 4),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 4),
           template_var 0)))),
    ("Check_Planarity_Verification.ovalidNF_is_map",
     "ovalidNF (%s. distinct (fst ?iG) & wf_digraph (mk_graph ?iG))
       (is_map ?iG ?iM)
       (%r s. r =
              (digraph_map (mk_graph ?iG) (mk_map (mk_graph ?iG) ?iM) &
               (ALL i<length (snd ?iG). im_pred ?iM (im_succ ?iM i) = i)))",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 17, t_empty),
             template_app
              (template_app (template_hole 11, template_var 1),
               template_var 0)),
           t_empty)
         )),
    ("Check_Planarity_Verification.permutesI_finite_dom",
     "[| finite ?A; ?f : ?A \<rightarrow> ?A; !!a. a ~: ?A ==> ?f a = a;
         !!a. a : ?A ==> ?g (?f a) = a |]
      ==> ?f permutes ?A",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 2), t_empty))
            ),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 2)
           ))),
    ("Check_Planarity_Verification.funpow_dist1_eq_funcset",
     "[| ?y : orbit ?f ?x; ?x : ?A; ?f : ?A \<rightarrow> ?A;
         !!y. y : ?A ==> ?f y = ?g y |]
      ==> funpow_dist1 ?f ?x ?y = funpow_dist1 ?g ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_app
               (template_app (template_hole 7, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_app (template_hole 5, template_var 1), t_empty))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_app (template_var 3, template_var 2)),
             template_var 4)),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_app (template_var 0, template_var 2)),
             template_var 4))))),
    ("Check_Planarity_Verification.ovalidNF_certify",
     "ovalidNF
       (%s. distinct (fst ?iG) &
            fin_digraph (mk_graph ?iG) &
            ?c = card (pre_digraph.sccs (mk_graph ?iG)))
       (certify ?iG ?iM ?c)
       (%r s. r =
              (pre_digraph_map.euler_genus (mk_graph ?iG)
                (mk_map (mk_graph ?iG) ?iM) =
               0 &
               digraph_map (mk_graph ?iG) (mk_map (mk_graph ?iG) ?iM) &
               (ALL i<length (snd ?iG). im_pred ?iM (im_succ ?iM i) = i)))",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 22, t_empty),
             template_app
              (template_app
                (template_app (template_hole 13, template_var 2),
                 template_var 0),
               template_var 1)),
           t_empty)
         ))]
