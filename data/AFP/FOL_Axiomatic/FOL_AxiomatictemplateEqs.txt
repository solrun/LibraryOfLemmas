   [("FOL_Axiomatic.semantics_tm_id",
     "\<lparr>\<^bold>#, \<^bold>\<dagger>\<rparr> ?t = ?t",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_var 0)),
    ("FOL_Axiomatic.semantics_tm_id_map",
     "map \<lparr>\<^bold>#, \<^bold>\<dagger>\<rparr> ?ts = ?ts",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0)),
         template_var 0),
       template_var 0)),
    ("FOL_Axiomatic.size_inst_fm",
     "FOL_Axiomatic.size_fm (?p\<langle>?t/?m\<rangle>) =
      FOL_Axiomatic.size_fm ?p",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("FOL_Axiomatic.imply_append",
     "(?ps @ ?qs \<^bold>\<leadsto> ?r) =
      (?ps \<^bold>\<leadsto> ?qs \<^bold>\<leadsto> ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("FOL_Axiomatic.lift_lemma",
     "\<lparr>?E\<langle>0:?x\<rangle>, ?F\<rparr> (\<^bold>\<up> ?t) =
      \<lparr>?E, ?F\<rparr> ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_hole 1),
               template_var 2)),
           template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 3), template_var 1),
         template_var 0))),
    ("FOL_Axiomatic.extend_bound",
     "\<Union> (extend ?S ?f ` {..?m}) = extend ?S ?f ?m",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty),
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0))),
    ("FOL_Axiomatic.main", "valid ?p = (\<turnstile> ?p)",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("FOL_Axiomatic.imply_params_fm",
     "params_fm (?ps \<^bold>\<leadsto> ?q) =
      params_fm ?q Un params (set ?ps)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 5, template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty),
             template_app (template_hole 0, template_var 1)))))),
    ("FOL_Axiomatic.shift_commute",
     "?E\<langle>?n:?y\<rangle>\<langle>0:?x\<rangle> =
      ?E\<langle>0:?x\<rangle>\<langle>?n + 1:?y\<rangle>",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2),
               template_var 1)),
           template_hole 2),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_hole 2),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0)),
         template_var 1))),
    ("FOL_Axiomatic.inst_tm_semantics",
     "\<lparr>?E, ?F\<rparr> (?t\<llangle>?s/?m\<rrangle>) =
      \<lparr>?E\<langle>?m:\<lparr>?E, ?F\<rparr> ?s\<rangle>, ?F\<rparr>
       ?t",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 4), template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0),
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 3),
                 template_var 1))),
           template_var 3),
         template_var 2))),
    ("FOL_Axiomatic.boolean_semantics",
     "boolean (%a. ?G a o map \<lparr>?E, ?F\<rparr>)
       \<lbrakk>?E, ?F, ?G\<rbrakk> =
      \<lbrakk>?E, ?F, ?G\<rbrakk>",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 2))),
    ("FOL_Axiomatic.inst_fm_semantics",
     "\<lbrakk>?E, ?F, ?G\<rbrakk> (?p\<langle>?t/?m\<rangle>) =
      \<lbrakk>?E\<langle>?m:\<lparr>?E, ?F\<rparr>
                              ?t\<rangle>, ?F, ?G\<rbrakk>
       ?p",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 5),
             template_var 4),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 0),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4),
                   template_var 1))),
             template_var 4),
           template_var 3),
         template_var 2)))]
