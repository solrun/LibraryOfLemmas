   [("FOL_Axiomatic.finite_params_fm", "finite (params_fm ?p)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("FOL_Axiomatic.finite_params_tm", "finite (params_tm ?t)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("FOL_Axiomatic.Extend_subset", "?S <= Extend ?S ?f",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("FOL_Axiomatic.AK",
     "\<turnstile> ?q \<^bold>\<longrightarrow>
                   ?p \<^bold>\<longrightarrow> ?q",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)))
         )),
    ("FOL_Axiomatic.imply_head", "?p # ?ps \<turnstile> ?p",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 1))
         )),
    ("FOL_Axiomatic.semantics_tm_id",
     "\<lparr>\<^bold>#, \<^bold>\<dagger>\<rparr> ?t = ?t",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_var 0)),
    ("FOL_Axiomatic.semantics_tm_id_map",
     "map \<lparr>\<^bold>#, \<^bold>\<dagger>\<rparr> ?ts = ?ts",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0)),
         template_var 0),
       template_var 0)),
    ("FOL_Axiomatic.Neg",
     "\<turnstile> \<^bold>\<not> \<^bold>\<not> ?p \<^bold>\<longrightarrow>
                   ?p",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_hole 0)),
                 template_hole 0)),
             template_var 0))
         )),
    ("FOL_Axiomatic.size_inst_fm",
     "FOL_Axiomatic.size_fm (?p\<langle>?t/?m\<rangle>) =
      FOL_Axiomatic.size_fm ?p",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("FOL_Axiomatic.add_imply", "\<turnstile> ?q ==> ?ps \<turnstile> ?q",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("FOL_Axiomatic.finite_params_witness",
     "finite (params (witness ?used ?p))",
     template_predicate
      (
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))))
         )),
    ("FOL_Axiomatic.soundness",
     "\<turnstile> ?p ==> \<lbrakk>?E, ?F, ?G\<rbrakk> ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0),
             template_var 3)
           ))),
    ("FOL_Axiomatic.imply_mem", "?p : set ?ps ==> ?ps \<turnstile> ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("FOL_Axiomatic.imply_append",
     "(?ps @ ?qs \<^bold>\<leadsto> ?r) =
      (?ps \<^bold>\<leadsto> ?qs \<^bold>\<leadsto> ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("FOL_Axiomatic.maximal_Extend", "surj ?f ==> maximal (Extend ?S ?f)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 1),
            template_hole 3),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("FOL_Axiomatic.contraposition",
     "\<turnstile> (?p \<^bold>\<longrightarrow>
                    ?q) \<^bold>\<longrightarrow>
                   \<^bold>\<not> ?q \<^bold>\<longrightarrow>
                   \<^bold>\<not> ?p",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0)),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0))))
         )),
    ("FOL_Axiomatic.contraposition",
     "\<turnstile> (\<^bold>\<not> ?q \<^bold>\<longrightarrow>
                    \<^bold>\<not> ?p) \<^bold>\<longrightarrow>
                   ?p \<^bold>\<longrightarrow> ?q",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_hole 0)),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0))),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)))
         )),
    ("FOL_Axiomatic.shift_eq",
     "?n = ?m ==> (?E\<langle>?n:?x\<rangle>) ?m = ?x",
     template_implication
      ([template_equation (template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3),
             template_var 0),
           template_var 2),
         template_var 0))),
    ("FOL_Axiomatic.imply_lift_Imp",
     "\<turnstile> ?p \<^bold>\<longrightarrow> ?q ==>
      \<turnstile> ?p \<^bold>\<longrightarrow> ?ps \<^bold>\<leadsto> ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("FOL_Axiomatic.imply_Cons",
     "?ps \<turnstile> ?q ==> ?p # ?ps \<turnstile> ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2)),
               template_var 1))
           ))),
    ("FOL_Axiomatic.lift_lemma",
     "\<lparr>?E\<langle>0:?x\<rangle>, ?F\<rparr> (\<^bold>\<up> ?t) =
      \<lparr>?E, ?F\<rparr> ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_hole 1),
               template_var 2)),
           template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 3), template_var 1),
         template_var 0))),
    ("FOL_Axiomatic.shift_gt",
     "?m < ?n ==> (?E\<langle>?n:?x\<rangle>) ?m = ?E ?m",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0),
           template_var 3),
         template_app (template_var 1, template_var 3)))),
    ("FOL_Axiomatic.imply_ImpE",
     "\<turnstile> ?ps \<^bold>\<leadsto> ?p \<^bold>\<longrightarrow>
                   ?ps \<^bold>\<leadsto>
                   (?p \<^bold>\<longrightarrow>
                    ?q) \<^bold>\<longrightarrow>
                   ?ps \<^bold>\<leadsto> ?q",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0))),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0))))
         )),
    ("FOL_Axiomatic.AS",
     "\<turnstile> (?p \<^bold>\<longrightarrow>
                    ?q \<^bold>\<longrightarrow>
                    ?r) \<^bold>\<longrightarrow>
                   (?p \<^bold>\<longrightarrow>
                    ?q) \<^bold>\<longrightarrow>
                   ?p \<^bold>\<longrightarrow> ?r",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0))))
         )),
    ("FOL_Axiomatic.extend_bound",
     "\<Union> (extend ?S ?f ` {..?m}) = extend ?S ?f ?m",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty),
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0))),
    ("FOL_Axiomatic.main", "valid ?p = (\<turnstile> ?p)",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("FOL_Axiomatic.deduct1",
     "?ps \<turnstile> ?p \<^bold>\<longrightarrow> ?q ==>
      ?p # ?ps \<turnstile> ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 2),
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2)),
               template_var 0))
           ))),
    ("FOL_Axiomatic.imply_swap_append",
     "?ps @ ?qs \<turnstile> ?r ==> ?qs @ ?ps \<turnstile> ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2)),
               template_var 0))
           ))),
    ("FOL_Axiomatic.deduct2",
     "?p # ?ps \<turnstile> ?q ==>
      ?ps \<turnstile> ?p \<^bold>\<longrightarrow> ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("FOL_Axiomatic.Boole",
     "(\<^bold>\<not> ?p) # ?ps \<turnstile> \<^bold>\<bottom> ==>
      ?ps \<turnstile> ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app
                       (template_app (template_hole 1, template_var 1),
                        template_hole 0)),
                    template_var 0)),
                template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1))
           ))),
    ("FOL_Axiomatic.imply_params_fm",
     "params_fm (?ps \<^bold>\<leadsto> ?q) =
      params_fm ?q Un params (set ?ps)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 5, template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty),
             template_app (template_hole 0, template_var 1)))))),
    ("FOL_Axiomatic.shift_lt",
     "?n < ?m ==> (?E\<langle>?n:?x\<rangle>) ?m = ?E (?m - 1)",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_var 3),
             template_var 0),
           template_var 2),
         template_app
          (template_var 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0))))),
    ("FOL_Axiomatic.tautology",
     "tautology ?p ==> \<lbrakk>?E, ?F, ?G\<rbrakk> ?p",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0),
             template_var 3)
           ))),
    ("FOL_Axiomatic.completeness", "valid ?p ==> \<turnstile> ?p",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("FOL_Axiomatic.inconsistent_parts",
     "[| ?ps \<turnstile> \<^bold>\<bottom>; set ?ps <= ?S |]
      ==> ~ consistent ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_hole 4))
            ),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_var 0)],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("FOL_Axiomatic.shift_commute",
     "?E\<langle>?n:?y\<rangle>\<langle>0:?x\<rangle> =
      ?E\<langle>0:?x\<rangle>\<langle>?n + 1:?y\<rangle>",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2),
               template_var 1)),
           template_hole 2),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_hole 2),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0)),
         template_var 1))),
    ("FOL_Axiomatic.imply_weaken",
     "[| ?ps \<turnstile> ?q; set ?ps <= set ?ps' |]
      ==> ?ps' \<turnstile> ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_inequation
         (less_equals, template_app (template_hole 0, template_var 2),
          template_app (template_hole 0, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1))
           ))),
    ("FOL_Axiomatic.saturated_Extend",
     "[| consistent (Extend ?S ?f); surj ?f |]
      ==> saturated (Extend ?S ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 0),
            template_hole 2),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0))
           ))),
    ("FOL_Axiomatic.Imp3",
     "\<turnstile> (?p \<^bold>\<longrightarrow>
                    ?q \<^bold>\<longrightarrow>
                    ?r) \<^bold>\<longrightarrow>
                   (?s \<^bold>\<longrightarrow>
                    ?p) \<^bold>\<longrightarrow>
                   (?s \<^bold>\<longrightarrow>
                    ?q) \<^bold>\<longrightarrow>
                   ?s \<^bold>\<longrightarrow> ?r",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3)),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1)))))
         )),
    ("FOL_Axiomatic.inst_tm_semantics",
     "\<lparr>?E, ?F\<rparr> (?t\<llangle>?s/?m\<rrangle>) =
      \<lparr>?E\<langle>?m:\<lparr>?E, ?F\<rparr> ?s\<rangle>, ?F\<rparr>
       ?t",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 4), template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0),
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 3),
                 template_var 1))),
           template_var 3),
         template_var 2))),
    ("FOL_Axiomatic.boolean_semantics",
     "boolean (%a. ?G a o map \<lparr>?E, ?F\<rparr>)
       \<lbrakk>?E, ?F, ?G\<rbrakk> =
      \<lbrakk>?E, ?F, ?G\<rbrakk>",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 2))),
    ("FOL_Axiomatic.maximal_exactly_one",
     "[| consistent ?S; maximal ?S |]
      ==> (?p : ?S) = ((\<^bold>\<not> ?p) ~: ?S)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0), template_var 1),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)),
             template_var 1))))),
    ("FOL_Axiomatic.MP'",
     "[| ?ps \<turnstile> ?p \<^bold>\<longrightarrow> ?q;
         ?ps \<turnstile> ?p |]
      ==> ?ps \<turnstile> ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 2),
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))
           ))),
    ("FOL_Axiomatic.Hintikka_model",
     "Hintikka ?H ==> (?p : ?H) = \<lbrakk>?H\<rbrakk> ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0), template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             t_empty),
           template_var 0)))),
    ("FOL_Axiomatic.upd_params_tm",
     "?f ~: params_tm ?t ==>
      \<lparr>?E, ?F(?f := ?x)\<rparr> ?t = \<lparr>?E, ?F\<rparr> ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app (template_hole 3, template_var 3))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 4),
               template_var 0)),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 3)))),
    ("FOL_Axiomatic.finite_params_extend",
     "finite (params ?S) ==> finite (params (extend ?S ?f ?n))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, t_empty), template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, t_empty),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1),
                   template_var 0))))
           ))),
    ("FOL_Axiomatic.consistent_add_instance",
     "[| consistent ?S; \<^bold>\<forall> ?p : ?S |]
      ==> consistent ({?p\<langle>?t/0\<rangle>} Un ?S)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app
                        (template_app (template_hole 2, template_var 1),
                         template_var 0),
                       template_hole 1)),
                   template_hole 0)),
               template_var 2))
           ))),
    ("FOL_Axiomatic.Hintikka_Extend",
     "[| consistent ?H; maximal ?H; saturated ?H; infinite UNIV |]
      ==> Hintikka ?H",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_hole 1))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("FOL_Axiomatic.inst_fm_semantics",
     "\<lbrakk>?E, ?F, ?G\<rbrakk> (?p\<langle>?t/?m\<rangle>) =
      \<lbrakk>?E\<langle>?m:\<lparr>?E, ?F\<rparr>
                              ?t\<rangle>, ?F, ?G\<rbrakk>
       ?p",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 5),
             template_var 4),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 0),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4),
                   template_var 1))),
             template_var 4),
           template_var 3),
         template_var 2))),
    ("FOL_Axiomatic.upd_params_fm",
     "?f ~: params_fm ?p ==>
      \<lbrakk>?E, ?F(?f := ?x), ?G\<rbrakk> ?p =
      \<lbrakk>?E, ?F, ?G\<rbrakk> ?p",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 5),
                  template_app (template_hole 3, template_var 4))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 5),
                 template_var 1)),
             template_var 0),
           template_var 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 0),
           template_var 4)))),
    ("FOL_Axiomatic.cut",
     "[| ?p # ?ps \<turnstile> ?r; ?q # ?ps \<turnstile> ?p |]
      ==> ?q # ?ps \<turnstile> ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 3),
                    template_var 2)),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 0),
                    template_var 2)),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2)),
               template_var 1))
           ))),
    ("FOL_Axiomatic.consistent_Extend",
     "[| consistent ?S; finite (params ?S); infinite UNIV |]
      ==> consistent (Extend ?S ?f)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, t_empty), template_var 1)))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("FOL_Axiomatic.split_list",
     "?x : set ?A ==>
      set (?x # removeAll ?x ?A) = set ?A & ?x ~: set (removeAll ?x ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_app
                        (template_app (template_hole 1, template_var 1),
                         template_var 0)))),
                 template_app (template_hole 5, template_var 0))),
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0)))))
           ))),
    ("FOL_Axiomatic.consistent_extend",
     "[| consistent ?S; finite (params ?S); infinite UNIV |]
      ==> consistent (extend ?S ?f ?n)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, t_empty), template_var 2)))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("FOL_Axiomatic.UN_finite_bound",
     "[| finite ?A; ?A <= \<Union> (range ?f) |]
      ==> EX m. ?A <= \<Union> (?f ` {..m})",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, t_empty), template_hole 2)))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("FOL_Axiomatic.inconsistent_fm",
     "[| consistent ?S; ~ consistent ({?p} Un ?S);
         !!S'. [| set S' <= ?S; ?p # S' \<turnstile> \<^bold>\<bottom> |]
               ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 11,
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app
                       (template_app (template_hole 8, template_var 1),
                        template_hole 7)),
                    template_var 2))
                )
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("FOL_Axiomatic.inconsistent_head",
     "[| consistent ?S; maximal ?S; ?p ~: ?S;
         !!S'. [| set S' <= ?S; ?p # S' \<turnstile> \<^bold>\<bottom> |]
               ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate (template_app (template_hole 9, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 2)
                )
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("FOL_Axiomatic.consistent_witness",
     "[| consistent ?S; ?p : ?S; params ?S <= ?used; finite ?used;
         infinite UNIV |]
      ==> consistent (witness ?used ?p Un ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 2)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, t_empty), template_var 2)),
          template_var 0),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1)),
               template_var 2))
           ))),
    ("FOL_Axiomatic.GR'",
     "[| \<turnstile> \<^bold>\<not> ?p\<langle>\<^bold>\<star>
           ?a/0\<rangle> \<^bold>\<longrightarrow>
                      ?q;
         ?a ~: params {?p, ?q} |]
      ==> \<turnstile> \<^bold>\<not> \<^bold>\<forall>
 ?p \<^bold>\<longrightarrow>
                       ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 14,
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app
                     (template_hole 13,
                      template_app
                       (template_app
                         (template_app (template_hole 12, template_var 2),
                          template_app
                           (template_app (template_hole 11, template_var 1),
                            template_hole 10)),
                        template_hole 9)),
                    template_hole 8)),
                template_var 0))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, t_empty),
                      template_app
                       (template_app (template_hole 2, template_var 2),
                        template_app
                         (template_app (template_hole 2, template_var 0),
                          template_hole 1)))))
                )
            )],
       template_predicate
        (
           template_app
            (template_hole 14,
             template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app
                    (template_hole 13,
                     template_app (template_hole 0, template_var 2)),
                   template_hole 8)),
               template_var 0))
           ))),
    ("FOL_Axiomatic.consistent_add_witness",
     "[| consistent ?S; (\<^bold>\<not> \<^bold>\<forall> ?p) : ?S;
         ?a ~: params ?S |]
      ==> consistent
           ({\<^bold>\<not> ?p\<langle>\<^bold>\<star> ?a/0\<rangle>} Un
            ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app
                   (template_hole 14,
                    template_app (template_hole 13, template_var 1)),
                  template_hole 12)),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 0),
                  template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, t_empty),
                      template_var 2)))
                )
            )],
       template_predicate
        (
           template_app
            (template_hole 16,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_hole 14,
                         template_app
                          (template_app
                            (template_app (template_hole 4, template_var 1),
                             template_app
                              (template_app
                                (template_hole 3, template_var 0),
                               template_hole 2)),
                           template_hole 1)),
                       template_hole 12)),
                   template_hole 0)),
               template_var 2))
           ))),
    ("FOL_Axiomatic.imply_completeness",
     "[| ALL E F G.
            Ball ?X \<lbrakk>E, F, G\<rbrakk> -->
            \<lbrakk>E, F, G\<rbrakk> ?p;
         finite (params ?X); infinite UNIV |]
      ==> EX ps. set ps <= ?X & (ps \<turnstile> ?p)",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate
         (
            template_app
             (template_hole 11,
              template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, t_empty), template_var 1)))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 11, template_hole 6))
            )],
       template_predicate (template_app (template_hole 5, t_empty))))]
