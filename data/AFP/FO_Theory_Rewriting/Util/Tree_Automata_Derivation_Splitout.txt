Loading theory "Draft.Utils" (required by "Draft.Tree_Automata_Derivation_SplitTemplates" via "Draft.Tree_Automata_Derivation_Split" via "Draft.Ground_MCtxt" via "Draft.Multihole_Context")
Loading theory "Draft.Templates" (required by "Draft.Tree_Automata_Derivation_SplitTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.075s elapsed time, 0.183s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Tree_Automata_Derivation_SplitTemplates")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### Missing patterns in function definition:
### !!a. concat_index_split a [] = undefined
Found termination order: "(%p. size_list length (snd p)) <*mlex*> {}"
Proofs for inductive predicate(s) "trancl_listp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
[| !!x. ?P (Var x); !!f ts. (!!x. x : set ts ==> ?P x) ==> ?P (Fun f ts) |]
==> ?P ?a0.0
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.539s elapsed time, 1.114s cpu time, 0.088s GC time
### theory "Draft.Utils"
### 0.765s elapsed time, 1.439s cpu time, 0.088s GC time
Loading theory "Draft.Multihole_Context" (required by "Draft.Tree_Automata_Derivation_SplitTemplates" via "Draft.Tree_Automata_Derivation_Split" via "Draft.Ground_MCtxt")
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
consts
  mctxt_of_term :: "('f, 'v) Term.term => ('f, 'v) mctxt"
### No equation for constructor "MHole"
consts
  term_of_mctxt :: "('f, 'v) mctxt => ('f, 'v) Term.term"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### Missing patterns in function definition:
### fill_holes MHole [] = undefined
### !!v vb vc. fill_holes MHole (v # vb # vc) = undefined
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### Missing patterns in function definition:
### !!v vb vc. fill_holes_mctxt MHole (v # vb # vc) = undefined
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### Missing patterns in function definition:
### !!v va vb. unfill_holes (MVar v) (Fun va vb) = undefined
### !!v va vb. unfill_holes (MFun v va) (Var vb) = undefined
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Proofs for inductive predicate(s) "eq_fill"
  Proving monotonicity ...
instantiation
  mctxt :: (type, type) inf
  inf_mctxt == inf :: ('a, 'b) mctxt => ('a, 'b) mctxt => ('a, 'b) mctxt
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  mctxt :: (type, type) order
  less_eq_mctxt == less_eq :: ('a, 'b) mctxt => ('a, 'b) mctxt => bool
  less_mctxt == less :: ('a, 'b) mctxt => ('a, 'b) mctxt => bool
Proofs for inductive predicate(s) "less_eq_mctxt'"
  Proving monotonicity ...
### theory "Draft.Multihole_Context"
### 2.104s elapsed time, 2.613s cpu time, 0.676s GC time
Loading theory "Draft.Ground_MCtxt" (required by "Draft.Tree_Automata_Derivation_SplitTemplates" via "Draft.Tree_Automata_Derivation_Split")
consts
  gmctxt_of_gterm :: "'f gterm => 'f gmctxt"
Found termination order: "size <*mlex*> {}"
### No equation for constructor "GMHole"
consts
  gterm_of_gmctxt :: "'f gmctxt => 'f gterm"
### No equation for constructor "GMHole"
consts
  term_of_gmctxt :: "'f gmctxt => ('f, 'v) Term.term"
consts
  gmctxt_of_gctxt :: "'f gctxt => 'f gmctxt"
Found termination order: "size <*mlex*> {}"
### No equation for constructor "MVar"
consts
  gmctxt_of_mctxt :: "('f, 'v) mctxt => 'f gmctxt"
consts
  mctxt_of_gmctxt :: "'f gmctxt => ('f, 'v) mctxt"
Found termination order: "size <*mlex*> {}"
### Missing patterns in function definition:
### fill_gholes GMHole [] = undefined
### !!v vb vc. fill_gholes GMHole (v # vb # vc) = undefined
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### Missing patterns in function definition:
### !!v vb vc. fill_gholes_gmctxt GMHole (v # vb # vc) = undefined
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### Missing patterns in function definition:
### !!v va. ghole_num_bef_pos (v # va) GMHole = undefined
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
### Missing patterns in function definition:
### !!v va. ghole_num_at_pos (v # va) GMHole = undefined
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
### Missing patterns in function definition:
### !!v va. subgm_at GMHole (v # va) = undefined
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
instantiation
  gmctxt :: (type) inf
  inf_gmctxt == inf :: 'a gmctxt => 'a gmctxt => 'a gmctxt
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  gmctxt :: (type) sup
  sup_gmctxt == sup :: 'a gmctxt => 'a gmctxt => 'a gmctxt
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Proofs for inductive predicate(s) "less_eq_gmctxt"
  Proving monotonicity ...
Proofs for inductive predicate(s) "comp_gmctxtp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "eq_gfill"
  Proving monotonicity ...
### Ignoring duplicate rewrite rule:
### num_gholes ?y = 0 ==> gmctxt_of_gterm (gterm_of_gmctxt ?y) == ?y
instantiation
  gmctxt :: (type) order
  less_eq_gmctxt == less_eq :: 'a gmctxt => 'a gmctxt => bool
  less_gmctxt == less :: 'a gmctxt => 'a gmctxt => bool
### theory "Draft.Ground_MCtxt"
### 2.356s elapsed time, 2.623s cpu time, 0.336s GC time
Loading theory "Draft.Tree_Automata_Derivation_Split" (required by "Draft.Tree_Automata_Derivation_SplitTemplates")
locale derivation_split
  fixes A :: "('q, 'f) ta"
    and \<A> :: "('q, 'f) ta"
    and \<B> :: "('q, 'f) ta"
  assumes "derivation_split A \<A> \<B>"
### theory "Draft.Tree_Automata_Derivation_Split"
### 0.666s elapsed time, 1.165s cpu time, 0.705s GC time
Loading theory "Draft.Tree_Automata_Derivation_SplitTemplates"
val templateLemmas =
   [("Tree_Automata_Derivation_Split.ta_der'_target_mctxt_ground",
     "ground_mctxt (ta_der'_target_mctxt ?t)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Tree_Automata_Derivation_Split.ta_der'_target_args_vars_term_list_conv",
     "ta_der'_target_args ?t = vars_term_list ?t",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Tree_Automata_Derivation_Split.ta_der'_target_args_vars_term_conv",
     "vars_term ?t = set (ta_der'_target_args ?t)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Tree_Automata_Derivation_Split.ta_der'_target_mctxt_funas",
     "funas_mctxt (ta_der'_target_mctxt ?u) = funas_term ?u",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Tree_Automata_Derivation_Split.ta_der'_target_args_length",
     "num_holes (ta_der'_target_mctxt ?t) =
      length (ta_der'_target_args ?t)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Tree_Automata_Derivation_Split.ta_der'_inf_mctxt",
     "?t |\<in>| ta_der' ?\<A> ?s ==>
      fst (split_vars ?t) <= mctxt_of_term ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app (template_hole 0, template_var 0)))),
    ("Tree_Automata_Derivation_Split.ta_der'_source_args_length",
     "?t |\<in>| ta_der' ?\<A> ?s ==>
      num_holes (ta_der'_target_mctxt ?t) =
      length (ta_der'_source_args ?t ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 2)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Tree_Automata_Derivation_Split.ta_der'_mctxt_structure",
     "?t |\<in>| ta_der' ?\<A> ?s ==>
      ?s =
      fill_holes (ta_der'_target_mctxt ?t) (ta_der'_source_args ?t ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Tree_Automata_Derivation_Split.ta_der'_mctxt_structure",
     "?t |\<in>| ta_der' ?\<A> ?s ==>
      ?t =
      fill_holes (ta_der'_target_mctxt ?t)
       (map Var (ta_der'_target_args ?t))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_var 2,
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 2)),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 2)))))),
    ("Tree_Automata_Derivation_Split.ta_der'_ground_mctxt_structure",
     "?t |\<in>| ta_der' ?\<A> (term_of_gterm ?s) ==>
      ?t =
      fill_holes (ta_der'_target_mctxt ?t)
       (map Var (ta_der'_target_args ?t))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_app (template_hole 6, template_var 0)))
            )],
       template_equation
        (template_var 2,
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 2)),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 2)))))),
    ("Tree_Automata_Derivation_Split.ta_der'_source_args_term_of_gterm",
     "?t |\<in>| ta_der' ?\<A> (term_of_gterm ?s) ==>
      ALL u:set (ta_der'_source_args ?t (term_of_gterm ?s)). ground u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_app (template_hole 4, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app (template_hole 4, template_var 0)))),
             t_empty)
           ))),
    ("Tree_Automata_Derivation_Split.ta_der'_ground_mctxt_structure",
     "?t |\<in>| ta_der' ?\<A> (term_of_gterm ?s) ==>
      term_of_gterm ?s =
      fill_holes (ta_der'_target_mctxt ?t)
       (ta_der'_source_args ?t (term_of_gterm ?s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_app (template_hole 4, template_var 0)))
            )],
       template_equation
        (template_app (template_hole 4, template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app (template_hole 4, template_var 0)))))),
    ("Tree_Automata_Derivation_Split.ta_der'_source_args_ground",
     "[| ?t |\<in>| ta_der' ?\<A> ?s; ground ?s |]
      ==> ALL u:set (ta_der'_source_args ?t ?s). ground u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            ),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0))),
             t_empty)
           ))),
    ("Tree_Automata_Derivation_Split.ta_der'_ctxt_structure",
     "[| ?t |\<in>| ta_der' ?\<A> ?s; vars_term_list ?t = [?q] |]
      ==> ground_ctxt (ta_der'_ctxt ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1))
            ),
        template_equation
         (template_app (template_hole 5, template_var 3),
          template_app
           (template_app (template_hole 4, template_var 0),
            template_hole 3))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 3)))
           ))),
    ("Tree_Automata_Derivation_Split.ta_der'_ground_ctxt_structure",
     "[| ?t |\<in>| ta_der' ?\<A> (term_of_gterm ?s);
         vars_term_list ?t = [?q] |]
      ==> ground (ta_der'_source_ctxt_arg ?t (term_of_gterm ?s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app
               (template_app (template_hole 7, template_var 2),
                template_app (template_hole 6, template_var 1)))
            ),
        template_equation
         (template_app (template_hole 4, template_var 3),
          template_app
           (template_app (template_hole 3, template_var 0),
            template_hole 2))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_app (template_hole 6, template_var 1)))
           ))),
    ("Tree_Automata_Derivation_Split.ta_der'_poss_subt_at_ta_der'",
     "[| ?t |\<in>| ta_der' ?\<A> ?s; ?p : poss ?t |]
      ==> ?t |_ ?p |\<in>| ta_der' ?\<A> (?s |_ ?p)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Tree_Automata_Derivation_Split.ta_der'_ctxt_structure",
     "[| ?t |\<in>| ta_der' ?\<A> ?s; vars_term_list ?t = [?q] |]
      ==> ?q |\<in>| ta_der ?\<A> (ta_der'_source_ctxt_arg ?t ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1))
            ),
        template_equation
         (template_app (template_hole 5, template_var 3),
          template_app
           (template_app (template_hole 4, template_var 0),
            template_hole 3))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)))
           ))),
    ("Tree_Automata_Derivation_Split.ta_der'_varposs_to_ta_der",
     "[| ?t |\<in>| ta_der' ?\<A> ?s; ?p : varposs ?t |]
      ==> the_Var (?t |_ ?p) |\<in>| ta_der ?\<A> (?s |_ ?p)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)))
           ))),
    ("Tree_Automata_Derivation_Split.ta_der'_ctxt_structure",
     "[| ?t |\<in>| ta_der' ?\<A> ?s; vars_term_list ?t = [?q] |]
      ==> ?t = (ta_der'_ctxt ?t)\<langle>Var ?q\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1))
            ),
        template_equation
         (template_app (template_hole 7, template_var 3),
          template_app
           (template_app (template_hole 6, template_var 0),
            template_hole 5))],
       template_equation
        (template_var 3,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 3))),
           template_app (template_hole 0, template_var 0))))),
    ("Tree_Automata_Derivation_Split.ta_der'_mctxt_structure",
     "?t |\<in>| ta_der' ?\<A> ?s ==>
      num_holes (ta_der'_target_mctxt ?t) =
      length (ta_der'_source_args ?t ?s) &
      length (ta_der'_source_args ?t ?s) = length (ta_der'_target_args ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_app (template_hole 8, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_var 2))),
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 0)))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 0))),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2))))
           ))),
    ("Tree_Automata_Derivation_Split.ta_der'_ctxt_structure",
     "[| ?t |\<in>| ta_der' ?\<A> ?s; vars_term_list ?t = [?q] |]
      ==> ?s =
          (ta_der'_ctxt ?t)\<langle>ta_der'_source_ctxt_arg ?t ?s\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1))
            ),
        template_equation
         (template_app (template_hole 7, template_var 3),
          template_app
           (template_app (template_hole 6, template_var 0),
            template_hole 5))],
       template_equation
        (template_var 1,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 3))),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1))))),
    ("Tree_Automata_Derivation_Split.ta_der'_ground_ctxt_structure",
     "[| ?t |\<in>| ta_der' ?\<A> (term_of_gterm ?s);
         vars_term_list ?t = [?q] |]
      ==> ?q |\<in>|
          ta_der ?\<A> (ta_der'_source_ctxt_arg ?t (term_of_gterm ?s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_app (template_hole 7, template_var 1)))
            ),
        template_equation
         (template_app (template_hole 5, template_var 3),
          template_app
           (template_app (template_hole 4, template_var 0),
            template_hole 3))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_app (template_hole 7, template_var 1))))
           ))),
    ("Tree_Automata_Derivation_Split.ta_der'_ground_ctxt_structure",
     "[| ?t |\<in>| ta_der' ?\<A> (term_of_gterm ?s);
         vars_term_list ?t = [?q] |]
      ==> ?t = (ta_der'_ctxt ?t)\<langle>Var ?q\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app
               (template_app (template_hole 10, template_var 2),
                template_app (template_hole 9, template_var 1)))
            ),
        template_equation
         (template_app (template_hole 7, template_var 3),
          template_app
           (template_app (template_hole 6, template_var 0),
            template_hole 5))],
       template_equation
        (template_var 3,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 3))),
           template_app (template_hole 0, template_var 0))))),
    ("Tree_Automata_Derivation_Split.ta_der'_ground_ctxt_structure",
     "[| ?t |\<in>| ta_der' ?\<A> (term_of_gterm ?s);
         vars_term_list ?t = [?q] |]
      ==> ?s =
          (ta_der'_gctxt
            ?t)\<langle>ta_der'_source_gctxt_arg ?t ?s\<rangle>\<^sub>G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app
               (template_app (template_hole 10, template_var 2),
                template_app (template_hole 9, template_var 1)))
            ),
        template_equation
         (template_app (template_hole 7, template_var 3),
          template_app
           (template_app (template_hole 6, template_var 0),
            template_hole 5))],
       template_equation
        (template_var 1,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 3)),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_app (template_hole 9, template_var 1))))))),
    ("Tree_Automata_Derivation_Split.ta_der'_ground_mctxt_structure",
     "?t |\<in>| ta_der' ?\<A> (term_of_gterm ?s) ==>
      num_holes (ta_der'_target_mctxt ?t) =
      length (ta_der'_source_args ?t (term_of_gterm ?s)) &
      length (ta_der'_source_args ?t (term_of_gterm ?s)) =
      length (ta_der'_target_args ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app
               (template_app (template_hole 9, template_var 1),
                template_app (template_hole 8, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_var 2))),
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_app (template_hole 8, template_var 0))))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_app (template_hole 8, template_var 0)))),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2))))
           ))),
    ("Tree_Automata_Derivation_Split.ta_der'_mctxt_structure",
     "[| ?t |\<in>| ta_der' ?\<A> ?s;
         ?i < length (ta_der'_source_args ?t ?s) |]
      ==> ta_der'_target_args ?t ! ?i |\<in>|
          ta_der ?\<A> (ta_der'_source_args ?t ?s ! ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1))
            ),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 1)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 3)),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 5, template_var 3),
                     template_var 1)),
                 template_var 0)))
           ))),
    ("Tree_Automata_Derivation_Split.ta_der'_ground_mctxt_structure",
     "[| ?t |\<in>| ta_der' ?\<A> (term_of_gterm ?s);
         ?i < length (ta_der'_target_args ?t) |]
      ==> ta_der'_target_args ?t ! ?i |\<in>|
          ta_der ?\<A> (ta_der'_source_args ?t (term_of_gterm ?s) ! ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_app (template_hole 8, template_var 1)))
            ),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_hole 6,
            template_app (template_hole 5, template_var 3)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 5, template_var 3)),
                 template_var 0)),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_app (template_hole 8, template_var 1))),
                 template_var 0)))
           ))),
    ("Tree_Automata_Derivation_Split.mctxt_args_ta_der'",
     "[| num_holes ?C = length ?qs; num_holes ?C = length ?ss;
         ALL i<length ?ss. ?qs ! i |\<in>| ta_der ?\<A> (?ss ! i) |]
      ==> fill_holes ?C (map Var ?qs) |\<in>|
          ta_der' ?\<A> (fill_holes ?C ?ss)",
     template_implication
      ([template_equation
         (template_app (template_hole 14, template_var 3),
          template_app (template_hole 13, template_var 2)),
        template_equation
         (template_app (template_hole 14, template_var 3),
          template_app (template_hole 12, template_var 1)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 2))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 1)))
           )))]:
   (string * thm * template) list
### theory "Draft.Tree_Automata_Derivation_SplitTemplates"
### 0.657s elapsed time, 0.786s cpu time, 0.071s GC time
val it = (): unit
