   [("Multihole_Context.MHole_Bot", "MHole <= ?D",
     template_inequation (less_equals, template_hole 0, template_var 0)),
    ("Multihole_Context.less_eq_mctxt_intros", "MHole <= ?u",
     template_inequation (less_equals, template_hole 0, template_var 0)),
    ("Multihole_Context.split_vars_ground'",
     "ground_mctxt (fst (split_vars ?t))",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("Multihole_Context.inf_mctxt_MHole2", "?C \<sqinter> MHole = MHole",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Multihole_Context.inf_mctxt_idem", "?C \<sqinter> ?C = ?C",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("Multihole_Context.less_eq_mctxt_intros", "MVar ?v <= MVar ?v",
     template_inequation
      (less_equals, template_app (template_hole 0, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Multihole_Context.hole_poss_list_length",
     "length (hole_poss_list ?D) = num_holes ?D",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Multihole_Context.split_vars_vars_term_list",
     "snd (split_vars ?t) = vars_term_list ?t",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Multihole_Context.map_vars_mctxt_id",
     "map_vars_mctxt (%x. x) ?C = ?C",
     template_equation
      (template_app
        (template_app (template_hole 0, t_empty), template_var 0),
       template_var 0)),
    ("Multihole_Context.length_partition_by",
     "length (partition_by ?xs ?ys) = length ?ys",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Multihole_Context.split_vars_funas_mctxt",
     "funas_mctxt (fst (split_vars ?t)) = funas_term ?t",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Multihole_Context.less_eq_mctxt_prime",
     "(?C <= ?D) = less_eq_mctxt' ?C ?D",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Multihole_Context.hole_poss_split_vars_varposs_list",
     "hole_poss_list (fst (split_vars ?t)) = varposs_list ?t",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Multihole_Context.inf_mctxt_comm",
     "?C \<sqinter> ?D = ?D \<sqinter> ?C",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Multihole_Context.partition_by_Nil",
     "partition_by [] ?ys = replicate (length ?ys) []",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_hole 2))),
    ("Multihole_Context.split_vars_num_holes",
     "num_holes (fst (split_vars ?t)) = length (snd (split_vars ?t))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_hole 0,
           template_app (template_hole 2, template_var 0))))),
    ("Multihole_Context.hole_poss_split_varposs_list_length",
     "length (hole_poss_list (fst (split_vars ?t))) =
      length (varposs_list ?t)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)))),
       template_app
        (template_hole 4, template_app (template_hole 0, template_var 0)))),
    ("Multihole_Context.length_partition_holes",
     "length (partition_holes ?xs ?Cs) = length ?Cs",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Multihole_Context.inf_mctxt_assoc",
     "?C \<sqinter> ?D \<sqinter> ?E = ?C \<sqinter> (?D \<sqinter> ?E)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Multihole_Context.map_map_partition_by",
     "map (map ?f) (partition_by ?xs ?ys) = partition_by (map ?f ?xs) ?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Multihole_Context.fill_holes_term_of_mctxt",
     "num_holes ?C = 0 ==> fill_holes ?C [] = term_of_mctxt ?C",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0), template_hole 4)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Multihole_Context.eqfE",
     "?t =\<^sub>f (?D, ?ss) ==> num_holes ?D = length ?ss",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Multihole_Context.eqfE",
     "?t =\<^sub>f (?D, ?ss) ==> ?t = fill_holes ?D ?ss",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Multihole_Context.split_vars_eqf_subst",
     "?t \<cdot> ?\<sigma>
      =\<^sub>f (fst (split_vars ?t), map ?\<sigma> (snd (split_vars ?t)))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1))),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_hole 0,
                 template_app (template_hole 2, template_var 1)))))
         )),
    ("Multihole_Context.length_unfill_holes",
     "?C <= mctxt_of_term ?t ==>
      length (unfill_holes ?C ?t) = num_holes ?C",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Multihole_Context.fill_unfill_holes",
     "?C <= mctxt_of_term ?t ==> fill_holes ?C (unfill_holes ?C ?t) = ?t",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Multihole_Context.concat_partition_by",
     "sum_list ?ys = length ?xs ==> concat (partition_by ?xs ?ys) = ?xs",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 0))),
    ("Multihole_Context.unfill_holles_hole_poss_list_length",
     "?C <= mctxt_of_term ?t ==>
      length (unfill_holes ?C ?t) = length (hole_poss_list ?C)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 1))))),
    ("Multihole_Context.map_length_partition_by",
     "sum_list ?ys = length ?xs ==>
      map length (partition_by ?xs ?ys) = ?ys",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 3),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 1))),
    ("Multihole_Context.less_eq_mctxt_MHoleE2",
     "[| ?C <= MHole; ?C = MHole ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_hole 1),
        template_implication
         ([template_equation (template_var 1, template_hole 1)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Multihole_Context.split_vars_eqf_subst_map_vars_term",
     "?t \<cdot> ?\<sigma>
      =\<^sub>f (map_vars_mctxt ?vw (fst (split_vars ?t)),
                 map ?\<sigma> (snd (split_vars ?t)))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)))),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_hole 0,
                 template_app (template_hole 2, template_var 2)))))
         )),
    ("Multihole_Context.unfill_holes_to_subst_at_hole_poss",
     "?C <= mctxt_of_term ?t ==>
      unfill_holes ?C ?t = map ((|_) ?t) (hole_poss_list ?C)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 1))))),
    ("Multihole_Context.less_eq_mctxt_MVarE1",
     "[| MVar ?v <= ?D; ?D = MVar ?v ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 1, template_var 2),
          template_var 1),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 1, template_var 2))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Multihole_Context.partition_by_map0_append",
     "partition_by ?xs (map (%x. 0) ?ys @ ?zs) =
      replicate (length ?ys) [] @ partition_by ?xs ?zs",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 2),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, t_empty), template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_hole 0)),
         template_app
          (template_app (template_hole 7, template_var 2),
           template_var 0)))),
    ("Multihole_Context.partition_by_append2",
     "partition_by ?xs (?ys @ ?zs) =
      partition_by (take (sum_list ?ys) ?xs) ?ys @
      partition_by (drop (sum_list ?ys) ?xs) ?zs",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 template_var 2)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 1)),
               template_var 2)),
           template_var 0)))),
    ("Multihole_Context.ground_eq_fill",
     "?t =\<^sub>f (?C, ?ss) ==>
      ground ?t = (ground_mctxt ?C & (ALL s:set ?ss. ground s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             t_empty))))),
    ("Multihole_Context.fill_holes_MHole",
     "[| length ?ts = Suc 0; ?ts ! 0 = ?u |] ==> fill_holes MHole ?ts = ?u",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_hole 4)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1),
            template_hole 4),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 1),
         template_var 0))),
    ("Multihole_Context.partition_by_map_conv",
     "partition_by ?xs ?ys =
      map (%i. take (?ys ! i) (drop (sum_list (take i ?ys)) ?xs))
       [0..<length ?ys]",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 8, t_empty),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("Multihole_Context.funas_mctxt_fill_holes",
     "num_holes ?C = length ?ts ==>
      funas_term (fill_holes ?C ?ts) =
      funas_mctxt ?C Un \<Union> (set (map funas_term ?ts))",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 1),
          template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_hole 6),
                 template_var 0))))))),
    ("Multihole_Context.funas_mctxt_fill_holes_mctxt",
     "num_holes ?C = length ?Ds ==>
      funas_mctxt (fill_holes_mctxt ?C ?Ds) =
      funas_mctxt ?C Un \<Union> (set (map funas_mctxt ?Ds))",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 1),
          template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 5, template_var 1)),
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_hole 5),
                 template_var 0))))))),
    ("Multihole_Context.map_partition_by_nth",
     "?i < length ?ys ==>
      map ?f (partition_by ?xs ?ys ! ?i) =
      partition_by (map ?f ?xs) ?ys ! ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 6, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 2)),
             template_var 3)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 0)),
               template_var 2)),
           template_var 3)))),
    ("Multihole_Context.ground_fill_holes",
     "num_holes ?C = length ?ss ==>
      ground (fill_holes ?C ?ss) =
      (ground_mctxt ?C & (ALL s:set ?ss. ground s))",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 1),
          template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             t_empty))))),
    ("Multihole_Context.split_vars_ground_vars",
     "[| ground_mctxt ?C; num_holes ?C = length ?xs |]
      ==> split_vars (fill_holes ?C (map Var ?xs)) = (?C, ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_equation
         (template_app (template_hole 7, template_var 1),
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Multihole_Context.vars_term_fill_holes",
     "[| num_holes ?C = length ?ts; ground_mctxt ?C |]
      ==> vars_term (fill_holes ?C ?ts) = \<Union> (vars_term ` set ?ts)",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 1),
          template_app (template_hole 7, template_var 0)),
        template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 4),
             template_app (template_hole 0, template_var 0)))))),
    ("Multihole_Context.split_vars_fill_holes",
     "[| ?C = fst (split_vars ?s); ?ss = map Var (snd (split_vars ?s)) |]
      ==> fill_holes ?C ?ss = ?s",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_hole 7,
            template_app (template_hole 6, template_var 1))),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 4, template_hole 3),
            template_app
             (template_hole 2,
              template_app (template_hole 6, template_var 1))))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("Multihole_Context.partition_by_nth",
     "?i < length ?ys ==>
      partition_by ?xs ?ys ! ?i =
      take (?ys ! ?i) (drop (sum_list (take ?i ?ys)) ?xs)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 2)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1))),
             template_var 0))))),
    ("Multihole_Context.sum_list_partition_by",
     "sum_list ?ys = length ?xs ==>
      (SUM x<-partition_by ?xs ?ys. sum_list (map ?f x)) =
      sum_list (map ?f ?xs)",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 2),
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("Multihole_Context.partition_by_concat2",
     "partition_by ?xs (concat ?ys) =
      concat
       (map (%i. partition_by (partition_by ?xs (map sum_list ?ys) ! i)
                  (?ys ! i))
         [0..<length ?ys])",
     template_equation
      (template_app
        (template_app (template_hole 10, template_var 1),
         template_app (template_hole 9, template_var 0)),
       template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, t_empty),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0)))))),
    ("Multihole_Context.length_partition_by_nth",
     "[| sum_list ?ys = length ?xs; ?i < length ?ys |]
      ==> length (partition_by ?xs ?ys ! ?i) = ?ys ! ?i",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 2),
          template_app (template_hole 5, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2)),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Multihole_Context.less_eq_mctxt_MVarE2",
     "[| ?C <= MVar ?v; ?C = MHole ==> ?thesis; ?C = MVar ?v ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 2, template_var 1)),
        template_implication
         ([template_equation (template_var 2, template_hole 0)],
          template_predicate (template_var 0)),
        template_implication
         ([template_equation
            (template_var 2,
             template_app (template_hole 2, template_var 1))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Multihole_Context.partition_holes_fill_holes_conv",
     "fill_holes (MFun ?f ?cs) ?ts =
      Fun ?f
       (map (%i. fill_holes (?cs ! i) (partition_holes ?ts ?cs ! i))
         [0..<length ?cs])",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app (template_hole 10, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 9, template_var 2),
         template_app
          (template_app (template_hole 8, t_empty),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 1)))))),
    ("Multihole_Context.partition_holes_fill_holes_mctxt_conv",
     "fill_holes_mctxt (MFun ?f ?Cs) ?ts =
      MFun ?f
       (map (%i. fill_holes_mctxt (?Cs ! i) (partition_holes ?ts ?Cs ! i))
         [0..<length ?Cs])",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 9, template_var 2),
         template_app
          (template_app (template_hole 8, t_empty),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 1)))))),
    ("Multihole_Context.map_partition_holes_nth",
     "?i < length ?Cs ==>
      map ?f (partition_holes ?xs ?Cs ! ?i) =
      partition_holes (map ?f ?xs) ?Cs ! ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 8, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 2))),
             template_var 3)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 2))),
           template_var 3)))),
    ("Multihole_Context.UN_set_partition_by_map",
     "sum_list ?ys = length ?xs ==>
      (UN x:set (partition_by (map ?f ?xs) ?ys). \<Union> (set x)) =
      \<Union> (set (map ?f ?xs))",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 2),
          template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1)),
                 template_var 2)))),
         template_app
          (template_hole 5,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)))))),
    ("Multihole_Context.Ball_set_partition_by",
     "sum_list ?ys = length ?xs ==>
      (ALL x:set (partition_by ?xs ?ys). ALL y:set x. ?P y) =
      (ALL x:set ?xs. ?P x)",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 2),
          template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 2))),
           t_empty),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           t_empty)))),
    ("Multihole_Context.funas_term_fill_holes_iff",
     "num_holes ?C = length ?ts ==>
      (?g : funas_term (fill_holes ?C ?ts)) =
      (?g : funas_mctxt ?C | (EX t:set ?ts. ?g : funas_term t))",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 2),
          template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 0),
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 6, template_var 0),
               template_app (template_hole 2, template_var 2))),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             t_empty))))),
    ("Multihole_Context.Ball_atLeast0LessThan_partition_by_conv",
     "(ALL i:{0..<length ?ys}. ALL x:set (partition_by ?xs ?ys ! i). ?P x) =
      (ALL x:\<Union> (set (map set (partition_by ?xs ?ys))). ?P x)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_hole 8),
             template_app (template_hole 7, template_var 2))),
         t_empty),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_hole 5),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 2))))),
         t_empty))),
    ("Multihole_Context.length_partition_holes_nth",
     "[| sum_list (map num_holes ?cs) = length ?ts; ?i < length ?cs |]
      ==> length (partition_holes ?ts ?cs ! ?i) = num_holes (?cs ! ?i)",
     template_implication
      ([template_equation
         (template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 2)),
          template_app (template_hole 5, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_var 2))),
             template_var 0)),
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Multihole_Context.UN_set_partition_by",
     "sum_list ?ys = length ?xs ==>
      (UN zs:set (partition_by ?xs ?ys). \<Union> (?f ` set zs)) =
      \<Union> (?f ` set ?xs)",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 2),
          template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 3, t_empty),
             template_app (template_hole 2, template_var 1)))))),
    ("Multihole_Context.partition_by_nth_nth",
     "[| sum_list ?ys = length ?xs; ?i < length ?ys; ?j < ?ys ! ?i |]
      ==> partition_by_idx (length ?xs) ?ys ?i ?j < length ?xs",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 3),
          template_app (template_hole 4, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 2, template_var 3)),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 1, template_var 3),
            template_var 1))],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 4, template_var 2)),
               template_var 3),
             template_var 1),
           template_var 0),
         template_app (template_hole 4, template_var 2)))),
    ("Multihole_Context.partition_by_nth_nth_elem",
     "[| sum_list ?ys = length ?xs; ?i < length ?ys; ?j < ?ys ! ?i |]
      ==> partition_by ?xs ?ys ! ?i ! ?j : set ?xs",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 3),
          template_app (template_hole 8, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 6, template_var 3)),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 5, template_var 3),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 2),
                         template_var 3)),
                     template_var 1)),
                 template_var 0)),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Multihole_Context.partition_by_concat_id",
     "[| length ?xss = length ?ys;
         !!i. i < length ?ys ==> length (?xss ! i) = ?ys ! i |]
      ==> partition_by (concat ?xss) ?ys = ?xss",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 1),
          template_app (template_hole 8, template_var 0)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0),
         template_var 1))),
    ("Multihole_Context.less_eq_mctxt_intros",
     "[| length ?cs = length ?ds;
         !!i. i < length ?cs ==> ?cs ! i <= ?ds ! i |]
      ==> MFun ?f ?cs <= MFun ?f ?ds",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2),
          template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Multihole_Context.partition_by_partition_by",
     "length ?xs = sum_list (map sum_list ?ys) ==>
      partition_by (partition_by ?xs (concat ?ys)) (map length ?ys) =
      map (%i. partition_by (partition_by ?xs (map sum_list ?ys) ! i)
                (?ys ! i))
       [0..<length ?ys]",
     template_implication
      ([template_equation
         (template_app (template_hole 13, template_var 1),
          template_app
           (template_hole 12,
            template_app
             (template_app (template_hole 11, template_hole 12),
              template_var 0)))],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 1),
               template_app (template_hole 7, template_var 0))),
           template_app
            (template_app (template_hole 11, template_hole 6),
             template_var 0)),
         template_app
          (template_app (template_hole 5, t_empty),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0)))))),
    ("Multihole_Context.sum_list_take_eq",
     "[| ?k < ?i; ?i < length ?xs |]
      ==> sum_list (take ?i ?xs) =
          sum_list (take ?k ?xs) + ?xs ! ?k +
          sum_list (take (?i - Suc ?k) (drop (Suc ?k) ?xs))",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_var 0))),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 2))),
           template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_app (template_hole 1, template_var 2))),
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 1, template_var 2)),
                 template_var 0))))))),
    ("Multihole_Context.concat_nth",
     "[| ?m < length ?xs; ?n < length (?xs ! ?m);
         ?i = sum_list (map length (take ?m ?xs)) + ?n |]
      ==> concat ?xs ! ?i = ?xs ! ?m ! ?n",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 10, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app
           (template_hole 9,
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 3))),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_hole 9),
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2)))),
            template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 8, template_var 2),
               template_var 3)),
           template_var 1)))),
    ("Multihole_Context.partition_by_nth_nth",
     "[| sum_list ?ys = length ?xs; ?i < length ?ys; ?j < ?ys ! ?i |]
      ==> partition_by ?xs ?ys ! ?i ! ?j =
          ?xs ! partition_by_idx (length ?xs) ?ys ?i ?j",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 3),
          template_app (template_hole 8, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 6, template_var 3)),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 5, template_var 3),
            template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 3)),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 8, template_var 2)),
                 template_var 3),
               template_var 1),
             template_var 0))))),
    ("Multihole_Context.partition_by_nth_less",
     "[| ?k < ?i; ?i < length ?zs;
         length ?xs = sum_list (take ?i ?zs) + ?j |]
      ==> partition_by (?xs @ ?y # ?ys) ?zs ! ?k =
          take (?zs ! ?k) (drop (sum_list (take ?k ?zs)) ?xs)",
     template_implication
      ([template_inequation (less_than, template_var 6, template_var 5),
        template_inequation
         (less_than, template_var 5,
          template_app (template_hole 13, template_var 4)),
        template_equation
         (template_app (template_hole 11, template_var 3),
          template_app
           (template_app
             (template_hole 10,
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 5),
                  template_var 4))),
            template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_var 0))),
               template_var 4)),
           template_var 6),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 6)),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 6),
                   template_var 4))),
             template_var 3))))),
    ("Multihole_Context.less_eq_mctxt_MFunE1",
     "[| MFun ?f ?cs <= ?D;
         !!ds. [| ?D = MFun ?f ds; length ?cs = length ds;
                  !!i. i < length ?cs ==> ?cs ! i <= ds ! i |]
               ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 7, template_var 3), template_var 2),
          template_var 1),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("Multihole_Context.eqf_MFunI",
     "[| length ?sss = length ?Cs; length ?ts = length ?Cs;
         !!i. i < length ?Cs ==> ?ts ! i =\<^sub>f (?Cs ! i, ?sss ! i) |]
      ==> Fun ?f ?ts =\<^sub>f (MFun ?f ?Cs, concat ?sss)",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 3),
          template_app (template_hole 11, template_var 2)),
        template_equation
         (template_app (template_hole 10, template_var 1),
          template_app (template_hole 11, template_var 2)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 2)),
               template_app (template_hole 0, template_var 3)))
           ))),
    ("Multihole_Context.partition_by_nth_nth_old",
     "[| ?i < length (partition_by ?xs ?ys);
         ?j < length (partition_by ?xs ?ys ! ?i);
         sum_list ?ys = length ?xs |]
      ==> partition_by ?xs ?ys ! ?i ! ?j =
          ?xs !
          (sum_list (map length (take ?i (partition_by ?xs ?ys))) + ?j)",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app
           (template_hole 10,
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 1))),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_hole 8,
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_var 1)),
              template_var 3))),
        template_equation
         (template_app (template_hole 5, template_var 1),
          template_app (template_hole 8, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 9, template_var 2),
                   template_var 1)),
               template_var 3)),
           template_var 0),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 1, template_hole 8),
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_app
                      (template_app (template_hole 9, template_var 2),
                       template_var 1))))),
             template_var 0))))),
    ("Multihole_Context.less_eq_mctxt_MFunE2",
     "[| ?C <= MFun ?f ?ds; ?C = MHole ==> ?thesis;
         !!cs. [| ?C = MFun ?f cs; length cs = length ?ds;
                  !!i. i < length cs ==> cs ! i <= ?ds ! i |]
               ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app (template_hole 8, template_var 2),
            template_var 1)),
        template_implication
         ([template_equation (template_var 3, template_hole 6)],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Multihole_Context.partition_by_nth_greater",
     "[| ?i < ?k; ?k < length ?zs; ?j < ?zs ! ?i;
         length ?xs = sum_list (take ?i ?zs) + ?j |]
      ==> partition_by (?xs @ ?y # ?ys) ?zs ! ?k =
          take (?zs ! ?k) (drop (sum_list (take ?k ?zs) - 1) (?xs @ ?ys))",
     template_implication
      ([template_inequation (less_than, template_var 6, template_var 5),
        template_inequation
         (less_than, template_var 5,
          template_app (template_hole 15, template_var 4)),
        template_inequation
         (less_than, template_var 3,
          template_app
           (template_app (template_hole 14, template_var 4),
            template_var 6)),
        template_equation
         (template_app (template_hole 12, template_var 2),
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 6),
                  template_var 4))),
            template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_var 0))),
               template_var 4)),
           template_var 5),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 14, template_var 4),
               template_var 5)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_hole 10,
                     template_app
                      (template_app (template_hole 9, template_var 5),
                       template_var 4))),
                 template_hole 0)),
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 0)))))),
    ("Multihole_Context.fill_holes_MFun",
     "[| length ?Cs = length ?ts; length ?ss = length ?ts;
         !!i. i < length ?ts ==>
              num_holes (?Cs ! i) = length (?ss ! i) &
              fill_holes (?Cs ! i) (?ss ! i) = ?ts ! i |]
      ==> fill_holes (MFun ?f ?Cs) (concat ?ss) = Fun ?f ?ts",
     template_implication
      ([template_equation
         (template_app (template_hole 14, template_var 3),
          template_app (template_hole 13, template_var 2)),
        template_equation
         (template_app (template_hole 12, template_var 1),
          template_app (template_hole 13, template_var 2)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 3)),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Multihole_Context.eqf_MFunE",
     "[| ?s =\<^sub>f (MFun ?f ?Cs, ?ss);
         !!ts sss.
            [| ?s = Fun ?f ts; length ts = length ?Cs;
               length sss = length ?Cs;
               !!i. i < length ?Cs ==> ts ! i =\<^sub>f (?Cs ! i, sss ! i);
               ?ss = concat sss |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 4),
              template_app
               (template_app
                 (template_hole 16,
                  template_app
                   (template_app (template_hole 15, template_var 3),
                    template_var 2)),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate (template_var 0))),
    ("Multihole_Context.fill_holes_arbitrary",
     "[| length ?Cs = length ?ts; length ?ss = length ?ts;
         !!i. i < length ?ts ==>
              num_holes (?Cs ! i) = length (?ss ! i) &
              ?f (?Cs ! i) (?ss ! i) = ?ts ! i |]
      ==> map (%i. ?f (?Cs ! i) (partition_holes (concat ?ss) ?Cs ! i))
           [0..<length ?Cs] =
          ?ts",
     template_implication
      ([template_equation
         (template_app (template_hole 18, template_var 3),
          template_app (template_hole 17, template_var 2)),
        template_equation
         (template_app (template_hole 16, template_var 1),
          template_app (template_hole 17, template_var 2)),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 5, t_empty),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app (template_hole 18, template_var 3))),
         template_var 2))),
    ("Multihole_Context.fill_holes_induct",
     "[| num_holes ?C = length ?xs; !!x. ?P MHole [x]; !!v. ?P (MVar v) [];
         !!f Cs xs.
            [| sum_list (map num_holes Cs) = length xs;
               !!i. i < length Cs ==>
                    ?P (Cs ! i) (partition_holes xs Cs ! i) |]
            ==> ?P (MFun f Cs) (concat (partition_holes xs Cs)) |]
      ==> ?P ?C ?xs",
     template_implication
      ([template_equation
         (template_app (template_hole 20, template_var 2),
          template_app (template_hole 19, template_var 1)),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 0, template_var 2), template_var 1)
           ))),
    ("Multihole_Context.less_eq_mctxt_induct",
     "[| ?x1.0 <= ?x2.0; !!u. ?P MHole u; !!v. ?P (MVar v) (MVar v);
         !!cs ds f.
            [| length cs = length ds;
               !!i. i < length cs ==> cs ! i <= ds ! i;
               !!i. i < length cs ==> ?P (cs ! i) (ds ! i) |]
            ==> ?P (MFun f cs) (MFun f ds) |]
      ==> ?P ?x1.0 ?x2.0",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 0, template_var 2), template_var 1)
           ))),
    ("Multihole_Context.fill_holes_induct2",
     "[| num_holes ?C = length ?xs; num_holes ?C = length ?ys;
         !!x y. ?P MHole [x] [y]; !!v. ?P (MVar v) [] [];
         !!f Cs xs ys.
            [| sum_list (map num_holes Cs) = length xs;
               sum_list (map num_holes Cs) = length ys;
               !!i. i < length Cs ==>
                    ?P (Cs ! i) (partition_holes xs Cs ! i)
                     (partition_holes ys Cs ! i) |]
            ==> ?P (MFun f Cs) (concat (partition_holes xs Cs))
                 (concat (partition_holes ys Cs)) |]
      ==> ?P ?C ?xs ?ys",
     template_implication
      ([template_equation
         (template_app (template_hole 28, template_var 3),
          template_app (template_hole 27, template_var 2)),
        template_equation
         (template_app (template_hole 28, template_var 3),
          template_app (template_hole 26, template_var 1)),
        template_predicate (template_app (template_hole 25, t_empty)),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 16, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_var 0, template_var 3),
               template_var 2),
             template_var 1)
           )))]
