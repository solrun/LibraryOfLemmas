   [("Bot_Terms.finite_funas_bot_term", "finite (funas_bot_term ?t)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Bot_Terms.merge_terms_bot_rhs", "?s \<up> Bot = ?s",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Bot_Terms.merge_terms_idem", "?s \<up> ?s = ?s",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("Bot_Terms.bless_eq_refl", "?s \<le>\<^sub>b ?s",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 0)),
           template_hole 0)
         )),
    ("Bot_Terms.merge_refl", "(?s, ?s) : mergeP",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 0)),
           template_hole 0)
         )),
    ("Bot_Terms.funas_bot_term_funas_term",
     "funas_bot_term (?t\<^sup>\<bottom>) = funas_term ?t",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Bot_Terms.term_to_bot_term_root_bot",
     "root_bot (?t\<^sup>\<bottom>) = Term.root ?t",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Bot_Terms.merge_terms_commutative", "?s \<up> ?t = ?t \<up> ?s",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Bot_Terms.BFun_leq_Bot_False",
     "BFun ?f ?ts \<le>\<^sub>b Bot = False",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)),
             template_hole 2)),
         template_hole 1),
       template_hole 0)),
    ("Bot_Terms.bless_eq_mergeP",
     "?s \<le>\<^sub>b ?t ==> (?s, ?t) : mergeP",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("Bot_Terms.merge_symmetric", "(?s, ?t) : mergeP ==> (?t, ?s) : mergeP",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_hole 0)
           ))),
    ("Bot_Terms.instance_to_bless_eq",
     "?s \<cdot> ?\<sigma> = ?t ==>
      ?s\<^sup>\<bottom> \<le>\<^sub>b ?t\<^sup>\<bottom>",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)),
                 template_app (template_hole 1, template_var 0))),
             template_hole 0)
           ))),
    ("Bot_Terms.merge_bot_args_bless_eq_merge",
     "(?s, ?t) : mergeP ==> ?s \<le>\<^sub>b ?s \<up> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_hole 0)
           ))),
    ("Bot_Terms.bless_eq_anti_sym",
     "[| ?s \<le>\<^sub>b ?t; ?t \<le>\<^sub>b ?s |] ==> ?s = ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_var 1)),
              template_hole 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Bot_Terms.bless_eq_trans",
     "[| ?s \<le>\<^sub>b ?t; ?t \<le>\<^sub>b ?u |]
      ==> ?s \<le>\<^sub>b ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_hole 0)
           ))),
    ("Bot_Terms.bless_eq_to_instance",
     "[| ?s\<^sup>\<bottom> \<le>\<^sub>b ?t\<^sup>\<bottom>;
         linear_term ?s |]
      ==> EX \<sigma>. ?s \<cdot> \<sigma> = ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 1)),
                  template_app (template_hole 5, template_var 0))),
              template_hole 4)
            ),
        template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Bot_Terms.bless_eq_closued_under_supremum",
     "[| ?s \<le>\<^sub>b ?u; ?t \<le>\<^sub>b ?u |]
      ==> ?s \<up> ?t \<le>\<^sub>b ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_var 1)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)),
                 template_var 1)),
             template_hole 1)
           ))),
    ("Bot_Terms.merge_dist",
     "[| (?s, ?t \<up> ?u) : mergeP; (?t, ?u) : mergeP |]
      ==> (?s, ?t) : mergeP",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_app
                   (template_app (template_hole 1, template_var 1),
                    template_var 0))),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)),
             template_hole 0)
           ))),
    ("Bot_Terms.megeP_ass",
     "[| (?s, ?t \<up> ?u) : mergeP; (?t, ?u) : mergeP |]
      ==> (?s \<up> ?t, ?u) : mergeP",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_app
                   (template_app (template_hole 1, template_var 1),
                    template_var 0))),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1)),
                 template_var 0)),
             template_hole 0)
           ))),
    ("Bot_Terms.merge_terms_assoc",
     "[| (?s, ?t) : mergeP; (?t, ?u) : mergeP |]
      ==> (?s \<up> ?t) \<up> ?u = ?s \<up> ?t \<up> ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Bot_Terms.BFun_lesseqE",
     "[| BFun ?f ?ts \<le>\<^sub>b ?t;
         !!us. [| length ?ts = length us; ?t = BFun ?f us |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_hole 4)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Bot_Terms.bless_eq_closued_under_merge",
     "[| (?s, ?t) : mergeP; (?u, ?v) : mergeP; ?s \<le>\<^sub>b ?u;
         ?t \<le>\<^sub>b ?v |]
      ==> ?s \<up> ?t \<le>\<^sub>b ?u \<up> ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 1)),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 0)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_hole 1)
           ))),
    ("Bot_Terms.linear_term_comb_subst",
     "[| linear_term (Fun ?f ?ss); length ?ss = length ?ts;
         !!i. i < length ?ts ==> ?ss ! i \<cdot> ?\<sigma> i = ?ts ! i |]
      ==> EX \<sigma>. Fun ?f ?ss \<cdot> \<sigma> = Fun ?f ?ts",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 12,
              template_app
               (template_app (template_hole 11, template_var 3),
                template_var 2))
            ),
        template_equation
         (template_app (template_hole 9, template_var 2),
          template_app (template_hole 8, template_var 1)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty))))]
