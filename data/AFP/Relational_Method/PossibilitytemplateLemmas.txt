   [("Possibility.pwd_spy_i_unused",
     "?n : bad_prikey Int bad_id_shakey ==>
      EX A. PriKey A ~: used (fst (pwd_spy_i ?n))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 0),
              template_app
               (template_app
                 (template_hole 15,
                  template_app
                   (template_app (template_hole 14, template_hole 13),
                    template_hole 12)),
                template_app
                 (template_app (template_hole 15, template_hole 11),
                  template_app
                   (template_app (template_hole 14, template_hole 10),
                    template_hole 9))))
            )],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("Possibility.pwd_spy_ii_unused",
     "?n : bad_prikey Int bad_id_shakey ==>
      EX C. PriKey C ~: used (fst (pwd_spy_ii ?n))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 0),
              template_app
               (template_app
                 (template_hole 15,
                  template_app
                   (template_app (template_hole 14, template_hole 13),
                    template_hole 12)),
                template_app
                 (template_app (template_hole 15, template_hole 11),
                  template_app
                   (template_app (template_hole 14, template_hole 10),
                    template_hole 9))))
            )],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("Possibility.key_sets_crypts_subset",
     "[| ?U : key_sets ?X (crypts (Log -` spied ?H)); ?H <= ?H' |]
      ==> ?U : key_sets ?X (crypts (Log -` spied ?H'))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_app
                     (template_app (template_hole 4, template_var 1),
                      template_app
                       (template_app (template_hole 3, template_hole 2),
                        template_hole 1))))))
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 9, template_var 3),
             template_app
              (template_app (template_hole 8, template_var 2),
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_hole 1))))))
           ))),
    ("Possibility.prikey_unused_2",
     "[| ?s \<turnstile> ?s'; infinite {A. PriKey A ~: used ?s} |]
      ==> infinite {A. PriKey A ~: used ?s'}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_var 0)),
              template_hole 8)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 6, template_app (template_hole 5, t_empty))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 6, template_app (template_hole 5, t_empty))
               )
           ))),
    ("Possibility.pubkey_unused_1",
     "[| ?s \<turnstile> ?s';
         PubKey ?A : parts (used ?s) --> PriKey ?A : used ?s;
         PubKey ?A : parts (used ?s') |]
      ==> PriKey ?A : used ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_var 1)),
              template_hole 8)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app
                       (template_app (template_hole 5, template_hole 4),
                        template_hole 3),
                      template_var 0)),
                  template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 2)))),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app
                     (template_app (template_hole 5, template_hole 4),
                      template_hole 0),
                    template_var 0)),
                template_app (template_hole 1, template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_hole 3),
                  template_var 0)),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_hole 0),
                 template_var 0)),
             template_app (template_hole 1, template_var 1))
           ))),
    ("Possibility.pwd_spy_i_msg",
     "?n : bad_prikey Int bad_id_shakey ==>
      case pwd_spy_i ?n of
      (s, S, A, B, C, D) => pwd_spy_i_state ?n (S, A, B, C, D) <= s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 0),
              template_app
               (template_app
                 (template_hole 18,
                  template_app
                   (template_app (template_hole 17, template_hole 16),
                    template_hole 15)),
                template_app
                 (template_app (template_hole 18, template_hole 14),
                  template_app
                   (template_app (template_hole 17, template_hole 13),
                    template_hole 12))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 11, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Possibility.pwd_spy_id_pwd_msg",
     "?n : bad_prikey Int bad_id_shakey ==>
      case pwd_spy_id_pwd ?n of
      (s, S, A, B, C, D) => pwd_spy_id_pwd_state ?n (S, A, B, C, D) <= s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 0),
              template_app
               (template_app
                 (template_hole 23,
                  template_app
                   (template_app (template_hole 22, template_hole 21),
                    template_hole 20)),
                template_app
                 (template_app (template_hole 23, template_hole 19),
                  template_app
                   (template_app (template_hole 22, template_hole 18),
                    template_hole 17))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 16, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Possibility.pwd_owner_ii_msg",
     "?n : bad_prikey Int bad_id_shakey ==>
      case pwd_owner_ii ?n of
      (s, S, A, B, C, D) =>
        pwd_owner_ii_state ?n (S, A, B, C, D) <= s &
        {Key (Auth_ShaKey ?n)}
        : key_sets (PriKey S) (crypts (Log -` spied s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 36, template_var 0),
              template_app
               (template_app
                 (template_hole 35,
                  template_app
                   (template_app (template_hole 34, template_hole 33),
                    template_hole 32)),
                template_app
                 (template_app (template_hole 35, template_hole 31),
                  template_app
                   (template_app (template_hole 34, template_hole 30),
                    template_hole 29))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 28, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Possibility.pwd_owner_iii_msg",
     "?n : bad_prikey Int bad_id_shakey ==>
      case pwd_owner_iii ?n of
      (s, S, A, B, C, D) =>
        pwd_owner_iii_state ?n (S, A, B, C, D) <= s &
        {Key (Auth_ShaKey ?n)}
        : key_sets (PriKey S) (crypts (Log -` spied s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 36, template_var 0),
              template_app
               (template_app
                 (template_hole 35,
                  template_app
                   (template_app (template_hole 34, template_hole 33),
                    template_hole 32)),
                template_app
                 (template_app (template_hole 35, template_hole 31),
                  template_app
                   (template_app (template_hole 34, template_hole 30),
                    template_hole 29))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 28, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Possibility.pwd_owner_iv_msg",
     "?n : bad_prikey Int bad_id_shakey ==>
      case pwd_owner_iv ?n of
      (s, S, A, B, C, D) =>
        pwd_owner_iv_state ?n (S, A, B, C, D) <= s &
        {Key (Auth_ShaKey ?n)}
        : key_sets (PriKey S) (crypts (Log -` spied s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 36, template_var 0),
              template_app
               (template_app
                 (template_hole 35,
                  template_app
                   (template_app (template_hole 34, template_hole 33),
                    template_hole 32)),
                template_app
                 (template_app (template_hole 35, template_hole 31),
                  template_app
                   (template_app (template_hole 34, template_hole 30),
                    template_hole 29))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 28, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Possibility.pwd_spy_con_msg",
     "?n : bad_prikey Int bad_id_shakey ==>
      case pwd_spy_con ?n of
      (s, S, A, B, C, D) =>
        pwd_spy_con_state ?n (S, A, B, C, D) <= s &
        {Key (Auth_ShaKey ?n)}
        : key_sets (PriKey S) (crypts (Log -` spied s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 36, template_var 0),
              template_app
               (template_app
                 (template_hole 35,
                  template_app
                   (template_app (template_hole 34, template_hole 33),
                    template_hole 32)),
                template_app
                 (template_app (template_hole 35, template_hole 31),
                  template_app
                   (template_app (template_hole 34, template_hole 30),
                    template_hole 29))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 28, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Possibility.pwd_spy_enc_mult_msg",
     "?n : bad_prikey Int bad_id_shakey ==>
      case pwd_spy_enc_mult ?n of
      (s, S, A, B, C, D) =>
        pwd_spy_enc_mult_state ?n (S, A, B, C, D) <= s &
        {Key (Auth_ShaKey ?n)}
        : key_sets (PriKey S) (crypts (Log -` spied s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 36, template_var 0),
              template_app
               (template_app
                 (template_hole 35,
                  template_app
                   (template_app (template_hole 34, template_hole 33),
                    template_hole 32)),
                template_app
                 (template_app (template_hole 35, template_hole 31),
                  template_app
                   (template_app (template_hole 34, template_hole 30),
                    template_hole 29))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 28, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Possibility.pwd_spy_enc_pubk_msg",
     "?n : bad_prikey Int bad_id_shakey ==>
      case pwd_spy_enc_pubk ?n of
      (s, S, A, B, C, D) =>
        pwd_spy_enc_pubk_state ?n (S, A, B, C, D) <= s &
        {Key (Auth_ShaKey ?n)}
        : key_sets (PriKey S) (crypts (Log -` spied s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 36, template_var 0),
              template_app
               (template_app
                 (template_hole 35,
                  template_app
                   (template_app (template_hole 34, template_hole 33),
                    template_hole 32)),
                template_app
                 (template_app (template_hole 35, template_hole 31),
                  template_app
                   (template_app (template_hole 34, template_hole 30),
                    template_hole 29))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 28, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Possibility.pwd_spy_enc_sign_msg",
     "?n : bad_prikey Int bad_id_shakey ==>
      case pwd_spy_enc_sign ?n of
      (s, S, A, B, C, D) =>
        pwd_spy_enc_sign_state ?n (S, A, B, C, D) <= s &
        {Key (Auth_ShaKey ?n)}
        : key_sets (PriKey S) (crypts (Log -` spied s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 36, template_var 0),
              template_app
               (template_app
                 (template_hole 35,
                  template_app
                   (template_app (template_hole 34, template_hole 33),
                    template_hole 32)),
                template_app
                 (template_app (template_hole 35, template_hole 31),
                  template_app
                   (template_app (template_hole 34, template_hole 30),
                    template_hole 29))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 28, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Possibility.pwd_spy_ii_msg",
     "?n : bad_prikey Int bad_id_shakey ==>
      case pwd_spy_ii ?n of
      (s, S, A, B, C, D) =>
        pwd_spy_ii_state ?n (S, A, B, C, D) <= s &
        {Key (Auth_ShaKey ?n)}
        : key_sets (PriKey S) (crypts (Log -` spied s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 36, template_var 0),
              template_app
               (template_app
                 (template_hole 35,
                  template_app
                   (template_app (template_hole 34, template_hole 33),
                    template_hole 32)),
                template_app
                 (template_app (template_hole 35, template_hole 31),
                  template_app
                   (template_app (template_hole 34, template_hole 30),
                    template_hole 29))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 28, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Possibility.pwd_spy_iii_msg",
     "?n : bad_prikey Int bad_id_shakey ==>
      case pwd_spy_iii ?n of
      (s, S, A, B, C, D) =>
        pwd_spy_iii_state ?n (S, A, B, C, D) <= s &
        {Key (Auth_ShaKey ?n)}
        : key_sets (PriKey S) (crypts (Log -` spied s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 36, template_var 0),
              template_app
               (template_app
                 (template_hole 35,
                  template_app
                   (template_app (template_hole 34, template_hole 33),
                    template_hole 32)),
                template_app
                 (template_app (template_hole 35, template_hole 31),
                  template_app
                   (template_app (template_hole 34, template_hole 30),
                    template_hole 29))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 28, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Possibility.pwd_spy_iv_msg",
     "?n : bad_prikey Int bad_id_shakey ==>
      case pwd_spy_iv ?n of
      (s, S, A, B, C, D) =>
        pwd_spy_iv_state ?n (S, A, B, C, D) <= s &
        {Key (Auth_ShaKey ?n)}
        : key_sets (PriKey S) (crypts (Log -` spied s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 36, template_var 0),
              template_app
               (template_app
                 (template_hole 35,
                  template_app
                   (template_app (template_hole 34, template_hole 33),
                    template_hole 32)),
                template_app
                 (template_app (template_hole 35, template_hole 31),
                  template_app
                   (template_app (template_hole 34, template_hole 30),
                    template_hole 29))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 28, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Possibility.pwd_spy_mult_msg",
     "?n : bad_prikey Int bad_id_shakey ==>
      case pwd_spy_mult ?n of
      (s, S, A, B, C, D) =>
        pwd_spy_mult_state ?n (S, A, B, C, D) <= s &
        {Key (Auth_ShaKey ?n)}
        : key_sets (PriKey S) (crypts (Log -` spied s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 36, template_var 0),
              template_app
               (template_app
                 (template_hole 35,
                  template_app
                   (template_app (template_hole 34, template_hole 33),
                    template_hole 32)),
                template_app
                 (template_app (template_hole 35, template_hole 31),
                  template_app
                   (template_app (template_hole 34, template_hole 30),
                    template_hole 29))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 28, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Possibility.pwd_spy_sep_agr_msg",
     "?n : bad_prikey Int bad_id_shakey ==>
      case pwd_spy_sep_agr ?n of
      (s, S, A, B, C, D) =>
        pwd_spy_sep_agr_state ?n (S, A, B, C, D) <= s &
        {Key (Auth_ShaKey ?n)}
        : key_sets (PriKey S) (crypts (Log -` spied s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 36, template_var 0),
              template_app
               (template_app
                 (template_hole 35,
                  template_app
                   (template_app (template_hole 34, template_hole 33),
                    template_hole 32)),
                template_app
                 (template_app (template_hole 35, template_hole 31),
                  template_app
                   (template_app (template_hole 34, template_hole 30),
                    template_hole 29))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 28, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Possibility.pwd_spy_sep_map_msg",
     "?n : bad_prikey Int bad_id_shakey ==>
      case pwd_spy_sep_map ?n of
      (s, S, A, B, C, D) =>
        pwd_spy_sep_map_state ?n (S, A, B, C, D) <= s &
        {Key (Auth_ShaKey ?n)}
        : key_sets (PriKey S) (crypts (Log -` spied s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 36, template_var 0),
              template_app
               (template_app
                 (template_hole 35,
                  template_app
                   (template_app (template_hole 34, template_hole 33),
                    template_hole 32)),
                template_app
                 (template_app (template_hole 35, template_hole 31),
                  template_app
                   (template_app (template_hole 34, template_hole 30),
                    template_hole 29))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 28, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Possibility.pwd_spy_sesk_msg",
     "?n : bad_prikey Int bad_id_shakey ==>
      case pwd_spy_sesk ?n of
      (s, S, A, B, C, D) =>
        pwd_spy_sesk_state ?n (S, A, B, C, D) <= s &
        {Key (Auth_ShaKey ?n)}
        : key_sets (PriKey S) (crypts (Log -` spied s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 36, template_var 0),
              template_app
               (template_app
                 (template_hole 35,
                  template_app
                   (template_app (template_hole 34, template_hole 33),
                    template_hole 32)),
                template_app
                 (template_app (template_hole 35, template_hole 31),
                  template_app
                   (template_app (template_hole 34, template_hole 30),
                    template_hole 29))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 28, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Possibility.pwd_spy_id_prik_msg",
     "?n : bad_prikey Int bad_id_shakey ==>
      let (s, S, A, B, C, D) = pwd_spy_id_prik ?n;
          SK = (Some S, {A, B}, {C, D})
      in pwd_spy_id_prik_state ?n (S, A, B, C, D) <= s &
         {SesKey SK} : key_sets (Pwd ?n) (crypts (Log -` spied s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 42, template_var 0),
              template_app
               (template_app
                 (template_hole 41,
                  template_app
                   (template_app (template_hole 40, template_hole 39),
                    template_hole 38)),
                template_app
                 (template_app (template_hole 41, template_hole 37),
                  template_app
                   (template_app (template_hole 40, template_hole 36),
                    template_hole 35))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 34,
               template_app (template_hole 33, template_var 0)),
             template_app (template_hole 32, t_empty))
           ))),
    ("Possibility.pwd_spy_id_pubk_msg",
     "?n : bad_prikey Int bad_id_shakey ==>
      let (s, S, A, B, C, D) = pwd_spy_id_pubk ?n;
          SK = (Some S, {A, B}, {C, D})
      in pwd_spy_id_pubk_state ?n (S, A, B, C, D) <= s &
         {SesKey SK} : key_sets (Pwd ?n) (crypts (Log -` spied s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 42, template_var 0),
              template_app
               (template_app
                 (template_hole 41,
                  template_app
                   (template_app (template_hole 40, template_hole 39),
                    template_hole 38)),
                template_app
                 (template_app (template_hole 41, template_hole 37),
                  template_app
                   (template_app (template_hole 40, template_hole 36),
                    template_hole 35))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 34,
               template_app (template_hole 33, template_var 0)),
             template_app (template_hole 32, t_empty))
           ))),
    ("Possibility.pwd_spy_id_sesk_msg",
     "?n : bad_prikey Int bad_id_shakey ==>
      let (s, S, A, B, C, D) = pwd_spy_id_sesk ?n;
          SK = (Some S, {A, B}, {C, D})
      in pwd_spy_id_sesk_state ?n (S, A, B, C, D) <= s &
         {SesKey SK} : key_sets (Pwd ?n) (crypts (Log -` spied s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 42, template_var 0),
              template_app
               (template_app
                 (template_hole 41,
                  template_app
                   (template_app (template_hole 40, template_hole 39),
                    template_hole 38)),
                template_app
                 (template_app (template_hole 41, template_hole 37),
                  template_app
                   (template_app (template_hole 40, template_hole 36),
                    template_hole 35))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 34,
               template_app (template_hole 33, template_var 0)),
             template_app (template_hole 32, t_empty))
           ))),
    ("Possibility.pwd_owner_v_msg",
     "?n : bad_prikey Int bad_id_shakey ==>
      let (s, S, A, B, C, D) = pwd_owner_v ?n; SK = (Some S, {A, B}, {C, D})
      in pwd_owner_v_state ?n (S, A, B, C, D) <= s &
         {Key (Auth_ShaKey ?n)}
         : key_sets (PriKey S) (crypts (Log -` spied s)) &
         {SesKey SK} : key_sets (Pwd ?n) (crypts (Log -` spied s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 46, template_var 0),
              template_app
               (template_app
                 (template_hole 45,
                  template_app
                   (template_app (template_hole 44, template_hole 43),
                    template_hole 42)),
                template_app
                 (template_app (template_hole 45, template_hole 41),
                  template_app
                   (template_app (template_hole 44, template_hole 40),
                    template_hole 39))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 38,
               template_app (template_hole 37, template_var 0)),
             template_app (template_hole 36, t_empty))
           ))),
    ("Possibility.pwd_owner_ii_ex",
     "?n : bad_prikey Int bad_id_shakey ==>
      pred_owner_ii ?n (pwd_spy_i ?n) (pwd_owner_ii ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 45, template_var 0),
              template_app
               (template_app
                 (template_hole 44,
                  template_app
                   (template_app (template_hole 43, template_hole 42),
                    template_hole 41)),
                template_app
                 (template_app (template_hole 44, template_hole 40),
                  template_app
                   (template_app (template_hole 43, template_hole 39),
                    template_hole 38))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 37, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Possibility.pwd_spy_dec_msg",
     "?n : bad_prikey Int bad_id_shakey ==>
      let (s, S, A, B, C, D) = pwd_spy_dec ?n; SK = (Some S, {A, B}, {C, D})
      in pwd_spy_dec_state ?n (S, A, B, C, D) <= s &
         {Key (Auth_ShaKey ?n)}
         : key_sets (PriKey S) (crypts (Log -` spied s)) &
         {SesKey SK} : key_sets (Pwd ?n) (crypts (Log -` spied s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 48, template_var 0),
              template_app
               (template_app
                 (template_hole 47,
                  template_app
                   (template_app (template_hole 46, template_hole 45),
                    template_hole 44)),
                template_app
                 (template_app (template_hole 47, template_hole 43),
                  template_app
                   (template_app (template_hole 46, template_hole 42),
                    template_hole 41))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 40,
               template_app (template_hole 39, template_var 0)),
             template_app (template_hole 38, t_empty))
           ))),
    ("Possibility.pwd_owner_iii_ex",
     "?n : bad_prikey Int bad_id_shakey ==>
      pred_owner_iii ?n (pwd_spy_ii ?n) (pwd_owner_iii ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 47, template_var 0),
              template_app
               (template_app
                 (template_hole 46,
                  template_app
                   (template_app (template_hole 45, template_hole 44),
                    template_hole 43)),
                template_app
                 (template_app (template_hole 46, template_hole 42),
                  template_app
                   (template_app (template_hole 45, template_hole 41),
                    template_hole 40))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 39, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Possibility.run_asset_i_rel",
     "s\<^sub>0 \<Turnstile> ?s ==>
      ?s \<Turnstile> fst (run_asset_i ?n ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 46,
                template_app
                 (template_app
                   (template_hole 45,
                    template_app
                     (template_app
                       (template_hole 44,
                        template_app
                         (template_app (template_hole 43, t_empty),
                          template_hole 35)),
                      template_app
                       (template_app
                         (template_hole 34,
                          template_app
                           (template_app
                             (template_hole 33, template_hole 32),
                            template_hole 31)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 3, template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 46,
               template_app
                (template_app (template_hole 45, template_var 1),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1)))),
             template_app (template_hole 3, template_hole 2))
           ))),
    ("Possibility.run_asset_ii_rel",
     "s\<^sub>0 \<Turnstile> ?s ==>
      ?s \<Turnstile> fst (run_asset_ii ?n ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 46,
                template_app
                 (template_app
                   (template_hole 45,
                    template_app
                     (template_app
                       (template_hole 44,
                        template_app
                         (template_app (template_hole 43, t_empty),
                          template_hole 35)),
                      template_app
                       (template_app
                         (template_hole 34,
                          template_app
                           (template_app
                             (template_hole 33, template_hole 32),
                            template_hole 31)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 3, template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 46,
               template_app
                (template_app (template_hole 45, template_var 1),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1)))),
             template_app (template_hole 3, template_hole 2))
           ))),
    ("Possibility.run_asset_iii_rel",
     "s\<^sub>0 \<Turnstile> ?s ==>
      ?s \<Turnstile> fst (run_asset_iii ?n ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 46,
                template_app
                 (template_app
                   (template_hole 45,
                    template_app
                     (template_app
                       (template_hole 44,
                        template_app
                         (template_app (template_hole 43, t_empty),
                          template_hole 35)),
                      template_app
                       (template_app
                         (template_hole 34,
                          template_app
                           (template_app
                             (template_hole 33, template_hole 32),
                            template_hole 31)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 3, template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 46,
               template_app
                (template_app (template_hole 45, template_var 1),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1)))),
             template_app (template_hole 3, template_hole 2))
           ))),
    ("Possibility.run_asset_iv_rel",
     "s\<^sub>0 \<Turnstile> ?s ==>
      ?s \<Turnstile> fst (run_asset_iv ?n ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 46,
                template_app
                 (template_app
                   (template_hole 45,
                    template_app
                     (template_app
                       (template_hole 44,
                        template_app
                         (template_app (template_hole 43, t_empty),
                          template_hole 35)),
                      template_app
                       (template_app
                         (template_hole 34,
                          template_app
                           (template_app
                             (template_hole 33, template_hole 32),
                            template_hole 31)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 3, template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 46,
               template_app
                (template_app (template_hole 45, template_var 1),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1)))),
             template_app (template_hole 3, template_hole 2))
           ))),
    ("Possibility.run_asset_v_rel",
     "s\<^sub>0 \<Turnstile> ?s ==>
      ?s \<Turnstile> fst (run_asset_v ?n ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 46,
                template_app
                 (template_app
                   (template_hole 45,
                    template_app
                     (template_app
                       (template_hole 44,
                        template_app
                         (template_app (template_hole 43, t_empty),
                          template_hole 35)),
                      template_app
                       (template_app
                         (template_hole 34,
                          template_app
                           (template_app
                             (template_hole 33, template_hole 32),
                            template_hole 31)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 3, template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 46,
               template_app
                (template_app (template_hole 45, template_var 1),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1)))),
             template_app (template_hole 3, template_hole 2))
           ))),
    ("Possibility.run_owner_ii_rel",
     "s\<^sub>0 \<Turnstile> ?s ==>
      ?s \<Turnstile> fst (run_owner_ii ?n ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 46,
                template_app
                 (template_app
                   (template_hole 45,
                    template_app
                     (template_app
                       (template_hole 44,
                        template_app
                         (template_app (template_hole 43, t_empty),
                          template_hole 35)),
                      template_app
                       (template_app
                         (template_hole 34,
                          template_app
                           (template_app
                             (template_hole 33, template_hole 32),
                            template_hole 31)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 3, template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 46,
               template_app
                (template_app (template_hole 45, template_var 1),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1)))),
             template_app (template_hole 3, template_hole 2))
           ))),
    ("Possibility.run_owner_iii_rel",
     "s\<^sub>0 \<Turnstile> ?s ==>
      ?s \<Turnstile> fst (run_owner_iii ?n ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 46,
                template_app
                 (template_app
                   (template_hole 45,
                    template_app
                     (template_app
                       (template_hole 44,
                        template_app
                         (template_app (template_hole 43, t_empty),
                          template_hole 35)),
                      template_app
                       (template_app
                         (template_hole 34,
                          template_app
                           (template_app
                             (template_hole 33, template_hole 32),
                            template_hole 31)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 3, template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 46,
               template_app
                (template_app (template_hole 45, template_var 1),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1)))),
             template_app (template_hole 3, template_hole 2))
           ))),
    ("Possibility.run_owner_iv_rel",
     "s\<^sub>0 \<Turnstile> ?s ==>
      ?s \<Turnstile> fst (run_owner_iv ?n ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 46,
                template_app
                 (template_app
                   (template_hole 45,
                    template_app
                     (template_app
                       (template_hole 44,
                        template_app
                         (template_app (template_hole 43, t_empty),
                          template_hole 35)),
                      template_app
                       (template_app
                         (template_hole 34,
                          template_app
                           (template_app
                             (template_hole 33, template_hole 32),
                            template_hole 31)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 3, template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 46,
               template_app
                (template_app (template_hole 45, template_var 1),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1)))),
             template_app (template_hole 3, template_hole 2))
           ))),
    ("Possibility.run_owner_v_rel",
     "s\<^sub>0 \<Turnstile> ?s ==>
      ?s \<Turnstile> fst (run_owner_v ?n ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 46,
                template_app
                 (template_app
                   (template_hole 45,
                    template_app
                     (template_app
                       (template_hole 44,
                        template_app
                         (template_app (template_hole 43, t_empty),
                          template_hole 35)),
                      template_app
                       (template_app
                         (template_hole 34,
                          template_app
                           (template_app
                             (template_hole 33, template_hole 32),
                            template_hole 31)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 3, template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 46,
               template_app
                (template_app (template_hole 45, template_var 1),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1)))),
             template_app (template_hole 3, template_hole 2))
           ))),
    ("Possibility.prikey_unused",
     "s\<^sub>0 \<Turnstile> ?s ==> EX A. PriKey A ~: used ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 48,
                template_app
                 (template_app
                   (template_hole 47,
                    template_app
                     (template_app
                       (template_hole 46,
                        template_app
                         (template_app (template_hole 45, t_empty),
                          template_hole 37)),
                      template_app
                       (template_app
                         (template_hole 36,
                          template_app
                           (template_app
                             (template_hole 35, template_hole 34),
                            template_hole 33)),
                        t_empty))),
                  template_var 0)),
              template_app (template_hole 5, template_hole 4))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Possibility.run_asset_i_nonce",
     "s\<^sub>0 \<Turnstile> ?s ==>
      PriKey (fst (snd (run_asset_i ?n ?s))) ~: used ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 50,
                template_app
                 (template_app
                   (template_hole 49,
                    template_app
                     (template_app
                       (template_hole 48,
                        template_app
                         (template_app (template_hole 47, t_empty),
                          template_hole 39)),
                      template_app
                       (template_app
                         (template_hole 38,
                          template_app
                           (template_app
                             (template_hole 37, template_hole 36),
                            template_hole 35)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 7, template_hole 6))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app (template_hole 43, template_hole 42),
                       template_hole 41),
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 0),
                           template_var 1))))),
                 template_app (template_hole 0, template_var 1))
               )
           ))),
    ("Possibility.run_asset_ii_nonce",
     "s\<^sub>0 \<Turnstile> ?s ==>
      PriKey (fst (snd (run_asset_ii ?n ?s))) ~: used ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 50,
                template_app
                 (template_app
                   (template_hole 49,
                    template_app
                     (template_app
                       (template_hole 48,
                        template_app
                         (template_app (template_hole 47, t_empty),
                          template_hole 39)),
                      template_app
                       (template_app
                         (template_hole 38,
                          template_app
                           (template_app
                             (template_hole 37, template_hole 36),
                            template_hole 35)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 7, template_hole 6))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app (template_hole 43, template_hole 42),
                       template_hole 41),
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 0),
                           template_var 1))))),
                 template_app (template_hole 0, template_var 1))
               )
           ))),
    ("Possibility.run_asset_iii_nonce",
     "s\<^sub>0 \<Turnstile> ?s ==>
      PriKey (fst (snd (run_asset_iii ?n ?s))) ~: used ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 50,
                template_app
                 (template_app
                   (template_hole 49,
                    template_app
                     (template_app
                       (template_hole 48,
                        template_app
                         (template_app (template_hole 47, t_empty),
                          template_hole 39)),
                      template_app
                       (template_app
                         (template_hole 38,
                          template_app
                           (template_app
                             (template_hole 37, template_hole 36),
                            template_hole 35)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 7, template_hole 6))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app (template_hole 43, template_hole 42),
                       template_hole 41),
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 0),
                           template_var 1))))),
                 template_app (template_hole 0, template_var 1))
               )
           ))),
    ("Possibility.run_asset_iv_nonce",
     "s\<^sub>0 \<Turnstile> ?s ==>
      PriKey (fst (snd (run_asset_iv ?n ?s))) ~: used ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 50,
                template_app
                 (template_app
                   (template_hole 49,
                    template_app
                     (template_app
                       (template_hole 48,
                        template_app
                         (template_app (template_hole 47, t_empty),
                          template_hole 39)),
                      template_app
                       (template_app
                         (template_hole 38,
                          template_app
                           (template_app
                             (template_hole 37, template_hole 36),
                            template_hole 35)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 7, template_hole 6))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app (template_hole 43, template_hole 42),
                       template_hole 41),
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 0),
                           template_var 1))))),
                 template_app (template_hole 0, template_var 1))
               )
           ))),
    ("Possibility.run_asset_v_nonce",
     "s\<^sub>0 \<Turnstile> ?s ==>
      PriKey (fst (snd (run_asset_v ?n ?s))) ~: used ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 50,
                template_app
                 (template_app
                   (template_hole 49,
                    template_app
                     (template_app
                       (template_hole 48,
                        template_app
                         (template_app (template_hole 47, t_empty),
                          template_hole 39)),
                      template_app
                       (template_app
                         (template_hole 38,
                          template_app
                           (template_app
                             (template_hole 37, template_hole 36),
                            template_hole 35)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 7, template_hole 6))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app (template_hole 43, template_hole 42),
                       template_hole 41),
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 0),
                           template_var 1))))),
                 template_app (template_hole 0, template_var 1))
               )
           ))),
    ("Possibility.run_owner_ii_nonce",
     "s\<^sub>0 \<Turnstile> ?s ==>
      PriKey (fst (snd (run_owner_ii ?n ?s))) ~: used ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 50,
                template_app
                 (template_app
                   (template_hole 49,
                    template_app
                     (template_app
                       (template_hole 48,
                        template_app
                         (template_app (template_hole 47, t_empty),
                          template_hole 39)),
                      template_app
                       (template_app
                         (template_hole 38,
                          template_app
                           (template_app
                             (template_hole 37, template_hole 36),
                            template_hole 35)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 7, template_hole 6))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app (template_hole 43, template_hole 42),
                       template_hole 41),
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 0),
                           template_var 1))))),
                 template_app (template_hole 0, template_var 1))
               )
           ))),
    ("Possibility.run_owner_iii_nonce",
     "s\<^sub>0 \<Turnstile> ?s ==>
      PriKey (fst (snd (run_owner_iii ?n ?s))) ~: used ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 50,
                template_app
                 (template_app
                   (template_hole 49,
                    template_app
                     (template_app
                       (template_hole 48,
                        template_app
                         (template_app (template_hole 47, t_empty),
                          template_hole 39)),
                      template_app
                       (template_app
                         (template_hole 38,
                          template_app
                           (template_app
                             (template_hole 37, template_hole 36),
                            template_hole 35)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 7, template_hole 6))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app (template_hole 43, template_hole 42),
                       template_hole 41),
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 0),
                           template_var 1))))),
                 template_app (template_hole 0, template_var 1))
               )
           ))),
    ("Possibility.run_owner_iv_nonce",
     "s\<^sub>0 \<Turnstile> ?s ==>
      PriKey (fst (snd (run_owner_iv ?n ?s))) ~: used ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 50,
                template_app
                 (template_app
                   (template_hole 49,
                    template_app
                     (template_app
                       (template_hole 48,
                        template_app
                         (template_app (template_hole 47, t_empty),
                          template_hole 39)),
                      template_app
                       (template_app
                         (template_hole 38,
                          template_app
                           (template_app
                             (template_hole 37, template_hole 36),
                            template_hole 35)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 7, template_hole 6))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app (template_hole 43, template_hole 42),
                       template_hole 41),
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 0),
                           template_var 1))))),
                 template_app (template_hole 0, template_var 1))
               )
           ))),
    ("Possibility.run_owner_v_nonce",
     "s\<^sub>0 \<Turnstile> ?s ==>
      PriKey (fst (snd (run_owner_v ?n ?s))) ~: used ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 50,
                template_app
                 (template_app
                   (template_hole 49,
                    template_app
                     (template_app
                       (template_hole 48,
                        template_app
                         (template_app (template_hole 47, t_empty),
                          template_hole 39)),
                      template_app
                       (template_app
                         (template_hole 38,
                          template_app
                           (template_app
                             (template_hole 37, template_hole 36),
                            template_hole 35)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 7, template_hole 6))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app (template_hole 43, template_hole 42),
                       template_hole 41),
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 0),
                           template_var 1))))),
                 template_app (template_hole 0, template_var 1))
               )
           ))),
    ("Possibility.pwd_owner_ii_rel",
     "?n : bad_prikey Int bad_id_shakey ==>
      s\<^sub>0 \<Turnstile> fst (pwd_owner_ii ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 47, template_var 0),
              template_app
               (template_app
                 (template_hole 46,
                  template_app
                   (template_app (template_hole 45, template_hole 44),
                    template_hole 43)),
                template_app
                 (template_app (template_hole 46, template_hole 42),
                  template_app
                   (template_app (template_hole 45, template_hole 41),
                    template_hole 40))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 39,
               template_app
                (template_app
                  (template_hole 38,
                   template_app
                    (template_app
                      (template_hole 37,
                       template_app
                        (template_app (template_hole 36, t_empty),
                         template_hole 29)),
                     template_app
                      (template_app
                        (template_hole 28,
                         template_app
                          (template_app
                            (template_hole 27, template_hole 26),
                           template_hole 25)),
                       t_empty))),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Possibility.pwd_owner_iii_rel",
     "?n : bad_prikey Int bad_id_shakey ==>
      s\<^sub>0 \<Turnstile> fst (pwd_owner_iii ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 47, template_var 0),
              template_app
               (template_app
                 (template_hole 46,
                  template_app
                   (template_app (template_hole 45, template_hole 44),
                    template_hole 43)),
                template_app
                 (template_app (template_hole 46, template_hole 42),
                  template_app
                   (template_app (template_hole 45, template_hole 41),
                    template_hole 40))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 39,
               template_app
                (template_app
                  (template_hole 38,
                   template_app
                    (template_app
                      (template_hole 37,
                       template_app
                        (template_app (template_hole 36, t_empty),
                         template_hole 29)),
                     template_app
                      (template_app
                        (template_hole 28,
                         template_app
                          (template_app
                            (template_hole 27, template_hole 26),
                           template_hole 25)),
                       t_empty))),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Possibility.pwd_owner_iv_rel",
     "?n : bad_prikey Int bad_id_shakey ==>
      s\<^sub>0 \<Turnstile> fst (pwd_owner_iv ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 47, template_var 0),
              template_app
               (template_app
                 (template_hole 46,
                  template_app
                   (template_app (template_hole 45, template_hole 44),
                    template_hole 43)),
                template_app
                 (template_app (template_hole 46, template_hole 42),
                  template_app
                   (template_app (template_hole 45, template_hole 41),
                    template_hole 40))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 39,
               template_app
                (template_app
                  (template_hole 38,
                   template_app
                    (template_app
                      (template_hole 37,
                       template_app
                        (template_app (template_hole 36, t_empty),
                         template_hole 29)),
                     template_app
                      (template_app
                        (template_hole 28,
                         template_app
                          (template_app
                            (template_hole 27, template_hole 26),
                           template_hole 25)),
                       t_empty))),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Possibility.pwd_owner_v_rel",
     "?n : bad_prikey Int bad_id_shakey ==>
      s\<^sub>0 \<Turnstile> fst (pwd_owner_v ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 47, template_var 0),
              template_app
               (template_app
                 (template_hole 46,
                  template_app
                   (template_app (template_hole 45, template_hole 44),
                    template_hole 43)),
                template_app
                 (template_app (template_hole 46, template_hole 42),
                  template_app
                   (template_app (template_hole 45, template_hole 41),
                    template_hole 40))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 39,
               template_app
                (template_app
                  (template_hole 38,
                   template_app
                    (template_app
                      (template_hole 37,
                       template_app
                        (template_app (template_hole 36, t_empty),
                         template_hole 29)),
                     template_app
                      (template_app
                        (template_hole 28,
                         template_app
                          (template_app
                            (template_hole 27, template_hole 26),
                           template_hole 25)),
                       t_empty))),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Possibility.pwd_spy_con_rel",
     "?n : bad_prikey Int bad_id_shakey ==>
      s\<^sub>0 \<Turnstile> fst (pwd_spy_con ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 47, template_var 0),
              template_app
               (template_app
                 (template_hole 46,
                  template_app
                   (template_app (template_hole 45, template_hole 44),
                    template_hole 43)),
                template_app
                 (template_app (template_hole 46, template_hole 42),
                  template_app
                   (template_app (template_hole 45, template_hole 41),
                    template_hole 40))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 39,
               template_app
                (template_app
                  (template_hole 38,
                   template_app
                    (template_app
                      (template_hole 37,
                       template_app
                        (template_app (template_hole 36, t_empty),
                         template_hole 29)),
                     template_app
                      (template_app
                        (template_hole 28,
                         template_app
                          (template_app
                            (template_hole 27, template_hole 26),
                           template_hole 25)),
                       t_empty))),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Possibility.pwd_spy_dec_rel",
     "?n : bad_prikey Int bad_id_shakey ==>
      s\<^sub>0 \<Turnstile> fst (pwd_spy_dec ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 47, template_var 0),
              template_app
               (template_app
                 (template_hole 46,
                  template_app
                   (template_app (template_hole 45, template_hole 44),
                    template_hole 43)),
                template_app
                 (template_app (template_hole 46, template_hole 42),
                  template_app
                   (template_app (template_hole 45, template_hole 41),
                    template_hole 40))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 39,
               template_app
                (template_app
                  (template_hole 38,
                   template_app
                    (template_app
                      (template_hole 37,
                       template_app
                        (template_app (template_hole 36, t_empty),
                         template_hole 29)),
                     template_app
                      (template_app
                        (template_hole 28,
                         template_app
                          (template_app
                            (template_hole 27, template_hole 26),
                           template_hole 25)),
                       t_empty))),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Possibility.pwd_spy_enc_mult_rel",
     "?n : bad_prikey Int bad_id_shakey ==>
      s\<^sub>0 \<Turnstile> fst (pwd_spy_enc_mult ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 47, template_var 0),
              template_app
               (template_app
                 (template_hole 46,
                  template_app
                   (template_app (template_hole 45, template_hole 44),
                    template_hole 43)),
                template_app
                 (template_app (template_hole 46, template_hole 42),
                  template_app
                   (template_app (template_hole 45, template_hole 41),
                    template_hole 40))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 39,
               template_app
                (template_app
                  (template_hole 38,
                   template_app
                    (template_app
                      (template_hole 37,
                       template_app
                        (template_app (template_hole 36, t_empty),
                         template_hole 29)),
                     template_app
                      (template_app
                        (template_hole 28,
                         template_app
                          (template_app
                            (template_hole 27, template_hole 26),
                           template_hole 25)),
                       t_empty))),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Possibility.pwd_spy_enc_pubk_rel",
     "?n : bad_prikey Int bad_id_shakey ==>
      s\<^sub>0 \<Turnstile> fst (pwd_spy_enc_pubk ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 47, template_var 0),
              template_app
               (template_app
                 (template_hole 46,
                  template_app
                   (template_app (template_hole 45, template_hole 44),
                    template_hole 43)),
                template_app
                 (template_app (template_hole 46, template_hole 42),
                  template_app
                   (template_app (template_hole 45, template_hole 41),
                    template_hole 40))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 39,
               template_app
                (template_app
                  (template_hole 38,
                   template_app
                    (template_app
                      (template_hole 37,
                       template_app
                        (template_app (template_hole 36, t_empty),
                         template_hole 29)),
                     template_app
                      (template_app
                        (template_hole 28,
                         template_app
                          (template_app
                            (template_hole 27, template_hole 26),
                           template_hole 25)),
                       t_empty))),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Possibility.pwd_spy_enc_sign_rel",
     "?n : bad_prikey Int bad_id_shakey ==>
      s\<^sub>0 \<Turnstile> fst (pwd_spy_enc_sign ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 47, template_var 0),
              template_app
               (template_app
                 (template_hole 46,
                  template_app
                   (template_app (template_hole 45, template_hole 44),
                    template_hole 43)),
                template_app
                 (template_app (template_hole 46, template_hole 42),
                  template_app
                   (template_app (template_hole 45, template_hole 41),
                    template_hole 40))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 39,
               template_app
                (template_app
                  (template_hole 38,
                   template_app
                    (template_app
                      (template_hole 37,
                       template_app
                        (template_app (template_hole 36, t_empty),
                         template_hole 29)),
                     template_app
                      (template_app
                        (template_hole 28,
                         template_app
                          (template_app
                            (template_hole 27, template_hole 26),
                           template_hole 25)),
                       t_empty))),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Possibility.pwd_spy_i_rel",
     "?n : bad_prikey Int bad_id_shakey ==>
      s\<^sub>0 \<Turnstile> fst (pwd_spy_i ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 47, template_var 0),
              template_app
               (template_app
                 (template_hole 46,
                  template_app
                   (template_app (template_hole 45, template_hole 44),
                    template_hole 43)),
                template_app
                 (template_app (template_hole 46, template_hole 42),
                  template_app
                   (template_app (template_hole 45, template_hole 41),
                    template_hole 40))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 39,
               template_app
                (template_app
                  (template_hole 38,
                   template_app
                    (template_app
                      (template_hole 37,
                       template_app
                        (template_app (template_hole 36, t_empty),
                         template_hole 29)),
                     template_app
                      (template_app
                        (template_hole 28,
                         template_app
                          (template_app
                            (template_hole 27, template_hole 26),
                           template_hole 25)),
                       t_empty))),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Possibility.pwd_spy_id_prik_rel",
     "?n : bad_prikey Int bad_id_shakey ==>
      s\<^sub>0 \<Turnstile> fst (pwd_spy_id_prik ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 47, template_var 0),
              template_app
               (template_app
                 (template_hole 46,
                  template_app
                   (template_app (template_hole 45, template_hole 44),
                    template_hole 43)),
                template_app
                 (template_app (template_hole 46, template_hole 42),
                  template_app
                   (template_app (template_hole 45, template_hole 41),
                    template_hole 40))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 39,
               template_app
                (template_app
                  (template_hole 38,
                   template_app
                    (template_app
                      (template_hole 37,
                       template_app
                        (template_app (template_hole 36, t_empty),
                         template_hole 29)),
                     template_app
                      (template_app
                        (template_hole 28,
                         template_app
                          (template_app
                            (template_hole 27, template_hole 26),
                           template_hole 25)),
                       t_empty))),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Possibility.pwd_spy_id_pubk_rel",
     "?n : bad_prikey Int bad_id_shakey ==>
      s\<^sub>0 \<Turnstile> fst (pwd_spy_id_pubk ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 47, template_var 0),
              template_app
               (template_app
                 (template_hole 46,
                  template_app
                   (template_app (template_hole 45, template_hole 44),
                    template_hole 43)),
                template_app
                 (template_app (template_hole 46, template_hole 42),
                  template_app
                   (template_app (template_hole 45, template_hole 41),
                    template_hole 40))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 39,
               template_app
                (template_app
                  (template_hole 38,
                   template_app
                    (template_app
                      (template_hole 37,
                       template_app
                        (template_app (template_hole 36, t_empty),
                         template_hole 29)),
                     template_app
                      (template_app
                        (template_hole 28,
                         template_app
                          (template_app
                            (template_hole 27, template_hole 26),
                           template_hole 25)),
                       t_empty))),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Possibility.pwd_spy_id_pwd_rel",
     "?n : bad_prikey Int bad_id_shakey ==>
      s\<^sub>0 \<Turnstile> fst (pwd_spy_id_pwd ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 47, template_var 0),
              template_app
               (template_app
                 (template_hole 46,
                  template_app
                   (template_app (template_hole 45, template_hole 44),
                    template_hole 43)),
                template_app
                 (template_app (template_hole 46, template_hole 42),
                  template_app
                   (template_app (template_hole 45, template_hole 41),
                    template_hole 40))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 39,
               template_app
                (template_app
                  (template_hole 38,
                   template_app
                    (template_app
                      (template_hole 37,
                       template_app
                        (template_app (template_hole 36, t_empty),
                         template_hole 29)),
                     template_app
                      (template_app
                        (template_hole 28,
                         template_app
                          (template_app
                            (template_hole 27, template_hole 26),
                           template_hole 25)),
                       t_empty))),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Possibility.pwd_spy_id_sesk_rel",
     "?n : bad_prikey Int bad_id_shakey ==>
      s\<^sub>0 \<Turnstile> fst (pwd_spy_id_sesk ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 47, template_var 0),
              template_app
               (template_app
                 (template_hole 46,
                  template_app
                   (template_app (template_hole 45, template_hole 44),
                    template_hole 43)),
                template_app
                 (template_app (template_hole 46, template_hole 42),
                  template_app
                   (template_app (template_hole 45, template_hole 41),
                    template_hole 40))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 39,
               template_app
                (template_app
                  (template_hole 38,
                   template_app
                    (template_app
                      (template_hole 37,
                       template_app
                        (template_app (template_hole 36, t_empty),
                         template_hole 29)),
                     template_app
                      (template_app
                        (template_hole 28,
                         template_app
                          (template_app
                            (template_hole 27, template_hole 26),
                           template_hole 25)),
                       t_empty))),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Possibility.pwd_spy_ii_rel",
     "?n : bad_prikey Int bad_id_shakey ==>
      s\<^sub>0 \<Turnstile> fst (pwd_spy_ii ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 47, template_var 0),
              template_app
               (template_app
                 (template_hole 46,
                  template_app
                   (template_app (template_hole 45, template_hole 44),
                    template_hole 43)),
                template_app
                 (template_app (template_hole 46, template_hole 42),
                  template_app
                   (template_app (template_hole 45, template_hole 41),
                    template_hole 40))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 39,
               template_app
                (template_app
                  (template_hole 38,
                   template_app
                    (template_app
                      (template_hole 37,
                       template_app
                        (template_app (template_hole 36, t_empty),
                         template_hole 29)),
                     template_app
                      (template_app
                        (template_hole 28,
                         template_app
                          (template_app
                            (template_hole 27, template_hole 26),
                           template_hole 25)),
                       t_empty))),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Possibility.pwd_spy_iii_rel",
     "?n : bad_prikey Int bad_id_shakey ==>
      s\<^sub>0 \<Turnstile> fst (pwd_spy_iii ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 47, template_var 0),
              template_app
               (template_app
                 (template_hole 46,
                  template_app
                   (template_app (template_hole 45, template_hole 44),
                    template_hole 43)),
                template_app
                 (template_app (template_hole 46, template_hole 42),
                  template_app
                   (template_app (template_hole 45, template_hole 41),
                    template_hole 40))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 39,
               template_app
                (template_app
                  (template_hole 38,
                   template_app
                    (template_app
                      (template_hole 37,
                       template_app
                        (template_app (template_hole 36, t_empty),
                         template_hole 29)),
                     template_app
                      (template_app
                        (template_hole 28,
                         template_app
                          (template_app
                            (template_hole 27, template_hole 26),
                           template_hole 25)),
                       t_empty))),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Possibility.pwd_spy_iv_rel",
     "?n : bad_prikey Int bad_id_shakey ==>
      s\<^sub>0 \<Turnstile> fst (pwd_spy_iv ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 47, template_var 0),
              template_app
               (template_app
                 (template_hole 46,
                  template_app
                   (template_app (template_hole 45, template_hole 44),
                    template_hole 43)),
                template_app
                 (template_app (template_hole 46, template_hole 42),
                  template_app
                   (template_app (template_hole 45, template_hole 41),
                    template_hole 40))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 39,
               template_app
                (template_app
                  (template_hole 38,
                   template_app
                    (template_app
                      (template_hole 37,
                       template_app
                        (template_app (template_hole 36, t_empty),
                         template_hole 29)),
                     template_app
                      (template_app
                        (template_hole 28,
                         template_app
                          (template_app
                            (template_hole 27, template_hole 26),
                           template_hole 25)),
                       t_empty))),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Possibility.pwd_spy_mult_rel",
     "?n : bad_prikey Int bad_id_shakey ==>
      s\<^sub>0 \<Turnstile> fst (pwd_spy_mult ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 47, template_var 0),
              template_app
               (template_app
                 (template_hole 46,
                  template_app
                   (template_app (template_hole 45, template_hole 44),
                    template_hole 43)),
                template_app
                 (template_app (template_hole 46, template_hole 42),
                  template_app
                   (template_app (template_hole 45, template_hole 41),
                    template_hole 40))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 39,
               template_app
                (template_app
                  (template_hole 38,
                   template_app
                    (template_app
                      (template_hole 37,
                       template_app
                        (template_app (template_hole 36, t_empty),
                         template_hole 29)),
                     template_app
                      (template_app
                        (template_hole 28,
                         template_app
                          (template_app
                            (template_hole 27, template_hole 26),
                           template_hole 25)),
                       t_empty))),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Possibility.pwd_spy_sep_agr_rel",
     "?n : bad_prikey Int bad_id_shakey ==>
      s\<^sub>0 \<Turnstile> fst (pwd_spy_sep_agr ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 47, template_var 0),
              template_app
               (template_app
                 (template_hole 46,
                  template_app
                   (template_app (template_hole 45, template_hole 44),
                    template_hole 43)),
                template_app
                 (template_app (template_hole 46, template_hole 42),
                  template_app
                   (template_app (template_hole 45, template_hole 41),
                    template_hole 40))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 39,
               template_app
                (template_app
                  (template_hole 38,
                   template_app
                    (template_app
                      (template_hole 37,
                       template_app
                        (template_app (template_hole 36, t_empty),
                         template_hole 29)),
                     template_app
                      (template_app
                        (template_hole 28,
                         template_app
                          (template_app
                            (template_hole 27, template_hole 26),
                           template_hole 25)),
                       t_empty))),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Possibility.pwd_spy_sep_map_rel",
     "?n : bad_prikey Int bad_id_shakey ==>
      s\<^sub>0 \<Turnstile> fst (pwd_spy_sep_map ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 47, template_var 0),
              template_app
               (template_app
                 (template_hole 46,
                  template_app
                   (template_app (template_hole 45, template_hole 44),
                    template_hole 43)),
                template_app
                 (template_app (template_hole 46, template_hole 42),
                  template_app
                   (template_app (template_hole 45, template_hole 41),
                    template_hole 40))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 39,
               template_app
                (template_app
                  (template_hole 38,
                   template_app
                    (template_app
                      (template_hole 37,
                       template_app
                        (template_app (template_hole 36, t_empty),
                         template_hole 29)),
                     template_app
                      (template_app
                        (template_hole 28,
                         template_app
                          (template_app
                            (template_hole 27, template_hole 26),
                           template_hole 25)),
                       t_empty))),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Possibility.pwd_spy_sesk_rel",
     "?n : bad_prikey Int bad_id_shakey ==>
      s\<^sub>0 \<Turnstile> fst (pwd_spy_sesk ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 47, template_var 0),
              template_app
               (template_app
                 (template_hole 46,
                  template_app
                   (template_app (template_hole 45, template_hole 44),
                    template_hole 43)),
                template_app
                 (template_app (template_hole 46, template_hole 42),
                  template_app
                   (template_app (template_hole 45, template_hole 41),
                    template_hole 40))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 39,
               template_app
                (template_app
                  (template_hole 38,
                   template_app
                    (template_app
                      (template_hole 37,
                       template_app
                        (template_app (template_hole 36, t_empty),
                         template_hole 29)),
                     template_app
                      (template_app
                        (template_hole 28,
                         template_app
                          (template_app
                            (template_hole 27, template_hole 26),
                           template_hole 25)),
                       t_empty))),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Possibility.run_asset_i_unused",
     "s\<^sub>0 \<Turnstile> ?s ==>
      EX A. PriKey A ~: used (fst (run_asset_i ?n ?s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 50,
                template_app
                 (template_app
                   (template_hole 49,
                    template_app
                     (template_app
                       (template_hole 48,
                        template_app
                         (template_app (template_hole 47, t_empty),
                          template_hole 39)),
                      template_app
                       (template_app
                         (template_hole 38,
                          template_app
                           (template_app
                             (template_hole 37, template_hole 36),
                            template_hole 35)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 7, template_hole 6))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Possibility.run_asset_ii_unused",
     "s\<^sub>0 \<Turnstile> ?s ==>
      EX C. PriKey C ~: used (fst (run_asset_ii ?n ?s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 50,
                template_app
                 (template_app
                   (template_hole 49,
                    template_app
                     (template_app
                       (template_hole 48,
                        template_app
                         (template_app (template_hole 47, t_empty),
                          template_hole 39)),
                      template_app
                       (template_app
                         (template_hole 38,
                          template_app
                           (template_app
                             (template_hole 37, template_hole 36),
                            template_hole 35)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 7, template_hole 6))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Possibility.run_owner_ii_unused",
     "s\<^sub>0 \<Turnstile> ?s ==>
      EX B. PriKey B ~: used (fst (run_owner_ii ?n ?s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 50,
                template_app
                 (template_app
                   (template_hole 49,
                    template_app
                     (template_app
                       (template_hole 48,
                        template_app
                         (template_app (template_hole 47, t_empty),
                          template_hole 39)),
                      template_app
                       (template_app
                         (template_hole 38,
                          template_app
                           (template_app
                             (template_hole 37, template_hole 36),
                            template_hole 35)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 7, template_hole 6))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Possibility.run_owner_iii_unused",
     "s\<^sub>0 \<Turnstile> ?s ==>
      EX D. PriKey D ~: used (fst (run_owner_iii ?n ?s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 50,
                template_app
                 (template_app
                   (template_hole 49,
                    template_app
                     (template_app
                       (template_hole 48,
                        template_app
                         (template_app (template_hole 47, t_empty),
                          template_hole 39)),
                      template_app
                       (template_app
                         (template_hole 38,
                          template_app
                           (template_app
                             (template_hole 37, template_hole 36),
                            template_hole 35)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 7, template_hole 6))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Possibility.pubkey_unused",
     "[| s\<^sub>0 \<Turnstile> ?s; PriKey ?A ~: used ?s |]
      ==> PubKey ?A ~: parts (used ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 48,
                template_app
                 (template_app
                   (template_hole 47,
                    template_app
                     (template_app
                       (template_hole 46,
                        template_app
                         (template_app (template_hole 45, t_empty),
                          template_hole 37)),
                      template_app
                       (template_app
                         (template_hole 36,
                          template_app
                           (template_app
                             (template_hole 35, template_hole 34),
                            template_hole 33)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 5, template_hole 4))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app
                       (template_app (template_hole 41, template_hole 40),
                        template_hole 39),
                      template_var 0)),
                  template_app (template_hole 1, template_var 1))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 41, template_hole 40),
                       template_hole 27),
                     template_var 0)),
                 template_app
                  (template_hole 0,
                   template_app (template_hole 1, template_var 1)))
               )
           ))),
    ("Possibility.run_asset_i_msg",
     "s\<^sub>0 \<Turnstile> ?s ==>
      case run_asset_i ?n ?s of
      (s', S, x) => (Asset ?n, Crypt (Auth_ShaKey ?n) (PriKey S)) : s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 48,
                template_app
                 (template_app
                   (template_hole 47,
                    template_app
                     (template_app
                       (template_hole 46,
                        template_app
                         (template_app (template_hole 45, t_empty),
                          template_hole 37)),
                      template_app
                       (template_app
                         (template_hole 36,
                          template_app
                           (template_app
                             (template_hole 35, template_hole 34),
                            template_hole 33)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 5, template_hole 4))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Possibility.run_owner_iv_rel_1",
     "[| s\<^sub>0 \<Turnstile> ?s;
         run_asset_iii ?n ?s = (?s', ?S, ?A, ?B, ?C, ?D) |]
      ==> ?s \<Turnstile> fst (run_owner_iv ?n ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 53,
                template_app
                 (template_app
                   (template_hole 52,
                    template_app
                     (template_app
                       (template_hole 51,
                        template_app
                         (template_app (template_hole 50, t_empty),
                          template_hole 42)),
                      template_app
                       (template_app
                         (template_hole 41,
                          template_app
                           (template_app
                             (template_hole 40, template_hole 39),
                            template_hole 38)),
                        t_empty))),
                  template_var 7)),
              template_app (template_hole 10, template_hole 9))
            ),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 6), template_var 7),
          template_app
           (template_app (template_hole 6, template_var 5),
            template_app
             (template_app (template_hole 5, template_var 4),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_var 0))))))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 53,
               template_app
                (template_app (template_hole 52, template_var 7),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 6),
                     template_var 7)))),
             template_app (template_hole 10, template_hole 9))
           ))),
    ("Possibility.pwd_compromised",
     "?n : bad_prikey Int bad_id_shakey ==>
      EX s. s\<^sub>0 \<Turnstile> s &
            {Pwd ?n, \<langle>?n, Pwd ?n\<rangle>} <= spied s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 50, template_var 0),
              template_app
               (template_app
                 (template_hole 49,
                  template_app
                   (template_app (template_hole 48, template_hole 47),
                    template_hole 46)),
                template_app
                 (template_app (template_hole 49, template_hole 45),
                  template_app
                   (template_app (template_hole 48, template_hole 44),
                    template_hole 43))))
            )],
       template_predicate (template_app (template_hole 42, t_empty)))),
    ("Possibility.pwd_owner_iv_rel_1",
     "[| ?n : bad_prikey Int bad_id_shakey;
         pwd_spy_iii ?n = (?s, ?S, ?A, ?B, ?C, ?D) |]
      ==> s\<^sub>0 \<Turnstile> fst (pwd_owner_iv ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 54, template_var 6),
              template_app
               (template_app
                 (template_hole 53,
                  template_app
                   (template_app (template_hole 52, template_hole 51),
                    template_hole 50)),
                template_app
                 (template_app (template_hole 53, template_hole 49),
                  template_app
                   (template_app (template_hole 52, template_hole 48),
                    template_hole 47))))
            ),
        template_equation
         (template_app (template_hole 45, template_var 6),
          template_app
           (template_app (template_hole 44, template_var 5),
            template_app
             (template_app (template_hole 43, template_var 4),
              template_app
               (template_app (template_hole 42, template_var 3),
                template_app
                 (template_app (template_hole 41, template_var 2),
                  template_app
                   (template_app (template_hole 40, template_var 1),
                    template_var 0))))))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 39,
               template_app
                (template_app
                  (template_hole 38,
                   template_app
                    (template_app
                      (template_hole 37,
                       template_app
                        (template_app (template_hole 36, t_empty),
                         template_hole 29)),
                     template_app
                      (template_app
                        (template_hole 28,
                         template_app
                          (template_app
                            (template_hole 27, template_hole 26),
                           template_hole 25)),
                       t_empty))),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 6)))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Possibility.run_owner_ii_msg",
     "s\<^sub>0 \<Turnstile> ?s ==>
      case run_owner_ii ?n ?s of
      (s', S, A, x) =>
        {(Asset ?n, Crypt (Auth_ShaKey ?n) (PriKey S)),
         (Owner ?n, \<lbrace>Num 1, PubKey A\<rbrace>)}
        <= s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 53,
                template_app
                 (template_app
                   (template_hole 52,
                    template_app
                     (template_app
                       (template_hole 51,
                        template_app
                         (template_app (template_hole 50, t_empty),
                          template_hole 42)),
                      template_app
                       (template_app
                         (template_hole 41,
                          template_app
                           (template_app
                             (template_hole 40, template_hole 39),
                            template_hole 38)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 10, template_hole 9))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, t_empty),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Possibility.run_owner_v_msg",
     "s\<^sub>0 \<Turnstile> ?s ==>
      let (s', S, A, B, C, D) = run_owner_v ?n ?s;
          SK = (Some S, {A, B}, {C, D})
      in {(Asset ?n, SesKey SK), (Owner ?n, Crypt (SesK SK) (Pwd ?n))}
         <= s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 63,
                template_app
                 (template_app
                   (template_hole 62,
                    template_app
                     (template_app
                       (template_hole 61,
                        template_app
                         (template_app (template_hole 60, t_empty),
                          template_hole 52)),
                      template_app
                       (template_app
                         (template_hole 51,
                          template_app
                           (template_app
                             (template_hole 50, template_hole 49),
                            template_hole 48)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 20, template_hole 19))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 18,
               template_app
                (template_app (template_hole 17, template_var 0),
                 template_var 1)),
             template_app (template_hole 16, t_empty))
           ))),
    ("Possibility.run_asset_v_msg",
     "s\<^sub>0 \<Turnstile> ?s ==>
      let (s', S, A, B, C, D) = run_asset_v ?n ?s;
          SK = (Some S, {A, B}, {C, D})
      in {(Owner ?n, Crypt (SesK SK) (Pwd ?n)),
          (Asset ?n, Crypt (SesK SK) (Num 0))}
         <= s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 63,
                template_app
                 (template_app
                   (template_hole 62,
                    template_app
                     (template_app
                       (template_hole 61,
                        template_app
                         (template_app (template_hole 60, t_empty),
                          template_hole 52)),
                      template_app
                       (template_app
                         (template_hole 51,
                          template_app
                           (template_app
                             (template_hole 50, template_hole 49),
                            template_hole 48)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 20, template_hole 19))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 18,
               template_app
                (template_app (template_hole 17, template_var 0),
                 template_var 1)),
             template_app (template_hole 16, t_empty))
           ))),
    ("Possibility.runs_unbounded",
     "s\<^sub>0 \<Turnstile> ?s ==>
      EX s' S SK.
         ?s \<Turnstile> s' &
         fst SK = Some S &
         (Asset ?n, Crypt (Auth_ShaKey ?n) (PriKey S)) ~: ?s &
         {(Owner ?n, Crypt (SesK SK) (Pwd ?n)),
          (Asset ?n, Crypt (SesK SK) (Num 0))}
         <= s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 59,
                template_app
                 (template_app
                   (template_hole 58,
                    template_app
                     (template_app
                       (template_hole 57,
                        template_app
                         (template_app (template_hole 56, t_empty),
                          template_hole 48)),
                      template_app
                       (template_app
                         (template_hole 47,
                          template_app
                           (template_app
                             (template_hole 46, template_hole 45),
                            template_hole 44)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 16, template_hole 15))
            )],
       template_predicate (template_app (template_hole 14, t_empty)))),
    ("Possibility.run_asset_i_ex",
     "s\<^sub>0 \<Turnstile> ?s ==> pred_asset_i ?n ?s (run_asset_i ?n ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 61,
                template_app
                 (template_app
                   (template_hole 60,
                    template_app
                     (template_app
                       (template_hole 59,
                        template_app
                         (template_app (template_hole 58, t_empty),
                          template_hole 50)),
                      template_app
                       (template_app
                         (template_hole 49,
                          template_app
                           (template_app
                             (template_hole 48, template_hole 47),
                            template_hole 46)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 18, template_hole 17))
            )],
       template_predicate (template_app (template_hole 16, t_empty)))),
    ("Possibility.run_asset_ii_msg",
     "s\<^sub>0 \<Turnstile> ?s ==>
      case run_asset_ii ?n ?s of
      (s', S, A, B, x) =>
        insert (Owner ?n, \<lbrace>Num 1, PubKey A\<rbrace>)
         ({Asset ?n} \<times>
          {Crypt (Auth_ShaKey ?n) (PriKey S),
           \<lbrace>Num 2, PubKey B\<rbrace>})
        <= s' &
        (Asset ?n, PubKey B) ~: s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 60,
                template_app
                 (template_app
                   (template_hole 59,
                    template_app
                     (template_app
                       (template_hole 58,
                        template_app
                         (template_app (template_hole 57, t_empty),
                          template_hole 49)),
                      template_app
                       (template_app
                         (template_hole 48,
                          template_app
                           (template_app
                             (template_hole 47, template_hole 46),
                            template_hole 45)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 17, template_hole 16))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 15, t_empty),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Possibility.runs_unbounded_1",
     "[| s\<^sub>0 \<Turnstile> ?s;
         run_asset_v ?n ?s = (?s', ?S, ?A, ?B, ?C, ?D) |]
      ==> EX s' S SK.
             (Asset ?n, Crypt (Auth_ShaKey ?n) (PriKey S)) ~: ?s &
             {(Owner ?n, Crypt (SesK SK) (Pwd ?n)),
              (Asset ?n, Crypt (SesK SK) (Num 0))}
             <= s' &
             ?s \<Turnstile> s' & fst SK = Some S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 66,
                template_app
                 (template_app
                   (template_hole 65,
                    template_app
                     (template_app
                       (template_hole 64,
                        template_app
                         (template_app (template_hole 63, t_empty),
                          template_hole 55)),
                      template_app
                       (template_app
                         (template_hole 54,
                          template_app
                           (template_app
                             (template_hole 53, template_hole 52),
                            template_hole 51)),
                        t_empty))),
                  template_var 7)),
              template_app (template_hole 23, template_hole 22))
            ),
        template_equation
         (template_app
           (template_app (template_hole 20, template_var 6),
            template_var 7),
          template_app
           (template_app (template_hole 19, template_var 5),
            template_app
             (template_app (template_hole 18, template_var 4),
              template_app
               (template_app (template_hole 17, template_var 3),
                template_app
                 (template_app (template_hole 16, template_var 2),
                  template_app
                   (template_app (template_hole 15, template_var 1),
                    template_var 0))))))],
       template_predicate (template_app (template_hole 14, t_empty)))),
    ("Possibility.run_asset_iv_msg",
     "s\<^sub>0 \<Turnstile> ?s ==>
      let (s', S, A, B, C, D) = run_asset_iv ?n ?s;
          SK = (Some S, {A, B}, {C, D})
      in insert (Owner ?n, SesKey SK)
          ({Asset ?n} \<times> {SesKey SK, Token ?n (Auth_PriK ?n) B C SK})
         <= s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 64,
                template_app
                 (template_app
                   (template_hole 63,
                    template_app
                     (template_app
                       (template_hole 62,
                        template_app
                         (template_app (template_hole 61, t_empty),
                          template_hole 53)),
                      template_app
                       (template_app
                         (template_hole 52,
                          template_app
                           (template_app
                             (template_hole 51, template_hole 50),
                            template_hole 49)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 21, template_hole 20))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 19,
               template_app
                (template_app (template_hole 18, template_var 0),
                 template_var 1)),
             template_app (template_hole 17, t_empty))
           ))),
    ("Possibility.run_owner_iii_msg",
     "s\<^sub>0 \<Turnstile> ?s ==>
      case run_owner_iii ?n ?s of
      (s', S, A, B, C, x) =>
        {Asset ?n} \<times>
        {Crypt (Auth_ShaKey ?n) (PriKey S),
         \<lbrace>Num 2, PubKey B\<rbrace>} Un
        {Owner ?n} \<times>
        {\<lbrace>Num 1, PubKey A\<rbrace>,
         \<lbrace>Num 3, PubKey C\<rbrace>}
        <= s' &
        (Asset ?n, PubKey B) ~: s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 61,
                template_app
                 (template_app
                   (template_hole 60,
                    template_app
                     (template_app
                       (template_hole 59,
                        template_app
                         (template_app (template_hole 58, t_empty),
                          template_hole 50)),
                      template_app
                       (template_app
                         (template_hole 49,
                          template_app
                           (template_app
                             (template_hole 48, template_hole 47),
                            template_hole 46)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 18, template_hole 17))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 16, t_empty),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Possibility.run_owner_ii_ex",
     "s\<^sub>0 \<Turnstile> ?s ==>
      pred_owner_ii ?n (run_asset_i ?n ?s) (run_owner_ii ?n ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 66,
                template_app
                 (template_app
                   (template_hole 65,
                    template_app
                     (template_app
                       (template_hole 64,
                        template_app
                         (template_app (template_hole 63, t_empty),
                          template_hole 55)),
                      template_app
                       (template_app
                         (template_hole 54,
                          template_app
                           (template_app
                             (template_hole 53, template_hole 52),
                            template_hole 51)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 23, template_hole 22))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 21, t_empty),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Possibility.run_asset_ii_ex",
     "s\<^sub>0 \<Turnstile> ?s ==>
      pred_asset_ii ?n (run_owner_ii ?n ?s) (run_asset_ii ?n ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 69,
                template_app
                 (template_app
                   (template_hole 68,
                    template_app
                     (template_app
                       (template_hole 67,
                        template_app
                         (template_app (template_hole 66, t_empty),
                          template_hole 58)),
                      template_app
                       (template_app
                         (template_hole 57,
                          template_app
                           (template_app
                             (template_hole 56, template_hole 55),
                            template_hole 54)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 26, template_hole 25))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 24, t_empty),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Possibility.run_asset_iii_msg",
     "s\<^sub>0 \<Turnstile> ?s ==>
      case run_asset_iii ?n ?s of
      (s', S, A, B, C, D) =>
        {Asset ?n} \<times>
        {Crypt (Auth_ShaKey ?n) (PriKey S),
         \<lbrace>Num 2, PubKey B\<rbrace>,
         \<lbrace>Num 4, PubKey D\<rbrace>} Un
        {Owner ?n} \<times>
        {\<lbrace>Num 1, PubKey A\<rbrace>,
         \<lbrace>Num 3, PubKey C\<rbrace>}
        <= s' &
        (Asset ?n, PubKey B) ~: s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 61,
                template_app
                 (template_app
                   (template_hole 60,
                    template_app
                     (template_app
                       (template_hole 59,
                        template_app
                         (template_app (template_hole 58, t_empty),
                          template_hole 50)),
                      template_app
                       (template_app
                         (template_hole 49,
                          template_app
                           (template_app
                             (template_hole 48, template_hole 47),
                            template_hole 46)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 18, template_hole 17))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 16, t_empty),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Possibility.run_owner_iii_ex",
     "s\<^sub>0 \<Turnstile> ?s ==>
      pred_owner_iii ?n (run_asset_ii ?n ?s) (run_owner_iii ?n ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 71,
                template_app
                 (template_app
                   (template_hole 70,
                    template_app
                     (template_app
                       (template_hole 69,
                        template_app
                         (template_app (template_hole 68, t_empty),
                          template_hole 60)),
                      template_app
                       (template_app
                         (template_hole 59,
                          template_app
                           (template_app
                             (template_hole 58, template_hole 57),
                            template_hole 56)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 28, template_hole 27))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 26, t_empty),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Possibility.run_asset_iii_ex",
     "s\<^sub>0 \<Turnstile> ?s ==>
      pred_asset_iii ?n (run_owner_iii ?n ?s) (run_asset_iii ?n ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 70,
                template_app
                 (template_app
                   (template_hole 69,
                    template_app
                     (template_app
                       (template_hole 68,
                        template_app
                         (template_app (template_hole 67, t_empty),
                          template_hole 59)),
                      template_app
                       (template_app
                         (template_hole 58,
                          template_app
                           (template_app
                             (template_hole 57, template_hole 56),
                            template_hole 55)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 27, template_hole 26))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 25, t_empty),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Possibility.run_owner_iv_msg",
     "s\<^sub>0 \<Turnstile> ?s ==>
      let (s', S, A, B, C, D) = run_owner_iv ?n ?s;
          SK = (Some S, {A, B}, {C, D})
      in {Asset ?n} \<times>
         {Crypt (Auth_ShaKey ?n) (PriKey S),
          \<lbrace>Num 2, PubKey B\<rbrace>,
          \<lbrace>Num 4, PubKey D\<rbrace>} Un
         {Owner ?n} \<times>
         {\<lbrace>Num 1, PubKey A\<rbrace>,
          \<lbrace>Num 3, PubKey C\<rbrace>, SesKey SK,
          Crypt (SesK SK) (PubKey D)}
         <= s' &
         (Asset ?n, PubKey B) ~: s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 70,
                template_app
                 (template_app
                   (template_hole 69,
                    template_app
                     (template_app
                       (template_hole 68,
                        template_app
                         (template_app (template_hole 67, t_empty),
                          template_hole 59)),
                      template_app
                       (template_app
                         (template_hole 58,
                          template_app
                           (template_app
                             (template_hole 57, template_hole 56),
                            template_hole 55)),
                        t_empty))),
                  template_var 1)),
              template_app (template_hole 27, template_hole 26))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 25,
               template_app
                (template_app (template_hole 24, template_var 0),
                 template_var 1)),
             template_app (template_hole 23, t_empty))
           )))]
