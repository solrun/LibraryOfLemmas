   [("Anonymity.key_sets_empty", "key_sets ?X {} = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Anonymity.key_sets_msg_eq", "key_sets_msg ?X ?X = {{}}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0), template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_hole 0))),
    ("Anonymity.crypts_msg_agent", "crypts_msg (Agent ?n) = {Agent ?n}",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 2, template_var 0)),
         template_hole 0))),
    ("Anonymity.crypts_msg_key", "crypts_msg (Key ?K) = {Key ?K}",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 2, template_var 0)),
         template_hole 0))),
    ("Anonymity.crypts_msg_num", "crypts_msg (Num ?n) = {Num ?n}",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 2, template_var 0)),
         template_hole 0))),
    ("Anonymity.crypts_msg_pwd", "crypts_msg (Pwd ?n) = {Pwd ?n}",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 2, template_var 0)),
         template_hole 0))),
    ("Anonymity.crypts_msg_hash",
     "crypts_msg (Hash ?X) = insert (Hash ?X) (crypts_msg ?X)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 2, template_var 0)))),
    ("Anonymity.crypts_union",
     "crypts (?H Un ?H') = crypts ?H Un crypts ?H'",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Anonymity.crypts_insert",
     "crypts (insert ?X ?H) = crypts_msg ?X Un crypts ?H",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Anonymity.crypts_msg_crypt",
     "crypts_msg (Crypt ?K ?X) = Crypt ?K ` crypts_msg ?X",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Anonymity.crypts_msg_mult",
     "crypts_msg (?A \<otimes> ?B) = {?A \<otimes> ?B}",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Anonymity.foldr_crypt_size",
     "size (foldr Crypt ?KS ?X) = size ?X + length ?KS",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 4, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Anonymity.key_sets_union",
     "key_sets ?X (?H Un ?H') = key_sets ?X ?H Un key_sets ?X ?H'",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Anonymity.key_sets_insert",
     "key_sets ?X (insert ?Y ?H) = key_sets_msg ?X ?Y Un key_sets ?X ?H",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Anonymity.key_sets_msg_agent",
     "key_sets_msg ?X (Agent ?n) = (if ?X = Agent ?n then {{}} else {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_dunno)),
    ("Anonymity.key_sets_msg_hash",
     "key_sets_msg ?X (Hash ?Y) = (if ?X = Hash ?Y then {{}} else {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_dunno)),
    ("Anonymity.key_sets_msg_key",
     "key_sets_msg ?X (Key ?K) = (if ?X = Key ?K then {{}} else {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_dunno)),
    ("Anonymity.key_sets_msg_num",
     "key_sets_msg ?X (Num ?n) = (if ?X = Num ?n then {{}} else {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_dunno)),
    ("Anonymity.key_sets_msg_pwd",
     "key_sets_msg ?X (Pwd ?n) = (if ?X = Pwd ?n then {{}} else {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_dunno)),
    ("Anonymity.crypts_msg_mpair",
     "crypts_msg \<lbrace>?X, ?Y\<rbrace> =
      insert \<lbrace>?X, ?Y\<rbrace> (crypts_msg ?X Un crypts_msg ?Y)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 1)),
           template_app (template_hole 3, template_var 0))))),
    ("Anonymity.key_sets_msg_mpair",
     "key_sets_msg ?X \<lbrace>?Y, ?Z\<rbrace> =
      (if ?X = \<lbrace>?Y, ?Z\<rbrace> then {{}} else {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("Anonymity.key_sets_msg_mult",
     "key_sets_msg ?X (?A \<otimes> ?B) =
      (if ?X = ?A \<otimes> ?B then {{}} else {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("Anonymity.key_sets_msg_crypt",
     "key_sets_msg ?X (Crypt ?K ?Y) =
      (if ?X = Crypt ?K ?Y then {{}}
       else insert (InvKey ?K) ` key_sets_msg ?X ?Y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app
               (template_app (template_hole 10, template_var 1),
                template_var 0))
            )],
       template_dunno))]
