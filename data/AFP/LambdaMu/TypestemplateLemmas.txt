   [("Types.uniqueness",
     "?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>C ?c ==>
      ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>C ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Types.shift_eq", "?i = ?j ==> (?e\<langle>?i:?T\<rangle>) ?j = ?T",
     template_implication
      ([template_equation (template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3),
             template_var 0),
           template_var 2),
         template_var 0))),
    ("Types.shift_gt", "?j < ?i ==> (?e\<langle>?i:?T\<rangle>) ?j = ?e ?j",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0),
           template_var 3),
         template_app (template_var 1, template_var 3)))),
    ("Types.shift_lt",
     "?i < ?j ==> (?e\<langle>?i:?T\<rangle>) ?j = ?e (?j - 1)",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_var 3),
             template_var 0),
           template_var 2),
         template_app
          (template_var 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0))))),
    ("Types.shift_commute",
     "?e\<langle>?i:?U\<rangle>\<langle>0:?T\<rangle> =
      ?e\<langle>0:?T\<rangle>\<langle>Suc ?i:?U\<rangle>",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_var 1)),
           template_hole 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_hole 1),
               template_var 0)),
           template_app (template_hole 0, template_var 2)),
         template_var 1))),
    ("Types.uniqueness",
     "[| ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>T ?t : ?T1.0;
         ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>T ?t : ?T2.0 |]
      ==> ?T1.0 = ?T2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Types.typing_elims",
     "[| ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>T `?x : ?T;
         ?\<Gamma> ?x = ?T ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3),
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_app (template_var 4, template_var 2),
             template_var 1)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Types.typing_elims",
     "[| ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>C <?x>?t;
         ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>T ?t : ?\<Delta> ?x ==>
         ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 1),
                 template_app (template_var 3, template_var 2))
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Types.typing_elims",
     "[| ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>T \<mu>?T1.0:?t : ?T;
         [| ?T = ?T1.0;
            ?\<Gamma> , ?\<Delta>\<langle>0:?T1.0\<rangle> \<turnstile>\<^sub>C ?t |]
         ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation (template_var 1, template_var 3)],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 5),
                     template_app
                      (template_app
                        (template_app (template_hole 1, template_var 4),
                         template_hole 0),
                       template_var 3)),
                   template_var 2)
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Types.typing_elims",
     "[| ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>T ?t \<degree> ?s : ?T;
         !!T1. [| ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>T ?t : T1 \<rightarrow>
                            ?T;
                  ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>T ?s : T1 |]
               ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Types.typing_elims",
     "[| ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>T \<lambda>?T1.0:?t : ?T;
         !!T2. [| ?T = ?T1.0 \<rightarrow> T2;
                  ?\<Gamma>\<langle>0:?T1.0\<rangle> , ?\<Delta> \<turnstile>\<^sub>T ?t : T2 |]
               ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Types.type_arrow_elim",
     "[| ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>T ?t : ?T1.0 \<rightarrow>
                   ?T2.0;
         !!x. [| ?t = `x; ?\<Gamma> x = ?T1.0 \<rightarrow> ?T2.0 |] ==> ?P;
         !!t T1 s.
            [| ?t = t \<degree> s;
               ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>T t : T1 \<rightarrow>
                        ?T1.0 \<rightarrow> ?T2.0;
               ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>T s : T1 |]
            ==> ?P;
         !!t. [| ?t = \<lambda>?T1.0:t;
                 ?\<Gamma>\<langle>0:?T1.0\<rangle> , ?\<Delta> \<turnstile>\<^sub>T t : ?T2.0 |]
              ==> ?P;
         !!c. [| ?t = \<mu>?T1.0 \<rightarrow> ?T2.0:c;
                 ?\<Gamma> , ?\<Delta>\<langle>0:?T1.0 \<rightarrow>
           ?T2.0\<rangle> \<turnstile>\<^sub>C c |]
              ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 14, template_var 5),
                  template_var 4),
                template_var 3),
              template_app
               (template_app (template_hole 13, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0)))]
