Loading theory "Draft.Syntax" (required by "Draft.TypePreservationMoreTemplates" via "Draft.TypePreservation" via "Draft.ContextFacts" via "Draft.Reduction" via "Draft.Substitution" via "Draft.DeBruijn")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.TypePreservationMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.TypePreservationMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.TypePreservationMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.124s elapsed time, 0.514s cpu time, 0.043s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.TypePreservationMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Set_Algebras"
### 0.203s elapsed time, 0.827s cpu time, 0.043s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.TypePreservationMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.356s elapsed time, 1.427s cpu time, 0.120s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.TypePreservationMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.962s elapsed time, 3.649s cpu time, 0.802s GC time
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.039s elapsed time, 3.754s cpu time, 0.754s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  ctxt_app :: "ctxt => ctxt => ctxt"
Found termination order: "{}"
### theory "Draft.Syntax"
### 1.757s elapsed time, 5.984s cpu time, 0.990s GC time
Loading theory "Draft.DeBruijn" (required by "Draft.TypePreservationMoreTemplates" via "Draft.TypePreservation" via "Draft.ContextFacts" via "Draft.Reduction" via "Draft.Substitution")
Loading theory "Draft.Types" (required by "Draft.TypePreservationMoreTemplates" via "Draft.TypePreservation" via "Draft.ContextFacts")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  flv_trm :: "trm => nat => nat set"
  flv_cmd :: "cmd => nat => nat set"
consts
  fmv_trm :: "trm => nat => nat set"
  fmv_cmd :: "cmd => nat => nat set"
Proofs for inductive predicate(s) "typing_trm", "typing_cmd"
consts
  fmv_ctxt :: "ctxt => nat => nat set"
  Proving monotonicity ...
consts
  liftL_trm :: "trm => nat => trm"
  liftL_cmd :: "cmd => nat => cmd"
consts
  liftM_trm :: "trm => nat => trm"
  liftM_cmd :: "cmd => nat => cmd"
consts
  liftL_ctxt :: "ctxt => nat => ctxt"
consts
  liftM_ctxt :: "ctxt => nat => ctxt"
consts
  dropM_trm :: "trm => nat => trm"
  dropM_cmd :: "cmd => nat => cmd"
### theory "Draft.DeBruijn"
### 0.127s elapsed time, 0.385s cpu time, 0.000s GC time
Loading theory "Draft.Substitution" (required by "Draft.TypePreservationMoreTemplates" via "Draft.TypePreservation" via "Draft.ContextFacts" via "Draft.Reduction")
### theory "Draft.Types"
### 0.139s elapsed time, 0.422s cpu time, 0.000s GC time
consts
  subst_trm :: "trm => trm => nat => trm"
  subst_cmd :: "cmd => trm => nat => cmd"
consts
  ctxt_subst :: "ctxt => trm => trm"
consts
  struct_subst_trm :: "trm => nat => nat => ctxt => trm"
  struct_subst_cmd :: "cmd => nat => nat => ctxt => cmd"
### theory "Draft.Substitution"
### 0.102s elapsed time, 0.237s cpu time, 0.039s GC time
Loading theory "Draft.Reduction" (required by "Draft.TypePreservationMoreTemplates" via "Draft.TypePreservation" via "Draft.ContextFacts")
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "red_term", "red_cmd"
  Proving monotonicity ...
Proofs for inductive predicate(s) "beta_rtc_term"
  Proving monotonicity ...
Proofs for inductive predicate(s) "beta_rtc_command"
  Proving monotonicity ...
### theory "Draft.Reduction"
### 0.158s elapsed time, 0.333s cpu time, 0.043s GC time
Loading theory "Draft.ContextFacts" (required by "Draft.TypePreservationMoreTemplates" via "Draft.TypePreservation")
### theory "HOL-Library.Tree"
### 2.027s elapsed time, 6.428s cpu time, 1.029s GC time
Loading theory "Draft.Templates" (required by "Draft.TypePreservationMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.055s elapsed time, 0.111s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.TypePreservationMoreTemplates")
Proofs for inductive predicate(s) "typing_ctxt"
  Proving monotonicity ...
### theory "Draft.ContextFacts"
### 0.186s elapsed time, 0.372s cpu time, 0.000s GC time
Loading theory "Draft.TypePreservation" (required by "Draft.TypePreservationMoreTemplates")
### theory "Draft.TypePreservation"
### 0.067s elapsed time, 0.135s cpu time, 0.000s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.506s elapsed time, 0.766s cpu time, 0.043s GC time
Loading theory "Draft.TypePreservationMoreTemplates"
val templateLemmas =
   [("TypePreservation.type_preservation",
     "[| ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>C ?c;
         ?c \<^sub>C\<longlonglongrightarrow> ?d |]
      ==> ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>C ?d",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("TypePreservation.liftM_type",
     "?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>C ?c ==>
      ALL k.
         ?\<Gamma> , ?\<Delta>\<langle>k:?U\<rangle> \<turnstile>\<^sub>C liftM_cmd
                                     ?c k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("TypePreservation.liftL_type",
     "?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>C ?c ==>
      ALL k.
         ?\<Gamma>\<langle>k:?U\<rangle> , ?\<Delta> \<turnstile>\<^sub>C liftL_cmd
                                     ?c k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("TypePreservation.type_preservation",
     "[| ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>T ?t : ?T;
         ?t \<longlonglongrightarrow> ?s |]
      ==> ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>T ?s : ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3),
               template_var 0),
             template_var 1)
           ))),
    ("TypePreservation.liftM_type",
     "?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>T ?t : ?T ==>
      ALL k.
         ?\<Gamma> , ?\<Delta>\<langle>k:?U\<rangle> \<turnstile>\<^sub>T liftM_trm
                                     ?t k : ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("TypePreservation.liftL_type",
     "?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>T ?t : ?T ==>
      ALL k.
         ?\<Gamma>\<langle>k:?U\<rangle> , ?\<Delta> \<turnstile>\<^sub>T liftL_trm
                                     ?t k : ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("TypePreservation.liftM_ctxt_type",
     "?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>c\<^sub>t\<^sub>x\<^sub>t ?E : ?T \<Leftarrow> ?U ==>
      ?\<Gamma> , ?\<Delta>\<langle>?k:?T1.0\<rangle> \<turnstile>\<^sub>c\<^sub>t\<^sub>x\<^sub>t liftM_ctxt
                        ?E ?k : ?T \<Leftarrow> ?U",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 6),
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 5),
                       template_var 1),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1)),
               template_var 3),
             template_var 2)
           ))),
    ("TypePreservation.liftL_ctxt_type",
     "?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>c\<^sub>t\<^sub>x\<^sub>t ?E : ?T \<Leftarrow> ?U ==>
      ALL k.
         ?\<Gamma>\<langle>k:?T1.0\<rangle> , ?\<Delta> \<turnstile>\<^sub>c\<^sub>t\<^sub>x\<^sub>t liftL_ctxt
                          ?E k : ?T \<Leftarrow> ?U",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("TypePreservation.subst_type",
     "[| ?\<Gamma>1.0 , ?\<Delta> \<turnstile>\<^sub>C ?c;
         ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>T ?r : ?T1.0;
         ?\<Gamma>1.0 = ?\<Gamma>\<langle>?k:?T1.0\<rangle> |]
      ==> ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>C ?c[?r/?k]\<^sup>C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 5),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 6,
          template_app
           (template_app
             (template_app (template_hole 1, template_var 3),
              template_var 0),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_var 5),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 2),
               template_var 0))
           ))),
    ("TypePreservation.dropM_env",
     "[| ?\<Gamma> , ?\<Delta>1.0 \<turnstile>\<^sub>C ?c[?k=?x \<diamond>]\<^sup>C;
         ?\<Delta>1.0 = ?\<Delta>\<langle>?x:?\<Delta> ?x\<rangle> |]
      ==> ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>C dropM_cmd
                (?c[?k=?x \<diamond>]\<^sup>C) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 5),
                template_var 4),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 3),
                    template_var 2),
                  template_var 1),
                template_hole 3))
            ),
        template_equation
         (template_var 4,
          template_app
           (template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1),
            template_app (template_var 0, template_var 1)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 5),
               template_var 0),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_hole 3)),
               template_var 1))
           ))),
    ("TypePreservation.subst_type",
     "[| ?\<Gamma>1.0 , ?\<Delta> \<turnstile>\<^sub>T ?t : ?T;
         ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>T ?r : ?T1.0;
         ?\<Gamma>1.0 = ?\<Gamma>\<langle>?k:?T1.0\<rangle> |]
      ==> ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>T ?t[?r/?k]\<^sup>T : ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 6),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 7,
          template_app
           (template_app
             (template_app (template_hole 1, template_var 3),
              template_var 0),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 6),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 2),
                 template_var 0)),
             template_var 4)
           ))),
    ("TypePreservation.dropM_env",
     "[| ?\<Gamma> , ?\<Delta>1.0 \<turnstile>\<^sub>T ?t[?k=?x \<diamond>]\<^sup>T : ?T;
         ?\<Delta>1.0 = ?\<Delta>\<langle>?x:?\<Delta> ?x\<rangle> |]
      ==> ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>T dropM_trm
                (?t[?k=?x \<diamond>]\<^sup>T) ?x : ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 6),
                  template_var 5),
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_hole 3)),
              template_var 1)
            ),
        template_equation
         (template_var 5,
          template_app
           (template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2),
            template_app (template_var 0, template_var 2)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 6),
                 template_var 0),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 4, template_var 4),
                         template_var 3),
                       template_var 2),
                     template_hole 3)),
                 template_var 2)),
             template_var 1)
           ))),
    ("TypePreservation.struct_subst_type_command",
     "[| ?\<Gamma> , ?\<Delta>1.0 \<turnstile>\<^sub>C ?c;
         ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>c\<^sub>t\<^sub>x\<^sub>t ?E : ?U \<Leftarrow> ?T1.0;
         ?\<Delta>1.0 = ?\<Delta>\<langle>?\<alpha>:?T1.0\<rangle> |]
      ==> ?\<Gamma> , ?\<Delta>\<langle>?\<beta>:?U\<rangle> \<turnstile>\<^sub>C ?c[?\<alpha>=?\<beta> liftM_ctxt
                             ?E ?\<beta>]\<^sup>C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 8),
                template_var 7),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 8),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_var 7,
          template_app
           (template_app
             (template_app (template_hole 2, template_var 5),
              template_var 1),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 8),
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 0),
                 template_var 3)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 6),
                   template_var 1),
                 template_var 0),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0)))
           ))),
    ("TypePreservation.struct_subst_type",
     "[| ?\<Gamma> , ?\<Delta>1.0 \<turnstile>\<^sub>T ?t : ?T;
         ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>c\<^sub>t\<^sub>x\<^sub>t ?E : ?U \<Leftarrow> ?T1.0;
         ?\<Delta>1.0 = ?\<Delta>\<langle>?\<alpha>:?T1.0\<rangle> |]
      ==> ?\<Gamma> , ?\<Delta>\<langle>?\<beta>:?U\<rangle> \<turnstile>\<^sub>T ?t[?\<alpha>=?\<beta> liftM_ctxt
                             ?E ?\<beta>]\<^sup>T : ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 9),
                  template_var 8),
                template_var 7),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 9),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_var 8,
          template_app
           (template_app
             (template_app (template_hole 2, template_var 5),
              template_var 1),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 9),
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 5),
                     template_var 0),
                   template_var 3)),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 7),
                     template_var 1),
                   template_var 0),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 0))),
             template_var 6)
           ))),
    ("TypePreservation.dropM_type",
     "[| ?\<Gamma> , ?\<Delta>1.0 \<turnstile>\<^sub>C ?c;
         ?k ~: fmv_cmd ?c 0; ALL x<?k. ?\<Delta>1.0 x = ?\<Delta> x;
         ALL x>?k. ?\<Delta>1.0 x = ?\<Delta> (x - 1) |]
      ==> ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>C dropM_cmd ?c ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_app
                   (template_app (template_hole 8, template_var 2),
                    template_hole 7))
                )
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 11, template_var 4),
               template_var 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("TypePreservation.dropM_type",
     "[| ?\<Gamma> , ?\<Delta>1.0 \<turnstile>\<^sub>T ?t : ?T;
         ?k ~: fmv_trm ?t 0; ALL x<?k. ?\<Delta>1.0 x = ?\<Delta> x;
         ALL x>?k. ?\<Delta>1.0 x = ?\<Delta> (x - 1) |]
      ==> ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>T dropM_trm ?t ?k : ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_app
                   (template_app (template_hole 8, template_var 3),
                    template_hole 7))
                )
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 11, template_var 5),
                 template_var 0),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_var 2)
           ))),
    ("TypePreservation.struct_subst_command",
     "[| ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>T ?t : ?T;
         ?\<Delta> ?x = ?T;
         ?\<Gamma> , ?\<Delta>' \<turnstile>\<^sub>c\<^sub>t\<^sub>x\<^sub>t ?E : ?U \<Leftarrow> ?T1.0;
         ?\<Delta> = ?\<Delta>'\<langle>?\<alpha>:?T1.0\<rangle>;
         [| ?\<Gamma> , ?\<Delta>' \<turnstile>\<^sub>c\<^sub>t\<^sub>x\<^sub>t ?E : ?U \<Leftarrow> ?T1.0;
            ?\<Delta> = ?\<Delta>'\<langle>?\<alpha>:?T1.0\<rangle> |]
         ==> ?\<Gamma> , ?\<Delta>'\<langle>?\<beta>:?U\<rangle> \<turnstile>\<^sub>T ?t[?\<alpha>=?\<beta> liftM_ctxt
                                 ?E ?\<beta>]\<^sup>T : ?T |]
      ==> ?\<Gamma> , ?\<Delta>'\<langle>?\<beta>:?U\<rangle> \<turnstile>\<^sub>C (<?x>?t)[?\<alpha>=?\<beta> liftM_ctxt
                                    ?E ?\<beta>]\<^sup>C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 10),
                  template_var 9),
                template_var 8),
              template_var 7)
            ),
        template_equation
         (template_app (template_var 9, template_var 6), template_var 7),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_var 10),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_var 9,
          template_app
           (template_app
             (template_app (template_hole 5, template_var 5),
              template_var 1),
            template_var 2)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 7, template_var 10),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_implication
           ([template_equation
              (template_var 9,
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 5),
                   template_var 1),
                 template_var 2))],
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 9, template_var 10),
                      template_app
                       (template_app
                         (template_app (template_hole 5, template_var 5),
                          template_var 0),
                        template_var 3)),
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 4, template_var 8),
                          template_var 1),
                        template_var 0),
                      template_app
                       (template_app (template_hole 3, template_var 4),
                        template_var 0))),
                  template_var 7)
                )))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 10),
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 5),
                   template_var 0),
                 template_var 3)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 6),
                       template_var 8)),
                   template_var 1),
                 template_var 0),
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 0)))
           )))]:
   (string * thm * template) list
### theory "Draft.TypePreservationMoreTemplates"
### 0.343s elapsed time, 0.454s cpu time, 0.052s GC time
val it = (): unit
