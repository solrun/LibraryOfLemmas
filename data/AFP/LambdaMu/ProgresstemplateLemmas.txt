   [("Progress.progress",
     "[| ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>T ?t : ?T;
         lambda_closed ?t |]
      ==> is_nf ?t | (EX s. ?t \<longlonglongrightarrow> s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 1),
            template_hole 5),
          template_hole 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_app (template_hole 1, t_empty))
           ))),
    ("Progress.progress'",
     "[| ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>T ?t : ?T;
         lambda_closed ?t; ALL s. ~ ?t \<longlonglongrightarrow> s |]
      ==> is_nf ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 1),
            template_hole 5),
          template_hole 4),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Progress.progress'",
     "[| ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>C ?c; lambda_closedC ?c |]
      ==> ALL \<beta> t.
             ?c = <\<beta>>t -->
             (ALL d. ~ t \<longlonglongrightarrow> d) --> is_nf t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app (template_hole 10, template_var 0),
            template_hole 9),
          template_hole 8)],
       template_predicate (template_app (template_hole 7, t_empty))))]
