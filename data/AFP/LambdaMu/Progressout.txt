Loading theory "Draft.Syntax" (required by "Draft.ProgressMoreTemplates" via "Draft.Progress" via "Draft.TypePreservation" via "Draft.ContextFacts" via "Draft.Reduction" via "Draft.Substitution" via "Draft.DeBruijn")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.ProgressMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.ProgressMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.ProgressMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.123s elapsed time, 0.514s cpu time, 0.048s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.ProgressMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.203s elapsed time, 0.832s cpu time, 0.048s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.ProgressMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.326s elapsed time, 1.309s cpu time, 0.144s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.ProgressMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.BigO"
### 0.989s elapsed time, 3.754s cpu time, 0.843s GC time
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.057s elapsed time, 3.859s cpu time, 0.779s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  ctxt_app :: "ctxt => ctxt => ctxt"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "{}"
### theory "Draft.Syntax"
### 1.750s elapsed time, 5.984s cpu time, 1.032s GC time
Loading theory "Draft.DeBruijn" (required by "Draft.ProgressMoreTemplates" via "Draft.Progress" via "Draft.TypePreservation" via "Draft.ContextFacts" via "Draft.Reduction" via "Draft.Substitution")
Loading theory "Draft.Types" (required by "Draft.ProgressMoreTemplates" via "Draft.Progress" via "Draft.TypePreservation" via "Draft.ContextFacts")
consts
  flv_trm :: "trm => nat => nat set"
  flv_cmd :: "cmd => nat => nat set"
Proofs for inductive predicate(s) "typing_trm", "typing_cmd"
consts
  fmv_trm :: "trm => nat => nat set"
  fmv_cmd :: "cmd => nat => nat set"
  Proving monotonicity ...
consts
  fmv_ctxt :: "ctxt => nat => nat set"
consts
  liftL_trm :: "trm => nat => trm"
  liftL_cmd :: "cmd => nat => cmd"
consts
  liftM_trm :: "trm => nat => trm"
  liftM_cmd :: "cmd => nat => cmd"
consts
  liftL_ctxt :: "ctxt => nat => ctxt"
consts
  liftM_ctxt :: "ctxt => nat => ctxt"
consts
  dropM_trm :: "trm => nat => trm"
  dropM_cmd :: "cmd => nat => cmd"
### theory "Draft.Types"
### 0.126s elapsed time, 0.382s cpu time, 0.000s GC time
### theory "Draft.DeBruijn"
### 0.129s elapsed time, 0.389s cpu time, 0.000s GC time
Loading theory "Draft.Substitution" (required by "Draft.ProgressMoreTemplates" via "Draft.Progress" via "Draft.TypePreservation" via "Draft.ContextFacts" via "Draft.Reduction")
consts
  subst_trm :: "trm => trm => nat => trm"
  subst_cmd :: "cmd => trm => nat => cmd"
consts
  ctxt_subst :: "ctxt => trm => trm"
consts
  struct_subst_trm :: "trm => nat => nat => ctxt => trm"
  struct_subst_cmd :: "cmd => nat => nat => ctxt => cmd"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Substitution"
### 0.102s elapsed time, 0.220s cpu time, 0.041s GC time
Loading theory "Draft.Reduction" (required by "Draft.ProgressMoreTemplates" via "Draft.Progress" via "Draft.TypePreservation" via "Draft.ContextFacts")
Proofs for inductive predicate(s) "red_term", "red_cmd"
  Proving monotonicity ...
Proofs for inductive predicate(s) "beta_rtc_term"
  Proving monotonicity ...
### theory "HOL-Library.Tree"
### 1.979s elapsed time, 6.314s cpu time, 1.025s GC time
Loading theory "Draft.Templates" (required by "Draft.ProgressMoreTemplates" via "Draft.ExtrEqs")
Proofs for inductive predicate(s) "beta_rtc_command"
  Proving monotonicity ...
### theory "Draft.Reduction"
### 0.160s elapsed time, 0.333s cpu time, 0.044s GC time
Loading theory "Draft.ContextFacts" (required by "Draft.ProgressMoreTemplates" via "Draft.Progress" via "Draft.TypePreservation")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.070s elapsed time, 0.160s cpu time, 0.044s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.ProgressMoreTemplates")
Proofs for inductive predicate(s) "typing_ctxt"
  Proving monotonicity ...
### theory "Draft.ContextFacts"
### 0.186s elapsed time, 0.371s cpu time, 0.000s GC time
Loading theory "Draft.TypePreservation" (required by "Draft.ProgressMoreTemplates" via "Draft.Progress")
### theory "Draft.TypePreservation"
### 0.068s elapsed time, 0.136s cpu time, 0.000s GC time
Loading theory "Draft.Progress" (required by "Draft.ProgressMoreTemplates")
Found termination order: "{}"
### theory "Draft.Progress"
### 0.096s elapsed time, 0.217s cpu time, 0.051s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.518s elapsed time, 0.888s cpu time, 0.051s GC time
Loading theory "Draft.ProgressMoreTemplates"
val templateLemmas =
   [("Progress.progress",
     "[| ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>T ?t : ?T;
         lambda_closed ?t |]
      ==> is_nf ?t | (EX s. ?t \<longlonglongrightarrow> s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 1),
            template_hole 5),
          template_hole 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_app (template_hole 1, t_empty))
           ))),
    ("Progress.progress'",
     "[| ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>T ?t : ?T;
         lambda_closed ?t; ALL s. ~ ?t \<longlonglongrightarrow> s |]
      ==> is_nf ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 1),
            template_hole 5),
          template_hole 4),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Progress.progress'",
     "[| ?\<Gamma> , ?\<Delta> \<turnstile>\<^sub>C ?c; lambda_closedC ?c |]
      ==> ALL \<beta> t.
             ?c = <\<beta>>t -->
             (ALL d. ~ t \<longlonglongrightarrow> d) --> is_nf t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app (template_hole 10, template_var 0),
            template_hole 9),
          template_hole 8)],
       template_predicate (template_app (template_hole 7, t_empty))))]:
   (string * thm * template) list
### theory "Draft.ProgressMoreTemplates"
### 0.343s elapsed time, 0.471s cpu time, 0.038s GC time
val it = (): unit
