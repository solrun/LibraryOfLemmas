   [("Gauss_Jordan_Elim_Fun.gauss_jordan_correct",
     "gauss_jordan ?A ?n = Some ?B ==> solution ?A ?n (%j. ?B j ?n)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             t_empty)
           ))),
    ("Gauss_Jordan_Elim_Fun.gauss_jordan_complete",
     "[| ?m <= ?n; usolution ?A ?m ?n ?x |]
      ==> EX B. gauss_jordan ?A ?m = Some B",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Gauss_Jordan_Elim_Fun.lem1",
     "(SUM x:?A. ?f x * (?a * ?g x)) = ?a * (SUM x:?A. ?f x * ?g x)",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)))),
    ("Gauss_Jordan_Elim_Fun.lem2",
     "(SUM x:?A. ?f x * (?g x * ?a)) = ?a * (SUM x:?A. ?f x * ?g x)",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)))),
    ("Gauss_Jordan_Elim_Fun.solution_upd1",
     "?c ~= (0::?'a) ==>
      solution (?A(?p := %j. ?A ?p j / ?c)) ?n ?x = solution ?A ?n ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2),
                 t_empty)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1),
           template_var 0)))),
    ("Gauss_Jordan_Elim_Fun.solution_swap",
     "[| ?p1.0 < ?n; ?p2.0 < ?n |]
      ==> solution (?A o Transposition.transpose ?p1.0 ?p2.0) ?n ?x =
          solution ?A ?n ?x",
     template_implication
      ([template_inequation (less_than, template_var 4, template_var 3),
        template_inequation (less_than, template_var 2, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 2))),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_var 3),
           template_var 0)))),
    ("Gauss_Jordan_Elim_Fun.non_null_if_pivot",
     "[| usolution ?A ?m ?n ?x; ?q < ?m |]
      ==> EX p<?m. ?A p ?q ~= (0::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_than, template_var 0, template_var 3)],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Gauss_Jordan_Elim_Fun.gauss_jordan_lemma",
     "[| ?m <= ?n; Gauss_Jordan_Elim_Fun.unit ?A ?m ?n;
         gauss_jordan ?A ?m = Some ?B |]
      ==> Gauss_Jordan_Elim_Fun.unit ?B 0 ?n &
          solution ?A ?n (%j. ?B j ?n)",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 1), template_var 3),
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 6, template_var 0),
                   template_hole 1),
                 template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2),
               t_empty))
           ))),
    ("Gauss_Jordan_Elim_Fun.solution_upd_but1",
     "[| ?ap = ?A ?p; ALL i j. i ~= ?p --> ?a i j = ?A i j; ?p < ?n |]
      ==> solution (%i. if i = ?p then ?ap else (%j. ?a i j - ?c i * ?ap j))
           ?n ?x =
          solution ?A ?n ?x",
     template_implication
      ([template_equation
         (template_var 6, template_app (template_var 5, template_var 4)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_inequation (less_than, template_var 4, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, t_empty), template_var 2),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 5),
             template_var 2),
           template_var 0))))]
