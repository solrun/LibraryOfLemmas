   [("SepAuto.assn_one_left", "emp * ?P = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("SepAuto.lim_set_gen", "lim (?h(| lim := ?l |)) = ?l",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)),
       template_var 1)),
    ("SepAuto.assn_times_comm", "?P * ?Q = ?Q * ?P",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("SepAuto.Array_lim_set", "lim (Array.set ?p ?xs ?h) = lim ?h",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("SepAuto.one_assn_rule", "(?h \<Turnstile> emp) = (addrOf ?h = {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("SepAuto.execute_return'", "execute (return ?x) ?h = Some (?x, ?h)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SepAuto.top_assn_rule",
     "(pHeap ?h ?as \<Turnstile> true) = in_range (?h, ?as)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SepAuto.pure_conj", "\<up> (?P & ?Q) = \<up> ?P * \<up> ?Q",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("SepAuto.pure_assn_rule",
     "(?h \<Turnstile> \<up> ?b) = (addrOf ?h = {} & ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_dunno)),
    ("SepAuto.assn_times_assoc", "?P * ?Q * ?R = ?P * (?Q * ?R)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SepAuto.refs_on_Array_set",
     "refs (Array.set ?p ?xs ?h) ?t ?i = refs ?h ?t ?i",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0))),
    ("SepAuto.refs_on_Array_alloc",
     "refs (snd (Array.alloc ?xs ?h)) ?t ?i = refs ?h ?t ?i",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0))),
    ("SepAuto.entails_pure'",
     "(~ (\<up> ?b \<Longrightarrow>\<^sub>A ?Q)) =
      (~ (emp \<Longrightarrow>\<^sub>A ?Q) & ?b)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 0),
               template_var 0))),
         template_var 1))),
    ("SepAuto.norm_pre_pure_iff2",
     "<\<up> ?b> ?c <?Q> = (?b --> <emp> ?c <?Q>)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 0),
             template_var 1),
           template_var 0)))),
    ("SepAuto.mod_pure_star_dist",
     "(?h \<Turnstile> ?P * \<up> ?b) = (?h \<Turnstile> ?P & ?b)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0))),
    ("SepAuto.arrays_on_Ref_alloc",
     "arrays (snd (Ref.alloc ?x ?h)) ?t ?i = arrays ?h ?t ?i",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0))),
    ("SepAuto.arrays_on_Ref_set",
     "arrays (Ref.set ?p ?x ?h) ?t ?i = arrays ?h ?t ?i",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0))),
    ("SepAuto.mod_ex_dist",
     "(?h \<Turnstile> (\<exists>\<^sub>Ax. ?P x)) =
      (EX x. ?h \<Turnstile> ?P x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, t_empty)),
       template_app (template_hole 0, t_empty))),
    ("SepAuto.ex_distrib_star",
     "(\<exists>\<^sub>Ax. ?P x * ?Q) = (\<exists>\<^sub>Ax. ?P x) * ?Q",
     template_equation
      (template_app (template_hole 1, t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, t_empty)),
         template_var 0))),
    ("SepAuto.pre_pure_rule'",
     "(~ <\<up> ?b> ?f <?Q>) = (~ <emp> ?f <?Q> & ?b)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 2)),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 0),
                 template_var 1),
               template_var 0))),
         template_var 2))),
    ("SepAuto.entails_pure",
     "(~ (?P * \<up> ?b \<Longrightarrow>\<^sub>A ?Q)) =
      (~ (?P \<Longrightarrow>\<^sub>A ?Q) & ?b)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app (template_hole 1, template_var 1))),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0))),
         template_var 1))),
    ("SepAuto.norm_pre_pure_iff",
     "<?P * \<up> ?b> ?c <?Q> = (?b --> <?P> ?c <?Q>)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_app (template_hole 1, template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 1),
           template_var 0)))),
    ("SepAuto.entails_ex",
     "(~ (\<exists>\<^sub>Ax. ?P x \<Longrightarrow>\<^sub>A ?Q)) =
      (EX x. ~ (?P x \<Longrightarrow>\<^sub>A ?Q))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 1, t_empty)),
           template_var 0)),
       template_app (template_hole 0, t_empty))),
    ("SepAuto.pre_pure_rule",
     "(~ <?P * \<up> ?b> ?f <?Q>) = (~ <?P> ?f <?Q> & ?b)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_app (template_hole 1, template_var 2))),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 1),
               template_var 0))),
         template_var 2))),
    ("SepAuto.pre_ex_rule",
     "(~ <\<exists>\<^sub>Ax. ?P x> ?f <?Q>) = (EX x. ~ <?P x> ?f <?Q>)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_hole 2, template_app (template_hole 1, t_empty)),
             template_var 1),
           template_var 0)),
       template_app (template_hole 0, t_empty))),
    ("SepAuto.snga_assn_rule",
     "(pHeap ?h ?as \<Turnstile> ?r \<mapsto>\<^sub>a ?x) =
      (Array.get ?h ?r = ?x &
       ?as = {addr_of_array ?r} & addr_of_array ?r < lim ?h)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 9, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("SepAuto.sngr_assn_rule",
     "(pHeap ?h ?as \<Turnstile> ?r \<mapsto>\<^sub>r ?x) =
      (Ref.get ?h ?r = ?x &
       ?as = {addr_of_ref ?r} & addr_of_ref ?r < lim ?h)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 9, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("SepAuto.mod_star_conv",
     "(pHeap ?h ?as \<Turnstile> ?A * ?B) =
      (EX as1 as2.
          ?as = as1 Un as2 &
          as1 Int as2 = {} &
          pHeap ?h as1 \<Turnstile> ?A & pHeap ?h as2 \<Turnstile> ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app (template_hole 5, t_empty)))]
