   [("Connectivity.connected_rel_trans", "trans (connected_rel ?n ?S)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Connectivity.nonempty_is_not_path", "~ is_path ?n ?S []",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0),
               template_hole 0)
             )
         )),
    ("Connectivity.connected_rel_init",
     "connected_rel ?n {} = uf_init_rel ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Connectivity.is_path_nonempty", "is_path ?n ?S ?p ==> ?p ~= []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Connectivity.connected_rel_iff",
     "((?a, ?b) : connected_rel ?n ?S) = has_path ?n ?S ?a ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 3),
         template_var 2))),
    ("Connectivity.path_join_hd",
     "?p ~= [] ==> hd (path_join ?p ?q) = hd ?p",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 1)))),
    ("Connectivity.has_path_refl",
     "[| is_valid_graph ?n ?S; ?a < ?n |] ==> has_path ?n ?S ?a ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0),
             template_var 0)
           ))),
    ("Connectivity.is_path_extend",
     "[| is_path ?n ?S ?p; ?S <= ?T |] ==> is_path ?n ?T ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0),
             template_var 1)
           ))),
    ("Connectivity.connected_rel_ind_compute",
     "is_valid_graph ?n (set ?es) ==>
      connected_rel_ind ?n ?es (length ?es) = connected_rel ?n (set ?es)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 4, template_var 0))))),
    ("Connectivity.connected_rel_refl",
     "[| is_valid_graph ?n ?S; ?a < ?n |]
      ==> (?a, ?a) : connected_rel ?n ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("Connectivity.has_path_single1",
     "[| is_valid_graph ?n ?S; (?a, ?b) : ?S |] ==> has_path ?n ?S ?a ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Connectivity.has_path_single2",
     "[| is_valid_graph ?n ?S; (?a, ?b) : ?S |] ==> has_path ?n ?S ?b ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Connectivity.has_path_extend",
     "[| has_path ?n ?S ?i ?j; ?S <= ?T |] ==> has_path ?n ?T ?i ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("Connectivity.path_join_last",
     "[| joinable ?p ?q; ?q ~= [] |] ==> last (path_join ?p ?q) = last ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Connectivity.has_path_trans",
     "[| has_path ?n ?S ?i ?j; has_path ?n ?S ?j ?k |]
      ==> has_path ?n ?S ?i ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Connectivity.connected_rel_ind_rule",
     "[| is_valid_graph ?n (set ?es); ?k <= length ?es |]
      ==> connected_rel_ind ?n ?es ?k =
          connected_rel ?n (set (take ?k ?es))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, template_var 1))
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)))))),
    ("Connectivity.path_join_is_path",
     "[| joinable ?p ?q; is_path ?n ?S ?p; is_path ?n ?S ?q |]
      ==> is_path ?n ?S (path_join ?p ?q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2))
           ))),
    ("Connectivity.connected_rel_union",
     "is_valid_graph ?n (?S Un {(?a, ?b)}) ==>
      connected_rel ?n (?S Un {(?a, ?b)}) =
      per_union (connected_rel ?n ?S) ?a ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 1),
                      template_var 0)),
                  template_hole 3)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 0)),
               template_hole 3))),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_var 1),
           template_var 0)))),
    ("Connectivity.is_path_per_union",
     "is_valid_graph ?n (?S Un {(?a, ?b)}) ==>
      has_path ?n (?S Un {(?a, ?b)}) ?i ?j =
      ((?i, ?j) : per_union (connected_rel ?n ?S) ?a ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 5),
              template_app
               (template_app (template_hole 8, template_var 4),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 3),
                      template_var 2)),
                  template_hole 5)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 5),
               template_app
                (template_app (template_hole 8, template_var 4),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_var 3),
                       template_var 2)),
                   template_hole 5))),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 6, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 4)),
               template_var 3),
             template_var 2)))))]
