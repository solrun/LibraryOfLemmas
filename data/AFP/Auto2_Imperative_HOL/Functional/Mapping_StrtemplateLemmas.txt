   [("Mapping_Str.keys_of_map_update_all",
     "keys_of (map_update_all ?f ?M) = keys_of ?M",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Mapping_Str.keys_of_delete",
     "keys_of (delete_map ?x ?M) = keys_of ?M - {?x}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 4, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Mapping_Str.map_of_alist_nil",
     "has_key_alist ?ys ?x =
      (map_of_alist ?ys\<langle>?x\<rangle> ~= None)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_var 0),
             template_hole 0)
           ))),
    ("Mapping_Str.keys_of_iff",
     "(?x : keys_of ?M) = (?M\<langle>?x\<rangle> ~= None)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1),
             template_hole 0)
           ))),
    ("Mapping_Str.map_of_alist_to_aset",
     "unique_keys_set (set ?xs) ==>
      map_of_aset (set ?xs) = map_of_alist ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Mapping_Str.map_of_alist_nil'",
     "(?x : set (map fst ?ys)) =
      (map_of_alist ?ys\<langle>?x\<rangle> ~= None)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 0)))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_var 1),
             template_hole 0)
           ))),
    ("Mapping_Str.keys_of_map_constr",
     "(?i : keys_of (map_constr ?S ?f ?n)) = (?S ?i & ?i < ?n)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 3),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 1, template_app (template_var 2, template_var 3)),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("Mapping_Str.meval_ext",
     "ALL x. ?M\<langle>x\<rangle> = ?N\<langle>x\<rangle> ==> ?M = ?N",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Mapping_Str.map_of_alist_some",
     "map_of_alist ?xs\<langle>?k\<rangle> = Some ?v ==>
      (?k, ?v) : set ?xs",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 2)),
            template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Mapping_Str.map_of_asetD1",
     "map_of_aset ?S\<langle>?a\<rangle> = None ==> ALL b. (?a, b) ~: ?S",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1)),
            template_var 0),
          template_hole 4)],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Mapping_Str.map_of_asetI2",
     "ALL b. (?a, b) ~: ?S ==> map_of_aset ?S\<langle>?a\<rangle> = None",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_hole 0))),
    ("Mapping_Str.map_update_all_impl_correct",
     "ALL i:keys_of ?M. i < ?n ==>
      map_update_all_impl ?f ?M ?n = map_update_all ?f ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Mapping_Str.map_of_asetI1",
     "[| unique_keys_set ?S; (?a, ?b) : ?S |]
      ==> map_of_aset ?S\<langle>?a\<rangle> = Some ?b",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Mapping_Str.map_of_asetD2",
     "[| unique_keys_set ?S; map_of_aset ?S\<langle>?a\<rangle> = Some ?b |]
      ==> (?a, ?b) : ?S",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 2)),
            template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 2)
           ))),
    ("Mapping_Str.map_constr_eval",
     "map_constr ?S ?f ?n =
      Map (%i. if i < ?n then if ?S i then Some (?f i) else None
               else None)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Mapping_Str.unique_keys_setD",
     "[| unique_keys_set ?S; (?i, ?x) : ?S; (?i, ?y) : ?S |] ==> ?x = ?y",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 0)),
              template_var 3)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Mapping_Str.map_update_all_impl_ind",
     "map_update_all_impl ?f ?M ?n =
      Map (%i. if i < ?n then if i : keys_of ?M then Some (?f i) else None
               else ?M\<langle>i\<rangle>)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 8, template_var 2), template_var 1),
         template_var 0),
       template_app (template_hole 7, t_empty))),
    ("Mapping_Str.map_of_aset_insert",
     "unique_keys_set (?S Un {(?k, ?v)}) ==>
      map_of_aset (?S Un {(?k, ?v)}) =
       map_of_aset ?S { ?k \<rightarrow> ?v }",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 2),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 1),
                      template_var 0)),
                  template_hole 3)))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 0)),
               template_hole 3))),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 2)),
             template_var 1),
           template_var 0)))),
    ("Mapping_Str.map_of_aset_delete",
     "[| unique_keys_set ?S; (?k, ?v) : ?S |]
      ==> map_of_aset (?S - {(?k, ?v)}) = delete_map ?k (map_of_aset ?S)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 0)),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_var 0)),
               template_hole 1))),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 4, template_var 2))))),
    ("Mapping_Str.map_of_alist_insert",
     "[| set ?xs' = set ?xs Un {?x}; unique_keys_set (set ?xs') |]
      ==> map_of_alist ?xs' =
           map_of_alist ?xs { fst ?x \<rightarrow> snd ?x }",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 2),
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 9, template_var 1)),
            template_app
             (template_app (template_hole 7, template_var 0),
              template_hole 6))),
        template_predicate
         (
            template_app
             (template_hole 5,
              template_app (template_hole 9, template_var 2))
            )],
       template_equation
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 3, template_var 1)),
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))))),
    ("Mapping_Str.map_of_alist_delete",
     "[| set ?xs' = set ?xs - {?x}; unique_keys_set (set ?xs);
         ?x : set ?xs |]
      ==> map_of_alist ?xs' = delete_map (fst ?x) (map_of_alist ?xs)",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 2),
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 9, template_var 1)),
            template_app
             (template_app (template_hole 7, template_var 0),
              template_hole 6))),
        template_predicate
         (
            template_app
             (template_hole 5,
              template_app (template_hole 9, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 9, template_var 1))
            )],
       template_equation
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_app (template_hole 2, template_var 1))))),
    ("Mapping_Str.map_of_aset_update",
     "[| unique_keys_set ?S; (?k, ?v) : ?S |]
      ==> map_of_aset (?S - {(?k, ?v)} Un {(?k, ?v')}) =
           map_of_aset ?S { ?k \<rightarrow> ?v' }",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1)),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 7, template_var 2),
                       template_var 1)),
                   template_hole 1))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 7, template_var 2),
                   template_var 0)),
               template_hole 1))),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 5, template_var 3)),
             template_var 2),
           template_var 0)))),
    ("Mapping_Str.map_of_alist_update",
     "[| set ?xs' = set ?xs - {(?k, ?v)} Un {(?k, ?v')};
         unique_keys_set (set ?xs); (?k, ?v) : set ?xs |]
      ==> map_of_alist ?xs' =  map_of_alist ?xs { ?k \<rightarrow> ?v' }",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 4),
          template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 10, template_var 3)),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 2),
                      template_var 1)),
                  template_hole 5))),
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 0)),
              template_hole 5))),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app (template_hole 10, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1)),
              template_app (template_hole 10, template_var 3))
            )],
       template_equation
        (template_app (template_hole 1, template_var 4),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 3)),
             template_var 2),
           template_var 0))))]
