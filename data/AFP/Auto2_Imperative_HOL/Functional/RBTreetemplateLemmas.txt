   [("RBTree.rbt_inorder_preserve_set",
     "rbt_set ?t = set (rbt_in_traverse ?t)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("RBTree.cl_inv_to_cl_inv'", "cl_inv ?t ==> cl_inv' ?t",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("RBTree.ins_non_Leaf", "ins ?x ?v ?t ~= rbt.Leaf",
     template_negation
      (
         template_equation
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0),
           template_hole 0)
         )),
    ("RBTree.rbt_in_traverse_fst",
     "map fst (rbt_in_traverse_pairs ?t) = rbt_in_traverse ?t",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("RBTree.paint_in_traverse_pairs",
     "rbt_in_traverse_pairs (paint ?c ?t) = rbt_in_traverse_pairs ?t",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("RBTree.balance_non_Leaf", "balance ?l ?k ?v ?r ~= rbt.Leaf",
     template_negation
      (
         template_equation
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0),
           template_hole 0)
         )),
    ("RBTree.rbt_inorder_sorted",
     "rbt_sorted ?t = strict_sorted (map fst (rbt_in_traverse_pairs ?t))",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("RBTree.paint_bd_inv", "bd_inv ?t ==> bd_inv (paint ?c ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("RBTree.paint_cl_inv'", "cl_inv' ?t ==> cl_inv' (paint ?c ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("RBTree.delete_is_rbt", "is_rbt ?t ==> is_rbt (delete ?x ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("RBTree.delete_sorted", "rbt_sorted ?t ==> rbt_sorted (delete ?x ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("RBTree.cl_inv_ins", "cl_inv ?t ==> cl_inv' (ins ?x ?v ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("RBTree.insert_is_rbt", "is_rbt ?t ==> is_rbt (rbt_insert ?x ?v ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("RBTree.insert_sorted",
     "rbt_sorted ?t ==> rbt_sorted (rbt_insert ?x ?v ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("RBTree.not_B", "?c ~= B ==> ?c = R",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_equation (template_var 0, template_hole 0))),
    ("RBTree.not_R", "?c ~= R ==> ?c = B",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_equation (template_var 0, template_hole 0))),
    ("RBTree.combine_in_traverse_pairs",
     "rbt_in_traverse_pairs (combine ?lt ?rt) =
      rbt_in_traverse_pairs ?lt @ rbt_in_traverse_pairs ?rt",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("RBTree.red_not_leaf", "cl ?t = R ==> ?t ~= rbt.Leaf",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("RBTree.rbt_search_correct",
     "rbt_sorted ?t ==> rbt_search ?t ?x = rbt_map ?t\<langle>?x\<rangle>",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("RBTree.cl_inv'B", "[| cl_inv' ?t; cl ?t = B |] ==> cl_inv ?t",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 0)),
        template_equation
         (template_app (template_hole 2, template_var 0), template_hole 1)],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("RBTree.del_in_traverse_pairs",
     "rbt_sorted ?t ==>
      rbt_in_traverse_pairs (del ?x ?t) =
      remove_elt_pairs ?x (rbt_in_traverse_pairs ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 2, template_var 1))))),
    ("RBTree.delete_rbt_map",
     "rbt_sorted ?t ==>
      rbt_map (delete ?x ?t) = delete_map ?x (rbt_map ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 2, template_var 1))))),
    ("RBTree.is_rbt_rec",
     "is_rbt (rbt.Node ?l ?c ?k ?v ?r) ==> is_rbt ?l & is_rbt ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 4)),
             template_app (template_hole 2, template_var 0))
           ))),
    ("RBTree.rbt_sorted_lr",
     "rbt_sorted (rbt.Node ?l ?c ?k ?v ?r) ==>
      rbt_sorted ?l & rbt_sorted ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 4)),
             template_app (template_hole 2, template_var 0))
           ))),
    ("RBTree.balance_cl2",
     "[| cl_inv ?l; cl_inv' ?r |] ==> cl_inv (balance ?l ?k ?v ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 3)),
        template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("RBTree.balR_cl'",
     "[| cl_inv ?l; cl_inv' ?r |] ==> cl_inv' (balR ?l ?k ?v ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 3)),
        template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("RBTree.balance_cl1",
     "[| cl_inv' ?l; cl_inv ?r |] ==> cl_inv (balance ?l ?k ?v ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 3)),
        template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("RBTree.balL_cl'",
     "[| cl_inv' ?l; cl_inv ?r |] ==> cl_inv' (balL ?l ?k ?v ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 3)),
        template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("RBTree.rbt_balanced",
     "is_rbt ?t ==> max_depth ?t <= 2 * min_depth ?t + 1",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 7, template_var 0),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2))),
               template_app (template_hole 1, template_var 0))),
           template_hole 0)))),
    ("RBTree.ins_inorder_pairs",
     "rbt_sorted ?t ==>
      rbt_in_traverse_pairs (ins ?x ?v ?t) =
      ordered_insert_pairs ?x ?v (rbt_in_traverse_pairs ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_app (template_hole 2, template_var 2))))),
    ("RBTree.insert_rbt_map",
     "rbt_sorted ?t ==>
      rbt_map (rbt_insert ?x ?v ?t) =  rbt_map ?t { ?x \<rightarrow> ?v }",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 2)),
             template_var 1),
           template_var 0)))),
    ("RBTree.cl_invI",
     "[| cl_inv ?l; cl_inv ?r |] ==> cl_inv (rbt.Node ?l B ?k ?v ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 3)),
        template_predicate
         (template_app (template_hole 2, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_hole 0),
                   template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("RBTree.cl_inv'I",
     "[| cl_inv ?l; cl_inv ?r |] ==> cl_inv' (rbt.Node ?l ?c ?k ?v ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 4)),
        template_predicate
         (template_app (template_hole 2, template_var 3))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 2),
                   template_var 1),
                 template_var 0),
               template_var 3))
           ))),
    ("RBTree.balL_in_traverse_pairs",
     "rbt_in_traverse_pairs (balL ?l ?k ?v ?r) =
      rbt_in_traverse_pairs ?l @ (?k, ?v) # rbt_in_traverse_pairs ?r",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 4, template_var 3)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app (template_hole 4, template_var 0))))),
    ("RBTree.balR_in_traverse_pairs",
     "rbt_in_traverse_pairs (balR ?l ?k ?v ?r) =
      rbt_in_traverse_pairs ?l @ (?k, ?v) # rbt_in_traverse_pairs ?r",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 4, template_var 3)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app (template_hole 4, template_var 0))))),
    ("RBTree.balance_inorder_pairs",
     "rbt_in_traverse_pairs (balance ?l ?k ?v ?r) =
      rbt_in_traverse_pairs ?l @ (?k, ?v) # rbt_in_traverse_pairs ?r",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 4, template_var 3)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app (template_hole 4, template_var 0))))),
    ("RBTree.balanceR_inorder_pairs",
     "rbt_in_traverse_pairs (balanceR ?l ?k ?v ?r) =
      rbt_in_traverse_pairs ?l @ (?k, ?v) # rbt_in_traverse_pairs ?r",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 4, template_var 3)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app (template_hole 4, template_var 0))))),
    ("RBTree.two_distrib", "2 * (?a + 1) = 2 * ?a + 2",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_hole 2))),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2))),
             template_var 0)),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_hole 2))))),
    ("RBTree.del_cl",
     "cl_inv ?t ==>
      if cl ?t = R then cl_inv (del ?x ?t) else cl_inv' (del ?x ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 1)),
                   template_hole 2)),
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 1))),
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)))
           ))),
    ("RBTree.bd_inv_ins",
     "bd_inv ?t ==>
      bd_inv (ins ?x ?v ?t) & black_depth ?t = black_depth (ins ?x ?v ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 0),
                   template_var 2))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 0),
                   template_var 2))))
           ))),
    ("RBTree.balR_cl",
     "[| cl_inv ?l; cl_inv' ?r; cl ?l = B |] ==> cl_inv (balR ?l ?k ?v ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate (template_app (template_hole 4, template_var 2)),
        template_equation
         (template_app (template_hole 2, template_var 3), template_hole 1)],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("RBTree.balL_cl",
     "[| cl_inv' ?l; cl_inv ?r; cl ?r = B |] ==> cl_inv (balL ?l ?k ?v ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate (template_app (template_hole 4, template_var 2)),
        template_equation
         (template_app (template_hole 2, template_var 2), template_hole 1)],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("RBTree.balance_bdinv",
     "[| bd_inv ?l; bd_inv ?r; black_depth ?l = black_depth ?r |]
      ==> bd_inv (balance ?l ?k ?v ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate (template_app (template_hole 3, template_var 2)),
        template_equation
         (template_app (template_hole 1, template_var 3),
          template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("RBTree.bd_invI",
     "[| bd_inv ?l; bd_inv ?r; black_depth ?l = black_depth ?r |]
      ==> bd_inv (rbt.Node ?l ?c ?k ?v ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 4)),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_equation
         (template_app (template_hole 1, template_var 4),
          template_app (template_hole 1, template_var 3))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 2),
                   template_var 1),
                 template_var 0),
               template_var 3))
           ))),
    ("RBTree.paint_bd",
     "[| bd_inv ?t; ?t ~= rbt.Leaf; cl ?t = B |]
      ==> black_depth (paint R ?t) = black_depth ?t - 1",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 9)),
        template_equation
         (template_app (template_hole 7, template_var 0), template_hole 6)],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 4, template_var 0)),
           template_hole 0)))),
    ("RBTree.balance_bd",
     "[| bd_inv ?l; bd_inv ?r; black_depth ?l = black_depth ?r |]
      ==> black_depth (balance ?l ?k ?v ?r) = black_depth ?l + 1",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_equation
         (template_app (template_hole 3, template_var 3),
          template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1),
               template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 3)),
           template_hole 0)))),
    ("RBTree.combine_cl",
     "[| cl_inv ?lt; cl_inv ?rt |]
      ==> (cl ?lt = B --> cl ?rt = B --> cl_inv (combine ?lt ?rt)) &
          cl_inv' (combine ?lt ?rt)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_var 1)),
                     template_hole 2)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app (template_hole 3, template_var 0)),
                       template_hole 2)),
                   template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 0))))),
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)))
           ))),
    ("RBTree.combine_bd",
     "[| bd_inv ?lt; bd_inv ?rt; black_depth ?lt = black_depth ?rt |]
      ==> bd_inv (combine ?lt ?rt) &
          black_depth (combine ?lt ?rt) = black_depth ?lt",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0))),
               template_app (template_hole 2, template_var 1)))
           ))),
    ("RBTree.cl_inv'R",
     "[| cl_inv' (rbt.Node ?l R ?k ?v ?r); cl ?l = B; cl ?r = B |]
      ==> cl_inv (rbt.Node ?l R ?k ?v ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 5, template_var 3),
                      template_hole 4),
                    template_var 2),
                  template_var 1),
                template_var 0))
            ),
        template_equation
         (template_app (template_hole 2, template_var 3), template_hole 1),
        template_equation
         (template_app (template_hole 2, template_var 0), template_hole 1)],
       template_predicate
        (
           template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 5, template_var 3),
                     template_hole 4),
                   template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("RBTree.del_bd",
     "[| bd_inv ?t; cl_inv ?t |]
      ==> bd_inv (del ?x ?t) &
          (if cl ?t = R then black_depth (del ?x ?t) = black_depth ?t
           else black_depth (del ?x ?t) = black_depth ?t - 1)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate
         (template_app (template_hole 10, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 8, template_var 0),
                   template_var 1))),
             template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_var 1)),
                     template_hole 4)),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 8, template_var 0),
                         template_var 1))),
                   template_app (template_hole 2, template_var 1))),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 8, template_var 0),
                       template_var 1))),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 2, template_var 1)),
                   template_hole 0))))
           ))),
    ("RBTree.balR_bd",
     "[| bd_inv ?l; bd_inv ?r; cl_inv ?l;
         black_depth ?l = black_depth ?r + 1 |]
      ==> bd_inv (balR ?l ?k ?v ?r) &
          black_depth (balR ?l ?k ?v ?r) = black_depth ?l",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate (template_app (template_hole 6, template_var 3)),
        template_equation
         (template_app (template_hole 4, template_var 3),
          template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 4, template_var 2)),
            template_hole 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 1),
                     template_var 0),
                   template_var 2))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 3),
                         template_var 1),
                       template_var 0),
                     template_var 2))),
               template_app (template_hole 4, template_var 3)))
           ))),
    ("RBTree.balL_bd'",
     "[| bd_inv ?l; bd_inv ?r; cl_inv ?r;
         black_depth ?l + 1 = black_depth ?r |]
      ==> bd_inv (balL ?l ?k ?v ?r) &
          black_depth (balL ?l ?k ?v ?r) = black_depth ?l + 1",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate (template_app (template_hole 6, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 3)),
            template_hole 2),
          template_app (template_hole 3, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 1),
                     template_var 0),
                   template_var 2))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 3),
                         template_var 1),
                       template_var 0),
                     template_var 2))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 3)),
                 template_hole 2)))
           ))),
    ("RBTree.balL_bd",
     "[| bd_inv ?l; bd_inv ?r; cl ?r = B;
         black_depth ?l + 1 = black_depth ?r |]
      ==> bd_inv (balL ?l ?k ?v ?r) &
          black_depth (balL ?l ?k ?v ?r) = black_depth ?l + 1",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate (template_app (template_hole 9, template_var 2)),
        template_equation
         (template_app (template_hole 7, template_var 2), template_hole 6),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 3)),
            template_hole 2),
          template_app (template_hole 3, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 1),
                     template_var 0),
                   template_var 2))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 3),
                         template_var 1),
                       template_var 0),
                     template_var 2))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 3)),
                 template_hole 2)))
           )))]
