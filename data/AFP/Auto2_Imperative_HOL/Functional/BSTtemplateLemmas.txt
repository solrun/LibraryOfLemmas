   [("BST.inorder_preserve_set", "tree_set ?t = set (in_traverse ?t)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("BST.rotateL_in_trav", "in_traverse (rotateL ?t) = in_traverse ?t",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("BST.rotateR_in_trav", "in_traverse (rotateR ?t) = in_traverse ?t",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("BST.in_traverse_fst",
     "map fst (in_traverse_pairs ?t) = in_traverse ?t",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("BST.rotateL_sorted", "tree_sorted ?t ==> tree_sorted (rotateL ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("BST.rotateR_sorted", "tree_sorted ?t ==> tree_sorted (rotateR ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("BST.inorder_pairs_sorted",
     "tree_sorted ?t = strict_sorted (map fst (in_traverse_pairs ?t))",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("BST.tree_delete_sorted",
     "tree_sorted ?t ==> tree_sorted (tree_delete ?x ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("BST.insert_sorted",
     "tree_sorted ?t ==> tree_sorted (tree_insert ?x ?v ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("BST.tree_search_correct",
     "tree_sorted ?t ==>
      tree_search ?t ?x = tree_map ?t\<langle>?x\<rangle>",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("BST.delete_elt_in_traverse_pairs",
     "in_traverse_pairs (delete_elt_tree (BST.tree.Node ?lt ?x ?v ?rt)) =
      in_traverse_pairs ?lt @ in_traverse_pairs ?rt",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 3, template_var 3)),
         template_app (template_hole 3, template_var 0)))),
    ("BST.tree_delete_in_traverse_pairs",
     "tree_sorted ?t ==>
      in_traverse_pairs (tree_delete ?x ?t) =
      remove_elt_pairs ?x (in_traverse_pairs ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 2, template_var 1))))),
    ("BST.tree_delete_map",
     "tree_sorted ?t ==>
      tree_map (tree_delete ?x ?t) = delete_map ?x (tree_map ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 2, template_var 1))))),
    ("BST.tree_sorted_lr",
     "tree_sorted (BST.tree.Node ?l ?k ?v ?r) ==>
      tree_sorted ?l & tree_sorted ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 3)),
             template_app (template_hole 2, template_var 0))
           ))),
    ("BST.insert_in_traverse_pairs",
     "tree_sorted ?t ==>
      in_traverse_pairs (tree_insert ?x ?v ?t) =
      ordered_insert_pairs ?x ?v (in_traverse_pairs ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_app (template_hole 2, template_var 2))))),
    ("BST.insert_on_map",
     "tree_sorted ?t ==>
      tree_map (tree_insert ?x ?v ?t) =
       tree_map ?t { ?x \<rightarrow> ?v }",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 2)),
             template_var 1),
           template_var 0)))),
    ("BST.delete_min_del_hd_pairs",
     "?t ~= Tip ==>
      fst (del_min ?t) # in_traverse_pairs (snd (del_min ?t)) =
      in_traverse_pairs ?t",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0))),
           template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 0)))),
         template_app (template_hole 1, template_var 0))))]
