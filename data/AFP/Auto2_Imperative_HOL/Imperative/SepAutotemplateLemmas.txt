   [("SepAuto.entails_triv", "?A \<Longrightarrow>\<^sub>A ?A",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("SepAuto.entails_true", "?A \<Longrightarrow>\<^sub>A true",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("SepAuto.proper_Rep_assn", "proper (Rep_assn ?P)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("SepAuto.assn_one_left", "emp * ?P = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("SepAuto.lim_set_gen", "heap.lim (?h(| lim := ?l |)) = ?l",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)),
       template_var 1)),
    ("SepAuto.assn_times_comm", "?P * ?Q = ?Q * ?P",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("SepAuto.Array_lim_set",
     "heap.lim (Array.set ?p ?xs ?h) = heap.lim ?h",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("SepAuto.one_assn_rule", "(?h \<Turnstile> emp) = (addrOf ?h = {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("SepAuto.ref_rule", "<emp> ref ?x <%r. r \<mapsto>\<^sub>r ?x>",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 0)),
           t_empty)
         )),
    ("SepAuto.of_list_rule",
     "<emp> Array.of_list ?xs <%r. r \<mapsto>\<^sub>a ?xs>",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 0)),
           t_empty)
         )),
    ("SepAuto.entails_equiv_forward",
     "?P = ?Q ==> ?P \<Longrightarrow>\<^sub>A ?Q",
     template_implication
      ([template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("SepAuto.entails_equiv_backward",
     "?P = ?Q ==> ?Q \<Longrightarrow>\<^sub>A ?P",
     template_implication
      ([template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("SepAuto.run_complete", "EX \<sigma>' r. run ?c ?\<sigma> \<sigma>' r",
     template_predicate (template_app (template_hole 2, t_empty))),
    ("SepAuto.execute_return'", "execute (return ?x) ?h = Some (?x, ?h)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SepAuto.return_rule", "<emp> return ?x <%r. \<up> (r = ?x)>",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 2, template_var 0)),
           t_empty)
         )),
    ("SepAuto.Abs_assn_inverse'",
     "proper ?y ==> Rep_assn (Abs_assn ?y) = ?y",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("SepAuto.top_assn_rule",
     "(pHeap ?h ?as \<Turnstile> true) = in_range (?h, ?as)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SepAuto.pure_conj", "\<up> (?P & ?Q) = \<up> ?P * \<up> ?Q",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("SepAuto.pure_assn_rule",
     "(?h \<Turnstile> \<up> ?b) = (addrOf ?h = {} & ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 template_hole 0)),
             template_var 0)
           ))),
    ("SepAuto.assn_times_assoc", "?P * ?Q * ?R = ?P * (?Q * ?R)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SepAuto.new_rule",
     "<emp> Array.new ?n ?x <%r. r \<mapsto>\<^sub>a replicate ?n ?x>",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           t_empty)
         )),
    ("SepAuto.update_rule",
     "<?p \<mapsto>\<^sub>r ?y> ?p := ?x <%r. ?p \<mapsto>\<^sub>r ?x>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           t_empty)
         )),
    ("SepAuto.models_in_range",
     "pHeap ?h ?as \<Turnstile> ?P ==> in_range (?h, ?as)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("SepAuto.refs_on_Array_set",
     "refs (Array.set ?p ?xs ?h) ?t ?i = refs ?h ?t ?i",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0))),
    ("SepAuto.refs_on_Array_alloc",
     "refs (snd (Array.alloc ?xs ?h)) ?t ?i = refs ?h ?t ?i",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0))),
    ("SepAuto.entails_pure'",
     "(~ (\<up> ?b \<Longrightarrow>\<^sub>A ?Q)) =
      (~ (emp \<Longrightarrow>\<^sub>A ?Q) & ?b)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 0),
               template_var 0))),
         template_var 1))),
    ("SepAuto.norm_pre_pure_iff2",
     "<\<up> ?b> ?c <?Q> = (?b --> <emp> ?c <?Q>)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 0),
             template_var 1),
           template_var 0)))),
    ("SepAuto.mod_pure_star_dist",
     "(?h \<Turnstile> ?P * \<up> ?b) = (?h \<Turnstile> ?P & ?b)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0))),
    ("SepAuto.arrays_on_Ref_alloc",
     "arrays (snd (Ref.alloc ?x ?h)) ?t ?i = arrays ?h ?t ?i",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0))),
    ("SepAuto.arrays_on_Ref_set",
     "arrays (Ref.set ?p ?x ?h) ?t ?i = arrays ?h ?t ?i",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0))),
    ("SepAuto.assert_rule",
     "<\<up> (?R ?x)> assert ?R ?x <%r. \<up> (r = ?x)>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_var 1, template_var 0))),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           t_empty)
         )),
    ("SepAuto.entails_frame",
     "?P \<Longrightarrow>\<^sub>A ?Q ==>
      ?P * ?R \<Longrightarrow>\<^sub>A ?Q * ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SepAuto.mod_ex_dist",
     "(?h \<Turnstile> (\<exists>\<^sub>Ax. ?P x)) =
      (EX x. ?h \<Turnstile> ?P x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, t_empty)),
       template_app (template_hole 0, t_empty))),
    ("SepAuto.ex_distrib_star",
     "(\<exists>\<^sub>Ax. ?P x * ?Q) = (\<exists>\<^sub>Ax. ?P x) * ?Q",
     template_equation
      (template_app (template_hole 1, t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, t_empty)),
         template_var 0))),
    ("SepAuto.entailsD",
     "[| ?P \<Longrightarrow>\<^sub>A ?Q; ?h \<Turnstile> ?P |]
      ==> ?h \<Turnstile> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("SepAuto.pre_pure_rule'",
     "(~ <\<up> ?b> ?f <?Q>) = (~ <emp> ?f <?Q> & ?b)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 2)),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 0),
                 template_var 1),
               template_var 0))),
         template_var 2))),
    ("SepAuto.entails_pure",
     "(~ (?P * \<up> ?b \<Longrightarrow>\<^sub>A ?Q)) =
      (~ (?P \<Longrightarrow>\<^sub>A ?Q) & ?b)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app (template_hole 1, template_var 1))),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0))),
         template_var 1))),
    ("SepAuto.norm_pre_pure_iff",
     "<?P * \<up> ?b> ?c <?Q> = (?b --> <?P> ?c <?Q>)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_app (template_hole 1, template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 1),
           template_var 0)))),
    ("SepAuto.aseval_ext", "ALL h. aseval ?P h = aseval ?P' h ==> ?P = ?P'",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("SepAuto.entails_ex",
     "(~ (\<exists>\<^sub>Ax. ?P x \<Longrightarrow>\<^sub>A ?Q)) =
      (EX x. ~ (?P x \<Longrightarrow>\<^sub>A ?Q))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 1, t_empty)),
           template_var 0)),
       template_app (template_hole 0, t_empty))),
    ("SepAuto.lookup_rule",
     "<?p \<mapsto>\<^sub>r ?x> !?p
      <%r. ?p \<mapsto>\<^sub>r ?x * \<up> (r = ?x)>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0)),
             template_app (template_hole 3, template_var 1)),
           t_empty)
         )),
    ("SepAuto.freeze_rule",
     "<?a \<mapsto>\<^sub>a ?xs> Array.freeze ?a
      <%r. ?a \<mapsto>\<^sub>a ?xs * \<up> (r = ?xs)>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0)),
             template_app (template_hole 3, template_var 1)),
           t_empty)
         )),
    ("SepAuto.relH_D",
     "relH ?as ?h ?h' ==> in_range (?h, ?as) & in_range (?h', ?as)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2))),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)))
           ))),
    ("SepAuto.pre_pure_rule",
     "(~ <?P * \<up> ?b> ?f <?Q>) = (~ <?P> ?f <?Q> & ?b)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_app (template_hole 1, template_var 2))),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 1),
               template_var 0))),
         template_var 2))),
    ("SepAuto.length_rule",
     "<?a \<mapsto>\<^sub>a ?xs> Array.len ?a
      <%r. ?a \<mapsto>\<^sub>a ?xs * \<up> (r = length ?xs)>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 0)),
             template_app (template_hole 4, template_var 1)),
           t_empty)
         )),
    ("SepAuto.frame_rule", "<?P> ?c <?Q> ==> <?P * ?R> ?c <%x. ?Q x * ?R>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0)),
               template_var 2),
             t_empty)
           ))),
    ("SepAuto.entails_ex_post",
     "~ (?P \<Longrightarrow>\<^sub>A \<exists>\<^sub>Ax. ?Q x) ==>
      ALL x. ~ (?P \<Longrightarrow>\<^sub>A ?Q x)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_app (template_hole 1, t_empty))
                )
            )],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("SepAuto.entails_pure_post",
     "[| ~ (?P \<Longrightarrow>\<^sub>A ?Q * \<up> ?b);
         ?P \<Longrightarrow>\<^sub>A ?Q |]
      ==> ~ ?b",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_app
                   (template_app (template_hole 1, template_var 1),
                    template_app (template_hole 0, template_var 0)))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_negation (template_predicate (template_var 0)))),
    ("SepAuto.pre_ex_rule",
     "(~ <\<exists>\<^sub>Ax. ?P x> ?f <?Q>) = (EX x. ~ <?P x> ?f <?Q>)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_hole 2, template_app (template_hole 1, t_empty)),
             template_var 1),
           template_var 0)),
       template_app (template_hole 0, t_empty))),
    ("SepAuto.relH_dist_union",
     "relH (?as Un ?as') ?h ?h' ==> relH ?as ?h ?h' & relH ?as' ?h ?h'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("SepAuto.entails_trans2",
     "[| ?A \<Longrightarrow>\<^sub>A ?D * ?B;
         ?B \<Longrightarrow>\<^sub>A ?C |]
      ==> ?A \<Longrightarrow>\<^sub>A ?D * ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("SepAuto.refs_on_Ref_alloc",
     "?i < heap.lim ?h ==>
      refs (snd (Ref.alloc ?x ?h)) ?t ?i = refs ?h ?t ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2))),
             template_var 0),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0),
           template_var 3)))),
    ("SepAuto.arrays_on_Array_alloc",
     "?i < heap.lim ?h ==>
      arrays (snd (Array.alloc ?xs ?h)) ?t ?i = arrays ?h ?t ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2))),
             template_var 0),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0),
           template_var 3)))),
    ("SepAuto.mod_relH",
     "[| relH ?as ?h ?h'; pHeap ?h ?as \<Turnstile> ?P |]
      ==> pHeap ?h' ?as \<Turnstile> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3)),
             template_var 0)
           ))),
    ("SepAuto.post_rule",
     "[| <?P> ?f <?Q>; ALL x. ?Q x \<Longrightarrow>\<^sub>A ?R x |]
      ==> <?P> ?f <?R>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("SepAuto.relH_array",
     "[| relH ?as ?h ?h'; addr_of_array ?r : ?as |]
      ==> Array.get ?h ?r = Array.get ?h' ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SepAuto.relH_ref",
     "[| relH ?as ?h ?h'; addr_of_ref ?r : ?as |]
      ==> Ref.get ?h ?r = Ref.get ?h' ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SepAuto.entails_frame''",
     "[| ~ (?P \<Longrightarrow>\<^sub>A ?B * ?F);
         ?A \<Longrightarrow>\<^sub>A ?B |]
      ==> ~ (?P \<Longrightarrow>\<^sub>A ?A * ?F)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_app
                   (template_app (template_hole 0, template_var 2),
                    template_var 1))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))
               )
           ))),
    ("SepAuto.entails_frame'",
     "[| ~ (?A * ?F \<Longrightarrow>\<^sub>A ?Q);
         ?A \<Longrightarrow>\<^sub>A ?B |]
      ==> ~ (?B * ?F \<Longrightarrow>\<^sub>A ?Q)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 1,
                    template_app
                     (template_app (template_hole 0, template_var 3),
                      template_var 2)),
                  template_var 1)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 2)),
                 template_var 1)
               )
           ))),
    ("SepAuto.relH_set_array",
     "relH {a. a < heap.lim ?h & a ~: {addr_of_array ?r}} ?h
       (Array.set ?r ?x ?h)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 10, template_app (template_hole 9, t_empty)),
             template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2))
         )),
    ("SepAuto.relH_set_ref",
     "relH {a. a < heap.lim ?h & a ~: {addr_of_ref ?r}} ?h
       (Ref.set ?r ?x ?h)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 10, template_app (template_hole 9, t_empty)),
             template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2))
         )),
    ("SepAuto.assn_ext",
     "ALL h as.
         (pHeap h as \<Turnstile> ?P) = (pHeap h as \<Turnstile> ?Q) ==>
      ?P = ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("SepAuto.relH_D2",
     "[| relH ?as ?h ?h'; ?a : ?as |] ==> refs ?h ?t ?a = refs ?h' ?t ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 1)))),
    ("SepAuto.relH_D2",
     "[| relH ?as ?h ?h'; ?a : ?as |]
      ==> arrays ?h ?t ?a = arrays ?h' ?t ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 1)))),
    ("SepAuto.post_rule'",
     "[| <?P> ?f <?Q>; ~ <?P> ?f <?R> |]
      ==> EX x. ~ (?Q x \<Longrightarrow>\<^sub>A ?R x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2),
                  template_var 0)
                )
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("SepAuto.pre_rule''",
     "[| <?P> ?f <?Q>; ?P' \<Longrightarrow>\<^sub>A ?P * ?R |]
      ==> <?P'> ?f <%x. ?Q x * ?R>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app
               (template_app (template_hole 0, template_var 4),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_var 3),
             t_empty)
           ))),
    ("SepAuto.pre_rule'",
     "[| ~ <?P * ?R> ?f <?Q>; ?P \<Longrightarrow>\<^sub>A ?P' |]
      ==> ~ <?P' * ?R> ?f <?Q>",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_hole 2,
                      template_app
                       (template_app (template_hole 1, template_var 4),
                        template_var 3)),
                    template_var 2),
                  template_var 1)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 4),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_var 3)),
                   template_var 2),
                 template_var 1)
               )
           ))),
    ("SepAuto.bind_rule",
     "[| <?P> ?f <?Q>; ALL x. <?Q x> ?g x <?R> |] ==> <?P> ?f >>= ?g <?R>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_var 0)
           ))),
    ("SepAuto.nth_rule",
     "<?a \<mapsto>\<^sub>a ?xs * \<up> (?i < length ?xs)> Array.nth ?a ?i
      <%r. ?a \<mapsto>\<^sub>a ?xs * \<up> (r = ?xs ! ?i)>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_var 1)),
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_app (template_hole 3, template_var 1))))),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           t_empty)
         )),
    ("SepAuto.bind_rule'",
     "[| <?P> ?f <?Q>; ~ <?P> ?f >>= ?g <?R> |]
      ==> EX x. ~ <?Q x> ?g x <?R>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_app
                     (template_app (template_hole 1, template_var 3),
                      template_var 1)),
                  template_var 0)
                )
            )],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("SepAuto.snga_assn_rule",
     "(pHeap ?h ?as \<Turnstile> ?r \<mapsto>\<^sub>a ?x) =
      (Array.get ?h ?r = ?x &
       ?as = {addr_of_array ?r} & addr_of_array ?r < heap.lim ?h)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 9, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 3),
                     template_var 1)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_var 1)),
                     template_hole 2))),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 3, template_var 1)),
                 template_app (template_hole 0, template_var 3))))
           ))),
    ("SepAuto.sngr_assn_rule",
     "(pHeap ?h ?as \<Turnstile> ?r \<mapsto>\<^sub>r ?x) =
      (Ref.get ?h ?r = ?x &
       ?as = {addr_of_ref ?r} & addr_of_ref ?r < heap.lim ?h)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 9, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 3),
                     template_var 1)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_var 1)),
                     template_hole 2))),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 3, template_var 1)),
                 template_app (template_hole 0, template_var 3))))
           ))),
    ("SepAuto.upd_rule",
     "<?a \<mapsto>\<^sub>a ?xs * \<up> (?i < length ?xs)>
      Array.upd ?i ?x ?a
      <%r. ?a \<mapsto>\<^sub>a ?xs[?i := ?x] * \<up> (r = ?a)>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 3),
                     template_var 2)),
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_app (template_hole 3, template_var 2))))),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0),
               template_var 3)),
           t_empty)
         )),
    ("SepAuto.run_to_execute",
     "run ?c (Some ?h) ?\<sigma>' ?r ==>
      if ?\<sigma>' = None then execute ?c ?h = None
      else execute ?c ?h = Some (?r, the ?\<sigma>')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 3),
                  template_app (template_hole 9, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 1),
                   template_hole 6)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 3),
                     template_var 2)),
                 template_hole 3)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_var 2)),
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_app (template_hole 0, template_var 1)))))
           ))),
    ("SepAuto.runE",
     "[| run ?f (Some ?h) (Some ?h') ?r';
         run (?f >>= ?g) (Some ?h) ?\<sigma> ?r |]
      ==> run (?g ?r') (Some ?h') ?\<sigma> ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 6),
                  template_app (template_hole 2, template_var 5)),
                template_app (template_hole 2, template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 1,
                    template_app
                     (template_app (template_hole 0, template_var 6),
                      template_var 2)),
                  template_app (template_hole 2, template_var 5)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app (template_var 2, template_var 3)),
                 template_app (template_hole 2, template_var 4)),
               template_var 1),
             template_var 0)
           ))),
    ("SepAuto.mod_star_conv",
     "(pHeap ?h ?as \<Turnstile> ?A * ?B) =
      (EX as1 as2.
          ?as = as1 Un as2 &
          as1 Int as2 = {} &
          pHeap ?h as1 \<Turnstile> ?A & pHeap ?h as2 \<Turnstile> ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("SepAuto.hoare_tripleD",
     "[| <?P> ?c <?Q>; run ?c (Some ?h) ?\<sigma> ?r |]
      ==> ALL as.
             pHeap ?h as \<Turnstile> ?P -->
             ?\<sigma> ~= None &
             pHeap (the ?\<sigma>)
              (new_addrs ?h as (the ?\<sigma>)) \<Turnstile>
             ?Q ?r &
             relH {a. a < heap.lim ?h & a ~: as} ?h (the ?\<sigma>) &
             heap.lim ?h <= heap.lim (the ?\<sigma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 18, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 17, template_var 4),
                  template_app (template_hole 16, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 15, t_empty))))]
