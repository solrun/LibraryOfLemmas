   [("LinkedList.insert_sort_sorted", "Lists_Thms.sorted (insert_sort ?xs)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("LinkedList.insert_sort_mset", "mset (insert_sort ?xs) = mset ?xs",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("LinkedList.insert_sort_is_sort", "insert_sort ?xs = sort ?xs",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("LinkedList.os_insert_sort_aux_correct",
     "<emp> os_insert_sort_aux ?xs <os_list (insert_sort ?xs)>",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("LinkedList.os_list_empty",
     "os_list [] ?p \<Longrightarrow>\<^sub>A \<up> (?p = None)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 0)),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))
         )),
    ("LinkedList.list_insert_sorted",
     "Lists_Thms.sorted ?xs ==> Lists_Thms.sorted (list_insert ?x ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("LinkedList.list_insert_length",
     "length (list_insert ?x ?xs) = length ?xs + 1",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_hole 0))),
    ("LinkedList.os_reverse_rule",
     "<os_list ?xs ?p> os_reverse ?p <os_list (rev ?xs)>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app (template_hole 1, template_var 0)),
           template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)))
         )),
    ("LinkedList.merge_list_correct",
     "set (merge_list ?xs ?ys) = set ?xs Un set ?ys",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("LinkedList.list_insert_set",
     "set (list_insert ?x ?xs) = {?x} Un set ?xs",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_app (template_hole 4, template_var 0)))),
    ("LinkedList.list_insert_mset",
     "mset (list_insert ?x ?xs) = {#?x#} + mset ?xs",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_app (template_hole 4, template_var 0)))),
    ("LinkedList.map_os_list_rule",
     "<os_list ?xs ?b> map_os_list ?f ?b <os_list (map ?f ?xs)>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)))
         )),
    ("LinkedList.os_prepend_rule",
     "<os_list ?xs ?n> os_prepend ?x ?n <os_list (?x # ?xs)>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)))
         )),
    ("LinkedList.os_insert_to_fun",
     "<os_list ?xs ?b> os_insert ?x ?b <os_list (list_insert ?x ?xs)>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)))
         )),
    ("LinkedList.merge_list_sorted",
     "[| Lists_Thms.sorted ?xs; Lists_Thms.sorted ?ys |]
      ==> Lists_Thms.sorted (merge_list ?xs ?ys)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("LinkedList.insertion_sort_rule",
     "<emp> os_insert_sort ?xs <%r. \<up> (r = sort ?xs)>\<^sub>t",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 7, template_hole 6),
             template_app (template_hole 5, template_var 0)),
           t_empty)
         )),
    ("LinkedList.copy_os_list_rule",
     "<os_list ?xs ?b> copy_os_list ?b
      <%r. os_list ?xs ?b * os_list ?xs r>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app (template_hole 1, template_var 0)),
           t_empty)
         )),
    ("LinkedList.extract_list_rule",
     "<os_list ?l ?p> extract_list ?p <%r. os_list ?l ?p * \<up> (r = ?l)>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0)),
             template_app (template_hole 3, template_var 0)),
           t_empty)
         )),
    ("LinkedList.filter_os_list_rule",
     "<os_list ?xs
        ?b> filter_os_list ?f ?b <os_list (filter ?f ?xs)>\<^sub>t",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1)),
           t_empty)
         )),
    ("LinkedList.os_rem_rule",
     "<os_list ?xs ?b> os_rem ?x ?b <os_list (removeAll ?x ?xs)>\<^sub>t",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1)),
           t_empty)
         )),
    ("LinkedList.os_list_constr_ent",
     "?p \<mapsto>\<^sub>r node.Node ?x ?q *
      os_list ?l ?q \<Longrightarrow>\<^sub>A
      os_list (?x # ?l) (Some ?p)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_var 1))),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app (template_hole 0, template_var 3)))
         )),
    ("LinkedList.os_reverse_aux_rule",
     "<os_list ?xs ?p * os_list ?ys ?q> os_reverse_aux ?q ?p
      <os_list (rev ?xs @ ?ys)>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 3)),
               template_var 1)))
         )),
    ("LinkedList.os_is_empty_rule",
     "<os_list ?xs ?b> os_is_empty ?b
      <%r. os_list ?xs ?b * \<up> (r = (?xs = []))>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 0)),
             template_app (template_hole 5, template_var 0)),
           t_empty)
         )),
    ("LinkedList.filter_os_list2_rule",
     "<os_list ?xs ?b> filter_os_list2 ?f ?b
      <%r. os_list ?xs ?b * os_list (filter ?f ?xs) r>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           t_empty)
         )),
    ("LinkedList.merge_os_list_to_fun",
     "<os_list ?xs ?p * os_list ?ys ?q> merge_os_list ?p ?q
      <os_list (merge_list ?xs ?ys)>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           t_empty)
         )),
    ("LinkedList.fold_os_list_rule",
     "<os_list ?xs ?b> fold_os_list ?f ?b ?x
      <%r. os_list ?xs ?b * \<up> (r = fold ?f ?xs ?x)>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 2),
               template_var 0)),
           t_empty)
         )),
    ("LinkedList.os_list_Cons",
     "os_list (?x # ?l) ?p \<Longrightarrow>\<^sub>A
      \<exists>\<^sub>Aq.
         the ?p \<mapsto>\<^sub>r node.Node ?x q * os_list ?l q *
         \<up> (?p ~= None)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_var 2),
                   template_var 1)),
               template_var 0)),
           template_app (template_hole 8, t_empty))
         )),
    ("LinkedList.os_pop_rule",
     "<os_list ?xs (Some ?p)> os_pop (Some ?p)
      <%(x, r').
          os_list (tl ?xs) r' * ?p \<mapsto>\<^sub>r node.Node x r' *
          \<up> (x = hd ?xs)>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_var 1),
                 template_app (template_hole 9, template_var 0))),
             template_app
              (template_hole 8,
               template_app (template_hole 9, template_var 0))),
           template_app (template_hole 7, t_empty))
         ))]
