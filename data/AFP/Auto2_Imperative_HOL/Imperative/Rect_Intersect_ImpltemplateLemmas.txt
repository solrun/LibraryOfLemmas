   [("Rect_Intersect_Impl.rect_inter_init_rule",
     "<emp> rect_inter_init ?rects
      <%p. p \<mapsto>\<^sub>a all_ops ?rects>",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 2, template_var 0)),
           t_empty)
         )),
    ("Rect_Intersect_Impl.rect_inter_all_correct",
     "is_rect_list ?rects ==>
      <emp> rect_inter_all
             ?rects <%r. \<up> (r = has_rect_overlap ?rects)>\<^sub>t",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, template_hole 6),
               template_app (template_hole 5, template_var 0)),
             t_empty)
           ))),
    ("Rect_Intersect_Impl.op_int_is_interval",
     "[| is_rect_list ?rects; ?ops = all_ops ?rects; ?k < length ?ops |]
      ==> is_interval (op_int (?ops ! ?k))",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_equation
         (template_var 1, template_app (template_hole 5, template_var 2)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Rect_Intersect_Impl.rect_inter_next_rule",
     "[| is_rect_list ?rects; ?k < length (all_ops ?rects) |]
      ==> <?a \<mapsto>\<^sub>a all_ops ?rects *
           int_tree_set ?S
            ?b> rect_inter_next ?a ?b
                 ?k <%r. ?a \<mapsto>\<^sub>a all_ops ?rects *
                         int_tree_set (apply_ops_k_next ?rects ?S ?k)
                          r>\<^sub>t",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 4)),
        template_inequation
         (less_than, template_var 3,
          template_app
           (template_hole 8,
            template_app (template_hole 7, template_var 4)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 2),
                       template_app (template_hole 7, template_var 4))),
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 0),
                 template_var 3)),
             t_empty)
           ))),
    ("Rect_Intersect_Impl.rect_inter_to_fun_ind",
     "[| is_rect_list ?rects; ?k < length (all_ops ?rects) |]
      ==> <?a \<mapsto>\<^sub>a all_ops ?rects *
           int_tree_set ?S
            ?b> rect_inter_impl ?a ?b
                 ?k <%r. ?a \<mapsto>\<^sub>a all_ops ?rects *
                         \<up> (r = rect_inter ?rects ?S ?k)>\<^sub>t",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 4)),
        template_inequation
         (less_than, template_var 3,
          template_app
           (template_hole 10,
            template_app (template_hole 9, template_var 4)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_var 2),
                       template_app (template_hole 9, template_var 4))),
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 0),
                 template_var 3)),
             t_empty)
           )))]
