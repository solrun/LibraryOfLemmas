   [("IntervalTree_Impl.int_tree_Tip",
     "int_tree Tip ?p \<Longrightarrow>\<^sub>A \<up> (?p = None)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 0)),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))
         )),
    ("IntervalTree_Impl.int_tree_insert_to_fun",
     "<int_tree ?t ?b> insert_impl ?v ?b
      <int_tree (Interval_Tree.insert ?v ?t)>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)))
         )),
    ("IntervalTree_Impl.int_tree_delete_to_fun",
     "<int_tree ?t ?b> delete_impl ?x ?b <int_tree (delete ?x ?t)>\<^sub>t",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1)),
           t_empty)
         )),
    ("IntervalTree_Impl.get_tmax_rule",
     "<int_tree ?t ?b> get_tmax ?b
      <%r. int_tree ?t ?b * \<up> (r = interval_tree.tmax ?t)>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 0)),
             template_app (template_hole 4, template_var 0)),
           t_empty)
         )),
    ("IntervalTree_Impl.int_tree_is_empty_rule",
     "<int_tree ?t ?b> int_tree_is_empty ?b
      <%r. int_tree ?t ?b * \<up> (r = (?t = Tip))>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 0)),
             template_app (template_hole 5, template_var 0)),
           t_empty)
         )),
    ("IntervalTree_Impl.search_impl_correct",
     "<int_tree ?t ?b> search_impl ?x ?b
      <%r. int_tree ?t ?b * \<up> (r = search ?t ?x)>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_var 1)),
           t_empty)
         )),
    ("IntervalTree_Impl.int_tree_insert_rule",
     "<int_tree_set ?S ?b * \<up> (is_interval (idx_interval.int ?x))>
      insert_impl ?x ?b <int_tree_set (?S Un {?x})>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_var 2),
                     template_var 1)),
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_var 0))))),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1)),
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0))))
         )),
    ("IntervalTree_Impl.int_tree_del_elt_to_fun",
     "<int_tree (interval_tree.Node ?lt ?v ?m ?rt)
        ?b> int_tree_del_elt
             ?b <int_tree
                  (delete_elt_tree
                    (interval_tree.Node ?lt ?v ?m ?rt))>\<^sub>t",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 4, template_var 4),
                         template_var 3),
                       template_var 2),
                     template_var 1)),
                 template_var 0)),
             template_app (template_hole 3, template_var 0)),
           t_empty)
         )),
    ("IntervalTree_Impl.int_tree_search_rule",
     "<int_tree_set ?S ?b * \<up> (is_interval ?x)> search_impl ?x ?b
      <%r. int_tree_set ?S ?b * \<up> (r = has_overlap ?S ?x)>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_var 1)),
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0)))),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           t_empty)
         )),
    ("IntervalTree_Impl.int_tree_delete_rule",
     "<int_tree_set ?S ?b *
       \<up>
        (is_interval
          (idx_interval.int
            ?x))> delete_impl ?x ?b <int_tree_set (?S - {?x})>\<^sub>t",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_var 2),
                     template_var 1)),
                 template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_var 0))))),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_var 1)),
           t_empty)
         )),
    ("IntervalTree_Impl.int_tree_constr_rule",
     "<int_tree ?lt ?lp * int_tree ?rt ?rp> int_tree_constr ?lp ?v ?rp
      <int_tree
        (interval_tree.Node ?lt ?v
          (max3 ?v (interval_tree.tmax ?lt) (interval_tree.tmax ?rt))
          ?rt)>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 4),
                     template_var 3)),
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 1))),
             template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 0),
               template_var 1)),
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 0),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 0),
                     template_app (template_hole 0, template_var 4)),
                   template_app (template_hole 0, template_var 2))),
               template_var 2)))
         )),
    ("IntervalTree_Impl.int_tree_constr_ent",
     "?p \<mapsto>\<^sub>r node.Node ?lp ?v ?m ?rp * int_tree ?lt ?lp *
      int_tree ?rt ?rp \<Longrightarrow>\<^sub>A
      int_tree (interval_tree.Node ?lt ?v ?m ?rt) (Some ?p)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 6),
                       template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 3, template_var 5),
                             template_var 4),
                           template_var 3),
                         template_var 2))),
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 5))),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 2))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 4),
                   template_var 3),
                 template_var 0)),
             template_app (template_hole 0, template_var 6)))
         )),
    ("IntervalTree_Impl.int_tree_del_min_to_fun",
     "<int_tree ?t ?b *
       \<up>
        (?b ~=
         None)> int_tree_del_min
                 ?b <%r. int_tree (snd (del_min ?t)) (snd r) *
                         \<up> (fst r = fst (del_min ?t))>\<^sub>t",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app
                  (template_hole 13,
                   template_app
                    (template_app (template_hole 12, template_var 1),
                     template_var 0)),
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 10,
                     template_app
                      (template_app (template_hole 9, template_var 0),
                       template_hole 8))))),
             template_app (template_hole 7, template_var 0)),
           t_empty)
         )),
    ("IntervalTree_Impl.compute_tmax_rule",
     "<int_tree ?t1.0 ?b1.0 * int_tree ?t2.0 ?b2.0>
      compute_tmax ?it ?b1.0 ?b2.0
      <%r. int_tree ?t1.0 ?b1.0 * int_tree ?t2.0 ?b2.0 *
           \<up>
            (r =
             max3 ?it (interval_tree.tmax ?t1.0)
              (interval_tree.tmax ?t2.0))>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 4),
                     template_var 3)),
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 1))),
             template_app
              (template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 3),
               template_var 1)),
           t_empty)
         )),
    ("IntervalTree_Impl.int_tree_Node",
     "int_tree (interval_tree.Node ?lt ?v ?m ?rt)
       ?p \<Longrightarrow>\<^sub>A
      \<exists>\<^sub>Alp rp.
         the ?p \<mapsto>\<^sub>r node.Node lp ?v ?m rp * int_tree ?lt lp *
         int_tree ?rt rp *
         \<up> (?p ~= None)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1)),
               template_var 0)),
           template_app (template_hole 8, t_empty))
         ))]
