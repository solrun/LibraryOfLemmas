Loading theory "Bounded_Deducibility_Security.Abstract_BD_Security" (required by "Draft.Friend_TracebackMoreTemplates" via "Draft.Friend_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO")
Loading theory "Fresh_Identifiers.Fresh" (required by "Draft.Friend_TracebackMoreTemplates" via "Draft.Friend_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Fresh_Identifiers.Fresh_String")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Friend_TracebackMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Friend_TracebackMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
class fresh = type +
  fixes fresh :: "'a set => 'a => 'a"
  assumes "fresh_notIn": "!!xs x. finite xs ==> fresh xs x ~: xs"
    and "fresh_eq": "!!xs x. x ~: xs ==> fresh xs x = x"
### Additional type variable(s) in locale specification "infinite": 'a
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale Abstract_BD_Security
  fixes validSystemTrace :: "'traces => bool"
    and V :: "'traces => 'values"
    and O :: "'traces => 'observations"
    and B :: "'values => 'values => bool"
    and TT :: "'traces => bool"
### theory "Bounded_Deducibility_Security.Abstract_BD_Security"
### 0.117s elapsed time, 0.491s cpu time, 0.033s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Friend_TracebackMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
class infinite = type +
  assumes "infinite_UNIV": "infinite UNIV"
### theory "HOL-Library.Function_Algebras"
### 0.123s elapsed time, 0.514s cpu time, 0.033s GC time
Loading theory "HOL-Library.Sublist" (required by "Draft.Friend_TracebackMoreTemplates" via "Draft.Friend_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO" via "Bounded_Deducibility_Security.BD_Security_TS" via "Bounded_Deducibility_Security.Filtermap" via "Bounded_Deducibility_Security.Trivia")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
### theory "Fresh_Identifiers.Fresh"
### 0.231s elapsed time, 0.947s cpu time, 0.033s GC time
Loading theory "Fresh_Identifiers.Fresh_String" (required by "Draft.Friend_TracebackMoreTemplates" via "Draft.Friend_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim")
### theory "HOL-Library.Nat_Bijection"
### 0.332s elapsed time, 1.329s cpu time, 0.143s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Friend_TracebackMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.219s elapsed time, 0.849s cpu time, 0.110s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Friend_TracebackMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "{}"
instantiation
  String.literal :: fresh
  fresh_literal == fresh ::
    String.literal set => String.literal => String.literal
consts
  prefixes :: "'a list => 'a list list"
### theory "Fresh_Identifiers.Fresh_String"
### 0.248s elapsed time, 0.963s cpu time, 0.204s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Friend_TracebackMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  suffixes :: "'a list => 'a list list"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Proofs for inductive predicate(s) "list_emb"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.985s elapsed time, 3.748s cpu time, 0.832s GC time
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.914s elapsed time, 3.468s cpu time, 0.738s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  sublists :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Sublist"
### 1.482s elapsed time, 5.708s cpu time, 1.064s GC time
Loading theory "Bounded_Deducibility_Security.Trivia" (required by "Draft.Friend_TracebackMoreTemplates" via "Draft.Friend_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO" via "Bounded_Deducibility_Security.BD_Security_TS" via "Bounded_Deducibility_Security.Filtermap")
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
### theory "Bounded_Deducibility_Security.Trivia"
### 0.478s elapsed time, 1.887s cpu time, 0.166s GC time
Loading theory "Bounded_Deducibility_Security.Filtermap" (required by "Draft.Friend_TracebackMoreTemplates" via "Draft.Friend_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO" via "Bounded_Deducibility_Security.BD_Security_TS")
Found termination order: "size <*mlex*> {}"
### theory "Bounded_Deducibility_Security.Filtermap"
### 0.230s elapsed time, 0.906s cpu time, 0.090s GC time
Loading theory "Bounded_Deducibility_Security.Transition_System" (required by "Draft.Friend_TracebackMoreTemplates" via "Draft.Friend_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO" via "Bounded_Deducibility_Security.BD_Security_TS")
locale Transition_System
  fixes istate :: "'state"
    and validTrans :: "'trans => bool"
    and srcOf :: "'trans => 'state"
    and tgtOf :: "'trans => 'state"
Found termination order: "{}"
### theory "HOL-Library.Tree"
### 2.080s elapsed time, 8.057s cpu time, 1.211s GC time
Loading theory "Draft.Templates" (required by "Draft.Friend_TracebackMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
"[''Abc'', ''Abd'', ''Ya'', ''Yb'', ''Yzb'', ''Ya'']"
  :: "char list list"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.088s elapsed time, 0.296s cpu time, 0.056s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Friend_TracebackMoreTemplates")
Found termination order: "{}"
"[STR ''Abc'', STR ''Abd'', STR ''Ya'', STR ''Yb'', STR ''Yzb'',
  STR ''Ya'']"
  :: "String.literal list"
Found termination order: "{}"
Proofs for inductive predicate(s) "valid"
  Proving monotonicity ...
Proofs for inductive predicate(s) "valid2"
  Proving monotonicity ...
Proofs for inductive predicate(s) "reach"
  Proving monotonicity ...
Proofs for inductive predicate(s) "reachFrom"
  Proving monotonicity ...
### theory "Bounded_Deducibility_Security.Transition_System"
### 0.431s elapsed time, 1.321s cpu time, 0.102s GC time
Loading theory "Bounded_Deducibility_Security.BD_Security_TS" (required by "Draft.Friend_TracebackMoreTemplates" via "Draft.Friend_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO")
Loading theory "Bounded_Deducibility_Security.IO_Automaton" (required by "Draft.Friend_TracebackMoreTemplates" via "Draft.Friend_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.644s elapsed time, 1.868s cpu time, 0.213s GC time
locale BD_Security_TS
  fixes istate :: "'state"
    and validTrans :: "'trans => bool"
    and srcOf :: "'trans => 'state"
    and tgtOf :: "'trans => 'state"
    and \<phi> :: "'trans => bool"
    and f :: "'trans => 'value"
    and \<gamma> :: "'trans => bool"
    and g :: "'trans => 'obs"
    and T :: "'trans => bool"
    and B :: "'value list => 'value list => bool"
Proofs for inductive predicate(s) "reachNT"
  Proving monotonicity ...
### theory "Bounded_Deducibility_Security.BD_Security_TS"
### 0.553s elapsed time, 1.549s cpu time, 0.240s GC time
locale IO_Automaton
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
Found termination order: "{}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "Bounded_Deducibility_Security.IO_Automaton"
### 1.308s elapsed time, 2.921s cpu time, 1.115s GC time
Loading theory "Bounded_Deducibility_Security.BD_Security_IO" (required by "Draft.Friend_TracebackMoreTemplates" via "Draft.Friend_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding")
locale BD_Security_IO
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
    and \<phi> :: "('state, 'act, 'out) trans => bool"
    and f :: "('state, 'act, 'out) trans => 'value"
    and \<gamma> :: "('state, 'act, 'out) trans => bool"
    and g :: "('state, 'act, 'out) trans => 'obs"
    and T :: "('state, 'act, 'out) trans => bool"
    and B :: "'value list => 'value list => bool"
### theory "Bounded_Deducibility_Security.BD_Security_IO"
### 0.339s elapsed time, 0.362s cpu time, 0.023s GC time
Loading theory "Bounded_Deducibility_Security.BD_Security_Unwinding" (required by "Draft.Friend_TracebackMoreTemplates" via "Draft.Friend_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning")
locale BD_Security_IO
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
    and \<phi> :: "('state, 'act, 'out) trans => bool"
    and f :: "('state, 'act, 'out) trans => 'value"
    and \<gamma> :: "('state, 'act, 'out) trans => bool"
    and g :: "('state, 'act, 'out) trans => 'obs"
    and T :: "('state, 'act, 'out) trans => bool"
    and B :: "'value list => 'value list => bool"
### theory "Bounded_Deducibility_Security.BD_Security_Unwinding"
### 0.310s elapsed time, 0.340s cpu time, 0.042s GC time
Loading theory "Bounded_Deducibility_Security.Compositional_Reasoning" (required by "Draft.Friend_TracebackMoreTemplates" via "Draft.Friend_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim")
locale BD_Security_IO
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
    and \<phi> :: "('state, 'act, 'out) trans => bool"
    and f :: "('state, 'act, 'out) trans => 'value"
    and \<gamma> :: "('state, 'act, 'out) trans => bool"
    and g :: "('state, 'act, 'out) trans => 'obs"
    and T :: "('state, 'act, 'out) trans => bool"
    and B :: "'value list => 'value list => bool"
Found termination order: "length <*mlex*> {}"
### theory "Bounded_Deducibility_Security.Compositional_Reasoning"
### 0.302s elapsed time, 0.330s cpu time, 0.037s GC time
Loading theory "Draft.Prelim" (required by "Draft.Friend_TracebackMoreTemplates" via "Draft.Friend_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Prelim"
### 2.513s elapsed time, 3.361s cpu time, 1.199s GC time
Loading theory "Draft.System_Specification" (required by "Draft.Friend_TracebackMoreTemplates" via "Draft.Friend_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
See theory exports
### theory "Draft.System_Specification"
### 5.331s elapsed time, 6.012s cpu time, 0.608s GC time
Loading theory "Draft.Automation_Setup" (required by "Draft.Friend_TracebackMoreTemplates" via "Draft.Friend_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties")
### theory "Draft.Automation_Setup"
### 0.031s elapsed time, 0.061s cpu time, 0.000s GC time
Loading theory "Draft.Safety_Properties" (required by "Draft.Friend_TracebackMoreTemplates" via "Draft.Friend_Traceback" via "Draft.Traceback_Intro")
### theory "Draft.Safety_Properties"
### 0.257s elapsed time, 0.295s cpu time, 0.051s GC time
Loading theory "Draft.Traceback_Intro" (required by "Draft.Friend_TracebackMoreTemplates" via "Draft.Friend_Traceback")
### theory "Draft.Traceback_Intro"
### 0.024s elapsed time, 0.039s cpu time, 0.000s GC time
Loading theory "Draft.Friend_Traceback" (required by "Draft.Friend_TracebackMoreTemplates")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Friend_Traceback"
### 0.678s elapsed time, 0.982s cpu time, 0.081s GC time
Loading theory "Draft.Friend_TracebackMoreTemplates"
val templateLemmas =
   [("Friend_Traceback.istate_pendingFReqs",
     "?uid ~: set (pendingFReqs istate ?uid')",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 0)))
             )
         )),
    ("Friend_Traceback.SFC_SFD",
     "SFC ?uid1.0 ?uid2.0 ?trn ==> ~ SFD ?uid3.0 ?uid4.0 ?trn",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0),
                 template_var 2)
               )
           ))),
    ("Friend_Traceback.SFC_pendingFReqs",
     "[| validTrans ?trn; SFC ?uid' ?uid ?trn |]
      ==> ?uid \<in>\<in> pendingFReqs (srcOf ?trn) ?uid'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 template_var 1)))
           ))),
    ("Friend_Traceback.SFD_validTrans",
     "[| validTrans ?trn; UID' \<in>\<in> friendIDs (tgtOf ?trn) UID |]
      ==> ~ SFD UID UID' ?trn & ~ SFD UID' UID ?trn",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_hole 9),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 0)),
                  template_hole 3)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_hole 3),
                     template_hole 7),
                   template_var 0))),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_hole 7),
                   template_hole 3),
                 template_var 0)))
           ))),
    ("Friend_Traceback.friend_accountability",
     "[| valid ?tr; srcOf (hd ?tr) = istate;
         UID' \<in>\<in> friendIDs (tgtOf (last ?tr)) UID |]
      ==> proper ?tr",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 14,
                    template_app (template_hole 13, template_hole 12)),
                  template_hole 11),
                template_hole 10),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_hole 11,
            template_app (template_hole 8, template_var 0)),
          template_hole 7),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_hole 10,
                      template_app (template_hole 2, template_var 0))),
                  template_hole 1)))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Friend_Traceback.proper1_valid_istate",
     "[| valid ?tr; srcOf (hd ?tr) = istate;
         UID' \<in>\<in> friendIDs (tgtOf (last ?tr)) UID |]
      ==> proper1 ?tr",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 14,
                    template_app (template_hole 13, template_hole 12)),
                  template_hole 11),
                template_hole 10),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_hole 11,
            template_app (template_hole 8, template_var 0)),
          template_hole 7),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_hole 10,
                      template_app (template_hole 2, template_var 0))),
                  template_hole 1)))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Friend_Traceback.SFRC_validTrans",
     "[| validTrans ?trn; ?uid ~: set (pendingFReqs (srcOf ?trn) ?uid');
         ?uid \<in>\<in> pendingFReqs (tgtOf ?trn) ?uid' |]
      ==> SFRC ?uid ?uid' ?trn",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app
                   (template_hole 4,
                    template_app
                     (template_app
                       (template_hole 3,
                        template_app (template_hole 2, template_var 2)),
                      template_var 0)))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 1, template_var 2)),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2)
           ))),
    ("Friend_Traceback.proper2_valid_istate",
     "[| valid ?tr; srcOf (hd ?tr) = istate;
         ?uid \<in>\<in> pendingFReqs (tgtOf (last ?tr)) ?uid' |]
      ==> proper2 ?uid ?uid' ?tr",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 12,
                    template_app (template_hole 11, template_hole 10)),
                  template_hole 9),
                template_hole 8),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_hole 9,
            template_app (template_hole 6, template_var 2)),
          template_hole 5),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_hole 8,
                      template_app (template_hole 1, template_var 2))),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2)
           ))),
    ("Friend_Traceback.proper1_valid",
     "[| valid ?tr; UID' ~: set (friendIDs (srcOf (hd ?tr)) UID);
         UID' \<in>\<in> friendIDs (tgtOf (last ?tr)) UID |]
      ==> proper1 ?tr",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 13,
                    template_app (template_hole 12, template_hole 11)),
                  template_hole 10),
                template_hole 9),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_app
                   (template_hole 5,
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_hole 10,
                          template_app (template_hole 3, template_var 0))),
                      template_hole 2)))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_hole 9,
                      template_app (template_hole 1, template_var 0))),
                  template_hole 2)))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Friend_Traceback.SFC_validTrans",
     "[| validTrans ?trn; UID' ~: set (friendIDs (srcOf ?trn) UID);
         UID' \<in>\<in> friendIDs (tgtOf ?trn) UID |]
      ==> SFC UID UID' ?trn | SFC UID' UID ?trn",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_hole 10),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_app
                   (template_hole 6,
                    template_app
                     (template_app
                       (template_hole 5,
                        template_app (template_hole 4, template_var 0)),
                      template_hole 3)))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 2, template_var 0)),
                  template_hole 3)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_hole 3),
                   template_hole 7),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_hole 7),
                 template_hole 3),
               template_var 0))
           ))),
    ("Friend_Traceback.proper2_valid",
     "[| valid ?tr; ?uid ~: set (pendingFReqs (srcOf (hd ?tr)) ?uid');
         ?uid \<in>\<in> pendingFReqs (tgtOf (last ?tr)) ?uid' |]
      ==> proper2 ?uid ?uid' ?tr",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 10, template_hole 9)),
                  template_hole 8),
                template_hole 7),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app
                   (template_hole 4,
                    template_app
                     (template_app
                       (template_hole 3,
                        template_app
                         (template_hole 8,
                          template_app (template_hole 2, template_var 2))),
                      template_var 0)))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_hole 7,
                      template_app (template_hole 1, template_var 2))),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2)
           )))]:
   (string * thm * template) list
### theory "Draft.Friend_TracebackMoreTemplates"
### 0.539s elapsed time, 0.763s cpu time, 0.060s GC time
val it = (): unit
