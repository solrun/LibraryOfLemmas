Loading theory "Bounded_Deducibility_Security.Abstract_BD_Security" (required by "Draft.Post_Visibility_TracebackMoreTemplates" via "Draft.Post_Visibility_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO")
Loading theory "Fresh_Identifiers.Fresh" (required by "Draft.Post_Visibility_TracebackMoreTemplates" via "Draft.Post_Visibility_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Fresh_Identifiers.Fresh_String")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Post_Visibility_TracebackMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Post_Visibility_TracebackMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
class fresh = type +
  fixes fresh :: "'a set => 'a => 'a"
  assumes "fresh_notIn": "!!xs x. finite xs ==> fresh xs x ~: xs"
    and "fresh_eq": "!!xs x. x ~: xs ==> fresh xs x = x"
### Additional type variable(s) in locale specification "infinite": 'a
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
class infinite = type +
  assumes "infinite_UNIV": "infinite UNIV"
locale Abstract_BD_Security
  fixes validSystemTrace :: "'traces => bool"
    and V :: "'traces => 'values"
    and O :: "'traces => 'observations"
    and B :: "'values => 'values => bool"
    and TT :: "'traces => bool"
### theory "Bounded_Deducibility_Security.Abstract_BD_Security"
### 0.136s elapsed time, 0.560s cpu time, 0.029s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Post_Visibility_TracebackMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
### theory "HOL-Library.Function_Algebras"
### 0.140s elapsed time, 0.578s cpu time, 0.029s GC time
Loading theory "HOL-Library.Sublist" (required by "Draft.Post_Visibility_TracebackMoreTemplates" via "Draft.Post_Visibility_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO" via "Bounded_Deducibility_Security.BD_Security_TS" via "Bounded_Deducibility_Security.Filtermap" via "Bounded_Deducibility_Security.Trivia")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
### theory "Fresh_Identifiers.Fresh"
### 0.227s elapsed time, 0.926s cpu time, 0.029s GC time
Loading theory "Fresh_Identifiers.Fresh_String" (required by "Draft.Post_Visibility_TracebackMoreTemplates" via "Draft.Post_Visibility_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim")
Found termination order: "{}"
### theory "HOL-Library.Nat_Bijection"
### 0.382s elapsed time, 1.531s cpu time, 0.126s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Post_Visibility_TracebackMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.280s elapsed time, 1.105s cpu time, 0.098s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Post_Visibility_TracebackMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  String.literal :: fresh
  fresh_literal == fresh ::
    String.literal set => String.literal => String.literal
consts
  prefixes :: "'a list => 'a list list"
### theory "Fresh_Identifiers.Fresh_String"
### 0.242s elapsed time, 0.946s cpu time, 0.098s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Post_Visibility_TracebackMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  suffixes :: "'a list => 'a list list"
consts
  snth :: "'a stream => nat => 'a"
Proofs for inductive predicate(s) "list_emb"
  Proving monotonicity ...
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.073s elapsed time, 4.029s cpu time, 0.932s GC time
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.185s elapsed time, 4.476s cpu time, 0.932s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  sublists :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Sublist"
### 1.698s elapsed time, 6.490s cpu time, 1.185s GC time
Loading theory "Bounded_Deducibility_Security.Trivia" (required by "Draft.Post_Visibility_TracebackMoreTemplates" via "Draft.Post_Visibility_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO" via "Bounded_Deducibility_Security.BD_Security_TS" via "Bounded_Deducibility_Security.Filtermap")
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
### theory "Bounded_Deducibility_Security.Trivia"
### 0.491s elapsed time, 1.924s cpu time, 0.136s GC time
Loading theory "Bounded_Deducibility_Security.Filtermap" (required by "Draft.Post_Visibility_TracebackMoreTemplates" via "Draft.Post_Visibility_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO" via "Bounded_Deducibility_Security.BD_Security_TS")
Found termination order: "size <*mlex*> {}"
### theory "Bounded_Deducibility_Security.Filtermap"
### 0.211s elapsed time, 0.837s cpu time, 0.034s GC time
Loading theory "Bounded_Deducibility_Security.Transition_System" (required by "Draft.Post_Visibility_TracebackMoreTemplates" via "Draft.Post_Visibility_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO" via "Bounded_Deducibility_Security.BD_Security_TS")
locale Transition_System
  fixes istate :: "'state"
    and validTrans :: "'trans => bool"
    and srcOf :: "'trans => 'state"
    and tgtOf :: "'trans => 'state"
Found termination order: "{}"
Found termination order: "{}"
### theory "HOL-Library.Tree"
### 2.280s elapsed time, 8.772s cpu time, 1.341s GC time
Loading theory "Draft.Templates" (required by "Draft.Post_Visibility_TracebackMoreTemplates" via "Draft.ExtrEqs")
"[''Abc'', ''Abd'', ''Ya'', ''Yb'', ''Yzb'', ''Ya'']"
  :: "char list list"
Found termination order: "{}"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.068s elapsed time, 0.210s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Post_Visibility_TracebackMoreTemplates")
Found termination order: "{}"
"[STR ''Abc'', STR ''Abd'', STR ''Ya'', STR ''Yb'', STR ''Yzb'',
  STR ''Ya'']"
  :: "String.literal list"
Proofs for inductive predicate(s) "valid"
  Proving monotonicity ...
Proofs for inductive predicate(s) "valid2"
  Proving monotonicity ...
Proofs for inductive predicate(s) "reach"
  Proving monotonicity ...
Proofs for inductive predicate(s) "reachFrom"
  Proving monotonicity ...
### theory "Bounded_Deducibility_Security.Transition_System"
### 0.442s elapsed time, 1.355s cpu time, 0.117s GC time
Loading theory "Bounded_Deducibility_Security.BD_Security_TS" (required by "Draft.Post_Visibility_TracebackMoreTemplates" via "Draft.Post_Visibility_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO")
Loading theory "Bounded_Deducibility_Security.IO_Automaton" (required by "Draft.Post_Visibility_TracebackMoreTemplates" via "Draft.Post_Visibility_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO")
locale BD_Security_TS
  fixes istate :: "'state"
    and validTrans :: "'trans => bool"
    and srcOf :: "'trans => 'state"
    and tgtOf :: "'trans => 'state"
    and \<phi> :: "'trans => bool"
    and f :: "'trans => 'value"
    and \<gamma> :: "'trans => bool"
    and g :: "'trans => 'obs"
    and T :: "'trans => bool"
    and B :: "'value list => 'value list => bool"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.637s elapsed time, 1.829s cpu time, 0.164s GC time
Proofs for inductive predicate(s) "reachNT"
  Proving monotonicity ...
### theory "Bounded_Deducibility_Security.BD_Security_TS"
### 0.528s elapsed time, 1.499s cpu time, 0.175s GC time
locale IO_Automaton
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
Found termination order: "{}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "Bounded_Deducibility_Security.IO_Automaton"
### 0.977s elapsed time, 1.971s cpu time, 0.211s GC time
Loading theory "Bounded_Deducibility_Security.BD_Security_IO" (required by "Draft.Post_Visibility_TracebackMoreTemplates" via "Draft.Post_Visibility_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding")
locale BD_Security_IO
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
    and \<phi> :: "('state, 'act, 'out) trans => bool"
    and f :: "('state, 'act, 'out) trans => 'value"
    and \<gamma> :: "('state, 'act, 'out) trans => bool"
    and g :: "('state, 'act, 'out) trans => 'obs"
    and T :: "('state, 'act, 'out) trans => bool"
    and B :: "'value list => 'value list => bool"
### theory "Bounded_Deducibility_Security.BD_Security_IO"
### 0.334s elapsed time, 0.368s cpu time, 0.041s GC time
Loading theory "Bounded_Deducibility_Security.BD_Security_Unwinding" (required by "Draft.Post_Visibility_TracebackMoreTemplates" via "Draft.Post_Visibility_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning")
locale BD_Security_IO
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
    and \<phi> :: "('state, 'act, 'out) trans => bool"
    and f :: "('state, 'act, 'out) trans => 'value"
    and \<gamma> :: "('state, 'act, 'out) trans => bool"
    and g :: "('state, 'act, 'out) trans => 'obs"
    and T :: "('state, 'act, 'out) trans => bool"
    and B :: "'value list => 'value list => bool"
### theory "Bounded_Deducibility_Security.BD_Security_Unwinding"
### 0.305s elapsed time, 0.331s cpu time, 0.037s GC time
Loading theory "Bounded_Deducibility_Security.Compositional_Reasoning" (required by "Draft.Post_Visibility_TracebackMoreTemplates" via "Draft.Post_Visibility_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim")
locale BD_Security_IO
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
    and \<phi> :: "('state, 'act, 'out) trans => bool"
    and f :: "('state, 'act, 'out) trans => 'value"
    and \<gamma> :: "('state, 'act, 'out) trans => bool"
    and g :: "('state, 'act, 'out) trans => 'obs"
    and T :: "('state, 'act, 'out) trans => bool"
    and B :: "'value list => 'value list => bool"
Found termination order: "length <*mlex*> {}"
### theory "Bounded_Deducibility_Security.Compositional_Reasoning"
### 0.320s elapsed time, 0.347s cpu time, 0.036s GC time
Loading theory "Draft.Prelim" (required by "Draft.Post_Visibility_TracebackMoreTemplates" via "Draft.Post_Visibility_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Prelim"
### 2.272s elapsed time, 2.455s cpu time, 0.256s GC time
Loading theory "Draft.System_Specification" (required by "Draft.Post_Visibility_TracebackMoreTemplates" via "Draft.Post_Visibility_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
See theory exports
### theory "Draft.System_Specification"
### 6.008s elapsed time, 7.324s cpu time, 1.571s GC time
Loading theory "Draft.Automation_Setup" (required by "Draft.Post_Visibility_TracebackMoreTemplates" via "Draft.Post_Visibility_Traceback" via "Draft.Traceback_Intro" via "Draft.Safety_Properties")
### theory "Draft.Automation_Setup"
### 0.030s elapsed time, 0.057s cpu time, 0.000s GC time
Loading theory "Draft.Safety_Properties" (required by "Draft.Post_Visibility_TracebackMoreTemplates" via "Draft.Post_Visibility_Traceback" via "Draft.Traceback_Intro")
### theory "Draft.Safety_Properties"
### 0.265s elapsed time, 0.283s cpu time, 0.025s GC time
Loading theory "Draft.Traceback_Intro" (required by "Draft.Post_Visibility_TracebackMoreTemplates" via "Draft.Post_Visibility_Traceback")
### theory "Draft.Traceback_Intro"
### 0.020s elapsed time, 0.031s cpu time, 0.000s GC time
Loading theory "Draft.Post_Visibility_Traceback" (required by "Draft.Post_Visibility_TracebackMoreTemplates")
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Post_Visibility_Traceback"
### 0.517s elapsed time, 0.702s cpu time, 0.048s GC time
Loading theory "Draft.Post_Visibility_TracebackMoreTemplates"
val templateLemmas =
   [("Post_Visibility_Traceback.SNC_owner",
     "[| validTrans ?trn; SNC ?uid ?trn |]
      ==> ?uid = owner (tgtOf ?trn) PID",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_hole 0)))),
    ("Post_Visibility_Traceback.SNC_postIDs",
     "[| validTrans ?trn; SNC ?uid ?trn |]
      ==> PID \<in>\<in> postIDs (tgtOf ?trn)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1))))
           ))),
    ("Post_Visibility_Traceback.SNVU_visib",
     "[| validTrans ?trn; SNVU ?uid ?vs ?trn |]
      ==> vis (tgtOf ?trn) PID = ?vs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_hole 0),
         template_var 0))),
    ("Post_Visibility_Traceback.SNVU_postIDs",
     "[| validTrans ?trn; SNVU ?uid ?vs ?trn |]
      ==> PID \<in>\<in> postIDs (srcOf ?trn)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2))))
           ))),
    ("Post_Visibility_Traceback.owner_validTrans",
     "[| validTrans ?trn; PID \<in>\<in> postIDs (srcOf ?trn) |]
      ==> owner (srcOf ?trn) PID = owner (tgtOf ?trn) PID",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 0))))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 0)),
           template_hole 6),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_hole 6)))),
    ("Post_Visibility_Traceback.valid_mono_postID",
     "[| valid ?tr; PID \<in>\<in> postIDs (srcOf (hd ?tr)) |]
      ==> PID \<in>\<in> postIDs (tgtOf (last ?tr))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_hole 8)),
                  template_hole 7),
                template_hole 6),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app
                   (template_hole 7,
                    template_app (template_hole 1, template_var 0)))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 0, template_var 0)))))
           ))),
    ("Post_Visibility_Traceback.owner_valid",
     "[| valid ?tr; PID \<in>\<in> postIDs (srcOf (hd ?tr)) |]
      ==> owner (srcOf (hd ?tr)) PID = owner (tgtOf (last ?tr)) PID",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 12,
                    template_app (template_hole 11, template_hole 10)),
                  template_hole 9),
                template_hole 8),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app
                   (template_hole 9,
                    template_app (template_hole 3, template_var 0)))))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 9,
               template_app (template_hole 3, template_var 0))),
           template_hole 6),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 8,
               template_app (template_hole 0, template_var 0))),
           template_hole 6)))),
    ("Post_Visibility_Traceback.not_never_ex",
     "~ BD_Security_IO.never ?P ?xs ==>
      EX xs1 x xs2.
         ?xs = xs1 @ x # xs2 & ?P x & BD_Security_IO.never ?P xs2",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, t_empty), template_var 0)
                )
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Post_Visibility_Traceback.SNVU_vis_validTrans",
     "[| validTrans ?trn; PID \<in>\<in> postIDs (srcOf ?trn);
         ALL vs. ~ SNVU (owner (srcOf ?trn) PID) vs ?trn |]
      ==> vis (srcOf ?trn) PID = vis (tgtOf ?trn) PID",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_hole 12),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_hole 10),
              template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 0))))
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 7, template_var 0)),
           template_hole 10),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_hole 10)))),
    ("Post_Visibility_Traceback.post_accountability",
     "[| valid ?tr; srcOf (hd ?tr) = istate;
         PID \<in>\<in> postIDs (tgtOf (last ?tr));
         vis (tgtOf (last ?tr)) PID = VIS |]
      ==> proper ?tr",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 16,
                    template_app (template_hole 15, template_hole 14)),
                  template_hole 13),
                template_hole 12),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_hole 13,
            template_app (template_hole 10, template_var 0)),
          template_hole 9),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app
                   (template_hole 12,
                    template_app (template_hole 4, template_var 0)))))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 2,
              template_app
               (template_hole 12,
                template_app (template_hole 4, template_var 0))),
            template_hole 7),
          template_hole 1)],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Post_Visibility_Traceback.SNVU_validTrans",
     "[| validTrans ?trn; PID \<in>\<in> postIDs (srcOf ?trn);
         vis (srcOf ?trn) PID ~= VIS; vis (tgtOf ?trn) PID = VIS |]
      ==> SNVU (owner (srcOf ?trn) PID) VIS ?trn",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_hole 12),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_hole 10),
              template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 0))))
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 7, template_var 0)),
                template_hole 10),
              template_hole 3)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 2, template_var 0)),
            template_hole 10),
          template_hole 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_hole 7, template_var 0)),
                   template_hole 10)),
               template_hole 3),
             template_var 0)
           ))),
    ("Post_Visibility_Traceback.SNVU_vis_valid",
     "[| valid ?tr; PID \<in>\<in> postIDs (srcOf (hd ?tr));
         ALL vis.
            BD_Security_IO.never (SNVU (owner (srcOf (hd ?tr)) PID) vis)
             ?tr |]
      ==> vis (srcOf (hd ?tr)) PID = vis (tgtOf (last ?tr)) PID",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 17,
                    template_app (template_hole 16, template_hole 15)),
                  template_hole 14),
                template_hole 13),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_hole 11),
              template_app
               (template_hole 10,
                template_app
                 (template_hole 9,
                  template_app
                   (template_hole 14,
                    template_app (template_hole 8, template_var 0)))))
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 14,
               template_app (template_hole 8, template_var 0))),
           template_hole 11),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 13,
               template_app (template_hole 0, template_var 0))),
           template_hole 11)))),
    ("Post_Visibility_Traceback.proper1_never",
     "[| valid ?tr; PID \<in>\<in> postIDs (srcOf (hd ?tr)); proper1 ?tr;
         vis (tgtOf (last ?tr)) PID = VIS |]
      ==> EX tr2 trnn tr3.
             ?tr = tr2 @ trnn # tr3 &
             SNVU (owner (srcOf trnn) PID) VIS trnn &
             (ALL vis.
                 BD_Security_IO.never (SNVU (owner (srcOf trnn) PID) vis)
                  tr3)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 25,
                    template_app (template_hole 24, template_hole 23)),
                  template_hole 22),
                template_hole 21),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_hole 19),
              template_app
               (template_hole 18,
                template_app
                 (template_hole 17,
                  template_app
                   (template_hole 22,
                    template_app (template_hole 16, template_var 0)))))
            ),
        template_predicate
         (template_app (template_hole 15, template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_hole 13,
              template_app
               (template_hole 21,
                template_app (template_hole 12, template_var 0))),
            template_hole 19),
          template_hole 11)],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Post_Visibility_Traceback.proper2_valid_istate",
     "[| VIS ~= FriendV; valid ?tr; srcOf (hd ?tr) = istate;
         PID \<in>\<in> postIDs (tgtOf (last ?tr)) |]
      ==> proper2 ?tr",
     template_implication
      ([template_negation
         (
            template_equation
             (template_hole 19,
              template_app
               (template_hole 18,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 17, template_hole 16),
                              template_hole 15),
                            template_hole 15),
                          template_hole 16),
                        template_hole 16),
                      template_hole 15),
                    template_hole 15),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 17, template_hole 16),
                                template_hole 15),
                              template_hole 16),
                            template_hole 16),
                          template_hole 15),
                        template_hole 15),
                      template_hole 15),
                    template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_hole 17, template_hole 15),
                                  template_hole 16),
                                template_hole 16),
                              template_hole 15),
                            template_hole 16),
                          template_hole 15),
                        template_hole 15),
                      template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_hole 17, template_hole 15),
                                    template_hole 16),
                                  template_hole 15),
                                template_hole 16),
                              template_hole 16),
                            template_hole 15),
                          template_hole 15),
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_app
 (template_hole 17, template_hole 16),
template_hole 15),
                                    template_hole 15),
                                  template_hole 15),
                                template_hole 16),
                              template_hole 15),
                            template_hole 15),
                          template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_app
 (template_app (template_hole 17, template_hole 16), template_hole 16),
template_hole 15),
                                    template_hole 16),
                                  template_hole 16),
                                template_hole 15),
                              template_hole 15),
                            template_hole 14))))))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 13,
                    template_app (template_hole 12, template_hole 11)),
                  template_hole 10),
                template_hole 9),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_hole 10,
            template_app (template_hole 7, template_var 0)),
          template_hole 6),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app
                   (template_hole 9,
                    template_app (template_hole 1, template_var 0)))))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Post_Visibility_Traceback.SNC_visPost",
     "[| VIS ~= FriendV; validTrans ?trn; SNC ?uid ?trn;
         reach (srcOf ?trn) |]
      ==> vis (tgtOf ?trn) PID ~= VIS",
     template_implication
      ([template_negation
         (
            template_equation
             (template_hole 14,
              template_app
               (template_hole 13,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 12, template_hole 11),
                              template_hole 10),
                            template_hole 10),
                          template_hole 11),
                        template_hole 11),
                      template_hole 10),
                    template_hole 10),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 12, template_hole 11),
                                template_hole 10),
                              template_hole 11),
                            template_hole 11),
                          template_hole 10),
                        template_hole 10),
                      template_hole 10),
                    template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_hole 12, template_hole 10),
                                  template_hole 11),
                                template_hole 11),
                              template_hole 10),
                            template_hole 11),
                          template_hole 10),
                        template_hole 10),
                      template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_hole 12, template_hole 10),
                                    template_hole 11),
                                  template_hole 10),
                                template_hole 11),
                              template_hole 11),
                            template_hole 10),
                          template_hole 10),
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_app
 (template_hole 12, template_hole 11),
template_hole 10),
                                    template_hole 10),
                                  template_hole 10),
                                template_hole 11),
                              template_hole 10),
                            template_hole 10),
                          template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_app
 (template_app (template_hole 12, template_hole 11), template_hole 11),
template_hole 10),
                                    template_hole 11),
                                  template_hole 11),
                                template_hole 10),
                              template_hole 10),
                            template_hole 9))))))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_app (template_hole 8, template_hole 7)),
                  template_hole 3),
                template_hole 2),
              template_app (template_hole 3, template_var 1))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 2, template_var 1)),
               template_hole 0),
             template_hole 14)
           ))),
    ("Post_Visibility_Traceback.SNC_validTrans",
     "[| VIS ~= FriendV; validTrans ?trn; PID ~: set (postIDs (srcOf ?trn));
         PID \<in>\<in> postIDs (tgtOf ?trn) |]
      ==> EX uid. SNC uid ?trn",
     template_implication
      ([template_negation
         (
            template_equation
             (template_hole 15,
              template_app
               (template_hole 14,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 13, template_hole 12),
                              template_hole 11),
                            template_hole 11),
                          template_hole 12),
                        template_hole 12),
                      template_hole 11),
                    template_hole 11),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 13, template_hole 12),
                                template_hole 11),
                              template_hole 12),
                            template_hole 12),
                          template_hole 11),
                        template_hole 11),
                      template_hole 11),
                    template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_hole 13, template_hole 11),
                                  template_hole 12),
                                template_hole 12),
                              template_hole 11),
                            template_hole 12),
                          template_hole 11),
                        template_hole 11),
                      template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_hole 13, template_hole 11),
                                    template_hole 12),
                                  template_hole 11),
                                template_hole 12),
                              template_hole 12),
                            template_hole 11),
                          template_hole 11),
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_app
 (template_hole 13, template_hole 12),
template_hole 11),
                                    template_hole 11),
                                  template_hole 11),
                                template_hole 12),
                              template_hole 11),
                            template_hole 11),
                          template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_app
 (template_app (template_hole 13, template_hole 12), template_hole 12),
template_hole 11),
                                    template_hole 12),
                                  template_hole 12),
                                template_hole 11),
                              template_hole 11),
                            template_hole 10))))))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_app
                   (template_hole 5,
                    template_app
                     (template_hole 4,
                      template_app (template_hole 3, template_var 0))))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 2, template_var 0))))
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Post_Visibility_Traceback.proper2_valid",
     "[| VIS ~= FriendV; valid ?tr; PID ~: set (postIDs (srcOf (hd ?tr)));
         PID \<in>\<in> postIDs (tgtOf (last ?tr)) |]
      ==> proper2 ?tr",
     template_implication
      ([template_negation
         (
            template_equation
             (template_hole 17,
              template_app
               (template_hole 16,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 15, template_hole 14),
                              template_hole 13),
                            template_hole 13),
                          template_hole 14),
                        template_hole 14),
                      template_hole 13),
                    template_hole 13),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 15, template_hole 14),
                                template_hole 13),
                              template_hole 14),
                            template_hole 14),
                          template_hole 13),
                        template_hole 13),
                      template_hole 13),
                    template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_hole 15, template_hole 13),
                                  template_hole 14),
                                template_hole 14),
                              template_hole 13),
                            template_hole 14),
                          template_hole 13),
                        template_hole 13),
                      template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_hole 15, template_hole 13),
                                    template_hole 14),
                                  template_hole 13),
                                template_hole 14),
                              template_hole 14),
                            template_hole 13),
                          template_hole 13),
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_app
 (template_hole 15, template_hole 14),
template_hole 13),
                                    template_hole 13),
                                  template_hole 13),
                                template_hole 14),
                              template_hole 13),
                            template_hole 13),
                          template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_app
 (template_app (template_hole 15, template_hole 14), template_hole 14),
template_hole 13),
                                    template_hole 14),
                                  template_hole 14),
                                template_hole 13),
                              template_hole 13),
                            template_hole 12))))))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 10, template_hole 9)),
                  template_hole 8),
                template_hole 7),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_app
                   (template_hole 4,
                    template_app
                     (template_hole 3,
                      template_app
                       (template_hole 8,
                        template_app (template_hole 2, template_var 0)))))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app
                   (template_hole 7,
                    template_app (template_hole 1, template_var 0)))))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Post_Visibility_Traceback.proper1_valid",
     "[| VIS ~= FriendV; valid ?tr; PID \<in>\<in> postIDs (srcOf (hd ?tr));
         vis (srcOf (hd ?tr)) PID ~= VIS;
         vis (tgtOf (last ?tr)) PID = VIS |]
      ==> proper1 ?tr",
     template_implication
      ([template_negation
         (
            template_equation
             (template_hole 18,
              template_app
               (template_hole 17,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 16, template_hole 15),
                              template_hole 14),
                            template_hole 14),
                          template_hole 15),
                        template_hole 15),
                      template_hole 14),
                    template_hole 14),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 16, template_hole 15),
                                template_hole 14),
                              template_hole 15),
                            template_hole 15),
                          template_hole 14),
                        template_hole 14),
                      template_hole 14),
                    template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_hole 16, template_hole 14),
                                  template_hole 15),
                                template_hole 15),
                              template_hole 14),
                            template_hole 15),
                          template_hole 14),
                        template_hole 14),
                      template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_hole 16, template_hole 14),
                                    template_hole 15),
                                  template_hole 14),
                                template_hole 15),
                              template_hole 15),
                            template_hole 14),
                          template_hole 14),
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_app
 (template_hole 16, template_hole 15),
template_hole 14),
                                    template_hole 14),
                                  template_hole 14),
                                template_hole 15),
                              template_hole 14),
                            template_hole 14),
                          template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_app
 (template_app (template_hole 16, template_hole 15), template_hole 15),
template_hole 14),
                                    template_hole 15),
                                  template_hole 15),
                                template_hole 14),
                              template_hole 14),
                            template_hole 13))))))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 12,
                    template_app (template_hole 11, template_hole 10)),
                  template_hole 9),
                template_hole 8),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app
                   (template_hole 9,
                    template_app (template_hole 3, template_var 0)))))
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_hole 9,
                    template_app (template_hole 3, template_var 0))),
                template_hole 6),
              template_hole 18)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 2,
              template_app
               (template_hole 8,
                template_app (template_hole 1, template_var 0))),
            template_hole 6),
          template_hole 18)],
       template_predicate
        (template_app (template_hole 0, template_var 0))))]:
   (string * thm * template) list
### theory "Draft.Post_Visibility_TracebackMoreTemplates"
### 0.580s elapsed time, 0.821s cpu time, 0.074s GC time
val it = (): unit
