Loading theory "Bounded_Deducibility_Security.Abstract_BD_Security" (required by "Draft.Post_Value_SetupMoreTemplates" via "Draft.Post_Value_Setup" via "Draft.Post_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO")
Loading theory "Fresh_Identifiers.Fresh" (required by "Draft.Post_Value_SetupMoreTemplates" via "Draft.Post_Value_Setup" via "Draft.Post_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Fresh_Identifiers.Fresh_String")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Post_Value_SetupMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Post_Value_SetupMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
class fresh = type +
  fixes fresh :: "'a set => 'a => 'a"
  assumes "fresh_notIn": "!!xs x. finite xs ==> fresh xs x ~: xs"
    and "fresh_eq": "!!xs x. x ~: xs ==> fresh xs x = x"
### Additional type variable(s) in locale specification "infinite": 'a
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale Abstract_BD_Security
  fixes validSystemTrace :: "'traces => bool"
    and V :: "'traces => 'values"
    and O :: "'traces => 'observations"
    and B :: "'values => 'values => bool"
    and TT :: "'traces => bool"
### theory "Bounded_Deducibility_Security.Abstract_BD_Security"
### 0.129s elapsed time, 0.542s cpu time, 0.032s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Post_Value_SetupMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
class infinite = type +
  assumes "infinite_UNIV": "infinite UNIV"
### theory "HOL-Library.Function_Algebras"
### 0.151s elapsed time, 0.629s cpu time, 0.032s GC time
Loading theory "HOL-Library.Sublist" (required by "Draft.Post_Value_SetupMoreTemplates" via "Draft.Post_Value_Setup" via "Draft.Post_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO" via "Bounded_Deducibility_Security.BD_Security_TS" via "Bounded_Deducibility_Security.Filtermap" via "Bounded_Deducibility_Security.Trivia")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
### theory "Fresh_Identifiers.Fresh"
### 0.269s elapsed time, 1.101s cpu time, 0.032s GC time
Loading theory "Fresh_Identifiers.Fresh_String" (required by "Draft.Post_Value_SetupMoreTemplates" via "Draft.Post_Value_Setup" via "Draft.Post_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim")
### theory "HOL-Library.Nat_Bijection"
### 0.344s elapsed time, 1.380s cpu time, 0.131s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Post_Value_SetupMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.225s elapsed time, 0.883s cpu time, 0.099s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Post_Value_SetupMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "{}"
instantiation
  String.literal :: fresh
  fresh_literal == fresh ::
    String.literal set => String.literal => String.literal
consts
  prefixes :: "'a list => 'a list list"
### theory "Fresh_Identifiers.Fresh_String"
### 0.249s elapsed time, 0.971s cpu time, 0.184s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Post_Value_SetupMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  suffixes :: "'a list => 'a list list"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
Proofs for inductive predicate(s) "list_emb"
  Proving monotonicity ...
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.991s elapsed time, 3.787s cpu time, 0.858s GC time
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.901s elapsed time, 3.432s cpu time, 0.772s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  sublists :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Sublist"
### 1.507s elapsed time, 5.820s cpu time, 1.076s GC time
Loading theory "Bounded_Deducibility_Security.Trivia" (required by "Draft.Post_Value_SetupMoreTemplates" via "Draft.Post_Value_Setup" via "Draft.Post_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO" via "Bounded_Deducibility_Security.BD_Security_TS" via "Bounded_Deducibility_Security.Filtermap")
Found termination order: "{}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
### theory "Bounded_Deducibility_Security.Trivia"
### 0.476s elapsed time, 1.878s cpu time, 0.132s GC time
Loading theory "Bounded_Deducibility_Security.Filtermap" (required by "Draft.Post_Value_SetupMoreTemplates" via "Draft.Post_Value_Setup" via "Draft.Post_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO" via "Bounded_Deducibility_Security.BD_Security_TS")
Found termination order: "size <*mlex*> {}"
"[''Abc'', ''Abd'', ''Ya'', ''Yb'', ''Yzb'', ''Ya'']"
  :: "char list list"
Loading theory "Bounded_Deducibility_Security.Transition_System" (required by "Draft.Post_Value_SetupMoreTemplates" via "Draft.Post_Value_Setup" via "Draft.Post_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO" via "Bounded_Deducibility_Security.BD_Security_TS")
locale Transition_System
  fixes istate :: "'state"
    and validTrans :: "'trans => bool"
    and srcOf :: "'trans => 'state"
    and tgtOf :: "'trans => 'state"
### theory "Bounded_Deducibility_Security.Filtermap"
### 0.223s elapsed time, 0.876s cpu time, 0.072s GC time
### theory "HOL-Library.Tree"
### 2.026s elapsed time, 7.869s cpu time, 1.181s GC time
Loading theory "Draft.Templates" (required by "Draft.Post_Value_SetupMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.083s elapsed time, 0.254s cpu time, 0.052s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Post_Value_SetupMoreTemplates")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Proofs for inductive predicate(s) "valid"
"[STR ''Abc'', STR ''Abd'', STR ''Ya'', STR ''Yb'', STR ''Yzb'',
  STR ''Ya'']"
  :: "String.literal list"
  Proving monotonicity ...
Proofs for inductive predicate(s) "valid2"
  Proving monotonicity ...
Proofs for inductive predicate(s) "reach"
  Proving monotonicity ...
Proofs for inductive predicate(s) "reachFrom"
  Proving monotonicity ...
### theory "Bounded_Deducibility_Security.Transition_System"
### 0.424s elapsed time, 1.248s cpu time, 0.092s GC time
Loading theory "Bounded_Deducibility_Security.BD_Security_TS" (required by "Draft.Post_Value_SetupMoreTemplates" via "Draft.Post_Value_Setup" via "Draft.Post_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO")
Loading theory "Bounded_Deducibility_Security.IO_Automaton" (required by "Draft.Post_Value_SetupMoreTemplates" via "Draft.Post_Value_Setup" via "Draft.Post_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.668s elapsed time, 1.966s cpu time, 0.175s GC time
locale BD_Security_TS
  fixes istate :: "'state"
    and validTrans :: "'trans => bool"
    and srcOf :: "'trans => 'state"
    and tgtOf :: "'trans => 'state"
    and \<phi> :: "'trans => bool"
    and f :: "'trans => 'value"
    and \<gamma> :: "'trans => bool"
    and g :: "'trans => 'obs"
    and T :: "'trans => bool"
    and B :: "'value list => 'value list => bool"
Proofs for inductive predicate(s) "reachNT"
  Proving monotonicity ...
### theory "Bounded_Deducibility_Security.BD_Security_TS"
### 0.529s elapsed time, 1.457s cpu time, 0.183s GC time
locale IO_Automaton
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
Found termination order: "{}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "Bounded_Deducibility_Security.IO_Automaton"
### 0.984s elapsed time, 1.941s cpu time, 0.221s GC time
Loading theory "Bounded_Deducibility_Security.BD_Security_IO" (required by "Draft.Post_Value_SetupMoreTemplates" via "Draft.Post_Value_Setup" via "Draft.Post_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding")
locale BD_Security_IO
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
    and \<phi> :: "('state, 'act, 'out) trans => bool"
    and f :: "('state, 'act, 'out) trans => 'value"
    and \<gamma> :: "('state, 'act, 'out) trans => bool"
    and g :: "('state, 'act, 'out) trans => 'obs"
    and T :: "('state, 'act, 'out) trans => bool"
    and B :: "'value list => 'value list => bool"
### theory "Bounded_Deducibility_Security.BD_Security_IO"
### 0.333s elapsed time, 0.363s cpu time, 0.037s GC time
Loading theory "Bounded_Deducibility_Security.BD_Security_Unwinding" (required by "Draft.Post_Value_SetupMoreTemplates" via "Draft.Post_Value_Setup" via "Draft.Post_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning")
locale BD_Security_IO
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
    and \<phi> :: "('state, 'act, 'out) trans => bool"
    and f :: "('state, 'act, 'out) trans => 'value"
    and \<gamma> :: "('state, 'act, 'out) trans => bool"
    and g :: "('state, 'act, 'out) trans => 'obs"
    and T :: "('state, 'act, 'out) trans => bool"
    and B :: "'value list => 'value list => bool"
### theory "Bounded_Deducibility_Security.BD_Security_Unwinding"
### 0.306s elapsed time, 0.329s cpu time, 0.032s GC time
Loading theory "Bounded_Deducibility_Security.Compositional_Reasoning" (required by "Draft.Post_Value_SetupMoreTemplates" via "Draft.Post_Value_Setup" via "Draft.Post_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim")
locale BD_Security_IO
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
    and \<phi> :: "('state, 'act, 'out) trans => bool"
    and f :: "('state, 'act, 'out) trans => 'value"
    and \<gamma> :: "('state, 'act, 'out) trans => bool"
    and g :: "('state, 'act, 'out) trans => 'obs"
    and T :: "('state, 'act, 'out) trans => bool"
    and B :: "'value list => 'value list => bool"
Found termination order: "length <*mlex*> {}"
### theory "Bounded_Deducibility_Security.Compositional_Reasoning"
### 0.323s elapsed time, 0.349s cpu time, 0.034s GC time
Loading theory "Draft.Prelim" (required by "Draft.Post_Value_SetupMoreTemplates" via "Draft.Post_Value_Setup" via "Draft.Post_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup" via "Draft.System_Specification")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Prelim"
### 2.258s elapsed time, 2.419s cpu time, 0.224s GC time
Loading theory "Draft.System_Specification" (required by "Draft.Post_Value_SetupMoreTemplates" via "Draft.Post_Value_Setup" via "Draft.Post_Intro" via "Draft.Safety_Properties" via "Draft.Automation_Setup")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
See theory exports
### theory "Draft.System_Specification"
### 6.159s elapsed time, 8.397s cpu time, 2.783s GC time
Loading theory "Draft.Automation_Setup" (required by "Draft.Post_Value_SetupMoreTemplates" via "Draft.Post_Value_Setup" via "Draft.Post_Intro" via "Draft.Safety_Properties")
### theory "Draft.Automation_Setup"
### 0.030s elapsed time, 0.057s cpu time, 0.000s GC time
Loading theory "Draft.Safety_Properties" (required by "Draft.Post_Value_SetupMoreTemplates" via "Draft.Post_Value_Setup" via "Draft.Post_Intro")
### theory "Draft.Safety_Properties"
### 0.243s elapsed time, 0.243s cpu time, 0.000s GC time
Loading theory "Draft.Observation_Setup" (required by "Draft.Post_Value_SetupMoreTemplates" via "Draft.Post_Value_Setup" via "Draft.Post_Intro")
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Observation_Setup"
### 0.108s elapsed time, 0.163s cpu time, 0.061s GC time
Loading theory "Draft.Post_Intro" (required by "Draft.Post_Value_SetupMoreTemplates" via "Draft.Post_Value_Setup")
### theory "Draft.Post_Intro"
### 0.019s elapsed time, 0.020s cpu time, 0.000s GC time
Loading theory "Draft.Post_Value_Setup" (required by "Draft.Post_Value_SetupMoreTemplates")
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Post_Value_Setup"
### 0.498s elapsed time, 0.641s cpu time, 0.040s GC time
Loading theory "Draft.Post_Value_SetupMoreTemplates"
val templateLemmas =
   [("Post_Value_Setup.eeqButPID_eeq", "eeqButPID ?ntcs ?ntcs",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Post_Value_Setup.eqButPID_refl", "eqButPID ?s ?s",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Post_Value_Setup.eeqButPID_sym",
     "eeqButPID ?ntcs ?ntcs1.0 ==> eeqButPID ?ntcs1.0 ?ntcs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Post_Value_Setup.eqButPID_sym",
     "eqButPID ?s ?s1.0 ==> eqButPID ?s1.0 ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Post_Value_Setup.eqButPID_open",
     "eqButPID ?s ?s1.0 ==>
      Post_Value_Setup.open ?s = Post_Value_Setup.open ?s1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Post_Value_Setup.eqButPID_openToUIDs",
     "eqButPID ?s ?s1.0 ==> openToUIDs ?s = openToUIDs ?s1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Post_Value_Setup.not_open_eqButPID",
     "[| ~ Post_Value_Setup.open ?s; eqButPID ?s ?s1.0 |]
      ==> ~ Post_Value_Setup.open ?s1.0",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (template_app (template_hole 1, template_var 0))
           ))),
    ("Post_Value_Setup.eeqButPID_trans",
     "[| eeqButPID ?ntcs ?ntcs1.0; eeqButPID ?ntcs1.0 ?ntcs2.0 |]
      ==> eeqButPID ?ntcs ?ntcs2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Post_Value_Setup.eqButPID_trans",
     "[| eqButPID ?s ?s1.0; eqButPID ?s1.0 ?s2.0 |] ==> eqButPID ?s ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Post_Value_Setup.eeqButPID_toEq",
     "eeqButPID ?ntcs ?ntcs1.0 ==>
      ?ntcs(PID := ?pst) = ?ntcs1.0(PID := ?pst)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0),
           template_var 0)))),
    ("Post_Value_Setup.eeqButPID_update_post",
     "eeqButPID ?ntcs ?ntcs1.0 ==>
      eeqButPID (?ntcs(?pid := ?ntc)) (?ntcs1.0(?pid := ?ntc))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Post_Value_Setup.eqButPID_actions",
     "eqButPID ?s ?s1.0 ==> listPosts ?s ?uid ?p = listPosts ?s1.0 ?uid ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Post_Value_Setup.eqButPID_setPost",
     "eqButPID ?s ?s1.0 ==>
      (post ?s)(PID := ?pst) = (post ?s1.0)(PID := ?pst)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_hole 0),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_hole 0),
           template_var 0)))),
    ("Post_Value_Setup.eqButPID_update_post",
     "eqButPID ?s ?s1.0 ==>
      eeqButPID ((post ?s)(?pid := ?ntc)) ((post ?s1.0)(?pid := ?ntc))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 3)),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 template_var 1),
               template_var 0))
           ))),
    ("Post_Value_Setup.eeqButPID_not_PID",
     "[| eeqButPID ?ntcs ?ntcs1.0; ?pid ~= PID |]
      ==> ?ntcs ?pid = ?ntcs1.0 ?pid",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_equation
        (template_app (template_var 2, template_var 0),
         template_app (template_var 1, template_var 0)))),
    ("Post_Value_Setup.eeqButPID_intro",
     "ALL pid. pid ~= PID --> ?ntcs pid = ?ntcs1.0 pid ==>
      eeqButPID ?ntcs ?ntcs1.0",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Post_Value_Setup.eqButPID_not_PID",
     "[| eqButPID ?s ?s1.0; ?pid ~= PID |]
      ==> post ?s ?pid = post ?s1.0 ?pid",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Post_Value_Setup.eqButPID_cong",
     "[| eqButPID ?s ?s1.0; ?uu1.0 = ?uu2.0 |]
      ==> eqButPID (?s(| vis := ?uu1.0 |)) (?s1.0(| vis := ?uu2.0 |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_app
              (template_app (template_hole 0, t_empty), template_var 2))
           ))),
    ("Post_Value_Setup.eqButPID_cong",
     "[| eqButPID ?s ?s1.0; ?uu1.0 = ?uu2.0 |]
      ==> eqButPID (?s(| owner := ?uu1.0 |)) (?s1.0(| owner := ?uu2.0 |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_app
              (template_app (template_hole 0, t_empty), template_var 2))
           ))),
    ("Post_Value_Setup.eqButPID_cong",
     "[| eqButPID ?s ?s1.0; ?uu1.0 = ?uu2.0 |]
      ==> eqButPID (?s(| friendReq := ?uu1.0 |))
           (?s1.0(| friendReq := ?uu2.0 |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_app
              (template_app (template_hole 0, t_empty), template_var 2))
           ))),
    ("Post_Value_Setup.eqButPID_cong",
     "[| eqButPID ?s ?s1.0; ?uu1.0 = ?uu2.0 |]
      ==> eqButPID (?s(| friendIDs := ?uu1.0 |))
           (?s1.0(| friendIDs := ?uu2.0 |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_app
              (template_app (template_hole 0, t_empty), template_var 2))
           ))),
    ("Post_Value_Setup.eqButPID_cong",
     "[| eqButPID ?s ?s1.0; ?uu1.0 = ?uu2.0 |]
      ==> eqButPID (?s(| pendingFReqs := ?uu1.0 |))
           (?s1.0(| pendingFReqs := ?uu2.0 |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_app
              (template_app (template_hole 0, t_empty), template_var 2))
           ))),
    ("Post_Value_Setup.eqButPID_cong",
     "[| eqButPID ?s ?s1.0; ?uu1.0 = ?uu2.0 |]
      ==> eqButPID (?s(| userReq := ?uu1.0 |))
           (?s1.0(| userReq := ?uu2.0 |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_app
              (template_app (template_hole 0, t_empty), template_var 2))
           ))),
    ("Post_Value_Setup.eqButPID_cong",
     "[| eqButPID ?s ?s1.0; ?uu1.0 = ?uu2.0 |]
      ==> eqButPID (?s(| user := ?uu1.0 |)) (?s1.0(| user := ?uu2.0 |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_app
              (template_app (template_hole 0, t_empty), template_var 2))
           ))),
    ("Post_Value_Setup.eqButPID_cong",
     "[| eqButPID ?s ?s1.0; ?uu1.0 = ?uu2.0 |]
      ==> eqButPID (?s(| pass := ?uu1.0 |)) (?s1.0(| pass := ?uu2.0 |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_app
              (template_app (template_hole 0, t_empty), template_var 2))
           ))),
    ("Post_Value_Setup.eqButPID_cong",
     "[| eqButPID ?s ?s1.0; ?uu1.0 = ?uu2.0 |]
      ==> eqButPID (?s(| postIDs := ?uu1.0 |))
           (?s1.0(| postIDs := ?uu2.0 |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_app
              (template_app (template_hole 0, t_empty), template_var 2))
           ))),
    ("Post_Value_Setup.eqButPID_cong",
     "[| eqButPID ?s ?s1.0; ?uu1.0 = ?uu2.0 |]
      ==> eqButPID (?s(| pendingUReqs := ?uu1.0 |))
           (?s1.0(| pendingUReqs := ?uu2.0 |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_app
              (template_app (template_hole 0, t_empty), template_var 2))
           ))),
    ("Post_Value_Setup.eqButPID_cong",
     "[| eqButPID ?s ?s1.0; ?uu1.0 = ?uu2.0 |]
      ==> eqButPID (?s(| userIDs := ?uu1.0 |))
           (?s1.0(| userIDs := ?uu2.0 |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_app
              (template_app (template_hole 0, t_empty), template_var 2))
           ))),
    ("Post_Value_Setup.eqButPID_cong",
     "[| eqButPID ?s ?s1.0; ?uu1.0 = ?uu2.0 |]
      ==> eqButPID (?s(| admin := ?uu1.0 |)) (?s1.0(| admin := ?uu2.0 |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_app
              (template_app (template_hole 0, t_empty), template_var 2))
           ))),
    ("Post_Value_Setup.eqButPID_cong",
     "[| eqButPID ?s ?s1.0; eeqButPID ?uu1.0 ?uu2.0 |]
      ==> eqButPID (?s(| post := ?uu1.0 |)) (?s1.0(| post := ?uu2.0 |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_app
              (template_app (template_hole 0, t_empty), template_var 2))
           ))),
    ("Post_Value_Setup.Uact_uPost_step_eqButPID",
     "[| ?a = Uact (uPost ?uid ?p PID ?pst); step ?s ?a = (?ou, ?s') |]
      ==> eqButPID ?s ?s'",
     template_implication
      ([template_equation
         (template_var 6,
          template_app
           (template_hole 6,
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 4),
                template_hole 4),
              template_var 3))),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 6),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Post_Value_Setup.eqButPID_step",
     "[| eqButPID ?s ?s1.0; step ?s ?a = (?ou, ?s');
         step ?s1.0 ?a = (?ou1.0, ?s1') |]
      ==> eqButPID ?s' ?s1'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 6),
              template_var 5)
            ),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 6), template_var 4),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2), template_var 0)
           ))),
    ("Post_Value_Setup.eeqButPID_cong",
     "[| eeqButPID ?ntcs ?ntcs1.0; PID = PID ==> ?eqButT ?uu ?uu1.0;
         ?pid ~= PID ==> ?uu = ?uu1.0 |]
      ==> eeqButPID (?ntcs(?pid := ?uu)) (?ntcs1.0(?pid := ?uu1.0))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_var 4)
            ),
        template_implication
         ([template_equation (template_hole 3, template_hole 3)],
          template_predicate
           (
              template_app
               (template_app (template_var 3, template_var 2),
                template_var 1)
              )),
        template_implication
         ([template_negation
            (template_equation (template_var 0, template_hole 3))],
          template_equation (template_var 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 0),
                 template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0),
               template_var 1))
           ))),
    ("Post_Value_Setup.eqButPID_step_\<phi>",
     "[| eqButPID ?s ?s1.0; step ?s ?a = (?ou, ?s');
         step ?s1.0 ?a = (?ou1.0, ?s1') |]
      ==> \<phi> (Trans ?s ?a ?ou ?s') =
          \<phi> (Trans ?s1.0 ?a ?ou1.0 ?s1')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 6),
              template_var 5)
            ),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 6), template_var 4),
          template_app
           (template_app (template_hole 3, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 6),
                 template_var 4),
               template_var 3),
             template_var 2)),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 4),
               template_var 1),
             template_var 0))))),
    ("Post_Value_Setup.eqButPID_step_\<phi>_imp",
     "[| eqButPID ?s ?s1.0; step ?s ?a = (?ou, ?s');
         step ?s1.0 ?a = (?ou1.0, ?s1'); \<phi> (Trans ?s ?a ?ou ?s') |]
      ==> \<phi> (Trans ?s1.0 ?a ?ou1.0 ?s1')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 6),
              template_var 5)
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 6), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 0, template_var 6),
                    template_var 4),
                  template_var 3),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 4),
                 template_var 1),
               template_var 0))
           ))),
    ("Post_Value_Setup.eqButPID_intro",
     "admin ?s = admin ?s1.0 &
      pendingUReqs ?s = pendingUReqs ?s1.0 &
      userReq ?s = userReq ?s1.0 &
      userIDs ?s = userIDs ?s1.0 &
      user ?s = user ?s1.0 &
      pass ?s = pass ?s1.0 &
      pendingFReqs ?s = pendingFReqs ?s1.0 &
      friendReq ?s = friendReq ?s1.0 &
      friendIDs ?s = friendIDs ?s1.0 &
      postIDs ?s = postIDs ?s1.0 &
      admin ?s = admin ?s1.0 &
      eeqButPID (post ?s) (post ?s1.0) &
      owner ?s = owner ?s1.0 & vis ?s = vis ?s1.0 ==>
      eqButPID ?s ?s1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 25,
                template_app
                 (template_app
                   (template_hole 24,
                    template_app (template_hole 23, template_var 1)),
                  template_app (template_hole 23, template_var 0))),
              template_app
               (template_app
                 (template_hole 25,
                  template_app
                   (template_app
                     (template_hole 22,
                      template_app (template_hole 21, template_var 1)),
                    template_app (template_hole 21, template_var 0))),
                template_app
                 (template_app
                   (template_hole 25,
                    template_app
                     (template_app
                       (template_hole 20,
                        template_app (template_hole 19, template_var 1)),
                      template_app (template_hole 19, template_var 0))),
                  template_app
                   (template_app
                     (template_hole 25,
                      template_app
                       (template_app
                         (template_hole 22,
                          template_app (template_hole 18, template_var 1)),
                        template_app (template_hole 18, template_var 0))),
                    template_app
                     (template_app
                       (template_hole 25,
                        template_app
                         (template_app
                           (template_hole 17,
                            template_app
                             (template_hole 16, template_var 1)),
                          template_app (template_hole 16, template_var 0))),
                      template_app
                       (template_app
                         (template_hole 25,
                          template_app
                           (template_app
                             (template_hole 15,
                              template_app
                               (template_hole 14, template_var 1)),
                            template_app
                             (template_hole 14, template_var 0))),
                        template_app
                         (template_app
                           (template_hole 25,
                            template_app
                             (template_app
                               (template_hole 13,
                                template_app
                                 (template_hole 12, template_var 1)),
                              template_app
                               (template_hole 12, template_var 0))),
                          template_app
                           (template_app
                             (template_hole 25,
                              template_app
                               (template_app
                                 (template_hole 11,
                                  template_app
                                   (template_hole 10, template_var 1)),
                                template_app
                                 (template_hole 10, template_var 0))),
                            template_app
                             (template_app
                               (template_hole 25,
                                template_app
                                 (template_app
                                   (template_hole 13,
                                    template_app
                                     (template_hole 9, template_var 1)),
                                  template_app
                                   (template_hole 9, template_var 0))),
                              template_app
                               (template_app
                                 (template_hole 25,
                                  template_app
                                   (template_app
                                     (template_hole 8,
template_app (template_hole 7, template_var 1)),
                                    template_app
                                     (template_hole 7, template_var 0))),
                                template_app
                                 (template_app
                                   (template_hole 25,
                                    template_app
                                     (template_app
 (template_hole 24, template_app (template_hole 23, template_var 1)),
template_app (template_hole 23, template_var 0))),
                                  template_app
                                   (template_app
                                     (template_hole 25,
template_app
 (template_app
   (template_hole 6, template_app (template_hole 5, template_var 1)),
  template_app (template_hole 5, template_var 0))),
                                    template_app
                                     (template_app
 (template_hole 25,
  template_app
   (template_app
     (template_hole 4, template_app (template_hole 3, template_var 1)),
    template_app (template_hole 3, template_var 0))),
template_app
 (template_app
   (template_hole 2, template_app (template_hole 1, template_var 1)),
  template_app (template_hole 1, template_var 0)))))))))))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Post_Value_Setup.eqButPID_stateSelectors",
     "eqButPID ?s ?s1.0 ==>
      admin ?s = admin ?s1.0 &
      pendingUReqs ?s = pendingUReqs ?s1.0 &
      userReq ?s = userReq ?s1.0 &
      userIDs ?s = userIDs ?s1.0 &
      user ?s = user ?s1.0 &
      pass ?s = pass ?s1.0 &
      pendingFReqs ?s = pendingFReqs ?s1.0 &
      friendReq ?s = friendReq ?s1.0 &
      friendIDs ?s = friendIDs ?s1.0 &
      postIDs ?s = postIDs ?s1.0 &
      admin ?s = admin ?s1.0 &
      eeqButPID (post ?s) (post ?s1.0) &
      owner ?s = owner ?s1.0 & vis ?s = vis ?s1.0 & IDsOK ?s = IDsOK ?s1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 27, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 26,
               template_app
                (template_app
                  (template_hole 25,
                   template_app (template_hole 24, template_var 1)),
                 template_app (template_hole 24, template_var 0))),
             template_app
              (template_app
                (template_hole 26,
                 template_app
                  (template_app
                    (template_hole 23,
                     template_app (template_hole 22, template_var 1)),
                   template_app (template_hole 22, template_var 0))),
               template_app
                (template_app
                  (template_hole 26,
                   template_app
                    (template_app
                      (template_hole 21,
                       template_app (template_hole 20, template_var 1)),
                     template_app (template_hole 20, template_var 0))),
                 template_app
                  (template_app
                    (template_hole 26,
                     template_app
                      (template_app
                        (template_hole 23,
                         template_app (template_hole 19, template_var 1)),
                       template_app (template_hole 19, template_var 0))),
                   template_app
                    (template_app
                      (template_hole 26,
                       template_app
                        (template_app
                          (template_hole 18,
                           template_app (template_hole 17, template_var 1)),
                         template_app (template_hole 17, template_var 0))),
                     template_app
                      (template_app
                        (template_hole 26,
                         template_app
                          (template_app
                            (template_hole 16,
                             template_app
                              (template_hole 15, template_var 1)),
                           template_app
                            (template_hole 15, template_var 0))),
                       template_app
                        (template_app
                          (template_hole 26,
                           template_app
                            (template_app
                              (template_hole 14,
                               template_app
                                (template_hole 13, template_var 1)),
                             template_app
                              (template_hole 13, template_var 0))),
                         template_app
                          (template_app
                            (template_hole 26,
                             template_app
                              (template_app
                                (template_hole 12,
                                 template_app
                                  (template_hole 11, template_var 1)),
                               template_app
                                (template_hole 11, template_var 0))),
                           template_app
                            (template_app
                              (template_hole 26,
                               template_app
                                (template_app
                                  (template_hole 14,
                                   template_app
                                    (template_hole 10, template_var 1)),
                                 template_app
                                  (template_hole 10, template_var 0))),
                             template_app
                              (template_app
                                (template_hole 26,
                                 template_app
                                  (template_app
                                    (template_hole 9,
                                     template_app
(template_hole 8, template_var 1)),
                                   template_app
                                    (template_hole 8, template_var 0))),
                               template_app
                                (template_app
                                  (template_hole 26,
                                   template_app
                                    (template_app
(template_hole 25, template_app (template_hole 24, template_var 1)),
                                     template_app
(template_hole 24, template_var 0))),
                                 template_app
                                  (template_app
                                    (template_hole 26,
                                     template_app
(template_app
  (template_hole 7, template_app (template_hole 6, template_var 1)),
 template_app (template_hole 6, template_var 0))),
                                   template_app
                                    (template_app
(template_hole 26,
 template_app
  (template_app
    (template_hole 5, template_app (template_hole 4, template_var 1)),
   template_app (template_hole 4, template_var 0))),
                                     template_app
(template_app
  (template_hole 26,
   template_app
    (template_app
      (template_hole 3, template_app (template_hole 2, template_var 1)),
     template_app (template_hole 2, template_var 0))),
 template_app
  (template_app
    (template_hole 1, template_app (template_hole 0, template_var 1)),
   template_app (template_hole 0, template_var 0))))))))))))))))
           )))]:
   (string * thm * template) list
### theory "Draft.Post_Value_SetupMoreTemplates"
### 0.534s elapsed time, 0.722s cpu time, 0.047s GC time
val it = (): unit
