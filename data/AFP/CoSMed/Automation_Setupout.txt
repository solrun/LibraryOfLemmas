Loading theory "Fresh_Identifiers.Fresh" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Fresh_Identifiers.Fresh_String")
Loading theory "Bounded_Deducibility_Security.Abstract_BD_Security" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
class fresh = type +
  fixes fresh :: "'a set => 'a => 'a"
  assumes "fresh_notIn": "!!xs x. finite xs ==> fresh xs x ~: xs"
    and "fresh_eq": "!!xs x. x ~: xs ==> fresh xs x = x"
### Additional type variable(s) in locale specification "infinite": 'a
class infinite = type +
  assumes "infinite_UNIV": "infinite UNIV"
### theory "HOL-Library.Function_Algebras"
### 0.120s elapsed time, 0.503s cpu time, 0.032s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale Abstract_BD_Security
  fixes validSystemTrace :: "'traces => bool"
    and V :: "'traces => 'values"
    and O :: "'traces => 'observations"
    and B :: "'values => 'values => bool"
    and TT :: "'traces => bool"
### theory "Bounded_Deducibility_Security.Abstract_BD_Security"
### 0.143s elapsed time, 0.600s cpu time, 0.032s GC time
Loading theory "HOL-Library.Sublist" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO" via "Bounded_Deducibility_Security.BD_Security_TS" via "Bounded_Deducibility_Security.Filtermap" via "Bounded_Deducibility_Security.Trivia")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "Fresh_Identifiers.Fresh"
### 0.221s elapsed time, 0.914s cpu time, 0.032s GC time
Loading theory "Fresh_Identifiers.Fresh_String" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.202s elapsed time, 0.789s cpu time, 0.082s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "{}"
### theory "HOL-Library.Nat_Bijection"
### 0.379s elapsed time, 1.521s cpu time, 0.114s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.ExtrEqs")
instantiation
  String.literal :: fresh
  fresh_literal == fresh ::
    String.literal set => String.literal => String.literal
consts
  prefixes :: "'a list => 'a list list"
### theory "Fresh_Identifiers.Fresh_String"
### 0.257s elapsed time, 1.000s cpu time, 0.162s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  snth :: "'a stream => nat => 'a"
consts
  suffixes :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Proofs for inductive predicate(s) "list_emb"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.129s elapsed time, 4.300s cpu time, 0.966s GC time
### theory "HOL-Library.BigO"
### 1.041s elapsed time, 3.956s cpu time, 0.886s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  sublists :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Sublist"
### 1.688s elapsed time, 6.504s cpu time, 1.196s GC time
Loading theory "Bounded_Deducibility_Security.Trivia" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO" via "Bounded_Deducibility_Security.BD_Security_TS" via "Bounded_Deducibility_Security.Filtermap")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
### theory "Bounded_Deducibility_Security.Trivia"
### 0.511s elapsed time, 2.019s cpu time, 0.165s GC time
Loading theory "Bounded_Deducibility_Security.Filtermap" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO" via "Bounded_Deducibility_Security.BD_Security_TS")
### theory "HOL-Library.Tree"
### 2.213s elapsed time, 8.578s cpu time, 1.375s GC time
Loading theory "Bounded_Deducibility_Security.Transition_System" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO" via "Bounded_Deducibility_Security.BD_Security_TS")
locale Transition_System
  fixes istate :: "'state"
    and validTrans :: "'trans => bool"
    and srcOf :: "'trans => 'state"
    and tgtOf :: "'trans => 'state"
### theory "Bounded_Deducibility_Security.Filtermap"
### 0.228s elapsed time, 0.892s cpu time, 0.096s GC time
Loading theory "Draft.Templates" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
Found termination order: "{}"
"[''Abc'', ''Abd'', ''Ya'', ''Yb'', ''Yzb'', ''Ya'']"
  :: "char list list"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.083s elapsed time, 0.308s cpu time, 0.049s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Automation_SetupMoreTemplates")
Found termination order: "{}"
"[STR ''Abc'', STR ''Abd'', STR ''Ya'', STR ''Yb'', STR ''Yzb'',
  STR ''Ya'']"
  :: "String.literal list"
Found termination order: "{}"
Proofs for inductive predicate(s) "valid"
  Proving monotonicity ...
Proofs for inductive predicate(s) "valid2"
  Proving monotonicity ...
Proofs for inductive predicate(s) "reach"
  Proving monotonicity ...
Proofs for inductive predicate(s) "reachFrom"
  Proving monotonicity ...
### theory "Bounded_Deducibility_Security.Transition_System"
### 0.410s elapsed time, 1.256s cpu time, 0.096s GC time
Loading theory "Bounded_Deducibility_Security.BD_Security_TS" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO")
Loading theory "Bounded_Deducibility_Security.IO_Automaton" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding" via "Bounded_Deducibility_Security.BD_Security_IO")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.657s elapsed time, 1.899s cpu time, 0.203s GC time
locale BD_Security_TS
  fixes istate :: "'state"
    and validTrans :: "'trans => bool"
    and srcOf :: "'trans => 'state"
    and tgtOf :: "'trans => 'state"
    and \<phi> :: "'trans => bool"
    and f :: "'trans => 'value"
    and \<gamma> :: "'trans => bool"
    and g :: "'trans => 'obs"
    and T :: "'trans => bool"
    and B :: "'value list => 'value list => bool"
Proofs for inductive predicate(s) "reachNT"
  Proving monotonicity ...
### theory "Bounded_Deducibility_Security.BD_Security_TS"
### 0.531s elapsed time, 1.493s cpu time, 0.214s GC time
locale IO_Automaton
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
Found termination order: "{}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "Bounded_Deducibility_Security.IO_Automaton"
### 0.981s elapsed time, 1.970s cpu time, 0.257s GC time
Loading theory "Bounded_Deducibility_Security.BD_Security_IO" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning" via "Bounded_Deducibility_Security.BD_Security_Unwinding")
locale BD_Security_IO
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
    and \<phi> :: "('state, 'act, 'out) trans => bool"
    and f :: "('state, 'act, 'out) trans => 'value"
    and \<gamma> :: "('state, 'act, 'out) trans => bool"
    and g :: "('state, 'act, 'out) trans => 'obs"
    and T :: "('state, 'act, 'out) trans => bool"
    and B :: "'value list => 'value list => bool"
### theory "Bounded_Deducibility_Security.BD_Security_IO"
### 0.331s elapsed time, 0.364s cpu time, 0.042s GC time
Loading theory "Bounded_Deducibility_Security.BD_Security_Unwinding" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim" via "Bounded_Deducibility_Security.Compositional_Reasoning")
locale BD_Security_IO
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
    and \<phi> :: "('state, 'act, 'out) trans => bool"
    and f :: "('state, 'act, 'out) trans => 'value"
    and \<gamma> :: "('state, 'act, 'out) trans => bool"
    and g :: "('state, 'act, 'out) trans => 'obs"
    and T :: "('state, 'act, 'out) trans => bool"
    and B :: "'value list => 'value list => bool"
### theory "Bounded_Deducibility_Security.BD_Security_Unwinding"
### 0.307s elapsed time, 0.332s cpu time, 0.036s GC time
Loading theory "Bounded_Deducibility_Security.Compositional_Reasoning" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.Automation_Setup" via "Draft.System_Specification" via "Draft.Prelim")
locale BD_Security_IO
  fixes istate :: "'state"
    and step :: "'state => 'act => 'out * 'state"
    and \<phi> :: "('state, 'act, 'out) trans => bool"
    and f :: "('state, 'act, 'out) trans => 'value"
    and \<gamma> :: "('state, 'act, 'out) trans => bool"
    and g :: "('state, 'act, 'out) trans => 'obs"
    and T :: "('state, 'act, 'out) trans => bool"
    and B :: "'value list => 'value list => bool"
Found termination order: "length <*mlex*> {}"
### theory "Bounded_Deducibility_Security.Compositional_Reasoning"
### 0.321s elapsed time, 0.349s cpu time, 0.037s GC time
Loading theory "Draft.Prelim" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.Automation_Setup" via "Draft.System_Specification")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Prelim"
### 2.258s elapsed time, 2.448s cpu time, 0.264s GC time
Loading theory "Draft.System_Specification" (required by "Draft.Automation_SetupMoreTemplates" via "Draft.Automation_Setup")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
See theory exports
### theory "Draft.System_Specification"
### 6.489s elapsed time, 8.767s cpu time, 2.858s GC time
Loading theory "Draft.Automation_Setup" (required by "Draft.Automation_SetupMoreTemplates")
### theory "Draft.Automation_Setup"
### 0.030s elapsed time, 0.056s cpu time, 0.000s GC time
Loading theory "Draft.Automation_SetupMoreTemplates"
val templateLemmas =
   [("Automation_Setup.add_prop", "[| PROP ?T; ?A |] ==> PROP ?T",
     template_implication
      ([template_predicate (template_var 1),
        template_predicate (template_var 0)],
       template_predicate (template_var 1))),
    ("Automation_Setup.exhaust_elim",
     "[| ?a = Sact ?x; !!x1 x2. ?x = sSys x1 x2 ==> ?P |] ==> ?P",
     template_implication
      ([template_equation
         (template_var 2, template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Automation_Setup.exhaust_elim",
     "[| ?a = Lact ?x; !!x11 x12. ?x = lPendingUReqs x11 x12 ==> ?P;
         !!x21 x22. ?x = lAllUsers x21 x22 ==> ?P;
         !!x31 x32 x33. ?x = lFriends x31 x32 x33 ==> ?P;
         !!x41 x42. ?x = lPosts x41 x42 ==> ?P |]
      ==> ?P",
     template_implication
      ([template_equation
         (template_var 2, template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("Automation_Setup.exhaust_elim",
     "[| ?a = Uact ?x;
         !!x11 x12 x13 x14 x15. ?x = uUser x11 x12 x13 x14 x15 ==> ?P;
         !!x21 x22 x23 x24. ?x = uPost x21 x22 x23 x24 ==> ?P;
         !!x31 x32 x33 x34. ?x = uVisPost x31 x32 x33 x34 ==> ?P |]
      ==> ?P",
     template_implication
      ([template_equation
         (template_var 2, template_app (template_hole 11, template_var 1)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_var 0))),
    ("Automation_Setup.state_cong",
     "pendingUReqs ?s = pendingUReqs ?s1.0 &
      userReq ?s = userReq ?s1.0 &
      userIDs ?s = userIDs ?s1.0 &
      postIDs ?s = postIDs ?s1.0 &
      admin ?s = admin ?s1.0 &
      user ?s = user ?s1.0 &
      pass ?s = pass ?s1.0 &
      pendingFReqs ?s = pendingFReqs ?s1.0 &
      friendReq ?s = friendReq ?s1.0 &
      friendIDs ?s = friendIDs ?s1.0 &
      post ?s = post ?s1.0 & owner ?s = owner ?s1.0 & vis ?s = vis ?s1.0 ==>
      ?s = ?s1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 25,
                template_app
                 (template_app
                   (template_hole 24,
                    template_app (template_hole 23, template_var 1)),
                  template_app (template_hole 23, template_var 0))),
              template_app
               (template_app
                 (template_hole 25,
                  template_app
                   (template_app
                     (template_hole 22,
                      template_app (template_hole 21, template_var 1)),
                    template_app (template_hole 21, template_var 0))),
                template_app
                 (template_app
                   (template_hole 25,
                    template_app
                     (template_app
                       (template_hole 24,
                        template_app (template_hole 20, template_var 1)),
                      template_app (template_hole 20, template_var 0))),
                  template_app
                   (template_app
                     (template_hole 25,
                      template_app
                       (template_app
                         (template_hole 19,
                          template_app (template_hole 18, template_var 1)),
                        template_app (template_hole 18, template_var 0))),
                    template_app
                     (template_app
                       (template_hole 25,
                        template_app
                         (template_app
                           (template_hole 17,
                            template_app
                             (template_hole 16, template_var 1)),
                          template_app (template_hole 16, template_var 0))),
                      template_app
                       (template_app
                         (template_hole 25,
                          template_app
                           (template_app
                             (template_hole 15,
                              template_app
                               (template_hole 14, template_var 1)),
                            template_app
                             (template_hole 14, template_var 0))),
                        template_app
                         (template_app
                           (template_hole 25,
                            template_app
                             (template_app
                               (template_hole 13,
                                template_app
                                 (template_hole 12, template_var 1)),
                              template_app
                               (template_hole 12, template_var 0))),
                          template_app
                           (template_app
                             (template_hole 25,
                              template_app
                               (template_app
                                 (template_hole 11,
                                  template_app
                                   (template_hole 10, template_var 1)),
                                template_app
                                 (template_hole 10, template_var 0))),
                            template_app
                             (template_app
                               (template_hole 25,
                                template_app
                                 (template_app
                                   (template_hole 9,
                                    template_app
                                     (template_hole 8, template_var 1)),
                                  template_app
                                   (template_hole 8, template_var 0))),
                              template_app
                               (template_app
                                 (template_hole 25,
                                  template_app
                                   (template_app
                                     (template_hole 11,
template_app (template_hole 7, template_var 1)),
                                    template_app
                                     (template_hole 7, template_var 0))),
                                template_app
                                 (template_app
                                   (template_hole 25,
                                    template_app
                                     (template_app
 (template_hole 6, template_app (template_hole 5, template_var 1)),
template_app (template_hole 5, template_var 0))),
                                  template_app
                                   (template_app
                                     (template_hole 25,
template_app
 (template_app
   (template_hole 4, template_app (template_hole 3, template_var 1)),
  template_app (template_hole 3, template_var 0))),
                                    template_app
                                     (template_app
 (template_hole 2, template_app (template_hole 1, template_var 1)),
template_app (template_hole 1, template_var 0))))))))))))))
            )],
       template_equation (template_var 1, template_var 0))),
    ("Automation_Setup.exhaust_elim",
     "[| ?a = Cact ?x; !!x11 x12. ?x = cNUReq x11 x12 ==> ?P;
         !!x21 x22 x23 x24. ?x = cUser x21 x22 x23 x24 ==> ?P;
         !!x31 x32 x33 x34. ?x = cFriendReq x31 x32 x33 x34 ==> ?P;
         !!x41 x42 x43. ?x = cFriend x41 x42 x43 ==> ?P;
         !!x51 x52 x53 x54. ?x = cPost x51 x52 x53 x54 ==> ?P |]
      ==> ?P",
     template_implication
      ([template_equation
         (template_var 2, template_app (template_hole 11, template_var 1)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_var 0))),
    ("Automation_Setup.exhaust_elim",
     "[| ?a = Ract ?x; !!x11 x12 x13. ?x = rNUReq x11 x12 x13 ==> ?P;
         !!x21 x22 x23. ?x = rUser x21 x22 x23 ==> ?P;
         !!x31 x32. ?x = rAmIAdmin x31 x32 ==> ?P;
         !!x41 x42 x43. ?x = rPost x41 x42 x43 ==> ?P;
         !!x51 x52 x53. ?x = rVisPost x51 x52 x53 ==> ?P;
         !!x61 x62 x63. ?x = rOwnerPost x61 x62 x63 ==> ?P;
         !!x71 x72 x73. ?x = rFriendReqToMe x71 x72 x73 ==> ?P;
         !!x81 x82 x83. ?x = rFriendReqFromMe x81 x82 x83 ==> ?P |]
      ==> ?P",
     template_implication
      ([template_equation
         (template_var 2, template_app (template_hole 12, template_var 1)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.Automation_SetupMoreTemplates"
### 0.536s elapsed time, 0.720s cpu time, 0.037s GC time
val it = (): unit
