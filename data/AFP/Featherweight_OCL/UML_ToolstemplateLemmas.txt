   [("UML_Tools.Z", "?\<tau> |\<noteq> false and ?B",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))
             )
         )),
    ("UML_Tools.X", "?\<tau> |\<noteq> invalid and ?B",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))
             )
         )),
    ("UML_Tools.Y", "?\<tau> |\<noteq> null and ?B",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))
             )
         )),
    ("UML_Tools.Z'",
     "(?\<tau> \<Turnstile> true and ?B) = (?\<tau> \<Turnstile> ?B)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("UML_Tools.test3",
     "?\<tau> \<Turnstile> ?A ==> ?\<tau> \<Turnstile> ?A and ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 0))
           ))),
    ("UML_Tools.test1",
     "?\<tau> \<Turnstile> ?A ==>
      ?\<tau> \<Turnstile> ?A and ?B \<triangleq> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_var 0))
           ))),
    ("UML_Tools.test6",
     "?\<tau> \<Turnstile> not ?A ==> ?\<tau> |\<noteq> ?A and ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))
               )
           ))),
    ("UML_Tools.test4",
     "?\<tau> \<Turnstile> not ?A ==>
      ?\<tau> \<Turnstile> ?A and ?B \<triangleq> false",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_hole 0))
           ))),
    ("UML_Tools.substs",
     "[| ?\<tau> \<Turnstile> ?x; cp ?P |]
      ==> (?\<tau> \<Turnstile> ?P ?x) = (?\<tau> \<Turnstile> ?P true)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app (template_var 0, template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app (template_var 0, template_hole 0))))),
    ("UML_Tools.substs",
     "[| ?\<tau> \<Turnstile> not ?x; cp ?P |]
      ==> (?\<tau> \<Turnstile> ?P ?x) = (?\<tau> \<Turnstile> ?P false)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app (template_var 0, template_var 1)),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_app (template_var 0, template_hole 0))))),
    ("UML_Tools.test7",
     "[| ?\<tau> |\<noteq> \<upsilon> ?A; ?\<tau> \<Turnstile> not ?B |]
      ==> ?\<tau> |\<noteq> ?A and ?B",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_hole 2, template_var 1))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 1, template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))
               )
           ))),
    ("UML_Tools.substs",
     "[| ?\<tau> \<Turnstile> ?y; cp ?P; ?\<tau> \<Turnstile> ?P true |]
      ==> ?\<tau> \<Turnstile> ?P ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_var 0, template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_var 0, template_var 1))
           ))),
    ("UML_Tools.substs",
     "[| ?\<tau> \<Turnstile> ?x; cp ?P |]
      ==> (?\<tau> |\<noteq> ?P ?x) = (?\<tau> |\<noteq> ?P true)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app (template_var 0, template_var 1))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app (template_var 0, template_hole 0)))))),
    ("UML_Tools.substs",
     "[| ?\<tau> |\<noteq> \<upsilon> ?x; cp ?P |]
      ==> (?\<tau> \<Turnstile> ?P ?x) = (?\<tau> \<Turnstile> ?P invalid)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app (template_hole 3, template_var 1))
                )
            ),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app (template_var 0, template_var 1)),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_app (template_var 0, template_hole 0))))),
    ("UML_Tools.substs",
     "[| ?\<tau> \<Turnstile> not (\<upsilon> ?x); cp ?P |]
      ==> (?\<tau> \<Turnstile> ?P ?x) = (?\<tau> \<Turnstile> ?P invalid)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)))
            ),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 2),
           template_app (template_var 0, template_var 1)),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_app (template_var 0, template_hole 0))))),
    ("UML_Tools.substs",
     "[| ?\<tau> \<Turnstile> ?x \<triangleq> ?y; cp ?P |]
      ==> (?\<tau> \<Turnstile> ?P ?x) = (?\<tau> \<Turnstile> ?P ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app (template_var 0, template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_app (template_var 0, template_var 1))))),
    ("UML_Tools.test5",
     "[| ?\<tau> \<Turnstile> ?A \<triangleq> null;
         ?\<tau> \<Turnstile> ?B \<triangleq> null |]
      ==> ?\<tau> |\<noteq> ?A and ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_hole 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_hole 2))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))
               )
           ))),
    ("UML_Tools.substs",
     "[| ?\<tau> \<Turnstile> not ?y; cp ?P;
         ?\<tau> \<Turnstile> ?P false |]
      ==> ?\<tau> \<Turnstile> ?P ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate (template_app (template_hole 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_var 0, template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app (template_var 0, template_var 1))
           ))),
    ("UML_Tools.substs",
     "[| ?\<tau> \<Turnstile> not ?x; cp ?P |]
      ==> (?\<tau> |\<noteq> ?P ?x) = (?\<tau> |\<noteq> ?P false)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app (template_var 0, template_var 1))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app (template_var 0, template_hole 0)))))),
    ("UML_Tools.substs",
     "[| ?\<tau> \<Turnstile> ?x; cp ?P; ?\<tau> |\<noteq> ?P true |]
      ==> ?\<tau> |\<noteq> ?P ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_var 0, template_hole 0))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app (template_var 0, template_var 1))
               )
           ))),
    ("UML_Tools.substs",
     "[| ?\<tau> |\<noteq> \<upsilon> ?y; cp ?P;
         ?\<tau> \<Turnstile> ?P invalid |]
      ==> ?\<tau> \<Turnstile> ?P ?y",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_hole 2, template_var 1))
                )
            ),
        template_predicate (template_app (template_hole 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_var 0, template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app (template_var 0, template_var 1))
           ))),
    ("UML_Tools.substs",
     "[| ?\<tau> \<Turnstile> not (\<upsilon> ?y); cp ?P;
         ?\<tau> \<Turnstile> ?P invalid |]
      ==> ?\<tau> \<Turnstile> ?P ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)))
            ),
        template_predicate (template_app (template_hole 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_var 0, template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app (template_var 0, template_var 1))
           ))),
    ("UML_Tools.substs",
     "[| ?\<tau> \<Turnstile> ?y \<triangleq> ?x; cp ?P;
         ?\<tau> \<Turnstile> ?P ?x |]
      ==> ?\<tau> \<Turnstile> ?P ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 0, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app (template_var 0, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app (template_var 0, template_var 2))
           ))),
    ("UML_Tools.substs",
     "[| ?\<tau> |\<noteq> \<upsilon> ?x; cp ?P |]
      ==> (?\<tau> |\<noteq> ?P ?x) = (?\<tau> |\<noteq> ?P invalid)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app (template_hole 3, template_var 1))
                )
            ),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app (template_var 0, template_var 1))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app (template_var 0, template_hole 0)))))),
    ("UML_Tools.substs",
     "[| ?\<tau> \<Turnstile> not (\<upsilon> ?x); cp ?P |]
      ==> (?\<tau> |\<noteq> ?P ?x) = (?\<tau> |\<noteq> ?P invalid)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)))
            ),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app (template_var 0, template_var 1))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app (template_var 0, template_hole 0)))))),
    ("UML_Tools.substs",
     "[| ?\<tau> \<Turnstile> ?x \<triangleq> ?y; cp ?P |]
      ==> (?\<tau> |\<noteq> ?P ?x) = (?\<tau> |\<noteq> ?P ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app (template_var 0, template_var 2))),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app (template_var 0, template_var 1)))))),
    ("UML_Tools.substs",
     "[| ?\<tau> \<Turnstile> not ?x; cp ?P; ?\<tau> |\<noteq> ?P false |]
      ==> ?\<tau> |\<noteq> ?P ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app (template_var 0, template_hole 0))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_app (template_var 0, template_var 1))
               )
           ))),
    ("UML_Tools.substs",
     "[| ?\<tau> |\<noteq> \<upsilon> ?x; cp ?P;
         ?\<tau> |\<noteq> ?P invalid |]
      ==> ?\<tau> |\<noteq> ?P ?x",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_hole 2, template_var 1))
                )
            ),
        template_predicate (template_app (template_hole 1, template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_var 0, template_hole 0))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app (template_var 0, template_var 1))
               )
           ))),
    ("UML_Tools.substs",
     "[| ?\<tau> \<Turnstile> not (\<upsilon> ?x); cp ?P;
         ?\<tau> |\<noteq> ?P invalid |]
      ==> ?\<tau> |\<noteq> ?P ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)))
            ),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app (template_var 0, template_hole 0))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_app (template_var 0, template_var 1))
               )
           ))),
    ("UML_Tools.substs",
     "[| ?\<tau> \<Turnstile> ?x \<triangleq> ?y; cp ?P;
         ?\<tau> |\<noteq> ?P ?y |]
      ==> ?\<tau> |\<noteq> ?P ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 1, template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app (template_var 0, template_var 1))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app (template_var 0, template_var 2))
               )
           )))]
