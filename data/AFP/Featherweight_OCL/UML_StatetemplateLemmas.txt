   [("UML_State.cp_intro''", "cp (%_. ?c)",
     template_predicate (template_app (template_hole 0, t_empty))),
    ("UML_State.StrictRefEq\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t_strict2",
     "StrictRefEq\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t invalid
       ?x =
      invalid",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("UML_State.StrictRefEq\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t_strict1",
     "StrictRefEq\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t ?x
       invalid =
      invalid",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("UML_State.cp_OclIsModifiedOnly",
     "?X->oclIsModifiedOnly() ?\<tau> =
      %_. ?X ?\<tau>->oclIsModifiedOnly() ?\<tau>",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("UML_State.cp_intro''", "cp ?P ==> cp (%X. \<delta> ?P X)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("UML_State.cp_intro''", "cp ?P ==> cp (%X. \<upsilon> ?P X)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("UML_State.cp_intro''", "cp ?P ==> cp (%X. not (?P X))",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("UML_State.cp_intro''",
     "cp ?P ==> cp (%X. ?P X->any\<^sub>S\<^sub>e\<^sub>t())",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("UML_State.cp_intro''",
     "cp ?P ==> cp (%X. ?P X->size\<^sub>S\<^sub>e\<^sub>t())",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("UML_State.cp_intro''",
     "cp ?P ==> cp (%X. ?P X->isEmpty\<^sub>S\<^sub>e\<^sub>t())",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("UML_State.cp_intro''",
     "cp ?P ==> cp (%X. ?P X->notEmpty\<^sub>S\<^sub>e\<^sub>t())",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("UML_State.framing_same_state",
     "(?\<sigma>, ?\<sigma>) \<Turnstile> ?x@pre?H \<triangleq> ?x@post?H",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 2)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("UML_State.StrictRefEq\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t_sym",
     "?\<tau> \<Turnstile> \<upsilon> ?x ==>
      ?\<tau>
       \<Turnstile> StrictRefEq\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t
                     ?x ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 0))
           ))),
    ("UML_State.state_update_vs_allInstances_at_post_empty",
     "(?\<sigma>, (| state.heap = Map.empty, assocs = ?A |))
       \<Turnstile> ?Type .allInstances() \<doteq> Set{}",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 2),
               template_app
                (template_app
                  (template_app (template_hole 5, t_empty), template_var 1),
                 template_hole 3))),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0))
         )),
    ("UML_State.state_update_vs_allInstances_at_pre_empty",
     "((| state.heap = Map.empty, assocs = ?A |), ?\<sigma>)
       \<Turnstile> ?Type .allInstances@pre() \<doteq> Set{}",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_app (template_hole 5, t_empty),
                     template_var 2),
                   template_hole 3)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0))
         )),
    ("UML_State.cp_StrictRefEq\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t",
     "StrictRefEq\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t ?x ?y
       ?\<tau> =
      StrictRefEq\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t
       (%_. ?x ?\<tau>) (%_. ?y ?\<tau>) ?\<tau>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app (template_app (template_hole 0, t_empty), t_empty),
         template_var 0))),
    ("UML_State.represented_at_post_objects_nonnull",
     "?\<tau>
       \<Turnstile> ?H .allInstances()->includes\<^sub>S\<^sub>e\<^sub>t(?x) ==>
      ?\<tau> \<Turnstile> not (?x \<triangleq> null)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("UML_State.represented_at_pre_objects_nonnull",
     "?\<tau>
       \<Turnstile> ?H .allInstances@pre()->includes\<^sub>S\<^sub>e\<^sub>t(?x) ==>
      ?\<tau> \<Turnstile> not (?x \<triangleq> null)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("UML_State.represented_generic_objects_in_state",
     "?\<tau>
       \<Turnstile> OclAllInstances_generic ?pre_post
                     ?H->includes\<^sub>S\<^sub>e\<^sub>t(?x) ==>
      is_represented_in_state ?pre_post ?x ?H ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1),
             template_var 3)
           ))),
    ("UML_State.represented_generic_objects_nonnull",
     "?\<tau>
       \<Turnstile> OclAllInstances_generic ?pre_post
                     ?H->includes\<^sub>S\<^sub>e\<^sub>t(?x) ==>
      ?\<tau> \<Turnstile> not (?x \<triangleq> null)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 3),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("UML_State.cp_intro''",
     "[| cp ?P; cp ?Q |] ==> cp (%X. ?P X \<triangleq> ?Q X)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("UML_State.cp0_StrictRefEq\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t",
     "[| cp ?P; cp ?Q |]
      ==> cp (%X. StrictRefEq\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t
                   (?P X) (?Q X))",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("UML_State.cp_intro''",
     "[| cp ?P; cp ?Q |] ==> cp (%X. ?P X and ?Q X)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("UML_State.cp_intro''",
     "[| cp ?P; cp ?Q |] ==> cp (%X. ?P X implies ?Q X)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("UML_State.cp_intro''", "[| cp ?P; cp ?Q |] ==> cp (%X. ?P X or ?Q X)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("UML_State.cp_intro''",
     "[| cp ?P; cp ?Q |]
      ==> cp (%X. ?P X->including\<^sub>S\<^sub>e\<^sub>q(?Q X))",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("UML_State.select_object_any_exec0\<^sub>S\<^sub>e\<^sub>q",
     "?\<tau>
       \<Turnstile> \<delta> select_object_any\<^sub>S\<^sub>e\<^sub>q ?f
                              ?s_set ==>
      ?\<tau>
       \<Turnstile> select_object_any\<^sub>S\<^sub>e\<^sub>q ?f
                     ?s_set \<triangleq>
                    ?f (hd ?s_set)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0)),
               template_app
                (template_var 1,
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("UML_State.OclAllInstances_generic_init_empty",
     "(!!x. ?pre_post (x, x) = x) ==>
      \<tau>\<^sub>0
       \<Turnstile> OclAllInstances_generic ?pre_post ?H \<triangleq>
                    Set{}",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_hole 0))
           ))),
    ("UML_State.defined_StrictRefEq\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t_I",
     "[| ?\<tau> \<Turnstile> \<upsilon> ?x;
         ?\<tau> \<Turnstile> \<upsilon> ?y |]
      ==> ?\<tau>
           \<Turnstile> \<delta> StrictRefEq\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t
                                  ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("UML_State.pre_post_maintained",
     "?\<tau> \<Turnstile> \<upsilon> ?x@pre?H1.0 |
      ?\<tau> \<Turnstile> \<upsilon> ?x@post?H2.0 ==>
      ?\<tau> \<Turnstile> ?x.oclIsMaintained()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 2),
                      template_var 1)))),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app (template_hole 0, template_var 2))
           ))),
    ("UML_State.pre_post_absent",
     "?\<tau> \<Turnstile> ?x.oclIsAbsent() ==>
      ?\<tau> |\<noteq> \<upsilon> ?x@pre?H1.0 &
      ?\<tau> |\<noteq> \<upsilon> ?x@post?H2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app (template_hole 5, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 6, template_var 3),
                   template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 1))))),
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 6, template_var 3),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)))))
           ))),
    ("UML_State.pre_post_old",
     "?\<tau> \<Turnstile> ?x.oclIsDeleted() ==>
      ?\<tau> |\<noteq> \<upsilon> ?x@pre?H1.0 &
      ?\<tau> |\<noteq> \<upsilon> ?x@post?H2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app (template_hole 5, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 6, template_var 3),
                   template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 1))))),
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 6, template_var 3),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)))))
           ))),
    ("UML_State.pre_post_new",
     "?\<tau> \<Turnstile> ?x.oclIsNew() ==>
      ?\<tau> |\<noteq> \<upsilon> ?x@pre?H1.0 &
      ?\<tau> |\<noteq> \<upsilon> ?x@post?H2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app (template_hole 5, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 6, template_var 3),
                   template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 1))))),
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 6, template_var 3),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)))))
           ))),
    ("UML_State.state_update_vs_allInstances_generic_empty",
     "(!!a. ?pre_post (?mk a) = a) ==>
      ?mk (| state.heap = Map.empty, assocs = ?A |)
       \<Turnstile> OclAllInstances_generic ?pre_post ?Type \<doteq> Set{}",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_var 2,
                 template_app
                  (template_app
                    (template_app (template_hole 5, t_empty),
                     template_var 1),
                   template_hole 3))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 0)),
               template_hole 0))
           ))),
    ("UML_State.fold_val_elem\<^sub>S\<^sub>e\<^sub>t",
     "?\<tau>
       \<Turnstile> \<upsilon> foldl UML_Set.OclIncluding Set{}
                                (map (?f ?p) ?s_set) ==>
      list_all (%x. ?\<tau> \<Turnstile> \<upsilon> ?f ?p x) ?s_set",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_hole 3),
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app (template_var 2, template_var 1)),
                    template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 0)
           ))),
    ("UML_State.fold_val_elem\<^sub>S\<^sub>e\<^sub>q",
     "?\<tau>
       \<Turnstile> \<upsilon> foldl UML_Sequence.OclIncluding Sequence{}
                                (map (?f ?p) ?s_set) ==>
      list_all (%x. ?\<tau> \<Turnstile> \<upsilon> ?f ?p x) ?s_set",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_hole 3),
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app (template_var 2, template_var 1)),
                    template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 0)
           ))),
    ("UML_State.cp_intro''",
     "[| cp ?P; cp ?Q; cp ?R |]
      ==> cp (%X. if ?P X then ?Q X else ?R X endif)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("UML_State.select_object_any_exec\<^sub>S\<^sub>e\<^sub>q",
     "?\<tau>
       \<Turnstile> \<delta> select_object_any\<^sub>S\<^sub>e\<^sub>q ?f
                              ?s_set ==>
      EX e. List.member ?s_set e &
            ?\<tau>
             \<Turnstile> select_object_any\<^sub>S\<^sub>e\<^sub>q ?f
                           ?s_set \<triangleq>
                          ?f e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("UML_State.select_object_any_exec\<^sub>S\<^sub>e\<^sub>t",
     "?\<tau>
       \<Turnstile> \<delta> select_object_any\<^sub>S\<^sub>e\<^sub>t ?f
                              ?s_set ==>
      EX e. List.member ?s_set e &
            ?\<tau>
             \<Turnstile> select_object_any\<^sub>S\<^sub>e\<^sub>t ?f
                           ?s_set \<triangleq>
                          ?f e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("UML_State.pre_post_maintained'",
     "?\<tau> \<Turnstile> ?x.oclIsMaintained() ==>
      ?\<tau> \<Turnstile> \<upsilon> ?x@preSome o ?H1.0 &
      ?\<tau> \<Turnstile> \<upsilon> ?x@postSome o ?H2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 6, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 7, template_var 3),
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_var 1))))),
             template_app
              (template_app (template_hole 7, template_var 3),
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_var 0)))))
           ))),
    ("UML_State.select_fold_exec\<^sub>S\<^sub>e\<^sub>q",
     "list_all (%f. ?\<tau> \<Turnstile> \<upsilon> f) ?l ==>
      \<lceil>\<lceil>Rep_Sequence\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                       (foldl UML_Sequence.OclIncluding Sequence{} ?l
                         ?\<tau>)\<rceil>\<rceil> =
      map (%f. f ?\<tau>) ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, t_empty), template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_hole 1),
                   template_var 0),
                 template_var 1)))),
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("UML_State.select_fold_exec\<^sub>S\<^sub>e\<^sub>t",
     "list_all (%f. ?\<tau> \<Turnstile> \<upsilon> f) ?l ==>
      \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                       (foldl UML_Set.OclIncluding Set{} ?l
                         ?\<tau>)\<rceil>\<rceil> =
      set (map (%f. f ?\<tau>) ?l)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, t_empty), template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_hole 2),
                   template_var 0),
                 template_var 1)))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 0))))),
    ("UML_State.state_split",
     "?\<tau> \<Turnstile> \<delta> ?X ==>
      ?\<tau> \<Turnstile> ?X.oclIsNew() |
      ?\<tau> \<Turnstile> ?X.oclIsDeleted() |
      ?\<tau> \<Turnstile> ?X.oclIsMaintained() |
      ?\<tau> \<Turnstile> ?X.oclIsAbsent()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_app (template_hole 3, template_var 0))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_app (template_hole 2, template_var 0))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 6, template_var 1),
                     template_app (template_hole 1, template_var 0))),
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_app (template_hole 0, template_var 0)))))
           ))),
    ("UML_State.notNew_vs_others",
     "?\<tau> \<Turnstile> \<delta> ?X ==>
      (?\<tau> |\<noteq> ?X.oclIsNew()) =
      (?\<tau> \<Turnstile> ?X.oclIsDeleted() |
       ?\<tau> \<Turnstile> ?X.oclIsMaintained() |
       ?\<tau> \<Turnstile> ?X.oclIsAbsent())",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 8, template_var 1),
             template_app (template_hole 4, template_var 0))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 8, template_var 1),
               template_app (template_hole 2, template_var 0))),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 8, template_var 1),
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_app (template_hole 8, template_var 1),
               template_app (template_hole 0, template_var 0))))))),
    ("UML_State.framing",
     "[| ?\<tau>
          \<Turnstile> ?X->excluding\<^sub>S\<^sub>e\<^sub>t(?x)->oclIsModifiedOnly();
         ?\<tau>
          \<Turnstile> ?X->forAll\<^sub>S\<^sub>e\<^sub>t(a|not
                       (StrictRefEq\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t
                         ?x a)) |]
      ==> ?\<tau> \<Turnstile> ?x@pre?P \<triangleq> ?x@post?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app
               (template_app (template_hole 5, template_var 2), t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_var 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("UML_State.state_update_vs_allInstances_at_post_noincluding'",
     "[| !!x. ?\<sigma>' ?oid = \<lfloor>x\<rfloor> ==> x = ?Object;
         ?Type ?Object = None |]
      ==> ?Type .allInstances()
           (?\<sigma>,
            (| state.heap = ?\<sigma>'(?oid |-> ?Object), assocs = ?A |)) =
          ?Type .allInstances()
           (?\<sigma>, (| state.heap = ?\<sigma>', assocs = ?A |))",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_equation
         (template_app (template_var 2, template_var 3), template_hole 6)],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 5),
                       template_var 4),
                     template_app (template_hole 9, template_var 3))),
                 template_var 0),
               template_hole 0))),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 5),
                 template_var 0),
               template_hole 0)))))),
    ("UML_State.state_update_vs_allInstances_at_pre_noincluding'",
     "[| !!x. ?\<sigma>' ?oid = \<lfloor>x\<rfloor> ==> x = ?Object;
         ?Type ?Object = None |]
      ==> ?Type .allInstances@pre()
           ((| state.heap = ?\<sigma>'(?oid |-> ?Object), assocs = ?A |),
            ?\<sigma>) =
          ?Type .allInstances@pre()
           ((| state.heap = ?\<sigma>', assocs = ?A |), ?\<sigma>)",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_equation
         (template_app (template_var 2, template_var 3), template_hole 6)],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_app (template_hole 1, template_var 5),
                         template_var 4),
                       template_app (template_hole 9, template_var 3))),
                   template_var 1),
                 template_hole 0)),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 1),
                 template_hole 0)),
             template_var 0))))),
    ("UML_State.state_update_vs_allInstances_at_post_including'",
     "[| !!x. ?\<sigma>' ?oid = \<lfloor>x\<rfloor> ==> x = ?Object;
         ?Type ?Object ~= None |]
      ==> ?Type .allInstances()
           (?\<sigma>,
            (| state.heap = ?\<sigma>'(?oid |-> ?Object), assocs = ?A |)) =
          ?Type .allInstances()->including\<^sub>S\<^sub>e\<^sub>t(%_.
                                \<lfloor>\<lfloor>\<lceil>?Type
                     ?Object\<rceil>\<rfloor>\<rfloor>)
           (?\<sigma>, (| state.heap = ?\<sigma>', assocs = ?A |))",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty)),
        template_negation
         (
            template_equation
             (template_app (template_var 2, template_var 3),
              template_hole 10)
            )],
       template_equation
        (template_app
          (template_app (template_hole 8, template_var 2),
           template_app
            (template_app (template_hole 7, template_var 1),
             template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_app (template_hole 5, template_var 5),
                       template_var 4),
                     template_app (template_hole 14, template_var 3))),
                 template_var 0),
               template_hole 4))),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 8, template_var 2)),
             t_empty),
           template_app
            (template_app (template_hole 7, template_var 1),
             template_app
              (template_app
                (template_app (template_hole 6, template_var 5),
                 template_var 0),
               template_hole 4)))))),
    ("UML_State.state_update_vs_allInstances_at_pre_including'",
     "[| !!x. ?\<sigma>' ?oid = \<lfloor>x\<rfloor> ==> x = ?Object;
         ?Type ?Object ~= None |]
      ==> ?Type .allInstances@pre()
           ((| state.heap = ?\<sigma>'(?oid |-> ?Object), assocs = ?A |),
            ?\<sigma>) =
          ?Type .allInstances@pre()->including\<^sub>S\<^sub>e\<^sub>t(%_.
                                    \<lfloor>\<lfloor>\<lceil>?Type
                         ?Object\<rceil>\<rfloor>\<rfloor>)
           ((| state.heap = ?\<sigma>', assocs = ?A |), ?\<sigma>)",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty)),
        template_negation
         (
            template_equation
             (template_app (template_var 2, template_var 3),
              template_hole 10)
            )],
       template_equation
        (template_app
          (template_app (template_hole 8, template_var 2),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_app (template_hole 5, template_var 5),
                         template_var 4),
                       template_app (template_hole 14, template_var 3))),
                   template_var 1),
                 template_hole 4)),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 8, template_var 2)),
             t_empty),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_app (template_hole 6, template_var 5),
                   template_var 1),
                 template_hole 4)),
             template_var 0))))),
    ("UML_State.state_update_vs_allInstances_generic_noincluding'",
     "[| !!a. ?pre_post (?mk a) = a;
         !!x. ?\<sigma>' ?oid = \<lfloor>x\<rfloor> ==> x = ?Object;
         ?Type ?Object = None |]
      ==> OclAllInstances_generic ?pre_post ?Type
           (?mk (| state.heap = ?\<sigma>'(?oid |-> ?Object),
                   assocs = ?A |)) =
          OclAllInstances_generic ?pre_post ?Type
           (?mk (| state.heap = ?\<sigma>', assocs = ?A |))",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_equation
         (template_app (template_var 1, template_var 2), template_hole 5)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 6),
             template_var 1),
           template_app
            (template_var 5,
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_app (template_hole 8, template_var 2))),
                 template_var 0),
               template_hole 0))),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 6),
             template_var 1),
           template_app
            (template_var 5,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 0),
               template_hole 0)))))),
    ("UML_State.all_oid_diff",
     "[| ?\<tau> \<Turnstile> \<delta> ?x; ?\<tau> \<Turnstile> \<delta> ?X;
         !!x. x : \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                                   (?X ?\<tau>)\<rceil>\<rceil> ==>
              x ~= null |]
      ==> (?\<tau>
            \<Turnstile> ?X->forAll\<^sub>S\<^sub>e\<^sub>t(a|not
                         (StrictRefEq\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t
                           ?x a))) =
          (oid_of (?x ?\<tau>)
           ~: oid_of `
              \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                               (?X ?\<tau>)\<rceil>\<rceil>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 2),
              template_app (template_hole 16, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 2),
              template_app (template_hole 15, template_var 0))
            ),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 17, template_var 2),
           template_app
            (template_app (template_hole 5, template_var 0), t_empty)),
         template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_var 1, template_var 2))),
             template_app
              (template_app (template_hole 0, template_hole 1),
               template_app
                (template_hole 12,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 10,
                     template_app (template_var 0, template_var 2)))))))))),
    ("UML_State.state_update_vs_allInstances_at_post_ntc",
     "[| ?oid ~: dom ?\<sigma>'; ?Type ?Object = None; cp ?P;
         !!X. const X ==> const (?P X) |]
      ==> ((?\<sigma>,
            (| state.heap = ?\<sigma>'(?oid |-> ?Object), assocs = ?A |))
            \<Turnstile> ?P ?Type .allInstances()) =
          ((?\<sigma>, (| state.heap = ?\<sigma>', assocs = ?A |))
            \<Turnstile> ?P ?Type .allInstances())",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 15, template_var 6),
                  template_app (template_hole 14, template_var 5))
                )
            ),
        template_equation
         (template_app (template_var 4, template_var 3), template_hole 12),
        template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_app
                (template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_app (template_hole 3, template_var 5),
                         template_var 6),
                       template_app (template_hole 2, template_var 3))),
                   template_var 0),
                 template_hole 1))),
           template_app
            (template_var 2,
             template_app (template_hole 0, template_var 4))),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 5),
                   template_var 0),
                 template_hole 1))),
           template_app
            (template_var 2,
             template_app (template_hole 0, template_var 4)))))),
    ("UML_State.state_update_vs_allInstances_at_pre_ntc",
     "[| ?oid ~: dom ?\<sigma>'; ?Type ?Object = None; cp ?P;
         !!X. const X ==> const (?P X) |]
      ==> (((| state.heap = ?\<sigma>'(?oid |-> ?Object), assocs = ?A |),
            ?\<sigma>)
            \<Turnstile> ?P ?Type .allInstances@pre()) =
          (((| state.heap = ?\<sigma>', assocs = ?A |), ?\<sigma>)
            \<Turnstile> ?P ?Type .allInstances@pre())",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 15, template_var 6),
                  template_app (template_hole 14, template_var 5))
                )
            ),
        template_equation
         (template_app (template_var 4, template_var 3), template_hole 12),
        template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app
                          (template_app (template_hole 3, template_var 5),
                           template_var 6),
                         template_app (template_hole 2, template_var 3))),
                     template_var 1),
                   template_hole 1)),
               template_var 0)),
           template_app
            (template_var 2,
             template_app (template_hole 0, template_var 4))),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app (template_hole 4, template_var 5),
                     template_var 1),
                   template_hole 1)),
               template_var 0)),
           template_app
            (template_var 2,
             template_app (template_hole 0, template_var 4)))))),
    ("UML_State.state_update_vs_allInstances_generic_including'",
     "[| !!a. ?pre_post (?mk a) = a;
         !!x. ?\<sigma>' ?oid = \<lfloor>x\<rfloor> ==> x = ?Object;
         ?Type ?Object ~= None |]
      ==> OclAllInstances_generic ?pre_post ?Type
           (?mk (| state.heap = ?\<sigma>'(?oid |-> ?Object),
                   assocs = ?A |)) =
          OclAllInstances_generic ?pre_post
           ?Type->including\<^sub>S\<^sub>e\<^sub>t(%_.
                 \<lfloor>\<lfloor>\<lceil>?Type
      ?Object\<rceil>\<rfloor>\<rfloor>)
           (?mk (| state.heap = ?\<sigma>', assocs = ?A |))",
     template_implication
      ([template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_negation
         (
            template_equation
             (template_app (template_var 1, template_var 2),
              template_hole 9)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 6),
             template_var 1),
           template_app
            (template_var 5,
             template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_app (template_hole 5, template_var 4),
                       template_var 3),
                     template_app (template_hole 13, template_var 2))),
                 template_var 0),
               template_hole 4))),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 7, template_var 6),
                 template_var 1)),
             t_empty),
           template_app
            (template_var 5,
             template_app
              (template_app
                (template_app (template_hole 6, template_var 4),
                 template_var 0),
               template_hole 4)))))),
    ("UML_State.state_update_vs_allInstances_at_post_tc",
     "[| ?oid ~: dom ?\<sigma>'; ?Type ?Object ~= None; cp ?P;
         !!X. const X ==> const (?P X) |]
      ==> ((?\<sigma>,
            (| state.heap = ?\<sigma>'(?oid |-> ?Object), assocs = ?A |))
            \<Turnstile> ?P ?Type .allInstances()) =
          ((?\<sigma>, (| state.heap = ?\<sigma>', assocs = ?A |))
            \<Turnstile> ?P ?Type .allInstances()->including\<^sub>S\<^sub>e\<^sub>t(%_.
            \<lfloor>?Type ?Object\<rfloor>))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 17, template_var 6),
                  template_app (template_hole 16, template_var 5))
                )
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 4, template_var 3),
              template_hole 14)
            ),
        template_predicate
         (template_app (template_hole 13, template_var 2)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 1),
               template_app
                (template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_app (template_hole 5, template_var 5),
                         template_var 6),
                       template_app (template_hole 4, template_var 3))),
                   template_var 0),
                 template_hole 3))),
           template_app
            (template_var 2,
             template_app (template_hole 2, template_var 4))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 1),
               template_app
                (template_app
                  (template_app (template_hole 6, template_var 5),
                   template_var 0),
                 template_hole 3))),
           template_app
            (template_var 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 2, template_var 4)),
               t_empty)))))),
    ("UML_State.state_update_vs_allInstances_at_pre_tc",
     "[| ?oid ~: dom ?\<sigma>'; ?Type ?Object ~= None; cp ?P;
         !!X. const X ==> const (?P X) |]
      ==> (((| state.heap = ?\<sigma>'(?oid |-> ?Object), assocs = ?A |),
            ?\<sigma>)
            \<Turnstile> ?P ?Type .allInstances@pre()) =
          (((| state.heap = ?\<sigma>', assocs = ?A |), ?\<sigma>)
            \<Turnstile> ?P ?Type .allInstances@pre()->including\<^sub>S\<^sub>e\<^sub>t(%_.
                \<lfloor>?Type ?Object\<rfloor>))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 17, template_var 6),
                  template_app (template_hole 16, template_var 5))
                )
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 4, template_var 3),
              template_hole 14)
            ),
        template_predicate
         (template_app (template_hole 13, template_var 2)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_app (template_hole 5, template_var 5),
                           template_var 6),
                         template_app (template_hole 4, template_var 3))),
                     template_var 1),
                   template_hole 3)),
               template_var 0)),
           template_app
            (template_var 2,
             template_app (template_hole 2, template_var 4))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_app (template_hole 6, template_var 5),
                     template_var 1),
                   template_hole 3)),
               template_var 0)),
           template_app
            (template_var 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 2, template_var 4)),
               t_empty)))))),
    ("UML_State.state_update_vs_allInstances_at_post_including",
     "[| !!x. ?\<sigma>' ?oid = \<lfloor>x\<rfloor> ==> x = ?Object;
         ?Type ?Object ~= None |]
      ==> ?Type .allInstances()
           (?\<sigma>,
            (| state.heap = ?\<sigma>'(?oid |-> ?Object), assocs = ?A |)) =
          %_. ?Type .allInstances()
               (?\<sigma>,
                (| state.heap = ?\<sigma>',
                   assocs =
                     ?A |))->including\<^sub>S\<^sub>e\<^sub>t(%_.
                            \<lfloor>\<lfloor>\<lceil>?Type
                 ?Object\<rceil>\<rfloor>\<rfloor>)
           (?\<sigma>,
            (| state.heap = ?\<sigma>'(?oid |-> ?Object), assocs = ?A |))",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty)),
        template_negation
         (
            template_equation
             (template_app (template_var 2, template_var 3),
              template_hole 10)
            )],
       template_equation
        (template_app
          (template_app (template_hole 8, template_var 2),
           template_app
            (template_app (template_hole 7, template_var 1),
             template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_app (template_hole 5, template_var 5),
                       template_var 4),
                     template_app (template_hole 14, template_var 3))),
                 template_var 0),
               template_hole 4))),
         template_app
          (template_app (template_app (template_hole 3, t_empty), t_empty),
           template_app
            (template_app (template_hole 7, template_var 1),
             template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_app (template_hole 5, template_var 5),
                       template_var 4),
                     template_app (template_hole 14, template_var 3))),
                 template_var 0),
               template_hole 4)))))),
    ("UML_State.state_update_vs_allInstances_at_pre_including",
     "[| !!x. ?\<sigma>' ?oid = \<lfloor>x\<rfloor> ==> x = ?Object;
         ?Type ?Object ~= None |]
      ==> ?Type .allInstances@pre()
           ((| state.heap = ?\<sigma>'(?oid |-> ?Object), assocs = ?A |),
            ?\<sigma>) =
          %_. ?Type .allInstances@pre()
               ((| state.heap = ?\<sigma>', assocs = ?A |),
                ?\<sigma>)->including\<^sub>S\<^sub>e\<^sub>t(%_.
                           \<lfloor>\<lfloor>\<lceil>?Type
                ?Object\<rceil>\<rfloor>\<rfloor>)
           ((| state.heap = ?\<sigma>'(?oid |-> ?Object), assocs = ?A |),
            ?\<sigma>)",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty)),
        template_negation
         (
            template_equation
             (template_app (template_var 2, template_var 3),
              template_hole 10)
            )],
       template_equation
        (template_app
          (template_app (template_hole 8, template_var 2),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_app (template_hole 5, template_var 5),
                         template_var 4),
                       template_app (template_hole 14, template_var 3))),
                   template_var 1),
                 template_hole 4)),
             template_var 0)),
         template_app
          (template_app (template_app (template_hole 3, t_empty), t_empty),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_app (template_hole 5, template_var 5),
                         template_var 4),
                       template_app (template_hole 14, template_var 3))),
                   template_var 1),
                 template_hole 4)),
             template_var 0))))),
    ("UML_State.state_update_vs_allInstances_generic_ntc",
     "[| !!a. ?pre_post (?mk a) = a; ?oid ~: dom ?\<sigma>';
         ?Type ?Object = None; cp ?P; !!X. const X ==> const (?P X) |]
      ==> (?mk (| state.heap = ?\<sigma>'(?oid |-> ?Object), assocs = ?A |)
            \<Turnstile> ?P (OclAllInstances_generic ?pre_post ?Type)) =
          (?mk (| state.heap = ?\<sigma>', assocs = ?A |)
            \<Turnstile> ?P (OclAllInstances_generic ?pre_post ?Type))",
     template_implication
      ([template_predicate (template_app (template_hole 18, t_empty)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 14, template_var 5),
                  template_app (template_hole 13, template_var 4))
                )
            ),
        template_equation
         (template_app (template_var 3, template_var 2), template_hole 11),
        template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_var 6,
               template_app
                (template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_app (template_hole 3, template_var 4),
                         template_var 5),
                       template_app (template_hole 2, template_var 2))),
                   template_var 0),
                 template_hole 1))),
           template_app
            (template_var 1,
             template_app
              (template_app (template_hole 0, template_var 7),
               template_var 3))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_var 6,
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 4),
                   template_var 0),
                 template_hole 1))),
           template_app
            (template_var 1,
             template_app
              (template_app (template_hole 0, template_var 7),
               template_var 3)))))),
    ("UML_State.StrictRefEq\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t_vs_StrongEq",
     "[| WFF ?\<tau>; ?\<tau> \<Turnstile> \<upsilon> ?x;
         ?\<tau> \<Turnstile> \<upsilon> ?y;
         ?x ?\<tau> : ran (state.heap (fst ?\<tau>));
         ?y ?\<tau> : ran (state.heap (fst ?\<tau>));
         ?x ?\<tau> : ran (state.heap (snd ?\<tau>));
         ?y ?\<tau> : ran (state.heap (snd ?\<tau>)) |]
      ==> (?\<tau>
            \<Turnstile> StrictRefEq\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t
                          ?x ?y) =
          (?\<tau> \<Turnstile> ?x \<triangleq> ?y)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 8, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 8, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_var 1, template_var 2)),
              template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 2))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_var 0, template_var 2)),
              template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 2))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_var 1, template_var 2)),
              template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app (template_hole 3, template_var 2))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_var 0, template_var 2)),
              template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app (template_hole 3, template_var 2))))
            )],
       template_equation
        (template_app
          (template_app (template_hole 9, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 9, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("UML_State.state_update_vs_allInstances_generic_including",
     "[| !!a. ?pre_post (?mk a) = a;
         !!x. ?\<sigma>' ?oid = \<lfloor>x\<rfloor> ==> x = ?Object;
         ?Type ?Object ~= None |]
      ==> OclAllInstances_generic ?pre_post ?Type
           (?mk (| state.heap = ?\<sigma>'(?oid |-> ?Object),
                   assocs = ?A |)) =
          %_. OclAllInstances_generic ?pre_post ?Type
               (?mk (| state.heap = ?\<sigma>',
                       assocs =
                         ?A |))->including\<^sub>S\<^sub>e\<^sub>t(%_.
                                \<lfloor>\<lfloor>\<lceil>?Type
                     ?Object\<rceil>\<rfloor>\<rfloor>)
           (?mk (| state.heap = ?\<sigma>'(?oid |-> ?Object),
                   assocs = ?A |))",
     template_implication
      ([template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_negation
         (
            template_equation
             (template_app (template_var 1, template_var 2),
              template_hole 9)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 6),
             template_var 1),
           template_app
            (template_var 5,
             template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_app (template_hole 5, template_var 4),
                       template_var 3),
                     template_app (template_hole 13, template_var 2))),
                 template_var 0),
               template_hole 4))),
         template_app
          (template_app (template_app (template_hole 3, t_empty), t_empty),
           template_app
            (template_var 5,
             template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_app (template_hole 5, template_var 4),
                       template_var 3),
                     template_app (template_hole 13, template_var 2))),
                 template_var 0),
               template_hole 4)))))),
    ("UML_State.state_update_vs_allInstances_generic_tc",
     "[| !!a. ?pre_post (?mk a) = a; ?oid ~: dom ?\<sigma>';
         ?Type ?Object ~= None; cp ?P; !!X. const X ==> const (?P X) |]
      ==> (?mk (| state.heap = ?\<sigma>'(?oid |-> ?Object), assocs = ?A |)
            \<Turnstile> ?P (OclAllInstances_generic ?pre_post ?Type)) =
          (?mk (| state.heap = ?\<sigma>', assocs = ?A |)
            \<Turnstile> ?P OclAllInstances_generic ?pre_post
                             ?Type->including\<^sub>S\<^sub>e\<^sub>t(%_.
                                   \<lfloor>?Type ?Object\<rfloor>))",
     template_implication
      ([template_predicate (template_app (template_hole 20, t_empty)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 16, template_var 5),
                  template_app (template_hole 15, template_var 4))
                )
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 3, template_var 2),
              template_hole 13)
            ),
        template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_var 6,
               template_app
                (template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_app (template_hole 5, template_var 4),
                         template_var 5),
                       template_app (template_hole 4, template_var 2))),
                   template_var 0),
                 template_hole 3))),
           template_app
            (template_var 1,
             template_app
              (template_app (template_hole 2, template_var 7),
               template_var 3))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_var 6,
               template_app
                (template_app
                  (template_app (template_hole 6, template_var 4),
                   template_var 0),
                 template_hole 3))),
           template_app
            (template_var 1,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 2, template_var 7),
                   template_var 3)),
               t_empty)))))),
    ("UML_State.StrictRefEq\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t_vs_StrongEq''",
     "[| WFF ?\<tau>; ?\<tau> \<Turnstile> \<upsilon> ?x;
         ?\<tau> \<Turnstile> \<upsilon> ?y;
         !!x. x : ran (state.heap (fst ?\<tau>)) |
              x : ran (state.heap (snd ?\<tau>)) ==>
              oid_of (?H x) = oid_of x;
         ?\<tau>
          \<Turnstile> ?H .allInstances()->includes\<^sub>S\<^sub>e\<^sub>t(?x) and
                       ?H .allInstances()->includes\<^sub>S\<^sub>e\<^sub>t(?y) or
                       ?H .allInstances@pre()->includes\<^sub>S\<^sub>e\<^sub>t(?x) and
                       ?H .allInstances@pre()->includes\<^sub>S\<^sub>e\<^sub>t(?y) |]
      ==> (?\<tau>
            \<Turnstile> StrictRefEq\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t
                          ?x ?y) =
          (?\<tau> \<Turnstile> ?x \<triangleq> ?y)",
     template_implication
      ([template_predicate
         (template_app (template_hole 20, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 3),
              template_app (template_hole 18, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 3),
              template_app (template_hole 18, template_var 1))
            ),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 3),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app
                     (template_hole 6,
                      template_app
                       (template_app
                         (template_hole 5,
                          template_app (template_hole 4, template_var 0)),
                        template_var 2)),
                    template_app
                     (template_app
                       (template_hole 5,
                        template_app (template_hole 4, template_var 0)),
                      template_var 1))),
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app
                       (template_hole 5,
                        template_app (template_hole 3, template_var 0)),
                      template_var 2)),
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app (template_hole 3, template_var 0)),
                    template_var 1))))
            )],
       template_equation
        (template_app
          (template_app (template_hole 19, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 19, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("UML_State.framing'",
     "[| WFF ?\<tau>;
         ?\<tau>
          \<Turnstile> ?X->excluding\<^sub>S\<^sub>e\<^sub>t(?x)->oclIsModifiedOnly();
         ?\<tau>
          \<Turnstile> ?X->forAll\<^sub>S\<^sub>e\<^sub>t(a|not
                       (?x \<triangleq> a));
         !!x. x : ran (state.heap (fst ?\<tau>)) |
              x : ran (state.heap (snd ?\<tau>)) ==>
              oid_of (?H x) = oid_of x;
         ?\<tau>
          \<Turnstile> ?X->forAll\<^sub>S\<^sub>e\<^sub>t(y|?H .allInstances()->includes\<^sub>S\<^sub>e\<^sub>t(?x) and
                      ?H .allInstances()->includes\<^sub>S\<^sub>e\<^sub>t(y) or
                      ?H .allInstances@pre()->includes\<^sub>S\<^sub>e\<^sub>t(?x) and
                      ?H .allInstances@pre()->includes\<^sub>S\<^sub>e\<^sub>t(y)) |]
      ==> ?\<tau> \<Turnstile> ?x@pre?P \<triangleq> ?x@post?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 23, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 4),
              template_app
               (template_hole 21,
                template_app
                 (template_app (template_hole 20, template_var 3),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 4),
              template_app
               (template_app (template_hole 19, template_var 3), t_empty))
            ),
        template_predicate (template_app (template_hole 16, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 4),
              template_app
               (template_app (template_hole 19, template_var 3), t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 22, template_var 4),
             template_app
              (template_app
                (template_hole 17,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("UML_State.StrictRefEq\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t_vs_StrongEq'",
     "[| WFF ?\<tau>; ?\<tau> \<Turnstile> \<upsilon> ?x;
         ?\<tau> \<Turnstile> \<upsilon> ?y;
         !!x. [| x : ran (state.heap (fst ?\<tau>)) |
                 x : ran (state.heap (snd ?\<tau>));
                 ?H x ~= \<bottom> |]
              ==> oid_of (?H x) = oid_of x;
         ?x ?\<tau> : ?H ` ran (state.heap (fst ?\<tau>)) &
         ?y ?\<tau> : ?H ` ran (state.heap (fst ?\<tau>)) |
         ?x ?\<tau> : ?H ` ran (state.heap (snd ?\<tau>)) &
         ?y ?\<tau> : ?H ` ran (state.heap (snd ?\<tau>)) |]
      ==> (?\<tau>
            \<Turnstile> StrictRefEq\<^sub>O\<^sub>b\<^sub>j\<^sub>e\<^sub>c\<^sub>t
                          ?x ?y) =
          (?\<tau> \<Turnstile> ?x \<triangleq> ?y)",
     template_implication
      ([template_predicate
         (template_app (template_hole 21, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 3),
              template_app (template_hole 19, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 3),
              template_app (template_hole 19, template_var 1))
            ),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app (template_var 2, template_var 3)),
                      template_app
                       (template_app (template_hole 3, template_var 0),
                        template_app
                         (template_hole 15,
                          template_app
                           (template_hole 14,
                            template_app
                             (template_hole 13, template_var 3)))))),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app (template_var 1, template_var 3)),
                    template_app
                     (template_app (template_hole 3, template_var 0),
                      template_app
                       (template_hole 15,
                        template_app
                         (template_hole 14,
                          template_app
                           (template_hole 13, template_var 3))))))),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app (template_var 2, template_var 3)),
                    template_app
                     (template_app (template_hole 3, template_var 0),
                      template_app
                       (template_hole 15,
                        template_app
                         (template_hole 14,
                          template_app
                           (template_hole 12, template_var 3)))))),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_var 1, template_var 3)),
                  template_app
                   (template_app (template_hole 3, template_var 0),
                    template_app
                     (template_hole 15,
                      template_app
                       (template_hole 14,
                        template_app
                         (template_hole 12, template_var 3)))))))
            )],
       template_equation
        (template_app
          (template_app (template_hole 20, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 20, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)))))]
