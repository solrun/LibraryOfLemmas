   [("UML_Sequence.mtSequence_rep_set",
     "\<lceil>\<lceil>Rep_Sequence\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                       (Sequence{} ?\<tau>)\<rceil>\<rceil> =
      []",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)))),
       template_hole 0)),
    ("UML_Sequence.equal_Sequence\<^sub>b\<^sub>a\<^sub>s\<^sub>e_code",
     "equal_class.equal ?k ?l =
      (Rep_Sequence\<^sub>b\<^sub>a\<^sub>s\<^sub>e ?k =
       Rep_Sequence\<^sub>b\<^sub>a\<^sub>s\<^sub>e ?l)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("UML_Sequence.OclIterate_invalid_args",
     "OclIterate ?S invalid ?P = invalid",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         t_empty),
       template_hole 0)),
    ("UML_Sequence.OclIterate_empty", "OclIterate Sequence{} ?A ?P = ?A",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 1),
         t_empty),
       template_var 1)),
    ("UML_Sequence.OclIterate_invalid",
     "OclIterate invalid ?A ?P = invalid",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         t_empty),
       template_hole 0)),
    ("UML_Sequence.OclIterate_null", "OclIterate null ?A ?P = invalid",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         t_empty),
       template_hole 0)),
    ("UML_Sequence.cp_OclIncluding",
     "?X->including\<^sub>S\<^sub>e\<^sub>q(?x) ?\<tau> =
      %_. ?X ?\<tau>->including\<^sub>S\<^sub>e\<^sub>q(%_. ?x ?\<tau>)
       ?\<tau>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app (template_app (template_hole 0, t_empty), t_empty),
         template_var 0))),
    ("UML_Sequence.cp_intro''\<^sub>S\<^sub>e\<^sub>q",
     "[| cp ?P; cp ?Q |]
      ==> cp (%X. ?P X->including\<^sub>S\<^sub>e\<^sub>q(?Q X))",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("UML_Sequence.Sequence_inv_lemma",
     "?\<tau> \<Turnstile> \<delta> ?X ==>
      ALL x:set \<lceil>\<lceil>Rep_Sequence\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                                 (?X ?\<tau>)\<rceil>\<rceil>.
         x ~= \<bottom>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app (template_hole 8, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app (template_var 0, template_var 1)))))),
             t_empty)
           ))),
    ("UML_Sequence.cp_OclIterate",
     "OclIterate ?X ?A ?P ?\<tau> =
      OclIterate (%_. ?X ?\<tau>) ?A ?P ?\<tau>",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           t_empty),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, t_empty), template_var 2),
           t_empty),
         template_var 0))),
    ("UML_Sequence.OclIterate_prepend",
     "[| !!X. ?P invalid X = invalid; !!X. ?P X invalid = invalid;
         !!x y \<tau>. ?P x y \<tau> = ?P (%_. x \<tau>) y \<tau>;
         !!x y \<tau>. ?P x y \<tau> = ?P x (%_. y \<tau>) \<tau> |]
      ==> OclIterate ?S->prepend\<^sub>S\<^sub>e\<^sub>q(?a) ?A ?P =
          ?P ?a (OclIterate ?S ?A ?P)",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0),
           t_empty),
         template_app
          (template_app (template_var 3, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0),
             t_empty))))),
    ("UML_Sequence.OclIterate_including",
     "[| !!X. ?P invalid X = invalid;
         !!\<tau>. (\<upsilon> ?A) \<tau> = (\<upsilon> ?P ?a ?A) \<tau>;
         !!x y \<tau>. ?P x y \<tau> = ?P (%_. x \<tau>) y \<tau>;
         !!x y \<tau>. ?P x y \<tau> = ?P x (%_. y \<tau>) \<tau> |]
      ==> OclIterate ?S->including\<^sub>S\<^sub>e\<^sub>q(?a) ?A ?P =
          OclIterate ?S (?P ?a ?A) ?P",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_var 2),
           t_empty),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_var 3, template_var 1),
               template_var 2)),
           t_empty))))]
