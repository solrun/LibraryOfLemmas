   [("UML_Pair.equal_Pair\<^sub>b\<^sub>a\<^sub>s\<^sub>e_code",
     "equal_class.equal ?k ?l =
      (Rep_Pair\<^sub>b\<^sub>a\<^sub>s\<^sub>e ?k =
       Rep_Pair\<^sub>b\<^sub>a\<^sub>s\<^sub>e ?l)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("UML_Pair.proj1_exec",
     " Pair{?X,?Y} .First() =
      (if \<upsilon> ?Y then ?X else invalid endif)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_hole 0))),
    ("UML_Pair.proj2_exec",
     "Pair{?X,?Y} .Second() =
      (if \<upsilon> ?X then ?Y else invalid endif)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_hole 0))),
    ("UML_Pair.2",
     "?\<tau> \<Turnstile> \<upsilon> ?X ==>
      ?\<tau> \<Turnstile> Pair{?X,?Y} .Second() \<triangleq> ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0))),
               template_var 0))
           ))),
    ("UML_Pair.1",
     "?\<tau> \<Turnstile> \<upsilon> ?Y ==>
      ?\<tau> \<Turnstile>  Pair{?X,?Y} .First() \<triangleq> ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1))),
               template_var 0))
           ))),
    ("UML_Pair.A'",
     "[| ?x ~= \<bottom>; ?x ~= null |]
      ==> fst \<lceil>\<lceil>Rep_Pair\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                               ?x\<rceil>\<rceil> ~=
          \<bottom>",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 7)),
        template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_negation
        (
           template_equation
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)))),
             template_hole 0)
           ))),
    ("UML_Pair.B'",
     "[| ?x ~= \<bottom>; ?x ~= null |]
      ==> snd \<lceil>\<lceil>Rep_Pair\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                               ?x\<rceil>\<rceil> ~=
          \<bottom>",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 7)),
        template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_negation
        (
           template_equation
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)))),
             template_hole 0)
           ))),
    ("UML_Pair.A",
     "[| Rep_Pair\<^sub>b\<^sub>a\<^sub>s\<^sub>e ?x ~= \<bottom>;
         Rep_Pair\<^sub>b\<^sub>a\<^sub>s\<^sub>e ?x ~= null |]
      ==> fst \<lceil>\<lceil>Rep_Pair\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                               ?x\<rceil>\<rceil> ~=
          \<bottom>",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 7, template_var 0),
              template_hole 6)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 7, template_var 0),
              template_hole 5)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 7, template_var 0)))),
             template_hole 0)
           ))),
    ("UML_Pair.B",
     "[| Rep_Pair\<^sub>b\<^sub>a\<^sub>s\<^sub>e ?x ~= \<bottom>;
         Rep_Pair\<^sub>b\<^sub>a\<^sub>s\<^sub>e ?x ~= null |]
      ==> snd \<lceil>\<lceil>Rep_Pair\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                               ?x\<rceil>\<rceil> ~=
          \<bottom>",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 7, template_var 0),
              template_hole 6)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 7, template_var 0),
              template_hole 5)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 7, template_var 0)))),
             template_hole 0)
           )))]
