   [("UML_Set.OclReject_mtSet_exec", "OclReject Set{} ?P = Set{}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("UML_Set.OclSelect_mtSet_exec", "OclSelect Set{} ?P = Set{}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("UML_Set.OclANY_singleton_exec",
     "Set{?a}->any\<^sub>S\<^sub>e\<^sub>t() = ?a",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_var 0)),
    ("UML_Set.OclANY_valid_args_valid''",
     "\<upsilon> ?X->any\<^sub>S\<^sub>e\<^sub>t() = \<upsilon> ?X",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("UML_Set.OclExists_mtSet_exec", "OclExists Set{} ?P = false",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), t_empty),
       template_hole 0)),
    ("UML_Set.OclExists_invalid", "OclExists invalid ?P = invalid",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), t_empty),
       template_hole 0)),
    ("UML_Set.OclExists_null", "OclExists null ?P = invalid",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), t_empty),
       template_hole 0)),
    ("UML_Set.OclForall_mtSet_exec", "OclForall Set{} ?P = true",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), t_empty),
       template_hole 0)),
    ("UML_Set.OclForall_invalid", "OclForall invalid ?P = invalid",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), t_empty),
       template_hole 0)),
    ("UML_Set.OclForall_null", "OclForall null ?P = invalid",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), t_empty),
       template_hole 0)),
    ("UML_Set.OclReject_invalid", "OclReject invalid ?P = invalid",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), t_empty),
       template_hole 0)),
    ("UML_Set.OclReject_null", "OclReject null ?P = invalid",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), t_empty),
       template_hole 0)),
    ("UML_Set.OclSelect_invalid", "OclSelect invalid ?P = invalid",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), t_empty),
       template_hole 0)),
    ("UML_Set.OclSelect_null", "OclSelect null ?P = invalid",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), t_empty),
       template_hole 0)),
    ("UML_Set.mtSet_rep_set",
     "\<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                       (Set{} ?\<tau>)\<rceil>\<rceil> =
      {}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)))),
       template_hole 0)),
    ("UML_Set.const_StrictRefEq\<^sub>S\<^sub>e\<^sub>t_empty",
     "const ?X ==> const (?X \<doteq> Set{})",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("UML_Set.cp_OclANY",
     "?X->any\<^sub>S\<^sub>e\<^sub>t() ?\<tau> =
      %_. ?X ?\<tau>->any\<^sub>S\<^sub>e\<^sub>t() ?\<tau>",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("UML_Set.OclIncludes_charn0'",
     "Set{}->includes\<^sub>S\<^sub>e\<^sub>t(?x) =
      (if \<upsilon> ?x then false else invalid endif)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4), template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_hole 1),
         template_hole 0))),
    ("UML_Set.OclExcluding_charn0_exec",
     "Set{}->excluding\<^sub>S\<^sub>e\<^sub>t(?x) =
      (if \<upsilon> ?x then Set{} else invalid endif)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3), template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 3),
         template_hole 0))),
    ("UML_Set.OclExcluding_idem",
     "?S->excluding\<^sub>S\<^sub>e\<^sub>t(?i)->excluding\<^sub>S\<^sub>e\<^sub>t(?i) =
      ?S->excluding\<^sub>S\<^sub>e\<^sub>t(?i)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("UML_Set.OclExcluding_charn3",
     "?X->including\<^sub>S\<^sub>e\<^sub>t(?x)->excluding\<^sub>S\<^sub>e\<^sub>t(?x) =
      ?X->excluding\<^sub>S\<^sub>e\<^sub>t(?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("UML_Set.OclIncluding_idem",
     "?S->including\<^sub>S\<^sub>e\<^sub>t(?i)->including\<^sub>S\<^sub>e\<^sub>t(?i) =
      ?S->including\<^sub>S\<^sub>e\<^sub>t(?i)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("UML_Set.equal_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e_code",
     "equal_class.equal ?k ?l =
      (Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e ?k =
       Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e ?l)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("UML_Set.cp_OclSize",
     "?X->size\<^sub>S\<^sub>e\<^sub>t() ?\<tau> =
      %_. ?X ?\<tau>->size\<^sub>S\<^sub>e\<^sub>t() ?\<tau>",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("UML_Set.cp_OclIsEmpty",
     "?X->isEmpty\<^sub>S\<^sub>e\<^sub>t() ?\<tau> =
      %_. ?X ?\<tau>->isEmpty\<^sub>S\<^sub>e\<^sub>t() ?\<tau>",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("UML_Set.cp_OclNotEmpty",
     "?X->notEmpty\<^sub>S\<^sub>e\<^sub>t() ?\<tau> =
      %_. ?X ?\<tau>->notEmpty\<^sub>S\<^sub>e\<^sub>t() ?\<tau>",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("UML_Set.cp_intro''\<^sub>S\<^sub>e\<^sub>t",
     "cp ?P ==> cp (%X. ?P X->any\<^sub>S\<^sub>e\<^sub>t())",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("UML_Set.cp_intro''\<^sub>S\<^sub>e\<^sub>t",
     "cp ?P ==> cp (%X. ?P X->size\<^sub>S\<^sub>e\<^sub>t())",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("UML_Set.cp_intro''\<^sub>S\<^sub>e\<^sub>t",
     "cp ?P ==> cp (%X. ?P X->isEmpty\<^sub>S\<^sub>e\<^sub>t())",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("UML_Set.cp_intro''\<^sub>S\<^sub>e\<^sub>t",
     "cp ?P ==> cp (%X. ?P X->notEmpty\<^sub>S\<^sub>e\<^sub>t())",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("UML_Set.OclIterate_invalid_args",
     "OclIterate ?S invalid ?P = invalid",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         t_empty),
       template_hole 0)),
    ("UML_Set.OclIterate_empty", "OclIterate Set{} ?A ?P = ?A",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 1),
         t_empty),
       template_var 1)),
    ("UML_Set.OclIterate_invalid", "OclIterate invalid ?A ?P = invalid",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         t_empty),
       template_hole 0)),
    ("UML_Set.OclIterate_null", "OclIterate null ?A ?P = invalid",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         t_empty),
       template_hole 0)),
    ("UML_Set.OclExcludes_valid_args_valid''",
     "\<upsilon> ?X->excludes\<^sub>S\<^sub>e\<^sub>t(?x) =
      (\<delta> ?X and \<upsilon> ?x)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("UML_Set.OclIncludes_valid_args_valid''",
     "\<upsilon> ?X->includes\<^sub>S\<^sub>e\<^sub>t(?x) =
      (\<delta> ?X and \<upsilon> ?x)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("UML_Set.OclExcluding_valid_args_valid''",
     "\<upsilon> ?X->excluding\<^sub>S\<^sub>e\<^sub>t(?x) =
      (\<delta> ?X and \<upsilon> ?x)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("UML_Set.OclIncluding_valid_args_valid''",
     "\<upsilon> ?X->including\<^sub>S\<^sub>e\<^sub>t(?x) =
      (\<delta> ?X and \<upsilon> ?x)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("UML_Set.OclANY_valid_args_valid",
     "(?\<tau> \<Turnstile> \<upsilon> ?X->any\<^sub>S\<^sub>e\<^sub>t()) =
      (?\<tau> \<Turnstile> \<upsilon> ?X)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("UML_Set.OclExcluding_commute",
     "?S->excluding\<^sub>S\<^sub>e\<^sub>t(?i)->excluding\<^sub>S\<^sub>e\<^sub>t(?j) =
      ?S->excluding\<^sub>S\<^sub>e\<^sub>t(?j)->excluding\<^sub>S\<^sub>e\<^sub>t(?i)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("UML_Set.OclIncluding_commute",
     "?S->including\<^sub>S\<^sub>e\<^sub>t(?i)->including\<^sub>S\<^sub>e\<^sub>t(?j) =
      ?S->including\<^sub>S\<^sub>e\<^sub>t(?j)->including\<^sub>S\<^sub>e\<^sub>t(?i)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("UML_Set.cp_OclIncludes1",
     "?X->includes\<^sub>S\<^sub>e\<^sub>t(?x) ?\<tau> =
      ?X->includes\<^sub>S\<^sub>e\<^sub>t(%_. ?x ?\<tau>) ?\<tau>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), t_empty),
         template_var 0))),
    ("UML_Set.cp_OclExists1", "cp ?S ==> cp (%X. OclExists (?S X) ?P)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("UML_Set.cp_OclForall1", "cp ?S ==> cp (%X. OclForall (?S X) ?P)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("UML_Set.OclIncludes_charn0",
     "?\<tau> \<Turnstile> \<upsilon> ?x ==>
      ?\<tau> \<Turnstile> not Set{}->includes\<^sub>S\<^sub>e\<^sub>t(?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)))
           ))),
    ("UML_Set.const_OclIncluding",
     "[| const ?x; const ?S |]
      ==> const ?S->including\<^sub>S\<^sub>e\<^sub>t(?x)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("UML_Set.OclExcluding_charn0",
     "?\<tau> \<Turnstile> \<upsilon> ?x ==>
      ?\<tau>
       \<Turnstile> Set{}->excluding\<^sub>S\<^sub>e\<^sub>t(?x) \<triangleq>
                    Set{}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 0)),
               template_hole 0))
           ))),
    ("UML_Set.OclExcluding_excludes0",
     "?\<tau> \<Turnstile> ?X->excludes\<^sub>S\<^sub>e\<^sub>t(?x) ==>
      ?X->excluding\<^sub>S\<^sub>e\<^sub>t(?x) ?\<tau> = ?X ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2),
         template_app (template_var 1, template_var 2)))),
    ("UML_Set.OclExcluding_excludes",
     "?\<tau> \<Turnstile> ?X->excludes\<^sub>S\<^sub>e\<^sub>t(?x) ==>
      ?\<tau>
       \<Turnstile> ?X->excluding\<^sub>S\<^sub>e\<^sub>t(?x) \<triangleq>
                    ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_var 1))
           ))),
    ("UML_Set.OclIncluding_includes0",
     "?\<tau> \<Turnstile> ?X->includes\<^sub>S\<^sub>e\<^sub>t(?x) ==>
      ?X->including\<^sub>S\<^sub>e\<^sub>t(?x) ?\<tau> = ?X ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2),
         template_app (template_var 1, template_var 2)))),
    ("UML_Set.OclIncluding_includes",
     "?\<tau> \<Turnstile> ?X->includes\<^sub>S\<^sub>e\<^sub>t(?x) ==>
      ?\<tau>
       \<Turnstile> ?X->including\<^sub>S\<^sub>e\<^sub>t(?x) \<triangleq>
                    ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_var 1))
           ))),
    ("UML_Set.cp_OclReject",
     "OclReject ?X ?P ?\<tau> = OclReject (%_. ?X ?\<tau>) ?P ?\<tau>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), t_empty),
         template_var 0),
       template_app
        (template_app (template_app (template_hole 0, t_empty), t_empty),
         template_var 0))),
    ("UML_Set.cp_OclSelect",
     "OclSelect ?X ?P ?\<tau> = OclSelect (%_. ?X ?\<tau>) ?P ?\<tau>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), t_empty),
         template_var 0),
       template_app
        (template_app (template_app (template_hole 0, t_empty), t_empty),
         template_var 0))),
    ("UML_Set.OclExcludes_valid_args_valid",
     "(?\<tau>
        \<Turnstile> \<upsilon> ?X->excludes\<^sub>S\<^sub>e\<^sub>t(?x)) =
      (?\<tau> \<Turnstile> \<delta> ?X &
       ?\<tau> \<Turnstile> \<upsilon> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app (template_hole 1, template_var 1))),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_app (template_hole 0, template_var 0))))),
    ("UML_Set.OclIncludes_valid_args_valid",
     "(?\<tau>
        \<Turnstile> \<upsilon> ?X->includes\<^sub>S\<^sub>e\<^sub>t(?x)) =
      (?\<tau> \<Turnstile> \<delta> ?X &
       ?\<tau> \<Turnstile> \<upsilon> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app (template_hole 1, template_var 1))),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_app (template_hole 0, template_var 0))))),
    ("UML_Set.OclExcluding_valid_args_valid",
     "(?\<tau>
        \<Turnstile> \<upsilon> ?X->excluding\<^sub>S\<^sub>e\<^sub>t(?x)) =
      (?\<tau> \<Turnstile> \<delta> ?X &
       ?\<tau> \<Turnstile> \<upsilon> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app (template_hole 1, template_var 1))),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_app (template_hole 0, template_var 0))))),
    ("UML_Set.OclIncluding_valid_args_valid",
     "(?\<tau>
        \<Turnstile> \<upsilon> ?X->including\<^sub>S\<^sub>e\<^sub>t(?x)) =
      (?\<tau> \<Turnstile> \<delta> ?X &
       ?\<tau> \<Turnstile> \<upsilon> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app (template_hole 1, template_var 1))),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_app (template_hole 0, template_var 0))))),
    ("UML_Set.OclIterate_infinite",
     "?\<tau>
       \<Turnstile> not (\<delta> ?S->size\<^sub>S\<^sub>e\<^sub>t()) ==>
      OclIterate ?S ?A ?F ?\<tau> = invalid ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 2))))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0),
           template_var 3),
         template_app (template_hole 0, template_var 3)))),
    ("UML_Set.cp_OclExists",
     "OclExists ?S ?P ?\<tau> =
      %_. ?S ?\<tau>->exists\<^sub>S\<^sub>e\<^sub>t(x|?P (%_. x ?\<tau>))
       ?\<tau>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), t_empty),
         template_var 0),
       template_app
        (template_app (template_app (template_hole 0, t_empty), t_empty),
         template_var 0))),
    ("UML_Set.cp_OclForall",
     "OclForall ?S ?P ?\<tau> =
      %_. ?S ?\<tau>->forAll\<^sub>S\<^sub>e\<^sub>t(x|?P (%_. x ?\<tau>))
       ?\<tau>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), t_empty),
         template_var 0),
       template_app
        (template_app (template_app (template_hole 0, t_empty), t_empty),
         template_var 0))),
    ("UML_Set.abs_rep_simp'",
     "?\<tau> \<Turnstile> \<delta> ?S ==>
      Abs_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
       \<lfloor>\<lfloor>\<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
    (?S ?\<tau>)\<rceil>\<rceil>\<rfloor>\<rfloor> =
      ?S ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 0,
                     template_app (template_var 0, template_var 1))))))),
         template_app (template_var 0, template_var 1)))),
    ("UML_Set.Set_inv_lemma",
     "?\<tau> \<Turnstile> \<delta> ?X ==>
      ALL x:\<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                             (?X ?\<tau>)\<rceil>\<rceil>.
         x ~= \<bottom>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_var 0, template_var 1))))),
             t_empty)
           ))),
    ("UML_Set.OclIncludes_execute\<^sub>I\<^sub>n\<^sub>t\<^sub>e\<^sub>g\<^sub>e\<^sub>r",
     "?X->including\<^sub>S\<^sub>e\<^sub>t(?x)->includes\<^sub>S\<^sub>e\<^sub>t(?y) =
      (if \<delta> ?X then if ?x \<doteq>
                              ?y then true else ?X->includes\<^sub>S\<^sub>e\<^sub>t(?y) endif else invalid endif)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 2)),
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0)),
               template_hole 1),
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 0))),
         template_hole 0))),
    ("UML_Set.OclIncludes_execute\<^sub>B\<^sub>o\<^sub>o\<^sub>l\<^sub>e\<^sub>a\<^sub>n",
     "?X->including\<^sub>S\<^sub>e\<^sub>t(?x)->includes\<^sub>S\<^sub>e\<^sub>t(?y) =
      (if \<delta> ?X then if ?x \<doteq>
                              ?y then true else ?X->includes\<^sub>S\<^sub>e\<^sub>t(?y) endif else invalid endif)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 2)),
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0)),
               template_hole 1),
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 0))),
         template_hole 0))),
    ("UML_Set.OclIncludes_execute\<^sub>S\<^sub>e\<^sub>t",
     "?X->including\<^sub>S\<^sub>e\<^sub>t(?x)->includes\<^sub>S\<^sub>e\<^sub>t(?y) =
      (if \<delta> ?X then if ?x \<doteq>
                              ?y then true else ?X->includes\<^sub>S\<^sub>e\<^sub>t(?y) endif else invalid endif)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 2)),
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0)),
               template_hole 1),
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 0))),
         template_hole 0))),
    ("UML_Set.OclSelect_including_exec",
     "cp ?P ==>
      OclSelect ?X->including\<^sub>S\<^sub>e\<^sub>t(?y) ?P =
      OclSelect_body ?P ?y
       (OclSelect ?X->excluding\<^sub>S\<^sub>e\<^sub>t(?y) ?P)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 2))))),
    ("UML_Set.const_StrictRefEq\<^sub>S\<^sub>e\<^sub>t_including",
     "[| const ?a; const ?S; const ?X |]
      ==> const (?X \<doteq> ?S->including\<^sub>S\<^sub>e\<^sub>t(?a))",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)))
           ))),
    ("UML_Set.OclIncludes_any",
     "?X->includes\<^sub>S\<^sub>e\<^sub>t(?X->any\<^sub>S\<^sub>e\<^sub>t()) =
      (if \<delta> ?X then if \<delta> ?X->size\<^sub>S\<^sub>e\<^sub>t() then not
    ?X->isEmpty\<^sub>S\<^sub>e\<^sub>t() else ?X->includes\<^sub>S\<^sub>e\<^sub>t(null) endif else invalid endif)",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 0),
         template_app (template_hole 8, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 0)),
           template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 0))),
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_app (template_hole 9, template_var 0),
               template_hole 1))),
         template_hole 0))),
    ("UML_Set.OclExcludes_charn1",
     "[| ?\<tau> \<Turnstile> \<delta> ?X;
         ?\<tau> \<Turnstile> \<upsilon> ?x |]
      ==> ?\<tau>
           \<Turnstile> ?X->excluding\<^sub>S\<^sub>e\<^sub>t(?x)->excludes\<^sub>S\<^sub>e\<^sub>t(?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_var 0))
           ))),
    ("UML_Set.OclIncludes_charn1",
     "[| ?\<tau> \<Turnstile> \<delta> ?X;
         ?\<tau> \<Turnstile> \<upsilon> ?x |]
      ==> ?\<tau>
           \<Turnstile> ?X->including\<^sub>S\<^sub>e\<^sub>t(?x)->includes\<^sub>S\<^sub>e\<^sub>t(?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_var 0))
           ))),
    ("UML_Set.OclReject_including_exec",
     "cp ?P ==>
      OclReject ?X->including\<^sub>S\<^sub>e\<^sub>t(?y) ?P =
      OclSelect_body (not o ?P) ?y
       (OclReject ?X->excluding\<^sub>S\<^sub>e\<^sub>t(?y) ?P)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 2)),
             template_var 0),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 2))))),
    ("UML_Set.Set_inv_lemma'",
     "[| ?\<tau> \<Turnstile> \<delta> ?X;
         ?e : \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                               (?X ?\<tau>)\<rceil>\<rceil> |]
      ==> ?\<tau> \<Turnstile> \<upsilon> (%_. ?e)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app
                   (template_hole 1,
                    template_app (template_var 1, template_var 2)))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app (template_hole 0, t_empty))
           ))),
    ("UML_Set.cp_OclIterate",
     "OclIterate ?X ?A ?P ?\<tau> =
      OclIterate (%_. ?X ?\<tau>) ?A ?P ?\<tau>",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           t_empty),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, t_empty), template_var 2),
           t_empty),
         template_var 0))),
    ("UML_Set.OclSize_including_exec",
     "?X->including\<^sub>S\<^sub>e\<^sub>t(?x)->size\<^sub>S\<^sub>e\<^sub>t() =
      (if \<delta> ?X and
          \<upsilon> ?x then ?X->size\<^sub>S\<^sub>e\<^sub>t() +\<^sub>i\<^sub>n\<^sub>t
                             if ?X->includes\<^sub>S\<^sub>e\<^sub>t(?x) then \<zero> else \<one> endif else invalid endif)",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_app (template_hole 9, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 1)),
               template_app (template_hole 5, template_var 0))),
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 10, template_var 1)),
             template_app
              (template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_var 0)),
                 template_hole 2),
               template_hole 1))),
         template_hole 0))),
    ("UML_Set.OclSize_infinite",
     "?\<tau>
       \<Turnstile> not (\<delta> ?S->size\<^sub>S\<^sub>e\<^sub>t()) ==>
      ?\<tau> \<Turnstile> not (\<delta> ?S) |
      infinite
       \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                        (?S ?\<tau>)\<rceil>\<rceil>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 10, template_var 1),
                 template_app
                  (template_hole 9,
                   template_app (template_hole 5, template_var 0)))),
             template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 0,
                       template_app (template_var 0, template_var 1)))))))
           ))),
    ("UML_Set.OclNotEmpty_has_elt",
     "[| ?\<tau> \<Turnstile> \<delta> ?X;
         ?\<tau> \<Turnstile> ?X->notEmpty\<^sub>S\<^sub>e\<^sub>t() |]
      ==> EX e. e : \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                                     (?X ?\<tau>)\<rceil>\<rceil>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("UML_Set.OclIsEmpty_infinite",
     "[| ?\<tau> \<Turnstile> \<delta> ?X;
         infinite
          \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                           (?X ?\<tau>)\<rceil>\<rceil> |]
      ==> ?\<tau> |\<noteq> \<delta> ?X->isEmpty\<^sub>S\<^sub>e\<^sub>t()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 0))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 5,
                  template_app
                   (template_hole 4,
                    template_app
                     (template_hole 3,
                      template_app
                       (template_hole 2,
                        template_app (template_var 0, template_var 1)))))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 8, template_var 1),
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)))
               )
           ))),
    ("UML_Set.OclNotEmpty_infinite",
     "[| ?\<tau> \<Turnstile> \<delta> ?X;
         infinite
          \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                           (?X ?\<tau>)\<rceil>\<rceil> |]
      ==> ?\<tau>
           |\<noteq> \<delta> ?X->notEmpty\<^sub>S\<^sub>e\<^sub>t()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 0))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 5,
                  template_app
                   (template_hole 4,
                    template_app
                     (template_hole 3,
                      template_app
                       (template_hole 2,
                        template_app (template_var 0, template_var 1)))))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 8, template_var 1),
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)))
               )
           ))),
    ("UML_Set.OclExcluding_charn_exec\<^sub>I\<^sub>n\<^sub>t\<^sub>e\<^sub>g\<^sub>e\<^sub>r",
     "?X->including\<^sub>S\<^sub>e\<^sub>t(?x)->excluding\<^sub>S\<^sub>e\<^sub>t(?y) =
      (if \<delta> ?X then if ?x \<doteq>
                              ?y then ?X->excluding\<^sub>S\<^sub>e\<^sub>t(?y) else ?X->excluding\<^sub>S\<^sub>e\<^sub>t(?y)->including\<^sub>S\<^sub>e\<^sub>t(?x) endif else invalid endif)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 0)),
               template_var 1))),
         template_hole 0))),
    ("UML_Set.OclExcluding_charn_exec\<^sub>B\<^sub>o\<^sub>o\<^sub>l\<^sub>e\<^sub>a\<^sub>n",
     "?X->including\<^sub>S\<^sub>e\<^sub>t(?x)->excluding\<^sub>S\<^sub>e\<^sub>t(?y) =
      (if \<delta> ?X then if ?x \<doteq>
                              ?y then ?X->excluding\<^sub>S\<^sub>e\<^sub>t(?y) else ?X->excluding\<^sub>S\<^sub>e\<^sub>t(?y)->including\<^sub>S\<^sub>e\<^sub>t(?x) endif else invalid endif)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 0)),
               template_var 1))),
         template_hole 0))),
    ("UML_Set.OclExcluding_charn_exec\<^sub>S\<^sub>e\<^sub>t",
     "?X->including\<^sub>S\<^sub>e\<^sub>t(?x)->excluding\<^sub>S\<^sub>e\<^sub>t(?y) =
      (if \<delta> ?X then if ?x \<doteq>
                              ?y then ?X->excluding\<^sub>S\<^sub>e\<^sub>t(?y) else ?X->excluding\<^sub>S\<^sub>e\<^sub>t(?y)->including\<^sub>S\<^sub>e\<^sub>t(?x) endif else invalid endif)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 0)),
               template_var 1))),
         template_hole 0))),
    ("UML_Set.OclIncluding_notempty_rep_set",
     "[| ?\<tau> \<Turnstile> \<delta> ?X;
         ?\<tau> \<Turnstile> \<upsilon> ?a |]
      ==> \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                           (?X->including\<^sub>S\<^sub>e\<^sub>t(?a)
                             ?\<tau>)\<rceil>\<rceil> ~=
          {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 8, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 7, template_var 0))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 0),
                     template_var 2)))),
             template_hole 0)
           ))),
    ("UML_Set.OclExcluding_idem0",
     "[| ?\<tau> \<Turnstile> \<delta> ?S;
         ?\<tau> \<Turnstile> \<upsilon> ?i |]
      ==> ?\<tau>
           \<Turnstile> ?S->excluding\<^sub>S\<^sub>e\<^sub>t(?i)->excluding\<^sub>S\<^sub>e\<^sub>t(?i) \<triangleq>
                        ?S->excluding\<^sub>S\<^sub>e\<^sub>t(?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0)),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("UML_Set.OclIncluding_idem0",
     "[| ?\<tau> \<Turnstile> \<delta> ?S;
         ?\<tau> \<Turnstile> \<upsilon> ?i |]
      ==> ?\<tau>
           \<Turnstile> ?S->including\<^sub>S\<^sub>e\<^sub>t(?i)->including\<^sub>S\<^sub>e\<^sub>t(?i) \<triangleq>
                        ?S->including\<^sub>S\<^sub>e\<^sub>t(?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0)),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("UML_Set.OclExcluding_charn2",
     "[| ?\<tau> \<Turnstile> \<delta> ?X;
         ?\<tau> \<Turnstile> \<upsilon> ?x |]
      ==> ?\<tau>
           \<Turnstile> ?X->including\<^sub>S\<^sub>e\<^sub>t(?x)->excluding\<^sub>S\<^sub>e\<^sub>t(?x) \<triangleq>
                        ?X->excluding\<^sub>S\<^sub>e\<^sub>t(?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0)),
                   template_var 0)),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)))
           ))),
    ("UML_Set.OclForall_rep_set_true",
     "?\<tau> \<Turnstile> \<delta> ?X ==>
      (?\<tau> \<Turnstile> OclForall ?X ?P) =
      (ALL x:\<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                              (?X ?\<tau>)\<rceil>\<rceil>.
          ?\<tau> \<Turnstile> ?P (%\<tau>. x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 7, template_var 2),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 0,
                   template_app (template_var 1, template_var 2))))),
           t_empty)))),
    ("UML_Set.S_lift'",
     "?\<tau> \<Turnstile> \<delta> ?S ==>
      EX S'.
         (%a _. a) `
         \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                          (?S ?\<tau>)\<rceil>\<rceil> =
         (%a _. \<lfloor>a\<rfloor>) ` S'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app (template_hole 8, template_var 0))
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("UML_Set.OclForall_iterate",
     "finite
       \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                        (?S ?\<tau>)\<rceil>\<rceil> ==>
      OclForall ?S ?P ?\<tau> =
      ?S ->iterate\<^sub>S\<^sub>e\<^sub>t(x;acc=true | acc and ?P x)
       ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app
                   (template_hole 5,
                    template_app (template_var 2, template_var 1)))))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2), t_empty),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 1),
             t_empty),
           template_var 1)))),
    ("UML_Set.OclIncluding_rep_set",
     "?\<tau> \<Turnstile> \<delta> ?S ==>
      \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                       (?S->including\<^sub>S\<^sub>e\<^sub>t(%_.
                           \<lfloor>\<lfloor>?x\<rfloor>\<rfloor>)
                         ?\<tau>)\<rceil>\<rceil> =
      insert \<lfloor>\<lfloor>?x\<rfloor>\<rfloor>
       \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                        (?S ?\<tau>)\<rceil>\<rceil>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 8, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 1), t_empty),
                 template_var 2)))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0))),
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_var 1, template_var 2)))))))),
    ("UML_Set.OclIncludes_including\<^sub>I\<^sub>n\<^sub>t\<^sub>e\<^sub>g\<^sub>e\<^sub>r",
     "[| ?\<tau> \<Turnstile> \<upsilon> ?a;
         ?\<tau> \<Turnstile> \<upsilon> ?x;
         ?\<tau> \<Turnstile> ?S->includes\<^sub>S\<^sub>e\<^sub>t(?x) |]
      ==> ?\<tau>
           \<Turnstile> ?S->including\<^sub>S\<^sub>e\<^sub>t(?a)->includes\<^sub>S\<^sub>e\<^sub>t(?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2)),
               template_var 1))
           ))),
    ("UML_Set.OclExists_including_exec",
     "cp ?P ==>
      OclExists ?S->including\<^sub>S\<^sub>e\<^sub>t(?x) ?P =
      (if \<delta> ?S and
          \<upsilon> ?x then ?P ?x or OclExists ?S ?P else invalid endif)",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 1),
               template_var 0)),
           t_empty),
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 1)),
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_var 2, template_var 0)),
               template_app
                (template_app (template_hole 7, template_var 1), t_empty))),
           template_hole 0)))),
    ("UML_Set.OclForall_including_exec",
     "cp ?P ==>
      OclForall ?S->including\<^sub>S\<^sub>e\<^sub>t(?x) ?P =
      (if \<delta> ?S and
          \<upsilon> ?x then ?P ?x and OclForall ?S ?P else invalid endif)",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0)),
           t_empty),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_var 2, template_var 0)),
               template_app
                (template_app (template_hole 6, template_var 1), t_empty))),
           template_hole 0)))),
    ("UML_Set.OclExcluding_finite_rep_set",
     "[| ?\<tau> \<Turnstile> \<delta> ?X;
         ?\<tau> \<Turnstile> \<upsilon> ?x |]
      ==> finite
           \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                            (?X->excluding\<^sub>S\<^sub>e\<^sub>t(?x)
                              ?\<tau>)\<rceil>\<rceil> =
          finite
           \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                            (?X ?\<tau>)\<rceil>\<rceil>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app (template_hole 7, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app (template_hole 6, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0),
                   template_var 2))))),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_var 1, template_var 2)))))))),
    ("UML_Set.OclIncluding_finite_rep_set",
     "[| ?\<tau> \<Turnstile> \<delta> ?X;
         ?\<tau> \<Turnstile> \<upsilon> ?x |]
      ==> finite
           \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                            (?X->including\<^sub>S\<^sub>e\<^sub>t(?x)
                              ?\<tau>)\<rceil>\<rceil> =
          finite
           \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                            (?X ?\<tau>)\<rceil>\<rceil>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app (template_hole 7, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app (template_hole 6, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0),
                   template_var 2))))),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_var 1, template_var 2)))))))),
    ("UML_Set.OclForall_rep_set_false",
     "?\<tau> \<Turnstile> \<delta> ?X ==>
      (OclForall ?X ?P ?\<tau> = false ?\<tau>) =
      (EX x:\<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                             (?X ?\<tau>)\<rceil>\<rceil>.
          ?P (%\<tau>. x) ?\<tau> = false ?\<tau>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 8, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 0),
               template_var 2)),
           template_app (template_hole 4, template_var 2)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 0,
                   template_app (template_var 1, template_var 2))))),
           t_empty)))),
    ("UML_Set.OclExcluding_rep_set",
     "?\<tau> \<Turnstile> \<delta> ?S ==>
      \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                       (?S->excluding\<^sub>S\<^sub>e\<^sub>t(%_.
                           \<lfloor>\<lfloor>?x\<rfloor>\<rfloor>)
                         ?\<tau>)\<rceil>\<rceil> =
      \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                       (?S ?\<tau>)\<rceil>\<rceil> -
      {\<lfloor>\<lfloor>?x\<rfloor>\<rfloor>}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app (template_hole 10, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 1), t_empty),
                 template_var 2)))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_var 1, template_var 2))))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0))),
             template_hole 0))))),
    ("UML_Set.OclIsEmpty_including",
     "[| ?\<tau> \<Turnstile> \<delta> ?X;
         finite
          \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                           (?X ?\<tau>)\<rceil>\<rceil>;
         ?\<tau> \<Turnstile> \<upsilon> ?a |]
      ==> ?X->including\<^sub>S\<^sub>e\<^sub>t(?a)->isEmpty\<^sub>S\<^sub>e\<^sub>t()
           ?\<tau> =
          false ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app (template_hole 9, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app
                   (template_hole 5,
                    template_app (template_var 1, template_var 2)))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_var 2),
         template_app (template_hole 0, template_var 2)))),
    ("UML_Set.OclNotEmpty_including",
     "[| ?\<tau> \<Turnstile> \<delta> ?X;
         finite
          \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                           (?X ?\<tau>)\<rceil>\<rceil>;
         ?\<tau> \<Turnstile> \<upsilon> ?a |]
      ==> ?X->including\<^sub>S\<^sub>e\<^sub>t(?a)->notEmpty\<^sub>S\<^sub>e\<^sub>t()
           ?\<tau> =
          true ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app (template_hole 9, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app
                   (template_hole 5,
                    template_app (template_var 1, template_var 2)))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_var 2),
         template_app (template_hole 0, template_var 2)))),
    ("UML_Set.OclForall_includes",
     "[| ?\<tau> \<Turnstile> \<delta> ?x;
         ?\<tau> \<Turnstile> \<delta> ?y |]
      ==> (?\<tau> \<Turnstile> OclForall ?x (OclIncludes ?y)) =
          (\<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                            (?x ?\<tau>)\<rceil>\<rceil>
           <= \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                               (?y ?\<tau>)\<rceil>\<rceil>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app (template_hole 7, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app (template_hole 7, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 8, template_var 2),
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app (template_hole 4, template_var 0))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 0,
                   template_app (template_var 1, template_var 2))))),
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app (template_var 0, template_var 2)))))))),
    ("UML_Set.OclExcluding_commute0",
     "[| ?\<tau> \<Turnstile> \<delta> ?S;
         ?\<tau> \<Turnstile> \<upsilon> ?i;
         ?\<tau> \<Turnstile> \<upsilon> ?j |]
      ==> ?\<tau>
           \<Turnstile> ?S->excluding\<^sub>S\<^sub>e\<^sub>t(?i)->excluding\<^sub>S\<^sub>e\<^sub>t(?j) \<triangleq>
                        ?S->excluding\<^sub>S\<^sub>e\<^sub>t(?j)->excluding\<^sub>S\<^sub>e\<^sub>t(?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 1)),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)),
                 template_var 1)))
           ))),
    ("UML_Set.OclIncluding_commute0",
     "[| ?\<tau> \<Turnstile> \<delta> ?S;
         ?\<tau> \<Turnstile> \<upsilon> ?i;
         ?\<tau> \<Turnstile> \<upsilon> ?j |]
      ==> ?\<tau>
           \<Turnstile> ?S->including\<^sub>S\<^sub>e\<^sub>t(?i)->including\<^sub>S\<^sub>e\<^sub>t(?j) \<triangleq>
                        ?S->including\<^sub>S\<^sub>e\<^sub>t(?j)->including\<^sub>S\<^sub>e\<^sub>t(?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 1)),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)),
                 template_var 1)))
           ))),
    ("UML_Set.OclForall_not_includes",
     "[| ?\<tau> \<Turnstile> \<delta> ?x;
         ?\<tau> \<Turnstile> \<delta> ?y |]
      ==> (OclForall ?x (OclIncludes ?y) ?\<tau> = false ?\<tau>) =
          (~ \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                              (?x ?\<tau>)\<rceil>\<rceil>
             <= \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
                                 (?y ?\<tau>)\<rceil>\<rceil>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app (template_hole 10, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app (template_hole 10, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_app (template_hole 7, template_var 1),
                 template_app (template_hole 6, template_var 0)),
               template_var 2)),
           template_app (template_hole 5, template_var 2)),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 0,
                     template_app (template_var 1, template_var 2))))),
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 0,
                   template_app (template_var 0, template_var 2))))))))),
    ("UML_Set.OclIncluding_cong",
     "[| ?\<tau> \<Turnstile> \<delta> ?t;
         ?\<tau> \<Turnstile> \<upsilon> ?y;
         ?\<tau> \<Turnstile> ?s \<doteq> ?t; ?x = ?y |]
      ==> ?\<tau>
           \<Turnstile> ?s->including\<^sub>S\<^sub>e\<^sub>t(?x) \<doteq>
                        ?t->including\<^sub>S\<^sub>e\<^sub>t(?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_app (template_hole 4, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 3))
            ),
        template_equation (template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 4),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)))
           ))),
    ("UML_Set.OclIncluding_cong'",
     "[| ?\<tau> \<Turnstile> \<delta> ?s; ?\<tau> \<Turnstile> \<delta> ?t;
         ?\<tau> \<Turnstile> \<upsilon> ?x;
         ?\<tau> \<Turnstile> ?s \<doteq> ?t |]
      ==> ?\<tau>
           \<Turnstile> ?s->including\<^sub>S\<^sub>e\<^sub>t(?x) \<doteq>
                        ?t->including\<^sub>S\<^sub>e\<^sub>t(?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app (template_hole 2, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("UML_Set.OclForall_cong",
     "[| !!x. [| x : \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
(?X ?\<tau>)\<rceil>\<rceil>;
                 ?\<tau> \<Turnstile> ?P (%\<tau>. x) |]
              ==> ?\<tau> \<Turnstile> ?Q (%\<tau>. x);
         ?\<tau> \<Turnstile> OclForall ?X ?P |]
      ==> ?\<tau> \<Turnstile> OclForall ?X ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("UML_Set.OclIncludes_charn2",
     "[| ?\<tau> \<Turnstile> \<delta> ?X;
         ?\<tau> \<Turnstile> \<upsilon> ?x;
         ?\<tau> \<Turnstile> \<upsilon> ?y;
         ?\<tau> \<Turnstile> not (?x \<triangleq> ?y) |]
      ==> ?\<tau>
           \<Turnstile> ?X->including\<^sub>S\<^sub>e\<^sub>t(?x)->includes\<^sub>S\<^sub>e\<^sub>t(?y) \<triangleq>
                        ?X->includes\<^sub>S\<^sub>e\<^sub>t(?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 5, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 1)),
                   template_var 0)),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)))
           ))),
    ("UML_Set.StrictRefEq\<^sub>S\<^sub>e\<^sub>t_exec",
     "(?x \<doteq> ?y) =
      (if \<delta> ?x then if \<delta> ?y then OclForall ?x
          (OclIncludes ?y) and
         OclForall ?y
          (OclIncludes
            ?x) else if \<upsilon> ?y then false else invalid endif endif else if \<upsilon> ?x then if \<upsilon> ?y then not
          (\<delta> ?y) else invalid endif else invalid endif endif)",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 8,
             template_app (template_hole 7, template_var 1)),
           template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app (template_hole 7, template_var 0)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     t_empty)),
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   t_empty))),
             template_app
              (template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 3, template_var 0)),
                 template_hole 2),
               template_hole 1))),
         template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app (template_hole 3, template_var 1)),
             template_app
              (template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 3, template_var 0)),
                 template_app
                  (template_hole 0,
                   template_app (template_hole 7, template_var 0))),
               template_hole 1)),
           template_hole 1)))),
    ("UML_Set.OclExcluding_charn1",
     "[| ?\<tau> \<Turnstile> \<delta> ?X;
         ?\<tau> \<Turnstile> \<upsilon> ?x;
         ?\<tau> \<Turnstile> \<upsilon> ?y;
         ?\<tau> \<Turnstile> not (?x \<triangleq> ?y) |]
      ==> ?\<tau>
           \<Turnstile> ?X->including\<^sub>S\<^sub>e\<^sub>t(?x)->excluding\<^sub>S\<^sub>e\<^sub>t(?y) \<triangleq>
                        ?X->excluding\<^sub>S\<^sub>e\<^sub>t(?y)->including\<^sub>S\<^sub>e\<^sub>t(?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 5, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 1)),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 0)),
                 template_var 1)))
           ))),
    ("UML_Set.StrictRefEq\<^sub>S\<^sub>e\<^sub>t_L_subst1",
     "[| cp ?P; ?\<tau> \<Turnstile> \<upsilon> ?x;
         ?\<tau> \<Turnstile> \<upsilon> ?y;
         ?\<tau> \<Turnstile> \<upsilon> ?P ?x;
         ?\<tau> \<Turnstile> \<upsilon> ?P ?y;
         ?\<tau> \<Turnstile> ?x \<doteq> ?y |]
      ==> ?\<tau> \<Turnstile> ?P ?x \<doteq> ?P ?y",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_hole 1,
                template_app (template_var 3, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_hole 1,
                template_app (template_var 3, template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_var 3, template_var 1)),
               template_app (template_var 3, template_var 0)))
           ))),
    ("UML_Set.OclExcluding_inv",
     "[| ?x ~= \<bottom>; ?x ~= null; ?y ~= \<bottom> |]
      ==> \<lfloor>\<lfloor>\<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
       ?x\<rceil>\<rceil> -
                            {?y}\<rfloor>\<rfloor>
          : {X. X = \<bottom> |
                X = null |
                (ALL x:\<lceil>\<lceil>X\<rceil>\<rceil>. x ~= \<bottom>)}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 18)),
        template_negation
         (template_equation (template_var 1, template_hole 17)),
        template_negation
         (template_equation (template_var 0, template_hole 15))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_hole 13,
                 template_app
                  (template_hole 12,
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_hole 10,
                         template_app
                          (template_hole 9,
                           template_app
                            (template_hole 8, template_var 1)))),
                     template_app
                      (template_app (template_hole 7, template_var 0),
                       template_hole 6))))),
             template_app (template_hole 5, t_empty))
           ))),
    ("UML_Set.OclForall_cong'",
     "[| !!x. [| x : \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
(?X ?\<tau>)\<rceil>\<rceil>;
                 ?\<tau> \<Turnstile> ?P (%\<tau>. x);
                 ?\<tau> \<Turnstile> ?Q (%\<tau>. x) |]
              ==> ?\<tau> \<Turnstile> ?R (%\<tau>. x);
         ?\<tau> \<Turnstile> OclForall ?X ?P;
         ?\<tau> \<Turnstile> OclForall ?X ?Q |]
      ==> ?\<tau> \<Turnstile> OclForall ?X ?R",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 4),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 4),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0))
           ))),
    ("UML_Set.OclIntersection_inv",
     "[| ?x ~= \<bottom>; ?x ~= null; ?y ~= \<bottom>; ?y ~= null |]
      ==> \<lfloor>\<lfloor>\<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
       ?y\<rceil>\<rceil> Int
                            \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
       ?x\<rceil>\<rceil>\<rfloor>\<rfloor>
          : {X. X = \<bottom> |
                X = null |
                (ALL x:\<lceil>\<lceil>X\<rceil>\<rceil>. x ~= \<bottom>)}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 16)),
        template_negation
         (template_equation (template_var 1, template_hole 15)),
        template_negation
         (template_equation (template_var 0, template_hole 16)),
        template_negation
         (template_equation (template_var 0, template_hole 15))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_hole 13,
                 template_app
                  (template_hole 12,
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_hole 10,
                         template_app
                          (template_hole 9,
                           template_app
                            (template_hole 8, template_var 0)))),
                     template_app
                      (template_hole 10,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_hole 8, template_var 1))))))),
             template_app (template_hole 7, t_empty))
           ))),
    ("UML_Set.OclUnion_inv",
     "[| ?x ~= \<bottom>; ?x ~= null; ?y ~= \<bottom>; ?y ~= null |]
      ==> \<lfloor>\<lfloor>\<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
       ?y\<rceil>\<rceil> Un
                            \<lceil>\<lceil>Rep_Set\<^sub>b\<^sub>a\<^sub>s\<^sub>e
       ?x\<rceil>\<rceil>\<rfloor>\<rfloor>
          : {X. X = \<bottom> |
                X = null |
                (ALL x:\<lceil>\<lceil>X\<rceil>\<rceil>. x ~= \<bottom>)}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 16)),
        template_negation
         (template_equation (template_var 1, template_hole 15)),
        template_negation
         (template_equation (template_var 0, template_hole 16)),
        template_negation
         (template_equation (template_var 0, template_hole 15))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_hole 13,
                 template_app
                  (template_hole 12,
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_hole 10,
                         template_app
                          (template_hole 9,
                           template_app
                            (template_hole 8, template_var 0)))),
                     template_app
                      (template_hole 10,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_hole 8, template_var 1))))))),
             template_app (template_hole 7, t_empty))
           ))),
    ("UML_Set.OclIterate_including",
     "[| ?\<tau> \<Turnstile> \<delta> ?S->size\<^sub>S\<^sub>e\<^sub>t();
         (\<upsilon> ?A) ?\<tau> = (\<upsilon> ?F ?a ?A) ?\<tau>;
         comp_fun_commute ?F;
         !!x y \<tau>. ?F x y \<tau> = ?F (%_. x \<tau>) y \<tau> |]
      ==> OclIterate ?S->including\<^sub>S\<^sub>e\<^sub>t(?a) ?A ?F
           ?\<tau> =
          OclIterate ?S->excluding\<^sub>S\<^sub>e\<^sub>t(?a) (?F ?a ?A) ?F
           ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 4),
              template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 3)))
            ),
        template_equation
         (template_app
           (template_app (template_hole 8, template_var 2), template_var 4),
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_var 1, template_var 0),
                template_var 2)),
            template_var 4)),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 0)),
               template_var 2),
             t_empty),
           template_var 4),
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0)),
               template_app
                (template_app (template_var 1, template_var 0),
                 template_var 2)),
             t_empty),
           template_var 4)))),
    ("UML_Set.OclIncludes_including_generic",
     "[| !!X x y.
            X->including\<^sub>S\<^sub>e\<^sub>t(x)->includes\<^sub>S\<^sub>e\<^sub>t(y) =
            (if \<delta> X then if x \<doteq>
                                   y then true else X->includes\<^sub>S\<^sub>e\<^sub>t(y) endif else invalid endif);
         !!x y. \<delta> (x \<doteq> y) = (\<upsilon> x and \<upsilon> y);
         ?\<tau> \<Turnstile> \<upsilon> ?a;
         ?\<tau> \<Turnstile> \<upsilon> ?x;
         ?\<tau> \<Turnstile> ?S->includes\<^sub>S\<^sub>e\<^sub>t(?x) |]
      ==> ?\<tau>
           \<Turnstile> ?S->including\<^sub>S\<^sub>e\<^sub>t(?a)->includes\<^sub>S\<^sub>e\<^sub>t(?x)",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_app (template_hole 1, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_app
               (template_app (template_hole 10, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 3),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_var 0),
                   template_var 2)),
               template_var 1))
           ))),
    ("UML_Set.OclIncludes_execute_generic",
     "[| (invalid \<doteq> ?y) = invalid; (?x \<doteq> invalid) = invalid;
         !!X Y \<tau>.
            (X \<doteq> Y) \<tau> =
            ((%_. X \<tau>) \<doteq> (%_. Y \<tau>)) \<tau>;
         !!x y \<tau>.
            [| \<tau> \<Turnstile> \<upsilon> x;
               \<tau> \<Turnstile> \<upsilon> y |]
            ==> \<tau>
                 \<Turnstile> x \<doteq> y \<triangleq>
                              (x \<triangleq> y) |]
      ==> ?X->including\<^sub>S\<^sub>e\<^sub>t(?x)->includes\<^sub>S\<^sub>e\<^sub>t(?y) =
          (if \<delta> ?X then if ?x \<doteq>
                                  ?y then true else ?X->includes\<^sub>S\<^sub>e\<^sub>t(?y) endif else invalid endif)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 14, template_hole 13),
            template_var 2),
          template_hole 12),
        template_equation
         (template_app
           (template_app (template_hole 14, template_var 1),
            template_hole 13),
          template_hole 12),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 14, template_var 1),
                     template_var 2)),
                 template_hole 0),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 2))),
           template_hole 12)))),
    ("UML_Set.OclExcluding_charn_exec",
     "[| (invalid \<doteq> ?y) = invalid; (?x \<doteq> invalid) = invalid;
         !!x y \<tau>.
            (\<tau> \<Turnstile> \<delta> (x \<doteq> y)) =
            (\<tau> \<Turnstile> \<upsilon> x &
             \<tau> \<Turnstile> \<upsilon> y);
         !!X Y \<tau>.
            (X \<doteq> Y) \<tau> =
            ((%_. X \<tau>) \<doteq> (%_. Y \<tau>)) \<tau>;
         !!x y \<tau>.
            [| \<tau> \<Turnstile> \<upsilon> x;
               \<tau> \<Turnstile> \<upsilon> y |]
            ==> \<tau>
                 \<Turnstile> x \<doteq> y \<triangleq>
                              (x \<triangleq> y) |]
      ==> ?X->including\<^sub>S\<^sub>e\<^sub>t(?x)->excluding\<^sub>S\<^sub>e\<^sub>t(?y) =
          (if \<delta> ?X then if ?x \<doteq>
                                  ?y then ?X->excluding\<^sub>S\<^sub>e\<^sub>t(?y) else ?X->excluding\<^sub>S\<^sub>e\<^sub>t(?y)->including\<^sub>S\<^sub>e\<^sub>t(?x) endif else invalid endif)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 18, template_hole 17),
            template_var 2),
          template_hole 16),
        template_equation
         (template_app
           (template_app (template_hole 18, template_var 1),
            template_hole 17),
          template_hole 16),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 18, template_var 1),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_var 2)),
                 template_var 1))),
           template_hole 0))))]
