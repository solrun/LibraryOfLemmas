   [("UML_Logic.OclAnd_false1", "(false and ?X) = false",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("UML_Logic.OclAnd_true1", "(true and ?X) = ?X",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("UML_Logic.OclAnd_false2", "(?X and false) = false",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("UML_Logic.OclAnd_true2", "(?X and true) = ?X",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("UML_Logic.OclAnd_idem", "(?X and ?X) = ?X",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("UML_Logic.OclImplies_false1", "(false implies ?X) = true",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("UML_Logic.OclImplies_true1", "(true implies ?X) = ?X",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("UML_Logic.OclImplies_true2", "(?X implies true) = true",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("UML_Logic.OclNot_not", "not (not ?X) = ?X",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("UML_Logic.OclOr_false1", "(false or ?Y) = ?Y",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("UML_Logic.OclOr_true1", "(true or ?Y) = true",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("UML_Logic.OclOr_idem", "(?X or ?X) = ?X",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("UML_Logic.OclOr_false2", "(?Y or false) = ?Y",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("UML_Logic.OclOr_true2", "(?Y or true) = true",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("UML_Logic.StrongEq_refl", "(?X \<triangleq> ?X) = true",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("UML_Logic.defined5", "\<delta> \<delta> ?X = true",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("UML_Logic.defined6", "\<delta> \<upsilon> ?X = true",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("UML_Logic.valid6", "\<upsilon> \<delta> ?X = true",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("UML_Logic.valid5", "\<upsilon> \<upsilon> ?X = true",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("UML_Logic.OclIf_false",
     "(if false then ?B\<^sub>1 else ?B\<^sub>2 endif) = ?B\<^sub>2",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 1),
         template_var 0),
       template_var 0)),
    ("UML_Logic.OclIf_true",
     "(if true then ?B\<^sub>1 else ?B\<^sub>2 endif) = ?B\<^sub>1",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 1),
         template_var 0),
       template_var 1)),
    ("UML_Logic.OclIf_invalid",
     "(if invalid then ?B\<^sub>1 else ?B\<^sub>2 endif) = invalid",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_var 0),
       template_hole 0)),
    ("UML_Logic.OclIf_null",
     "(if null then ?B\<^sub>1 else ?B\<^sub>2 endif) = invalid",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_var 0),
       template_hole 0)),
    ("UML_Logic.defined7", "\<delta> (?X \<triangleq> ?Y) = true",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("UML_Logic.valid7", "\<upsilon> (?X \<triangleq> ?Y) = true",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("UML_Logic.OclIf_idem1", "(if \<delta> ?X then ?A else ?A endif) = ?A",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0),
         template_var 0),
       template_var 0)),
    ("UML_Logic.OclIf_idem2",
     "(if \<upsilon> ?X then ?A else ?A endif) = ?A",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0),
         template_var 0),
       template_var 0)),
    ("UML_Logic.OclAnd_commute", "(?X and ?Y) = (?Y and ?X)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("UML_Logic.OclOr_commute", "(?X or ?Y) = (?Y or ?X)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("UML_Logic.StrongEq_sym",
     "(?X \<triangleq> ?Y) = (?Y \<triangleq> ?X)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("UML_Logic.textbook_false",
     "I\<lbrakk>false\<rbrakk> ?\<tau> =
      \<lfloor>\<lfloor>False\<rfloor>\<rfloor>",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3), template_var 0),
       template_app
        (template_hole 2,
         template_app (template_hole 1, template_hole 0)))),
    ("UML_Logic.textbook_true",
     "I\<lbrakk>true\<rbrakk> ?\<tau> =
      \<lfloor>\<lfloor>True\<rfloor>\<rfloor>",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3), template_var 0),
       template_app
        (template_hole 2,
         template_app (template_hole 1, template_hole 0)))),
    ("UML_Logic.foundation21",
     "(not ?A \<triangleq> not ?B) = (?A \<triangleq> ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("UML_Logic.foundation23",
     "(?\<tau> \<Turnstile> ?P) = (?\<tau> \<Turnstile> %_. ?P ?\<tau>)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("UML_Logic.foundation13",
     "(?\<tau> \<Turnstile> ?A \<triangleq> true) =
      (?\<tau> \<Turnstile> ?A)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("UML_Logic.cp_OclNot", "not ?X ?\<tau> = not (%_. ?X ?\<tau>) ?\<tau>",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("UML_Logic.cp_valid",
     "(\<upsilon> ?X) ?\<tau> = (\<upsilon> (%_. ?X ?\<tau>)) ?\<tau>",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("UML_Logic.deMorgan1", "not (?X and ?Y) = (not ?X or not ?Y)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("UML_Logic.deMorgan2", "not (?X or ?Y) = (not ?X and not ?Y)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("UML_Logic.foundation18'",
     "(?\<tau> \<Turnstile> \<upsilon> ?X) = (?X ?\<tau> ~= \<bottom>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_negation
        (
           template_equation
            (template_app (template_var 0, template_var 1), template_hole 0)
           ))),
    ("UML_Logic.foundation14",
     "(?\<tau> \<Turnstile> ?A \<triangleq> false) =
      (?\<tau> \<Turnstile> not ?A)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("UML_Logic.OclAnd_assoc", "(?X and (?Y and ?Z)) = (?X and ?Y and ?Z)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("UML_Logic.OclOr_assoc", "(?X or (?Y or ?Z)) = (?X or ?Y or ?Z)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("UML_Logic.foundation18",
     "(?\<tau> \<Turnstile> \<upsilon> ?X) =
      (?X ?\<tau> ~= invalid ?\<tau>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_negation
        (
           template_equation
            (template_app (template_var 0, template_var 1),
             template_app (template_hole 0, template_var 1))
           ))),
    ("UML_Logic.foundation18''",
     "(?\<tau> \<Turnstile> \<upsilon> ?X) =
      (?\<tau> |\<noteq> ?X \<triangleq> invalid)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("UML_Logic.foundation7",
     "(?\<tau> \<Turnstile> not (\<delta> ?x)) =
      (?\<tau> |\<noteq> \<delta> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 1, template_var 0))))),
    ("UML_Logic.foundation7'",
     "(?\<tau> \<Turnstile> not (\<upsilon> ?x)) =
      (?\<tau> |\<noteq> \<upsilon> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 1, template_var 0))))),
    ("UML_Logic.foundation22",
     "(?\<tau> \<Turnstile> ?X \<triangleq> ?Y) =
      (?X ?\<tau> = ?Y ?\<tau>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app (template_var 1, template_var 2),
         template_app (template_var 0, template_var 2)))),
    ("UML_Logic.foundation15",
     "(?\<tau> \<Turnstile> ?A \<triangleq> invalid) =
      (?\<tau> \<Turnstile> not (\<upsilon> ?A))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("UML_Logic.OclNot_if",
     "not (if ?P then ?C else ?E endif) =
      (if ?P then not ?C else not ?E endif)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2),
           template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("UML_Logic.defined_bool_split",
     "(?\<tau> \<Turnstile> \<delta> ?A) =
      (?\<tau> \<Turnstile> ?A | ?\<tau> \<Turnstile> not ?A)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("UML_Logic.foundation10'",
     "(?\<tau> \<Turnstile> ?A and ?B) =
      (?\<tau> \<Turnstile> ?A & ?\<tau> \<Turnstile> ?B)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("UML_Logic.foundation24",
     "(?\<tau> \<Turnstile> not (?X \<triangleq> ?Y)) =
      (?X ?\<tau> ~= ?Y ?\<tau>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            )],
       template_negation
        (
           template_equation
            (template_app (template_var 1, template_var 2),
             template_app (template_var 0, template_var 2))
           ))),
    ("UML_Logic.cp_OclAnd",
     "(?X and ?Y) ?\<tau> =
      ((%_. ?X ?\<tau>) and (%_. ?Y ?\<tau>)) ?\<tau>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app (template_app (template_hole 0, t_empty), t_empty),
         template_var 0))),
    ("UML_Logic.cp_OclImplies",
     "(?X implies ?Y) ?\<tau> =
      ((%_. ?X ?\<tau>) implies (%_. ?Y ?\<tau>)) ?\<tau>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app (template_app (template_hole 0, t_empty), t_empty),
         template_var 0))),
    ("UML_Logic.cp_OclOr",
     "(?X or ?Y) ?\<tau> = ((%_. ?X ?\<tau>) or (%_. ?Y ?\<tau>)) ?\<tau>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app (template_app (template_hole 0, t_empty), t_empty),
         template_var 0))),
    ("UML_Logic.cp_StrongEq",
     "(?X \<triangleq> ?Y) ?\<tau> =
      ((%_. ?X ?\<tau>) \<triangleq> (%_. ?Y ?\<tau>)) ?\<tau>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app (template_app (template_hole 0, t_empty), t_empty),
         template_var 0))),
    ("UML_Logic.foundation16",
     "(?\<tau> \<Turnstile> \<delta> ?X) =
      (?X ?\<tau> ~= \<bottom> & ?X ?\<tau> ~= null)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_dunno)),
    ("UML_Logic.cp_OclIf",
     "(if ?C then ?B\<^sub>1 else ?B\<^sub>2 endif) ?\<tau> =
      (if (%_. ?C ?\<tau>) then (%_. ?B\<^sub>1
?\<tau>) else (%_. ?B\<^sub>2 ?\<tau>) endif)
       ?\<tau>",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_app (template_hole 0, t_empty), t_empty),
           t_empty),
         template_var 0))),
    ("UML_Logic.foundation16'",
     "(?\<tau> \<Turnstile> \<delta> ?X) =
      (?X ?\<tau> ~= invalid ?\<tau> & ?X ?\<tau> ~= null ?\<tau>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_dunno)),
    ("UML_Logic.defined_split",
     "(?\<tau> \<Turnstile> \<delta> ?x) =
      (?\<tau> |\<noteq> ?x \<triangleq> invalid &
       ?\<tau> |\<noteq> ?x \<triangleq> null)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1),
         template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 6, template_var 1),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 0)))))),
    ("UML_Logic.valid_bool_split",
     "(?\<tau> \<Turnstile> \<upsilon> ?A) =
      (?\<tau> \<Turnstile> ?A \<triangleq> null |
       ?\<tau> \<Turnstile> ?A | ?\<tau> \<Turnstile> not ?A)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app (template_hole 0, template_var 0)))))),
    ("UML_Logic.textbook_valid",
     "I\<lbrakk>\<upsilon> ?X\<rbrakk> ?\<tau> =
      (if I\<lbrakk>?X\<rbrakk> ?\<tau> =
          I\<lbrakk>\<bottom>\<rbrakk> ?\<tau>
       then I\<lbrakk>false\<rbrakk> ?\<tau>
       else I\<lbrakk>true\<rbrakk> ?\<tau>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)),
              template_var 0)
            )],
       template_dunno)),
    ("UML_Logic.textbook_OclNot",
     "I\<lbrakk>not ?X\<rbrakk> ?\<tau> =
      (case I\<lbrakk>?X\<rbrakk> ?\<tau> of \<bottom> => \<bottom>
       | \<lfloor>\<bottom>\<rfloor> => \<lfloor>\<bottom>\<rfloor>
       | \<lfloor>\<lfloor>x\<rfloor>\<rfloor> =>
           \<lfloor>\<lfloor>~ x\<rfloor>\<rfloor>)",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 6, template_hole 5), t_empty),
         template_app
          (template_app (template_hole 8, template_var 1),
           template_var 0)))),
    ("UML_Logic.textbook_OclAnd",
     "I\<lbrakk>?X and ?Y\<rbrakk> ?\<tau> =
      (case I\<lbrakk>?X\<rbrakk> ?\<tau> of
       \<bottom> =>
         case I\<lbrakk>?Y\<rbrakk> ?\<tau> of \<bottom> => \<bottom>
         | \<lfloor>\<bottom>\<rfloor> => \<bottom>
         | \<lfloor>\<lfloor>True\<rfloor>\<rfloor> => \<bottom>
         | \<lfloor>\<lfloor>False\<rfloor>\<rfloor> =>
             \<lfloor>\<lfloor>False\<rfloor>\<rfloor>
       | \<lfloor>\<bottom>\<rfloor> =>
           case I\<lbrakk>?Y\<rbrakk> ?\<tau> of \<bottom> => \<bottom>
           | \<lfloor>\<bottom>\<rfloor> => \<lfloor>\<bottom>\<rfloor>
           | \<lfloor>\<lfloor>True\<rfloor>\<rfloor> =>
               \<lfloor>\<bottom>\<rfloor>
           | \<lfloor>\<lfloor>False\<rfloor>\<rfloor> =>
               \<lfloor>\<lfloor>False\<rfloor>\<rfloor>
       | \<lfloor>\<lfloor>True\<rfloor>\<rfloor> =>
           case I\<lbrakk>?Y\<rbrakk> ?\<tau> of \<bottom> => \<bottom>
           | \<lfloor>\<bottom>\<rfloor> => \<lfloor>\<bottom>\<rfloor>
           | \<lfloor>\<lfloor>y\<rfloor>\<rfloor> =>
               \<lfloor>\<lfloor>y\<rfloor>\<rfloor>
       | \<lfloor>\<lfloor>False\<rfloor>\<rfloor> =>
           \<lfloor>\<lfloor>False\<rfloor>\<rfloor>)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app (template_hole 7, template_hole 6), t_empty),
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           t_empty),
         template_app
          (template_app (template_hole 9, template_var 2),
           template_var 0))))]
