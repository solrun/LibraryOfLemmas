   [("Lazy_LList.Lazy_llist_inverse",
     "Lazy_LList.force (Lazy_llist ?xs) = ?xs ()",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_var 0, template_hole 0))),
    ("Lazy_LList.force_inverse",
     "Lazy_llist (%_. Lazy_LList.force ?xs) = ?xs",
     template_equation
      (template_app (template_hole 1, t_empty), template_var 0)),
    ("Lazy_LList.Lazy_llist_inject",
     "(Lazy_llist ?xs = Lazy_llist ?ys) = (?xs = ?ys)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Lazy_LList.LCons_Lazy_llist",
     "LCons ?x ?xs = Lazy_llist (%_. Some (?x, ?xs))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Lazy_LList.lhd_Lazy_llist",
     "lhd (Lazy_llist ?xs) = (case ?xs () of Some (x, xs') => x)",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 2), t_empty),
         template_app (template_var 0, template_hole 0)))),
    ("Lazy_LList.lmap_Lazy_llist",
     "lmap ?f (Lazy_llist ?xs) =
      Lazy_llist (%_. map_option (map_prod ?f (lmap ?f)) (?xs ()))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app (template_hole 4, template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Lazy_LList.lfinite_Lazy_llist",
     "lfinite (Lazy_llist ?xs) =
      (case ?xs () of None => True | Some (x, ys) => lfinite ys)",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 2), t_empty),
         template_app (template_var 0, template_hole 0)))),
    ("Lazy_LList.ltl_Lazy_llist",
     "ltl (Lazy_llist ?xs) =
      Lazy_llist
       (%_. case ?xs () of None => None
            | Some (x, ys) => Lazy_LList.force ys)",
     template_equation
      (template_app
        (template_hole 6, template_app (template_hole 5, template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Lazy_LList.case_llist_Lazy_llist",
     "(case Lazy_llist ?xs of LNil => ?n | LCons x xa => ?c x xa) =
      (case ?xs () of None => ?n | Some (x, ys) => ?c x ys)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 2), t_empty),
         template_app (template_var 0, template_hole 0)))),
    ("Lazy_LList.lset_Lazy_llist",
     "gen_lset ?A (Lazy_llist ?xs) =
      (case ?xs () of None => ?A
       | Some (y, ys) => gen_lset (insert y ?A) ys)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 1), t_empty),
         template_app (template_var 0, template_hole 0)))),
    ("Lazy_LList.list_of_aux_Lazy_llist",
     "list_of_aux ?xs (Lazy_llist ?ys) =
      (case ?ys () of None => rev ?xs
       | Some (y, ys) => list_of_aux (y # ?xs) ys)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1),
         template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           t_empty),
         template_app (template_var 0, template_hole 0)))),
    ("Lazy_LList.gen_llength_Lazy_llist",
     "gen_llength ?n (Lazy_llist ?xs) =
      (case ?xs () of None => enat ?n
       | Some (x, ys) => gen_llength (?n + 1) ys)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1),
         template_app (template_hole 6, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 1)),
           t_empty),
         template_app (template_var 0, template_hole 0)))),
    ("Lazy_LList.lconcat_Lazy_llist",
     "lconcat (Lazy_llist ?xss) =
      Lazy_llist
       (%_. case ?xss () of None => None
            | Some (xs, xss') =>
                Lazy_LList.force (lappend xs (lconcat xss')))",
     template_equation
      (template_app
        (template_hole 8, template_app (template_hole 7, template_var 0)),
       template_app (template_hole 6, t_empty))),
    ("Lazy_LList.ldistinct_Lazy_llist",
     "ldistinct (Lazy_llist ?xs) =
      (case ?xs () of None => True
       | Some (x, ys) => x ~: lset ys & ldistinct ys)",
     template_equation
      (template_app
        (template_hole 9, template_app (template_hole 8, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 7, template_hole 6), t_empty),
         template_app (template_var 0, template_hole 0)))),
    ("Lazy_LList.lmember_Lazy_llist",
     "lmember ?x (Lazy_llist ?xs) =
      (case ?xs () of None => False
       | Some (y, ys) => ?x = y | lmember ?x ys)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1),
         template_app (template_hole 6, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 5, template_hole 4), t_empty),
         template_app (template_var 0, template_hole 0)))),
    ("Lazy_LList.unfold_llist_Lazy_llist",
     "unfold_llist ?IS_LNIL ?LHD ?LTL ?b =
      Lazy_llist
       (%_. if ?IS_LNIL ?b then None
            else Some
                  (?LHD ?b, unfold_llist ?IS_LNIL ?LHD ?LTL (?LTL ?b)))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Lazy_LList.lappend_Lazy_llist",
     "lappend (Lazy_llist ?xs) ?ys =
      Lazy_llist
       (%_. case ?xs () of None => Lazy_LList.force ?ys
            | Some (x, xs') => Some (x, lappend xs' ?ys))",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 1)),
         template_var 0),
       template_app (template_hole 6, t_empty))),
    ("Lazy_LList.llast_Lazy_llist",
     "llast (Lazy_llist ?xs) =
      (case ?xs () of
       Some (x, xs') =>
         case Lazy_LList.force xs' of None => x
         | Some (x', xs'') => llast (LCons x' xs''))",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 5, template_hole 4), t_empty),
         template_app (template_var 0, template_hole 0)))),
    ("Lazy_LList.ltakeWhile_Lazy_llist",
     "ltakeWhile ?P (Lazy_llist ?xs) =
      Lazy_llist
       (%_. case ?xs () of None => None
            | Some (x, ys) =>
                if ?P x then Some (x, ltakeWhile ?P ys) else None)",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1),
         template_app (template_hole 7, template_var 0)),
       template_app (template_hole 7, t_empty))),
    ("Lazy_LList.ldropWhile_Lazy_llist",
     "ldropWhile ?P (Lazy_llist ?xs) =
      Lazy_llist
       (%_. case ?xs () of None => None
            | Some (x, ys) =>
                if ?P x then Lazy_LList.force (ldropWhile ?P ys)
                else Some (x, ys))",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1),
         template_app (template_hole 8, template_var 0)),
       template_app (template_hole 8, t_empty))),
    ("Lazy_LList.lzip_Lazy_llist",
     "lzip (Lazy_llist ?xs) (Lazy_llist ?ys) =
      Lazy_llist
       (%_. Option.bind (?xs ())
             (%(x, xs').
                 map_option (%(y, ys'). ((x, y), lzip xs' ys')) (?ys ())))",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app (template_hole 9, template_var 1)),
         template_app (template_hole 8, template_var 0)),
       template_app (template_hole 7, t_empty))),
    ("Lazy_LList.ldropn_Lazy_llist",
     "ldropn ?n (Lazy_llist ?xs) =
      Lazy_llist
       (%_. if ?n = 0 then ?xs ()
            else case ?xs () of None => None
                 | Some (x, ys) => Lazy_LList.force (ldropn (?n - 1) ys))",
     template_equation
      (template_app
        (template_app (template_hole 11, template_var 1),
         template_app (template_hole 10, template_var 0)),
       template_app (template_hole 10, t_empty))),
    ("Lazy_LList.lfilter_Lazy_llist",
     "lfilter ?P (Lazy_llist ?xs) =
      Lazy_llist
       (%_. case ?xs () of None => None
            | Some (x, ys) =>
                if ?P x then Some (x, lfilter ?P ys)
                else Lazy_LList.force (lfilter ?P ys))",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1),
         template_app (template_hole 8, template_var 0)),
       template_app (template_hole 8, t_empty))),
    ("Lazy_LList.ltake_Lazy_llist",
     "ltake ?n (Lazy_llist ?xs) =
      Lazy_llist
       (%_. if ?n = 0 then None
            else case ?xs () of None => None
                 | Some (x, ys) => Some (x, ltake (?n - 1) ys))",
     template_equation
      (template_app
        (template_app (template_hole 12, template_var 1),
         template_app (template_hole 11, template_var 0)),
       template_app (template_hole 11, t_empty))),
    ("Lazy_LList.lprefix_Lazy_llist",
     "lprefix (Lazy_llist ?xs) (Lazy_llist ?ys) =
      (case ?xs () of None => True
       | Some (x, xs') =>
           case ?ys () of None => False
           | Some (y, ys') => x = y & lprefix xs' ys')",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 1)),
         template_app (template_hole 7, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 6, template_hole 5), t_empty),
         template_app (template_var 1, template_hole 0)))),
    ("Lazy_LList.lstrict_prefix_Lazy_llist",
     "lstrict_prefix (Lazy_llist ?xs) (Lazy_llist ?ys) =
      (case ?ys () of None => False
       | Some (y, ys') =>
           case ?xs () of None => True
           | Some (x, xs') => x = y & lstrict_prefix xs' ys')",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 1)),
         template_app (template_hole 7, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 6, template_hole 5), t_empty),
         template_app (template_var 0, template_hole 0)))),
    ("Lazy_LList.corec_llist_Lazy_llist",
     "corec_llist ?IS_LNIL ?LHD ?endORmore ?LTL_end ?LTL_more ?b =
      Lazy_llist
       (%_. if ?IS_LNIL ?b then None
            else Some
                  (?LHD ?b,
                   if ?endORmore ?b then ?LTL_end ?b
                   else corec_llist ?IS_LNIL ?LHD ?endORmore ?LTL_end
                         ?LTL_more (?LTL_more ?b)))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app (template_hole 5, t_empty))),
    ("Lazy_LList.llcp_Lazy_llist",
     "llcp (Lazy_llist ?xs) (Lazy_llist ?ys) =
      (case ?xs () of None => 0
       | Some (x, xs') =>
           case ?ys () of None => 0
           | Some (y, ys') => if x = y then eSuc (llcp xs' ys') else 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 1)),
         template_app (template_hole 7, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 6, template_hole 5), t_empty),
         template_app (template_var 1, template_hole 0)))),
    ("Lazy_LList.llist_all2_Lazy_llist",
     "llist_all2 ?P (Lazy_llist ?xs) (Lazy_llist ?ys) =
      (case ?xs () of None => ?ys () = None
       | Some (x, xs') =>
           case ?ys () of None => False
           | Some (y, ys') => ?P x y & llist_all2 ?P xs' ys')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 2),
                template_app (template_hole 10, template_var 1)),
              template_app (template_hole 9, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_var 0, template_hole 6)),
                   template_hole 5)),
               t_empty),
             template_app (template_var 1, template_hole 6))
           ))),
    ("Lazy_LList.equal_llist_Lazy_llist",
     "equal_class.equal (Lazy_llist ?xs) (Lazy_llist ?ys) =
      (case ?xs () of None => case ?ys () of None => True | Some a => False
       | Some (x, xs') =>
           case ?ys () of None => False
           | Some (y, ys') =>
               if x = y then equal_class.equal xs' ys' else False)",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 1)),
         template_app (template_hole 7, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 6, template_hole 5), t_empty),
               template_app (template_var 0, template_hole 3))),
           t_empty),
         template_app (template_var 1, template_hole 3)))),
    ("Lazy_LList.llexord_Lazy_llist",
     "llexord ?r (Lazy_llist ?xs) (Lazy_llist ?ys) =
      (case ?xs () of None => True
       | Some (x, xs') =>
           case ?ys () of None => False
           | Some (y, ys') => ?r x y | x = y & llexord ?r xs' ys')",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 9, template_var 2),
           template_app (template_hole 8, template_var 1)),
         template_app (template_hole 8, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 7, template_hole 6), t_empty),
         template_app (template_var 1, template_hole 0))))]
