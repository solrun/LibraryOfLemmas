   [("LList_CCPO_Topology.ldropWhile'_LNil", "ldropWhile' ?P LNil = LNil",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("LList_CCPO_Topology.lfilter'_LNil", "lfilter' ?P LNil = LNil",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("LList_CCPO_Topology.lup'_simps", "lup' ?a LNil = LNil",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("LList_CCPO_Topology.lup_LNil", "lup ?a LNil = LNil",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("LList_CCPO_Topology.length_f", "length (f ?xs) = length ?xs",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("LList_CCPO_Topology.open_singleton_iff_lfinite",
     "open {?x} = lfinite ?x",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("LList_CCPO_Topology.lfilter'_eq_lfilter",
     "lfilter' ?P ?xs = lfilter ?P ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("LList_CCPO_Topology.lconcat'_LCons",
     "lconcat' (LCons ?l ?xs) = lappend ?l (lconcat' ?xs)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("LList_CCPO_Topology.at_eq_lfinite",
     "at ?l = (if lfinite ?l then \<bottom> else at' ?l)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 0), template_hole 4),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("LList_CCPO_Topology.lmap_iterate",
     "lmap ?f (iterate ?f ?x) = iterate ?f (?f ?x)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_var 1, template_var 0)))),
    ("LList_CCPO_Topology.lmap_lconcat",
     "lmap ?f (lconcat' ?xss) = lconcat' (lmap (lmap ?f) ?xss)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 1)),
           template_var 0)))),
    ("LList_CCPO_Topology.lhd_lfilter'",
     "lhd (lfilter' ?P ?xs) = lhd (ldropWhile' (Not o ?P) ?xs)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)))),
    ("LList_CCPO_Topology.lnull_ldropWhile'",
     "lnull (ldropWhile' ?P ?xs) = (ALL x:lset ?xs. ?P x)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("LList_CCPO_Topology.lset_lfilter'",
     "lset (lfilter' ?P ?xs) = lset ?xs Int {x. ?P x}",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_app (template_hole 0, t_empty)))),
    ("LList_CCPO_Topology.lfilter'_eq_LNil_iff",
     "(lfilter' ?P ?xs = LNil) = (ALL x:lset ?xs. ~ ?P x)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         t_empty))),
    ("LList_CCPO_Topology.lfilter'_lmap",
     "lfilter' ?P (lmap ?f ?xs) = lmap ?f (lfilter' (?P o ?f) ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("LList_CCPO_Topology.lfilter'_lfilter'",
     "lfilter' ?P (lfilter' ?Q ?xs) = lfilter' (%x. ?Q x & ?P x) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, t_empty), template_var 0))),
    ("LList_CCPO_Topology.ldropWhile'_LCons",
     "ldropWhile' ?P (LCons ?l ?xs) =
      (if ?P ?l then ldropWhile' ?P ?xs else LCons ?l ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_var 2, template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("LList_CCPO_Topology.lfilter'_LCons",
     "lfilter' ?P (LCons ?a ?xs) =
      (if ?P ?a then LCons ?a (lfilter' ?P ?xs) else lfilter' ?P ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_var 2, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("LList_CCPO_Topology.lup'_simps",
     "lup' ?a (LCons ?xa ?x) =
      (if ?a < ?xa then LCons ?xa (lup' ?xa ?x) else lup' ?a ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("LList_CCPO_Topology.lup_LCons",
     "lup ?a (LCons ?x ?xs) =
      (if ?a < ?x then LCons ?x (lup ?x ?xs) else lup ?a ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("LList_CCPO_Topology.eventually_nhds_llist",
     "eventually ?P (nhds ?l) =
      (EX xs<=?l. lfinite xs & (ALL ys>=xs. ys <= ?l --> ?P ys))",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1),
         template_app (template_hole 6, template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("LList_CCPO_Topology.eventually_at'_llist",
     "eventually ?P (at' ?l) =
      (EX xs<=?l.
          lfinite xs & (ALL ys>=xs. lfinite ys --> ys <= ?l --> ?P ys))",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1),
         template_app (template_hole 6, template_var 0)),
       template_app (template_hole 5, t_empty)))]
