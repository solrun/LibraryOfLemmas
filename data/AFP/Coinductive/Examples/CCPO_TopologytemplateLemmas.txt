   [("CCPO_Topology.at'_bot", "at' ?x ~= \<bottom>",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("CCPO_Topology.tendsto_id_at'",
     "((%x. x) \<longlongrightarrow> ?x) (at' ?x)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, t_empty),
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))
         )),
    ("CCPO_Topology.principal_bot",
     "(principal ?x = \<bottom>) = (?x = {})",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("CCPO_Topology.continuous_add_ereal",
     "0 <= ?t ==> continuous_on {- \<infinity><..} ((+) ?t)",
     template_implication
      ([template_inequation (less_equals, template_hole 5, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             t_empty)
           ))),
    ("CCPO_Topology.tendsto_LimI",
     "(?f \<longlongrightarrow> ?y) ?F ==>
      (?f \<longlongrightarrow> Lim ?F ?f) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2))),
             template_var 0)
           ))),
    ("CCPO_Topology.cont_at'",
     "(?f \<longlongrightarrow> ?f ?x) (at' ?x) =
      ?f \<midarrow>?x\<rightarrow> ?f ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_hole 3,
             template_app (template_var 1, template_var 0))),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_hole 3,
             template_app (template_var 1, template_var 0))),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("CCPO_Topology.isCont_inf2",
     "isCont ?f ?a ==> isCont (%x. ?f x \<sqinter> ?y1) ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_hole 1)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_hole 1)),
             t_empty)
           ))),
    ("CCPO_Topology.tendsto_mcont",
     "mcont Sup (<=) Sup (<=) ?f ==> ?f \<midarrow>?l\<rightarrow> ?f ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 8, template_hole 7),
                    template_hole 6),
                  template_hole 5),
                template_hole 4),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_hole 2,
                 template_app (template_var 1, template_var 0))),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("CCPO_Topology.dropWhile_False",
     "(!!x. x : set ?xs ==> ?P x) ==> dropWhile ?P ?xs = []",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("CCPO_Topology.tendsto_sup1",
     "(?f \<longlongrightarrow> ?l) ?F ==>
      ((%x. ?x \<squnion> ?f x) \<longlongrightarrow> ?x \<squnion> ?l) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2))),
             template_var 1)
           ))),
    ("CCPO_Topology.tendsto_inf2",
     "(?f \<longlongrightarrow> ?l) ?F ==>
      ((%x. ?f x \<sqinter> ?y) \<longlongrightarrow> ?l \<sqinter> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0))),
             template_var 1)
           ))),
    ("CCPO_Topology.tendsto_open_vimage",
     "(!!B. open B ==> open (?f -` B)) ==>
      ?f \<midarrow>?l\<rightarrow> ?f ?l",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_hole 2,
                 template_app (template_var 1, template_var 0))),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("CCPO_Topology.open_vimageI",
     "[| !!x. ?f \<midarrow>x\<rightarrow> ?f x; open ?A |]
      ==> open (?f -` ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("CCPO_Topology.dropWhile_append",
     "dropWhile ?P (?xs @ ?ys) =
      (if ALL x:set ?xs. ?P x then dropWhile ?P ?ys
       else dropWhile ?P ?xs @ ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               t_empty)),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("CCPO_Topology.isCont_If",
     "[| isCont ?f ?x; isCont ?g ?x |]
      ==> isCont (%x. if ?Q then ?f x else ?g x) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_hole 1)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_hole 1)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_hole 1)),
             t_empty)
           ))),
    ("CCPO_Topology.tendsto_add_ereal",
     "[| 0 <= ?x; 0 <= ?y; (?f \<longlongrightarrow> ?y) ?F |]
      ==> ((%z. ?x + ?f z) \<longlongrightarrow> ?x + ?y) ?F",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 3),
        template_inequation (less_equals, template_hole 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_app (template_hole 1, template_var 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2))),
             template_var 0)
           ))),
    ("CCPO_Topology.isCont_enat_case",
     "[| isCont (?f (epred ?n)) ?x; isCont ?g ?x |]
      ==> isCont (%x. case ?n of 0 => ?g x | eSuc n => ?f n x) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_hole 2)),
              template_app
               (template_var 2,
                template_app (template_hole 1, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_hole 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_hole 2)),
             t_empty)
           ))),
    ("CCPO_Topology.tendsto_le_ccpo",
     "[| ?F ~= \<bottom>; (?f \<longlongrightarrow> ?x) ?F;
         (?g \<longlongrightarrow> ?y) ?F;
         \<forall>\<^sub>F x in ?F. ?g x <= ?f x |]
      ==> ?y <= ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app (template_hole 2, template_var 2)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_app (template_hole 2, template_var 0)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, t_empty), template_var 4)
            )],
       template_inequation (less_equals, template_var 0, template_var 2))),
    ("CCPO_Topology.tendsto_unique_eventually",
     "[| ?F ~= \<bottom>; \<forall>\<^sub>F x in ?F. ?f x = ?g x;
         (?f \<longlongrightarrow> ?x) ?F;
         (?g \<longlongrightarrow> ?x') ?F |]
      ==> ?x = ?x'",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, t_empty), template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_app (template_hole 0, template_var 1)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_app (template_hole 0, template_var 0)),
              template_var 4)
            )],
       template_equation (template_var 1, template_var 0))),
    ("CCPO_Topology.tendsto_ccpoI",
     "(!!C. [| chain C; C ~= {} |]
            ==> chain (?f ` C) &
                ?f (\<Squnion> C) = \<Squnion> (?f ` C)) ==>
      ?f \<midarrow>?x\<rightarrow> ?f ?x",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_hole 2,
                 template_app (template_var 1, template_var 0))),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           )))]
