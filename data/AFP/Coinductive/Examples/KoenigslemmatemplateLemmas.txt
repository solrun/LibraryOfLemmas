   [("Koenigslemma.pathsp_paths_eq",
     "pathsp ?graph = (%x. x : paths ?graph)",
     template_equation
      (template_app (template_hole 2, template_var 0), t_empty)),
    ("Koenigslemma.reachable_viap_reachable_via_eq",
     "reachable_viap ?graph ?ns ?n = (%x. x : reachable_via ?graph ?ns ?n)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       t_empty)),
    ("Koenigslemma.paths_lappendD1",
     "lappend ?xs ?ys : paths ?graph ==> ?xs : paths ?graph",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Koenigslemma.paths_LConsD",
     "LCons ?x ?xs : paths ?graph ==> ?xs : paths ?graph",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Koenigslemma.paths_lappendD2",
     "[| lfinite ?xs; lappend ?xs ?ys : paths ?graph |]
      ==> ?ys : paths ?graph",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Koenigslemma.connectedD",
     "Koenigslemma.connected ?graph ==>
      EX xs. llist_of (?n # xs @ [?n']) : paths ?graph",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 2))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Koenigslemma.reachable_via_subset_unfold",
     "reachable_via ?graph ?ns ?n
      <= (UN n':{n'. ?graph ?n n'} Int ?ns.
             insert n' (reachable_via ?graph (?ns - {n'}) n'))",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_app (template_hole 7, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, t_empty),
           template_app
            (template_app
              (template_hole 1, template_app (template_hole 0, t_empty)),
             template_var 1))))),
    ("Koenigslemma.koenigslemma",
     "[| Koenigslemma.connected ?graph; infinite UNIV;
         !!n. finite {n'. ?graph n n'} |]
      ==> EX xs:paths ?graph. ?n : lset xs & ~ lfinite xs & ldistinct xs",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 10, template_hole 9))
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 1)),
             t_empty)
           ))),
    ("Koenigslemma.path_avoid_node",
     "[| LCons ?n ?xs : paths ?graph; ?x : lset ?xs; ?n ~= ?x |]
      ==> EX xs'.
             LCons ?n xs' : paths ?graph &
             lset xs' <= lset ?xs & ?x : lset xs' & ?n ~: lset xs'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 2)),
              template_app (template_hole 7, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 2))
            ),
        template_negation
         (template_equation (template_var 3, template_var 0))],
       template_predicate (template_app (template_hole 2, t_empty))))]
