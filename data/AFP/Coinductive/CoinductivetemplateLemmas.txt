   [("Coinductive_List.lfinite_llist_of", "lfinite (llist_of ?xs)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Coinductive_List.lprefix_refl", "lprefix ?xs ?xs",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Coinductive_Nat.inj_enat", "inj_on enat ?A",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Coinductive_List.llexord_refl", "llexord ?r ?xs ?xs",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 0)
         )),
    ("Quotient_Coinductive_List.LNil_respect", "llist_all2 ?P LNil LNil",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.llist_all2_LNil_LNil", "llist_all2 ?R LNil LNil",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.lfinite_inf_llist", "~ lfinite (inf_llist ?f)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("Coinductive_Stream.lfinite_llist_of_stream",
     "~ lfinite (llist_of_stream ?xs)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("Coinductive_List.lnull_inf_llist", "~ lnull (inf_llist ?f)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("Coinductive_Stream.lnull_llist_of_stream",
     "~ lnull (llist_of_stream ?xs)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("Quotient_Coinductive_List.id_respect", "(?R ===> ?R) id id",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 0),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.lprefix_lappend", "lprefix ?xs (lappend ?xs ?ys)",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Coinductive_List.ltake_is_lprefix", "lprefix (ltake ?n ?xs) ?xs",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 0)
         )),
    ("Coinductive_List.lprefix_ltakeWhile",
     "lprefix (ltakeWhile ?P ?xs) ?xs",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 0)
         )),
    ("Coinductive_List.monotone_lappend2",
     "monotone lprefix lprefix (lappend ?xs)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Coinductive_List.monotone_ldrop2",
     "monotone lprefix lprefix (ldrop ?n)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Coinductive_List.monotone_ldropWhile",
     "monotone lprefix lprefix (ldropWhile ?P)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Coinductive_List.monotone_lfilter",
     "monotone lprefix lprefix (lfilter ?P)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Coinductive_List.monotone_LCons",
     "monotone lprefix lprefix (LCons ?x)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Coinductive_List.monotone_ltake2",
     "monotone lprefix lprefix (ltake ?n)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Coinductive_List.monotone_ltakeWhile",
     "monotone lprefix lprefix (ltakeWhile ?P)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Coinductive_List.monotone_lmap", "monotone lprefix lprefix (lmap ?f)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Coinductive_List.lfinite_iterates", "~ lfinite (iterates ?f ?x)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))
             )
         )),
    ("Coinductive_List.lnull_iterates", "~ lnull (iterates ?f ?x)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))
             )
         )),
    ("Coinductive_Stream.sset_neq_empty", "sset ?xs ~= {}",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Coinductive_List.LNil_neq_inf_llist", "LNil ~= inf_llist ?f",
     template_negation
      (
         template_equation
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Coinductive_List.inf_llist_neq_LNil", "inf_llist ?f ~= LNil",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Coinductive_Stream.snth_of_seq", "(!!) (of_seq ?f) = ?f",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Coinductive_List.gen_lset_code", "gen_lset ?A LNil = ?A",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Coinductive_List.lmember_code", "lmember ?x LNil = False",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Coinductive_List.lprefix_code", "lprefix LNil ?ys = True",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Coinductive_List.list_of_llist_of", "list_of (llist_of ?xs) = ?xs",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Coinductive_Stream.of_seq_snth", "of_seq ((!!) ?xs) = ?xs",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Coinductive_Stream.stream_of_llist_llist_of_stream",
     "stream_of_llist (llist_of_stream ?xs) = ?xs",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Coinductive_List.llcp_LNil1", "llcp LNil ?ys = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Coinductive_List.llcp_LNil2", "llcp ?xs LNil = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Coinductive_List.llength_inf_llist",
     "llength (inf_llist ?f) = \<infinity>",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Coinductive_Nat.epred_eSuc", "epred (eSuc ?n) = ?n",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Coinductive_List.lappend_code", "lappend LNil ?ys = ?ys",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Coinductive_List.lappend_LNil2", "lappend ?xs LNil = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Coinductive_List.ldrop_inf", "ldrop \<infinity> ?xs = LNil",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Coinductive_List.ldrop_LNil", "ldrop ?n LNil = LNil",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Coinductive_List.ldropWhile_LNil", "ldropWhile ?P LNil = LNil",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Coinductive_List.ldropn_0", "ldropn 0 ?xs = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Coinductive_List.ldropn_LNil", "ldropn ?n LNil = LNil",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Coinductive_List.lfilter_LNil", "lfilter ?P LNil = LNil",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Quotient_Coinductive_List.LNil_preserve", "lmap ?Abs LNil = LNil",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Coinductive_List.lnths_LNil", "lnths LNil ?A = LNil",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Coinductive_List.lnths_empty", "lnths ?xs {} = LNil",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Coinductive_List.ltake_0", "ltake 0 ?xs = LNil",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Coinductive_List.ltake_LNil", "ltake ?n LNil = LNil",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Coinductive_List.ltakeWhile_LNil", "ltakeWhile ?P LNil = LNil",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Coinductive_List_Prefix.llist_inf_simps",
     "LNil \<sqinter> ?xs = LNil",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Coinductive_List_Prefix.llist_inf_simps",
     "?xs \<sqinter> LNil = LNil",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Coinductive_List.ldrop_0", "ldrop 0 ?xs = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Coinductive_List.lzip_simps", "lzip LNil ?ys = LNil",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Coinductive_List.lzip_simps", "lzip ?xs LNil = LNil",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Coinductive_Nat.enat_le_plus_same", "?x <= ?x + ?y",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Coinductive_Nat.enat_le_plus_same", "?x <= ?y + ?x",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Coinductive_Stream.shd_transfer",
     "(stream_from_llist_setup.pcr_stream ?A ===> ?A) lhd shd",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0)),
               template_var 0),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.lfinite_transfer",
     "(llist_all2 ?A ===> (=)) lfinite lfinite",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_hole 2),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.llength_transfer",
     "(llist_all2 ?A ===> (=)) llength llength",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_hole 2),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.llexord_append_right",
     "llexord ?r ?xs (lappend ?xs ?ys)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Coinductive_List.inf_llist_neq_llist_of",
     "inf_llist ?f ~= llist_of ?xs",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Coinductive_List.inf_llist_neq_llist_of",
     "llist_of ?xs ~= inf_llist ?f",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Coinductive_List.llast_llist_of", "llast (llist_of ?xs) = last ?xs",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Coinductive_List.lhd_inf_llist", "lhd (inf_llist ?f) = ?f 0",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_var 0, template_hole 0))),
    ("Coinductive_List.lhd_llist_of", "lhd (llist_of ?xs) = hd ?xs",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Coinductive_Stream.lhd_llist_of_stream",
     "lhd (llist_of_stream ?xs) = shd ?xs",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Coinductive_List.lnth_LNil", "lnth LNil ?n = undefined ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Coinductive_Stream.shd_of_seq", "shd (of_seq ?f) = ?f 0",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_var 0, template_hole 0))),
    ("Coinductive_Stream.shd_stream_of_llist",
     "shd (stream_of_llist ?xs) = lhd ?xs",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Coinductive_List.llast_singleton", "llast (LCons ?x LNil) = ?x",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_var 0)),
    ("Coinductive_List.lhd_iterates", "lhd (iterates ?f ?x) = ?x",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Coinductive_List.lhd_LCons", "lhd (LCons ?x21.0 ?x22.0) = ?x21.0",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Coinductive_Nat.enat_cocase_0",
     "(case 0 of 0 => ?z | eSuc x => ?s x) = ?z",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_var 1)),
    ("Coinductive_List.lnth_llist_of", "lnth (llist_of ?xs) = (!) ?xs",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Coinductive_Stream.lnth_list_of_stream",
     "lnth (llist_of_stream ?xs) = (!!) ?xs",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Coinductive_List.lset_llist_of", "lset (llist_of ?xs) = set ?xs",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Coinductive_Stream.lset_llist_of_stream",
     "lset (llist_of_stream ?xs) = sset ?xs",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Coinductive_List.ldistinct_llist_of",
     "ldistinct (llist_of ?xs) = distinct ?xs",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Coinductive_List.lfinite_ltl", "lfinite (ltl ?xs) = lfinite ?xs",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Coinductive_List.lprefix_LNil", "lprefix ?xs LNil = lnull ?xs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Coinductive_List.llexord_code", "llexord ?r LNil ?ys = True",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_hole 1),
         template_var 0),
       template_hole 0)),
    ("Coinductive_List.list_of_aux_code", "list_of_aux ?xs LNil = rev ?xs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Coinductive_Stream.unfold_stream_id",
     "unfold_stream shd stl ?xs = ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_var 0)),
    ("Coinductive_Nat.epred_conv_minus", "epred ?n = ?n - 1",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Coinductive_Nat.numeral_eq_eSuc",
     "numeral ?k = eSuc (epred_numeral ?k)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.gen_llength_code", "gen_llength ?n LNil = enat ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Coinductive_List.llcp_same_conv_length", "llcp ?xs ?xs = llength ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Coinductive_Nat.epred_numeral",
     "epred (numeral ?i) = epred_numeral ?i",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Coinductive_List.llength_iterates",
     "llength (iterates ?f ?x) = \<infinity>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Coinductive_List.lSup_singleton", "lSup {?xs} = ?xs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_var 0)),
    ("Coinductive_List.ldropWhile_K_True",
     "ldropWhile (%_. True) ?xs = LNil",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_var 0),
       template_hole 0)),
    ("Coinductive_List.lfitler_K_False", "lfilter (%_. False) ?xs = LNil",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_var 0),
       template_hole 0)),
    ("Coinductive_List.lfilter_K_True", "lfilter (%_. True) ?xs = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_var 0)),
    ("Coinductive_List.ltl_simps", "ltl (LCons ?x21.0 ?x22.0) = ?x22.0",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Coinductive_List.ltakeWhile_K_False",
     "ltakeWhile (%_. False) ?xs = LNil",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_var 0),
       template_hole 0)),
    ("Coinductive_List.ltakeWhile_K_True",
     "ltakeWhile (%_. True) ?xs = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_var 0)),
    ("Coinductive_Stream.stakeWhile_K_False",
     "stakeWhile (%_. False) ?xs = LNil",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_var 0),
       template_hole 0)),
    ("Coinductive_List.lset_ltl", "lset (ltl ?xs) <= lset ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Coinductive_Stream.sset_stl", "sset (stl ?xs) <= sset ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Coinductive_List.lset_intros", "?x : lset (LCons ?x ?xs)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("Coinductive_List.lnull_imp_lfinite", "lnull ?xs ==> lfinite ?xs",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.llist_of_transfer",
     "(list_all2 ?A ===> llist_all2 ?A) llist_of llist_of",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app (template_hole 2, template_var 0)),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_Stream.sset_transfer",
     "(stream_from_llist_setup.pcr_stream ?A ===> rel_set ?A) lset sset",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app (template_hole 2, template_var 0)),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_Stream.stl_transfer",
     "(stream_from_llist_setup.pcr_stream ?A ===>
       stream_from_llist_setup.pcr_stream ?A)
       ltl stl",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0)),
               template_app (template_hole 2, template_var 0)),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.lset_transfer",
     "(llist_all2 ?A ===> rel_set ?A) lset lset",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app (template_hole 2, template_var 0)),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.ltl_transfer",
     "(llist_all2 ?A ===> llist_all2 ?A) ltl ltl",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0)),
               template_app (template_hole 2, template_var 0)),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.lprefixes_chain",
     "Complete_Partial_Order.chain lprefix {ys. lprefix ys ?xs}",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, t_empty))
         )),
    ("Coinductive_Nat.monotone_enat_minus1",
     "monotone (<=) (<=) (%n. n - ?m)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 1),
           t_empty)
         )),
    ("Coinductive_Nat.monotone_eadd1", "monotone (<=) (<=) (%x. x + ?y)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 1),
           t_empty)
         )),
    ("Coinductive_Nat.monotone_eadd2", "monotone (<=) (<=) ((+) ?x)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 1),
           t_empty)
         )),
    ("Coinductive_Nat.monotone_max_enat1",
     "monotone (<=) (<=) (%x. max x ?y)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 1),
           t_empty)
         )),
    ("Coinductive_Nat.monotone_max_enat2", "monotone (<=) (<=) (max ?x)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 1),
           t_empty)
         )),
    ("Coinductive_List.monotone_ltake1",
     "monotone (<=) lprefix (%n. ltake n ?xs)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           t_empty)
         )),
    ("Coinductive_List.monotone_ldropn'",
     "monotone lprefix lprefix (ldropn ?n)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 1),
           t_empty)
         )),
    ("Coinductive_List.monotone_lzip1",
     "monotone lprefix lprefix (%xs. lzip xs ?ys)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           t_empty)
         )),
    ("Coinductive_List.monotone_lzip2",
     "monotone lprefix lprefix (lzip ?xs)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           t_empty)
         )),
    ("Coinductive_List.mcont_lappend2",
     "mcont lSup lprefix lSup lprefix (lappend ?xs)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_hole 2),
             template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Coinductive_List.mcont_ldrop2",
     "mcont lSup lprefix lSup lprefix (ldrop ?n)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_hole 2),
             template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Coinductive_List.mcont_ldropWhile",
     "mcont lSup lprefix lSup lprefix (ldropWhile ?P)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_hole 2),
             template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Coinductive_List.mcont_ldropn",
     "mcont lSup lprefix lSup lprefix (ldropn ?n)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_hole 2),
             template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Coinductive_List.mcont_lfilter",
     "mcont lSup lprefix lSup lprefix (lfilter ?P)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_hole 2),
             template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Coinductive_List.mcont_LCons",
     "mcont lSup lprefix lSup lprefix (LCons ?x)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_hole 2),
             template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Coinductive_List.mcont_ltake2",
     "mcont lSup lprefix lSup lprefix (ltake ?n)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_hole 2),
             template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Coinductive_List.mcont_ltakeWhile",
     "mcont lSup lprefix lSup lprefix (ltakeWhile ?P)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_hole 2),
             template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Coinductive_List.mcont_lmap",
     "mcont lSup lprefix lSup lprefix (lmap ?f)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_hole 3),
               template_hole 2),
             template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Coinductive_List.llist_all2_inf_llist_llist_of",
     "~ llist_all2 ?P (inf_llist ?f) (llist_of ?xs)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_app (template_hole 1, template_var 1)),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("Coinductive_List.llist_all2_llist_of_inf_llist",
     "~ llist_all2 ?P (llist_of ?xs) (inf_llist ?f)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_app (template_hole 1, template_var 1)),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("Coinductive_List.llist_all2_LNil_LCons",
     "~ llist_all2 ?R LNil (LCons ?y21.0 ?y22.0)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))
             )
         )),
    ("Coinductive_List.llist_all2_LCons_LNil",
     "~ llist_all2 ?R (LCons ?y21.0 ?y22.0) LNil",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_hole 0)
             )
         )),
    ("Coinductive_List.lnth_inf_llist", "lnth (inf_llist ?f) ?n = ?f ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app (template_var 1, template_var 0))),
    ("Coinductive_Nat.case_enat_0",
     "(case 0 of enat x => ?f x | \<infinity> => ?i) = ?f 0",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_app (template_var 1, template_hole 0))),
    ("Coinductive_List.lnth_0", "lnth (LCons ?x ?xs) 0 = ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0),
       template_var 1)),
    ("Coinductive_Stream.snth_SCons_0", "(?x ## ?xs) !! 0 = ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0),
       template_var 1)),
    ("Coinductive_List.lset_inf_llist", "lset (inf_llist ?f) = range ?f",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Coinductive_Stream.sset_of_seq", "sset (of_seq ?f) = range ?f",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Coinductive_List.lnull_llist_of", "lnull (llist_of ?xs) = (?xs = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0))
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Coinductive_List.lsorted_llist_of",
     "lsorted (llist_of ?xs) = sorted ?xs",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Coinductive_List.lfinite_ldropn",
     "lfinite (ldropn ?n ?xs) = lfinite ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Coinductive_List.lfinite_LCons",
     "lfinite (LCons ?x ?xs) = lfinite ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Coinductive_List.lfinite_lmap", "lfinite (lmap ?f ?xs) = lfinite ?xs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Coinductive_List.lfinite_code",
     "lfinite (LCons ?x ?xs) = lfinite ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Coinductive_List.lset_eq_empty", "(lset ?xs = {}) = lnull ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Coinductive_List.llength_eq_0", "(llength ?xs = 0) = lnull ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Coinductive_List.lprefix_code", "lprefix (LCons ?x ?xs) LNil = False",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Coinductive_List.lstrict_prefix_code",
     "lstrict_prefix LNil (LCons ?y ?ys) = True",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Coinductive_List.lstrict_prefix_code",
     "lstrict_prefix (LCons ?x ?xs) LNil = False",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Coinductive_List.lhd'_simps", "lhd' (LCons ?x ?xs) = Some ?x",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("Coinductive_List.ltl'_simps", "ltl' (LCons ?x ?xs) = Some ?xs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Coinductive_Stream.sconst_conv_of_seq", "sconst ?a = of_seq (%_. ?a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, t_empty))),
    ("Coinductive_Stream.stl_stream_of_llist",
     "stl (stream_of_llist ?xs) = stream_of_llist (ltl ?xs)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Coinductive_Stream.smap_fst_szip", "smap fst (szip ?xs ?ys) = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Coinductive_Stream.smap_snd_szip", "smap snd (szip ?xs ?ys) = ?ys",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Coinductive_List.llcp_commute", "llcp ?xs ?ys = llcp ?ys ?xs",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Coinductive_List.llength_ltl",
     "llength (ltl ?xs) = epred (llength ?xs)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Coinductive_List.llength_llist_of",
     "llength (llist_of ?xs) = enat (length ?xs)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.epred_llength",
     "epred (llength ?xs) = llength (ltl ?xs)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Coinductive_Nat.epred_numeral_simps",
     "epred_numeral (num.Bit0 ?k) = numeral (Num.BitM ?k)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Coinductive_Nat.epred_numeral_simps",
     "epred_numeral (num.Bit1 ?k) = numeral (num.Bit0 ?k)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.llength_lmap", "llength (lmap ?f ?xs) = llength ?xs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Coinductive_List.ltl_llist_of",
     "ltl (llist_of ?xs) = llist_of (tl ?xs)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Coinductive_Stream.ltl_llist_of_stream",
     "ltl (llist_of_stream ?xs) = llist_of_stream (stl ?xs)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.lSup_insert_LNil", "lSup (insert LNil ?Y) = lSup ?Y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("Coinductive_List.lappend_inf_llist",
     "lappend (inf_llist ?f) ?xs = inf_llist ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("Coinductive_Stream.stakeWhile_K_True",
     "stakeWhile (%_. True) ?xs = llist_of_stream ?xs",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Coinductive_List.unfold_llist_id",
     "unfold_llist lnull lhd ltl ?xs = ?xs",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_hole 0),
         template_var 0),
       template_var 0)),
    ("Coinductive_List.lset_lappend1", "lset ?xs <= lset (lappend ?xs ?ys)",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_List.lset_ldrop_subset",
     "lset (ldrop ?n ?xs) <= lset ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Coinductive_List.lset_ldropWhile_subset",
     "lset (ldropWhile ?P ?xs) <= lset ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Coinductive_List.lset_ldropn_subset",
     "lset (ldropn ?n ?xs) <= lset ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Coinductive_List.lset_lnths_subset",
     "lset (lnths ?xs ?I) <= lset ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Coinductive_List.lset_ltake", "lset (ltake ?n ?xs) <= lset ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Coinductive_List.llength_lfilter_ile",
     "llength (lfilter ?P ?xs) <= llength ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Coinductive_List.llength_lnths_ile",
     "llength (lnths ?xs ?A) <= llength ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Coinductive_List.llength_ltakeWhile_le",
     "llength (ltakeWhile ?P ?xs) <= llength ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Coinductive_List.ldistinct_ltlI",
     "ldistinct ?xs ==> ldistinct (ltl ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Coinductive_List.lfinite_imp_finite_lset",
     "lfinite ?xs ==> finite (lset ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Coinductive_List.lnull_ltlI", "lnull ?xs ==> lnull (ltl ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Coinductive_List.lnull_lprefix", "lnull ?xs ==> lprefix ?xs ?ys",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Quotient_Coinductive_List.llist_equivp",
     "equivp ?R ==> equivp (llist_all2 ?R)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Quotient_Coinductive_List.reflp_llist_all2",
     "reflp ?R ==> reflp (llist_all2 ?R)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Quotient_Coinductive_List.symp_llist_all2",
     "symp ?R ==> symp (llist_all2 ?R)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Quotient_Coinductive_List.transp_llist_all2",
     "transp ?R ==> transp (llist_all2 ?R)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Coinductive_List.trans_llexord", "transp ?r ==> transp (llexord ?r)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Coinductive_List.lstrict_prefix_lfinite1",
     "lstrict_prefix ?xs ?ys ==> lfinite ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Coinductive_List.inf_llist_transfer",
     "(((=) ===> ?A) ===> llist_all2 ?A) inf_llist inf_llist",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_var 0)),
               template_app (template_hole 2, template_var 0)),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.set1_pre_llist_transfer",
     "(rel_pre_llist ?A ?B ===> rel_set ?A) set1_pre_llist set1_pre_llist",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0)),
               template_app (template_hole 2, template_var 1)),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.set2_pre_llist_transfer",
     "(rel_pre_llist ?A ?B ===> rel_set ?B) set2_pre_llist set2_pre_llist",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0)),
               template_app (template_hole 2, template_var 0)),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.lconcat_transfer",
     "(llist_all2 (llist_all2 ?A) ===> llist_all2 ?A) lconcat lconcat",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0))),
               template_app (template_hole 2, template_var 0)),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_Nat.enat_cocase_eSuc",
     "(case eSuc ?n of 0 => ?z | eSuc x => ?s x) = ?s ?n",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app (template_var 1, template_var 0))),
    ("Coinductive_List.funpow_Suc_conv", "(Suc ^^ ?n) ?m = ?m + ?n",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_hole 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Coinductive_List.lset_eq_lsetp",
     "lset ?xs = {x. Coinductive_List.lsetp ?xs x}",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Coinductive_List.lfinite_eq_range_llist_of",
     "lfinite ?xs = (?xs : range llist_of)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)))),
    ("Coinductive_Nat.finite_lessThan_enat_iff",
     "finite {..<?m} = (?m ~= \<infinity>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 0))
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Coinductive_List.llist_all2_LNil1",
     "llist_all2 ?P LNil ?xs = (?xs = LNil)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_hole 2),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Coinductive_List.llist_all2_LNil2",
     "llist_all2 ?P ?xs LNil = (?xs = LNil)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Coinductive_Nat.infinity_eq_eSuc_iff",
     "(\<infinity> = eSuc ?n) = (?n = \<infinity>)",
     template_bimplication
      (template_equation
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_equation (template_var 0, template_hole 1))),
    ("Coinductive_List.llength_eq_infty_conv_lfinite",
     "(llength ?xs = \<infinity>) = (~ lfinite ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Coinductive_Nat.eSuc_eq_infinity_iff",
     "(eSuc ?n = \<infinity>) = (?n = \<infinity>)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Coinductive_List.llist_of_eq_LNil_conv",
     "(llist_of ?xs = LNil) = (?xs = [])",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Coinductive_List.lset_lmember", "(?x : lset ?xs) = lmember ?x ?xs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Coinductive_Stream.sfirst_eq_0",
     "(sfirst ?P ?\<omega> = 0) = ?P ?\<omega>",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0),
       template_app (template_var 1, template_var 0))),
    ("Coinductive_List.llexord_code",
     "llexord ?r (LCons ?x ?xs) LNil = False",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Coinductive_Nat.epred_Sup",
     "epred (\<Squnion> ?A) = \<Squnion> (epred ` ?A)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_hole 2),
           template_var 0)))),
    ("Coinductive_Nat.epred_enat", "epred (enat ?m) = enat (?m - 1)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Coinductive_Nat.eSuc_Inf",
     "eSuc (\<Sqinter> ?A) = \<Sqinter> (eSuc ` ?A)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_hole 2),
           template_var 0)))),
    ("Coinductive_List_Prefix.llength_inf",
     "llength (?xs \<sqinter> ?ys) = llcp ?xs ?ys",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Coinductive_List.llength_LCons",
     "llength (LCons ?x ?xs) = eSuc (llength ?xs)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Coinductive_List.ldrop_enat", "ldrop (enat ?n) ?xs = ldropn ?n ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Coinductive_Stream.llist_of_stream_siterates",
     "llist_of_stream (siterate ?f ?x) = iterates ?f ?x",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Coinductive_List.ldistinct_ldrop",
     "ldistinct ?xs ==> ldistinct (ldrop ?n ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Coinductive_List.ldistinct_ldropn",
     "ldistinct ?xs ==> ldistinct (ldropn ?n ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Coinductive_List.ldistinct_lfilterI",
     "ldistinct ?xs ==> ldistinct (lfilter ?P ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Coinductive_List.ldistinct_ltake",
     "ldistinct ?xs ==> ldistinct (ltake ?n ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Coinductive_List.ldistinct_lzipI1",
     "ldistinct ?xs ==> ldistinct (lzip ?xs ?ys)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Coinductive_List.ldistinct_lzipI2",
     "ldistinct ?ys ==> ldistinct (lzip ?xs ?ys)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Coinductive_List.lfinite_lfilterI",
     "lfinite ?xs ==> lfinite (lfilter ?P ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Coinductive_List.compact_lfiniteI",
     "lfinite ?xs ==> ccpo.compact lSup lprefix ?xs",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0),
             template_var 0)
           ))),
    ("Coinductive_List.lnull_llexord", "lnull ?xs ==> llexord ?r ?xs ?ys",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0)
           ))),
    ("Coinductive_List.lset_lnull", "lnull ?xs ==> lset ?xs = {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Coinductive_List.llength_lnull", "lnull ?xs ==> llength ?xs = 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Coinductive_Stream.eq_onpI", "?P ?x ==> eq_onp ?P ?x ?x",
     template_implication
      ([template_predicate (template_app (template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 0)
           ))),
    ("Coinductive_List.compact_lfiniteD",
     "ccpo.compact lSup lprefix ?xs ==> lfinite ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_hole 2),
                template_hole 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Coinductive_Stream.SCons_transfer",
     "(?A ===>
       stream_from_llist_setup.pcr_stream ?A ===>
       stream_from_llist_setup.pcr_stream ?A)
       LCons (##)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 0),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_app (template_hole 2, template_var 0))),
             template_hole 1),
           template_hole 0)
         )),
    ("Quotient_Coinductive_List.LCons_respect",
     "(?A ===> llist_all2 ?A ===> llist_all2 ?A) LCons LCons",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 0),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_app (template_hole 2, template_var 0))),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.ldropn_transfer",
     "((=) ===> llist_all2 ?A ===> llist_all2 ?A) ldropn ldropn",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_app (template_hole 2, template_var 0))),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.ldrop_transfer",
     "((=) ===> llist_all2 ?A ===> llist_all2 ?A) ldrop ldrop",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_app (template_hole 2, template_var 0))),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.ltake_transfer",
     "((=) ===> llist_all2 ?A ===> llist_all2 ?A) ltake ltake",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_app (template_hole 2, template_var 0))),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.lnths_transfer",
     "(llist_all2 ?A ===> (=) ===> llist_all2 ?A) lnths lnths",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 0)),
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app (template_hole 4, template_var 0))),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_Nat.mcont_eadd1", "mcont Sup (<=) Sup (<=) (%x. x + ?y)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_hole 2),
             template_hole 1),
           t_empty)
         )),
    ("Coinductive_Nat.mcont_eadd2", "mcont Sup (<=) Sup (<=) ((+) ?x)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_hole 2),
             template_hole 1),
           t_empty)
         )),
    ("Coinductive_Nat.mcont_max_enat1",
     "mcont Sup (<=) Sup (<=) (%x. max x ?y)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_hole 2),
             template_hole 1),
           t_empty)
         )),
    ("Coinductive_Nat.mcont_max_enat2", "mcont Sup (<=) Sup (<=) (max ?x)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_hole 2),
             template_hole 1),
           t_empty)
         )),
    ("Coinductive_List.mcont_ltake1",
     "mcont Sup (<=) lSup lprefix (%n. ltake n ?xs)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_hole 3),
               template_hole 2),
             template_hole 1),
           t_empty)
         )),
    ("Coinductive_List.mcont_lzip1",
     "mcont lSup lprefix lSup lprefix (%xs. lzip xs ?ys)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_hole 3),
               template_hole 2),
             template_hole 1),
           t_empty)
         )),
    ("Coinductive_List.mcont_lzip2",
     "mcont lSup lprefix lSup lprefix (lzip ?xs)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_hole 3),
               template_hole 2),
             template_hole 1),
           t_empty)
         )),
    ("Coinductive_Nat.enat_cocase_inf",
     "(case \<infinity> of 0 => ?a | eSuc b => ?f b) = ?f \<infinity>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), t_empty),
         template_hole 0),
       template_app (template_var 0, template_hole 0))),
    ("Coinductive_List.lset_LCons",
     "lset (LCons ?x ?xs) = insert ?x (lset ?xs)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Coinductive_List.lset_repeat", "lset (repeat ?x) = {?x}",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Coinductive_List.lset_lmap", "lset (lmap ?f ?v) = ?f ` lset ?v",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.lnull_lSup", "lnull (lSup ?A) = (ALL x:?A. lnull x)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Coinductive_List.lnull_ldrop",
     "lnull (ldrop ?n ?xs) = (llength ?xs <= ?n)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("Coinductive_Stream.lnull_stakeWhile",
     "lnull (stakeWhile ?P ?xs) = (~ ?P (shd ?xs))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_var 1,
           template_app (template_hole 0, template_var 0))))),
    ("Coinductive_List.inf_llist_lprefix",
     "lprefix (inf_llist ?f) ?xs = (?xs = inf_llist ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_var 0, template_app (template_hole 1, template_var 1)))),
    ("Coinductive_List_Prefix.llist_of_lprefix_llist_of",
     "lprefix (llist_of ?xs) (llist_of ?ys) = (?xs <= ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Coinductive_List.lprefix_llist_of",
     "lprefix (llist_of ?xs) (llist_of ?ys) = prefix ?xs ?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Coinductive_List.LNil_eq_lmap", "(LNil = lmap ?f ?xs) = (?xs = LNil)",
     template_bimplication
      (template_equation
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_equation (template_var 0, template_hole 0))),
    ("Coinductive_List.inf_llist_inj",
     "(inf_llist ?f = inf_llist ?g) = (?f = ?g)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Coinductive_List.llist_of_inject",
     "(llist_of ?xs = llist_of ?ys) = (?xs = ?ys)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Coinductive_List.lmap_eq_LNil", "(lmap ?f ?xs = LNil) = (?xs = LNil)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Coinductive_Stream.sfirst_finite",
     "(sfirst ?P ?\<omega> < \<infinity>) = ev ?P ?\<omega>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Coinductive_Nat.Le_enat_eq_ile", "((?m, ?n) : Le_enat) = (?m <= ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Coinductive_List.lnull_funpow_lmap",
     "lnull ((lmap ?f ^^ ?n) ?xs) = lnull ?xs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("Coinductive_Nat.enat_unfold_eq_0",
     "(enat_unfold ?stop ?next ?a = 0) = ?stop ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 0),
       template_app (template_var 2, template_var 0))),
    ("Coinductive_Stream.stl_of_seq",
     "stl (of_seq ?f) = of_seq (%n. ?f (Suc n))",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("Coinductive_Stream.smap_of_seq",
     "smap ?f (of_seq ?g) = of_seq (?f o ?g)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_List.llength_ltake",
     "llength (ltake ?n ?xs) = min ?n (llength ?xs)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Coinductive_Nat.eSuc_plus", "eSuc ?m + ?n = eSuc (?m + ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Coinductive_List.ltl_inf_llist",
     "ltl (inf_llist ?f) = inf_llist (%n. ?f (Suc n))",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("Coinductive_List.ldrop_ltl",
     "ldrop ?n (ltl ?xs) = ldrop (eSuc ?n) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Coinductive_List.ldrop_eSuc_conv_ltl",
     "ldrop (eSuc ?n) ?xs = ltl (ldrop ?n ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Coinductive_List.ldropn_ltl",
     "ldropn ?n (ltl ?xs) = ldropn (Suc ?n) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Coinductive_List.ldropn_llist_of",
     "ldropn ?n (llist_of ?xs) = llist_of (drop ?n ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_List.ldrop_eSuc_ltl",
     "ldropn (Suc ?n) ?xs = ldropn ?n (ltl ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.lfilter_llist_of",
     "lfilter ?P (llist_of ?xs) = llist_of (filter ?P ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_Stream.LCons_llist_of_stream",
     "LCons ?x (llist_of_stream ?xs) = llist_of_stream (?x ## ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_List.lmap_inf_llist",
     "lmap ?f (inf_llist ?g) = inf_llist (?f o ?g)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_List.lmap_llist_of",
     "lmap ?f (llist_of ?xs) = llist_of (map ?f ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_Stream.lmap_llist_of_stream",
     "lmap ?f (llist_of_stream ?xs) = llist_of_stream (smap ?f ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_List.ltl_iterates",
     "ltl (iterates ?f ?x) = iterates ?f (?f ?x)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_var 1, template_var 0)))),
    ("Coinductive_List.ltl_ldrop",
     "ltl (ldrop ?n ?xs) = ldrop ?n (ltl ?xs)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 1, template_var 0)))),
    ("Coinductive_List.ltl_ldropn",
     "ltl (ldropn ?n ?xs) = ldropn ?n (ltl ?xs)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 1, template_var 0)))),
    ("Coinductive_List.ltl_lmap", "ltl (lmap ?f ?xs) = lmap ?f (ltl ?xs)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.lnths_upt_eq_ltake",
     "lnths ?xs {..<?n} = ltake (enat ?n) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("Coinductive_List.lnths_llist_of",
     "lnths (llist_of ?xs) ?A = llist_of (nths ?xs ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_List.lappend_iterates",
     "lappend (iterates ?f ?x) ?xs = iterates ?f ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 1))),
    ("Coinductive_List.lconcat_llist_of",
     "lconcat (llist_of (map llist_of ?xs)) = llist_of (concat ?xs)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0))),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.lfilter_idem",
     "lfilter ?P (lfilter ?P ?xs) = lfilter ?P ?xs",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Coinductive_List.lSup_minus_LNil", "lSup (?Y - {LNil}) = lSup ?Y",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))),
       template_app (template_hole 4, template_var 0))),
    ("Coinductive_List.lappend_ltake_ldrop",
     "lappend (ltake ?n ?xs) (ldrop ?n ?xs) = ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Coinductive_List.lappend_ltakeWhile_ldropWhile",
     "lappend (ltakeWhile ?P ?xs) (ldropWhile ?P ?xs) = ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Coinductive_List.lconcat_LCons",
     "lconcat (LCons ?xs ?xss) = lappend ?xs (lconcat ?xss)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Coinductive_List.llcp_le_length",
     "llcp ?xs ?ys <= min (llength ?xs) (llength ?ys)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.llist_of_list_of",
     "lfinite ?xs ==> llist_of (list_of ?xs) = ?xs",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Coinductive_List.lappend_lnull1",
     "lnull ?xs ==> lappend ?xs ?ys = ?ys",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("Coinductive_List.ldrop_lnull", "lnull ?xs ==> ldrop ?n ?xs = LNil",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Coinductive_List.ldropn_lnull", "lnull ?xs ==> ldropn ?n ?xs = LNil",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Coinductive_List.lappend_lnull2",
     "lnull ?ys ==> lappend ?xs ?ys = ?xs",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 0))),
    ("Coinductive_Stream.sfirst_0",
     "?P ?\<omega> ==> sfirst ?P ?\<omega> = 0",
     template_implication
      ([template_predicate (template_app (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Coinductive_List.lprefix_imp_llexord",
     "lprefix ?xs ?ys ==> llexord ?r ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("Coinductive_List.lsetp_into_lset",
     "Coinductive_List.lsetp ?xs ?x ==> ?x : lset ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Coinductive_Stream.cr_streamI",
     "~ lfinite ?xs ==>
      stream_from_llist_setup.cr_stream ?xs (stream_of_llist ?xs)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Coinductive_List.not_lfinite_llength",
     "~ lfinite ?xs ==> llength ?xs = \<infinity>",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Coinductive_Nat.finite_lessThan_enatI",
     "?m ~= \<infinity> ==> finite {..<?m}",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Coinductive_List.lset_into_lsetp",
     "?x : lset ?xs ==> Coinductive_List.lsetp ?xs ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Coinductive_List.llength_eq_enat_lfiniteD",
     "llength ?xs = enat ?n ==> lfinite ?xs",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Coinductive_List.iterates_transfer",
     "((?A ===> ?A) ===> ?A ===> llist_all2 ?A) iterates iterates",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_var 0)),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app (template_hole 2, template_var 0))),
             template_hole 1),
           template_hole 0)
         )),
    ("Quotient_Coinductive_List.lmap_respect",
     "((?R1.0 ===> (=)) ===> llist_all2 ?R1.0 ===> (=)) lmap lmap",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 0),
                   template_hole 5)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0)),
                 template_hole 2)),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.llist_all_transfer",
     "((?A ===> (=)) ===> llist_all2 ?A ===> (=)) llist_all llist_all",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_hole 4)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_hole 4)),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.lappend_transfer",
     "(llist_all2 ?A ===> llist_all2 ?A ===> llist_all2 ?A) lappend
       lappend",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 3, template_var 0)),
                 template_app (template_hole 3, template_var 0))),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.lnth_iterates",
     "lnth (iterates ?f ?x) ?n = (?f ^^ ?n) ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_var 1))),
    ("Coinductive_List.lnth_Suc_LCons",
     "lnth (LCons ?x ?xs) (Suc ?n) = lnth ?xs ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Coinductive_Stream.snth_SCons_Suc",
     "(?x ## ?xs) !! Suc ?n = ?xs !! ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Coinductive_List.lfinite_conv_llength_enat",
     "lfinite ?xs = (EX n. llength ?xs = enat n)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app (template_hole 3, t_empty))),
    ("Coinductive_List.lfinite_lappend",
     "lfinite (lappend ?xs ?ys) = (lfinite ?xs & lfinite ?ys)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Coinductive_List.lfinite_lnths",
     "lfinite (lnths ?xs ?A) = (lfinite ?xs | finite ?A)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.lfinite_lzip",
     "lfinite (lzip ?xs ?ys) = (lfinite ?xs | lfinite ?ys)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.lnull_lappend",
     "lnull (lappend ?xs ?ys) = (lnull ?xs & lnull ?ys)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Coinductive_List.lnull_ldropn",
     "lnull (ldropn ?n ?xs) = (llength ?xs <= enat ?n)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Coinductive_List.lnull_lzip",
     "lnull (lzip ?xs ?ys) = (lnull ?xs | lnull ?ys)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_Nat.Suc_eq_numeral",
     "(eSuc ?n = numeral ?k) = (?n = epred_numeral ?k)",
     template_bimplication
      (template_equation
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Coinductive_Nat.eq_numeral_eSuc",
     "(numeral ?k = eSuc ?n) = (epred_numeral ?k = ?n)",
     template_bimplication
      (template_equation
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Coinductive_Stream.scount_infinite_iff",
     "(scount ?P ?\<omega> = \<infinity>) = alw (ev ?P) ?\<omega>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Coinductive_List.ldrop_eq_LNil",
     "(ldrop ?n ?xs = LNil) = (llength ?xs <= ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("Coinductive_Nat.less_eSuc_numeral",
     "(eSuc ?n < numeral ?k) = (?n < epred_numeral ?k)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_Nat.less_numeral_Suc",
     "(numeral ?k < eSuc ?n) = (epred_numeral ?k < ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Coinductive_Nat.le_eSuc_numeral",
     "(eSuc ?n <= numeral ?k) = (?n <= epred_numeral ?k)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_Nat.le_numeral_eSuc",
     "(numeral ?k <= eSuc ?n) = (epred_numeral ?k <= ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Coinductive_List.llexord_empty",
     "llexord (%x y. False) ?xs ?ys = lprefix ?xs ?ys",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, t_empty), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Coinductive_Stream.of_seq_rec",
     "of_seq ?f = ?f 0 ## of_seq (?f o Suc)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app
          (template_hole 3, template_app (template_var 0, template_hole 2)),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Coinductive_Stream.siterate_conv_of_seq",
     "siterate ?f ?a = of_seq (%n. (?f ^^ n) ?a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Coinductive_Stream.siterate",
     "siterate ?f ?x = ?x ## siterate ?f (?f ?x)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_var 1, template_var 0))))),
    ("Coinductive_Stream.smap_iterates",
     "smap ?f (siterate ?f ?x) = siterate ?f (?f ?x)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_var 1, template_var 0)))),
    ("Coinductive_Stream.szip_sconst1",
     "szip (sconst ?a) ?xs = smap (Pair ?a) ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Coinductive_List.llength_lappend",
     "llength (lappend ?xs ?ys) = llength ?xs + llength ?ys",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Coinductive_List.llength_ldropn",
     "llength (ldropn ?n ?xs) = llength ?xs - enat ?n",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Coinductive_List.llength_lzip",
     "llength (lzip ?xs ?ys) = min (llength ?xs) (llength ?ys)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_Nat.epred_max",
     "epred (max ?x ?y) = max (epred ?x) (epred ?y)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Coinductive_Nat.epred_min",
     "epred (min ?a ?b) = min (epred ?a) (epred ?b)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Coinductive_Nat.diff_eSuc_numeral",
     "eSuc ?n - numeral ?k = ?n - epred_numeral ?k",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_Nat.diff_numeral_eSuc",
     "numeral ?k - eSuc ?n = epred_numeral ?k - ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Coinductive_Nat.max_eSuc_eSuc",
     "max (eSuc ?n) (eSuc ?m) = eSuc (max ?n ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Coinductive_Nat.min_eSuc_eSuc",
     "min (eSuc ?n) (eSuc ?m) = eSuc (min ?n ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Coinductive_List.iterates_conv_inf_llist",
     "iterates ?f ?a = inf_llist (%n. (?f ^^ n) ?a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Coinductive_List.iterates",
     "iterates ?f ?x = LCons ?x (iterates ?f (?f ?x))",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_var 1, template_var 0))))),
    ("Coinductive_List.ldropWhile_eq_ldrop",
     "ldropWhile ?P ?xs = ldrop (llength (ltakeWhile ?P ?xs)) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_var 0))),
    ("Coinductive_List.lmap_lconcat",
     "lmap ?f (lconcat ?xss) = lconcat (lmap (lmap ?f) ?xss)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 1)),
           template_var 0)))),
    ("Coinductive_List.ltl_ltake",
     "ltl (ltake ?n ?xs) = ltake (epred ?n) (ltl ?xs)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Coinductive_List.ltake_ltl",
     "ltake ?n (ltl ?xs) = ltl (ltake (eSuc ?n) ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Coinductive_List.lappend_llist_of_llist_of",
     "lappend (llist_of ?xs) (llist_of ?ys) = llist_of (?xs @ ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_Stream.lappend_llist_of_stream_conv_shift",
     "lappend (llist_of ?xs) (llist_of_stream ?ys) =
      llist_of_stream (?xs @- ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_List.ldrop_llist_of",
     "ldrop (enat ?n) (llist_of ?xs) = llist_of (drop ?n ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_List.lmap_iterates",
     "lmap ?f (iterates ?f ?x) = iterates ?f (?f ?x)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_var 1, template_var 0)))),
    ("Coinductive_List.ltake_epred_ltl",
     "ltake (epred ?n) (ltl ?xs) = ltl (ltake ?n ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Coinductive_List.ltake_llist_of",
     "ltake (enat ?n) (llist_of ?xs) = llist_of (take ?n ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_List.ldropn_Suc_LCons",
     "ldropn (Suc ?n) (LCons ?x ?xs) = ldropn ?n ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2), template_var 0))),
    ("Coinductive_List.lconcat_lfilter_neq_LNil",
     "lconcat (lfilter (%xs. ~ lnull xs) ?xss) = lconcat ?xss",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app (template_hole 3, template_var 0))),
    ("Coinductive_List.lappend_ltake_enat_ldropn",
     "lappend (ltake (enat ?n) ?xs) (ldropn ?n ?xs) = ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Coinductive_List.ldrop_eSuc_LCons",
     "ldrop (eSuc ?n) (LCons ?x ?xs) = ldrop ?n ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2), template_var 0))),
    ("Coinductive_List.lzip_llist_of",
     "lzip (llist_of ?xs) (llist_of ?ys) = llist_of (zip ?xs ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_Stream.lzip_llist_of_stream",
     "lzip (llist_of_stream ?xs) (llist_of_stream ?ys) =
      llist_of_stream (szip ?xs ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_List.lset_lappend",
     "lset (lappend ?xs ?ys) <= lset ?xs Un lset ?ys",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Coinductive_List.hd_list_of",
     "lfinite ?xs ==> hd (list_of ?xs) = lhd ?xs",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.nth_list_of",
     "lfinite ?xs ==> (!) (list_of ?xs) = lnth ?xs",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.set_list_of",
     "lfinite ?xs ==> set (list_of ?xs) = lset ?xs",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.lprefix_lnull",
     "lnull ?ys ==> lprefix ?xs ?ys = lnull ?xs",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Coinductive_Nat.enat_unfold_stop",
     "?stop ?a ==> enat_unfold ?stop ?next ?a = 0",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0),
           template_var 1),
         template_hole 0))),
    ("Coinductive_List.lfinite_lSupD",
     "lfinite (lSup ?A) ==> ALL xs:?A. lfinite xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), t_empty)
           ))),
    ("Coinductive_List.lprefix_ltlI",
     "lprefix ?xs ?ys ==> lprefix (ltl ?xs) (ltl ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Coinductive_List.lprefix_lsetD",
     "lprefix ?xs ?ys ==> lset ?xs <= lset ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.lprefix_llength_le",
     "lprefix ?xs ?ys ==> llength ?xs <= llength ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.lprefix_lconcatI",
     "lprefix ?xss ?yss ==> lprefix (lconcat ?xss) (lconcat ?yss)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Coinductive_List.lstrict_prefix_llength_less",
     "lstrict_prefix ?xs ?ys ==> llength ?xs < llength ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.inf_llist_lnth",
     "~ lfinite ?xs ==> inf_llist (lnth ?xs) = ?xs",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Coinductive_List.lappend_inf",
     "~ lfinite ?xs ==> lappend ?xs ?ys = ?xs",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("Coinductive_Stream.llist_of_stream_stream_of_llist",
     "~ lfinite ?xs ==> llist_of_stream (stream_of_llist ?xs) = ?xs",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Coinductive_Nat.ile_into_Le_enat", "?m <= ?n ==> (?m, ?n) : Le_enat",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("Coinductive_Nat.epred_le_epredI", "?n <= ?m ==> epred ?n <= epred ?m",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_Nat.Le_enat_imp_ile", "(?m, ?n) : Le_enat ==> ?m <= ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              template_hole 1)
            )],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Coinductive_Stream.smap_transfer",
     "((?A ===> ?B) ===>
       stream_from_llist_setup.pcr_stream ?A ===>
       stream_from_llist_setup.pcr_stream ?B)
       lmap smap",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 1)),
                 template_app (template_hole 2, template_var 0))),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.lmap_transfer",
     "((?A ===> ?B) ===> llist_all2 ?A ===> llist_all2 ?B) lmap lmap",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 1)),
                 template_app (template_hole 2, template_var 0))),
             template_hole 1),
           template_hole 0)
         )),
    ("Quotient_Coinductive_List.lmap_respect",
     "((?R1.0 ===> ?R2.0) ===> llist_all2 ?R1.0 ===> llist_all2 ?R2.0) lmap
       lmap",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 1)),
                 template_app (template_hole 2, template_var 0))),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.ldropWhile_transfer",
     "((?A ===> (=)) ===> llist_all2 ?A ===> llist_all2 ?A) ldropWhile
       ldropWhile",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_hole 4)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_app (template_hole 2, template_var 0))),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.lfilter_transfer",
     "((?A ===> (=)) ===> llist_all2 ?A ===> llist_all2 ?A) lfilter
       lfilter",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_hole 4)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_app (template_hole 2, template_var 0))),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.ltakeWhile_transfer",
     "((?A ===> (=)) ===> llist_all2 ?A ===> llist_all2 ?A) ltakeWhile
       ltakeWhile",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_hole 4)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_app (template_hole 2, template_var 0))),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.llast_LCons",
     "llast (LCons ?x ?xs) = (if lnull ?xs then ?x else llast ?xs)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1),
         template_app (template_hole 3, template_var 0)))),
    ("Coinductive_List.lhd_lfilter",
     "lhd (lfilter ?P ?xs) = lhd (ldropWhile (Not o ?P) ?xs)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)))),
    ("Coinductive_List.llast_LCons2",
     "llast (LCons ?x (LCons ?y ?xs)) = llast (LCons ?y ?xs)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_List.gen_lset_code",
     "gen_lset ?A (LCons ?x ?xs) = gen_lset (insert ?x ?A) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_var 0))),
    ("Coinductive_List.lnull_lconcat",
     "lnull (lconcat ?xss) = (lset ?xss <= {xs. lnull xs})",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, t_empty)))),
    ("Coinductive_List.lprefix_conv_lappend",
     "lprefix ?xs ?ys = (EX zs. ?ys = lappend ?xs zs)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Coinductive_List.lfinite_ldrop",
     "lfinite (ldrop ?n ?xs) = (lfinite ?xs | ?n = \<infinity>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 4, template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))
           ))),
    ("Coinductive_List.lfinite_ltake",
     "lfinite (ltake ?n ?xs) = (lfinite ?xs | ?n < \<infinity>)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 4, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Coinductive_List.lnull_ldropWhile",
     "lnull (ldropWhile ?P ?xs) = (ALL x:lset ?xs. ?P x)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("Coinductive_List.lnull_ltake",
     "lnull (ltake ?n ?xs) = (lnull ?xs | ?n = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 4, template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))
           ))),
    ("Coinductive_Nat.neq_zero_conv_eSuc",
     "(?n ~= 0) = (EX n'. ?n = eSuc n')",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app (template_hole 1, t_empty))),
    ("Coinductive_List.lconcat_eq_LNil",
     "(lconcat ?xss = LNil) = (lset ?xss <= {LNil})",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_hole 4),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_app (template_hole 1, template_hole 4),
           template_hole 0)))),
    ("Coinductive_List.ldropn_eq_LNil",
     "(ldropn ?n ?xs = LNil) = (llength ?xs <= enat ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Coinductive_List.llist_all2_llist_of",
     "llist_all2 ?P (llist_of ?xs) (llist_of ?ys) = list_all2 ?P ?xs ?ys",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Coinductive_Stream.llist_all2_llist_of_stream",
     "llist_all2 ?P (llist_of_stream ?xs) (llist_of_stream ?ys) =
      stream_all2 ?P ?xs ?ys",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Coinductive_List.compact_LCons_iff",
     "ccpo.compact lSup lprefix (LCons ?x ?xs) =
      ccpo.compact lSup lprefix ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1),
         template_var 0))),
    ("Coinductive_Stream.sfirst_eq_enat_iff",
     "(sfirst ?P ?\<omega> = enat ?n) = ev_at ?P ?n ?\<omega>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("Coinductive_List.list_of_aux_code",
     "list_of_aux ?xs (LCons ?y ?ys) = list_of_aux (?y # ?xs) ?ys",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_var 0))),
    ("Coinductive_Stream.siterate_smap",
     "siterate ?f ?x = ?x ## smap ?f (siterate ?f ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Coinductive_List.gen_llength_code",
     "gen_llength ?n (LCons ?x ?xs) = gen_llength (?n + 1) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0)),
         template_var 0))),
    ("Coinductive_List.llcp_ltake2",
     "llcp ?xs (ltake ?n ?ys) = min ?n (llcp ?xs ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Coinductive_List.llcp_ltake1",
     "llcp (ltake ?n ?xs) ?ys = min ?n (llcp ?xs ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Coinductive_Nat.max_eSuc_numeral",
     "max (eSuc ?n) (numeral ?k) = eSuc (max ?n (epred_numeral ?k))",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Coinductive_Nat.max_numeral_eSuc",
     "max (numeral ?k) (eSuc ?n) = eSuc (max (epred_numeral ?k) ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Coinductive_Nat.min_eSuc_numeral",
     "min (eSuc ?n) (numeral ?k) = eSuc (min ?n (epred_numeral ?k))",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Coinductive_Nat.min_numeral_eSuc",
     "min (numeral ?k) (eSuc ?n) = eSuc (min (epred_numeral ?k) ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Coinductive_List.inf_llist_rec",
     "inf_llist ?f = LCons (?f 0) (inf_llist (%n. ?f (Suc n)))",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_var 0, template_hole 1)),
         template_app (template_hole 3, t_empty)))),
    ("Coinductive_List.iterates_lmap",
     "iterates ?f ?x = LCons ?x (lmap ?f (iterates ?f ?x))",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Coinductive_List.ldropn_inf_llist",
     "ldropn ?n (inf_llist ?f) = inf_llist (%m. ?f (m + ?n))",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("Coinductive_List.lappend_assoc",
     "lappend (lappend ?xs ?ys) ?zs = lappend ?xs (lappend ?ys ?zs)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_List.lappend_code",
     "lappend (LCons ?xa ?x) ?ys = LCons ?xa (lappend ?x ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Coinductive_List.ldrop_ldrop",
     "ldrop ?n (ldrop ?m ?xs) = ldrop (?n + ?m) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Coinductive_List.ldrop_lmap",
     "ldrop ?n (lmap ?f ?xs) = lmap ?f (ldrop ?n ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Coinductive_List.ldropn_ldropn",
     "ldropn ?n (ldropn ?m ?xs) = ldropn (?n + ?m) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Coinductive_List.ldropn_lmap",
     "ldropn ?n (lmap ?f ?xs) = lmap ?f (ldropn ?n ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Coinductive_List.lnths_lmap",
     "lnths (lmap ?f ?xs) ?A = lmap ?f (lnths ?xs ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_List.ltake_lmap",
     "ltake ?n (lmap ?f ?xs) = lmap ?f (ltake ?n ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Coinductive_List.ltake_ltake",
     "ltake ?n (ltake ?m ?xs) = ltake (min ?n ?m) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Coinductive_List.lSup_finite_prefixes",
     "lSup {ys. lprefix ys ?xs & lfinite ys} = ?xs",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, t_empty)),
       template_var 0)),
    ("Coinductive_List.lset_lconcat_subset",
     "lset (lconcat ?xss) <= \<Union> (lset ` lset ?xss)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("Coinductive_List.lfinite_llength_enat",
     "lfinite ?xs ==> EX n. llength ?xs = enat n",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Coinductive_List.length_list_of_conv_the_enat",
     "lfinite ?xs ==> length (list_of ?xs) = the_enat (llength ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Coinductive_List.tl_list_of",
     "lfinite ?xs ==> tl (list_of ?xs) = list_of (ltl ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Coinductive_List.length_list_of",
     "lfinite ?xs ==> enat (length (list_of ?xs)) = llength ?xs",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0))),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.llexord_LNil_right",
     "lnull ?ys ==> llexord ?r ?xs ?ys = lnull ?xs",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2),
         template_app (template_hole 2, template_var 0)))),
    ("Coinductive_List.llcp_lprefix1",
     "lprefix ?xs ?ys ==> llcp ?xs ?ys = llength ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Coinductive_List.llcp_lprefix2",
     "lprefix ?ys ?xs ==> llcp ?xs ?ys = llength ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app (template_hole 0, template_var 1)))),
    ("Coinductive_List.lhd_conv_lnth",
     "~ lnull ?xs ==> lhd ?xs = lnth ?xs 0",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Coinductive_List.lnth_0_conv_lhd",
     "~ lnull ?xs ==> lnth ?xs 0 = lhd ?xs",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.llist_all2_lfiniteD",
     "llist_all2 ?P ?xs ?ys ==> lfinite ?xs = lfinite ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.llist_all2_lnullD",
     "llist_all2 ?P ?xs ?ys ==> lnull ?xs = lnull ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.llist_all2_llengthD",
     "llist_all2 ?P ?xs ?ys ==> llength ?xs = llength ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_Nat.enat_the_enat",
     "?n ~= \<infinity> ==> enat (the_enat ?n) = ?n",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Coinductive_Nat.eSuc_epred", "?n ~= 0 ==> eSuc (epred ?n) = ?n",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Coinductive_Stream.scount_infinite",
     "alw (ev ?P) ?\<omega> ==> scount ?P ?\<omega> = \<infinity>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Coinductive_List.ldrop_all",
     "llength ?xs <= ?m ==> ldrop ?m ?xs = LNil",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Coinductive_List.ltake_all",
     "llength ?xs <= ?m ==> ltake ?m ?xs = ?xs",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("Coinductive_List.in_lset_ltlD",
     "?x : lset (ltl ?xs) ==> ?x : lset ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Coinductive_List.ldistinct_lprefix",
     "[| ldistinct ?xs; lprefix ?ys ?xs |] ==> ldistinct ?ys",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("Coinductive_List.lprefix_lfiniteD",
     "[| lprefix ?xs ?ys; lfinite ?ys |] ==> lfinite ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Coinductive_List.lprefix_lnullD",
     "[| lprefix ?xs ?ys; lnull ?ys |] ==> lnull ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Coinductive_List.lzip_ltransfer",
     "(llist_all2 ?A ===> llist_all2 ?B ===> llist_all2 (rel_prod ?A ?B))
       lzip lzip",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 1)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 0)),
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 0)))),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.lhd_lappend",
     "lhd (lappend ?xs ?ys) = (if lnull ?xs then lhd ?ys else lhd ?xs)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 3, template_var 0)),
         template_app (template_hole 3, template_var 1)))),
    ("Coinductive_Nat.enat_cocase_numeral",
     "(case numeral ?v of 0 => ?a | eSuc x => ?f x) =
      Let (epred_numeral ?v) ?f",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("Coinductive_Nat.case_enat_numeral",
     "(case numeral ?v of enat x => ?f x | \<infinity> => ?i) =
      Let (numeral ?v) ?f",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("Coinductive_List.lmap_conv_unfold_llist",
     "lmap ?f = unfold_llist (%xs. xs = LNil) (?f o lhd) ltl",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app
        (template_app
          (template_app (template_hole 5, t_empty),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1)),
         template_hole 0))),
    ("Coinductive_List.lset_lzip_same",
     "lset (lzip ?xs ?xs) = (%x. (x, x)) ` lset ?xs",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0), template_var 0)),
       template_app
        (template_app (template_hole 2, t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.ldistinct_lmap",
     "ldistinct (lmap ?f ?xs) = (ldistinct ?xs & inj_on ?f (lset ?xs))",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Coinductive_Stream.lfinite_stakeWhile",
     "lfinite (stakeWhile ?P ?xs) = (EX x:sset ?xs. ~ ?P x)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         t_empty))),
    ("Coinductive_List.llist_all2_same",
     "llist_all2 ?P ?xs ?xs = (ALL x:lset ?xs. ?P x x)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("Coinductive_List.lnull_lfilter",
     "lnull (lfilter ?P ?xs) = (ALL x:lset ?xs. ~ ?P x)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         t_empty))),
    ("Coinductive_List.lstrict_prefix_lappend_conv",
     "lstrict_prefix ?xs (lappend ?xs ?ys) = (lfinite ?xs & ~ lnull ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Coinductive_Stream.scount_eq_0_iff",
     "(scount ?P ?\<omega> = 0) = alw (%xs. ~ ?P xs) ?\<omega>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app (template_hole 1, t_empty), template_var 0))),
    ("Coinductive_List.ldropWhile_eq_LNil_iff",
     "(ldropWhile ?P ?xs = LNil) = (ALL x:lset ?xs. ?P x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("Coinductive_List.lfilter_id_conv",
     "(lfilter ?P ?xs = ?xs) = (ALL x:lset ?xs. ?P x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("Coinductive_List.llist_all2_True",
     "llist_all2 (%_ _. True) ?xs ?ys = (llength ?xs = llength ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, t_empty), template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_Stream.unfold_stream_ltl_unroll",
     "unfold_stream ?SHD ?STL (?STL ?b) =
      unfold_stream (?SHD o ?STL) ?STL ?b",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app (template_var 1, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 1),
         template_var 0))),
    ("Coinductive_Stream.szip_sconst2",
     "szip ?xs (sconst ?b) = smap (%x. (x, ?b)) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_app (template_hole 1, t_empty), template_var 1))),
    ("Coinductive_Stream.szip_smap2",
     "szip ?xs (smap ?g ?ys) = smap (apsnd ?g) (szip ?xs ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Coinductive_Stream.szip_smap1",
     "szip (smap ?f ?xs) ?ys = smap (apfst ?f) (szip ?xs ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_List.ldrop_enat_inf_llist",
     "ldrop (enat ?n) (inf_llist ?f) = inf_llist (%m. ?f (m + ?n))",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("Coinductive_List.ldropn_iterates",
     "ldropn ?n (iterates ?f ?x) = iterates ?f ((?f ^^ ?n) ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Coinductive_List.ltake_enat_inf_llist",
     "ltake (enat ?n) (inf_llist ?f) = llist_of (map ?f [0..<?n])",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1))))),
    ("Coinductive_Stream.llist_of_stream_unfold_stream",
     "llist_of_stream (unfold_stream ?SHD ?STL ?x) =
      unfold_llist (%_. False) ?SHD ?STL ?x",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, t_empty), template_var 2),
           template_var 1),
         template_var 0))),
    ("Coinductive_List.ltake_eSuc_LCons",
     "ltake (eSuc ?n) (LCons ?x ?xs) = LCons ?x (ltake ?n ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Coinductive_List.lconcat_lmap_singleton",
     "lconcat (lmap (%x. LCons (?f x) LNil) ?xs) = lmap ?f ?xs",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Coinductive_List.lset_ltakeWhile_subset",
     "lset (ltakeWhile ?P ?xs) <= lset ?xs Int {x. ?P x}",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_app (template_hole 0, t_empty)))),
    ("Coinductive_List.lfinite_finite_index",
     "lfinite ?xs ==> finite {n. enat n < llength ?xs}",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 4, template_app (template_hole 3, t_empty))
           ))),
    ("Coinductive_List.lprefix_lappend_sameI",
     "lprefix ?xs ?ys ==> lprefix (lappend ?zs ?xs) (lappend ?zs ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Coinductive_List.lprefix_lfilterI",
     "lprefix ?xs ?ys ==> lprefix (lfilter ?P ?xs) (lfilter ?P ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Coinductive_List.lmap_lprefix",
     "lprefix ?xs ?ys ==> lprefix (lmap ?f ?xs) (lmap ?f ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Coinductive_List.lmap_lstrict_prefix",
     "lstrict_prefix ?xs ?ys ==>
      lstrict_prefix (lmap ?f ?xs) (lmap ?f ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Coinductive_List.not_lfinite_lprefix_conv_eq",
     "~ lfinite ?xs ==> lprefix ?xs ?ys = (?xs = ?ys)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 1))
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0)
              )],
         template_equation (template_var 1, template_var 0)))),
    ("Coinductive_List.lhd_LCons_ltl",
     "~ lnull ?llist ==> LCons (lhd ?llist) (ltl ?llist) = ?llist",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Coinductive_Nat.enat_less_enat_plusI",
     "?x < ?y ==> enat ?x < enat ?y + ?z",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than, template_app (template_hole 1, template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 1)),
           template_var 0)))),
    ("Coinductive_Nat.enat_minus_mono1", "?x <= ?y ==> ?x - ?m <= ?y - ?m",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_Stream.lhd_stakeWhile",
     "?P (shd ?xs) ==> lhd (stakeWhile ?P ?xs) = shd ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_var 1,
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 3, template_var 0)))),
    ("Coinductive_List.llist_all2_ltlI",
     "llist_all2 ?P ?xs ?ys ==> llist_all2 ?P (ltl ?xs) (ltl ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Coinductive_List.compact_LConsI",
     "ccpo.compact lSup lprefix ?xs ==>
      ccpo.compact lSup lprefix (LCons ?x ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_hole 2),
                template_hole 1),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Quotient_Coinductive_List.id_preserve",
     "Quotient3 ?R ?Abs ?Rep ==> (?Rep ---> ?Abs) id = id",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1),
           template_hole 1),
         template_hole 0))),
    ("Coinductive_List.lset_intros",
     "?x : lset ?xs ==> ?x : lset (LCons ?x' ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Coinductive_List.ldropn_all",
     "llength ?xs <= enat ?m ==> ldropn ?m ?xs = LNil",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Coinductive_List.compact_LConsD",
     "ccpo.compact lSup lprefix (LCons ?x ?xs) ==>
      ccpo.compact lSup lprefix ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_hole 2),
                template_hole 1),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_var 0)
           ))),
    ("Coinductive_List.in_lset_ldropD",
     "?x : lset (ldrop ?n ?xs) ==> ?x : lset ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Coinductive_List.in_lset_ldropWhileD",
     "?x : lset (ldropWhile ?P ?xs) ==> ?x : lset ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Coinductive_List.in_lset_ldropnD",
     "?x : lset (ldropn ?n ?xs) ==> ?x : lset ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Coinductive_List.llength_mono",
     "lfp.mono_body
       (%llength. case ?xs of LNil => 0 | LCons x xs => eSuc (llength xs))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_hole 3)),
             template_hole 3),
           t_empty)
         )),
    ("Coinductive_List.lnth_LCons",
     "lnth (LCons ?x ?xs) ?n =
      (case ?n of 0 => ?x | Suc n' => lnth ?xs n')",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), t_empty),
         template_var 0))),
    ("Coinductive_Stream.snth_SCons",
     "(?x ## ?xs) !! ?n = (case ?n of 0 => ?x | Suc n' => ?xs !! n')",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), t_empty),
         template_var 0))),
    ("Coinductive_List.not_lnull_conv",
     "(~ lnull ?xs) = (EX x xs'. ?xs = LCons x xs')",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Coinductive_List.ldistinct_LCons",
     "ldistinct (LCons ?x ?xs) = (?x ~: lset ?xs & ldistinct ?xs)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0)))),
         template_app (template_hole 5, template_var 0)))),
    ("Coinductive_List.lnull_ltakeWhile",
     "lnull (ltakeWhile ?P ?xs) = (~ lnull ?xs --> ~ ?P (lhd ?xs))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 4, template_var 0))),
         template_app
          (template_hole 1,
           template_app
            (template_var 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Coinductive_List.lmember_code",
     "lmember ?x (LCons ?y ?ys) = (?x = ?y | lmember ?x ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0))
           ))),
    ("Coinductive_Nat.plus_enat_eq_0_conv",
     "(?m + ?n = 0) = (?m = 0 & ?n = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 1))
           ))),
    ("Coinductive_Nat.enat_min_eq_0_iff",
     "(min ?a ?b = 0) = (?a = 0 | ?b = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 1))
           ))),
    ("Coinductive_List.LNil_eq_lappend_iff",
     "(LNil = lappend ?xs ?ys) = (?xs = LNil & ?ys = LNil)",
     template_bimplication
      (template_equation
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2))
           ))),
    ("Coinductive_List.LNil_eq_ltake_iff",
     "(LNil = ltake ?n ?xs) = (?xs = LNil | ?n = 0)",
     template_bimplication
      (template_equation
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_hole 4)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))
           ))),
    ("Coinductive_List.lappend_eq_LNil_iff",
     "(lappend ?xs ?ys = LNil) = (?xs = LNil & ?ys = LNil)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 1))
           ))),
    ("Coinductive_List.lfilter_eq_LNil",
     "(lfilter ?P ?xs = LNil) = (ALL x:lset ?xs. ~ ?P x)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         t_empty))),
    ("Coinductive_List.ltake_eq_LNil_iff",
     "(ltake ?n ?xs = LNil) = (?xs = LNil | ?n = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_hole 3),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_hole 3)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))
           ))),
    ("Coinductive_List.ltakeWhile_all_conv",
     "(ltakeWhile ?P ?xs = ?xs) = (lset ?xs <= {x. ?P x})",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, t_empty)))),
    ("Coinductive_List.lzip_eq_LNil_conv",
     "(lzip ?xs ?ys = LNil) = (?xs = LNil | ?ys = LNil)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, template_var 1), template_var 0),
         template_hole 5),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Coinductive_List.llength_ltakeWhile_all",
     "(llength (ltakeWhile ?P ?xs) = llength ?xs) =
      (ltakeWhile ?P ?xs = ?xs)",
     template_bimplication
      (template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 2, template_var 0)),
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_var 0))),
    ("Coinductive_Nat.enat_add2_eq",
     "(?y + enat ?x = ?z + enat ?x) = (?y = ?z)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))),
       template_equation (template_var 2, template_var 0))),
    ("Coinductive_Nat.enat_add1_eq",
     "(enat ?x + ?y = enat ?x + ?z) = (?y = ?z)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Coinductive_Nat.enat_add_mono",
     "(enat ?x + ?y < enat ?x + ?z) = (?y < ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Coinductive_List.list_of_LCons_conv",
     "list_of (LCons ?x ?xs) =
      (if lfinite ?xs then ?x # list_of ?xs else undefined)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 5, template_var 0))),
         template_hole 0))),
    ("Coinductive_Stream.smap_unfold_stream",
     "smap ?f (unfold_stream ?SHD ?STL ?b) =
      unfold_stream (?f o ?SHD) ?STL ?b",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("Coinductive_Nat.min_enat2_conv_enat",
     "min ?a (enat ?b) =
      enat (case ?a of enat a' => min a' ?b | \<infinity> => ?b)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, t_empty), template_var 0),
           template_var 1)))),
    ("Coinductive_Nat.min_enat1_conv_enat",
     "min (enat ?a) ?b =
      enat (case ?b of enat b' => min ?a b' | \<infinity> => ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, t_empty), template_var 1),
           template_var 0)))),
    ("Coinductive_Nat.max_enat_minus1",
     "max ?n ?m - ?k = max (?n - ?k) (?m - ?k)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Coinductive_List.ldrop_eSuc",
     "ldrop (eSuc ?n) ?xs =
      (case ?xs of LNil => LNil | LCons x xs' => ldrop ?n xs')",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), t_empty),
         template_var 0))),
    ("Coinductive_List.ldropn_Suc",
     "ldropn (Suc ?n) ?xs =
      (case ?xs of LNil => LNil | LCons x xs' => ldropn ?n xs')",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), t_empty),
         template_var 0))),
    ("Coinductive_List.ltl_lfilter",
     "ltl (lfilter ?P ?xs) = lfilter ?P (ltl (ldropWhile (Not o ?P) ?xs))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1)),
             template_var 0))))),
    ("Coinductive_List.ldrop_ltake",
     "ldrop ?n (ltake ?m ?xs) = ltake (?m - ?n) (ldrop ?n ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Coinductive_List.ldropWhile_lmap",
     "ldropWhile ?P (lmap ?f ?xs) = lmap ?f (ldropWhile (?P o ?f) ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Coinductive_List.lfilter_lmap",
     "lfilter ?P (lmap ?f ?xs) = lmap ?f (lfilter (?P o ?f) ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Coinductive_List.lmap_lappend_distrib",
     "lmap ?f (lappend ?xs ?ys) = lappend (lmap ?f ?xs) (lmap ?f ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Coinductive_List.lmap_fst_lzip_conv_ltake",
     "lmap fst (lzip ?xs ?ys) =
      ltake (min (llength ?xs) (llength ?ys)) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 6, template_hole 5),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))),
         template_var 1))),
    ("Coinductive_List.lmap_snd_lzip_conv_ltake",
     "lmap snd (lzip ?xs ?ys) =
      ltake (min (llength ?xs) (llength ?ys)) ?ys",
     template_equation
      (template_app
        (template_app (template_hole 6, template_hole 5),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))),
         template_var 0))),
    ("Coinductive_List.ltake_ldrop",
     "ltake ?n (ldrop ?m ?xs) = ldrop ?m (ltake (?n + ?m) ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Coinductive_List.ltakeWhile_lmap",
     "ltakeWhile ?P (lmap ?f ?xs) = lmap ?f (ltakeWhile (?P o ?f) ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Coinductive_Stream.stakeWhile_smap",
     "stakeWhile ?P (smap ?f ?xs) = lmap ?f (stakeWhile (?P o ?f) ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Coinductive_List.ldrop_iterates",
     "ldrop (enat ?n) (iterates ?f ?x) = iterates ?f ((?f ^^ ?n) ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Coinductive_List.lappend_snocL1_conv_LCons2",
     "lappend (lappend ?xs (LCons ?y LNil)) ?ys =
      lappend ?xs (LCons ?y ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Coinductive_List.ltake_iterates_Suc",
     "ltake (enat ?n) (iterates Suc ?m) = llist_of [?m..<?n + ?m]",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Coinductive_List.ldrop_lzip",
     "ldrop ?n (lzip ?xs ?ys) = lzip (ldrop ?n ?xs) (ldrop ?n ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Coinductive_List.ldropn_lzip",
     "ldropn ?n (lzip ?xs ?ys) = lzip (ldropn ?n ?xs) (ldropn ?n ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Coinductive_List.ltake_lzip",
     "ltake ?n (lzip ?xs ?ys) = lzip (ltake ?n ?xs) (ltake ?n ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Coinductive_List.lzip_ltakeWhile_snd",
     "lzip ?xs (ltakeWhile ?P ?ys) = ltakeWhile (?P o snd) (lzip ?xs ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 0)))),
    ("Coinductive_List.lzip_inf_llist_inf_llist",
     "lzip (inf_llist ?f) (inf_llist ?g) = inf_llist (%n. (?f n, ?g n))",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("Coinductive_List.lzip_ltakeWhile_fst",
     "lzip (ltakeWhile ?P ?xs) ?ys = ltakeWhile (?P o fst) (lzip ?xs ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 0)))),
    ("Coinductive_List.list_of_LCons",
     "lfinite ?xs ==> list_of (LCons ?x ?xs) = ?x # list_of ?xs",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 2, template_var 1))))),
    ("Coinductive_List.drop_list_of",
     "lfinite ?xs ==> drop ?n (list_of ?xs) = list_of (ldropn ?n ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Coinductive_List.list_of_lmap",
     "lfinite ?xs ==> list_of (lmap ?f ?xs) = map ?f (list_of ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Coinductive_Stream.scount_simps",
     "?P ?\<omega> ==>
      scount ?P ?\<omega> = eSuc (scount ?P (stl ?\<omega>))",
     template_implication
      ([template_predicate (template_app (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 0, template_var 0)))))),
    ("Coinductive_List.lset_lSup",
     "Complete_Partial_Order.chain lprefix ?Y ==>
      lset (lSup ?Y) = \<Union> (lset ` ?Y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_hole 3),
             template_var 0))))),
    ("Coinductive_Stream.scount_simps",
     "~ ?P ?\<omega> ==> scount ?P ?\<omega> = scount ?P (stl ?\<omega>)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_var 1, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Coinductive_Nat.enat_add_sub_same",
     "?a ~= \<infinity> ==> ?a + ?b - ?a = ?b",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 1),
         template_var 0))),
    ("Coinductive_Nat.the_enat_eSuc",
     "?n ~= \<infinity> ==> the_enat (eSuc ?n) = Suc (the_enat ?n)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 0,
           template_app (template_hole 2, template_var 0))))),
    ("Coinductive_List.lhd_ltake",
     "?n ~= 0 ==> lhd (ltake ?n ?xs) = lhd ?xs",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Coinductive_List.llast_ldrop",
     "?n < llength ?xs ==> llast (ldrop ?n ?xs) = llast ?xs",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Quotient_Coinductive_List.Quotient_lmap_Abs_Rep",
     "Quotient3 ?R ?Abs ?Rep ==> lmap ?Abs (lmap ?Rep ?a) = ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Quotient_Coinductive_List.llist_quotient",
     "Quotient3 ?R ?Abs ?Rep ==>
      Quotient3 (llist_all2 ?R) (lmap ?Abs) (lmap ?Rep)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Coinductive_List.llist_all2_lconcatI",
     "llist_all2 (llist_all2 ?A) ?xss ?yss ==>
      llist_all2 ?A (lconcat ?xss) (lconcat ?yss)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Coinductive_Stream.scount_eq_0D",
     "scount ?P ?\<omega> = 0 ==> alw (%xs. ~ ?P xs) ?\<omega>",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 0)
           ))),
    ("Coinductive_Stream.scount_eq_0I",
     "alw (%xs. ~ ?P xs) ?\<omega> ==> scount ?P ?\<omega> = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, t_empty), template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Coinductive_Stream.less_sfirstD",
     "enat ?n < sfirst ?P ?\<omega> ==> ~ ?P (sdrop ?n ?\<omega>)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 3, template_var 2),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_var 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0))
               )
           ))),
    ("Coinductive_List.ltakeWhile_all",
     "ALL x:lset ?xs. ?P x ==> ltakeWhile ?P ?xs = ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("Coinductive_List.ldrop_eq_LConsD",
     "ldrop ?n ?xs = LCons ?y ?ys ==> ?n < llength ?xs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_inequation
        (less_than, template_var 3,
         template_app (template_hole 0, template_var 2)))),
    ("Coinductive_List.lprefix_antisym",
     "[| lprefix ?xs ?ys; lprefix ?ys ?xs |] ==> ?xs = ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Coinductive_List.lprefix_trans",
     "[| lprefix ?xs ?ys; lprefix ?ys ?zs |] ==> lprefix ?xs ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Coinductive_List.lprefix_not_lnullD",
     "[| lprefix ?xs ?ys; ~ lnull ?xs |] ==> ~ lnull ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 0, template_var 1))
            )],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("Coinductive_List.lset_mono",
     "lfp.mono_body
       (%f. case ?x of LNil => {} | LCons x xs => insert x (f xs))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_hole 3)),
             template_hole 3),
           t_empty)
         )),
    ("Coinductive_List.lset_lfilter",
     "lset (lfilter ?P ?xs) = {x: lset ?xs. ?P x}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app (template_hole 2, t_empty))),
    ("Coinductive_List.neq_LNil_conv",
     "(?xs ~= LNil) = (EX x xs'. ?xs = LCons x xs')",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 0),
           template_hole 3)),
       template_app (template_hole 2, t_empty))),
    ("Coinductive_List.llist_all2_inf_llist",
     "llist_all2 ?P (inf_llist ?f) (inf_llist ?g) =
      (ALL n. ?P (?f n) (?g n))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, t_empty))),
    ("Coinductive_List.llist_all2_lmap1",
     "llist_all2 ?P (lmap ?f ?xs) ?ys = llist_all2 (%x. ?P (?f x)) ?xs ?ys",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, t_empty), template_var 1),
         template_var 0))),
    ("Coinductive_List.lprefix_lappend_same",
     "lprefix (lappend ?xs ?ys) (lappend ?xs ?zs) =
      (lfinite ?xs --> lprefix ?ys ?zs)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("Coinductive_List.llength_ldrop",
     "llength (ldrop ?n ?xs) =
      (if ?n = \<infinity> then 0 else llength ?xs - ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_hole 2)),
               template_hole 1),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 5, template_var 0)),
               template_var 1))
           ))),
    ("Coinductive_List.llcp_lappend_same",
     "llcp (lappend ?xs ?ys) (lappend ?xs ?zs) =
      llength ?xs + llcp ?ys ?zs",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("Coinductive_List.ltl_lSup",
     "ltl (lSup ?A) = lSup (ltl ` (?A Int {xs. ~ lnull xs}))",
     template_equation
      (template_app
        (template_hole 6, template_app (template_hole 5, template_var 0)),
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_hole 6),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app (template_hole 2, t_empty)))))),
    ("Coinductive_List.ltl_lappend",
     "ltl (lappend ?xs ?ys) =
      (if lnull ?xs then ltl ?ys else lappend (ltl ?xs) ?ys)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 3, template_var 1)),
           template_var 0)))),
    ("Coinductive_List.ltl_ltakeWhile",
     "ltl (ltakeWhile ?P ?xs) =
      (if ?P (lhd ?xs) then ltakeWhile ?P (ltl ?xs) else LNil)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_var 1,
               template_app (template_hole 1, template_var 0))),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app (template_hole 4, template_var 0))),
         template_hole 0))),
    ("Coinductive_Stream.ltl_stakeWhile",
     "ltl (stakeWhile ?P ?xs) =
      (if ?P (shd ?xs) then stakeWhile ?P (stl ?xs) else LNil)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_var 1,
               template_app (template_hole 2, template_var 0))),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app (template_hole 1, template_var 0))),
         template_hole 0))),
    ("Coinductive_List.ldropn_ltake",
     "ldropn ?n (ltake ?m ?xs) = ltake (?m - enat ?n) (ldropn ?n ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 2))),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Coinductive_List.lfilter_lfilter",
     "lfilter ?P (lfilter ?Q ?xs) = lfilter (%x. ?P x & ?Q x) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, t_empty), template_var 0))),
    ("Coinductive_List.lnths_singleton",
     "lnths (LCons ?x LNil) ?A = (if 0 : ?A then LCons ?x LNil else LNil)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_hole 3)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_hole 3)),
         template_hole 3))),
    ("Coinductive_List.ltake_ldropn",
     "ltake ?n (ldropn ?m ?xs) = ldropn ?m (ltake (?n + enat ?m) ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 1))),
           template_var 0)))),
    ("Coinductive_List.corec_llist_never_stop",
     "corec_llist ?IS_LNIL ?LHD (%_. False) ?MORE ?LTL ?x =
      unfold_llist ?IS_LNIL ?LHD ?LTL ?x",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 3),
               t_empty),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 3),
           template_var 1),
         template_var 0))),
    ("Coinductive_List.lset_lappend_lfinite",
     "lfinite ?xs ==> lset (lappend ?xs ?ys) = lset ?xs Un lset ?ys",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("Coinductive_List.take_list_of",
     "lfinite ?xs ==>
      take ?n (list_of ?xs) = list_of (ltake (enat ?n) ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app (template_hole 2, template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1))))),
    ("Coinductive_List.lconcat_lappend",
     "lfinite ?xss ==>
      lconcat (lappend ?xss ?yss) = lappend (lconcat ?xss) (lconcat ?yss)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("Coinductive_Stream.smap_stream_of_llist",
     "~ lfinite ?xs ==>
      smap ?f (stream_of_llist ?xs) = stream_of_llist (lmap ?f ?xs)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app (template_hole 2, template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Coinductive_List.lnth_ltl",
     "~ lnull ?xs ==> lnth (ltl ?xs) ?n = lnth ?xs (Suc ?n)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Coinductive_List.lappend_ltl",
     "~ lnull ?xs ==> lappend (ltl ?xs) ?ys = ltl (lappend ?xs ?ys)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Coinductive_Stream.sfirst_eSuc",
     "~ ?P ?\<omega> ==>
      sfirst ?P ?\<omega> = eSuc (sfirst ?P (stl ?\<omega>))",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_var 1, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 0, template_var 0)))))),
    ("Coinductive_List.lfilter_LCons_seek",
     "~ ?p ?x ==> lfilter ?p (LCons ?x ?l) = lfilter ?p ?l",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_var 2, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Coinductive_List.llexord_lappend_leftI",
     "llexord ?r ?ys ?zs ==>
      llexord ?r (lappend ?xs ?ys) (lappend ?xs ?zs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Coinductive_List.llist_all2_ldropI",
     "llist_all2 ?P ?xs ?ys ==>
      llist_all2 ?P (ldrop ?n ?xs) (ldrop ?n ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Coinductive_List.llist_all2_ldropnI",
     "llist_all2 ?P ?xs ?ys ==>
      llist_all2 ?P (ldropn ?n ?xs) (ldropn ?n ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Coinductive_List.llist_all2_ltakeI",
     "llist_all2 ?P ?xs ?ys ==>
      llist_all2 ?P (ltake ?n ?xs) (ltake ?n ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Quotient_Coinductive_List.Quotient_llist_all2_lmap_Rep",
     "Quotient3 ?R ?Abs ?Rep ==>
      llist_all2 ?R (lmap ?Rep ?a) (lmap ?Rep ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Coinductive_List.lprefix_lappendD",
     "lprefix ?xs (lappend ?ys ?zs) ==> lprefix ?xs ?ys | lprefix ?ys ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 2))
           ))),
    ("Coinductive_List.llast_ldropn",
     "enat ?n < llength ?xs ==> llast (ldropn ?n ?xs) = llast ?xs",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Coinductive_List.llast_conv_lnth",
     "llength ?xs = eSuc (enat ?n) ==> llast ?xs = lnth ?xs ?n",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1),
          template_app
           (template_hole 4,
            template_app (template_hole 3, template_var 0)))],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_List.lprefix_llist_ofI",
     "EX zs. ?ys = ?xs @ zs ==> lprefix (llist_of ?xs) (llist_of ?ys)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Coinductive_List.ldropn_eq_LConsD",
     "ldropn ?n ?xs = LCons ?y ?ys ==> enat ?n < llength ?xs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_inequation
        (less_than, template_app (template_hole 1, template_var 3),
         template_app (template_hole 0, template_var 2)))),
    ("Coinductive_Stream.scount_finite",
     "ev (alw (%xs. ~ ?P xs)) ?\<omega> ==>
      scount ?P ?\<omega> < \<infinity>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5, template_app (template_hole 4, t_empty)),
              template_var 0)
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Coinductive_List.lfilter_False",
     "ALL x:lset ?xs. ~ ?P x ==> lfilter ?P ?xs = LNil",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Coinductive_List.lset_lzipD1",
     "(?x, ?y) : lset (lzip ?xs ?ys) ==> ?x : lset ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Coinductive_List.lset_lzipD2",
     "(?x, ?y) : lset (lzip ?xs ?ys) ==> ?y : lset ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Coinductive_List.lsorted_lmap",
     "[| lsorted ?xs; monotone (<=) (<=) ?f |] ==> lsorted (lmap ?f ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_hole 3),
                template_hole 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Coinductive_List.chain_lprefix_lSup",
     "[| Complete_Partial_Order.chain lprefix ?A; ?xs : ?A |]
      ==> lprefix ?xs (lSup ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Coinductive_List.case_llist_transfer",
     "(?B ===> (?A ===> llist_all2 ?A ===> ?B) ===> llist_all2 ?A ===> ?B)
       case_llist case_llist",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_var 1),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app (template_hole 2, template_var 0)),
                       template_var 1))),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0)),
                   template_var 1))),
             template_hole 1),
           template_hole 0)
         )),
    ("Quotient_Coinductive_List.llist_all2_respect",
     "((?R ===> ?R ===> (=)) ===> llist_all2 ?R ===> llist_all2 ?R ===> (=))
       llist_all2 llist_all2",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 0),
                   template_app
                    (template_app (template_hole 6, template_var 0),
                     template_hole 5))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 3, template_var 0)),
                   template_hole 5))),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.lmap_mono",
     "mono_llist
       (%lmap.
           case ?xs of LNil => LNil
           | LCons x xs => LCons (?f x) (lmap xs))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_hole 3)),
             template_hole 3),
           t_empty)
         )),
    ("Coinductive_List.lset_lappend_conv",
     "lset (lappend ?xs ?ys) =
      (if lfinite ?xs then lset ?xs Un lset ?ys else lset ?xs)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 4, template_var 1)),
             template_app (template_hole 4, template_var 0))),
         template_app (template_hole 4, template_var 1)))),
    ("Coinductive_List.LCons_image_Int_not_lnull",
     "LCons ?x ` ?A Int {xs. ~ lnull xs} = LCons ?x ` ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_var 0)),
         template_app (template_hole 2, t_empty)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0))),
    ("Coinductive_List.lfinite_ldropWhile",
     "lfinite (ldropWhile ?P ?xs) =
      ((EX x:lset ?xs. ~ ?P x) --> lfinite ?xs)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             t_empty)),
         template_app (template_hole 5, template_var 0)))),
    ("Coinductive_List.lfinite_ltakeWhile",
     "lfinite (ltakeWhile ?P ?xs) =
      (lfinite ?xs | (EX x:lset ?xs. ~ ?P x))",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 5, template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           t_empty)))),
    ("Coinductive_Nat.eSuc_le_iff",
     "(eSuc ?x <= ?y) = (EX y'. ?y = eSuc y' & ?x <= y')",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Coinductive_List.ltakeWhile_eq_LNil_iff",
     "(ltakeWhile ?P ?xs = LNil) = (?xs ~= LNil --> ~ ?P (lhd ?xs))",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_hole 3),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_hole 3))),
             template_app
              (template_hole 1,
               template_app
                (template_var 1,
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("Coinductive_List.LCons_lprefix_LCons",
     "lprefix (LCons ?x ?xs) (LCons ?y ?ys) = (?x = ?y & lprefix ?xs ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0))
           ))),
    ("Coinductive_List.lstrict_prefix_code",
     "lstrict_prefix (LCons ?x ?xs) (LCons ?y ?ys) =
      (?x = ?y & lstrict_prefix ?xs ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0))
           ))),
    ("Coinductive_List.llength_ltakeWhile_lt_iff",
     "(llength (ltakeWhile ?P ?xs) < llength ?xs) =
      (EX x:lset ?xs. ~ ?P x)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         t_empty))),
    ("Coinductive_Stream.szip_iterates",
     "szip (siterate ?f ?a) (siterate ?g ?b) =
      siterate (map_prod ?f ?g) (?a, ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Coinductive_Stream.szip_smap",
     "szip (smap ?f ?xs) (smap ?g ?ys) =
      smap (map_prod ?f ?g) (szip ?xs ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Coinductive_Nat.enat_unfold",
     "enat_unfold ?stop ?next ?a =
      (if ?stop ?a then 0 else eSuc (enat_unfold ?stop ?next (?next ?a)))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_var 2, template_var 0)),
           template_hole 1),
         template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_app (template_var 1, template_var 0)))))),
    ("Coinductive_Nat.epred_enat_unfold",
     "epred (enat_unfold ?stop ?next ?a) =
      (if ?stop ?a then 0 else enat_unfold ?stop ?next (?next ?a))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_var 2, template_var 0)),
           template_hole 0),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_app (template_var 1, template_var 0))))),
    ("Coinductive_List.llcp_ltake",
     "llcp (ltake ?n ?xs) (ltake ?m ?ys) = min (min ?n ?m) (llcp ?xs ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Coinductive_List.ltake_eSuc",
     "ltake (eSuc ?n) ?xs =
      (case ?xs of LNil => LNil | LCons x xs' => LCons x (ltake ?n xs'))",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), t_empty),
         template_var 0))),
    ("Coinductive_List.ldrop_LCons",
     "ldrop ?n (LCons ?x ?xs) =
      (case ?n of 0 => LCons ?x ?xs | eSuc n' => ldrop n' ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           t_empty),
         template_var 2))),
    ("Coinductive_List.ldropWhile_LCons",
     "ldropWhile ?P (LCons ?x ?xs) =
      (if ?P ?x then ldropWhile ?P ?xs else LCons ?x ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_var 2, template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Coinductive_List.ldropn_LCons",
     "ldropn ?n (LCons ?x ?xs) =
      (case ?n of 0 => LCons ?x ?xs | Suc n' => ldropn n' ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           t_empty),
         template_var 2))),
    ("Coinductive_List.ltake_LCons",
     "ltake ?n (LCons ?x ?xs) =
      (case ?n of 0 => LNil | eSuc n' => LCons ?x (ltake n' ?xs))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), t_empty),
         template_var 2))),
    ("Coinductive_List.ltake_plus_conv_lappend",
     "ltake (?n + ?m) ?xs =
      lappend (ltake ?n ?xs) (ltake ?m (ldrop ?n ?xs))",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Coinductive_List.ltakeWhile_LCons",
     "ltakeWhile ?P (LCons ?x ?xs) =
      (if ?P ?x then LCons ?x (ltakeWhile ?P ?xs) else LNil)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_var 2, template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0))),
         template_hole 0))),
    ("Coinductive_Stream.stakeWhile_SCons",
     "stakeWhile ?P (?x ## ?xs) =
      (if ?P ?x then LCons ?x (stakeWhile ?P ?xs) else LNil)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_var 2, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 0))),
         template_hole 0))),
    ("Coinductive_List.lappend_llist_of_LCons",
     "lappend (llist_of ?xs) (LCons ?y ?ys) =
      lappend (llist_of (?xs @ [?y])) ?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)))),
         template_var 0))),
    ("Coinductive_List.ldropWhile_repeat",
     "ldropWhile ?P (repeat ?x) = (if ?P ?x then LNil else repeat ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_var 1, template_var 0)),
           template_hole 0),
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)))),
    ("Coinductive_List.lfilter_repeat",
     "lfilter ?P (repeat ?x) = (if ?P ?x then repeat ?x else LNil)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_var 1, template_var 0)),
           template_app
            (template_app (template_hole 2, t_empty), template_var 0)),
         template_hole 0))),
    ("Coinductive_List.ltakeWhile_repeat",
     "ltakeWhile ?P (repeat ?x) = (if ?P ?x then repeat ?x else LNil)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_var 1, template_var 0)),
           template_app
            (template_app (template_hole 2, t_empty), template_var 0)),
         template_hole 0))),
    ("Coinductive_List.lmap_unfold_llist",
     "lmap ?f (unfold_llist ?IS_LNIL ?LHD ?LTL ?b) =
      unfold_llist ?IS_LNIL (?f o ?LHD) ?LTL ?b",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("Coinductive_List.lzip_inf_llist_llist_of",
     "lzip (inf_llist ?f) (llist_of ?xs) =
      llist_of (zip (map ?f [0..<length ?xs]) ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 1)),
         template_app (template_hole 6, template_var 0)),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 0)))),
           template_var 0)))),
    ("Coinductive_List.lzip_llist_of_inf_llist",
     "lzip (llist_of ?xs) (inf_llist ?f) =
      llist_of (zip ?xs (map ?f [0..<length ?xs]))",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 1)),
         template_app (template_hole 6, template_var 0)),
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 1))))))),
    ("Coinductive_List.lzip_simps",
     "lzip (LCons ?x ?xs) (LCons ?y ?ys) = LCons (?x, ?y) (lzip ?xs ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 0)))),
    ("Coinductive_List.llast_lappend_LCons",
     "lfinite ?xs ==>
      llast (lappend ?xs (LCons ?y ?ys)) = llast (LCons ?y ?ys)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Coinductive_List.lfilter_LCons_found",
     "?P ?x ==> lfilter ?P (LCons ?x ?xs) = LCons ?x (lfilter ?P ?xs)",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("Coinductive_Nat.epred_iadd1",
     "?a ~= 0 ==> epred (?a + ?b) = epred ?a + ?b",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 1)),
           template_var 0)))),
    ("Coinductive_Nat.mcont_enat_minus",
     "?m ~= \<infinity> ==> mcont Sup (<=) Sup (<=) (%n. n - ?m)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_hole 1),
                 template_hole 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_Nat.epred_minus_epred",
     "?m ~= 0 ==> epred ?n - epred ?m = ?n - ?m",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("Coinductive_List.lhd_ldrop",
     "?n < llength ?xs ==> lhd (ldrop ?n ?xs) = lnth ?xs (the_enat ?n)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Coinductive_List.lnth_ltake",
     "enat ?m < ?n ==> lnth (ltake ?n ?xs) ?m = lnth ?xs ?m",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 3, template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("Coinductive_Nat.enat_less_enat_plusI2",
     "enat ?y < ?z ==> enat (?x + ?y) < enat ?x + ?z",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 2, template_var 2),
          template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 0)),
           template_var 1)))),
    ("Coinductive_List.ltake_lappend1",
     "?n <= llength ?xs ==> ltake ?n (lappend ?xs ?ys) = ltake ?n ?xs",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 1)))),
    ("Coinductive_Nat.eSuc_mono",
     "monotone (fun_ord (<=)) (<=) ?f ==>
      monotone (fun_ord (<=)) (<=) (%x. eSuc (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_hole 2)),
                template_hole 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.lhd_ldropn",
     "enat ?n < llength ?xs ==> lhd (ldropn ?n ?xs) = lnth ?xs ?n",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 5, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Coinductive_List.llist_all2_lappend1D",
     "llist_all2 ?P (lappend ?xs ?xs') ?ys ==>
      llist_all2 ?P ?xs (ltake (llength ?xs) ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_var 0))
           ))),
    ("Coinductive_Nat.mono2mono_epred",
     "monotone ?orda (<=) ?t ==> monotone ?orda (<=) (%x. epred (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_Nat.mono2mono_eSuc",
     "monotone ?orda (<=) ?t ==> monotone ?orda (<=) (%x. eSuc (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mono2mono_ltl",
     "monotone ?orda lprefix ?t ==>
      monotone ?orda lprefix (%x. ltl (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mono2mono_lset",
     "monotone ?orda lprefix ?t ==> monotone ?orda (<=) (%x. lset (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_hole 3),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mono2mono_llength",
     "monotone ?orda lprefix ?t ==>
      monotone ?orda (<=) (%x. llength (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_hole 3),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mono2mono_lconcat",
     "monotone ?orda lprefix ?t ==>
      monotone ?orda lprefix (%x. lconcat (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_hole 3),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.lset_ltakeWhileD",
     "?x : lset (ltakeWhile ?P ?xs) ==> ?x : lset ?xs & ?P ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app (template_hole 2, template_var 0))),
             template_app (template_var 1, template_var 2))
           ))),
    ("Coinductive_List.lhd_ldropWhile",
     "EX x:lset ?xs. ~ ?P x ==> ~ ?P (lhd (ldropWhile ?P ?xs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              t_empty)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_var 0,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1)))
               )
           ))),
    ("Coinductive_List.antisym_llexord",
     "[| antisymp ?r; !!x. ~ ?r x x |] ==> antisymp (llexord ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Coinductive_List.lprefix_lhdD",
     "[| lprefix ?xs ?ys; ~ lnull ?xs |] ==> lhd ?xs = lhd ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 1))
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.lprefix_llength_eq_imp_eq",
     "[| lprefix ?xs ?ys; llength ?xs = llength ?ys |] ==> ?xs = ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Coinductive_List.ldistinct_lSup",
     "[| Complete_Partial_Order.chain lprefix ?Y; ALL xs:?Y. ldistinct xs |]
      ==> ldistinct (lSup ?Y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Coinductive_Nat.monotone_fun_eSuc", "gfp.mono_body (%f. eSuc (f ?x))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 3, template_app (template_hole 2, t_empty)),
             t_empty),
           t_empty)
         )),
    ("Coinductive_List.llast_lappend",
     "llast (lappend ?xs ?ys) =
      (if lnull ?ys then llast ?xs
       else if lfinite ?xs then llast ?ys else undefined)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 5, template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 5, template_var 0)),
           template_hole 0)))),
    ("Coinductive_List.lnth_LCons'",
     "lnth (LCons ?x ?xs) ?n = (if ?n = 0 then ?x else lnth ?xs (?n - 1))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_hole 2)),
               template_var 2),
             template_app
              (template_app (template_hole 6, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("Coinductive_Nat.enat_cocase_add_eq_if",
     "(case numeral ?v + ?n of 0 => ?a | eSuc x => ?f x) =
      (let pv = epred_numeral ?v in ?f (pv + ?n))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 3), template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         t_empty))),
    ("Coinductive_List.llist_all2_lmap2",
     "llist_all2 ?P ?xs (lmap ?g ?ys) =
      llist_all2 (%x y. ?P x (?g y)) ?xs ?ys",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, t_empty), template_var 2),
         template_var 0))),
    ("Coinductive_List.llength_ltakeWhile_eq_infinity",
     "(llength (ltakeWhile ?P ?xs) = \<infinity>) =
      (~ lfinite ?xs & ltakeWhile ?P ?xs = ?xs)",
     template_bimplication
      (template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_hole 4),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_var 0)),
               template_var 0))
           ))),
    ("Coinductive_List.lprefix_ltake_same",
     "lprefix (ltake ?n ?xs) (ltake ?m ?xs) =
      (?n <= ?m | llength ?xs <= ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Coinductive_Stream.sfirst_Stream",
     "sfirst ?P (?s ## ?x) =
      (if ?P (?s ## ?x) then 0 else eSuc (sfirst ?P ?x))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_var 2,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0))),
           template_hole 1),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 0))))),
    ("Coinductive_List.ltake_lappend",
     "ltake ?n (lappend ?xs ?ys) =
      lappend (ltake ?n ?xs) (ltake (?n - llength ?xs) ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 1))),
           template_var 0)))),
    ("Coinductive_List.unfold_llist_ltl_unroll",
     "unfold_llist ?IS_LNIL ?LHD ?LTL (?LTL ?b) =
      unfold_llist (?IS_LNIL o ?LTL) (?LHD o ?LTL) ?LTL ?b",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 1),
         template_app (template_var 1, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 1),
         template_var 0))),
    ("Coinductive_List.chain_lprefix_ltl",
     "Complete_Partial_Order.chain lprefix ?A ==>
      Complete_Partial_Order.chain lprefix
       (ltl ` (?A Int {xs. ~ lnull xs}))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app (template_hole 2, t_empty))))
           ))),
    ("Coinductive_Nat.enat_unfold_next",
     "~ ?stop ?a ==>
      enat_unfold ?stop ?next ?a =
      eSuc (enat_unfold ?stop ?next (?next ?a))",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_var 2, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0),
           template_var 1),
         template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0),
             template_app (template_var 0, template_var 1)))))),
    ("Coinductive_List.lSup_LCons",
     "?A ~= {} ==> lSup (LCons ?x ` ?A) = LCons ?x (lSup ?A)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 2, template_var 1))))),
    ("Quotient_Coinductive_List.LCons_preserve",
     "Quotient3 ?R ?Abs ?Rep ==>
      (?Rep ---> lmap ?Rep ---> lmap ?Abs) LCons = LCons",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 0),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app (template_hole 2, template_var 1))),
           template_hole 1),
         template_hole 0))),
    ("Coinductive_List.mono_llist_lappend2",
     "mono_llist ?A ==> mono_llist (%f. lappend ?xs (?A f))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_hole 2)),
                template_hole 1),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.lfilter_mono",
     "mono_llist ?A ==> mono_llist (%f. lfilter ?P (?A f))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_hole 2)),
                template_hole 1),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.LCons_mono",
     "mono_llist ?A ==> mono_llist (%f. LCons ?x (?A f))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_hole 2)),
                template_hole 1),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mono_llist_ltakeWhile",
     "mono_llist ?F ==> mono_llist (%f. ltakeWhile ?P (?F f))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_hole 2)),
                template_hole 1),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_Stream.eq_SConsD",
     "?xs = ?y ## ?ys ==> shd ?xs = ?y & stl ?xs = ?ys",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 2)),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 0, template_var 2)),
               template_var 0))
           ))),
    ("Coinductive_List.lnth_lappend1",
     "enat ?n < llength ?xs ==> lnth (lappend ?xs ?ys) ?n = lnth ?xs ?n",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 4, template_var 2),
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Coinductive_List.enat_llength_ldropn",
     "enat ?n <= llength ?xs ==> enat (?n - ?m) <= llength (ldropn ?m ?xs)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 2),
          template_app (template_hole 2, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Coinductive_Nat.mono2mono_enat_minus1",
     "monotone ?orda (<=) ?t ==> monotone ?orda (<=) (%x. ?t x - ?m1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mono2mono_ltake1",
     "monotone ?orda (<=) ?t ==>
      monotone ?orda lprefix (%x. ltake (?t x) ?xs1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_hole 3),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mono2mono_lappend2",
     "monotone ?orda lprefix ?t ==>
      monotone ?orda lprefix (%x. lappend ?xs1 (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mono2mono_ldrop2",
     "monotone ?orda lprefix ?t ==>
      monotone ?orda lprefix (%x. ldrop ?n1 (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mono2mono_ldropWhile",
     "monotone ?orda lprefix ?t ==>
      monotone ?orda lprefix (%x. ldropWhile ?P1 (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mono2mono_ldropn",
     "monotone ?orda lprefix ?t ==>
      monotone ?orda lprefix (%x. ldropn ?n1 (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mono2mono_lfilter",
     "monotone ?orda lprefix ?t ==>
      monotone ?orda lprefix (%x. lfilter ?P1 (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mono2mono_LCons",
     "monotone ?orda lprefix ?t ==>
      monotone ?orda lprefix (%x. LCons ?x1 (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mono2mono_ltake2",
     "monotone ?orda lprefix ?t ==>
      monotone ?orda lprefix (%x. ltake ?n1 (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mono2mono_ltakeWhile",
     "monotone ?orda lprefix ?t ==>
      monotone ?orda lprefix (%x. ltakeWhile ?P1 (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mono2mono_lmap",
     "monotone ?orda lprefix ?t ==>
      monotone ?orda lprefix (%x. lmap ?f1 (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_hole 3),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mono2mono_lzip1",
     "monotone ?orda lprefix ?t ==>
      monotone ?orda lprefix (%x. lzip (?t x) ?ys1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_hole 3),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mono2mono_lzip2",
     "monotone ?orda lprefix ?t ==>
      monotone ?orda lprefix (%x. lzip ?xs1 (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_hole 3),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.admissible_not_ldistinct",
     "mcont ?lubb ?ordb lSup lprefix ?f ==>
      ccpo.admissible ?lubb ?ordb (%x. ~ ldistinct (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 2),
                    template_var 1),
                  template_hole 4),
                template_hole 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             t_empty)
           ))),
    ("Coinductive_Stream.ev_alw_not_HLD_finite",
     "ev (alw (%xs. ~ ?P xs)) ?\<omega> ==>
      finite {i. ?P (sdrop i ?\<omega>)}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5, template_app (template_hole 4, t_empty)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 2, template_app (template_hole 1, t_empty))
           ))),
    ("Coinductive_List.lhd_ldropWhile_in_lset",
     "EX x:lset ?xs. ~ ?P x ==> lhd (ldropWhile ?P ?xs) : lset ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))),
             template_app (template_hole 4, template_var 1))
           ))),
    ("Coinductive_List.ltake_enat_lprefix_imp_lprefix",
     "(!!n. lprefix (ltake (enat n) ?xs) (ltake (enat n) ?ys)) ==>
      lprefix ?xs ?ys",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1), template_var 0)
           ))),
    ("Coinductive_List.ltake_enat_eq_imp_eq",
     "(!!n. ltake (enat n) ?xs = ltake (enat n) ?ys) ==> ?xs = ?ys",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Coinductive_List.ldistinct_lhdD",
     "[| ldistinct ?xs; ~ lnull ?xs |] ==> lhd ?xs ~: lset (ltl ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)))
               )
           ))),
    ("Coinductive_List.lsorted_lmap'",
     "[| ord.lsorted ?orda ?xs; monotone ?orda ?ordb ?f |]
      ==> ord.lsorted ?ordb (lmap ?f ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("Coinductive_Stream.sset_stream_of_llist",
     "[| ~ lfinite ?xs; ~ lfinite ?xs |]
      ==> sset (stream_of_llist ?xs) = lset ?xs",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 0))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.llist_all2_lhdD",
     "[| llist_all2 ?P ?xs ?ys; ~ lnull ?xs |] ==> ?P (lhd ?xs) (lhd ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_var 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Coinductive_List.llist_all2_lhdD2",
     "[| llist_all2 ?P ?xs ?ys; ~ lnull ?ys |] ==> ?P (lhd ?xs) (lhd ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_var 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Coinductive_List.lset_iterates",
     "lset (iterates ?f ?x) = {(?f ^^ n) ?x |n. True}",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Coinductive_List.LCons_lprefix_conv",
     "lprefix (LCons ?x ?xs) ?ys =
      (EX ys'. ?ys = LCons ?x ys' & lprefix ?xs ys')",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Coinductive_List.llength_ltakeWhile_eq_infinity'",
     "(llength (ltakeWhile ?P ?xs) = \<infinity>) =
      (~ lfinite ?xs & (ALL x:lset ?xs. ?P x))",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 1),
               template_var 0))),
         template_hole 5),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           t_empty)))),
    ("Coinductive_List.llist_all2_LCons_LCons",
     "llist_all2 ?R (LCons ?x21.0 ?x22.0) (LCons ?y21.0 ?y22.0) =
      (?R ?x21.0 ?y21.0 & llist_all2 ?R ?x22.0 ?y22.0)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 4),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_var 4, template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_var 2),
           template_var 0)))),
    ("Coinductive_List.llcp_LCons",
     "llcp (LCons ?x ?xs) (LCons ?y ?ys) =
      (if ?x = ?y then eSuc (llcp ?xs ?ys) else 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 1)),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 0))),
             template_hole 0)
           ))),
    ("Coinductive_List.lconcat_ltake",
     "lconcat (ltake (enat ?n) ?xss) =
      ltake (SUM i<?n. llength (lnth ?xss i)) (lconcat ?xss)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, t_empty),
             template_app (template_hole 0, template_var 1))),
         template_app (template_hole 7, template_var 0)))),
    ("Coinductive_List.lfilter_LCons",
     "lfilter ?P (LCons ?x ?xs) =
      (if ?P ?x then LCons ?x (lfilter ?P ?xs) else lfilter ?P ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_var 2, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Coinductive_List.ltl_unfold_llist",
     "ltl (unfold_llist ?IS_LNIL ?LHD ?LTL ?a) =
      (if ?IS_LNIL ?a then LNil
       else unfold_llist ?IS_LNIL ?LHD ?LTL (?LTL ?a))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_var 3, template_var 0)),
           template_hole 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1),
           template_app (template_var 1, template_var 0))))),
    ("Coinductive_List.lzip_lmap2",
     "lzip ?xs (lmap ?f ?ys) = lmap (%(x, y). (x, ?f y)) (lzip ?xs ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Coinductive_List.lzip_lmap1",
     "lzip (lmap ?f ?xs) ?ys = lmap (%(x, y). (?f x, y)) (lzip ?xs ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_List.lfilter_lappend_lfinite",
     "lfinite ?xs ==>
      lfilter ?P (lappend ?xs ?ys) =
      lappend (lfilter ?P ?xs) (lfilter ?P ?ys)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Coinductive_Nat.chain_epredI",
     "Complete_Partial_Order.chain (<=) ?Y ==>
      Complete_Partial_Order.chain (<=) (epred ` (?Y Int {x. x ~= 0}))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_hole 7),
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app (template_hole 3, t_empty))))
           ))),
    ("Coinductive_List.lfinite_lSup_chain",
     "Complete_Partial_Order.chain lprefix ?A ==>
      lfinite (lSup ?A) = (finite ?A & (ALL xs:?A. lfinite xs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 0), t_empty))))),
    ("Coinductive_List.lhd_funpow_lmap",
     "~ lnull ?xs ==> lhd ((lmap ?f ^^ ?n) ?xs) = (?f ^^ ?n) (lhd ?xs)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 2))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 1, template_var 0)),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_app (template_hole 3, template_var 2))))),
    ("Coinductive_List.lnth_lmap",
     "enat ?n < llength ?xs ==> lnth (lmap ?f ?xs) ?n = ?f (lnth ?xs ?n)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 5, template_var 2),
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_var 0,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("Coinductive_List.admissible_ldistinct",
     "mcont ?lub ?ord lSup lprefix ?f ==>
      ccpo.admissible ?lub ?ord (%x. ldistinct (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 2),
                    template_var 1),
                  template_hole 3),
                template_hole 2),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             t_empty)
           ))),
    ("Coinductive_List.iterates_equality",
     "(!!x. ?h x = LCons x (lmap ?f (?h x))) ==> ?h = iterates ?f",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.llist_all2_reflI",
     "(!!x. x : lset ?xs ==> ?P x x) ==> llist_all2 ?P ?xs ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1),
             template_var 1)
           ))),
    ("Coinductive_Nat.enat_less_imp_le",
     "(!!k. ?n < enat k ==> ?m < enat k) ==> ?m <= ?n",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation (less_equals, template_var 0, template_var 1))),
    ("Coinductive_List.llast_lmap",
     "[| lfinite ?xs; ~ lnull ?xs |]
      ==> llast (lmap ?f ?xs) = ?f (llast ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_var 0,
           template_app (template_hole 0, template_var 1))))),
    ("Coinductive_List.lprefix_down_linear",
     "[| lprefix ?xs ?zs; lprefix ?ys ?zs |]
      ==> lprefix ?xs ?ys | lprefix ?ys ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2))
           ))),
    ("Coinductive_List.lhd_ltakeWhile",
     "[| ~ lnull ?xs; ?P (lhd ?xs) |]
      ==> lhd (ltakeWhile ?P ?xs) = lhd ?xs",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_var 0,
              template_app (template_hole 2, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app (template_hole 2, template_var 1)))),
    ("Coinductive_Nat.Le_enat_imp_ile_enat_k",
     "[| (?m, ?n) : Le_enat; ?n < enat ?l |] ==> ?m < enat ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_hole 2)
            ),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 0, template_var 0))],
       template_inequation
        (less_than, template_var 2,
         template_app (template_hole 0, template_var 0)))),
    ("Quotient_Coinductive_List.transpD",
     "[| transp ?R; ?R ?a ?b; ?R ?b ?c |] ==> ?R ?a ?c",
     template_implication
      ([template_predicate (template_app (template_hole 0, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 2), template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 1), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_var 3, template_var 2), template_var 0)
           ))),
    ("Coinductive_List.unfold_llist_transfer",
     "((?A ===> (=)) ===>
       (?A ===> ?B) ===> (?A ===> ?A) ===> ?A ===> llist_all2 ?B)
       unfold_llist unfold_llist",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_var 1),
                   template_hole 8)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 1),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 1),
                       template_var 1)),
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_app (template_hole 2, template_var 0))))),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.ltakeWhile_mono",
     "mono_llist
       (%ltakeWhile.
           case ?xs of LNil => LNil
           | LCons x xs => if ?P x then LCons x (ltakeWhile xs) else LNil)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4)),
             template_hole 4),
           t_empty)
         )),
    ("Coinductive_List.lset_conv_lnth",
     "lset ?xs = {lnth ?xs n |n. enat n < llength ?xs}",
     template_equation
      (template_app (template_hole 8, template_var 0),
       template_app (template_hole 7, t_empty))),
    ("Coinductive_List.lfinite_lconcat",
     "lfinite (lconcat ?xss) =
      (lfinite (lfilter (%xs. ~ lnull xs) ?xss) &
       (ALL xs:lset ?xss. lfinite xs))",
     template_equation
      (template_app
        (template_hole 8, template_app (template_hole 7, template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, t_empty), template_var 0))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           t_empty)))),
    ("Coinductive_List.in_lset_conv_lnth",
     "(?x : lset ?xs) = (EX n. enat n < llength ?xs & lnth ?xs n = ?x)",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1),
         template_app (template_hole 7, template_var 0)),
       template_app (template_hole 6, t_empty))),
    ("Coinductive_List.llist_all2_right",
     "llist_all2 (%_. ?P) ?xs ?ys =
      (llength ?xs = llength ?ys & (ALL x:lset ?ys. ?P x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, t_empty), template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 1)),
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               t_empty))
           ))),
    ("Coinductive_List.llcp_eq_0_iff",
     "(llcp ?xs ?ys = 0) = (lnull ?xs | lnull ?ys | lhd ?xs ~= lhd ?ys)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, template_var 1), template_var 0),
         template_hole 5),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1)),
                   template_app (template_hole 0, template_var 0)))))
           ))),
    ("Coinductive_List.lmap_eq_lmap_conv_llist_all2",
     "(lmap ?f ?xs = lmap ?g ?ys) = llist_all2 (%x y. ?f x = ?g y) ?xs ?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, t_empty), template_var 2),
         template_var 0))),
    ("Coinductive_Stream.scount_eq",
     "scount ?P ?\<omega> =
      (if alw (ev ?P) ?\<omega> then \<infinity>
       else enat (card {i. ?P (sdrop i ?\<omega>)}))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 1)),
               template_var 0)),
           template_hole 4),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2, template_app (template_hole 1, t_empty)))))),
    ("Coinductive_Stream.sfirst_eq_Inf",
     "sfirst ?P ?\<omega> = \<Sqinter> {enat i |i. ?P (sdrop i ?\<omega>)}",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_hole 5, template_app (template_hole 4, t_empty)))),
    ("Coinductive_List.lfilter_conv_lnths",
     "lfilter ?P ?xs =
      lnths ?xs {n. enat n < llength ?xs & ?P (lnth ?xs n)}",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 6, template_var 0),
         template_app (template_hole 5, t_empty)))),
    ("Coinductive_Stream.llist_of_stream_corec_stream",
     "llist_of_stream (corec_stream ?SHD ?endORmore ?STL_more ?STL_end ?x) =
      corec_llist (%_. False) ?SHD ?endORmore (llist_of_stream o ?STL_more)
       ?STL_end ?x",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, t_empty), template_var 4),
               template_var 3),
             template_app
              (template_app (template_hole 0, template_hole 4),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("Coinductive_List_Prefix.llist_inf_simps",
     "LCons ?x ?xs \<sqinter> LCons ?y ?ys =
      (if ?x = ?y then LCons ?x (?xs \<sqinter> ?ys) else LNil)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 0))),
             template_hole 0)
           ))),
    ("Coinductive_List.lSup_strict_prefixes",
     "~ lfinite ?xs ==> lSup {ys. lprefix ys ?xs & ys ~= ?xs} = ?xs",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_var 0))),
    ("Coinductive_List.ltl_funpow_lmap",
     "~ lnull ?xs ==>
      ltl ((lmap ?f ^^ ?n) ?xs) = (lmap ?f ^^ ?n) (ltl ?xs)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0)),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0)),
           template_app (template_hole 2, template_var 2))))),
    ("Coinductive_Nat.max_Sup_enat2",
     "?Y ~= {} ==> max ?x (\<Squnion> ?Y) = \<Squnion> (max ?x ` ?Y)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 1))))),
    ("Coinductive_Nat.max_Sup_enat1",
     "?Y ~= {} ==> max (\<Squnion> ?Y) ?x = (\<Squnion>y\<in>?Y. max y ?x)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 1))))),
    ("Coinductive_Nat.Sup_image_eadd1",
     "?Y ~= {} ==> (\<Squnion>y\<in>?Y. y + ?x) = \<Squnion> ?Y + ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_var 0)))),
    ("Coinductive_Nat.Sup_image_eadd2",
     "?Y ~= {} ==> \<Squnion> ((+) ?x ` ?Y) = ?x + \<Squnion> ?Y",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 2, template_var 1))))),
    ("Coinductive_Nat.Sup_enat_minus1",
     "?m ~= \<infinity> ==>
      \<Squnion> ?A - ?m = (\<Squnion>n\<in>?A. n - ?m)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 0))))),
    ("Coinductive_List.lfilter_lconcat_lfinite",
     "ALL xs:lset ?xss. lfinite xs ==>
      lfilter ?P (lconcat ?xss) = lconcat (lmap (lfilter ?P) ?xss)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 0)),
             template_var 1))))),
    ("Coinductive_List.ltakeWhile_nth",
     "enat ?i < llength (ltakeWhile ?P ?xs) ==>
      lnth (ltakeWhile ?P ?xs) ?i = lnth ?xs ?i",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 4, template_var 2),
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)))],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Coinductive_List.lnth_llength_ltakeWhile",
     "llength (ltakeWhile ?P ?xs) < llength ?xs ==>
      ~ ?P (lnth ?xs (the_enat (llength (ltakeWhile ?P ?xs))))",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)),
          template_app (template_hole 4, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_var 1,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_app
                    (template_hole 0,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_var 0)))))
               )
           ))),
    ("Coinductive_List.list_of_lappend",
     "[| lfinite ?xs; lfinite ?ys |]
      ==> list_of (lappend ?xs ?ys) = list_of ?xs @ list_of ?ys",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("Coinductive_Nat.epred_Max",
     "[| finite ?A; ?A ~= {} |] ==> epred (Max ?A) = Max (epred ` ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_hole 2),
             template_var 0))))),
    ("Coinductive_List.lhd_lconcat",
     "[| ~ lnull ?xss; ~ lnull (lhd ?xss) |]
      ==> lhd (lconcat ?xss) = lhd (lhd ?xss)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 0))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 3, template_var 0))))),
    ("Coinductive_List.llist_of_eq_LCons_conv",
     "(llist_of ?xs = LCons ?y ?ys) =
      (EX xs'. ?xs = ?y # xs' & ?ys = llist_of xs')",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Coinductive_List.in_lset_lappend_iff",
     "(?x : lset (lappend ?xs ?ys)) =
      (?x : lset ?xs | lfinite ?xs & ?x : lset ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app (template_hole 4, template_var 1))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app (template_hole 4, template_var 0)))))),
    ("Coinductive_List.lzip_conv_lzip_ltake_min_llength",
     "lzip ?xs ?ys =
      lzip (ltake (min (llength ?xs) (llength ?ys)) ?xs)
       (ltake (min (llength ?xs) (llength ?ys)) ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_app (template_hole 1, template_var 0))),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1)),
               template_app (template_hole 1, template_var 0))),
           template_var 0)))),
    ("Quotient_Coinductive_List.llist_all2_preserve2",
     "Quotient3 ?R ?Abs ?Rep ==>
      llist_all2 ((?Rep ---> ?Rep ---> id) ?R) ?l ?m = (?l = ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app
                       (template_app (template_hole 3, template_var 2),
                        template_app
                         (template_app (template_hole 2, template_var 2),
                          template_hole 1)),
                      template_var 4)),
                  template_var 1),
                template_var 0)
              )],
         template_equation (template_var 1, template_var 0)))),
    ("Coinductive_List.ldropn_Suc_conv_ldropn",
     "enat ?n < llength ?xs ==>
      LCons (lnth ?xs ?n) (ldropn (Suc ?n) ?xs) = ldropn ?n ?xs",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Coinductive_List.lset_lconcat_lfinite",
     "ALL xs:lset ?xss. lfinite xs ==>
      lset (lconcat ?xss) = \<Union> (lset ` lset ?xss)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty),
             template_app (template_hole 6, template_var 0)))))),
    ("Coinductive_Nat.mcont2mcont_epred",
     "mcont ?lub ?ord Sup (<=) ?t ==>
      mcont ?lub ?ord Sup (<=) (%x. epred (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1),
                  template_hole 2),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 1),
                 template_hole 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_Nat.mcont2mcont_eSuc",
     "mcont ?lub ?ord Sup (<=) ?t ==>
      mcont ?lub ?ord Sup (<=) (%x. eSuc (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1),
                  template_hole 2),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 1),
                 template_hole 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mcont2mcont_ltl",
     "mcont ?lub ?ord lSup lprefix ?t ==>
      mcont ?lub ?ord lSup lprefix (%x. ltl (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1),
                  template_hole 2),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 1),
                 template_hole 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mcont2mcont_lset",
     "mcont ?lub ?ord lSup lprefix ?t ==>
      mcont ?lub ?ord \<Union> (<=) (%x. lset (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 2),
                    template_var 1),
                  template_hole 5),
                template_hole 4),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 1),
                 template_hole 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mcont2mcont_llength",
     "mcont ?lub ?ord lSup lprefix ?t ==>
      mcont ?lub ?ord Sup (<=) (%x. llength (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 2),
                    template_var 1),
                  template_hole 5),
                template_hole 4),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 1),
                 template_hole 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mcont2mcont_lconcat",
     "mcont ?lub ?ord lSup lprefix ?t ==>
      mcont ?lub ?ord lSup lprefix (%x. lconcat (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 2),
                    template_var 1),
                  template_hole 5),
                template_hole 4),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 1),
                 template_hole 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.llength_lconcat_eqI",
     "llist_all2 (%xs ys. llength xs = llength ys) ?xss ?yss ==>
      llength (lconcat ?xss) = llength (lconcat ?yss)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, t_empty), template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 1, template_var 1)),
         template_app
          (template_hole 2,
           template_app (template_hole 0, template_var 0))))),
    ("Coinductive_List.llist_less_induct",
     "(!!xs. (!!ys. lstrict_prefix ys xs ==> ?P ys) ==> ?P xs) ==> ?P ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Coinductive_List.lprefix_lnthD",
     "[| lprefix ?xs ?ys; enat ?n < llength ?xs |]
      ==> lnth ?xs ?n = lnth ?ys ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_app (template_hole 3, template_var 0),
          template_app (template_hole 2, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_List.llist_all2_lsetD1",
     "[| llist_all2 ?P ?xs ?ys; ?x : lset ?xs |]
      ==> EX y:lset ?ys. ?P ?x y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             t_empty)
           ))),
    ("Coinductive_List.llist_all2_lsetD2",
     "[| llist_all2 ?P ?xs ?ys; ?y : lset ?ys |]
      ==> EX x:lset ?xs. ?P x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             t_empty)
           ))),
    ("Coinductive_List.llist_all2_lappend1D",
     "[| llist_all2 ?P (lappend ?xs ?xs') ?ys; lfinite ?xs |]
      ==> llist_all2 ?P ?xs' (ldrop (llength ?xs) ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 2, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_var 1),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_var 0))
           ))),
    ("Coinductive_Nat.finite_imageD2",
     "[| finite (?f ` ?A); inj_on ?f (?A - ?B); finite ?B |] ==> finite ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            ),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Coinductive_Stream.snth_shift",
     "(?xs @- ?ys) !! ?n =
      (if ?n < length ?xs then ?xs ! ?n else ?ys !! (?n - length ?xs))",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app (template_hole 2, template_var 2))),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app (template_hole 2, template_var 2)))))),
    ("Coinductive_List.llist_all2_left",
     "llist_all2 (%x _. ?P x) ?xs ?ys =
      (llength ?xs = llength ?ys & (ALL x:lset ?xs. ?P x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, t_empty), template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 1)),
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               t_empty))
           ))),
    ("Coinductive_Stream.smap_corec_stream",
     "smap ?f (corec_stream ?SHD ?endORmore ?STL_end ?STL_more ?b) =
      corec_stream (?f o ?SHD) ?endORmore (smap ?f o ?STL_end) ?STL_more
       ?b",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 5),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 4)),
               template_var 3),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 4, template_var 5)),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("Coinductive_List.lzip_iterates",
     "lzip (iterates ?f ?x) (iterates ?g ?y) =
      iterates (%(x, y). (?f x, ?g y)) (?x, ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Coinductive_List.lzip_lmap",
     "lzip (lmap ?f ?xs) (lmap ?g ?ys) =
      lmap (%(x, y). (?f x, ?g y)) (lzip ?xs ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Coinductive_List.ltake_lappend2",
     "llength ?xs <= ?n ==>
      ltake ?n (lappend ?xs ?ys) =
      lappend ?xs (ltake (?n - llength ?xs) ?ys)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_app (template_hole 4, template_var 2))),
             template_var 0))))),
    ("Coinductive_List.split_llist",
     "?x : lset ?xs ==>
      EX ys zs. ?xs = lappend ys (LCons ?x zs) & lfinite ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 0))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Coinductive_List.lnth_beyond",
     "llength ?xs <= enat ?n ==>
      lnth ?xs ?n = undefined (?n - (case llength ?xs of enat m => m))",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 7, template_var 1),
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app
                (template_app (template_hole 1, t_empty), template_hole 0),
               template_app (template_hole 7, template_var 1))))))),
    ("Coinductive_List.ldropn_lappend2",
     "llength ?xs <= enat ?n ==>
      ldropn ?n (lappend ?xs ?ys) =
      ldropn (?n - the_enat (llength ?xs)) ?ys",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 6, template_var 2),
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_hole 0,
                 template_app (template_hole 6, template_var 2)))),
           template_var 0)))),
    ("Coinductive_List.lnth_ldropn",
     "enat (?n + ?m) < llength ?xs ==>
      lnth (ldropn ?n ?xs) ?m = lnth ?xs (?m + ?n)",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 2))))),
    ("Coinductive_List.ltakeWhile_lappend2",
     "lset ?xs <= {x. ?P x} ==>
      ltakeWhile ?P (lappend ?xs ?ys) = lappend ?xs (ltakeWhile ?P ?ys)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 2),
          template_app (template_hole 3, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Coinductive_List.mcont2mcont_ltake1",
     "mcont ?lub ?ord Sup (<=) ?t ==>
      mcont ?lub ?ord lSup lprefix (%x. ltake (?t x) ?xs1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 3),
                    template_var 2),
                  template_hole 5),
                template_hole 4),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 2),
                 template_hole 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mcont2mcont_lappend2",
     "mcont ?lub ?ord lSup lprefix ?t ==>
      mcont ?lub ?ord lSup lprefix (%x. lappend ?xs1 (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2),
                  template_hole 2),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 2),
                 template_hole 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mcont2monct_ldrop2",
     "mcont ?lub ?ord lSup lprefix ?t ==>
      mcont ?lub ?ord lSup lprefix (%x. ldrop ?n1 (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2),
                  template_hole 2),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 2),
                 template_hole 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mcont2mcont_ldropWhile",
     "mcont ?lub ?ord lSup lprefix ?t ==>
      mcont ?lub ?ord lSup lprefix (%x. ldropWhile ?P1 (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2),
                  template_hole 2),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 2),
                 template_hole 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mcont2mcont_ldropn",
     "mcont ?lub ?ord lSup lprefix ?t ==>
      mcont ?lub ?ord lSup lprefix (%x. ldropn ?n1 (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2),
                  template_hole 2),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 2),
                 template_hole 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mcont2mcont_lfilter",
     "mcont ?lub ?ord lSup lprefix ?t ==>
      mcont ?lub ?ord lSup lprefix (%x. lfilter ?P1 (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2),
                  template_hole 2),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 2),
                 template_hole 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mcont2mcont_LCons",
     "mcont ?lub ?ord lSup lprefix ?t ==>
      mcont ?lub ?ord lSup lprefix (%x. LCons ?x1 (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2),
                  template_hole 2),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 2),
                 template_hole 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mcont2mcont_ltake2",
     "mcont ?lub ?ord lSup lprefix ?t ==>
      mcont ?lub ?ord lSup lprefix (%x. ltake ?n1 (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2),
                  template_hole 2),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 2),
                 template_hole 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mcont2mcont_ltakeWhile",
     "mcont ?lub ?ord lSup lprefix ?t ==>
      mcont ?lub ?ord lSup lprefix (%x. ltakeWhile ?P1 (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2),
                  template_hole 2),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 2),
                 template_hole 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mcont2mcont_lmap",
     "mcont ?lub ?ord lSup lprefix ?t ==>
      mcont ?lub ?ord lSup lprefix (%x. lmap ?f1 (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 3),
                    template_var 2),
                  template_hole 5),
                template_hole 4),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 2),
                 template_hole 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mcont2mcont_lzip1",
     "mcont ?lub ?ord lSup lprefix ?t ==>
      mcont ?lub ?ord lSup lprefix (%x. lzip (?t x) ?ys1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 3),
                    template_var 2),
                  template_hole 5),
                template_hole 4),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 2),
                 template_hole 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.mcont2mcont_lzip2",
     "mcont ?lub ?ord lSup lprefix ?t ==>
      mcont ?lub ?ord lSup lprefix (%x. lzip ?xs1 (?t x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 3),
                    template_var 2),
                  template_hole 5),
                template_hole 4),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 2),
                 template_hole 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.lhd_lzip",
     "[| ~ lnull ?xs; ~ lnull ?ys |]
      ==> lhd (lzip ?xs ?ys) = (lhd ?xs, lhd ?ys)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 7, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Coinductive_List.ltl_lzip",
     "[| ~ lnull ?xs; ~ lnull ?ys |]
      ==> ltl (lzip ?xs ?ys) = lzip (ltl ?xs) (ltl ?ys)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Coinductive_List.llist_all2_lnthD",
     "[| llist_all2 ?P ?xs ?ys; enat ?n < llength ?xs |]
      ==> ?P (lnth ?xs ?n) (lnth ?ys ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_app (template_hole 3, template_var 0),
          template_app (template_hole 2, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_var 3,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Coinductive_List.llist_all2_lnthD2",
     "[| llist_all2 ?P ?xs ?ys; enat ?n < llength ?ys |]
      ==> ?P (lnth ?xs ?n) (lnth ?ys ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_app (template_hole 3, template_var 0),
          template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_var 3,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Coinductive_List.ltakeWhile_lappend1",
     "[| ?x : lset ?xs; ~ ?P ?x |]
      ==> ltakeWhile ?P (lappend ?xs ?ys) = ltakeWhile ?P ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, template_var 2))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_var 1, template_var 3))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Coinductive_List.lappend_lprefixE",
     "[| lprefix (lappend ?xs ?ys) ?zs;
         !!zs'. ?zs = lappend ?xs zs' ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Coinductive_Nat.enat_coexhaust",
     "[| ?n = 0 ==> ?thesis; !!n'. ?n = eSuc n' ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_implication
         ([template_equation (template_var 1, template_hole 2)],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Coinductive_List.llist_all2_trans",
     "[| llist_all2 ?P ?xs ?ys; llist_all2 ?P ?ys ?zs; transp ?P |]
      ==> llist_all2 ?P ?xs ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 0, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Coinductive_List.lnth_lappend_llist_of",
     "lnth (lappend (llist_of ?xs) ?ys) ?n =
      (if ?n < length ?xs then ?xs ! ?n else lnth ?ys (?n - length ?xs))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app (template_hole 2, template_var 2))),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 7, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app (template_hole 2, template_var 2)))))),
    ("Coinductive_List.ldistinct_lappend",
     "ldistinct (lappend ?xs ?ys) =
      (ldistinct ?xs &
       (lfinite ?xs --> ldistinct ?ys & lset ?xs Int lset ?ys = {}))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 8, template_var 1)),
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 1)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 8, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app (template_hole 1, template_var 1)),
                       template_app (template_hole 1, template_var 0))),
                   template_hole 0))))
           ))),
    ("Coinductive_List.lfinite_lfilter",
     "lfinite (lfilter ?P ?xs) =
      (lfinite ?xs | finite {n. enat n < llength ?xs & ?P (lnth ?xs n)})",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app (template_hole 8, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 7, template_app (template_hole 9, template_var 0)),
         template_app
          (template_hole 6, template_app (template_hole 5, t_empty))))),
    ("Coinductive_List_Prefix.llist_inf_eq_LNil",
     "lnull (?xs \<sqinter> ?ys) =
      (?xs ~= LNil --> ?ys ~= LNil --> lhd ?xs ~= lhd ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_hole 2))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_hole 2))),
               template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1)),
                   template_app (template_hole 0, template_var 0)))))
           ))),
    ("Coinductive_List.lprefix_LCons_conv",
     "lprefix ?xs (LCons ?y ?ys) =
      (?xs = LNil | (EX xs'. ?xs = LCons ?y xs' & lprefix xs' ?ys))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_hole 2)),
             template_app (template_hole 1, t_empty))
           ))),
    ("Coinductive_List.llexord_code",
     "llexord ?r (LCons ?x ?xs) (LCons ?y ?ys) =
      (?r ?x ?y | ?x = ?y & llexord ?r ?xs ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_var 4, template_var 3),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 4),
                   template_var 2),
                 template_var 0)))
           ))),
    ("Coinductive_List.llexord_LCons_LCons",
     "llexord ?r (LCons ?x ?xs) (LCons ?y ?ys) =
      (?x = ?y & llexord ?r ?xs ?ys | ?r ?x ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_app (template_hole 4, template_var 4),
                     template_var 2),
                   template_var 0))),
             template_app
              (template_app (template_var 4, template_var 3),
               template_var 1))
           ))),
    ("Coinductive_Stream.unfold_stream_eq_SCons",
     "(unfold_stream ?SHD ?STL ?b = ?x ## ?xs) =
      (?x = ?SHD ?b & ?xs = unfold_stream ?SHD ?STL (?STL ?b))",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_app (template_var 4, template_var 2))),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 4),
                   template_var 3),
                 template_app (template_var 3, template_var 2))))
           ))),
    ("Coinductive_List.llength_ldropWhile",
     "llength (ldropWhile ?P ?xs) =
      (if EX x:lset ?xs. ~ ?P x
       then llength ?xs - llength (ltakeWhile ?P ?xs) else 0)",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 0)),
               t_empty)),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 8, template_var 0)),
             template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)))),
         template_hole 0))),
    ("Coinductive_List.llength_lconcat_lfinite_conv_sum",
     "lfinite ?xss ==>
      llength (lconcat ?xss) =
      (SUM i | enat i < llength ?xss. llength (lnth ?xss i))",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_equation
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 0)),
         template_app
          (template_app (template_hole 5, t_empty),
           template_app (template_hole 3, t_empty))))),
    ("Coinductive_List.eq_LConsD",
     "?xs = LCons ?y ?ys ==> ?xs ~= LNil & lhd ?xs = ?y & ltl ?xs = ?ys",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 6, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 7, template_var 2),
                   template_hole 3))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 2)),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 0, template_var 2)),
                 template_var 0)))
           ))),
    ("Coinductive_Stream.scount_eq_card",
     "ev (alw (%xs. ~ ?P xs)) ?\<omega> ==>
      scount ?P ?\<omega> = enat (card {i. ?P (sdrop i ?\<omega>)})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8, template_app (template_hole 7, t_empty)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2, template_app (template_hole 1, t_empty)))))),
    ("Coinductive_List.lnth_ldrop",
     "?n + enat ?m < llength ?xs ==>
      lnth (ldrop ?n ?xs) ?m = lnth ?xs (?m + the_enat ?n)",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 7, template_var 2),
            template_app (template_hole 6, template_var 1)),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 2)))))),
    ("Coinductive_List.lhd_ldropWhile_conv_lnth",
     "EX x:lset ?xs. ~ ?P x ==>
      lhd (ldropWhile ?P ?xs) =
      lnth ?xs (the_enat (llength (ltakeWhile ?P ?xs)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 1)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1))))))),
    ("Coinductive_List.monotone_enat_le_lprefix_case",
     "monotone (<=) lprefix (%x. ?f x (eSuc x)) ==>
      monotone (<=) lprefix (%x. case x of 0 => LNil | eSuc x' => ?f x' x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_hole 4),
                template_hole 3),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_hole 3),
             t_empty)
           ))),
    ("Coinductive_List.list_of_lconcat",
     "[| lfinite ?xss; ALL xs:lset ?xss. lfinite xs |]
      ==> list_of (lconcat ?xss) = concat (list_of (lmap list_of ?xss))",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 0)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_hole 4),
               template_var 0)))))),
    ("Coinductive_List.chain_lSup_lprefix",
     "[| Complete_Partial_Order.chain lprefix ?A;
         !!xs. xs : ?A ==> lprefix xs ?zs |]
      ==> lprefix (lSup ?A) ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Coinductive_Nat.enat_diff_cancel_left",
     "[| ?m <= ?x; ?m <= ?y |] ==> (?x - ?m = ?y - ?m) = (?x = ?y)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_equation (template_var 1, template_var 0)))),
    ("Coinductive_Nat.epred_inject",
     "[| ?x ~= 0; ?y ~= 0 |] ==> (epred ?x = epred ?y) = (?x = ?y)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_bimplication
        (template_equation
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_equation (template_var 1, template_var 0)))),
    ("Coinductive_List.ltake_eq_ltake_antimono",
     "[| ltake ?n ?xs = ltake ?n ?ys; ?m <= ?n |]
      ==> ltake ?m ?xs = ltake ?m ?ys",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 1, template_var 3),
            template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("Coinductive_List.lhd_lSup_eq",
     "[| Complete_Partial_Order.chain lprefix ?Y; ?xs : ?Y; ~ lnull ?xs |]
      ==> lhd (lSup ?Y) = lhd ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Coinductive_List.lnth_lappend",
     "lnth (lappend ?xs ?ys) ?n =
      (if enat ?n < llength ?xs then lnth ?xs ?n
       else lnth ?ys (?n - the_enat (llength ?xs)))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app (template_hole 2, template_var 2))),
           template_app
            (template_app (template_hole 7, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 7, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 2))))))),
    ("Coinductive_List.llist_all2_conv_lzip",
     "llist_all2 ?P ?xs ?ys =
      (llength ?xs = llength ?ys &
       (ALL (x, y):lset (lzip ?xs ?ys). ?P x y))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 1)),
                 template_app (template_hole 4, template_var 0))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0))),
               template_app (template_hole 0, t_empty)))
           ))),
    ("Coinductive_List.llist_all2_conj",
     "llist_all2 (%x y. ?P x y & ?Q x y) ?xs ?ys =
      (llist_all2 ?P ?xs ?ys & llist_all2 ?Q ?xs ?ys)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, t_empty), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Coinductive_List.lnths_split",
     "lnths ?xs ?A =
      lappend (lnths (ltake (enat ?n) ?xs) ?A)
       (lnths (ldropn ?n ?xs) {m. ?n + m : ?A})",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 2), template_var 1),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 0)),
                 template_var 2)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 2)),
           template_app (template_hole 2, t_empty))))),
    ("Coinductive_List.ldrop_lappend",
     "ldrop ?n (lappend ?xs ?ys) =
      (if ?n < llength ?xs then lappend (ldrop ?n ?xs) ?ys
       else ldrop (?n - llength ?xs) ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app (template_hole 1, template_var 1))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_app (template_hole 1, template_var 1))),
           template_var 0)))),
    ("Coinductive_List.ltakeWhile_lappend",
     "ltakeWhile ?P (lappend ?xs ?ys) =
      (if EX x:lset ?xs. ~ ?P x then ltakeWhile ?P ?xs
       else lappend ?xs (ltakeWhile ?P ?ys))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               t_empty)),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 0))))),
    ("Coinductive_List.lmap_corec_llist",
     "lmap ?f (corec_llist ?IS_LNIL ?LHD ?endORmore ?TTL_end ?TTL_more ?b) =
      corec_llist ?IS_LNIL (?f o ?LHD) ?endORmore (lmap ?f o ?TTL_end)
       ?TTL_more ?b",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 6),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 5),
                 template_app
                  (template_app (template_hole 1, template_var 6),
                   template_var 4)),
               template_var 3),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 4, template_var 6)),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("Quotient_Coinductive_List.llist_all2_preserve",
     "Quotient3 ?R ?Abs ?Rep ==>
      ((?Abs ---> ?Abs ---> id) ---> lmap ?Rep ---> lmap ?Rep ---> id)
       llist_all2 =
      llist_all2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_hole 5))),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 3, template_var 0)),
                 template_hole 5))),
           template_hole 1),
         template_hole 0))),
    ("Coinductive_Stream.szip_shift",
     "length ?xs = length ?us ==>
      szip (?xs @- ?ys) (?us @- ?zs) = zip ?xs ?us @- szip ?ys ?zs",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 3),
          template_app (template_hole 6, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0))))),
    ("Coinductive_List.lzip_lappend",
     "llength ?xs = llength ?us ==>
      lzip (lappend ?xs ?ys) (lappend ?us ?vs) =
      lappend (lzip ?xs ?us) (lzip ?ys ?vs)",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3),
          template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))))),
    ("Coinductive_Stream.less_sfirst_iff",
     "((%xs. ~ ?P xs) until alw ?P) ?\<omega> ==>
      (enat ?n < sfirst ?P ?\<omega>) = (~ ?P (sdrop ?n ?\<omega>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, t_empty),
                template_app (template_hole 5, template_var 2)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_hole 6,
           template_app
            (template_var 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)))))),
    ("Coinductive_Nat.enat_unfold_unique",
     "(!!x. ?h x = (if ?stop x then 0 else eSuc (?h (?next x)))) ==>
      ?h ?x = enat_unfold ?stop ?next ?x",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app (template_var 3, template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Coinductive_Nat.Max_enat_minus1",
     "[| finite ?A; ?A ~= {} |] ==> Max ?A - ?m = (MAX n\<in>?A. n - ?m)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 1))))),
    ("Coinductive_List.ltl_lconcat",
     "[| ~ lnull ?xss; ~ lnull (lhd ?xss) |]
      ==> ltl (lconcat ?xss) =
          lappend (ltl (lhd ?xss)) (lconcat (ltl ?xss))",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 7, template_var 0))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 3,
               template_app (template_hole 5, template_var 0))),
           template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 0)))))),
    ("Coinductive_List.llist_all2_lzipI",
     "[| llist_all2 ?P ?xs ?ys; llist_all2 ?P' ?xs' ?ys' |]
      ==> llist_all2 (rel_prod ?P ?P') (lzip ?xs ?xs') (lzip ?ys ?ys')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 2)),
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Coinductive_Nat.enat_cosplit",
     "?P (case ?n of 0 => ?c | eSuc x => ?d x) =
      ((?n = 0 --> ?P ?c) & (ALL m. ?n = eSuc m --> ?P (?d m)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_var 3,
              template_app
               (template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_hole 2)),
                 template_app (template_var 3, template_var 2))),
             template_app (template_hole 1, t_empty))
           ))),
    ("Coinductive_List.llexord_llist_of",
     "llexord ?r (llist_of ?xs) (llist_of ?ys) =
      (?xs = ?ys | (?xs, ?ys) : lexord {(x, y). ?r x y})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 2),
                template_app (template_hole 7, template_var 1)),
              template_app (template_hole 7, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0)),
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, t_empty)))))
           ))),
    ("Coinductive_List.ltake_Suc_conv_snoc_lnth",
     "enat ?m < llength ?xs ==>
      ltake (enat (Suc ?m)) ?xs =
      lappend (ltake (enat ?m) ?xs) (LCons (lnth ?xs ?m) LNil)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 8, template_var 1),
          template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 8,
               template_app (template_hole 4, template_var 1))),
           template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 8, template_var 1)),
               template_var 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_hole 0))))),
    ("Coinductive_List.lnth_lconcat_ltake",
     "enat ?w < llength (lconcat (ltake (enat ?n) ?xss)) ==>
      lnth (lconcat (ltake (enat ?n) ?xss)) ?w = lnth (lconcat ?xss) ?w",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 5, template_var 2),
          template_app
           (template_hole 4,
            template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 5, template_var 1)),
                template_var 0))))],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 5, template_var 1)),
                 template_var 0))),
           template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 0)),
           template_var 2)))),
    ("Quotient_Coinductive_List.lmap_preserve",
     "[| Quotient3 ?R1.0 ?abs1.0 ?rep1.0; Quotient3 ?R2.0 ?abs2.0 ?rep2.0 |]
      ==> ((?abs1.0 ---> id) ---> lmap ?rep1.0 ---> id) lmap = lmap",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 4),
                 template_hole 5)),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 3)),
               template_hole 2)),
           template_hole 1),
         template_hole 0))),
    ("Coinductive_List.lnth_lappend2",
     "[| llength ?xs = enat ?k; ?k <= ?n |]
      ==> lnth (lappend ?xs ?ys) ?n = lnth ?ys (?n - ?k)",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3),
          template_app (template_hole 5, template_var 2)),
        template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("Coinductive_List.llist_exhaust",
     "[| !!ys. ?xs = llist_of ys ==> ?thesis;
         !!f. ?xs = inf_llist f ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Coinductive_List.ltake_mono",
     "mono_llist
       (%ltake.
           case ?nxs of (n, LNil) => LNil | (0, LCons x xsa) => LNil
           | (eSuc na, LCons x xsa) => LCons x (curry ltake na xsa))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app (template_hole 7, template_hole 6)),
             template_hole 6),
           t_empty)
         )),
    ("Coinductive_List.lset_lnths",
     "lset (lnths ?xs ?I) = {lnth ?xs i |i. enat i < llength ?xs & i : ?I}",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_app (template_hole 9, template_var 1), template_var 0)),
       template_app (template_hole 8, t_empty))),
    ("Coinductive_List.ldropn_lappend",
     "ldropn ?n (lappend ?xs ?ys) =
      (if enat ?n < llength ?xs then lappend (ldropn ?n ?xs) ?ys
       else ldropn (?n - the_enat (llength ?xs)) ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 2),
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 2)),
               template_app (template_hole 2, template_var 1))),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 7, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_hole 0,
                 template_app (template_hole 2, template_var 1)))),
           template_var 0)))),
    ("Coinductive_List.lsum_list_mono",
     "(!!x. x : lset ?xs ==> ?f x <= ?g x) ==>
      lsum_list (lmap ?f ?xs) <= lsum_list (lmap ?g ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Coinductive_List.lSup_finite_gen_prefixes",
     "[| lprefix ?zs ?xs; lfinite ?zs |]
      ==> lSup {ys. lprefix ys ?xs & lprefix ?zs ys & lfinite ys} = ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_var 0))),
    ("Coinductive_List.llist_all2_mono",
     "[| llist_all2 ?P ?xs ?ys; !!x y. ?P x y ==> ?P' x y |]
      ==> llist_all2 ?P' ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("Quotient_Coinductive_List.lmap_preserve",
     "[| Quotient3 ?R1.0 ?abs1.0 ?rep1.0; Quotient3 ?R2.0 ?abs2.0 ?rep2.0 |]
      ==> ((?abs1.0 ---> ?rep2.0) ---> lmap ?rep1.0 ---> lmap ?abs2.0)
           lmap =
          lmap",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 4),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 3)),
               template_app (template_hole 2, template_var 1))),
           template_hole 1),
         template_hole 0))),
    ("Coinductive_Nat.eadd_partial_function_mono",
     "[| monotone (fun_ord (<=)) (<=) ?f; monotone (fun_ord (<=)) (<=) ?g |]
      ==> monotone (fun_ord (<=)) (<=) (%x. ?f x + ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_hole 2)),
                template_hole 1),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_hole 2)),
                template_hole 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_Nat.max_enat_partial_function_mono",
     "[| monotone (fun_ord (<=)) (<=) ?f; monotone (fun_ord (<=)) (<=) ?g |]
      ==> monotone (fun_ord (<=)) (<=) (%x. max (?f x) (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_hole 2)),
                template_hole 1),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_hole 2)),
                template_hole 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.llist_all2_LCons2",
     "llist_all2 ?P ?xs (LCons ?y ?ys) =
      (EX x xs'. ?xs = LCons x xs' & ?P x ?y & llist_all2 ?P xs' ?ys)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Coinductive_List.llist_all2_LCons1",
     "llist_all2 ?P (LCons ?x ?xs) ?ys =
      (EX y ys'. ?ys = LCons y ys' & ?P ?x y & llist_all2 ?P ?xs ys')",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 3),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Coinductive_List.lappend_eq_lappend_conv",
     "llength ?xs = llength ?us ==>
      (lappend ?xs ?ys = lappend ?us ?vs) =
      (?xs = ?us & (lfinite ?xs --> ?ys = ?vs))",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3),
          template_app (template_hole 6, template_var 2))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 1),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0)),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 3)),
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 0)))
             )))),
    ("Coinductive_List.lhd_lSup",
     "EX x:?A. ~ lnull x ==>
      lhd (lSup ?A) = (THE x. x : lhd ` (?A Int {xs. ~ lnull xs}))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0), t_empty)
            )],
       template_equation
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_app (template_hole 4, t_empty)))),
    ("Coinductive_List.mcont_enat_le_lprefix_case",
     "mcont Sup (<=) lSup lprefix (%x. ?f x (eSuc x)) ==>
      mcont Sup (<=) lSup lprefix
       (%x. case x of 0 => LNil | eSuc x' => ?f x' x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_hole 5),
                  template_hole 4),
                template_hole 3),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_hole 5),
                 template_hole 4),
               template_hole 3),
             t_empty)
           ))),
    ("Coinductive_List.lprefix_expand",
     "(~ lnull ?xs ==>
       ~ lnull ?ys & lhd ?xs = lhd ?ys & lprefix (ltl ?xs) (ltl ?ys)) ==>
      lprefix ?xs ?ys",
     template_implication
      ([template_implication
         ([template_negation
            (
               template_predicate
                (template_app (template_hole 5, template_var 1))
               )],
          template_predicate
           (
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 0))),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app
                       (template_hole 3,
                        template_app (template_hole 2, template_var 1)),
                      template_app (template_hole 2, template_var 0))),
                  template_app
                   (template_app
                     (template_hole 1,
                      template_app (template_hole 0, template_var 1)),
                    template_app (template_hole 0, template_var 0))))
              ))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("Coinductive_Nat.mono2mono_eadd",
     "[| monotone ?orda (<=) ?t; monotone ?orda (<=) ?t' |]
      ==> monotone ?orda (<=) (%x. ?t x + ?t' x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_hole 1),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_Nat.mono2mono_max_enat",
     "[| monotone ?orda (<=) ?t; monotone ?orda (<=) ?t' |]
      ==> monotone ?orda (<=) (%x. max (?t x) (?t' x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_hole 1),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.ldrop_mono",
     "mono_llist_lift
       (%ldrop.
           case ?xs of LNil => %_. LNil
           | LCons x xs =>
               %n. if n = 0 then LCons x xs else ldrop xs (n - 1))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 11,
               template_app
                (template_hole 10,
                 template_app (template_hole 9, template_hole 8))),
             template_app (template_hole 9, template_hole 8)),
           t_empty)
         )),
    ("Coinductive_List.llist_all2_conv_all_lnth",
     "llist_all2 ?P ?xs ?ys =
      (llength ?xs = llength ?ys &
       (ALL n. enat n < llength ?ys --> ?P (lnth ?xs n) (lnth ?ys n)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 7, template_var 1)),
                 template_app (template_hole 6, template_var 0))),
             template_app (template_hole 5, t_empty))
           ))),
    ("Coinductive_Nat.enat_cosplit_asm",
     "?P (case ?n of 0 => ?c | eSuc x => ?d x) =
      (~ (?n = 0 & ~ ?P ?c | (EX m. ?n = eSuc m & ~ ?P (?d m))))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_var 3,
              template_app
               (template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 0),
                         template_hole 2)),
                     template_app
                      (template_hole 6,
                       template_app (template_var 3, template_var 2)))),
                 template_app (template_hole 1, t_empty))
               )
           ))),
    ("Coinductive_List.ldropWhile_lappend",
     "ldropWhile ?P (lappend ?xs ?ys) =
      (if EX x:lset ?xs. ~ ?P x then lappend (ldropWhile ?P ?xs) ?ys
       else if lfinite ?xs then ldropWhile ?P ?ys else LNil)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 2),
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 1)),
               t_empty)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 7, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_app (template_hole 7, template_var 2),
               template_var 0)),
           template_hole 0)))),
    ("Coinductive_List.split_llist_first",
     "?x : lset ?xs ==>
      EX ys zs.
         ?xs = lappend ys (LCons ?x zs) & lfinite ys & ?x ~: lset ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 0))
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Coinductive_List.lnths_lappend_lfinite",
     "llength ?xs = enat ?k ==>
      lnths (lappend ?xs ?ys) ?A =
      lappend (lnths ?xs ?A) (lnths ?ys {n. n + ?k : ?A})",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 3),
          template_app (template_hole 6, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 4, template_var 3),
               template_var 0)),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app (template_hole 2, t_empty)))))),
    ("Coinductive_List.lfilter_eq_LCons",
     "lfilter ?P ?xs = LCons ?x ?xs' ==>
      EX xs''.
         ?xs' = lfilter ?P xs'' &
         ldropWhile (Not o ?P) ?xs = LCons ?x xs''",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_var 0))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Coinductive_List.llexord_linear",
     "(!!x y. ?r x y | x = y | ?r y x) ==>
      llexord ?r ?xs ?ys | llexord ?r ?ys ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("Coinductive_Nat.mcont2mcont_enat_minus",
     "[| ?m1 ~= \<infinity>; mcont ?lub ?ord Sup (<=) ?t |]
      ==> mcont ?lub ?ord Sup (<=) (%x. ?t x - ?m1)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1),
                  template_hole 2),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 1),
                 template_hole 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List_Prefix.lhd_llist_inf",
     "[| ?xs ~= LNil; ?ys ~= LNil; lhd ?xs = lhd ?ys |]
      ==> lhd (?xs \<sqinter> ?ys) = lhd ?ys",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_negation
         (template_equation (template_var 0, template_hole 3)),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Coinductive_List.llist_corec_transfer",
     "((?A ===> (=)) ===>
       (?A ===> ?B) ===>
       (?A ===> (=)) ===>
       (?A ===> llist_all2 ?B) ===> (?A ===> ?A) ===> ?A ===> llist_all2 ?B)
       corec_llist corec_llist",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 11, template_var 1),
                   template_hole 10)),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_var 1),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 11, template_var 1),
                       template_hole 10)),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 5, template_var 1),
                         template_app (template_hole 4, template_var 0))),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 2, template_var 1),
                           template_var 1)),
                       template_app
                        (template_app (template_hole 5, template_var 1),
                         template_app
                          (template_hole 4, template_var 0))))))),
             template_hole 1),
           template_hole 0)
         )),
    ("Coinductive_List.lzip_mono",
     "mono_llist
       (%lzip.
           case ?xs of (LNil, ys) => LNil | (LCons x xs', LNil) => LNil
           | (LCons x xs', LCons y ys') =>
               LCons (x, y) (curry lzip xs' ys'))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 9,
               template_app (template_hole 8, template_hole 7)),
             template_hole 7),
           t_empty)
         )),
    ("Coinductive_List.lset_lzip",
     "lset (lzip ?xs ?ys) =
      {(lnth ?xs n, lnth ?ys n) |n.
       enat n < min (llength ?xs) (llength ?ys)}",
     template_equation
      (template_app
        (template_hole 13,
         template_app
          (template_app (template_hole 12, template_var 1),
           template_var 0)),
       template_app (template_hole 11, t_empty))),
    ("Coinductive_List.unfold_llist_eq_LCons",
     "(unfold_llist ?IS_LNIL ?LHD ?LTL ?b = LCons ?x ?xs) =
      (~ ?IS_LNIL ?b &
       ?x = ?LHD ?b & ?xs = unfold_llist ?IS_LNIL ?LHD ?LTL (?LTL ?b))",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 5),
               template_var 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_var 5, template_var 2))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_app (template_var 4, template_var 2))),
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_app (template_var 3, template_var 2)))))
           ))),
    ("Coinductive_List.monotone_lprefix_case",
     "(!!x. monotone lprefix lprefix (%xs. ?f x xs (LCons x xs))) ==>
      monotone lprefix lprefix
       (%xs. case xs of LNil => LNil | LCons x xs' => ?f x xs' xs)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_hole 3),
             t_empty)
           ))),
    ("Coinductive_List.ldropWhile_cong",
     "[| ?xs = ?ys; !!x. x : lset ?ys ==> ?P x = ?Q x |]
      ==> ldropWhile ?P ?xs = ldropWhile ?Q ?ys",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 3),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Coinductive_List.lfilter_cong",
     "[| ?xs = ?ys; !!x. x : lset ?ys ==> ?P x = ?Q x |]
      ==> lfilter ?P ?xs = lfilter ?Q ?ys",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 3),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Coinductive_List.ltakeWhile_cong",
     "[| ?xs = ?ys; !!x. x : lset ?ys ==> ?P x = ?Q x |]
      ==> ltakeWhile ?P ?xs = ltakeWhile ?Q ?ys",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 3),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Coinductive_Nat.enat_cocase_mono",
     "[| monotone ?orda ?ordb ?zero;
         !!n. monotone ?orda ?ordb (%f. ?esuc f n) |]
      ==> monotone ?orda ?ordb
           (%f. case ?x of 0 => ?zero f | eSuc x => ?esuc f x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_var 3),
             t_empty)
           ))),
    ("Coinductive_List.lnth_lzip",
     "[| enat ?n < llength ?xs; enat ?n < llength ?ys |]
      ==> lnth (lzip ?xs ?ys) ?n = (lnth ?xs ?n, lnth ?ys ?n)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 8, template_var 2),
          template_app (template_hole 7, template_var 1)),
        template_inequation
         (less_than, template_app (template_hole 8, template_var 2),
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Coinductive_List.wlog_linorder_le",
     "[| !!a b. a <= b ==> ?P a b; ?P ?b ?a ==> ?P ?a ?b |] ==> ?P ?a ?b",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_var 2, template_var 1),
                 template_var 0)
               )],
          template_predicate
           (
              template_app
               (template_app (template_var 2, template_var 0),
                template_var 1)
              ))],
       template_predicate
        (
           template_app
            (template_app (template_var 2, template_var 0), template_var 1)
           ))),
    ("Coinductive_List.epred_llcp",
     "[| ~ lnull ?xs; ~ lnull ?ys; lhd ?xs = lhd ?ys |]
      ==> epred (llcp ?xs ?ys) = llcp (ltl ?xs) (ltl ?ys)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_var 0))
            ),
        template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Coinductive_Stream.smap_eq_SCons_conv",
     "(smap ?f ?xs = ?y ## ?ys) =
      (EX x xs'. ?xs = x ## xs' & ?y = ?f x & ?ys = smap ?f xs')",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Coinductive_List.lmap_eq_LCons_conv",
     "(lmap ?f ?xs = LCons ?y ?ys) =
      (EX x xs'. ?xs = LCons x xs' & ?y = ?f x & ?ys = lmap ?f xs')",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Coinductive_List.lnths_LCons",
     "lnths (LCons ?x ?xs) ?A =
      (if 0 : ?A then LCons ?x (lnths ?xs {n. Suc n : ?A})
       else lnths ?xs {n. Suc n : ?A})",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 0)),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app (template_hole 6, template_var 1),
               template_app (template_hole 1, t_empty)))),
         template_app
          (template_app (template_hole 6, template_var 1),
           template_app (template_hole 1, t_empty))))),
    ("Quotient_Coinductive_List.llist_all2_rel",
     "Quotient3 ?R ?Abs ?Rep ==>
      llist_all2 ?R ?r ?s =
      (llist_all2 ?R ?r ?r &
       llist_all2 ?R ?s ?s & lmap ?Abs ?r = lmap ?Abs ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 1),
                template_var 0)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_var 4),
                     template_var 1),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 3, template_var 4),
                       template_var 0),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 1)),
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 0))))
             )))),
    ("Coinductive_List.llist_all2_lappendI",
     "[| llist_all2 ?P ?xs ?ys;
         [| lfinite ?xs; lfinite ?ys |] ==> llist_all2 ?P ?xs' ?ys' |]
      ==> llist_all2 ?P (lappend ?xs ?xs') (lappend ?ys ?ys')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_implication
         ([template_predicate
            (template_app (template_hole 3, template_var 3))],
          template_implication
           ([template_predicate
              (template_app (template_hole 2, template_var 2))],
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 4, template_var 4),
                    template_var 1),
                  template_var 0)
                )))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 4),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Coinductive_List.llist_all2_lSupI",
     "[| Complete_Partial_Order.chain (rel_prod lprefix lprefix) ?Y;
         ALL (xs, ys):?Y. llist_all2 ?P xs ys |]
      ==> llist_all2 ?P (lSup (fst ` ?Y)) (lSup (snd ` ?Y))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_hole 10),
                  template_hole 9)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, template_var 0),
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_var 1))),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1)))
           ))),
    ("Coinductive_List.llexord_LCons_left",
     "llexord ?r (LCons ?x ?xs) ?ys =
      (EX y ys'.
          ?ys = LCons y ys' & (?x = y & llexord ?r ?xs ys' | ?r ?x y))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_var 3),
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 5, t_empty))),
    ("Coinductive_List.monotone_lprefix_case_lfp",
     "(!!x. monotone lprefix (<=) (%xs. ?f x xs (LCons x xs))) ==>
      monotone lprefix (<=)
       (%xs. case xs of LNil => \<bottom>
             | LCons x xs => ?f x xs (LCons x xs))",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_hole 3),
             t_empty)
           ))),
    ("Coinductive_List.llist_all2_all_lnthI",
     "[| llength ?xs = llength ?ys;
         !!n. enat n < llength ?xs ==> ?P (lnth ?xs n) (lnth ?ys n) |]
      ==> llist_all2 ?P ?xs ?ys",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 2),
          template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("Coinductive_List_Prefix.ltl_llist_inf",
     "[| ?xs ~= LNil; ?ys ~= LNil; lhd ?xs = lhd ?ys |]
      ==> ltl (?xs \<sqinter> ?ys) = ltl ?xs \<sqinter> ltl ?ys",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_negation
         (template_equation (template_var 0, template_hole 4)),
        template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0))))),
    ("Coinductive_List.lnths_cong",
     "[| ?xs = ?ys; !!n. enat n < llength ?ys ==> (n : ?A) = (n : ?B) |]
      ==> lnths ?xs ?A = lnths ?ys ?B",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Coinductive_List.llist_all2_ldropWhileI",
     "[| llist_all2 ?P ?xs ?ys; !!x y. ?P x y ==> ?Q1.0 x = ?Q2.0 y |]
      ==> llist_all2 ?P (ldropWhile ?Q1.0 ?xs) (ldropWhile ?Q2.0 ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 4),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("Coinductive_List.llist_all2_lfilterI",
     "[| llist_all2 ?P ?xs ?ys; !!x y. ?P x y ==> ?Q1.0 x = ?Q2.0 y |]
      ==> llist_all2 ?P (lfilter ?Q1.0 ?xs) (lfilter ?Q2.0 ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 4),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("Coinductive_List.llist_case_mono",
     "[| monotone ?orda ?ordb ?lnil;
         !!x xs. monotone ?orda ?ordb (%f. ?lcons f x xs) |]
      ==> monotone ?orda ?ordb
           (%f. case ?x of LNil => ?lnil f | LCons x xa => ?lcons f x xa)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 4),
               template_var 3),
             t_empty)
           ))),
    ("Coinductive_List.admissible_llist_all2",
     "[| mcont ?lub ?ord lSup lprefix ?f; mcont ?lub ?ord lSup lprefix ?g |]
      ==> ccpo.admissible ?lub ?ord (%x. llist_all2 ?P (?f x) (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_var 4),
                    template_var 3),
                  template_hole 6),
                template_hole 5),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 4),
                    template_var 3),
                  template_hole 3),
                template_hole 2),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3),
             t_empty)
           ))),
    ("Coinductive_List.lfinite_rev_induct",
     "[| lfinite ?xs; ?P LNil;
         !!x xs.
            [| lfinite xs; ?P xs |] ==> ?P (lappend xs (LCons x LNil)) |]
      ==> ?P ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_var 0, template_hole 4)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Coinductive_List.llist_induct",
     "[| ccpo.admissible lSup lprefix ?P; ?P LNil;
         !!x xs. [| lfinite xs; ?P xs |] ==> ?P (LCons x xs) |]
      ==> ?P ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_hole 6),
                template_hole 5),
              template_var 1)
            ),
        template_predicate (template_app (template_var 1, template_hole 4)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Coinductive_List.mcont_lprefix_case",
     "(!!x. mcont lSup lprefix lSup lprefix (%xs. ?f x xs (LCons x xs))) ==>
      mcont lSup lprefix lSup lprefix
       (%xs. case xs of LNil => LNil | LCons x xs' => ?f x xs' xs)",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_hole 5),
                 template_hole 4),
               template_hole 3),
             t_empty)
           ))),
    ("Coinductive_List.llexord_lappend_left",
     "[| lfinite ?xs; !!x. x : lset ?xs ==> ~ ?r x x |]
      ==> llexord ?r (lappend ?xs ?ys) (lappend ?xs ?zs) =
          llexord ?r ?ys ?zs",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Coinductive_List.llist_all2_llength_ltakeWhileD",
     "[| llist_all2 ?P ?xs ?ys; !!x y. ?P x y ==> ?Q1.0 x = ?Q2.0 y |]
      ==> llength (ltakeWhile ?Q1.0 ?xs) = llength (ltakeWhile ?Q2.0 ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 3)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Quotient_Coinductive_List.unfold_llist_preserve",
     "[| Quotient3 ?R1.0 ?Abs1.0 ?Rep1.0; Quotient3 ?R2.0 ?Abs2.0 ?Rep2.0 |]
      ==> ((?Abs1.0 ---> id) --->
           (?Abs1.0 ---> ?Rep2.0) --->
           (?Abs1.0 ---> ?Rep1.0) ---> ?Rep1.0 ---> lmap ?Abs2.0)
           unfold_llist =
          unfold_llist",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_var 4),
                 template_hole 8)),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 4),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 4),
                     template_var 3)),
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_app (template_hole 2, template_var 1))))),
           template_hole 1),
         template_hole 0))),
    ("Coinductive_Nat.mcont2mcont_eadd",
     "[| mcont ?lub ?ord Sup (<=) ?f; mcont ?lub ?ord Sup (<=) ?g |]
      ==> mcont ?lub ?ord Sup (<=) (%x. ?f x + ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2),
                  template_hole 2),
                template_hole 1),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2),
                  template_hole 2),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 2),
                 template_hole 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_Nat.mcont2mcont_max_enat",
     "[| mcont ?lub ?ord Sup (<=) ?f; mcont ?lub ?ord Sup (<=) ?g |]
      ==> mcont ?lub ?ord Sup (<=) (%x. max (?f x) (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2),
                  template_hole 2),
                template_hole 1),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2),
                  template_hole 2),
                template_hole 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 2),
                 template_hole 2),
               template_hole 1),
             t_empty)
           ))),
    ("Coinductive_List.ldistinct_conv_lnth",
     "ldistinct ?xs =
      (ALL i j.
          enat i < llength ?xs -->
          enat j < llength ?xs --> i ~= j --> lnth ?xs i ~= lnth ?xs j)",
     template_equation
      (template_app (template_hole 9, template_var 0),
       template_app (template_hole 8, t_empty))),
    ("Coinductive_List.llexord_antisym",
     "[| llexord ?r ?xs ?ys; llexord ?r ?ys ?xs;
         !!a b. [| ?r a b; ?r b a |] ==> False |]
      ==> ?xs = ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 0),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Coinductive_List.llexord_lappend_leftD",
     "[| llexord ?r (lappend ?xs ?ys) (lappend ?xs ?zs); lfinite ?xs;
         !!x. x : lset ?xs ==> ~ ?r x x |]
      ==> llexord ?r ?ys ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 0))
            ),
        template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, template_var 3),
               template_var 1),
             template_var 0)
           ))),
    ("Coinductive_List.mcont_lprefix_case_lfp",
     "(!!x. mcont lSup lprefix Sup (<=) (%xs. ?f x xs (LCons x xs))) ==>
      mcont lSup lprefix Sup (<=)
       (%xs. case xs of LNil => \<bottom>
             | LCons x xs => ?f x xs (LCons x xs))",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_hole 5),
                 template_hole 4),
               template_hole 3),
             t_empty)
           ))),
    ("Coinductive_Nat.enat_cocase_mcont",
     "[| mcont ?luba ?orda ?lubb ?ordb ?zero;
         !!n. mcont ?luba ?orda ?lubb ?ordb (%f. ?esuc f n) |]
      ==> mcont ?luba ?orda ?lubb ?ordb
           (%f. case ?x of 0 => ?zero f | eSuc x => ?esuc f x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             t_empty)
           ))),
    ("Coinductive_List.ldistinct_coinduct",
     "[| ?X ?xs;
         !!xs. [| ?X xs; ~ lnull xs |]
               ==> lhd xs ~: lset (ltl xs) &
                   (?X (ltl xs) | ldistinct (ltl xs)) |]
      ==> ldistinct ?xs",
     template_implication
      ([template_predicate (template_app (template_var 1, template_var 0)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Coinductive_List.llist_gen_induct",
     "[| ccpo.admissible lSup lprefix ?P;
         EX zs.
            lprefix zs ?xs &
            lfinite zs &
            (ALL ys.
                lprefix zs ys -->
                lprefix ys ?xs --> lfinite ys --> ?P ys) |]
      ==> ?P ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_hole 6),
                template_hole 5),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Coinductive_List.llist_all2_expand",
     "[| lnull ?xs = lnull ?ys;
         [| ~ lnull ?xs; ~ lnull ?ys |]
         ==> ?P (lhd ?xs) (lhd ?ys) & llist_all2 ?P (ltl ?xs) (ltl ?ys) |]
      ==> llist_all2 ?P ?xs ?ys",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 2),
          template_app (template_hole 7, template_var 1)),
        template_implication
         ([template_negation
            (
               template_predicate
                (template_app (template_hole 8, template_var 2))
               )],
          template_implication
           ([template_negation
              (
                 template_predicate
                  (template_app (template_hole 7, template_var 1))
                 )],
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app
                       (template_var 0,
                        template_app (template_hole 4, template_var 2)),
                      template_app (template_hole 3, template_var 1))),
                  template_app
                   (template_app
                     (template_app (template_hole 2, template_var 0),
                      template_app (template_hole 1, template_var 2)),
                    template_app (template_hole 0, template_var 1)))
                )))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("Coinductive_List.lfinite_induct",
     "[| lfinite ?xs; !!xs. lnull xs ==> ?P xs;
         !!xs. [| lfinite xs; ~ lnull xs; ?P (ltl xs) |] ==> ?P xs |]
      ==> ?P ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Coinductive_List.lset_induct'",
     "[| ?x : lset ?xs; !!xs. ?P (LCons ?x xs);
         !!x' xs. [| ?x : lset xs; ?P xs |] ==> ?P (LCons x' xs) |]
      ==> ?P ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Coinductive_Nat.monotone_enat_le_case",
     "[| monotone (<=) ?ord (%x. ?f x (eSuc x));
         !!x. ?ord ?bot (?f x (eSuc x)); ?ord ?bot ?bot |]
      ==> monotone (<=) ?ord
           (%x. case x of 0 => ?bot | eSuc x' => ?f x' x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_hole 3),
                template_var 2),
              t_empty)
            ),
        template_predicate (template_app (template_hole 1, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_var 2, template_var 0), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 2),
             t_empty)
           ))),
    ("Coinductive_List.lnths_insert",
     "enat ?n < llength ?xs ==>
      lnths ?xs (insert ?n ?A) =
      lappend (lnths (ltake (enat ?n) ?xs) ?A)
       (LCons (lnth ?xs ?n)
         (lnths (ldropn (Suc ?n) ?xs) {m. Suc (?n + m) : ?A}))",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 13, template_var 2),
          template_app (template_hole 12, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 10, template_var 1),
           template_app
            (template_app (template_hole 9, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 13, template_var 2)),
                   template_var 1)),
               template_var 0)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 2)),
                   template_var 1)),
               template_app (template_hole 2, t_empty))))))),
    ("Coinductive_List.lfilter_eq_lappend_lfiniteD",
     "[| lfilter ?P ?xs = lappend ?ys ?zs; lfinite ?ys |]
      ==> EX us vs.
             ?xs = lappend us vs &
             lfinite us & ?ys = lfilter ?P us & ?zs = lfilter ?P vs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Coinductive_List.llexord_trans",
     "[| llexord ?r ?xs ?ys; llexord ?r ?ys ?zs;
         !!a b c. [| ?r a b; ?r b c |] ==> ?r a c |]
      ==> llexord ?r ?xs ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Coinductive_List.lconcat_eq_LCons_conv",
     "(lconcat ?xss = LCons ?x ?xs) =
      (EX xs' xss' xss''.
          ?xss = lappend (llist_of xss') (LCons (LCons ?x xs') xss'') &
          ?xs = lappend xs' (lconcat xss'') & set xss' <= {xs. lnull xs})",
     template_equation
      (template_app
        (template_app
          (template_hole 15,
           template_app (template_hole 14, template_var 2)),
         template_app
          (template_app (template_hole 13, template_var 1),
           template_var 0)),
       template_app (template_hole 12, t_empty))),
    ("Coinductive_Stream.stream_all2_coinduct",
     "[| ?X ?xs ?ys;
         !!xs ys.
            ?X xs ys ==>
            ?P (shd xs) (shd ys) &
            (?X (stl xs) (stl ys) | stream_all2 ?P (stl xs) (stl ys)) |]
      ==> stream_all2 ?P ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 2), template_var 1)
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("Coinductive_List.monotone_enat_cocase",
     "[| !!n. monotone (<=) ?ord (%n. ?f n (eSuc n));
         !!n. ?ord ?a (?f n (eSuc n)); ?ord ?a ?a |]
      ==> monotone (<=) ?ord (%n. case n of 0 => ?a | eSuc n' => ?f n' n)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_var 2, template_var 0), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 2),
             t_empty)
           ))),
    ("Coinductive_List.lzip_eq_LCons_conv",
     "(lzip ?xs ?ys = LCons ?z ?zs) =
      (EX x xs' y ys'.
          ?xs = LCons x xs' &
          ?ys = LCons y ys' & ?z = (x, y) & ?zs = lzip xs' ys')",
     template_equation
      (template_app
        (template_app
          (template_hole 13,
           template_app
            (template_app (template_hole 12, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 11, template_var 1),
           template_var 0)),
       template_app (template_hole 10, t_empty))),
    ("Coinductive_List.llimit_induct",
     "[| ?P LNil; !!x xs. [| lfinite xs; ?P xs |] ==> ?P (LCons x xs);
         (!!ys. lstrict_prefix ys ?xs ==> ?P ys) ==> ?P ?xs |]
      ==> ?P ?xs",
     template_implication
      ([template_predicate (template_app (template_var 1, template_hole 5)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_implication
         ([template_predicate (template_app (template_hole 3, t_empty))],
          template_predicate
           (template_app (template_var 1, template_var 0)))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Coinductive_List.lset_cases",
     "[| ?x : lset ?xs; !!xs'. ?xs = LCons ?x xs' ==> ?thesis;
         !!x' xs'. [| ?xs = LCons x' xs'; ?x : lset xs' |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("Coinductive_Stream.stream_set_induct",
     "[| ?y : sset ?s; !!s. ?P (shd s) s;
         !!s y. [| y : sset (stl s); ?P y (stl s) |] ==> ?P y s |]
      ==> ?P ?y ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 0, template_var 2), template_var 1)
           ))),
    ("Coinductive_List.distinct_filterD",
     "[| distinct (filter ?P ?xs); ?n < length ?xs; ?m < length ?xs; ?P ?x;
         ?xs ! ?n = ?x; ?xs ! ?m = ?x |]
      ==> ?m = ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3))
            ),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 3, template_var 3)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 3, template_var 3)),
        template_predicate (template_app (template_var 4, template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 2),
          template_var 0),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 1),
          template_var 0)],
       template_equation (template_var 1, template_var 2))),
    ("Coinductive_List.ldropn_fixp_case_conv",
     "(%xs. case xs of LNil => %_. LNil
            | LCons x xs =>
                %n. if n = (0::?'b) then LCons x xs
                    else ?f xs (n - (1::?'b))) =
      (%xs n.
          case xs of LNil => LNil
          | LCons x xs =>
              if n = (0::?'b) then LCons x xs else ?f xs (n - (1::?'b)))",
     template_equation (t_empty, t_empty)),
    ("Coinductive_List.lfilter_eq_LConsD",
     "lfilter ?P ?ys = LCons ?x ?xs ==>
      EX us vs.
         ?ys = lappend us (LCons ?x vs) &
         lfinite us &
         (ALL u:lset us. ~ ?P u) & ?P ?x & ?xs = lfilter ?P vs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 8, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 7, template_var 1),
            template_var 0))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Quotient_Coinductive_List.corec_llist_preserve",
     "[| Quotient3 ?R1.0 ?Abs1.0 ?Rep1.0; Quotient3 ?R2.0 ?Abs2.0 ?Rep2.0 |]
      ==> ((?Abs1.0 ---> id) --->
           (?Abs1.0 ---> ?Rep2.0) --->
           (?Abs1.0 ---> id) --->
           (?Abs1.0 ---> lmap ?Rep2.0) --->
           (?Abs1.0 ---> ?Rep1.0) ---> ?Rep1.0 ---> lmap ?Abs2.0)
           corec_llist =
          corec_llist",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 17, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 16, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 13, template_var 4),
                 template_hole 12)),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_var 4),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 13, template_var 4),
                     template_hole 12)),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_var 4),
                       template_app (template_hole 6, template_var 0))),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_var 4),
                         template_var 3)),
                     template_app
                      (template_app (template_hole 3, template_var 3),
                       template_app (template_hole 2, template_var 1))))))),
           template_hole 1),
         template_hole 0))),
    ("Coinductive_List.ldistinct_lfilterD",
     "[| ldistinct (lfilter ?P ?xs); enat ?n < llength ?xs;
         enat ?m < llength ?xs; ?P ?a; lnth ?xs ?n = ?a; lnth ?xs ?m = ?a |]
      ==> ?m = ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 4),
                template_var 3))
            ),
        template_inequation
         (less_than, template_app (template_hole 4, template_var 2),
          template_app (template_hole 3, template_var 3)),
        template_inequation
         (less_than, template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 3)),
        template_predicate (template_app (template_var 4, template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 2),
          template_var 0),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 1),
          template_var 0)],
       template_equation (template_var 1, template_var 2))),
    ("Coinductive_List.llexord_conv",
     "llexord ?r ?xs ?ys =
      (?xs = ?ys |
       (EX zs xs' y ys'.
           lfinite zs &
           ?xs = lappend zs xs' &
           ?ys = lappend zs (LCons y ys') &
           (xs' = LNil | ?r (lhd xs') y)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 1),
                 template_var 0)),
             template_app (template_hole 7, t_empty))
           ))),
    ("Coinductive_List.lSup_eq_LCons_iff",
     "(lSup ?Y = LCons ?x ?xs) =
      ((EX x:?Y. ~ lnull x) &
       ?x = (THE x. x : lhd ` (?Y Int {xs. ~ lnull xs})) &
       ?xs = lSup (ltl ` (?Y Int {xs. ~ lnull xs})))",
     template_bimplication
      (template_equation
        (template_app (template_hole 14, template_var 2),
         template_app
          (template_app (template_hole 13, template_var 1),
           template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 11, template_var 2), t_empty)),
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 8, template_var 1),
                   template_app (template_hole 7, t_empty))),
               template_app
                (template_app (template_hole 15, template_var 0),
                 template_app
                  (template_hole 14,
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_app
                      (template_app (template_hole 3, template_var 2),
                       template_app (template_hole 2, t_empty)))))))
           ))),
    ("Coinductive_List.mcont_llist_case",
     "[| mcont ?luba ?orda ?lubb ?ordb ?f;
         !!x xs. mcont ?luba ?orda ?lubb ?ordb (?g x xs) |]
      ==> mcont ?luba ?orda ?lubb ?ordb
           (%y. case ?xs of LNil => ?f y | LCons x xs' => ?g x xs' y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              t_empty)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             t_empty)
           ))),
    ("Coinductive_List.lset_induct",
     "[| ?x : lset ?xs; !!xs. ?P (LCons ?x xs);
         !!x' xs.
            [| ?x : lset xs; ?x ~= x'; ?P xs |] ==> ?P (LCons x' xs) |]
      ==> ?P ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Coinductive_Nat.mcont_enat_le_case",
     "[| class.ccpo ?lub ?ord (mk_less ?ord);
         mcont Sup (<=) ?lub ?ord (%x. ?f x (eSuc x));
         !!x. ?ord ?bot (?f x (eSuc x)) |]
      ==> mcont Sup (<=) ?lub ?ord
           (%x. case x of 0 => ?bot | eSuc x' => ?f x' x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_var 2),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_hole 3),
                  template_var 3),
                template_var 2),
              t_empty)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_hole 3),
                 template_var 3),
               template_var 2),
             t_empty)
           ))),
    ("Coinductive_List.mcont_lprefix_case_aux",
     "[| !!x. mcont lSup lprefix ?lub ?ord (%xs. ?f x xs (LCons x xs));
         class.ccpo ?lub ?ord (mk_less ?ord); !!x. ?ord ?bot x |]
      ==> mcont lSup lprefix ?lub ?ord
           (%xs. case xs of LNil => ?bot | LCons x xs' => ?f x xs' xs)",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_hole 5),
                 template_var 3),
               template_var 2),
             t_empty)
           ))),
    ("Coinductive_List.llexord_conv_ltake_index",
     "llexord ?r ?xs ?ys =
      (llength ?xs <= llength ?ys & ltake (llength ?xs) ?ys = ?xs |
       (EX n. enat n < min (llength ?xs) (llength ?ys) &
              ltake (enat n) ?xs = ltake (enat n) ?ys &
              ?r (lnth ?xs n) (lnth ?ys n)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_var 1)),
                     template_app (template_hole 7, template_var 0))),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app (template_hole 7, template_var 1)),
                       template_var 0)),
                   template_var 1))),
             template_app (template_hole 4, t_empty))
           ))),
    ("Coinductive_List.lzip_eq_lappend_conv",
     "lzip ?xs ?ys = lappend ?us ?vs ==>
      EX xs' xs'' ys' ys''.
         ?xs = lappend xs' xs'' &
         ?ys = lappend ys' ys'' &
         llength xs' = llength ys' &
         ?us = lzip xs' ys' & ?vs = lzip xs'' ys''",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 11, template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 10, template_var 1),
            template_var 0))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Coinductive_List.llist_all2_rsp",
     "[| ALL x y. ?R x y --> (ALL a b. ?R a b --> ?S x a = ?T y b);
         llist_all2 ?R ?x ?y; llist_all2 ?R ?a ?b |]
      ==> llist_all2 ?S ?x ?a = llist_all2 ?T ?y ?b",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 6),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 6),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_var 3),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 2),
           template_var 0)))),
    ("Coinductive_Nat.enat_coinduct",
     "[| ?P ?m ?n;
         !!m n.
            ?P m n ==>
            (m = 0) = (n = 0) &
            (m ~= 0 -->
             n ~= 0 --> ?P (epred m) (epred n) | epred m = epred n) |]
      ==> ?m = ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 2, template_var 1), template_var 0)
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Coinductive_List.llist_set_induct",
     "[| ?x : lset ?xs; !!xs. ~ lnull xs ==> ?P (lhd xs) xs;
         !!xs y.
            [| ~ lnull xs; y : lset (ltl xs); ?P y (ltl xs) |]
            ==> ?P y xs |]
      ==> ?P ?x ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, template_var 1))
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 0, template_var 2), template_var 1)
           ))),
    ("Coinductive_List.lprefix_coinduct",
     "[| ?P ?xs ?ys;
         !!xs ys.
            ?P xs ys ==>
            (lnull ys --> lnull xs) &
            (~ lnull xs -->
             ~ lnull ys -->
             lhd xs = lhd ys &
             (?P (ltl xs) (ltl ys) | lprefix (ltl xs) (ltl ys))) |]
      ==> lprefix ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 2, template_var 1), template_var 0)
            ),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Coinductive_List.ldistinct_lconcat",
     "[| ldistinct ?xss; !!ys. ys : lset ?xss ==> ldistinct ys;
         !!ys zs.
            [| ys : lset ?xss; zs : lset ?xss; ys ~= zs |]
            ==> lset ys Int lset zs = {} |]
      ==> ldistinct (lconcat ?xss)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 0)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 7,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Coinductive_List.lnth_lconcat_conv",
     "enat ?n < llength (lconcat ?xss) ==>
      EX m n'.
         lnth (lconcat ?xss) ?n = lnth (lnth ?xss m) n' &
         enat n' < llength (lnth ?xss m) &
         enat m < llength ?xss &
         enat ?n = (SUM i<m. llength (lnth ?xss i)) + enat n'",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 12, template_var 1),
          template_app
           (template_hole 11,
            template_app (template_hole 10, template_var 0)))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Coinductive_List.lprefixI",
     "[| (?xs, ?ys) : ?X;
         !!xs ys.
            (xs, ys) : ?X ==>
            lnull xs |
            (EX x xs' ys'.
                xs = LCons x xs' &
                ys = LCons x ys' & ((xs', ys') : ?X | lprefix xs' ys')) |]
      ==> lprefix ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 1)
           ))),
    ("Coinductive_Nat.enat_equalityI",
     "[| (?m, ?n) : ?X;
         !!m n.
            (m, n) : ?X ==>
            m = 0 & n = 0 |
            (EX m' n'.
                m = eSuc m' & n = eSuc n' & ((m', n') : ?X | m' = n')) |]
      ==> ?m = ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation (template_var 2, template_var 1))),
    ("Coinductive_List.llist_all2_cases",
     "[| llist_all2 ?P ?xs ?ys; [| ?xs = LNil; ?ys = LNil |] ==> ?thesis;
         !!x xs' y ys'.
            [| ?xs = LCons x xs'; ?ys = LCons y ys'; ?P x y;
               llist_all2 ?P xs' ys' |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_equation (template_var 2, template_hole 8)],
          template_implication
           ([template_equation (template_var 1, template_hole 6)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Coinductive_List.llexord_coinduct",
     "[| ?X ?xs ?ys;
         !!xs ys.
            [| ?X xs ys; ~ lnull xs |]
            ==> ~ lnull ys &
                (~ lnull ys -->
                 ?r (lhd xs) (lhd ys) |
                 lhd xs = lhd ys &
                 (?X (ltl xs) (ltl ys) | llexord ?r (ltl xs) (ltl ys))) |]
      ==> llexord ?r ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 2), template_var 1)
            ),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("Coinductive_Nat.enat_le_coinduct",
     "[| ?P ?m ?n;
         !!m n.
            ?P m n ==>
            (n = 0 --> m = 0) &
            (m ~= 0 -->
             n ~= 0 -->
             (EX k n'. ?P (epred m) n' & epred n = n' + k) |
             epred m <= epred n) |]
      ==> ?m <= ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 2, template_var 1), template_var 0)
            ),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Coinductive_Nat.enat_leI",
     "[| (?m, ?n) : ?X;
         !!m n.
            (m, n) : ?X ==>
            m = 0 |
            (EX m' n' k.
                m = eSuc m' &
                n = n' + enat k & k ~= 0 & ((m', n') : ?X | m' <= n')) |]
      ==> ?m <= ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 13, t_empty))],
       template_inequation (less_equals, template_var 2, template_var 1))),
    ("Coinductive_Nat.enat_coinduct2",
     "[| ?P ?m ?n; !!m n. ?P m n ==> (m = 0) = (n = 0);
         !!m n.
            [| ?P m n; m ~= 0; n ~= 0 |]
            ==> ?P (epred m) (epred n) | epred m = epred n |]
      ==> ?m = ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 2, template_var 1), template_var 0)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Coinductive_List.lconcat_fixp_parallel_induct",
     "[| ccpo.admissible (prod_lub llist.lub_fun llist.lub_fun)
          (rel_prod llist.le_fun llist.le_fun) (%x. ?P (fst x) (snd x));
         ?P (%_. lSup {}) (%_. lSup {});
         !!f g.
            ?P f g ==>
            ?P (%xss. case xss of LNil => LNil
                      | LCons xs xss' => lappend xs (f xss'))
             (%xss. case xss of LNil => LNil
                    | LCons xs xss' => lappend xs (g xss')) |]
      ==> ?P lconcat lconcat",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 24,
                  template_app
                   (template_app
                     (template_hole 23,
                      template_app (template_hole 22, template_hole 21)),
                    template_app (template_hole 20, template_hole 19))),
                template_app
                 (template_app
                   (template_hole 18,
                    template_app (template_hole 17, template_hole 16)),
                  template_app (template_hole 15, template_hole 14))),
              t_empty)
            ),
        template_predicate
         (template_app (template_app (template_var 0, t_empty), t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 0, template_hole 1),
             template_hole 0)
           ))),
    ("Coinductive_List.llist_all2_coinduct",
     "[| ?X ?xs ?ys; !!xs ys. ?X xs ys ==> lnull xs = lnull ys;
         !!xs ys.
            [| ?X xs ys; ~ lnull xs; ~ lnull ys |]
            ==> ?P (lhd xs) (lhd ys) &
                (?X (ltl xs) (ltl ys) | llist_all2 ?P (ltl xs) (ltl ys)) |]
      ==> llist_all2 ?P ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 2), template_var 1)
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("Coinductive_List.ldropWhile_fixp_parallel_induct",
     "[| ccpo.admissible (prod_lub llist.lub_fun llist.lub_fun)
          (rel_prod llist.le_fun llist.le_fun) (%x. ?P (fst x) (snd x));
         ?P (%_. lSup {}) (%_. lSup {});
         !!f g.
            ?P f g ==>
            ?P (%xs. case xs of LNil => LNil
                     | LCons x xs' => if ?Pb x then f xs' else xs)
             (%xs. case xs of LNil => LNil
                   | LCons x xs' => if ?Pa x then g xs' else xs) |]
      ==> ?P (ldropWhile ?Pb) (ldropWhile ?Pa)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 24,
                  template_app
                   (template_app
                     (template_hole 23,
                      template_app (template_hole 22, template_hole 21)),
                    template_app (template_hole 20, template_hole 19))),
                template_app
                 (template_app
                   (template_hole 18,
                    template_app (template_hole 17, template_hole 16)),
                  template_app (template_hole 15, template_hole 14))),
              t_empty)
            ),
        template_predicate
         (template_app (template_app (template_var 2, t_empty), t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_var 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Coinductive_List.lfilter_fixp_parallel_induct",
     "[| ccpo.admissible (prod_lub llist.lub_fun llist.lub_fun)
          (rel_prod llist.le_fun llist.le_fun) (%x. ?P (fst x) (snd x));
         ?P (%_. lSup {}) (%_. lSup {});
         !!f g.
            ?P f g ==>
            ?P (%xs. case xs of LNil => LNil
                     | LCons x xs' =>
                         if ?Pb x then LCons x (f xs') else f xs')
             (%xs. case xs of LNil => LNil
                   | LCons x xs' =>
                       if ?Pa x then LCons x (g xs') else g xs') |]
      ==> ?P (lfilter ?Pb) (lfilter ?Pa)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 26,
                  template_app
                   (template_app
                     (template_hole 25,
                      template_app (template_hole 24, template_hole 23)),
                    template_app (template_hole 22, template_hole 21))),
                template_app
                 (template_app
                   (template_hole 20,
                    template_app (template_hole 19, template_hole 18)),
                  template_app (template_hole 17, template_hole 16))),
              t_empty)
            ),
        template_predicate
         (template_app (template_app (template_var 2, t_empty), t_empty)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_var 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Coinductive_List.llist_induct2",
     "[| ccpo.admissible (prod_lub lSup lSup) (rel_prod lprefix lprefix)
          (%x. ?P (fst x) (snd x));
         ?P LNil LNil;
         !!x xs. [| lfinite xs; ?P xs LNil |] ==> ?P (LCons x xs) LNil;
         !!y ys. [| lfinite ys; ?P LNil ys |] ==> ?P LNil (LCons y ys);
         !!x xs y ys.
            [| lfinite xs; lfinite ys; ?P xs ys |]
            ==> ?P (LCons x xs) (LCons y ys) |]
      ==> ?P ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 18,
                  template_app
                   (template_app (template_hole 17, template_hole 16),
                    template_hole 15)),
                template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_hole 12)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 2, template_hole 9),
              template_hole 8)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 2, template_var 1), template_var 0)
           )))]
