   [("Utils.ran_map_of", "ran (map_of ?xs) <= snd ` set ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Utils.ran_upd_mem", "?v : ran (?m(?k |-> ?v))",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0),
               template_app (template_hole 0, template_var 2))))
         )),
    ("Utils.ran_concat", "ran (?m1.0 ++ ?m2.0) <= ran ?m1.0 Un ran ?m2.0",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Utils.ran_upd", "ran (?m(?k |-> ?v)) <= ran ?m Un {?v}",
     template_inequation
      (less_equals,
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 5, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Utils.map_fst_zip",
     "length ?xs = length ?ys ==> map fst (zip ?xs ?ys) = ?xs",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1))),
    ("Utils.map_snd_zip",
     "length ?xs = length ?ys ==> map snd (zip ?xs ?ys) = ?ys",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Utils.ran_upds",
     "length ?ks = length ?vs ==>
      ran (?m(?ks [|->] ?vs)) <= ran ?m Un set ?vs",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 2),
          template_app (template_hole 5, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 0)),
           template_app (template_hole 0, template_var 1))))),
    ("Utils.single_valued_insert",
     "[| single_valued ?rel;
         !!x y. [| (x, y) : ?rel; x = ?a |] ==> y = ?b |]
      ==> single_valued (insert (?a, ?b) ?rel)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0)),
               template_var 2))
           )))]
