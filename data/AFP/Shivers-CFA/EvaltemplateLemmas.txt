   [("Eval.cont2cont_case_lambda",
     "(!!a b c. cont (%x. ?f x a b c)) ==>
      cont (%x. case ?l of Lambda xa xb xc => ?f x xa xb xc)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Eval.cont2cont_case_prim",
     "[| !!y. cont (%x. ?f1.0 x y); !!y z. cont (%x. ?f2.0 x y z) |]
      ==> cont
           (%x. case ?p of Plus xa => ?f1.0 x xa
                | prim.If xa xb => ?f2.0 x xa xb)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Eval.cont2cont_case_call",
     "[| !!a b c. cont (%x. ?f1.0 x a b c);
         !!a b c. cont (%x. ?f2.0 x a b c) |]
      ==> cont
           (%x. case ?c of App xa xb xc => ?f1.0 x xa xb xc
                | call.Let xa xb xc => ?f2.0 x xa xb xc)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Eval.cont2cont_case_d",
     "[| !!y. cont (%x. ?f1.0 x y); !!y. cont (%x. ?f2.0 x y);
         !!y. cont (%x. ?f3.0 x y); cont ?f4.0 |]
      ==> cont
           (%x. case ?d of DI xa => ?f1.0 x xa | DC xa => ?f2.0 x xa
                | DP xa => ?f3.0 x xa | Stop => ?f4.0 x)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty))))]
