Loading theory "HOL-Library.Function_Algebras" (required by "Draft.ComputabilityTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Stream" (required by "Draft.ComputabilityTemplates" via "Draft.ExtrEqs")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.ComputabilityTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.ComputabilityTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.125s elapsed time, 0.508s cpu time, 0.062s GC time
Loading theory "Draft.HOLCFUtils" (required by "Draft.ComputabilityTemplates" via "Draft.Computability")
instantiation
  bool :: po
  below_bool == below :: bool => bool => bool
instantiation
  set :: (type) po
  below_set == below :: 'a set => 'a set => bool
### theory "HOL-Library.Set_Algebras"
### 0.215s elapsed time, 0.871s cpu time, 0.062s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.ComputabilityTemplates" via "Draft.ExtrEqs")
### theory "Draft.HOLCFUtils"
### 0.100s elapsed time, 0.403s cpu time, 0.000s GC time
Loading theory "Draft.Computability" (required by "Draft.ComputabilityTemplates")
### theory "Draft.Computability"
### 0.109s elapsed time, 0.419s cpu time, 0.106s GC time
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.860s elapsed time, 2.928s cpu time, 0.313s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.785s elapsed time, 2.376s cpu time, 0.342s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.871s elapsed time, 4.521s cpu time, 0.943s GC time
Loading theory "Draft.Templates" (required by "Draft.ComputabilityTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.065s elapsed time, 0.086s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.ComputabilityTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.515s elapsed time, 0.579s cpu time, 0.078s GC time
Loading theory "Draft.ComputabilityTemplates"
val templateLemmas =
   [("Computability.insert_greaterThan", "insert ?n {?n<..} = {?n..}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Computability.powerset_lift_singleton", "\<^ps> ?f${?x} = ?f$?x",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Computability.powerset_lift_union",
     "\<^ps> ?f$(?A Un ?B) = \<^ps> ?f$?A Un \<^ps> ?f$?B",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 2)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           template_var 0)))),
    ("Computability.powerset_lift_UNION",
     "(UN x:?S. \<^ps> ?g$(?A x)) = \<^ps> ?g$(\<Union> (?A ` ?S))",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 2)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 0))))),
    ("Computability.UNION_commute",
     "(UN x:?A. \<Union> (?P x ` ?B)) = (UN y:?B. UN x:?A. ?P x y)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Computability.powerset_lift_iterate_UNION",
     "(UN x:?S. (\<^ps> ?g)\<^bsup>?i\<^esup>$(?A x)) =
      (\<^ps> ?g)\<^bsup>?i\<^esup>$(\<Union> (?A ` ?S))",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 3)),
             template_app (template_hole 0, template_var 2))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty), template_var 0))))),
    ("Computability.theorem10",
     "(FIX f. LAM x. ?g$x Un f$(?r$x)) =
      (LAM x. UN i. ?g$(?r\<^bsup>i\<^esup>$x))",
     template_equation
      (template_app
        (template_app (template_hole 11, template_hole 10),
         template_app (template_hole 9, t_empty)),
       template_app (template_hole 8, t_empty))),
    ("Computability.theorem10ps",
     "(FIX f. LAM x. \<^ps> ?g$x Un f$(\<^ps> ?r$x)) =
      (LAM x. UN i. \<^ps> ?g$((\<^ps> ?r)\<^bsup>i\<^esup>$x))",
     template_equation
      (template_app
        (template_app (template_hole 13, template_hole 12),
         template_app (template_hole 11, t_empty)),
       template_app (template_hole 10, t_empty))),
    ("Computability.theorem12",
     "(FIX f. LAM x. ?g$x Un \<Union> (Rep_cfun f ` ?R$x))$?x =
      \<^ps> ?g$(UN i. (\<^ps> ?R)\<^bsup>i\<^esup>${?x})",
     template_equation
      (template_app
        (template_app
          (template_hole 19,
           template_app
            (template_app (template_hole 18, template_hole 17),
             template_app (template_hole 16, t_empty))),
         template_var 0),
       template_app
        (template_app
          (template_hole 10,
           template_app (template_hole 9, template_var 2)),
         template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, t_empty), template_hole 0))))),
    ("Computability.lemma11",
     "(!!x. ?f$x = ?g$x Un \<Union> (Rep_cfun ?f ` ?R$x)) ==>
      \<^ps> ?f$?S = \<^ps> ?g$?S Un \<^ps> ?f$(\<^ps> ?R$?S)",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 3)),
           template_var 0),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_var 0)),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 3)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_var 0)))))),
    ("Computability.theorem12'",
     "?F = (FIX F. LAM x. \<^ps> ?g$x Un F$(\<^ps> ?R$x)) ==>
      (FIX f. LAM x. ?g$x Un \<Union> (Rep_cfun f ` ?R$x)) =
      (LAM x. ?F${x})",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 19, template_hole 18),
            template_app (template_hole 17, t_empty)))],
       template_equation
        (template_app
          (template_app (template_hole 9, template_hole 8),
           template_app (template_hole 7, t_empty)),
         template_app (template_hole 6, t_empty))))]:
   (string * thm * template) list
### theory "Draft.ComputabilityTemplates"
### 0.429s elapsed time, 0.611s cpu time, 0.105s GC time
val it = (): unit
