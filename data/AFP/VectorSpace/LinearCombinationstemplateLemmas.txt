   [("LinearCombinations.ring_subset_carrier",
     "[| ?x : ?A; ?A <= carrier ?R |] ==> ?x : carrier ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 0, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 0, template_var 0))
           ))),
    ("LinearCombinations.module_hom_closed",
     "?f : LinearCombinations.module_hom ?R ?M ?N ==>
      ?f : carrier ?M \<rightarrow> carrier ?N",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               t_empty))
           ))),
    ("LinearCombinations.disj_if",
     "[| ?A Int ?B = {}; ?x : ?B |]
      ==> (if ?x : ?A then ?f ?x else ?g ?x) = ?g ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 4), template_var 3),
          template_hole 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 4)),
             template_app (template_var 1, template_var 2)),
           template_app (template_var 0, template_var 2)),
         template_app (template_var 0, template_var 2)))),
    ("LinearCombinations.module_hom_smult",
     "[| ?f : LinearCombinations.module_hom ?R ?M ?N; ?r : carrier ?R;
         ?m : carrier ?M |]
      ==> ?f (?r \<odot>\<^bsub>?M\<^esub> ?m) =
          ?r \<odot>\<^bsub>?N\<^esub> ?f ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5),
              template_app
               (template_app
                 (template_app (template_hole 7, template_var 4),
                  template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 3))
            )],
       template_equation
        (template_app
          (template_var 5,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_app (template_var 5, template_var 0))))),
    ("LinearCombinations.module_hom_add",
     "[| ?f : LinearCombinations.module_hom ?R ?M ?N; ?m1.0 : carrier ?M;
         ?m2.0 : carrier ?M |]
      ==> ?f (?m1.0 \<oplus>\<^bsub>?M\<^esub> ?m2.0) =
          ?f ?m1.0 \<oplus>\<^bsub>?N\<^esub> ?f ?m2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 5),
              template_app
               (template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 3))
            )],
       template_equation
        (template_app
          (template_var 5,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_app (template_var 5, template_var 1)),
           template_app (template_var 5, template_var 0))))),
    ("LinearCombinations.module_criteria",
     "[| cring ?R; \<zero>\<^bsub>?M\<^esub> : carrier ?M;
         ALL v w.
            v : carrier ?M & w : carrier ?M -->
            v \<oplus>\<^bsub>?M\<^esub> w : carrier ?M;
         ALL v:carrier ?M.
            EX neg_v:carrier ?M.
               v \<oplus>\<^bsub>?M\<^esub> neg_v =
               \<zero>\<^bsub>?M\<^esub>;
         ALL c v.
            c : carrier ?R & v : carrier ?M -->
            c \<odot>\<^bsub>?M\<^esub> v : carrier ?M;
         ALL v w.
            v : carrier ?M & w : carrier ?M -->
            v \<oplus>\<^bsub>?M\<^esub> w = w \<oplus>\<^bsub>?M\<^esub> v;
         ALL v w x.
            v : carrier ?M & w : carrier ?M & x : carrier ?M -->
            v \<oplus>\<^bsub>?M\<^esub> w \<oplus>\<^bsub>?M\<^esub> x =
            v \<oplus>\<^bsub>?M\<^esub> (w \<oplus>\<^bsub>?M\<^esub> x);
         ALL v:carrier ?M.
            v \<oplus>\<^bsub>?M\<^esub> \<zero>\<^bsub>?M\<^esub> = v;
         ALL a b v.
            a : carrier ?R & b : carrier ?R & v : carrier ?M -->
            a \<otimes>\<^bsub>?R\<^esub> b \<odot>\<^bsub>?M\<^esub> v =
            a \<odot>\<^bsub>?M\<^esub> (b \<odot>\<^bsub>?M\<^esub> v);
         ALL v:carrier ?M.
            \<one>\<^bsub>?R\<^esub> \<odot>\<^bsub>?M\<^esub> v = v;
         ALL a b v.
            a : carrier ?R & b : carrier ?R & v : carrier ?M -->
            (a \<oplus>\<^bsub>?R\<^esub> b) \<odot>\<^bsub>?M\<^esub> v =
            a \<odot>\<^bsub>?M\<^esub> v \<oplus>\<^bsub>?M\<^esub>
            b \<odot>\<^bsub>?M\<^esub> v;
         ALL a v w.
            a : carrier ?R & v : carrier ?M & w : carrier ?M -->
            a \<odot>\<^bsub>?M\<^esub> (v \<oplus>\<^bsub>?M\<^esub> w) =
            a \<odot>\<^bsub>?M\<^esub> v \<oplus>\<^bsub>?M\<^esub>
            a \<odot>\<^bsub>?M\<^esub> w |]
      ==> Module.module ?R ?M",
     template_implication
      ([template_predicate
         (template_app (template_hole 18, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app (template_hole 16, template_var 0)),
              template_app (template_hole 15, template_var 0))
            ),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 15, template_var 0)),
              t_empty)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 15, template_var 0)),
              t_empty)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 15, template_var 0)),
              t_empty)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           )))]
