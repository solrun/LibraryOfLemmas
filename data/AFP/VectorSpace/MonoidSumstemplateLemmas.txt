   [("MonoidSums.foldSet_not_depend",
     "?D <= ?E ==> foldSetD ?D ?f ?e <= foldSetD ?E ?f ?e",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("MonoidSums.foldD_not_depend",
     "[| LCD ?B ?D ?f; LCD ?B ?E ?f; ?D <= ?E; ?e : ?D; ?A <= ?B;
         finite ?B |]
      ==> foldD ?D ?f ?e ?A = foldD ?E ?f ?e ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 5),
                template_var 2),
              template_var 3)
            ),
        template_inequation (less_equals, template_var 4, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 4)
            ),
        template_inequation (less_equals, template_var 0, template_var 5),
        template_predicate
         (template_app (template_hole 2, template_var 5))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3),
             template_var 1),
           template_var 0))))]
