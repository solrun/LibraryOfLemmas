   [("Complementation.reach_0", "reach ?A ?w 0 = initial ?A",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_app (template_hole 0, template_var 1))),
    ("Complementation.reach_nodes", "reach ?A ?w ?i <= nodes ?A",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app (template_hole 0, template_var 2))),
    ("Complementation.complement_finite",
     "finite (nodes ?A) ==> finite (nodes (complement ?A))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Complementation.states_nodes",
     "?fP : nodes (complement ?A) ==> snd ?fP <= nodes ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)))
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Complementation.dom_nodes",
     "?fP : nodes (complement ?A) ==> dom (fst ?fP) <= nodes ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 0)))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Complementation.reach_gunodes",
     "{?i} \<times> reach ?A ?w ?i <= gunodes ?A ?w",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_hole 3)),
         t_empty),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Complementation.complement_language",
     "finite (nodes ?A) ==>
      language (complement ?A) = streams (alphabet ?A) - language ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0))),
           template_app (template_hole 0, template_var 0))))),
    ("Complementation.reach_Suc_empty",
     "?w !! ?n ~: alphabet ?A ==> reach ?A ?w (Suc ?n) = {}",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 2),
                      template_var 1)),
                  template_app (template_hole 4, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 0),
             template_var 2),
           template_app (template_hole 1, template_var 1)),
         template_hole 0))),
    ("Complementation.complement_ranking",
     "[| ?w : language (complement ?A); !!f. ranking ?A ?w f ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Complementation.ran_nodes",
     "?fP : nodes (complement ?A) ==>
      ran (fst ?fP) <= {0..2 * card (nodes ?A)}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 0)))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 9, template_app (template_hole 8, template_var 1)),
         template_app
          (template_app (template_hole 7, template_hole 6),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2))),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))))))),
    ("Complementation.ranking_complement",
     "[| finite (nodes ?A); ?w : streams (alphabet ?A); ranking ?A ?w ?f |]
      ==> ?w : language (complement ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)))
           ))),
    ("Complementation.reach_Suc",
     "reach ?A ?w (Suc ?n) =
      (if ?w !! ?n : alphabet ?A
       then \<Union> (transition ?A (?w !! ?n) ` reach ?A ?w ?n) else {})",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 9, template_var 2), template_var 1),
         template_app (template_hole 8, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_var 0)),
               template_app (template_hole 4, template_var 2))),
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_app (template_hole 9, template_var 2),
                   template_var 1),
                 template_var 0)))),
         template_hole 0))),
    ("Complementation.reach_Suc_succ",
     "?w !! ?n : alphabet ?A ==>
      reach ?A ?w (Suc ?n) =
      \<Union> (transition ?A (?w !! ?n) ` reach ?A ?w ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1)),
              template_app (template_hole 6, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 0),
             template_var 2),
           template_app (template_hole 3, template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app
                  (template_app (template_hole 7, template_var 2),
                   template_var 1))),
             template_app
              (template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 2),
               template_var 1)))))),
    ("Complementation.complement_trace_snth",
     "[| run (complement ?A) (?w ||| ?r) ?p;
         [| fst ((?p ## trace (?w ||| ?r) ?p) !! Suc ?k)
            : lr_succ ?A (?w !! ?k)
               (fst ((?p ## trace (?w ||| ?r) ?p) !! ?k));
            snd ((?p ## trace (?w ||| ?r) ?p) !! Suc ?k) =
            st_succ ?A (?w !! ?k)
             (fst ((?p ## trace (?w ||| ?r) ?p) !! Suc ?k))
             (snd ((?p ## trace (?w ||| ?r) ?p) !! ?k)) |]
         ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 14,
                  template_app (template_hole 13, template_var 5)),
                template_app
                 (template_app (template_hole 12, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_hole 10,
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app
                          (template_app (template_hole 8, template_var 2),
                           template_app
                            (template_app
                              (template_app (template_hole 7, t_empty),
                               template_app
                                (template_app
                                  (template_hole 12, template_var 4),
                                 template_var 3)),
                             template_var 2))),
                       template_app (template_hole 5, template_var 1)))),
                 template_app
                  (template_app
                    (template_app (template_hole 4, template_var 5),
                     template_app
                      (template_app (template_hole 3, template_var 4),
                       template_var 1)),
                   template_app
                    (template_hole 10,
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app
                          (template_app (template_hole 8, template_var 2),
                           template_app
                            (template_app
                              (template_app (template_hole 7, t_empty),
                               template_app
                                (template_app
                                  (template_hole 12, template_var 4),
                                 template_var 3)),
                             template_var 2))),
                       template_var 1))))
               )],
          template_implication
           ([template_equation
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 8, template_var 2),
                       template_app
                        (template_app
                          (template_app (template_hole 7, t_empty),
                           template_app
                            (template_app
                              (template_hole 12, template_var 4),
                             template_var 3)),
                         template_var 2))),
                   template_app (template_hole 5, template_var 1))),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_app
                      (template_app (template_hole 3, template_var 4),
                       template_var 1)),
                   template_app
                    (template_hole 10,
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app
                          (template_app (template_hole 8, template_var 2),
                           template_app
                            (template_app
                              (template_app (template_hole 7, t_empty),
                               template_app
                                (template_app
                                  (template_hole 12, template_var 4),
                                 template_var 3)),
                             template_var 2))),
                       template_app (template_hole 5, template_var 1)))),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 8, template_var 2),
                         template_app
                          (template_app
                            (template_app (template_hole 7, t_empty),
                             template_app
                              (template_app
                                (template_hole 12, template_var 4),
                               template_var 3)),
                           template_var 2))),
                     template_var 1))))],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0)))]
