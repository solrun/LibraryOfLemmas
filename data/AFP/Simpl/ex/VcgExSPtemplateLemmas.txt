   [("VcgExSP.fac_simp", "0 < ?i ==> fac ?i = ?i * fac (?i - 1)",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 0)],
       template_equation
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))))),
    ("VcgExSP.path_is_list",
     "[| Path ?b ?next ?a ?Ps; ?a ~: set ?Ps; ?a ~= Null |]
      ==> List ?b (?next(?a := Null)) (?Ps @ [?a])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_app (template_hole 7, template_var 0))
                )
            ),
        template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 1),
                 template_hole 5)),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)))
           ))),
    ("VcgExSP.neq_dP",
     "[| ?p ~= ?q; Path ?p ?h ?q ?Ps; distinct ?Ps |]
      ==> EX Qs. ?p ~= Null & ?Ps = ?p # Qs & ?p ~: set Qs",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 1),
                template_var 2),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("VcgExSP.CombineStrip'",
     "[| ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c' ?Q,?A;
         ?\<Gamma>,?\<Theta>|- ?P ?c'' UNIV,UNIV;
         ?c'' = mark_guards False (strip_guards (- ?F) ?c');
         ?c = mark_guards False ?c' |]
      ==> ?\<Gamma>,?\<Theta>|- ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 7, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 7, template_var 8),
                        template_var 7),
                      template_hole 6),
                    template_var 5),
                  template_var 1),
                template_hole 5),
              template_hole 5)
            ),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 3, template_hole 2),
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 6)),
              template_var 4))),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 3, template_hole 2),
            template_var 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 7, template_var 8),
                       template_var 7),
                     template_hole 6),
                   template_var 5),
                 template_var 0),
               template_var 3),
             template_var 2)
           ))),
    ("VcgExSP.ProcRec2",
     "[| ALL Z.
            ?\<Gamma>,?\<Theta> Un
                      ((UN Z. {(?P1.0 Z, ?p1.0, ?Q1.0 Z, ?A1.0 Z)}) Un
                       (UN Z. {(?P2.0 Z, ?p2.0, ?Q2.0 Z, ?A2.0 Z)}))
               \<turnstile>\<^bsub>/?F \<^esub>(?P1.0 Z)
         the (?\<Gamma> ?p1.0) (?Q1.0 Z),(?A1.0 Z);
         ALL Z.
            ?\<Gamma>,?\<Theta> Un
                      ((UN Z. {(?P1.0 Z, ?p1.0, ?Q1.0 Z, ?A1.0 Z)}) Un
                       (UN Z. {(?P2.0 Z, ?p2.0, ?Q2.0 Z, ?A2.0 Z)}))
               \<turnstile>\<^bsub>/?F \<^esub>(?P2.0 Z)
         the (?\<Gamma> ?p2.0) (?Q2.0 Z),(?A2.0 Z);
         ?p1.0 : dom ?\<Gamma>; ?p2.0 : dom ?\<Gamma> |]
      ==> (ALL Z.
              ?\<Gamma>,?\<Theta>
                 \<turnstile>\<^bsub>/?F \<^esub>(?P1.0 Z) Call ?p1.0
           (?Q1.0 Z),(?A1.0 Z)) &
          (ALL Z.
              ?\<Gamma>,?\<Theta>
                 \<turnstile>\<^bsub>/?F \<^esub>(?P2.0 Z) Call ?p2.0
           (?Q2.0 Z),(?A2.0 Z))",
     template_implication
      ([template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 7),
              template_app (template_hole 2, template_var 10))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app (template_hole 2, template_var 10))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1, template_app (template_hole 15, t_empty)),
             template_app (template_hole 15, t_empty))
           )))]
