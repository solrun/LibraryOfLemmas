   [("ProcParExSP.conseq_exploit_pre'",
     "ALL s:?S. ?\<Gamma>,?\<Theta>|- ({s} Int ?P) ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>|- (?P Int ?S) ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 6), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 5),
                       template_var 4),
                     template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 6)),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("ProcParExSP.conseq_exploit_pre'''",
     "ALL s:?S.
         ALL Z. ?\<Gamma>,?\<Theta>|- ({s} Int ?P Z) ?c (?Q Z),(?A Z) ==>
      ALL Z. ?\<Gamma>,?\<Theta>|- (?P Z Int ?S) ?c (?Q Z),(?A Z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 6), t_empty)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("ProcParExSP.conseq_exploit_pre''",
     "ALL Z.
         ALL s:?S Z.
            ?\<Gamma>,?\<Theta>|- ({s} Int ?P Z) ?c (?Q Z),(?A Z) ==>
      ALL Z. ?\<Gamma>,?\<Theta>|- (?P Z Int ?S Z) ?c (?Q Z),(?A Z)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("ProcParExSP.DynProcProcPar'",
     "[| ?P <= {s. ?p s = ?q &
                   (EX Z. ?init s : ?P' Z &
                          (ALL t:?Q' Z. ?return s t : ?R s t) &
                          (ALL t:?A' Z. ?return s t : ?A))};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?R s t) ?result s t ?Q,?A;
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?P' Z) Call ?q (?Q' Z),
         (?A' Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P
       dynCall ?init ?p ?return ?result ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 14,
          template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 14),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 11),
                       template_var 13),
                     template_var 8),
                   template_var 1)),
               template_var 0),
             template_var 5)
           )))]
