   [("HeapList.List_Null", "List Null ?h ?ps = (?ps = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 1),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 0))),
    ("HeapList.List_empty", "List ?p ?h [] = (?p = Null)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_equation (template_var 1, template_hole 0))),
    ("HeapList.conj_impl_simp", "(?P & ?Q --> ?K) = (?P --> ?Q --> ?K)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("HeapList.Path_Null_iff",
     "Path Null ?h ?y ?xs = (?xs = [] & ?y = Null)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("HeapList.List_conv_islist_list",
     "List ?p ?h ?ps = (islist ?p ?h & ?ps = list ?p ?h)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("HeapList.List_upd_same",
     "List ?p (?h(?p := ?p)) ?ps = (?p = Null & ?ps = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_app
                 (template_app
                   (template_app (template_hole 5, template_var 1),
                    template_var 2),
                  template_var 2)),
              template_var 0)
            )],
       template_dunno)),
    ("HeapList.List_app",
     "List ?p ?h (?as @ ?bs) = (EX y. Path ?p ?h y ?as & List y ?h ?bs)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app (template_hole 2, t_empty))),
    ("HeapList.List_cons",
     "List ?p ?h (?a # ?ps) = (?p = ?a & ?p ~= Null & List (?h ?p) ?h ?ps)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("HeapList.Path_append",
     "Path ?p ?f ?q (?as @ ?bs) =
      (EX y. Path ?p ?f y ?as & Path y ?f ?q ?bs)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("HeapList.Path_upd_same",
     "Path ?p (?f(?p := ?p)) ?q ?qs =
      (?p = Null & ?q = Null & ?qs = [] |
       ?p ~= Null & ?q = ?p & (ALL x:set ?qs. x = ?p))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 3),
                  template_app
                   (template_app
                     (template_app (template_hole 9, template_var 2),
                      template_var 3),
                    template_var 3)),
                template_var 1),
              template_var 0)
            )],
       template_dunno))]
