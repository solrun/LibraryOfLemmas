   [("HoareTotal.Throw",
     "?P <= ?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Throw ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 5),
                 template_hole 0),
               template_var 0),
             template_var 4)
           ))),
    ("HoareTotal.Skip",
     "?P <= ?Q ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Skip ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 5),
                 template_hole 0),
               template_var 4),
             template_var 0)
           ))),
    ("HoareTotal.switchNil",
     "?P <= ?Q ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P switch ?v [] ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 6, template_var 5)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 6),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_hole 0)),
               template_var 5),
             template_var 0)
           ))),
    ("HoareTotalProps.CollInt_iff",
     "{s. ?P s} Int {s. ?Q s} = {s. ?P s & ?Q s}",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_app (template_hole 1, t_empty)),
       template_app (template_hole 1, t_empty))),
    ("HoareTotalProps.hoaret_complete",
     "?\<Gamma>|=t/?F ?P ?c ?Q,?A ==>
      ?\<Gamma>,{}\<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 5),
                       template_hole 0),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.hoaret_sound'",
     "?\<Gamma>,{}\<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A ==>
      ?\<Gamma>|=t/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 5),
                        template_hole 1),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.MergeGuards_iff",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P merge_guards ?c ?Q,?A =
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("HoareTotalProps.hoaret_complete'",
     "?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.total_to_partial",
     "?\<Gamma>,{}\<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A ==>
      ?\<Gamma>,{}\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 5),
                        template_hole 1),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_hole 1),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.hoaret_sound",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.validt_restrict_to_validt",
     "?\<Gamma>|\<^bsub>?M\<^esub>|=t/?F ?P ?c ?Q,?A ==>
      ?\<Gamma>|=t/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 1,
                        template_app
                         (template_app (template_hole 0, template_var 6),
                          template_var 5)),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 6),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.MergeGuardsI_sound",
     "?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>|=t/?F  ?P merge_guards ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_app (template_hole 0, template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.NormalizeI_sound",
     "?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>|=t/?F  ?P Language.normalize ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_app (template_hole 0, template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.MergeGuardsI",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P merge_guards ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_app (template_hole 0, template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.NormalizeI",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Language.normalize ?c
           ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_app (template_hole 0, template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.raise",
     "?P <= {s. ?f s : ?A} ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P raise ?f ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 6,
          template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 6),
                 template_app (template_hole 0, template_var 5)),
               template_var 0),
             template_var 4)
           ))),
    ("HoareTotal.Basic",
     "?P <= {s. ?f s : ?Q} ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Basic ?f ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 6,
          template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 6),
                 template_app (template_hole 0, template_var 5)),
               template_var 4),
             template_var 0)
           ))),
    ("HoareTotalProps.MergeGuardsD_sound",
     "?\<Gamma>,?\<Theta>|=t/?F  ?P merge_guards ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_app (template_hole 0, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.NormalizeD_sound",
     "?\<Gamma>,?\<Theta>|=t/?F  ?P Language.normalize ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_app (template_hole 0, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.MergeGuardsD",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P merge_guards ?c
           ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_app (template_hole 0, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.NormalizeD",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Language.normalize ?c
           ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_app (template_hole 0, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.MarkGuardsI_sound",
     "?\<Gamma>,?\<Theta>|=t/{}  ?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>|=t/{}  ?P mark_guards ?f ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 6),
                        template_var 5),
                      template_hole 1),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 6),
                       template_var 5),
                     template_hole 1),
                   template_var 4),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.GuardsNil",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P guards [] ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.MarkGuardsI",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/{}\<^esub> ?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/{}\<^esub> ?P mark_guards ?f ?c
           ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 6),
                        template_var 5),
                      template_hole 1),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 6),
                       template_var 5),
                     template_hole 1),
                   template_var 4),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotalProps.MarkGuardsD_sound",
     "?\<Gamma>,?\<Theta>|=t/{}  ?P mark_guards ?f ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>|=t/{}  ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 6),
                        template_var 5),
                      template_hole 1),
                    template_var 4),
                  template_app
                   (template_app (template_hole 0, template_var 3),
                    template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 6),
                       template_var 5),
                     template_hole 1),
                   template_var 4),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.MarkGuardsD",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/{}\<^esub> ?P mark_guards ?f ?c
           ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/{}\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 6),
                        template_var 5),
                      template_hole 1),
                    template_var 4),
                  template_app
                   (template_app (template_hole 0, template_var 3),
                    template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 6),
                       template_var 5),
                     template_hole 1),
                   template_var 4),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.augment_procs",
     "?\<Gamma>|\<^bsub>?M\<^esub>,{}
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A ==>
      ?\<Gamma>,{}\<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_hole 2,
                          template_app
                           (template_app (template_hole 1, template_var 6),
                            template_var 5)),
                        template_hole 0),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 6),
                       template_hole 0),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalDef.validt_augment_Faults",
     "[| ?\<Gamma>|=t/?F ?P ?c ?Q,?A; ?F <= ?F' |]
      ==> ?\<Gamma>|=t/?F' ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 5, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 6),
                     template_var 0),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotalProps.SubsetGuards_sound",
     "[| ?c \<subseteq>\<^sub>g ?c';
         ?\<Gamma>,?\<Theta>|=t/{}  ?P ?c' ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>|=t/{}  ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 4),
                        template_var 3),
                      template_hole 0),
                    template_var 2),
                  template_var 5),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_hole 0),
                   template_var 2),
                 template_var 6),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.SubsetGuards",
     "[| ?c \<subseteq>\<^sub>g ?c';
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/{}\<^esub> ?P ?c' ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/{}\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 4),
                        template_var 3),
                      template_hole 0),
                    template_var 2),
                  template_var 5),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_hole 0),
                   template_var 2),
                 template_var 6),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.augment_Faults",
     "[| ?\<Gamma>,{}\<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A;
         ?F <= ?F' |]
      ==> ?\<Gamma>,{}\<turnstile>\<^sub>t\<^bsub>/?F'\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 6),
                        template_hole 1),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 5, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 6),
                       template_hole 1),
                     template_var 0),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.annotateI",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?anno ?Q,?A;
         ?c = ?anno |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation (template_var 0, template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotalDef.hoaret_augment_context",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?p ?Q,?A;
         ?\<Theta> <= ?\<Theta>' |]
      ==> ?\<Gamma>,?\<Theta>'
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?p ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 6, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 7),
                       template_var 0),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotalDef.conseqPre",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P' ?c ?Q,?A;
         ?P <= ?P' |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 0),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.TrivPostNoAbr",
     "ALL Z.
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) ?c
              (?Q' Z),{} ==>
      ALL Z.
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) ?c UNIV,{}",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("HoareTotal.conseq_exploit_pre",
     "ALL s:?P.
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ({s} Int ?P) ?c
              ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 6), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 6),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.annotate_normI",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?anno ?Q,?A;
         Language.normalize ?c = Language.normalize ?anno |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 0, template_var 0),
          template_app (template_hole 0, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.reannotateWhileNoGuard",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P whileAnno ?b ?I ?V ?c
           ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P whileAnno ?b ?J ?V ?c
           ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 0, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 7),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 6),
                       template_var 0),
                     template_var 4),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.TrivPost",
     "ALL Z.
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) ?c
              (?Q' Z),(?A' Z) ==>
      ALL Z.
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) ?c UNIV,UNIV",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("HoareTotal.annotateWhile",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           whileAnnoG ?gs ?b ?I ?V ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P while ?gs ?b ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 1, template_var 6),
                          template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 7),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 6),
                     template_var 5),
                   template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.conseq_extract_state_indep_prop",
     "[| ALL s:?P. ?R;
         ?R ==>
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 7), t_empty)
            ),
        template_implication
         ([template_predicate (template_var 6)],
          template_predicate
           (
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 0, template_var 5),
                          template_var 4),
                        template_var 3),
                      template_var 7),
                    template_var 2),
                  template_var 1),
                template_var 0)
              ))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 7),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.hoaret_to_hoarep'",
     "ALL Z.
         ?\<Gamma>,{}
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P Z) ?p
              (?Q Z),(?A Z) ==>
      ALL Z.
         ?\<Gamma>,{}
            \<turnstile>\<^bsub>/?F \<^esub>(?P Z) ?p (?Q Z),(?A Z)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("HoareTotal.augment_FaultsUNIV",
     "ALL Z.
         ?\<Gamma>,{}
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P Z) ?p
              (?Q Z),(?A Z) ==>
      ALL Z.
         ?\<Gamma>,{}
            \<turnstile>\<^sub>t\<^bsub>/UNIV\<^esub> (?P Z) ?p
                (?Q Z),(?A Z)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("HoareTotal.augment_emptyFaults",
     "ALL Z.
         ?\<Gamma>,{}
            \<turnstile>\<^sub>t\<^bsub>/{}\<^esub> (?P Z) ?p
              (?Q Z),(?A Z) ==>
      ALL Z.
         ?\<Gamma>,{}
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P Z) ?p
              (?Q Z),(?A Z)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("HoareTotal.reannotateWhile",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           whileAnnoG ?gs ?b ?I ?V ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           whileAnnoG ?gs ?b ?J ?V ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 11),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 0, template_var 7),
                          template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 11),
                       template_var 10),
                     template_var 9),
                   template_var 8),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 7),
                         template_var 6),
                       template_var 0),
                     template_var 4),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.Guard",
     "[| ?P <= ?g Int ?R;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Guard ?f ?g ?c
               ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 9,
          template_app
           (template_app (template_hole 2, template_var 8),
            template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 7),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 8),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.GuaranteeAsGuard",
     "[| ?P <= ?g Int ?R;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               guaranteeStrip ?f ?g ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 9,
          template_app
           (template_app (template_hole 2, template_var 8),
            template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 7),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 8),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotalProps.TerminationPartial",
     "[| ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A;
         ALL s:?P. ?\<Gamma>\<turnstile>?c \<down> Normal s |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.SplitTotalPartial",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q',?A';
         ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 0, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.GuardSwap",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c ?Q,?A;
         ?P <= ?g Int ?R |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Guard ?f ?g ?c
               ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 6))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotal.GuaranteeAsGuardSwap",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c ?Q,?A;
         ?P <= ?g Int ?R |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               guaranteeStrip ?f ?g ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 6))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotalProps.SplitTotalPartial'",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/UNIV\<^esub> ?P ?c ?Q',?A';
         ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 8),
                        template_var 7),
                      template_hole 1),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 0, template_var 8),
                        template_var 7),
                      template_var 2),
                    template_var 6),
                  template_var 5),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 8),
                       template_var 7),
                     template_var 2),
                   template_var 6),
                 template_var 5),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.TerminationPartial_sound",
     "[| ALL s:?P. ?\<Gamma>\<turnstile>?c \<down> Normal s;
         ?\<Gamma>,?\<Theta>|=/?F ?P ?c ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 6), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 5),
                        template_var 3),
                      template_var 2),
                    template_var 6),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 3),
                     template_var 2),
                   template_var 6),
                 template_var 4),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalDef.conseqPost",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q',?A';
         ?Q' <= ?Q; ?A' <= ?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 3, template_var 1),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.GuardsCons",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           Guard ?f ?g (guards ?gs ?c) ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           guards ((?f, ?g) # ?gs) ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_app
                     (template_app (template_hole 2, template_var 3),
                      template_var 2))),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 6),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 0, template_var 5),
                           template_var 4)),
                       template_var 3)),
                   template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.GuardsConsGuaranteeStrip",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           guaranteeStrip ?f ?g (guards ?gs ?c) ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           guards (guaranteeStripPair ?f ?g # ?gs) ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_app
                     (template_app (template_hole 2, template_var 3),
                      template_var 2))),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 6),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 0, template_var 5),
                           template_var 4)),
                       template_var 3)),
                   template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.GuardsFlip_sound",
     "[| ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A;
         ?\<Gamma>,?\<Theta>|=/- ?F ?P ?c UNIV,UNIV |]
      ==> ?\<Gamma>,?\<Theta>|=t/{}  ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 6),
                        template_var 5),
                      template_app (template_hole 2, template_var 4)),
                    template_var 3),
                  template_var 2),
                template_hole 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 6),
                       template_var 5),
                     template_hole 0),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.GuardsFlip",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/- ?F \<^esub>?P ?c UNIV,UNIV |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/{}\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 6),
                        template_var 5),
                      template_app (template_hole 2, template_var 4)),
                    template_var 3),
                  template_var 2),
                template_hole 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 6),
                       template_var 5),
                     template_hole 0),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.BSeq",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c\<^sub>1 ?R,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c\<^sub>2 ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               bseq ?c\<^sub>1 ?c\<^sub>2 ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 3),
                  template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1)),
               template_var 0),
             template_var 2)
           ))),
    ("HoareTotal.Seq",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c\<^sub>1 ?R,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c\<^sub>2 ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               Seq ?c\<^sub>1 ?c\<^sub>2 ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 3),
                  template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1)),
               template_var 0),
             template_var 2)
           ))),
    ("HoareTotal.SeqSwap",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c2.0 ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c1.0 ?R,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Seq ?c1.0 ?c2.0
               ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 1),
                  template_var 0),
                template_var 5),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoareTotal.CatchSwap",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c\<^sub>2 ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c\<^sub>1 ?Q,?R |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               Catch ?c\<^sub>1 ?c\<^sub>2 ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 1),
                  template_var 0),
                template_var 3),
              template_var 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoareTotal.Catch",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c\<^sub>1 ?Q,?R;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c\<^sub>2 ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               Catch ?c\<^sub>1 ?c\<^sub>2 ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 2),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1)),
               template_var 3),
             template_var 0)
           ))),
    ("HoareTotal.FCall",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           call ?init ?p ?return (%s t. ?c (?result t)) ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           fcall ?init ?p ?return ?result ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    t_empty)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 7),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 5),
                       template_var 4),
                     template_var 2),
                   template_var 3)),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.CombineStrip_sound",
     "[| ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A;
         ?\<Gamma>,?\<Theta>|=/{} ?P strip_guards (- ?F) ?c UNIV,UNIV |]
      ==> ?\<Gamma>,?\<Theta>|=t/{}  ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 5, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 6),
                        template_var 5),
                      template_hole 3),
                    template_var 3),
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app (template_hole 1, template_var 4)),
                    template_var 2)),
                template_hole 0),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 6),
                       template_var 5),
                     template_hole 3),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.CombineStrip",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/{} \<^esub>?P strip_guards (- ?F) ?c UNIV,
      UNIV |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/{}\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 5, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 6),
                        template_var 5),
                      template_hole 3),
                    template_var 3),
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app (template_hole 1, template_var 4)),
                    template_var 2)),
                template_hole 0),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 6),
                       template_var 5),
                     template_hole 3),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.ProcBody",
     "[| ?P <= ?P';
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P' ?body ?Q,?A;
         ?\<Gamma> ?p = Some ?body |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Call ?p ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 8, template_var 7),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 7),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app (template_var 6, template_var 0),
          template_app (template_hole 1, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 8),
                 template_app (template_hole 0, template_var 0)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.GuardStrip",
     "[| ?P <= ?R;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c ?Q,?A;
         ?f : ?F |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Guard ?f ?g ?c
               ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 9, template_var 8),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 8),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoareTotal.GuaranteeStrip",
     "[| ?P <= ?R;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c ?Q,?A;
         ?f : ?F |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               guaranteeStrip ?f ?g ?c ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 9, template_var 8),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 8),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoareTotal.GuardStripSwap",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c ?Q,?A;
         ?P <= ?R; ?f : ?F |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Guard ?f ?g ?c
               ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_inequation (less_equals, template_var 2, template_var 6),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 7)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotal.GuaranteeStripSwap",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c ?Q,?A;
         ?P <= ?R; ?f : ?F |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               guaranteeStrip ?f ?g ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_inequation (less_equals, template_var 2, template_var 6),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 7)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotalProps.image_Un_conv",
     "?f ` (UN p:dom ?\<Gamma>. UN Z. {?x p Z}) =
      (UN p:dom ?\<Gamma>. UN Z. {?f (?x p Z)})",
     template_equation
      (template_app
        (template_app (template_hole 12, template_var 2),
         template_app
          (template_hole 11,
           template_app
            (template_app (template_hole 10, t_empty),
             template_app (template_hole 5, template_var 0)))),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 5, template_var 0))))),
    ("HoareTotalProps.TerminationPartialStrip",
     "[| ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A;
         ALL s:?P.
            strip ?F'
             ?\<Gamma>\<turnstile>strip_guards ?F' ?c \<down> Normal s |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 6, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotalProps.PostConjI_sound",
     "[| ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A;
         ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?R,?B |]
      ==> ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c (?Q Int ?R),(?A Int ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("HoareTotal.PostConjI",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?R,?B |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c
               (?Q Int ?R),(?A Int ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("HoareTotal.WhileAnnoG",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           guards ?gs (whileAnno ?b ?J ?V (Seq ?c (guards ?gs Skip)))
           ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           whileAnnoG ?gs ?b ?I ?V ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 5, template_var 11),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_app
                   (template_app (template_hole 4, template_var 7),
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 3, template_var 6),
                          template_var 5),
                        template_var 4),
                      template_app
                       (template_app (template_hole 2, template_var 3),
                        template_app
                         (template_app (template_hole 4, template_var 7),
                          template_hole 1))))),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 11),
                       template_var 10),
                     template_var 9),
                   template_var 8),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 7),
                         template_var 6),
                       template_var 0),
                     template_var 4),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.augment_context'",
     "[| ?\<Theta> <= ?\<Theta>';
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P Z) ?p
                 (?Q Z),(?A Z) |]
      ==> ALL Z.
             ?\<Gamma>,?\<Theta>'
                \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P Z) ?p
                  (?Q Z),(?A Z)",
     template_implication
      ([template_inequation (less_equals, template_var 7, template_var 6),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("HoareTotalDef.conseqPrePost",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P' ?c ?Q',?A';
         ?P <= ?P'; ?Q' <= ?Q; ?A' <= ?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_inequation (less_equals, template_var 2, template_var 6),
        template_inequation (less_equals, template_var 4, template_var 1),
        template_inequation (less_equals, template_var 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_var 5),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.AsmUN",
     "(UN Z. {(?P Z, ?p, ?Q Z, ?A Z)}) <= ?\<Theta> ==>
      ALL Z.
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P Z) Call ?p
              (?Q Z),(?A Z)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 10,
            template_app
             (template_app (template_hole 9, t_empty), template_hole 3)),
          template_var 2)],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("HoareTotal.Spec",
     "?P <= {s. (ALL t. (s, t) : ?r --> t : ?Q) & (EX t. (s, t) : ?r)} ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Spec ?r ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 6,
          template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 6),
                 template_app (template_hole 0, template_var 5)),
               template_var 4),
             template_var 0)
           ))),
    ("HoareTotal.WhileAnnoGFix",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           guards ?gs
            (whileAnnoFix ?b ?J ?V (%Z. Seq (?c Z) (guards ?gs Skip)))
           ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           whileAnnoGFix ?gs ?b ?I ?V ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 5, template_var 11),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_app
                   (template_app (template_hole 4, template_var 7),
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 3, template_var 6),
                          template_var 5),
                        template_var 4),
                      t_empty))),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 11),
                       template_var 10),
                     template_var 9),
                   template_var 8),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 7),
                         template_var 6),
                       template_var 0),
                     template_var 4),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.Bind",
     "[| ?P <= {s. s : ?P' s};
         ALL s.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' s) ?c (?e s)
                 ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P bind ?e ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 8,
          template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 8),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 3)),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.CondInt",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P Int ?b) ?c1.0 ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P Int - ?b) ?c2.0
              ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Cond ?b ?c1.0 ?c2.0
               ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_app
                     (template_app (template_hole 2, template_var 5),
                      template_app (template_hole 1, template_var 4))),
                  template_var 0),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 0)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.conseq_no_aux",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P' ?c ?Q',?A';
         ALL s. s : ?P --> s : ?P' & ?Q' <= ?Q & ?A' <= ?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 5, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_var 5),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.ProcNoRec1",
     "[| ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P Z)
                 the (?\<Gamma> ?p) (?Q Z),(?A Z);
         ?p : dom ?\<Gamma> |]
      ==> ALL Z.
             ?\<Gamma>,?\<Theta>
                \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P Z) Call ?p
                  (?Q Z),(?A Z)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 6))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("HoareTotalProps.SplitGuards",
     "[| (?c\<^sub>1 \<inter>\<^sub>g ?c\<^sub>2) = Some ?c;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c\<^sub>1 ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P ?c\<^sub>2 UNIV,UNIV |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_equation
         (template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 8),
              template_var 7)),
          template_app (template_hole 3, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 8),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 7),
                template_hole 0),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 6),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.SplitGuards_sound",
     "[| ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c\<^sub>1 ?Q,?A;
         ?\<Gamma>,?\<Theta>|=/?F ?P ?c\<^sub>2 UNIV,UNIV;
         (?c\<^sub>1 \<inter>\<^sub>g ?c\<^sub>2) = Some ?c |]
      ==> ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 6, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 5, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 1),
                template_hole 4),
              template_hole 4)
            ),
        template_equation
         (template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 4),
              template_var 1)),
          template_app (template_hole 0, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 6, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 0),
               template_var 3),
             template_var 2)
           ))),
    ("HoareTotal.BasicCond",
     "?P <= {s. (?b s --> ?f s : ?Q) & (~ ?b s --> ?g s : ?Q)} ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           Basic (%s. if ?b s then ?f s else ?g s) ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 8,
          template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 8),
                 template_app (template_hole 1, t_empty)),
               template_var 5),
             template_var 0)
           ))),
    ("HoareTotal.condCatchSwap",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c\<^sub>2 ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c\<^sub>1
              ?Q,(?b Int ?R Un - ?b Int ?A) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               condCatch ?c\<^sub>1 ?b ?c\<^sub>2 ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 2),
                  template_var 1),
                template_var 4),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 0),
                    template_var 6)),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 0)),
                  template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotal.PostConjE",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c
              (?Q Int ?R),(?A Int ?B);
         [| ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A;
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?R,?B |]
         ==> ?S |]
      ==> ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 1, template_var 9),
                           template_var 8),
                         template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 2)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 1, template_var 9),
                             template_var 8),
                           template_var 7),
                         template_var 6),
                       template_var 5),
                     template_var 3),
                   template_var 1)
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("HoareTotal.condCatch",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c\<^sub>1
              ?Q,(?b Int ?R Un - ?b Int ?A);
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c\<^sub>2 ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               condCatch ?c\<^sub>1 ?b ?c\<^sub>2 ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 3),
                    template_var 2)),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 3)),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 2),
                  template_var 0),
                template_var 4),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 6),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 3),
                   template_var 0)),
               template_var 4),
             template_var 1)
           ))),
    ("HoareTotalDef.cvalidt_termD",
     "[| ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A;
         ALL (P, p, Q, A):?\<Theta>. ?\<Gamma>|=t/?F P Call p Q,A;
         ?s : ?P |]
      ==> ?\<Gamma>\<turnstile>?c \<down> Normal ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 6),
              template_app (template_hole 7, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 7),
               template_var 3),
             template_app (template_hole 0, template_var 0))
           ))),
    ("HoareTotal.GuaranteeSwap",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c ?Q,?A;
         ?P <= {s. s : ?g --> s : ?R}; ?f : ?F |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Guard ?f ?g ?c
               ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 6, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 4, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 7)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 6, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotal.Guarantee",
     "[| ?P <= {s. s : ?g --> s : ?R};
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c ?Q,?A;
         ?f : ?F |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Guard ?f ?g ?c
               ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 9,
          template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 7),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 8),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.SpecIf",
     "?P <= {s. (?b s --> ?f s : ?Q) &
                (~ ?b s --> ?g s : ?Q & ?h s : ?Q)} ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           Spec (if_rel ?b ?f ?g ?h) ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 9,
          template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 9),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 8),
                         template_var 7),
                       template_var 5),
                     template_var 4))),
               template_var 6),
             template_var 0)
           ))),
    ("HoareTotal.DynComConseq",
     "?P <= {s. EX P' Q' A'.
                   ?\<Gamma>,?\<Theta>
                      \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> P' ?c s
                        Q',A' &
                   ?P <= P' & Q' <= ?Q & A' <= ?A} ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P DynCom ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 6,
          template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 6),
                 template_app (template_hole 0, template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.PostConjI'",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A ==>
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?R,?B |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c
               (?Q Int ?R),(?A Int ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 1, template_var 8),
                           template_var 7),
                         template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate
           (
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 1, template_var 8),
                          template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 1),
                template_var 0)
              ))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("HoareTotalProps.Merge_PostConj_sound",
     "[| ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A;
         ?\<Gamma>,?\<Theta>|=t/?G  ?P' ?c ?R,?X; ?F <= ?G; ?P <= ?P' |]
      ==> ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c (?Q Int ?R),(?A Int ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 10),
                        template_var 9),
                      template_var 3),
                    template_var 2),
                  template_var 6),
                template_var 1),
              template_var 0)
            ),
        template_inequation (less_equals, template_var 8, template_var 3),
        template_inequation (less_equals, template_var 7, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 7),
                 template_var 6),
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0))
           ))),
    ("HoareTotalProps.Merge_PostConj",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?G\<^esub> ?P' ?c ?R,?X;
         ?F <= ?G; ?P <= ?P' |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c
               (?Q Int ?R),(?A Int ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 10),
                        template_var 9),
                      template_var 3),
                    template_var 2),
                  template_var 6),
                template_var 1),
              template_var 0)
            ),
        template_inequation (less_equals, template_var 8, template_var 3),
        template_inequation (less_equals, template_var 7, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 7),
                 template_var 6),
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0))
           ))),
    ("HoareTotal.Cond'",
     "[| ?P <= {s. ?b <= ?P1.0 & - ?b <= ?P2.0};
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P1.0 ?c1.0 ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P2.0 ?c2.0 ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Cond ?b ?c1.0 ?c2.0
               ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 10,
          template_app (template_hole 4, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 8),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 7),
                  template_var 0),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 10),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 9),
                     template_var 3),
                   template_var 0)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotalProps.MGT_valid",
     "?\<Gamma>|=t/?F
      {s. s = ?Z &
          ?\<Gamma>\<turnstile> \<langle>?c,Normal
       s\<rangle> \<Rightarrow>\<notin>{Stuck} Un Fault ` (- ?F) &
          ?\<Gamma>\<turnstile>?c \<down> Normal
     s} ?c {t. ?\<Gamma>\<turnstile> \<langle>?c,Normal
            ?Z\<rangle> \<Rightarrow> Normal
 t},{t. ?\<Gamma>\<turnstile> \<langle>?c,Normal
     ?Z\<rangle> \<Rightarrow> Abrupt t}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 15, template_var 3),
                   template_var 2),
                 template_app (template_hole 14, t_empty)),
               template_var 0),
             template_app (template_hole 14, t_empty)),
           template_app (template_hole 14, t_empty))
         )),
    ("HoareTotal.Lem",
     "[| ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) ?c
                 (?Q' Z),(?A' Z);
         ?P <= {s. EX Z. s : ?P' Z & ?Q' Z <= ?Q & ?A' Z <= ?A} |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P lem ?x ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 6, template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 3),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 6)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.conseq",
     "[| ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) ?c
                 (?Q' Z),(?A' Z);
         ALL s. s : ?P --> (EX Z. s : ?P' Z & ?Q' Z <= ?Q & ?A' Z <= ?A) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 6, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_var 5),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.LemAnnoNoAbrupt",
     "[| ?P <= {s. EX Z. s : ?P' Z & (ALL t. t : ?Q' Z --> t : ?Q)};
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) ?c
                 (?Q' Z),{} |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P lem ?x ?c ?Q,{}",
     template_implication
      ([template_inequation
         (less_equals, template_var 8,
          template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 8),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1)),
               template_var 5),
             template_hole 1)
           ))),
    ("HoareTotal.CombineStrip'",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c' ?Q,?A;
         ?\<Gamma>,{}\<turnstile>\<^bsub>/{} \<^esub>?P ?c'' UNIV,UNIV;
         ?c'' = mark_guards False (strip_guards (- ?F) ?c');
         merge_guards ?c = merge_guards (mark_guards False ?c') |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/{}\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 8),
                        template_hole 8),
                      template_hole 7),
                    template_var 5),
                  template_var 1),
                template_hole 6),
              template_hole 6)
            ),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 4, template_hole 3),
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 6)),
              template_var 4))),
        template_equation
         (template_app (template_hole 0, template_var 0),
          template_app
           (template_hole 0,
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 4)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 8),
                       template_var 7),
                     template_hole 7),
                   template_var 5),
                 template_var 0),
               template_var 3),
             template_var 2)
           ))),
    ("HoareTotal.CondConj",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> {s. ?P s & ?b s} ?c1.0
              ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> {s. ?P s & ~ ?b s} ?c2.0
              ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> {s. ?P s}
               Cond {s. ?b s} ?c1.0 ?c2.0 ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_app (template_hole 3, t_empty)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_app (template_hole 3, t_empty)),
                  template_var 0),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_app (template_hole 3, t_empty)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 0,
                       template_app (template_hole 3, t_empty)),
                     template_var 3),
                   template_var 0)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.CombineStrip''",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/{True}\<^esub> ?P ?c' ?Q,?A;
         ?\<Gamma>,{}\<turnstile>\<^bsub>/{} \<^esub>?P ?c'' UNIV,UNIV;
         ?c'' = mark_guards False (strip_guards {False} ?c');
         merge_guards ?c = merge_guards (mark_guards False ?c') |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/{}\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 11, template_var 7),
                        template_var 6),
                      template_app
                       (template_app (template_hole 10, template_hole 9),
                        template_hole 8)),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 7, template_var 7),
                        template_hole 6),
                      template_hole 8),
                    template_var 5),
                  template_var 1),
                template_hole 5),
              template_hole 5)
            ),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 3, template_hole 2),
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 10, template_hole 2),
                  template_hole 8)),
              template_var 4))),
        template_equation
         (template_app (template_hole 0, template_var 0),
          template_app
           (template_hole 0,
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 4)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 11, template_var 7),
                       template_var 6),
                     template_hole 8),
                   template_var 5),
                 template_var 0),
               template_var 3),
             template_var 2)
           ))),
    ("HoareTotalDef.Conseq'",
     "ALL s.
         s : ?P -->
         (EX P' Q' A'.
             (ALL Z.
                 ?\<Gamma>,?\<Theta>
                    \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (P' Z) ?c
                      (Q' Z),(A' Z)) &
             (EX Z. s : P' Z & Q' Z <= ?Q & A' Z <= ?A)) ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 6),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.CondSwap",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P1.0 ?c1.0 ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P2.0 ?c2.0 ?Q,?A;
         ?P <= {s. (s : ?b --> s : ?P1.0) & (s ~: ?b --> s : ?P2.0)} |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Cond ?b ?c1.0 ?c2.0
               ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 7, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 7, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 3),
                  template_var 2),
                template_var 5),
              template_var 4)
            ),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 7, template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 1),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 6),
                   template_var 2)),
               template_var 5),
             template_var 4)
           ))),
    ("HoareTotal.Cond",
     "[| ?P <= {s. (s : ?b --> s : ?P\<^sub>1) &
                   (s ~: ?b --> s : ?P\<^sub>2)};
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P\<^sub>1 ?c\<^sub>1
              ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P\<^sub>2 ?c\<^sub>2
              ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               Cond ?b ?c\<^sub>1 ?c\<^sub>2 ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 10,
          template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 8),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 7),
                  template_var 0),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 10),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 9),
                     template_var 3),
                   template_var 0)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.While",
     "[| ?P <= ?I;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ({\<sigma>} Int
                  ?I Int
                  ?b)
                 ?c ({t. (t, \<sigma>) : ?V} Int ?I),?A;
         ?I Int - ?b <= ?Q; wf ?V |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               whileAnno ?b ?I ?V ?c ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 9, template_var 8),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 8, template_var 8),
            template_app (template_hole 2, template_var 4)),
          template_var 0),
        template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 8),
                     template_var 2),
                   template_var 3)),
               template_var 0),
             template_var 1)
           ))),
    ("HoareTotalDef.validtI",
     "[| !!s t.
            [| ?\<Gamma>\<turnstile> \<langle>?c,Normal
            s\<rangle> \<Rightarrow> t;
               s : ?P; t ~: Fault ` ?F |]
            ==> t : Normal ` ?Q Un Abrupt ` ?A;
         !!s. s : ?P ==> ?\<Gamma>\<turnstile>?c \<down> Normal s |]
      ==> ?\<Gamma>|=t/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 2),
                   template_var 3),
                 template_var 4),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.WhileNoGuard'",
     "[| ?P <= ?I;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ({\<sigma>} Int
                  ?I Int
                  ?b)
                 ?c ({t. (t, \<sigma>) : ?V} Int ?I),?A;
         ?I Int - ?b <= ?Q; wf ?V |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               whileAnno ?b ?I ?V (Seq ?c Skip) ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 9, template_var 8),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 10, template_var 8),
            template_app (template_hole 4, template_var 4)),
          template_var 0),
        template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 11, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 4),
                       template_var 8),
                     template_var 2),
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_hole 0))),
               template_var 0),
             template_var 1)
           ))),
    ("HoareTotalProps.ConseqMGT",
     "[| ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) ?c
                 (?Q' Z),(?A' Z);
         !!s. s : ?P ==>
              s : ?P' s &
              (ALL t. t : ?Q' s --> t : ?Q) &
              (ALL t. t : ?A' s --> t : ?A) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_var 5),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.CondInv",
     "[| ?P <= ?Q;
         ?Q <= {s. (s : ?b --> s : ?P\<^sub>1) &
                   (s ~: ?b --> s : ?P\<^sub>2)};
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P\<^sub>1 ?c\<^sub>1
              ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P\<^sub>2 ?c\<^sub>2
              ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               Cond ?b ?c\<^sub>1 ?c\<^sub>2 ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 10, template_var 9),
        template_inequation
         (less_equals, template_var 9,
          template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 7),
                  template_var 2),
                template_var 9),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 6),
                  template_var 0),
                template_var 9),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 10),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 8),
                     template_var 2),
                   template_var 0)),
               template_var 9),
             template_var 1)
           ))),
    ("HoareTotalProps.MGT_Call",
     "ALL p:dom ?\<Gamma>.
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> {s.
                  s = Z &
                  ?\<Gamma>\<turnstile> \<langle>Call
            p,Normal
               s\<rangle> \<Rightarrow>\<notin>{Stuck} Un Fault ` (- ?F) &
                  ?\<Gamma>\<turnstile>Call p \<down> Normal s}
                 Call p
                 {t. ?\<Gamma>\<turnstile> \<langle>Call
               p,Normal
                  Z\<rangle> \<Rightarrow> Normal
      t},{t. ?\<Gamma>\<turnstile> \<langle>Call
       p,Normal Z\<rangle> \<Rightarrow> Abrupt t}",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 19,
             template_app (template_hole 18, template_var 2)),
           t_empty)
         )),
    ("HoareTotal.LemAnno",
     "[| ?P <= {s. EX Z. s : ?P' Z &
                         (ALL t. t : ?Q' Z --> t : ?Q) &
                         (ALL t. t : ?A' Z --> t : ?A)};
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) ?c
                 (?Q' Z),(?A' Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P lem ?x ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 10,
          template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 10),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1)),
               template_var 7),
             template_var 5)
           ))),
    ("HoareTotal.SpecAnno",
     "[| ?P <= {s. EX Z. s : ?P' Z & ?Q' Z <= ?Q & ?A' Z <= ?A};
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) ?c Z
                 (?Q' Z),(?A' Z);
         ALL Z. ?c Z = ?c undefined |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               specAnno ?P' ?c ?Q' ?A' ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 9,
          template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 8),
                       template_var 0),
                     template_var 7),
                   template_var 5)),
               template_var 6),
             template_var 4)
           ))),
    ("HoareTotalDef.cvalidt_postD",
     "[| ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A;
         ALL (P, p, Q, A):?\<Theta>. ?\<Gamma>|=t/?F P Call p Q,A;
         ?\<Gamma>\<turnstile> \<langle>?c,Normal
      ?s\<rangle> \<Rightarrow> ?t;
         ?s : ?P; ?t ~: Fault ` ?F |]
      ==> ?t : Normal ` ?Q Un Abrupt ` ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 16, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 7),
              template_app (template_hole 14, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 8),
                  template_var 4),
                template_app (template_hole 8, template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 5)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_var 6))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 0),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 8),
                   template_var 3)),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2)))
           ))),
    ("HoareTotal.SpecAnnoNoAbrupt",
     "[| ?P <= {s. EX Z. s : ?P' Z & (ALL t. t : ?Q' Z --> t : ?Q)};
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) ?c Z
                 (?Q' Z),{};
         ALL Z. ?c Z = ?c undefined |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               specAnno ?P' ?c ?Q' (%s. {}) ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 8,
          template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 8),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 7),
                       template_var 1),
                     template_var 6),
                   t_empty)),
               template_var 5),
             template_var 0)
           ))),
    ("HoareTotal.switchCons",
     "[| ?P <= {s. (?v s : ?V --> s : ?P\<^sub>1) &
                   (?v s ~: ?V --> s : ?P\<^sub>2)};
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P\<^sub>1 ?c ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P\<^sub>2 switch ?v ?vs
              ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               switch ?v ((?V, ?c) # ?vs) ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 11,
          template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 8),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 7),
                  template_app
                   (template_app (template_hole 2, template_var 10),
                    template_var 0)),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 11),
                 template_app
                  (template_app (template_hole 2, template_var 10),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 9),
                         template_var 3)),
                     template_var 0))),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.ProcModifyReturnNoAbrSameFaults",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
              call ?init ?p ?return' ?c ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>{\<sigma>} Call ?p
         (?Modif \<sigma>),{} |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               call ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 11),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 11),
                       template_var 10),
                     template_var 9),
                   template_var 8),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 7),
                       template_var 6),
                     template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoareTotal.ProcModifyReturnNoAbr",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
              call ?init ?p ?return' ?c ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/UNIV \<^esub>{\<sigma>} Call ?p
           (?Modif \<sigma>),{} |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               call ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 11),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 11),
                       template_var 10),
                     template_var 9),
                   template_var 8),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 7),
                       template_var 6),
                     template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoareTotal.CondInv'",
     "[| ?P <= ?I;
         ?I <= {s. (s : ?b --> s : ?P\<^sub>1) &
                   (s ~: ?b --> s : ?P\<^sub>2)};
         ?I <= ?Q;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P\<^sub>1 ?c\<^sub>1
              ?I,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P\<^sub>2 ?c\<^sub>2
              ?I,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               Cond ?b ?c\<^sub>1 ?c\<^sub>2 ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 11, template_var 10),
        template_inequation
         (less_equals, template_var 10,
          template_app (template_hole 6, t_empty)),
        template_inequation (less_equals, template_var 10, template_var 6),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 8),
                  template_var 2),
                template_var 10),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 7),
                  template_var 0),
                template_var 10),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 11),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 9),
                     template_var 2),
                   template_var 0)),
               template_var 6),
             template_var 1)
           ))),
    ("HoareTotal.ProcDynModifyReturnNoAbrSameFaults",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
              dynCall ?init ?p ?return' ?c ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s:?P.
            ALL \<sigma>.
               ?\<Gamma>,?\<Theta>
                  \<turnstile>\<^bsub>/?F \<^esub>{\<sigma>} Call (?p s)
            (?Modif \<sigma>),{} |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 11),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 8), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 11),
                       template_var 10),
                     template_var 9),
                   template_var 8),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 7),
                       template_var 6),
                     template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoareTotal.DynProcModifyReturnNoAbr",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
              dynCall ?init ?p ?return' ?c ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s:?P.
            ALL \<sigma>.
               ?\<Gamma>,?\<Theta>
                  \<turnstile>\<^bsub>/UNIV \<^esub>{\<sigma>} Call (?p s)
              (?Modif \<sigma>),{} |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 11, template_var 11),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 8), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 11, template_var 11),
                       template_var 10),
                     template_var 9),
                   template_var 8),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 7),
                       template_var 6),
                     template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoareTotal.WhileInvPost",
     "[| ?P <= ?I;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/UNIV\<^esub> ({\<sigma>} Int
                    ?I Int
                    ?b)
                   ?c ({t. (t, \<sigma>) : ?V} Int ?P),?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>(?I Int ?b) ?c ?I,?A;
         ?I Int - ?b <= ?Q; wf ?V |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               whileAnno ?b ?I ?V ?c ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 9, template_var 8),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 7),
                        template_var 6),
                      template_var 1),
                    template_app
                     (template_app (template_hole 9, template_var 8),
                      template_var 5)),
                  template_var 4),
                template_var 8),
              template_var 2)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 9, template_var 8),
            template_app (template_hole 2, template_var 5)),
          template_var 0),
        template_predicate
         (template_app (template_hole 1, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 11, template_var 7),
                       template_var 6),
                     template_var 1),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 8),
                     template_var 3),
                   template_var 4)),
               template_var 0),
             template_var 2)
           ))),
    ("HoareTotal.Block",
     "[| ?P <= {s. ?init s : ?P' s};
         ALL s.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' s) ?bdy
                 {t. ?return s t : ?R s t},{t. ?return s t : ?A};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?R s t) ?c s t
                 ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               block ?init ?bdy ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 11,
          template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 11),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 10),
                       template_var 5),
                     template_var 4),
                   template_var 1)),
               template_var 0),
             template_var 2)
           ))),
    ("HoareTotal.BlockSwap",
     "[| ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?R s t) ?c s t
                 ?Q,?A;
         ALL s.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' s) ?bdy
                 {t. ?return s t : ?R s t},{t. ?return s t : ?A};
         ?P <= {s. ?init s : ?P' s} |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               block ?init ?bdy ?return ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 11),
                       template_var 10),
                     template_var 9),
                   template_var 1),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 3),
                     template_var 2),
                   template_var 7)),
               template_var 6),
             template_var 5)
           ))),
    ("HoareTotalProps.MGT_implies_complete",
     "[| ALL Z.
            ?\<Gamma>,{}
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> {s.
                  s = Z &
                  ?\<Gamma>\<turnstile> \<langle>?c,Normal
               s\<rangle> \<Rightarrow>\<notin>{Stuck} Un Fault ` (- ?F) &
                  ?\<Gamma>\<turnstile>?c \<down> Normal s}
                 ?c {t. ?\<Gamma>\<turnstile> \<langle>?c,Normal
                     Z\<rangle> \<Rightarrow> Normal
         t},{t. ?\<Gamma>\<turnstile> \<langle>?c,Normal
             Z\<rangle> \<Rightarrow> Abrupt t};
         ?\<Gamma>|=t/?F ?P ?c ?Q,?A |]
      ==> ?\<Gamma>,{}\<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 0, template_var 5),
                      template_var 4),
                    template_var 2),
                  template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 17, template_var 5),
                       template_hole 16),
                     template_var 4),
                   template_var 2),
                 template_var 3),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.SpecAnno'",
     "[| ?P <= {s. EX Z. s : ?P' Z &
                         (ALL t. t : ?Q' Z --> t : ?Q) &
                         (ALL t. t : ?A' Z --> t : ?A)};
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) ?c Z
                 (?Q' Z),(?A' Z);
         ALL Z. ?c Z = ?c undefined |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               specAnno ?P' ?c ?Q' ?A' ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 9,
          template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 8),
                       template_var 0),
                     template_var 7),
                   template_var 5)),
               template_var 6),
             template_var 4)
           ))),
    ("HoareTotal.ProcSpecNoAbrupt",
     "[| ?P <= {s. EX Z. ?init s : ?P' Z &
                         (ALL t. t : ?Q' Z --> ?return s t : ?R s t)};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?R s t) ?c s t
                 ?Q,?A;
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) Call ?p
                 (?Q' Z),{} |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               call ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 12,
          template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 12),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 11),
                       template_var 0),
                     template_var 8),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.ProcProcParModifyReturnNoAbrSameFaults",
     "[| ?P <= {s. ?p s = ?q} Int ?P';
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P'
              dynCall ?init ?p ?return' ?c ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>{\<sigma>} Call ?q
         (?Modif \<sigma>),{} |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 13,
          template_app
           (template_app
             (template_hole 12, template_app (template_hole 11, t_empty)),
            template_var 10)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 10),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_var 6),
                        template_var 12),
                      template_var 5),
                    template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 13),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 6),
                       template_var 12),
                     template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoareTotal.ProcProcParModifyReturnNoAbr",
     "[| ?P <= {s. ?p s = ?q} Int ?P';
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P'
              dynCall ?init ?p ?return' ?c ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/UNIV \<^esub>{\<sigma>} Call ?q
           (?Modif \<sigma>),{} |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 13,
          template_app
           (template_app
             (template_hole 13, template_app (template_hole 12, t_empty)),
            template_var 10)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 10),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 6),
                        template_var 12),
                      template_var 5),
                    template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 13),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 6),
                       template_var 12),
                     template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoareTotal.CallBody",
     "[| ?P <= {s. ?init s : ?P' s};
         ALL s.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' s) ?body
                 {t. ?return s t : ?R s t},{t. ?return s t : ?A};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?R s t) ?c s t
                 ?Q,?A;
         ?\<Gamma> ?p = Some ?body |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               call ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 12,
          template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_equation
         (template_app (template_var 9, template_var 0),
          template_app (template_hole 1, template_var 6))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 12),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 11),
                       template_var 0),
                     template_var 5),
                   template_var 2)),
               template_var 1),
             template_var 3)
           ))),
    ("HoareTotal.ProcRec1",
     "[| ALL \<sigma> Z.
            ?\<Gamma>,?\<Theta> Un
                      (UN Z. {(?P Z Int {s. ((s, ?p), \<sigma>, ?p) : ?r},
                               ?p, ?Q Z, ?A Z)})
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ({\<sigma>} Int ?P Z)
                 the (?\<Gamma> ?p) (?Q Z),(?A Z);
         wf ?r; ?p : dom ?\<Gamma> |]
      ==> ALL Z.
             ?\<Gamma>,?\<Theta>
                \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P Z) Call ?p
                  (?Q Z),(?A Z)",
     template_implication
      ([template_predicate (template_app (template_hole 23, t_empty)),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app (template_hole 1, template_var 7))
            )],
       template_predicate (template_app (template_hole 22, t_empty)))),
    ("HoareTotal.DynProcProcParNoAbrupt",
     "[| ?P <= {s. ?p s = ?q &
                   (EX Z. ?init s : ?P' Z &
                          (ALL \<tau>.
                              \<tau> : ?Q' Z -->
                              ?return s \<tau> : ?R s \<tau>))};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?R s t) ?c s t
                 ?Q,?A;
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) Call ?q
                 (?Q' Z),{} |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 13,
          template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 13),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 10),
                       template_var 12),
                     template_var 7),
                   template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.WhileAnnoFix",
     "[| ?P <= {s. EX Z. s : ?I Z & ?I Z Int - ?b <= ?Q};
         ALL Z \<sigma>.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ({\<sigma>} Int
                  ?I Z Int
                  ?b)
                 ?c Z ({t. (t, \<sigma>) : ?V Z} Int ?I Z),?A;
         ALL Z. ?c Z = ?c undefined; ALL Z. wf (?V Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               whileAnnoFix ?b ?I ?V ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 9,
          template_app (template_hole 16, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 7),
                       template_var 8),
                     template_var 1),
                   template_var 2)),
               template_var 6),
             template_var 0)
           ))),
    ("HoareTotal.ProcSpec'",
     "[| ?P <= {s. EX Z. ?init s : ?P' Z &
                         (ALL t:?Q' Z. ?return s t : ?R s t) &
                         (ALL t:?A' Z. ?return s t : ?A)};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?R s t) ?c s t
                 ?Q,?A;
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) Call ?p
                 (?Q' Z),(?A' Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               call ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 13,
          template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 13),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 12),
                       template_var 0),
                     template_var 9),
                   template_var 2)),
               template_var 1),
             template_var 6)
           ))),
    ("HoareTotalProps.ProcModifyReturnSameFaults_sound",
     "[| ?\<Gamma>,?\<Theta>|=t/?F  ?P call ?init ?p ?return' ?c ?Q,?A;
         ALL \<sigma>. ?\<Gamma>,?\<Theta>|=/?F
            {\<sigma>} Call ?p (?Modif \<sigma>),(?ModifAbr \<sigma>);
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t |]
      ==> ?\<Gamma>,?\<Theta>|=t/?F  ?P call ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 12),
                        template_var 11),
                      template_var 10),
                    template_var 9),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 12),
                       template_var 11),
                     template_var 10),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 8),
                       template_var 7),
                     template_var 0),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotalProps.ProcModifyReturn_sound",
     "[| ?\<Gamma>,?\<Theta>|=t/?F  ?P call ?init ?p ?return' ?c ?Q,?A;
         ALL \<sigma>. ?\<Gamma>,?\<Theta>|=/UNIV
            {\<sigma>} Call ?p (?Modif \<sigma>),(?ModifAbr \<sigma>);
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t |]
      ==> ?\<Gamma>,?\<Theta>|=t/?F  ?P call ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 12),
                        template_var 11),
                      template_var 10),
                    template_var 9),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 12),
                       template_var 11),
                     template_var 10),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 8),
                       template_var 7),
                     template_var 0),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotal.ProcModifyReturnSameFaults",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
              call ?init ?p ?return' ?c ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>{\<sigma>} Call ?p
         (?Modif \<sigma>),(?ModifAbr \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               call ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 12),
                        template_var 11),
                      template_var 10),
                    template_var 9),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 12),
                       template_var 11),
                     template_var 10),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 8),
                       template_var 7),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotal.ProcModifyReturn",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
              call ?init ?p ?return' ?c ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/UNIV \<^esub>{\<sigma>} Call ?p
           (?Modif \<sigma>),(?ModifAbr \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               call ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 12),
                        template_var 11),
                      template_var 10),
                    template_var 9),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 12),
                       template_var 11),
                     template_var 10),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 8),
                       template_var 7),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotalProps.dynProcModifyReturnSameFaults_sound",
     "[| ?\<Gamma>,?\<Theta>|=t/?F  ?P dynCall ?init ?p ?return' ?c ?Q,?A;
         ALL s:?P.
            ALL \<sigma>. ?\<Gamma>,?\<Theta>|=/?F
               {\<sigma>} Call
                           (?p s) (?Modif \<sigma>),(?ModifAbr \<sigma>);
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t |]
      ==> ?\<Gamma>,?\<Theta>|=t/?F  ?P dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 12),
                        template_var 11),
                      template_var 10),
                    template_var 9),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 9), t_empty)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 12),
                       template_var 11),
                     template_var 10),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 8),
                       template_var 7),
                     template_var 0),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotalProps.dynProcModifyReturn_sound",
     "[| ?\<Gamma>,?\<Theta>|=t/?F  ?P dynCall ?init ?p ?return' ?c ?Q,?A;
         ALL s:?P.
            ALL \<sigma>. ?\<Gamma>,?\<Theta>|=/UNIV
               {\<sigma>} Call
                           (?p s) (?Modif \<sigma>),(?ModifAbr \<sigma>);
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t |]
      ==> ?\<Gamma>,?\<Theta>|=t/?F  ?P dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 11, template_var 12),
                        template_var 11),
                      template_var 10),
                    template_var 9),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 9), t_empty)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 11, template_var 12),
                       template_var 11),
                     template_var 10),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 8),
                       template_var 7),
                     template_var 0),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotalProps.dynProcModifyReturnSameFaults",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
              dynCall ?init ?p ?return' ?c ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t;
         ALL s:?P.
            ALL \<sigma>.
               ?\<Gamma>,?\<Theta>
                  \<turnstile>\<^bsub>/?F \<^esub>{\<sigma>} Call (?p s)
            (?Modif \<sigma>),(?ModifAbr \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 12),
                        template_var 11),
                      template_var 10),
                    template_var 9),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 9), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 12),
                       template_var 11),
                     template_var 10),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 8),
                       template_var 7),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotalProps.dynProcModifyReturn",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
              dynCall ?init ?p ?return' ?c ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t;
         ALL s:?P.
            ALL \<sigma>.
               ?\<Gamma>,?\<Theta>
                  \<turnstile>\<^bsub>/UNIV \<^esub>{\<sigma>} Call (?p s)
              (?Modif \<sigma>),(?ModifAbr \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 11, template_var 12),
                        template_var 11),
                      template_var 10),
                    template_var 9),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 9), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 11, template_var 12),
                       template_var 11),
                     template_var 10),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 8),
                       template_var 7),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotalDef.Spec_wf_conv",
     "(%(P, q, Q, A). (P Int {s. ((s, q), ?\<tau>, ?p) : ?r}, q, Q, A)) `
      (UN p:?Procs. UN Z. {(?P p Z, p, ?Q p Z, ?A p Z)}) =
      (UN q:?Procs.
          UN Z. {(?P q Z Int {s. ((s, q), ?\<tau>, ?p) : ?r}, q, ?Q q Z,
                  ?A q Z)})",
     template_equation
      (template_app
        (template_app
          (template_hole 18, template_app (template_hole 17, t_empty)),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty), template_var 0))),
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty), template_var 0)))),
    ("HoareTotal.BlockSpec",
     "[| ?P <= {s. EX Z. ?init s : ?P' Z &
                         (ALL t. t : ?Q' Z --> ?return s t : ?R s t) &
                         (ALL t. t : ?A' Z --> ?return s t : ?A)};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?R s t) ?c s t
                 ?Q,?A;
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) ?bdy
                 (?Q' Z),(?A' Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               block ?init ?bdy ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 13,
          template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 13),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 12),
                       template_var 0),
                     template_var 9),
                   template_var 2)),
               template_var 1),
             template_var 6)
           ))),
    ("HoareTotal.WhileAnnoFix'",
     "[| ?P <= {s. EX Z. s : ?I Z & (ALL t. t : ?I Z Int - ?b --> t : ?Q)};
         ALL Z \<sigma>.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ({\<sigma>} Int
                  ?I Z Int
                  ?b)
                 ?c Z ({t. (t, \<sigma>) : ?V Z} Int ?I Z),?A;
         ALL Z. ?c Z = ?c undefined; ALL Z. wf (?V Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               whileAnnoFix ?b ?I ?V ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 9,
          template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 7),
                       template_var 8),
                     template_var 1),
                   template_var 2)),
               template_var 6),
             template_var 0)
           ))),
    ("HoareTotal.ProcSpec",
     "[| ?P <= {s. EX Z. ?init s : ?P' Z &
                         (ALL t. t : ?Q' Z --> ?return s t : ?R s t) &
                         (ALL t. t : ?A' Z --> ?return s t : ?A)};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?R s t) ?c s t
                 ?Q,?A;
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) Call ?p
                 (?Q' Z),(?A' Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               call ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 13,
          template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 13),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 12),
                       template_var 0),
                     template_var 9),
                   template_var 2)),
               template_var 1),
             template_var 6)
           ))),
    ("HoareTotal.DynProc'",
     "[| ?P <= {s. EX Z. ?init s : ?P' s Z &
                         (ALL t:?Q' s Z. ?return s t : ?R s t) &
                         (ALL t:?A' s Z. ?return s t : ?A)};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?R s t) ?c s t
                 ?Q,?A;
         ALL s:?P.
            ALL Z.
               ?\<Gamma>,?\<Theta>
                  \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' s Z)
                    Call (?p s) (?Q' s Z),(?A' s Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 13,
          template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 13), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 13),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 12),
                       template_var 0),
                     template_var 9),
                   template_var 2)),
               template_var 1),
             template_var 6)
           ))),
    ("HoareTotal.DynProcProcPar",
     "[| ?P <= {s. ?p s = ?q &
                   (EX Z. ?init s : ?P' Z &
                          (ALL \<tau>.
                              \<tau> : ?Q' Z -->
                              ?return s \<tau> : ?R s \<tau>) &
                          (ALL \<tau>.
                              \<tau> : ?A' Z --> ?return s \<tau> : ?A))};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?R s t) ?c s t
                 ?Q,?A;
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) Call ?q
                 (?Q' Z),(?A' Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 14,
          template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 14),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 11),
                       template_var 13),
                     template_var 8),
                   template_var 1)),
               template_var 0),
             template_var 5)
           ))),
    ("HoareTotal.ProcRecSpecs",
     "[| ALL \<sigma>.
            ALL (P, p, Q, A):?Specs.
               ?\<Gamma>,?\<Theta> Un
                         (%(P, q, Q, A).
                             (P Int {s. ((s, q), \<sigma>, p) : ?r}, q, Q,
                              A)) `
                         ?Specs
                  \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ({\<sigma>} Int P)
                    the (?\<Gamma> p) Q,A;
         wf ?r; ALL (P, p, Q, A):?Specs. p : dom ?\<Gamma> |]
      ==> ALL (P, p, Q, A):?Specs.
             ?\<Gamma>,?\<Theta>
                \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> P Call p Q,A",
     template_implication
      ([template_predicate (template_app (template_hole 25, t_empty)),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 4),
              template_app (template_hole 23, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 24, template_var 4),
             template_app (template_hole 23, t_empty))
           ))),
    ("HoareTotal.ProcProcParModifyReturnSameFaults",
     "[| ?P <= {s. ?p s = ?q} Int ?P';
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P'
              dynCall ?init ?p ?return' ?c ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>{\<sigma>} Call ?q
         (?Modif \<sigma>),(?ModifAbr \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 14,
          template_app
           (template_app
             (template_hole 12, template_app (template_hole 11, t_empty)),
            template_var 11)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 11),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_var 7),
                        template_var 13),
                      template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 14),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 7),
                       template_var 13),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotal.ProcProcParModifyReturn",
     "[| ?P <= {s. ?p s = ?q} Int ?P';
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P'
              dynCall ?init ?p ?return' ?c ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/UNIV \<^esub>{\<sigma>} Call ?q
           (?Modif \<sigma>),(?ModifAbr \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 14,
          template_app
           (template_app
             (template_hole 13, template_app (template_hole 12, t_empty)),
            template_var 11)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 11),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 7),
                        template_var 13),
                      template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 14),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 7),
                       template_var 13),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotal.DynProcStaticSpec",
     "[| ?P <= {s: ?S.
                EX Z. ?init s : ?P' Z &
                      (ALL \<tau>.
                          \<tau> : ?Q' Z -->
                          ?return s \<tau> : ?R s \<tau>) &
                      (ALL \<tau>.
                          \<tau> : ?A' Z --> ?return s \<tau> : ?A)};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?R s t) ?c s t
                 ?Q,?A;
         ALL s:?S.
            ALL Z.
               ?\<Gamma>,?\<Theta>
                  \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z)
                    Call (?p s) (?Q' Z),(?A' Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 14,
          template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 13), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 14),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 12),
                       template_var 0),
                     template_var 9),
                   template_var 2)),
               template_var 1),
             template_var 6)
           ))),
    ("HoareTotal.ProcRec",
     "[| ALL p:?Procs.
            ALL \<sigma> Z.
               ?\<Gamma>,?\<Theta> Un
                         (UN q:?Procs.
                             UN Z. {(?P q Z Int
                                     {s. ((s, q), \<sigma>, p) : ?r},
                                     q, ?Q q Z, ?A q Z)})
                  \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ({\<sigma>} Int
                     ?P p Z)
                    the (?\<Gamma> p) (?Q p Z),(?A p Z);
         wf ?r; ?Procs <= dom ?\<Gamma> |]
      ==> ALL p:?Procs.
             ALL Z.
                ?\<Gamma>,?\<Theta>
                   \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P p Z) Call p
                     (?Q p Z),(?A p Z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 25, template_var 7), t_empty)
            ),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_inequation
         (less_equals, template_var 7,
          template_app (template_hole 1, template_var 6))],
       template_predicate
        (
           template_app
            (template_app (template_hole 25, template_var 7), t_empty)
           ))),
    ("HoareTotalDef.CallRec'",
     "[| ?p : ?Procs; ?Procs <= dom ?\<Gamma>; wf ?r;
         ALL p:?Procs.
            ALL \<tau> Z.
               ?\<Gamma>,?\<Theta> Un
                         (UN q:?Procs.
                             UN Z. {(?P q Z Int
                                     {s. ((s, q), \<tau>, p) : ?r},
                                     q, ?Q q Z, ?A q Z)})
                  \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ({\<tau>} Int
                     ?P p Z)
                    the (?\<Gamma> p) (?Q p Z),(?A p Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P ?p ?Z) Call ?p
               (?Q ?p ?Z),(?A ?p ?Z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 26, template_var 9),
              template_var 8)
            ),
        template_inequation
         (less_equals, template_var 8,
          template_app (template_hole 24, template_var 7)),
        template_predicate
         (template_app (template_hole 23, template_var 6)),
        template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 8), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 19, template_var 7),
                       template_var 5),
                     template_var 1),
                   template_app
                    (template_app (template_var 4, template_var 9),
                     template_var 0)),
                 template_app (template_hole 0, template_var 9)),
               template_app
                (template_app (template_var 3, template_var 9),
                 template_var 0)),
             template_app
              (template_app (template_var 2, template_var 9),
               template_var 0))
           ))),
    ("HoareTotalDef.cvalidtI",
     "[| !!s t.
            [| ALL (P, p, Q, A):?\<Theta>. ?\<Gamma>|=t/?F P Call p Q,A;
               ?\<Gamma>\<turnstile> \<langle>?c,Normal
            s\<rangle> \<Rightarrow> t;
               s : ?P; t ~: Fault ` ?F |]
            ==> t : Normal ` ?Q Un Abrupt ` ?A;
         !!s. [| ALL (P, p, Q, A):?\<Theta>. ?\<Gamma>|=t/?F P Call p Q,A;
                 s : ?P |]
              ==> ?\<Gamma>\<turnstile>?c \<down> Normal s |]
      ==> ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 20, t_empty)),
        template_predicate (template_app (template_hole 20, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 6),
                     template_var 4),
                   template_var 2),
                 template_var 3),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.DynProc",
     "[| ?P <= {s. EX Z. ?init s : ?P' s Z &
                         (ALL t. t : ?Q' s Z --> ?return s t : ?R s t) &
                         (ALL t. t : ?A' s Z --> ?return s t : ?A)};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?R s t) ?c s t
                 ?Q,?A;
         ALL s:?P.
            ALL Z.
               ?\<Gamma>,?\<Theta>
                  \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' s Z)
                    Call (?p s) (?Q' s Z),(?A' s Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 13,
          template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 13), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 13),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 12),
                       template_var 0),
                     template_var 9),
                   template_var 2)),
               template_var 1),
             template_var 6)
           ))),
    ("HoareTotal.ProcRecList",
     "[| ALL p:set ?Procs.
            ALL \<sigma> Z.
               ?\<Gamma>,?\<Theta> Un
                         (UN q:set ?Procs.
                             UN Z. {(?P q Z Int
                                     {s. ((s, q), \<sigma>, p) : ?r},
                                     q, ?Q q Z, ?A q Z)})
                  \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ({\<sigma>} Int
                     ?P p Z)
                    the (?\<Gamma> p) (?Q p Z),(?A p Z);
         wf ?r; distinct ?Procs; set ?Procs <= dom ?\<Gamma> |]
      ==> ALL p:set ?Procs.
             ALL Z.
                ?\<Gamma>,?\<Theta>
                   \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P p Z) Call p
                     (?Q p Z),(?A p Z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 27,
                template_app (template_hole 26, template_var 7)),
              t_empty)
            ),
        template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate (template_app (template_hole 3, template_var 7)),
        template_inequation
         (less_equals, template_app (template_hole 26, template_var 7),
          template_app (template_hole 1, template_var 6))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 27,
               template_app (template_hole 26, template_var 7)),
             t_empty)
           ))),
    ("HoareTotal.ProcRec'",
     "[| ?\<Theta>' =
         (%\<sigma> p.
             ?\<Theta> Un
             (UN q:?Procs.
                 UN Z. {(?P q Z Int {s. ((s, q), \<sigma>, p) : ?r}, q,
                         ?Q q Z, ?A q Z)}));
         ALL p:?Procs.
            ALL \<sigma> Z.
               ?\<Gamma>,?\<Theta>' \<sigma> p
                  \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ({\<sigma>} Int
                     ?P p Z)
                    the (?\<Gamma> p) (?Q p Z),(?A p Z);
         wf ?r; ?Procs <= dom ?\<Gamma> |]
      ==> ALL p:?Procs.
             ALL Z.
                ?\<Gamma>,?\<Theta>
                   \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P p Z) Call p
                     (?Q p Z),(?A p Z)",
     template_implication
      ([template_equation (template_var 8, t_empty),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2), t_empty)
            ),
        template_predicate (template_app (template_hole 3, template_var 5)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 10, template_var 2), t_empty)
           ))),
    ("HoareTotalProps.MGT_lemma",
     "ALL p:dom ?\<Gamma>.
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> {s.
                  s = Z &
                  ?\<Gamma>\<turnstile> \<langle>Call
            p,Normal
               s\<rangle> \<Rightarrow>\<notin>{Stuck} Un Fault ` (- ?F) &
                  ?\<Gamma>\<turnstile>Call p \<down> Normal s}
                 Call p
                 {t. ?\<Gamma>\<turnstile> \<langle>Call
               p,Normal
                  Z\<rangle> \<Rightarrow> Normal
      t},{t. ?\<Gamma>\<turnstile> \<langle>Call
       p,Normal Z\<rangle> \<Rightarrow> Abrupt t} ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> {s.
            s = ?Z &
            ?\<Gamma>\<turnstile> \<langle>?c,Normal
         s\<rangle> \<Rightarrow>\<notin>{Stuck} Un Fault ` (- ?F) &
            ?\<Gamma>\<turnstile>?c \<down> Normal s}
           ?c {t. ?\<Gamma>\<turnstile> \<langle>?c,Normal
               ?Z\<rangle> \<Rightarrow> Normal
    t},{t. ?\<Gamma>\<turnstile> \<langle>?c,Normal
        ?Z\<rangle> \<Rightarrow> Abrupt t}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app (template_hole 18, template_var 4)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 16, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_app (template_hole 15, t_empty)),
                 template_var 0),
               template_app (template_hole 15, t_empty)),
             template_app (template_hole 15, t_empty))
           ))),
    ("HoareTotalProps.Call_lemma_switch_Call_body",
     "[| ALL q:dom ?\<Gamma>.
            ALL Z.
               ?\<Gamma>,?\<Theta>
                  \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> {s.
                     s = Z &
                     ?\<Gamma>\<turnstile> \<langle>Call
               q,Normal
                  s\<rangle> \<Rightarrow>\<notin>{Stuck} Un
            Fault ` (- ?F) &
                     ?\<Gamma>\<turnstile>Call q \<down> Normal s &
                     ((s, q), ?\<sigma>, ?p) : termi_call_steps ?\<Gamma>}
                    Call q
                    {t. ?\<Gamma>\<turnstile> \<langle>Call
                  q,Normal
                     Z\<rangle> \<Rightarrow> Normal
         t},{t. ?\<Gamma>\<turnstile> \<langle>Call
          q,Normal Z\<rangle> \<Rightarrow> Abrupt t};
         ?p : dom ?\<Gamma> |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ({?\<sigma>} Int
                {s. s = ?Z &
                    ?\<Gamma>\<turnstile> \<langle>Call
              ?p,Normal
                  s\<rangle> \<Rightarrow>\<notin>{Stuck} Un
            Fault ` (- ?F) &
                    ?\<Gamma>\<turnstile>Call ?p \<down> Normal s})
               the (?\<Gamma> ?p)
               {t. ?\<Gamma>\<turnstile> \<langle>Call
             ?p,Normal
                 ?Z\<rangle> \<Rightarrow> Normal
      t},{t. ?\<Gamma>\<turnstile> \<langle>Call
       ?p,Normal ?Z\<rangle> \<Rightarrow> Abrupt t}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 28,
                template_app (template_hole 27, template_var 5)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 27, template_var 5))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 25, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_var 2),
                         template_hole 1)),
                     template_app (template_hole 24, t_empty))),
                 template_app
                  (template_hole 0,
                   template_app (template_var 5, template_var 1))),
               template_app (template_hole 24, t_empty)),
             template_app (template_hole 24, t_empty))
           ))),
    ("HoareTotalProps.Call_lemma",
     "[| ALL q:dom ?\<Gamma>.
            ALL Z.
               ?\<Gamma>,?\<Theta>
                  \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> {s.
                     s = Z &
                     ?\<Gamma>\<turnstile> \<langle>Call
               q,Normal
                  s\<rangle> \<Rightarrow>\<notin>{Stuck} Un
            Fault ` (- ?F) &
                     ?\<Gamma>\<turnstile>Call q \<down> Normal s &
                     ((s, q), ?\<sigma>, ?p) : termi_call_steps ?\<Gamma>}
                    Call q
                    {t. ?\<Gamma>\<turnstile> \<langle>Call
                  q,Normal
                     Z\<rangle> \<Rightarrow> Normal
         t},{t. ?\<Gamma>\<turnstile> \<langle>Call
          q,Normal Z\<rangle> \<Rightarrow> Abrupt t};
         ?p : dom ?\<Gamma> |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ({?\<sigma>} Int
                {s. s = ?Z &
                    ?\<Gamma>\<turnstile> \<langle>the
              (?\<Gamma>
                ?p),Normal
                     s\<rangle> \<Rightarrow>\<notin>{Stuck} Un
               Fault ` (- ?F) &
                    ?\<Gamma>\<turnstile>the
    (?\<Gamma> ?p) \<down> Normal s})
               the (?\<Gamma> ?p)
               {t. ?\<Gamma>\<turnstile> \<langle>the
             (?\<Gamma>
               ?p),Normal
                    ?Z\<rangle> \<Rightarrow> Normal
         t},{t. ?\<Gamma>\<turnstile> \<langle>the
          (?\<Gamma> ?p),Normal ?Z\<rangle> \<Rightarrow> Abrupt t}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 28,
                template_app (template_hole 27, template_var 5)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 27, template_var 5))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 25, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_var 2),
                         template_hole 1)),
                     template_app (template_hole 24, t_empty))),
                 template_app
                  (template_hole 0,
                   template_app (template_var 5, template_var 1))),
               template_app (template_hole 24, t_empty)),
             template_app (template_hole 24, t_empty))
           ))),
    ("HoareTotalProps.Call_lemma'",
     "ALL q:dom ?\<Gamma>.
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> {s.
                  s = Z &
                  ?\<Gamma>\<turnstile> \<langle>Call
            q,Normal
               s\<rangle> \<Rightarrow>\<notin>{Stuck} Un Fault ` (- ?F) &
                  ?\<Gamma>\<turnstile>Call q \<down> Normal s &
                  ((s, q), ?\<sigma>, ?p) : termi_call_steps ?\<Gamma>}
                 Call q
                 {t. ?\<Gamma>\<turnstile> \<langle>Call
               q,Normal
                  Z\<rangle> \<Rightarrow> Normal
      t},{t. ?\<Gamma>\<turnstile> \<langle>Call
       q,Normal Z\<rangle> \<Rightarrow> Abrupt t} ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> {s.
            s = ?Z &
            ?\<Gamma>\<turnstile> \<langle>?c,Normal
         s\<rangle> \<Rightarrow>\<notin>{Stuck} Un Fault ` (- ?F) &
            ?\<Gamma>\<turnstile>Call ?p \<down> Normal ?\<sigma> &
            (EX c'.
                ?\<Gamma>\<turnstile> (Call ?p,
 Normal ?\<sigma>) \<rightarrow>\<^sup>+
(c', Normal s) &
                ?c : redexes c')}
           ?c {t. ?\<Gamma>\<turnstile> \<langle>?c,Normal
               ?Z\<rangle> \<Rightarrow> Normal
    t},{t. ?\<Gamma>\<turnstile> \<langle>?c,Normal
        ?Z\<rangle> \<Rightarrow> Abrupt t}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 29,
                template_app (template_hole 28, template_var 6)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 26, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_app (template_hole 25, t_empty)),
                 template_var 0),
               template_app (template_hole 25, t_empty)),
             template_app (template_hole 25, t_empty))
           )))]
