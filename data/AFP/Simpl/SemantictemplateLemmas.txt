   [("Semantic.isAbr_simps", "isAbr (Normal ?s) = False",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Semantic.isAbr_simps", "isAbr (Abrupt ?s) = True",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Semantic.isAbr_simps", "isAbr (Fault ?f) = False",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Semantic.isFault_simps", "isFault (Normal ?s) = False",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Semantic.isFault_simps", "isFault (Abrupt ?s) = False",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Semantic.isFault_simps", "isFault (Fault ?f) = True",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Semantic.restrict_dom_same", "?m|\<^bsub>dom ?m\<^esub> = ?m",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Semantic.execn_Skip'",
     "?\<Gamma>\<turnstile> \<langle>Skip,?t\<rangle> =?n\<Rightarrow> ?t",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0),
               template_var 1),
             template_var 0),
           template_var 1)
         )),
    ("Semantic.not_isFault_iff", "(~ isFault ?t) = (ALL f. ?t ~= Fault f)",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app (template_hole 2, t_empty))),
    ("Semantic.exec_iff_exec_merge_guards",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>\<turnstile> \<langle>merge_guards
?c,?s\<rangle> \<Rightarrow> ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0))),
    ("Semantic.exec_normalize_iff_exec",
     "?\<Gamma>\<turnstile> \<langle>Language.normalize
?c,?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Semantic.restrict_in_dom",
     "?x : ?A ==> (?m|\<^bsub>?A\<^esub>) ?x = ?m ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1),
           template_var 2),
         template_app (template_var 0, template_var 2)))),
    ("Semantic.restrict_NoneD",
     "?m ?x = None ==> (?m|\<^bsub>?A\<^esub>) ?x = None",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1), template_hole 1)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 1),
         template_hole 1))),
    ("Semantic.noStuck_startD",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> Normal
                             ?t ==>
      ?s ~= Stuck",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_negation
        (template_equation (template_var 1, template_hole 0)))),
    ("Semantic.exec_to_exec_merge_guards",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t ==>
      ?\<Gamma>\<turnstile> \<langle>merge_guards
?c,?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_app (template_hole 0, template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("Semantic.exec_to_exec_normalize",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t ==>
      ?\<Gamma>\<turnstile> \<langle>Language.normalize
?c,?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_app (template_hole 0, template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("Semantic.final_notin_to_finaln",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow>\<notin>?T ==>
      ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow>\<notin>?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Semantic.noAbrupt_startD",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> Normal
                             ?t ==>
      ?s ~= Abrupt ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3),
                template_var 2),
              template_app (template_hole 3, template_var 1))
            )],
       template_negation
        (
           template_equation
            (template_var 2, template_app (template_hole 0, template_var 0))
           ))),
    ("Semantic.noFault_startD",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> Normal
                             ?t ==>
      ?s ~= Fault ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3),
                template_var 2),
              template_app (template_hole 3, template_var 1))
            )],
       template_negation
        (
           template_equation
            (template_var 2, template_app (template_hole 0, template_var 0))
           ))),
    ("Semantic.exec_merge_guards_to_exec",
     "?\<Gamma>\<turnstile> \<langle>merge_guards
?c,?s\<rangle> \<Rightarrow> ?t ==>
      ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_app (template_hole 0, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Semantic.exec_normalize_to_exec",
     "?\<Gamma>\<turnstile> \<langle>Language.normalize
?c,?s\<rangle> \<Rightarrow> ?t ==>
      ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_app (template_hole 0, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Semantic.execn_to_exec",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t ==>
      ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Semantic.noStuckn_startD",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> Normal
                                ?t ==>
      ?s ~= Stuck",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_negation
        (template_equation (template_var 2, template_hole 0)))),
    ("Semantic.exec_iff_execn",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t =
      (EX n. ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =n\<Rightarrow> ?t)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Semantic.exec_final_notin_iff_execn",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow>\<notin>?T =
      (ALL n.
          ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =n\<Rightarrow>\<notin>?T)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Semantic.execn_iff_execn_merge_guards",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t =
      ?\<Gamma>\<turnstile> \<langle>merge_guards
?c,?s\<rangle> =?n\<Rightarrow> ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_app (template_hole 0, template_var 3)),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Semantic.execn_normalize_iff_execn",
     "?\<Gamma>\<turnstile> \<langle>Language.normalize
?c,?s\<rangle> =?n\<Rightarrow> ?t =
      ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_app (template_hole 0, template_var 3)),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Semantic.restrict_SomeD",
     "(?m|\<^bsub>?A\<^esub>) ?x = Some ?y ==> ?m ?x = Some ?y",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_equation
        (template_app (template_var 3, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Semantic.noAbruptn_startD",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> Normal
                                ?t ==>
      ?s ~= Abrupt ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_app (template_hole 3, template_var 1))
            )],
       template_negation
        (
           template_equation
            (template_var 3, template_app (template_hole 0, template_var 0))
           ))),
    ("Semantic.noFaultn_startD",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> Normal
                                ?t ==>
      ?s ~= Fault ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_app (template_hole 3, template_var 1))
            )],
       template_negation
        (
           template_equation
            (template_var 3, template_app (template_hole 0, template_var 0))
           ))),
    ("Semantic.exec_to_execn",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t ==>
      EX n. ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =n\<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Semantic.exec_to_exec_sequence_flatten",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t ==>
      ?\<Gamma>\<turnstile> \<langle>sequence Seq
(flatten ?c),?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_app (template_hole 0, template_var 2))),
               template_var 1),
             template_var 0)
           ))),
    ("Semantic.execn_Suc",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t ==>
      ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =Suc
                ?n\<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 3),
                 template_var 2),
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Semantic.execn_to_execn_merge_guards",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t ==>
      ?\<Gamma>\<turnstile> \<langle>merge_guards
?c,?s\<rangle> =?n\<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_app (template_hole 0, template_var 3)),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Semantic.execn_to_execn_normalize",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t ==>
      ?\<Gamma>\<turnstile> \<langle>Language.normalize
?c,?s\<rangle> =?n\<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_app (template_hole 0, template_var 3)),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Semantic.execn_merge_guards_to_execn",
     "?\<Gamma>\<turnstile> \<langle>merge_guards
?c,?s\<rangle> =?n\<Rightarrow> ?t ==>
      ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_app (template_hole 0, template_var 3)),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Semantic.execn_normalize_to_execn",
     "?\<Gamma>\<turnstile> \<langle>Language.normalize
?c,?s\<rangle> =?n\<Rightarrow> ?t ==>
      ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_app (template_hole 0, template_var 3)),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Semantic.execn_final_notin_to_exec",
     "ALL n.
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =n\<Rightarrow>\<notin>?T ==>
      ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow>\<notin>?T",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Semantic.exec_sequence_flatten_to_exec",
     "?\<Gamma>\<turnstile> \<langle>sequence Seq
(flatten ?c),?s\<rangle> \<Rightarrow> ?t ==>
      ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app
                   (template_app (template_hole 2, template_hole 1),
                    template_app (template_hole 0, template_var 2))),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Semantic.noStuck_Call",
     "?\<Gamma>\<turnstile> \<langle>Call
?p,Normal ?s\<rangle> \<Rightarrow>\<notin>{Stuck} ==>
      ?p : dom ?\<Gamma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 2),
                  template_app (template_hole 6, template_var 1)),
                template_app (template_hole 5, template_var 0)),
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Semantic.Stuck_end",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t;
         ?s = Stuck |]
      ==> ?t = Stuck",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_equation (template_var 1, template_hole 0)],
       template_equation (template_var 0, template_hole 0))),
    ("Semantic.exec_callUndefined",
     "?\<Gamma> ?p = None ==>
      ?\<Gamma>\<turnstile> \<langle>call ?init ?p ?return
?c,Normal ?s\<rangle> \<Rightarrow> Stuck",
     template_implication
      ([template_equation
         (template_app (template_var 5, template_var 4), template_hole 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 5),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 4),
                     template_var 2),
                   template_var 1)),
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("Semantic.notStuck_CallDefinedD",
     "?\<Gamma>\<turnstile> \<langle>Call
?p,Normal ?s\<rangle> \<Rightarrow>\<notin>{Stuck} ==>
      ?\<Gamma> ?p ~= None",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app (template_hole 7, template_var 1)),
                template_app (template_hole 6, template_var 0)),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_hole 3))
            )],
       template_negation
        (
           template_equation
            (template_app (template_var 2, template_var 1), template_hole 0)
           ))),
    ("Semantic.isAbrE", "[| isAbr ?S; !!s. ?S = Abrupt s ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.isFaultE",
     "[| isFault ?s; !!f. ?s = Fault f ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.exec_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,Stuck\<rangle> \<Rightarrow> ?t;
         ?t = Stuck ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_hole 1),
              template_var 1)
            ),
        template_implication
         ([template_equation (template_var 1, template_hole 1)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic.execn_Stuck_end",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t;
         ?s = Stuck |]
      ==> ?t = Stuck",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_equation (template_var 2, template_hole 0)],
       template_equation (template_var 0, template_hole 0))),
    ("Semantic.execn_to_execn_sequence_flatten",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t ==>
      ?\<Gamma>\<turnstile> \<langle>sequence Seq
(flatten ?c),?s\<rangle> =?n\<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 4),
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_app (template_hole 0, template_var 3))),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Semantic.execn_merge_guards_to_execn_Normal",
     "?\<Gamma>\<turnstile> \<langle>merge_guards
?c,Normal ?s\<rangle> =?n\<Rightarrow> ?t ==>
      ?\<Gamma>\<turnstile> \<langle>?c,Normal
   ?s\<rangle> =?n\<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_app (template_hole 1, template_var 3)),
                  template_app (template_hole 0, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 3),
                 template_app (template_hole 0, template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("Semantic.noStuckI'",
     "(?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> Stuck ==>
       False) ==>
      ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow>\<notin>{Stuck}",
     template_implication
      ([template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 5, template_var 2),
                     template_var 1),
                   template_var 0),
                 template_hole 4)
               )],
          template_predicate (template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1),
               template_var 0),
             template_app
              (template_app (template_hole 1, template_hole 4),
               template_hole 0))
           ))),
    ("Semantic.execn_sequence_flatten_to_execn",
     "?\<Gamma>\<turnstile> \<langle>sequence Seq
(flatten ?c),?s\<rangle> =?n\<Rightarrow> ?t ==>
      ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_app (template_hole 0, template_var 3))),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Semantic.noStuck_startD'",
     "[| ?t ~= Stuck;
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t |]
      ==> ?s ~= Stuck",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1),
                template_var 0),
              template_var 3)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 1)))),
    ("Semantic.noStuck_start",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t;
         ?t ~= Stuck |]
      ==> ?s ~= Stuck",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 0))],
       template_negation
        (template_equation (template_var 1, template_hole 0)))),
    ("Semantic.Abrupt_end",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t;
         ?s = Abrupt ?s' |]
      ==> ?t = Abrupt ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 2, template_app (template_hole 0, template_var 0))],
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Semantic.Fault_end",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t;
         ?s = Fault ?f |]
      ==> ?t = Fault ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 2, template_app (template_hole 0, template_var 0))],
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Semantic.execn_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,Stuck\<rangle> =?n\<Rightarrow> ?t;
         ?t = Stuck ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_hole 1),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_equation (template_var 1, template_hole 1)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic.noStuckE",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow>\<notin>{Stuck};
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> Stuck |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1),
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_hole 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 2),
                template_var 1),
              template_hole 2)
            )],
       template_predicate (template_var 0))),
    ("Semantic.execn_callUndefined",
     "?\<Gamma> ?p = None ==>
      ?\<Gamma>\<turnstile> \<langle>call ?init ?p ?return
?c,Normal ?s\<rangle> =Suc ?n\<Rightarrow> Stuck",
     template_implication
      ([template_equation
         (template_app (template_var 6, template_var 5), template_hole 5)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_var 6),
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_var 4),
                         template_var 5),
                       template_var 3),
                     template_var 2)),
                 template_app (template_hole 2, template_var 1)),
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("Semantic.exec_to_exec_mark_guards_Fault",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> Fault
                             ?f ==>
      EX f'.
         ?\<Gamma>\<turnstile> \<langle>mark_guards ?x
   ?c,?s\<rangle> \<Rightarrow> Fault f'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3),
                template_var 2),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Semantic.noStuckn_startD'",
     "[| ?t ~= Stuck;
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t |]
      ==> ?s ~= Stuck",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_hole 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 0, template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0),
              template_var 4)
            )],
       template_negation
        (template_equation (template_var 1, template_hole 1)))),
    ("Semantic.exec_Normal_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Skip,Normal
        ?s\<rangle> \<Rightarrow> ?t;
         ?t = Normal ?s ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_hole 2),
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 1, template_var 2))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic.exec_Normal_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Throw,Normal
         ?s\<rangle> \<Rightarrow> ?t;
         ?t = Abrupt ?s ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_hole 3),
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 0, template_var 2))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic.exec_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,Abrupt
      ?s\<rangle> \<Rightarrow> ?t;
         ?t = Abrupt ?s ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3),
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 1, template_var 2))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic.exec_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,Fault
      ?f\<rangle> \<Rightarrow> ?t;
         ?t = Fault ?f ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3),
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 1, template_var 2))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic.noStuck_startn",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t;
         ?t ~= Stuck |]
      ==> ?s ~= Stuck",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 0))],
       template_negation
        (template_equation (template_var 2, template_hole 0)))),
    ("Semantic.execn_Abrupt_end",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t;
         ?s = Abrupt ?s' |]
      ==> ?t = Abrupt ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 3, template_app (template_hole 0, template_var 0))],
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Semantic.execn_Fault_end",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t;
         ?s = Fault ?f |]
      ==> ?t = Fault ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 3, template_app (template_hole 0, template_var 0))],
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Semantic.exec_assoc",
     "?\<Gamma>\<turnstile> \<langle>Seq ?c1.0
(Seq ?c2.0 ?c3.0),?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>\<turnstile> \<langle>Seq (Seq ?c1.0 ?c2.0)
?c3.0,?s\<rangle> \<Rightarrow> ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3)),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("Semantic.exec_Call_body_aux",
     "?\<Gamma> ?p = Some ?bdy ==>
      ?\<Gamma>\<turnstile> \<langle>Call ?p,?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>\<turnstile> \<langle>?bdy,?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_equation
         (template_app (template_var 4, template_var 3),
          template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_app (template_hole 0, template_var 3)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Semantic.exec_blockStuck",
     "?\<Gamma>\<turnstile> \<langle>?bdy,Normal
     (?init ?s)\<rangle> \<Rightarrow> Stuck ==>
      ?\<Gamma>\<turnstile> \<langle>block ?init ?bdy ?return
?c,Normal ?s\<rangle> \<Rightarrow> Stuck",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4),
                template_app
                 (template_hole 2,
                  template_app (template_var 3, template_var 2))),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 5),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 4),
                     template_var 1),
                   template_var 0)),
               template_app (template_hole 2, template_var 2)),
             template_hole 1)
           ))),
    ("Semantic.noFaultI'",
     "(?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> Fault
                              ?f ==>
       False) ==>
      ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow>\<notin>{Fault
                                     ?f}",
     template_implication
      ([template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 5, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_app (template_hole 4, template_var 0))
               )],
          template_predicate (template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_var 1),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 4, template_var 0)),
               template_hole 0))
           ))),
    ("Semantic.noStucknI'",
     "(?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> Stuck ==>
       False) ==>
      ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow>\<notin>{Stuck}",
     template_implication
      ([template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 0),
                 template_hole 4)
               )],
          template_predicate (template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0),
             template_app
              (template_app (template_hole 1, template_hole 4),
               template_hole 0))
           ))),
    ("Semantic.noFault_startD'",
     "[| ?t ~= Fault ?f;
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t |]
      ==> ?s ~= Fault ?f",
     template_implication
      ([template_negation
         (
            template_equation
             (template_var 4,
              template_app (template_hole 1, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1),
                template_var 0),
              template_var 4)
            )],
       template_negation
        (
           template_equation
            (template_var 0, template_app (template_hole 1, template_var 3))
           ))),
    ("Semantic.exec_to_exec_mark_guards",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t;
         ~ isFault ?t |]
      ==> ?\<Gamma>\<turnstile> \<langle>mark_guards ?f
    ?c,?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 4),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("Semantic.exec_to_exec_strip_guards",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t;
         ~ isFault ?t |]
      ==> ?\<Gamma>\<turnstile> \<langle>strip_guards ?F
    ?c,?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 4),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("Semantic.exec_to_exec_strip",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t;
         ~ isFault ?t |]
      ==> strip ?F
           ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 4)),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("Semantic.noFault_start",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t;
         ?t ~= Fault ?f |]
      ==> ?s ~= Fault ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_var 1,
              template_app (template_hole 0, template_var 0))
            )],
       template_negation
        (
           template_equation
            (template_var 2, template_app (template_hole 0, template_var 0))
           ))),
    ("Semantic.execn_mono",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t;
         ?n <= ?m |]
      ==> ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?m\<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 0),
             template_var 1)
           ))),
    ("Semantic.execn_Normal_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Skip,Normal
        ?s\<rangle> =?n\<Rightarrow> ?t;
         ?t = Normal ?s ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_hole 2),
                  template_app (template_hole 1, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 1, template_var 3))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic.execn_Normal_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Throw,Normal
         ?s\<rangle> =?n\<Rightarrow> ?t;
         ?t = Abrupt ?s ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 4),
                    template_hole 3),
                  template_app (template_hole 2, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 0, template_var 3))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic.execn_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,Abrupt
      ?s\<rangle> =?n\<Rightarrow> ?t;
         ?t = Abrupt ?s ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4),
                  template_app (template_hole 1, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 1, template_var 3))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic.execn_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,Fault
      ?f\<rangle> =?n\<Rightarrow> ?t;
         ?t = Fault ?f ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4),
                  template_app (template_hole 1, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 1, template_var 3))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic.noFaultE",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow>\<notin>{Fault
  ?f};
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> Fault
                                ?f |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3),
                template_var 2),
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 1)),
                template_hole 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 3),
                template_var 2),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate (template_var 0))),
    ("Semantic.exec_Call_body'",
     "?p : dom ?\<Gamma> ==>
      ?\<Gamma>\<turnstile> \<langle>Call ?p,?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>\<turnstile> \<langle>the
(?\<Gamma> ?p),?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_app (template_hole 1, template_var 3)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_hole 0,
                 template_app (template_var 2, template_var 3))),
             template_var 1),
           template_var 0)))),
    ("Semantic.notStuck_DynComD",
     "?\<Gamma>\<turnstile> \<langle>DynCom
?c,Normal ?s\<rangle> \<Rightarrow>\<notin>{Stuck} ==>
      ?\<Gamma>\<turnstile> \<langle>?c
?s,Normal ?s\<rangle> \<Rightarrow>\<notin>{Stuck}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app (template_hole 4, template_var 1)),
                template_app (template_hole 3, template_var 0)),
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 2),
                 template_app (template_var 1, template_var 0)),
               template_app (template_hole 3, template_var 0)),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0))
           ))),
    ("Semantic.notStuck_CatchD1",
     "?\<Gamma>\<turnstile> \<langle>Catch ?c1.0
?c2.0,Normal ?s\<rangle> \<Rightarrow>\<notin>{Stuck} ==>
      ?\<Gamma>\<turnstile> \<langle>?c1.0,Normal
      ?s\<rangle> \<Rightarrow>\<notin>{Stuck}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 3),
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_var 1)),
                template_app (template_hole 3, template_var 0)),
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 3),
                 template_var 2),
               template_app (template_hole 3, template_var 0)),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0))
           ))),
    ("Semantic.notStuck_SeqD1",
     "?\<Gamma>\<turnstile> \<langle>Seq ?c1.0
?c2.0,Normal ?s\<rangle> \<Rightarrow>\<notin>{Stuck} ==>
      ?\<Gamma>\<turnstile> \<langle>?c1.0,Normal
      ?s\<rangle> \<Rightarrow>\<notin>{Stuck}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 3),
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_var 1)),
                template_app (template_hole 3, template_var 0)),
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 3),
                 template_var 2),
               template_app (template_hole 3, template_var 0)),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0))
           ))),
    ("Semantic.final_notinI",
     "(!!t. ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> t ==>
            t ~: ?T) ==>
      ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow>\<notin>?T",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Semantic.noFaultn_startD'",
     "[| ?t ~= Fault ?f;
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t |]
      ==> ?s ~= Fault ?f",
     template_implication
      ([template_negation
         (
            template_equation
             (template_var 5,
              template_app (template_hole 1, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 0, template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0),
              template_var 5)
            )],
       template_negation
        (
           template_equation
            (template_var 1, template_app (template_hole 1, template_var 4))
           ))),
    ("Semantic.noFault_startn",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t;
         ?t ~= Fault ?f |]
      ==> ?s ~= Fault ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_var 1,
              template_app (template_hole 0, template_var 0))
            )],
       template_negation
        (
           template_equation
            (template_var 3, template_app (template_hole 0, template_var 0))
           ))),
    ("Semantic.exec_Normal_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Basic
   ?f,Normal ?s\<rangle> \<Rightarrow> ?t;
         ?t = Normal (?f ?s) ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_app (template_hole 2, template_var 3)),
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app
              (template_hole 1,
               template_app (template_var 3, template_var 2)))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic.exec_restrict_to_exec",
     "[| ?\<Gamma>|\<^bsub>?A\<^esub>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t;
         ?t ~= Stuck |]
      ==> ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 4),
                      template_var 3)),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 4),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Semantic.noStuck_exec_startD",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow>\<notin>{Stuck};
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t |]
      ==> ?s ~= Stuck",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2),
                template_var 1),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_hole 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 1, template_hole 4)))),
    ("Semantic.noStuck_execD",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow>\<notin>{Stuck};
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t |]
      ==> ?t ~= Stuck",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2),
                template_var 1),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_hole 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 4)))),
    ("Semantic.execn_assoc",
     "?\<Gamma>\<turnstile> \<langle>Seq ?c1.0
(Seq ?c2.0 ?c3.0),?s\<rangle> =?n\<Rightarrow> ?t =
      ?\<Gamma>\<turnstile> \<langle>Seq (Seq ?c1.0 ?c2.0)
?c3.0,?s\<rangle> =?n\<Rightarrow> ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 6),
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3))),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 6),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4)),
                 template_var 3)),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Semantic.exec_Call_body",
     "?\<Gamma> ?p = Some ?bdy ==>
      ?\<Gamma>\<turnstile> \<langle>Call ?p,?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>\<turnstile> \<langle>the
(?\<Gamma> ?p),?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_equation
         (template_app (template_var 4, template_var 3),
          template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_app (template_hole 1, template_var 3)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_app
                (template_hole 0,
                 template_app (template_var 4, template_var 3))),
             template_var 1),
           template_var 0)))),
    ("Semantic.exec_blockFault",
     "?\<Gamma>\<turnstile> \<langle>?bdy,Normal
     (?init ?s)\<rangle> \<Rightarrow> Fault ?f ==>
      ?\<Gamma>\<turnstile> \<langle>block ?init ?bdy ?return
?c,Normal ?s\<rangle> \<Rightarrow> Fault ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 6),
                  template_var 5),
                template_app
                 (template_hole 2,
                  template_app (template_var 4, template_var 3))),
              template_app (template_hole 1, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 6),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 5),
                     template_var 1),
                   template_var 0)),
               template_app (template_hole 2, template_var 3)),
             template_app (template_hole 1, template_var 2))
           ))),
    ("Semantic.execn_blockStuck",
     "?\<Gamma>\<turnstile> \<langle>?bdy,Normal
     (?init ?s)\<rangle> =?n\<Rightarrow> Stuck ==>
      ?\<Gamma>\<turnstile> \<langle>block ?init ?bdy ?return
?c,Normal ?s\<rangle> =?n\<Rightarrow> Stuck",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 6),
                    template_var 5),
                  template_app
                   (template_hole 2,
                    template_app (template_var 4, template_var 3))),
                template_var 2),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 6),
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 4),
                         template_var 5),
                       template_var 1),
                     template_var 0)),
                 template_app (template_hole 2, template_var 3)),
               template_var 2),
             template_hole 1)
           ))),
    ("Semantic.noFaultnI'",
     "(?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> Fault
                                 ?f ==>
       False) ==>
      ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow>\<notin>{Fault
  ?f}",
     template_implication
      ([template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_app (template_hole 4, template_var 0))
               )],
          template_predicate (template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 4, template_var 0)),
               template_hole 0))
           ))),
    ("Semantic.noAbrupt_start",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t;
         ALL t'. ?t ~= Abrupt t' |]
      ==> ?s ~= Abrupt ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_negation
        (
           template_equation
            (template_var 2, template_app (template_hole 0, template_var 0))
           ))),
    ("Semantic.exec_Seq'",
     "[| ?\<Gamma>\<turnstile> \<langle>?c1.0,?s\<rangle> \<Rightarrow> ?s';
         ?\<Gamma>\<turnstile> \<langle>?c2.0,?s'\<rangle> \<Rightarrow> ?s'' |]
      ==> ?\<Gamma>\<turnstile> \<langle>Seq ?c1.0
    ?c2.0,?s\<rangle> \<Rightarrow> ?s''",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 1),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1)),
               template_var 3),
             template_var 0)
           ))),
    ("Semantic.execn_to_execn_mark_guards",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t;
         ~ isFault ?t |]
      ==> ?\<Gamma>\<turnstile> \<langle>mark_guards ?f
    ?c,?s\<rangle> =?n\<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 5),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 4)),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("Semantic.execn_to_execn_strip_guards",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t;
         ~ isFault ?t |]
      ==> ?\<Gamma>\<turnstile> \<langle>strip_guards ?F
    ?c,?s\<rangle> =?n\<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 5),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 4)),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("Semantic.execn_to_execn_strip",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t;
         ~ isFault ?t |]
      ==> strip ?F
           ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 5)),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("Semantic.execn_Normal_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Basic
   ?f,Normal ?s\<rangle> =?n\<Rightarrow> ?t;
         ?t = Normal (?f ?s) ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_app (template_hole 2, template_var 4)),
                  template_app (template_hole 1, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app
              (template_hole 1,
               template_app (template_var 4, template_var 3)))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic.not_isAbrD",
     "~ isAbr ?s ==>
      (EX s'. ?s = Normal s') | ?s = Stuck | (EX f. ?s = Fault f)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 7, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6, template_app (template_hole 5, t_empty)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 2)),
               template_app (template_hole 1, t_empty)))
           ))),
    ("Semantic.noStuckI",
     "(!!t. ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> t ==>
            t ~= Stuck) ==>
      ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow>\<notin>{Stuck}",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1),
               template_var 0),
             template_app
              (template_app (template_hole 1, template_hole 3),
               template_hole 0))
           ))),
    ("Semantic.exec_to_exec_strip_guards'",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t;
         ?t ~: Fault ` ?F |]
      ==> ?\<Gamma>\<turnstile> \<langle>strip_guards ?F
    ?c,?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app
                   (template_app (template_hole 2, template_hole 1),
                    template_var 0))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 4),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("Semantic.exec_to_exec_strip'",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t;
         ?t ~: Fault ` ?F |]
      ==> strip ?F
           ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app
                   (template_app (template_hole 2, template_hole 1),
                    template_var 0))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 4)),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("Semantic.exec_to_exec_strip_guards_Fault",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> Fault
                                ?f;
         ?f ~: ?F |]
      ==> ?\<Gamma>\<turnstile> \<langle>strip_guards ?F
    ?c,?s\<rangle> \<Rightarrow> Fault ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3),
                template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 4),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3)),
               template_var 2),
             template_app (template_hole 3, template_var 1))
           ))),
    ("Semantic.noAbrupt_startn",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t;
         ALL t'. ?t ~= Abrupt t' |]
      ==> ?s ~= Abrupt ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_negation
        (
           template_equation
            (template_var 3, template_app (template_hole 0, template_var 0))
           ))),
    ("Semantic.exec_Normal_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>DynCom
   ?c,Normal ?s\<rangle> \<Rightarrow> ?t;
         ?\<Gamma>\<turnstile> \<langle>?c
   ?s,Normal ?s\<rangle> \<Rightarrow> ?t ==>
         ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_app (template_hole 1, template_var 3)),
                template_app (template_hole 0, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 4),
                     template_app (template_var 3, template_var 2)),
                   template_app (template_hole 0, template_var 2)),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic.execn_restrict_to_execn",
     "[| ?\<Gamma>|\<^bsub>?A\<^esub>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t;
         ?t ~= Stuck |]
      ==> ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 5),
                        template_var 4)),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_var 5),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Semantic.noFault_exec_startD",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow>\<notin>{Fault
  ?f};
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t |]
      ==> ?s ~= Fault ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3),
                template_var 2),
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 1)),
                template_hole 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_var 2, template_app (template_hole 4, template_var 1))
           ))),
    ("Semantic.noFault_execD",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow>\<notin>{Fault
  ?f};
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t |]
      ==> ?t ~= Fault ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3),
                template_var 2),
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 1)),
                template_hole 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_var 0, template_app (template_hole 4, template_var 1))
           ))),
    ("Semantic.noStuckn_exec_startD",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow>\<notin>{Stuck};
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t |]
      ==> ?s ~= Stuck",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_hole 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 2, template_hole 4)))),
    ("Semantic.noStuckn_execD",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow>\<notin>{Stuck};
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t |]
      ==> ?t ~= Stuck",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_hole 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 4)))),
    ("Semantic.exec_blockAbrupt",
     "?\<Gamma>\<turnstile> \<langle>?bdy,Normal
     (?init ?s)\<rangle> \<Rightarrow> Abrupt ?t ==>
      ?\<Gamma>\<turnstile> \<langle>block ?init ?bdy ?return
?c,Normal ?s\<rangle> \<Rightarrow> Abrupt (?return ?s ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 6),
                  template_var 5),
                template_app
                 (template_hole 2,
                  template_app (template_var 4, template_var 3))),
              template_app (template_hole 1, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 6),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 5),
                     template_var 1),
                   template_var 0)),
               template_app (template_hole 2, template_var 3)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_var 1, template_var 3),
                 template_var 2)))
           ))),
    ("Semantic.execn_blockFault",
     "?\<Gamma>\<turnstile> \<langle>?bdy,Normal
     (?init ?s)\<rangle> =?n\<Rightarrow> Fault ?f ==>
      ?\<Gamma>\<turnstile> \<langle>block ?init ?bdy ?return
?c,Normal ?s\<rangle> =?n\<Rightarrow> Fault ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 7),
                    template_var 6),
                  template_app
                   (template_hole 2,
                    template_app (template_var 5, template_var 4))),
                template_var 3),
              template_app (template_hole 1, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 7),
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 5),
                         template_var 6),
                       template_var 1),
                     template_var 0)),
                 template_app (template_hole 2, template_var 4)),
               template_var 3),
             template_app (template_hole 1, template_var 2))
           ))),
    ("Semantic.exec_dynCall",
     "?\<Gamma>\<turnstile> \<langle>call ?init (?p ?s) ?return
?c,Normal ?s\<rangle> \<Rightarrow> ?t ==>
      ?\<Gamma>\<turnstile> \<langle>dynCall ?init ?p ?return
?c,Normal ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 6),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 5),
                        template_app (template_var 4, template_var 3)),
                      template_var 2),
                    template_var 1)),
                template_app (template_hole 1, template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 6),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 2),
                   template_var 1)),
               template_app (template_hole 1, template_var 3)),
             template_var 0)
           ))),
    ("Semantic.noFaultI",
     "(!!t. ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> t ==>
            t ~= Fault ?f) ==>
      ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow>\<notin>{Fault
                                     ?f}",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_var 1),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 3, template_var 0)),
               template_hole 0))
           ))),
    ("Semantic.noStucknI",
     "(!!t. ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> t ==>
            t ~= Stuck) ==>
      ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow>\<notin>{Stuck}",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0),
             template_app
              (template_app (template_hole 1, template_hole 3),
               template_hole 0))
           ))),
    ("Semantic.execn_to_execn_strip_guards'",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t;
         ?t ~: Fault ` ?F |]
      ==> ?\<Gamma>\<turnstile> \<langle>strip_guards ?F
    ?c,?s\<rangle> =?n\<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app
                   (template_app (template_hole 2, template_hole 1),
                    template_var 0))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 5, template_var 5),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 4)),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("Semantic.execn_to_execn_strip'",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t;
         ?t ~: Fault ` ?F |]
      ==> strip ?F
           ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app
                   (template_app (template_hole 2, template_hole 1),
                    template_var 0))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 5)),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("Semantic.execn_Seq'",
     "[| ?\<Gamma>\<turnstile> \<langle>?c1.0,?s\<rangle> =?n\<Rightarrow> ?s';
         ?\<Gamma>\<turnstile> \<langle>?c2.0,?s'\<rangle> =?n\<Rightarrow> ?s'' |]
      ==> ?\<Gamma>\<turnstile> \<langle>Seq ?c1.0
    ?c2.0,?s\<rangle> =?n\<Rightarrow> ?s''",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 6),
                    template_var 1),
                  template_var 2),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 6),
                   template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 1)),
                 template_var 4),
               template_var 3),
             template_var 0)
           ))),
    ("Semantic.execn_Normal_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>DynCom
   ?c,Normal ?s\<rangle> =?n\<Rightarrow> ?t;
         ?\<Gamma>\<turnstile> \<langle>?c
   ?s,Normal ?s\<rangle> =?n\<Rightarrow> ?t ==>
         ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_app (template_hole 1, template_var 4)),
                  template_app (template_hole 0, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 5),
                       template_app (template_var 4, template_var 3)),
                     template_app (template_hole 0, template_var 3)),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic.noFaultn_exec_startD",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow>\<notin>{Fault
     ?f};
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t |]
      ==> ?s ~= Fault ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 1)),
                template_hole 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_var 3, template_app (template_hole 4, template_var 1))
           ))),
    ("Semantic.noFaultn_execD",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow>\<notin>{Fault
     ?f};
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t |]
      ==> ?t ~= Fault ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 1)),
                template_hole 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_var 0, template_app (template_hole 4, template_var 1))
           ))),
    ("Semantic.execn_blockAbrupt",
     "?\<Gamma>\<turnstile> \<langle>?bdy,Normal
     (?init ?s)\<rangle> =?n\<Rightarrow> Abrupt ?t ==>
      ?\<Gamma>\<turnstile> \<langle>block ?init ?bdy ?return
?c,Normal ?s\<rangle> =?n\<Rightarrow> Abrupt (?return ?s ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 7),
                    template_var 6),
                  template_app
                   (template_hole 2,
                    template_app (template_var 5, template_var 4))),
                template_var 3),
              template_app (template_hole 1, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 7),
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 5),
                         template_var 6),
                       template_var 1),
                     template_var 0)),
                 template_app (template_hole 2, template_var 4)),
               template_var 3),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_var 1, template_var 4),
                 template_var 2)))
           ))),
    ("Semantic.execn_dynCall",
     "?\<Gamma>\<turnstile> \<langle>call ?init (?p ?s) ?return
?c,Normal ?s\<rangle> =?n\<Rightarrow> ?t ==>
      ?\<Gamma>\<turnstile> \<langle>dynCall ?init ?p ?return
?c,Normal ?s\<rangle> =?n\<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 7),
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 2, template_var 6),
                          template_app (template_var 5, template_var 4)),
                        template_var 3),
                      template_var 2)),
                  template_app (template_hole 1, template_var 4)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 7),
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 5),
                       template_var 3),
                     template_var 2)),
                 template_app (template_hole 1, template_var 4)),
               template_var 1),
             template_var 0)
           ))),
    ("Semantic.execn_to_execn_mark_guards_Fault",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t;
         ?t = Fault ?f |]
      ==> EX f'.
             ?\<Gamma>\<turnstile> \<langle>mark_guards ?x
       ?c,?s\<rangle> =?n\<Rightarrow> Fault f'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_var 2, template_app (template_hole 2, template_var 1))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Semantic.notStuck_WhileTrueD1",
     "[| ?\<Gamma>\<turnstile> \<langle>While ?b
   ?c,Normal ?s\<rangle> \<Rightarrow>\<notin>{Stuck};
         ?s : ?b |]
      ==> ?\<Gamma>\<turnstile> \<langle>?c,Normal
       ?s\<rangle> \<Rightarrow>\<notin>{Stuck}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_var 1)),
                template_app (template_hole 4, template_var 0)),
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_hole 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_var 3),
                 template_var 1),
               template_app (template_hole 4, template_var 0)),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1))
           ))),
    ("Semantic.Seq_NoFaultStuckD1",
     "?\<Gamma>\<turnstile> \<langle>Seq ?c1.0
?c2.0,?s\<rangle> \<Rightarrow>\<notin>{Stuck} Un Fault ` ?F ==>
      ?\<Gamma>\<turnstile> \<langle>?c1.0,?s\<rangle> \<Rightarrow>\<notin>{Stuck} Un
Fault ` ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 4),
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_var 2)),
                template_var 1),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_hole 2)),
                template_app
                 (template_app (template_hole 1, template_hole 0),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_var 4),
                 template_var 3),
               template_var 1),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_hole 2)),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)))
           ))),
    ("Semantic.noFaultnI",
     "(!!t. ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> t ==>
            t ~= Fault ?f) ==>
      ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow>\<notin>{Fault
  ?f}",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 3, template_var 0)),
               template_hole 0))
           ))),
    ("Semantic.exec_callStuck",
     "[| ?\<Gamma> ?p = Some ?bdy;
         ?\<Gamma>\<turnstile> \<langle>?bdy,Normal
        (?init ?s)\<rangle> \<Rightarrow> Stuck |]
      ==> ?\<Gamma>\<turnstile> \<langle>call ?init ?p ?return
    ?c,Normal ?s\<rangle> \<Rightarrow> Stuck",
     template_implication
      ([template_equation
         (template_app (template_var 6, template_var 5),
          template_app (template_hole 4, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 6),
                  template_var 4),
                template_app
                 (template_hole 2,
                  template_app (template_var 3, template_var 2))),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 6),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 5),
                     template_var 1),
                   template_var 0)),
               template_app (template_hole 2, template_var 2)),
             template_hole 1)
           ))),
    ("Semantic.notStuck_CallD",
     "[| ?\<Gamma>\<turnstile> \<langle>Call
   ?p,Normal ?s\<rangle> \<Rightarrow>\<notin>{Stuck};
         ?\<Gamma> ?p = Some ?bdy |]
      ==> ?\<Gamma>\<turnstile> \<langle>?bdy,Normal
         ?s\<rangle> \<Rightarrow>\<notin>{Stuck}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_app (template_hole 6, template_var 2)),
                template_app (template_hole 5, template_var 1)),
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_hole 2))
            ),
        template_equation
         (template_app (template_var 3, template_var 2),
          template_app (template_hole 0, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_var 3),
                 template_var 0),
               template_app (template_hole 5, template_var 1)),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2))
           ))),
    ("Semantic.notStuck_CondTrueD",
     "[| ?\<Gamma>\<turnstile> \<langle>Cond ?b ?c1.0
   ?c2.0,Normal ?s\<rangle> \<Rightarrow>\<notin>{Stuck};
         ?s : ?b |]
      ==> ?\<Gamma>\<turnstile> \<langle>?c1.0,Normal
          ?s\<rangle> \<Rightarrow>\<notin>{Stuck}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_app
                     (template_app (template_hole 5, template_var 3),
                      template_var 2),
                    template_var 1)),
                template_app (template_hole 4, template_var 0)),
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_hole 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_var 4),
                 template_var 2),
               template_app (template_hole 4, template_var 0)),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1))
           ))),
    ("Semantic.notStuck_GuardD",
     "[| ?\<Gamma>\<turnstile> \<langle>Guard ?m ?g
   ?c,Normal ?s\<rangle> \<Rightarrow>\<notin>{Stuck};
         ?s : ?g |]
      ==> ?\<Gamma>\<turnstile> \<langle>?c,Normal
       ?s\<rangle> \<Rightarrow>\<notin>{Stuck}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_app
                     (template_app (template_hole 5, template_var 3),
                      template_var 2),
                    template_var 1)),
                template_app (template_hole 4, template_var 0)),
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_hole 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_var 4),
                 template_var 1),
               template_app (template_hole 4, template_var 0)),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1))
           ))),
    ("Semantic.noStuck_Call_body",
     "?\<Gamma> ?p = Some ?bdy ==>
      ?\<Gamma>\<turnstile> \<langle>Call
?p,Normal ?s\<rangle> \<Rightarrow>\<notin>{Stuck} =
      ?\<Gamma>\<turnstile> \<langle>the
(?\<Gamma> ?p),Normal ?s\<rangle> \<Rightarrow>\<notin>{Stuck}",
     template_implication
      ([template_equation
         (template_app (template_var 3, template_var 2),
          template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_var 3),
               template_app (template_hole 5, template_var 2)),
             template_app (template_hole 4, template_var 0)),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_var 3),
               template_app
                (template_hole 0,
                 template_app (template_var 3, template_var 2))),
             template_app (template_hole 4, template_var 0)),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1))))),
    ("Semantic.notStuck_SeqD2",
     "[| ?\<Gamma>\<turnstile> \<langle>Seq ?c1.0
   ?c2.0,Normal ?s\<rangle> \<Rightarrow>\<notin>{Stuck};
         ?\<Gamma>\<turnstile> \<langle>?c1.0,Normal
         ?s\<rangle> \<Rightarrow> ?s' |]
      ==> ?\<Gamma>\<turnstile> \<langle>?c2.0,?s'\<rangle> \<Rightarrow>\<notin>{Stuck}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_var 2)),
                template_app (template_hole 4, template_var 1)),
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_hole 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 3),
                template_app (template_hole 4, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_var 4),
                 template_var 2),
               template_var 0),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1))
           ))),
    ("Semantic.notStuck_CondFalseD",
     "[| ?\<Gamma>\<turnstile> \<langle>Cond ?b ?c1.0
   ?c2.0,Normal ?s\<rangle> \<Rightarrow>\<notin>{Stuck};
         ?s ~: ?b |]
      ==> ?\<Gamma>\<turnstile> \<langle>?c2.0,Normal
          ?s\<rangle> \<Rightarrow>\<notin>{Stuck}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 4),
                  template_app
                   (template_app
                     (template_app (template_hole 6, template_var 3),
                      template_var 2),
                    template_var 1)),
                template_app (template_hole 5, template_var 0)),
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_hole 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 0, template_var 0),
                  template_var 3)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_var 4),
                 template_var 1),
               template_app (template_hole 5, template_var 0)),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2))
           ))),
    ("Semantic.Guard_noFaultStuckD",
     "[| ?\<Gamma>\<turnstile> \<langle>Guard ?f ?g
   ?c,Normal ?s\<rangle> \<Rightarrow>\<notin>{Stuck} Un Fault ` (- ?F);
         ?f ~: ?F |]
      ==> ?s : ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 5),
                  template_app
                   (template_app
                     (template_app (template_hole 11, template_var 4),
                      template_var 3),
                    template_var 2)),
                template_app (template_hole 10, template_var 1)),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_hole 7),
                    template_hole 6)),
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_app (template_hole 3, template_var 0))))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 0)
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 3)
           ))),
    ("Semantic.exec_callFault",
     "[| ?\<Gamma> ?p = Some ?bdy;
         ?\<Gamma>\<turnstile> \<langle>?bdy,Normal
        (?init ?s)\<rangle> \<Rightarrow> Fault ?f |]
      ==> ?\<Gamma>\<turnstile> \<langle>call ?init ?p ?return
    ?c,Normal ?s\<rangle> \<Rightarrow> Fault ?f",
     template_implication
      ([template_equation
         (template_app (template_var 7, template_var 6),
          template_app (template_hole 4, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 7),
                  template_var 5),
                template_app
                 (template_hole 2,
                  template_app (template_var 4, template_var 3))),
              template_app (template_hole 1, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 7),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 6),
                     template_var 1),
                   template_var 0)),
               template_app (template_hole 2, template_var 3)),
             template_app (template_hole 1, template_var 2))
           ))),
    ("Semantic.noFault_Call_body",
     "?\<Gamma> ?p = Some ?bdy ==>
      ?\<Gamma>\<turnstile> \<langle>Call
?p,Normal ?s\<rangle> \<Rightarrow>\<notin>{Fault ?f} =
      ?\<Gamma>\<turnstile> \<langle>the
(?\<Gamma> ?p),Normal ?s\<rangle> \<Rightarrow>\<notin>{Fault ?f}",
     template_implication
      ([template_equation
         (template_app (template_var 4, template_var 3),
          template_app (template_hole 8, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_var 4),
               template_app (template_hole 5, template_var 3)),
             template_app (template_hole 4, template_var 1)),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_hole 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_var 4),
               template_app
                (template_hole 0,
                 template_app (template_var 4, template_var 3))),
             template_app (template_hole 4, template_var 1)),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_hole 1))))),
    ("Semantic.execn_callStuck",
     "[| ?\<Gamma> ?p = Some ?bdy;
         ?\<Gamma>\<turnstile> \<langle>?bdy,Normal
        (?init ?s)\<rangle> =?n\<Rightarrow> Stuck |]
      ==> ?\<Gamma>\<turnstile> \<langle>call ?init ?p ?return
    ?c,Normal ?s\<rangle> =Suc ?n\<Rightarrow> Stuck",
     template_implication
      ([template_equation
         (template_app (template_var 7, template_var 6),
          template_app (template_hole 5, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 7),
                    template_var 5),
                  template_app
                   (template_hole 3,
                    template_app (template_var 4, template_var 3))),
                template_var 2),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_var 7),
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 4),
                         template_var 6),
                       template_var 1),
                     template_var 0)),
                 template_app (template_hole 3, template_var 3)),
               template_app (template_hole 0, template_var 2)),
             template_hole 2)
           ))),
    ("Semantic.exec_sequence_app",
     "[| ?\<Gamma>\<turnstile> \<langle>sequence Seq
   ?xs,Normal ?s\<rangle> \<Rightarrow> ?s';
         ?\<Gamma>\<turnstile> \<langle>sequence Seq
   ?ys,?s'\<rangle> \<Rightarrow> ?t |]
      ==> ?\<Gamma>\<turnstile> \<langle>sequence Seq
    (?xs @ ?ys),Normal ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_var 4)),
                template_app (template_hole 1, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_var 1)),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 5),
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 1))),
               template_app (template_hole 1, template_var 3)),
             template_var 0)
           ))),
    ("Semantic.exec_dynCall_Normal_elim",
     "[| ?\<Gamma>\<turnstile> \<langle>dynCall ?init ?p ?return
   ?c,Normal ?s\<rangle> \<Rightarrow> ?t;
         ?\<Gamma>\<turnstile> \<langle>call ?init (?p ?s) ?return
   ?c,Normal ?s\<rangle> \<Rightarrow> ?t ==>
         ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 7),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3)),
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_var 7),
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 0, template_var 6),
                           template_app (template_var 5, template_var 2)),
                         template_var 4),
                       template_var 3)),
                   template_app (template_hole 1, template_var 2)),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic.notStuck_CatchD2",
     "[| ?\<Gamma>\<turnstile> \<langle>Catch ?c1.0
   ?c2.0,Normal ?s\<rangle> \<Rightarrow>\<notin>{Stuck};
         ?\<Gamma>\<turnstile> \<langle>?c1.0,Normal
         ?s\<rangle> \<Rightarrow> Abrupt ?s' |]
      ==> ?\<Gamma>\<turnstile> \<langle>?c2.0,Normal
          ?s'\<rangle> \<Rightarrow>\<notin>{Stuck}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 4),
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_var 2)),
                template_app (template_hole 5, template_var 1)),
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_hole 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_app (template_hole 5, template_var 1)),
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_var 4),
                 template_var 2),
               template_app (template_hole 5, template_var 0)),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2))
           ))),
    ("Semantic.execn_to_execn_strip_guards_Fault",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t;
         ?t = Fault ?f; ?f ~: ?F |]
      ==> ?\<Gamma>\<turnstile> \<langle>strip_guards ?F
    ?c,?s\<rangle> =?n\<Rightarrow> Fault ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_var 2, template_app (template_hole 3, template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 5, template_var 6),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 5)),
                 template_var 4),
               template_var 3),
             template_app (template_hole 3, template_var 1))
           ))),
    ("Semantic.exec_noguards_no_Fault",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t;
         noguards ?c; ALL p:dom ?\<Gamma>. noguards (the (?\<Gamma> p));
         ~ isFault ?s |]
      ==> ~ isFault ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 3)),
              t_empty)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 0, template_var 1))
            )],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("Semantic.exec_nothrows_no_Abrupt",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t;
         nothrows ?c; ALL p:dom ?\<Gamma>. nothrows (the (?\<Gamma> p));
         ~ isAbr ?s |]
      ==> ~ isAbr ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 3)),
              t_empty)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 0, template_var 1))
            )],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("Semantic.exec_sequence_appD",
     "?\<Gamma>\<turnstile> \<langle>sequence Seq
(?xs @ ?ys),Normal ?s\<rangle> \<Rightarrow> ?t ==>
      EX s'.
         ?\<Gamma>\<turnstile> \<langle>sequence Seq
   ?xs,Normal ?s\<rangle> \<Rightarrow> s' &
         ?\<Gamma>\<turnstile> \<langle>sequence Seq
   ?ys,s'\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 2))),
                template_app (template_hole 2, template_var 1)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Semantic.exec_callAbrupt",
     "[| ?\<Gamma> ?p = Some ?bdy;
         ?\<Gamma>\<turnstile> \<langle>?bdy,Normal
        (?init ?s)\<rangle> \<Rightarrow> Abrupt ?t |]
      ==> ?\<Gamma>\<turnstile> \<langle>call ?init ?p ?return
    ?c,Normal ?s\<rangle> \<Rightarrow> Abrupt (?return ?s ?t)",
     template_implication
      ([template_equation
         (template_app (template_var 7, template_var 6),
          template_app (template_hole 4, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 7),
                  template_var 5),
                template_app
                 (template_hole 2,
                  template_app (template_var 4, template_var 3))),
              template_app (template_hole 1, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 7),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 6),
                     template_var 1),
                   template_var 0)),
               template_app (template_hole 2, template_var 3)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_var 1, template_var 3),
                 template_var 2)))
           ))),
    ("Semantic.inter_guards_exec_Fault",
     "[| (?c1.0 \<inter>\<^sub>g ?c2.0) = Some ?c;
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> Fault
                                ?f |]
      ==> ?\<Gamma>\<turnstile> \<langle>?c1.0,?s\<rangle> \<Rightarrow> Fault
                                    ?f |
          ?\<Gamma>\<turnstile> \<langle>?c2.0,?s\<rangle> \<Rightarrow> Fault
                                    ?f",
     template_implication
      ([template_equation
         (template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 5),
              template_var 4)),
          template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 3),
                template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 5),
                   template_var 1),
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 4),
                 template_var 1),
               template_app (template_hole 1, template_var 0)))
           ))),
    ("Semantic.execn_noguards_no_Fault",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t;
         noguards ?c; ALL p:dom ?\<Gamma>. noguards (the (?\<Gamma> p));
         ~ isFault ?s |]
      ==> ~ isFault ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 4)),
              t_empty)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 0, template_var 2))
            )],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("Semantic.execn_nothrows_no_Abrupt",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t;
         nothrows ?c; ALL p:dom ?\<Gamma>. nothrows (the (?\<Gamma> p));
         ~ isAbr ?s |]
      ==> ~ isAbr ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 4)),
              t_empty)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 0, template_var 2))
            )],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("Semantic.execn_callFault",
     "[| ?\<Gamma> ?p = Some ?bdy;
         ?\<Gamma>\<turnstile> \<langle>?bdy,Normal
        (?init ?s)\<rangle> =?n\<Rightarrow> Fault ?f |]
      ==> ?\<Gamma>\<turnstile> \<langle>call ?init ?p ?return
    ?c,Normal ?s\<rangle> =Suc ?n\<Rightarrow> Fault ?f",
     template_implication
      ([template_equation
         (template_app (template_var 8, template_var 7),
          template_app (template_hole 5, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 8),
                    template_var 6),
                  template_app
                   (template_hole 3,
                    template_app (template_var 5, template_var 4))),
                template_var 3),
              template_app (template_hole 2, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_var 8),
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 5),
                         template_var 7),
                       template_var 1),
                     template_var 0)),
                 template_app (template_hole 3, template_var 4)),
               template_app (template_hole 0, template_var 3)),
             template_app (template_hole 2, template_var 2))
           ))),
    ("Semantic.exec_Normal_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Seq ?c1.0
   ?c2.0,Normal ?s\<rangle> \<Rightarrow> ?t;
         !!s'. [| ?\<Gamma>\<turnstile> \<langle>?c1.0,Normal
                  ?s\<rangle> \<Rightarrow> s';
                  ?\<Gamma>\<turnstile> \<langle>?c2.0,s'\<rangle> \<Rightarrow> ?t |]
               ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 5),
                  template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3)),
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.execn_dynCall_Normal_elim",
     "[| ?\<Gamma>\<turnstile> \<langle>dynCall ?init ?p ?return
   ?c,Normal ?s\<rangle> =?n\<Rightarrow> ?t;
         ?\<Gamma>\<turnstile> \<langle>call ?init (?p ?s) ?return
   ?c,Normal ?s\<rangle> =?n\<Rightarrow> ?t ==>
         ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 8),
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 2, template_var 7),
                          template_var 6),
                        template_var 5),
                      template_var 4)),
                  template_app (template_hole 1, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 8),
                       template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 0, template_var 7),
                             template_app (template_var 6, template_var 3)),
                           template_var 5),
                         template_var 4)),
                     template_app (template_hole 1, template_var 3)),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantic.exec_block",
     "[| ?\<Gamma>\<turnstile> \<langle>?bdy,Normal
        (?init ?s)\<rangle> \<Rightarrow> Normal ?t;
         ?\<Gamma>\<turnstile> \<langle>?c ?s
   ?t,Normal (?return ?s ?t)\<rangle> \<Rightarrow> ?u |]
      ==> ?\<Gamma>\<turnstile> \<langle>block ?init ?bdy ?return
    ?c,Normal ?s\<rangle> \<Rightarrow> ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 7),
                  template_var 6),
                template_app
                 (template_hole 1,
                  template_app (template_var 5, template_var 4))),
              template_app (template_hole 1, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 7),
                  template_app
                   (template_app (template_var 2, template_var 4),
                    template_var 3)),
                template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_var 1, template_var 4),
                    template_var 3))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 7),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 6),
                     template_var 1),
                   template_var 2)),
               template_app (template_hole 1, template_var 4)),
             template_var 0)
           ))),
    ("Semantic.execn_sequence_app",
     "[| ?\<Gamma>\<turnstile> \<langle>sequence Seq
   ?xs,Normal ?s\<rangle> =?n\<Rightarrow> ?s';
         ?\<Gamma>\<turnstile> \<langle>sequence Seq
   ?ys,?s'\<rangle> =?n\<Rightarrow> ?t |]
      ==> ?\<Gamma>\<turnstile> \<langle>sequence Seq
    (?xs @ ?ys),Normal ?s\<rangle> =?n\<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 6),
                    template_app
                     (template_app (template_hole 3, template_hole 2),
                      template_var 5)),
                  template_app (template_hole 1, template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 6),
                    template_app
                     (template_app (template_hole 3, template_hole 2),
                      template_var 1)),
                  template_var 2),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_var 6),
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 1))),
                 template_app (template_hole 1, template_var 4)),
               template_var 3),
             template_var 0)
           ))),
    ("Semantic.inter_guards_exec_noFault",
     "[| (?c1.0 \<inter>\<^sub>g ?c2.0) = Some ?c;
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t;
         ~ isFault ?t |]
      ==> ?\<Gamma>\<turnstile> \<langle>?c1.0,?s\<rangle> \<Rightarrow> ?t &
          ?\<Gamma>\<turnstile> \<langle>?c2.0,?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_equation
         (template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_var 5),
              template_var 4)),
          template_app (template_hole 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 3),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_var 2),
                     template_var 5),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 4),
                 template_var 1),
               template_var 0))
           ))),
    ("Semantic.execn_sequence_appD",
     "?\<Gamma>\<turnstile> \<langle>sequence Seq
(?xs @ ?ys),Normal ?s\<rangle> =?n\<Rightarrow> ?t ==>
      EX s'.
         ?\<Gamma>\<turnstile> \<langle>sequence Seq
   ?xs,Normal ?s\<rangle> =?n\<Rightarrow> s' &
         ?\<Gamma>\<turnstile> \<langle>sequence Seq
   ?ys,s'\<rangle> =?n\<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 5),
                    template_app
                     (template_app (template_hole 5, template_hole 4),
                      template_app
                       (template_app (template_hole 3, template_var 4),
                        template_var 3))),
                  template_app (template_hole 2, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Semantic.exec_to_exec_subseteq_guards",
     "[| ?c \<subseteq>\<^sub>g ?c';
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t |]
      ==> EX t'.
             ?\<Gamma>\<turnstile> \<langle>?c',?s\<rangle> \<Rightarrow> t' &
             (isFault ?t --> isFault t') & (~ isFault t' --> t' = ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Semantic.execn_callAbrupt",
     "[| ?\<Gamma> ?p = Some ?bdy;
         ?\<Gamma>\<turnstile> \<langle>?bdy,Normal
        (?init ?s)\<rangle> =?n\<Rightarrow> Abrupt ?t |]
      ==> ?\<Gamma>\<turnstile> \<langle>call ?init ?p ?return
    ?c,Normal ?s\<rangle> =Suc ?n\<Rightarrow> Abrupt (?return ?s ?t)",
     template_implication
      ([template_equation
         (template_app (template_var 8, template_var 7),
          template_app (template_hole 5, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 8),
                    template_var 6),
                  template_app
                   (template_hole 3,
                    template_app (template_var 5, template_var 4))),
                template_var 3),
              template_app (template_hole 2, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_var 8),
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 5),
                         template_var 7),
                       template_var 1),
                     template_var 0)),
                 template_app (template_hole 3, template_var 4)),
               template_app (template_hole 0, template_var 3)),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_var 1, template_var 4),
                 template_var 2)))
           ))),
    ("Semantic.inter_guards_execn_Fault",
     "[| (?c1.0 \<inter>\<^sub>g ?c2.0) = Some ?c;
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> Fault
                                   ?f |]
      ==> ?\<Gamma>\<turnstile> \<langle>?c1.0,?s\<rangle> =?n\<Rightarrow> Fault
 ?f |
          ?\<Gamma>\<turnstile> \<langle>?c2.0,?s\<rangle> =?n\<Rightarrow> Fault
 ?f",
     template_implication
      ([template_equation
         (template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 6),
              template_var 5)),
          template_app (template_hole 3, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 3),
                    template_var 4),
                  template_var 2),
                template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 6),
                     template_var 2),
                   template_var 1),
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 5),
                   template_var 2),
                 template_var 1),
               template_app (template_hole 1, template_var 0)))
           ))),
    ("Semantic.execn_Normal_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Seq ?c1.0
   ?c2.0,Normal ?s\<rangle> =?n\<Rightarrow> ?t;
         !!s'. [| ?\<Gamma>\<turnstile> \<langle>?c1.0,Normal
                  ?s\<rangle> =?n\<Rightarrow> s';
                  ?\<Gamma>\<turnstile> \<langle>?c2.0,s'\<rangle> =?n\<Rightarrow> ?t |]
               ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 6),
                    template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4)),
                  template_app (template_hole 1, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.noFaultStuck_exec_startD",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow>\<notin>{Fault
  True,
 Fault False, Stuck};
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t |]
      ==> ?s ~: {Fault True, Fault False, Stuck}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 3),
                  template_var 2),
                template_var 1),
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6)),
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_hole 5)),
                  template_app
                   (template_app (template_hole 8, template_hole 4),
                    template_hole 3))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_hole 6)),
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_hole 5)),
                     template_app
                      (template_app (template_hole 8, template_hole 4),
                       template_hole 3))))
               )
           ))),
    ("Semantic.noFaultStuck_execD",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow>\<notin>{Fault
  True,
 Fault False, Stuck};
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t |]
      ==> ?t ~: {Fault True, Fault False, Stuck}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 3),
                  template_var 2),
                template_var 1),
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6)),
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_hole 5)),
                  template_app
                   (template_app (template_hole 8, template_hole 4),
                    template_hole 3))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_hole 6)),
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_hole 5)),
                     template_app
                      (template_app (template_hole 8, template_hole 4),
                       template_hole 3))))
               )
           ))),
    ("Semantic.notStuck_WhileTrueD2",
     "[| ?\<Gamma>\<turnstile> \<langle>While ?b
   ?c,Normal ?s\<rangle> \<Rightarrow>\<notin>{Stuck};
         ?\<Gamma>\<turnstile> \<langle>?c,Normal
      ?s\<rangle> \<Rightarrow> ?s';
         ?s : ?b |]
      ==> ?\<Gamma>\<turnstile> \<langle>While ?b
    ?c,?s'\<rangle> \<Rightarrow>\<notin>{Stuck}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 4),
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_var 2)),
                template_app (template_hole 5, template_var 1)),
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_hole 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 2),
                template_app (template_hole 5, template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_var 4),
                 template_app
                  (template_app (template_hole 6, template_var 3),
                   template_var 2)),
               template_var 0),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2))
           ))),
    ("Semantic.execn_to_execn_subseteq_guards",
     "[| ?c \<subseteq>\<^sub>g ?c';
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t |]
      ==> EX t'.
             ?\<Gamma>\<turnstile> \<langle>?c',?s\<rangle> =?n\<Rightarrow> t' &
             (isFault ?t --> isFault t') & (~ isFault t' --> t' = ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 3),
                    template_var 5),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Semantic.execn_block",
     "[| ?\<Gamma>\<turnstile> \<langle>?bdy,Normal
        (?init ?s)\<rangle> =?n\<Rightarrow> Normal ?t;
         ?\<Gamma>\<turnstile> \<langle>?c ?s
   ?t,Normal (?return ?s ?t)\<rangle> =?n\<Rightarrow> ?u |]
      ==> ?\<Gamma>\<turnstile> \<langle>block ?init ?bdy ?return
    ?c,Normal ?s\<rangle> =?n\<Rightarrow> ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 8),
                    template_var 7),
                  template_app
                   (template_hole 1,
                    template_app (template_var 6, template_var 5))),
                template_var 4),
              template_app (template_hole 1, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 8),
                    template_app
                     (template_app (template_var 2, template_var 5),
                      template_var 3)),
                  template_app
                   (template_hole 1,
                    template_app
                     (template_app (template_var 1, template_var 5),
                      template_var 3))),
                template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 8),
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 7),
                       template_var 1),
                     template_var 2)),
                 template_app (template_hole 1, template_var 5)),
               template_var 4),
             template_var 0)
           ))),
    ("Semantic.inter_guards_execn_noFault",
     "[| (?c1.0 \<inter>\<^sub>g ?c2.0) = Some ?c;
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t;
         ~ isFault ?t |]
      ==> ?\<Gamma>\<turnstile> \<langle>?c1.0,?s\<rangle> =?n\<Rightarrow> ?t &
          ?\<Gamma>\<turnstile> \<langle>?c2.0,?s\<rangle> =?n\<Rightarrow> ?t",
     template_implication
      ([template_equation
         (template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_var 6),
              template_var 5)),
          template_app (template_hole 4, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 4),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 3),
                       template_var 6),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_var 3),
                     template_var 5),
                   template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Semantic.noFaultStuck_Call_body'",
     "?p : dom ?\<Gamma> ==>
      ?\<Gamma>\<turnstile> \<langle>Call
?p,Normal ?s\<rangle> \<Rightarrow>\<notin>{Stuck} Un Fault ` (- ?F) =
      ?\<Gamma>\<turnstile> \<langle>the
(?\<Gamma>
  ?p),Normal ?s\<rangle> \<Rightarrow>\<notin>{Stuck} Un Fault ` (- ?F)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 3),
              template_app (template_hole 12, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 10, template_var 2),
               template_app (template_hole 9, template_var 3)),
             template_app (template_hole 8, template_var 1)),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_hole 4)),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 0)))),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 10, template_var 2),
               template_app
                (template_hole 0,
                 template_app (template_var 2, template_var 3))),
             template_app (template_hole 8, template_var 1)),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_hole 4)),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 0))))))),
    ("Semantic.inter_guards_execn_Normal_Fault",
     "[| (?c1.0 \<inter>\<^sub>g ?c2.0) = Some ?c;
         ?\<Gamma>\<turnstile> \<langle>?c,Normal
      ?s\<rangle> =?n\<Rightarrow> Fault ?f |]
      ==> ?\<Gamma>\<turnstile> \<langle>?c1.0,Normal
          ?s\<rangle> =?n\<Rightarrow> Fault ?f |
          ?\<Gamma>\<turnstile> \<langle>?c2.0,Normal
          ?s\<rangle> =?n\<Rightarrow> Fault ?f",
     template_implication
      ([template_equation
         (template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_var 6),
              template_var 5)),
          template_app (template_hole 4, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 4),
                  template_app (template_hole 2, template_var 2)),
                template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 3),
                       template_var 6),
                     template_app (template_hole 2, template_var 2)),
                   template_var 1),
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_var 3),
                     template_var 5),
                   template_app (template_hole 2, template_var 2)),
                 template_var 1),
               template_app (template_hole 1, template_var 0)))
           ))),
    ("Semantic.noFaultStuckn_exec_startD",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow>\<notin>{Fault
     True,
    Fault False, Stuck};
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t |]
      ==> ?s ~: {Fault True, Fault False, Stuck}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6)),
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_hole 5)),
                  template_app
                   (template_app (template_hole 8, template_hole 4),
                    template_hole 3))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_hole 6)),
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_hole 5)),
                     template_app
                      (template_app (template_hole 8, template_hole 4),
                       template_hole 3))))
               )
           ))),
    ("Semantic.noFaultStuckn_execD",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow>\<notin>{Fault
     True,
    Fault False, Stuck};
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t |]
      ==> ?t ~: {Fault True, Fault False, Stuck}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6)),
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_hole 5)),
                  template_app
                   (template_app (template_hole 8, template_hole 4),
                    template_hole 3))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_hole 6)),
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_hole 5)),
                     template_app
                      (template_app (template_hole 8, template_hole 4),
                       template_hole 3))))
               )
           ))),
    ("Semantic.notStuck_SeqD",
     "?\<Gamma>\<turnstile> \<langle>Seq ?c1.0
?c2.0,Normal ?s\<rangle> \<Rightarrow>\<notin>{Stuck} ==>
      ?\<Gamma>\<turnstile> \<langle>?c1.0,Normal
      ?s\<rangle> \<Rightarrow>\<notin>{Stuck} &
      (ALL s'.
          ?\<Gamma>\<turnstile> \<langle>?c1.0,Normal
          ?s\<rangle> \<Rightarrow> s' -->
          ?\<Gamma>\<turnstile> \<langle>?c2.0,s'\<rangle> \<Rightarrow>\<notin>{Stuck})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 3),
                  template_app
                   (template_app (template_hole 8, template_var 2),
                    template_var 1)),
                template_app (template_hole 7, template_var 0)),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_hole 4))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 9, template_var 3),
                     template_var 2),
                   template_app (template_hole 7, template_var 0)),
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_hole 4))),
             template_app (template_hole 2, t_empty))
           ))),
    ("Semantic.exec_sequence_appE",
     "[| ?\<Gamma>\<turnstile> \<langle>sequence Seq
   (?xs @ ?ys),Normal ?s\<rangle> \<Rightarrow> ?t;
         !!s'. [| ?\<Gamma>\<turnstile> \<langle>sequence Seq
            ?xs,Normal ?s\<rangle> \<Rightarrow> s';
                  ?\<Gamma>\<turnstile> \<langle>sequence Seq
            ?ys,s'\<rangle> \<Rightarrow> ?t |]
               ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_app
                     (template_app (template_hole 2, template_var 4),
                      template_var 3))),
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.inter_guards_execn_Normal_noFault",
     "[| (?c1.0 \<inter>\<^sub>g ?c2.0) = Some ?c;
         ?\<Gamma>\<turnstile> \<langle>?c,Normal
      ?s\<rangle> =?n\<Rightarrow> ?t;
         ~ isFault ?t |]
      ==> ?\<Gamma>\<turnstile> \<langle>?c1.0,Normal
          ?s\<rangle> =?n\<Rightarrow> ?t &
          ?\<Gamma>\<turnstile> \<langle>?c2.0,Normal
          ?s\<rangle> =?n\<Rightarrow> ?t",
     template_implication
      ([template_equation
         (template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, template_var 6),
              template_var 5)),
          template_app (template_hole 5, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 3),
                    template_var 4),
                  template_app (template_hole 3, template_var 2)),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 3),
                       template_var 6),
                     template_app (template_hole 3, template_var 2)),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 4, template_var 3),
                     template_var 5),
                   template_app (template_hole 3, template_var 2)),
                 template_var 1),
               template_var 0))
           ))),
    ("Semantic.exec_call",
     "[| ?\<Gamma> ?p = Some ?bdy;
         ?\<Gamma>\<turnstile> \<langle>?bdy,Normal
        (?init ?s)\<rangle> \<Rightarrow> Normal ?t;
         ?\<Gamma>\<turnstile> \<langle>?c ?s
   ?t,Normal (?return ?s ?t)\<rangle> \<Rightarrow> ?u |]
      ==> ?\<Gamma>\<turnstile> \<langle>call ?init ?p ?return
    ?c,Normal ?s\<rangle> \<Rightarrow> ?u",
     template_implication
      ([template_equation
         (template_app (template_var 8, template_var 7),
          template_app (template_hole 3, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 8),
                  template_var 6),
                template_app
                 (template_hole 1,
                  template_app (template_var 5, template_var 4))),
              template_app (template_hole 1, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 8),
                  template_app
                   (template_app (template_var 2, template_var 4),
                    template_var 3)),
                template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_var 1, template_var 4),
                    template_var 3))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 8),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 7),
                     template_var 1),
                   template_var 2)),
               template_app (template_hole 1, template_var 4)),
             template_var 0)
           ))),
    ("Semantic.execn_sequence_appE",
     "[| ?\<Gamma>\<turnstile> \<langle>sequence Seq
   (?xs @ ?ys),Normal ?s\<rangle> =?n\<Rightarrow> ?t;
         !!s'. [| ?\<Gamma>\<turnstile> \<langle>sequence Seq
            ?xs,Normal ?s\<rangle> =?n\<Rightarrow> s';
                  ?\<Gamma>\<turnstile> \<langle>sequence Seq
            ?ys,s'\<rangle> =?n\<Rightarrow> ?t |]
               ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 6),
                    template_app
                     (template_app (template_hole 4, template_hole 3),
                      template_app
                       (template_app (template_hole 2, template_var 5),
                        template_var 4))),
                  template_app (template_hole 1, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.exec_strip_guards_to_exec",
     "?\<Gamma>\<turnstile> \<langle>strip_guards ?F
?c,?s\<rangle> \<Rightarrow> ?t ==>
      EX t'.
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> t' &
         (isFault ?t --> isFault t') &
         (t' : Fault ` (- ?F) --> t' = ?t) & (~ isFault t' --> t' = ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 4),
                  template_app
                   (template_app (template_hole 10, template_var 3),
                    template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Semantic.exec_strip_to_exec",
     "strip ?F
       ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t ==>
      EX t'.
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> t' &
         (isFault ?t --> isFault t') &
         (t' : Fault ` (- ?F) --> t' = ?t) & (~ isFault t' --> t' = ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app (template_hole 10, template_var 4),
                      template_var 3)),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Semantic.execn_strip_to_execn",
     "strip ?F
       ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t ==>
      EX t'.
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> t' &
         (isFault ?t --> isFault t') &
         (t' : Fault ` (- ?F) --> t' = ?t) & (~ isFault t' --> t' = ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_hole 11,
                      template_app
                       (template_app (template_hole 10, template_var 5),
                        template_var 4)),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Semantic.execn_strip_guards_to_execn",
     "?\<Gamma>\<turnstile> \<langle>strip_guards ?F
?c,?s\<rangle> =?n\<Rightarrow> ?t ==>
      EX t'.
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> t' &
         (isFault ?t --> isFault t') &
         (t' : Fault ` (- ?F) --> t' = ?t) & (~ isFault t' --> t' = ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 11, template_var 5),
                    template_app
                     (template_app (template_hole 10, template_var 4),
                      template_var 3)),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Semantic.exec_Normal_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Guard ?f ?g
   ?c,Normal ?s\<rangle> \<Rightarrow> ?t;
         [| ?s : ?g;
            ?\<Gamma>\<turnstile> \<langle>?c,Normal
         ?s\<rangle> \<Rightarrow> ?t |]
         ==> ?P;
         [| ?t = Fault ?f; ?s ~: ?g |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 6),
                  template_app
                   (template_app
                     (template_app (template_hole 5, template_var 5),
                      template_var 4),
                    template_var 3)),
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 4)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 6, template_var 6),
                       template_var 3),
                     template_app (template_hole 4, template_var 2)),
                   template_var 1)
                 )],
            template_predicate (template_var 0))),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 1, template_var 5))],
          template_implication
           ([template_negation
              (
                 template_predicate
                  (
                     template_app
                      (template_app (template_hole 3, template_var 2),
                       template_var 4)
                     )
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Semantic.execn_call",
     "[| ?\<Gamma> ?p = Some ?bdy;
         ?\<Gamma>\<turnstile> \<langle>?bdy,Normal
        (?init ?s)\<rangle> =?n\<Rightarrow> Normal ?t;
         ?\<Gamma>\<turnstile> \<langle>?c ?s
   ?t,Normal (?return ?s ?t)\<rangle> =Suc ?n\<Rightarrow> ?u |]
      ==> ?\<Gamma>\<turnstile> \<langle>call ?init ?p ?return
    ?c,Normal ?s\<rangle> =Suc ?n\<Rightarrow> ?u",
     template_implication
      ([template_equation
         (template_app (template_var 9, template_var 8),
          template_app (template_hole 4, template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 9),
                    template_var 7),
                  template_app
                   (template_hole 2,
                    template_app (template_var 6, template_var 5))),
                template_var 4),
              template_app (template_hole 2, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 9),
                    template_app
                     (template_app (template_var 2, template_var 5),
                      template_var 3)),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_var 1, template_var 5),
                      template_var 3))),
                template_app (template_hole 1, template_var 4)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 9),
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 8),
                       template_var 1),
                     template_var 2)),
                 template_app (template_hole 2, template_var 5)),
               template_app (template_hole 1, template_var 4)),
             template_var 0)
           ))),
    ("Semantic.exec_Normal_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Call
   ?p,Normal ?s\<rangle> \<Rightarrow> ?t;
         !!bdy.
            [| ?\<Gamma> ?p = Some bdy;
               ?\<Gamma>\<turnstile> \<langle>bdy,Normal
             ?s\<rangle> \<Rightarrow> ?t |]
            ==> ?P;
         [| ?t = Stuck; ?\<Gamma> ?p = None |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 4),
                  template_app (template_hole 7, template_var 3)),
                template_app (template_hole 6, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_implication
         ([template_equation (template_var 1, template_hole 1)],
          template_implication
           ([template_equation
              (template_app (template_var 4, template_var 3),
               template_hole 0)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Semantic.exec_mark_guards_to_exec",
     "?\<Gamma>\<turnstile> \<langle>mark_guards ?f
?c,?s\<rangle> \<Rightarrow> ?t ==>
      EX t'.
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> t' &
         (isFault ?t --> isFault t') &
         (t' = Fault ?f --> t' = ?t) &
         (isFault t' --> isFault ?t) & (~ isFault t' --> t' = ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 4),
                  template_app
                   (template_app (template_hole 7, template_var 3),
                    template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Semantic.Seq_NoFaultStuckD2",
     "?\<Gamma>\<turnstile> \<langle>Seq ?c1.0
?c2.0,?s\<rangle> \<Rightarrow>\<notin>{Stuck} Un Fault ` ?F ==>
      ALL t.
         ?\<Gamma>\<turnstile> \<langle>?c1.0,?s\<rangle> \<Rightarrow> t -->
         t ~: {Stuck} Un Fault ` ?F -->
         ?\<Gamma>\<turnstile> \<langle>?c2.0,t\<rangle> \<Rightarrow>\<notin>{Stuck} Un
  Fault ` ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 4),
                  template_app
                   (template_app (template_hole 11, template_var 3),
                    template_var 2)),
                template_var 1),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_hole 7)),
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 0)))
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Semantic.exec_Normal_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Cond ?b ?c1.0
   ?c2.0,Normal ?s\<rangle> \<Rightarrow> ?t;
         [| ?s : ?b;
            ?\<Gamma>\<turnstile> \<langle>?c1.0,Normal
            ?s\<rangle> \<Rightarrow> ?t |]
         ==> ?P;
         [| ?s ~: ?b;
            ?\<Gamma>\<turnstile> \<langle>?c2.0,Normal
            ?s\<rangle> \<Rightarrow> ?t |]
         ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 6),
                  template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3)),
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 5)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 6),
                       template_var 4),
                     template_app (template_hole 2, template_var 2)),
                   template_var 1)
                 )],
            template_predicate (template_var 0))),
        template_implication
         ([template_negation
            (
               template_predicate
                (
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 5)
                   )
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 6),
                       template_var 3),
                     template_app (template_hole 2, template_var 2)),
                   template_var 1)
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Semantic.execn_Normal_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Guard ?f ?g
   ?c,Normal ?s\<rangle> =?n\<Rightarrow> ?t;
         [| ?s : ?g;
            ?\<Gamma>\<turnstile> \<langle>?c,Normal
         ?s\<rangle> =?n\<Rightarrow> ?t |]
         ==> ?P;
         [| ?t = Fault ?f; ?s ~: ?g |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 7),
                    template_app
                     (template_app
                       (template_app (template_hole 5, template_var 6),
                        template_var 5),
                      template_var 4)),
                  template_app (template_hole 4, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 5)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 6, template_var 7),
                         template_var 4),
                       template_app (template_hole 4, template_var 3)),
                     template_var 2),
                   template_var 1)
                 )],
            template_predicate (template_var 0))),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 1, template_var 6))],
          template_implication
           ([template_negation
              (
                 template_predicate
                  (
                     template_app
                      (template_app (template_hole 3, template_var 3),
                       template_var 5)
                     )
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Semantic.exec_Normal_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Spec
   ?r,Normal ?s\<rangle> \<Rightarrow> ?t;
         !!t. [| ?t = Normal t; (?s, t) : ?r |] ==> ?P;
         [| ?t = Stuck; ALL t. (?s, t) ~: ?r |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 4),
                  template_app (template_hole 8, template_var 3)),
                template_app (template_hole 7, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_implication
         ([template_equation (template_var 1, template_hole 2)],
          template_implication
           ([template_predicate (template_app (template_hole 1, t_empty))],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Semantic.execn_mark_guards_to_execn",
     "?\<Gamma>\<turnstile> \<langle>mark_guards ?f
?c,?s\<rangle> =?n\<Rightarrow> ?t ==>
      EX t'.
         ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> t' &
         (isFault ?t --> isFault t') &
         (t' = Fault ?f --> t' = ?t) &
         (isFault t' --> isFault ?t) & (~ isFault t' --> t' = ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 8, template_var 5),
                    template_app
                     (template_app (template_hole 7, template_var 4),
                      template_var 3)),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Semantic.execn_Normal_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Spec
   ?r,Normal ?s\<rangle> =?n\<Rightarrow> ?t;
         !!t. [| ?t = Normal t; (?s, t) : ?r |] ==> ?P;
         [| ?t = Stuck; ALL t. (?s, t) ~: ?r |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 5),
                    template_app (template_hole 8, template_var 4)),
                  template_app (template_hole 7, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_implication
         ([template_equation (template_var 1, template_hole 2)],
          template_implication
           ([template_predicate (template_app (template_hole 1, t_empty))],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Semantic.execn_Normal_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Cond ?b ?c1.0
   ?c2.0,Normal ?s\<rangle> =?n\<Rightarrow> ?t;
         [| ?s : ?b;
            ?\<Gamma>\<turnstile> \<langle>?c1.0,Normal
            ?s\<rangle> =?n\<Rightarrow> ?t |]
         ==> ?P;
         [| ?s ~: ?b;
            ?\<Gamma>\<turnstile> \<langle>?c2.0,Normal
            ?s\<rangle> =?n\<Rightarrow> ?t |]
         ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 7),
                    template_app
                     (template_app
                       (template_app (template_hole 3, template_var 6),
                        template_var 5),
                      template_var 4)),
                  template_app (template_hole 2, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 6)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 4, template_var 7),
                         template_var 5),
                       template_app (template_hole 2, template_var 3)),
                     template_var 2),
                   template_var 1)
                 )],
            template_predicate (template_var 0))),
        template_implication
         ([template_negation
            (
               template_predicate
                (
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 6)
                   )
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 4, template_var 7),
                         template_var 4),
                       template_app (template_hole 2, template_var 3)),
                     template_var 2),
                   template_var 1)
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Semantic.exec_to_exec_restrict",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t ==>
      EX t'.
         ?\<Gamma>|\<^bsub>?P\<^esub>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> t' &
         (?t = Stuck --> t' = Stuck) &
         (ALL f. ?t = Fault f --> t' : {Fault f, Stuck}) &
         (t' ~= Stuck --> t' = ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 11, t_empty)))),
    ("Semantic.exec_Normal_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Catch ?c1.0
   ?c2.0,Normal ?s\<rangle> \<Rightarrow> ?t;
         !!s'. [| ?\<Gamma>\<turnstile> \<langle>?c1.0,Normal
                  ?s\<rangle> \<Rightarrow> Abrupt s';
                  ?\<Gamma>\<turnstile> \<langle>?c2.0,Normal
                  s'\<rangle> \<Rightarrow> ?t |]
               ==> ?P;
         [| ?\<Gamma>\<turnstile> \<langle>?c1.0,Normal
            ?s\<rangle> \<Rightarrow> ?t;
            ~ isAbr ?t |]
         ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 5),
                  template_app
                   (template_app (template_hole 5, template_var 4),
                    template_var 3)),
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 6, template_var 5),
                     template_var 4),
                   template_app (template_hole 4, template_var 2)),
                 template_var 1)
               )],
          template_implication
           ([template_negation
              (
                 template_predicate
                  (template_app (template_hole 0, template_var 1))
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Semantic.execn_to_execn_restrict",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t ==>
      EX t'.
         ?\<Gamma>|\<^bsub>?P\<^esub>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> t' &
         (?t = Stuck --> t' = Stuck) &
         (ALL f. ?t = Fault f --> t' : {Fault f, Stuck}) &
         (t' ~= Stuck --> t' = ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 12, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 11, t_empty)))),
    ("Semantic.exec_Normal_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>While ?b
   ?c,Normal ?s\<rangle> \<Rightarrow> ?t;
         !!s'. [| ?s : ?b;
                  ?\<Gamma>\<turnstile> \<langle>?c,Normal
               ?s\<rangle> \<Rightarrow> s';
                  ?\<Gamma>\<turnstile> \<langle>While ?b
            ?c,s'\<rangle> \<Rightarrow> ?t |]
               ==> ?P;
         [| ?t = Normal ?s; ?s ~: ?b |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 5),
                  template_app
                   (template_app (template_hole 5, template_var 4),
                    template_var 3)),
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 4, template_var 2))],
          template_implication
           ([template_negation
              (
                 template_predicate
                  (
                     template_app
                      (template_app (template_hole 2, template_var 2),
                       template_var 4)
                     )
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Semantic.execn_Normal_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Catch ?c1.0
   ?c2.0,Normal ?s\<rangle> =?n\<Rightarrow> ?t;
         !!s'. [| ?\<Gamma>\<turnstile> \<langle>?c1.0,Normal
                  ?s\<rangle> =?n\<Rightarrow> Abrupt s';
                  ?\<Gamma>\<turnstile> \<langle>?c2.0,Normal
                  s'\<rangle> =?n\<Rightarrow> ?t |]
               ==> ?P;
         [| ?\<Gamma>\<turnstile> \<langle>?c1.0,Normal
            ?s\<rangle> =?n\<Rightarrow> ?t;
            ~ isAbr ?t |]
         ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 6),
                    template_app
                     (template_app (template_hole 5, template_var 5),
                      template_var 4)),
                  template_app (template_hole 4, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 6, template_var 6),
                       template_var 5),
                     template_app (template_hole 4, template_var 3)),
                   template_var 2),
                 template_var 1)
               )],
          template_implication
           ([template_negation
              (
                 template_predicate
                  (template_app (template_hole 0, template_var 1))
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Semantic.execn_Normal_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>While ?b
   ?c,Normal ?s\<rangle> =?n\<Rightarrow> ?t;
         !!s'. [| ?s : ?b;
                  ?\<Gamma>\<turnstile> \<langle>?c,Normal
               ?s\<rangle> =?n\<Rightarrow> s';
                  ?\<Gamma>\<turnstile> \<langle>While ?b
            ?c,s'\<rangle> =?n\<Rightarrow> ?t |]
               ==> ?P;
         [| ?t = Normal ?s; ?s ~: ?b |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 6),
                    template_app
                     (template_app (template_hole 5, template_var 5),
                      template_var 4)),
                  template_app (template_hole 4, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 4, template_var 3))],
          template_implication
           ([template_negation
              (
                 template_predicate
                  (
                     template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 5)
                     )
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Semantic.execn_Normal_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Call
   ?p,Normal ?s\<rangle> =?n\<Rightarrow> ?t;
         !!bdy n.
            [| ?n = Suc n; ?\<Gamma> ?p = Some bdy;
               ?\<Gamma>\<turnstile> \<langle>bdy,Normal
             ?s\<rangle> =n\<Rightarrow> ?t |]
            ==> ?P;
         !!n. [| ?n = Suc n; ?t = Stuck; ?\<Gamma> ?p = None |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 11, template_var 5),
                    template_app (template_hole 10, template_var 4)),
                  template_app (template_hole 9, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.exec_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Skip,?s\<rangle> \<Rightarrow> ?t;
         !!s. [| ?s = Normal s; ?t = Normal s |] ==> ?P;
         !!f. [| ?s = Fault f; ?t = Fault f |] ==> ?P;
         [| ?s = Stuck; ?t = Stuck |] ==> ?P;
         !!s. [| ?s = Abrupt s; ?t = Abrupt s |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 3),
                  template_hole 7),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_implication
         ([template_equation (template_var 2, template_hole 1)],
          template_implication
           ([template_equation (template_var 1, template_hole 1)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.exec_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Throw,?s\<rangle> \<Rightarrow> ?t;
         !!f. [| ?s = Fault f; ?t = Fault f |] ==> ?P;
         [| ?s = Stuck; ?t = Stuck |] ==> ?P;
         !!s. [| ?s = Normal s; ?t = Abrupt s |] ==> ?P;
         !!s. [| ?s = Abrupt s; ?t = Abrupt s |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 3),
                  template_hole 7),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_implication
         ([template_equation (template_var 2, template_hole 3)],
          template_implication
           ([template_equation (template_var 1, template_hole 3)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.execn_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Skip,?s\<rangle> =?n\<Rightarrow> ?t;
         !!s. [| ?s = Normal s; ?t = Normal s |] ==> ?P;
         !!f. [| ?s = Fault f; ?t = Fault f |] ==> ?P;
         [| ?s = Stuck; ?t = Stuck |] ==> ?P;
         !!s. [| ?s = Abrupt s; ?t = Abrupt s |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 8, template_var 4),
                    template_hole 7),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_implication
         ([template_equation (template_var 3, template_hole 1)],
          template_implication
           ([template_equation (template_var 1, template_hole 1)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.execn_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Throw,?s\<rangle> =?n\<Rightarrow> ?t;
         !!f. [| ?s = Fault f; ?t = Fault f |] ==> ?P;
         [| ?s = Stuck; ?t = Stuck |] ==> ?P;
         !!s. [| ?s = Normal s; ?t = Abrupt s |] ==> ?P;
         !!s. [| ?s = Abrupt s; ?t = Abrupt s |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 8, template_var 4),
                    template_hole 7),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_implication
         ([template_equation (template_var 3, template_hole 3)],
          template_implication
           ([template_equation (template_var 1, template_hole 3)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.exec_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Basic
   ?f,?s\<rangle> \<Rightarrow> ?t;
         !!f. [| ?s = Fault f; ?t = Fault f |] ==> ?P;
         !!s. [| ?s = Normal s; ?t = Normal (?f s) |] ==> ?P;
         [| ?s = Stuck; ?t = Stuck |] ==> ?P;
         !!s. [| ?s = Abrupt s; ?t = Abrupt s |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 4),
                  template_app (template_hole 7, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_implication
         ([template_equation (template_var 2, template_hole 1)],
          template_implication
           ([template_equation (template_var 1, template_hole 1)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.execn_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Basic
   ?f,?s\<rangle> =?n\<Rightarrow> ?t;
         !!f. [| ?s = Fault f; ?t = Fault f |] ==> ?P;
         !!s. [| ?s = Normal s; ?t = Normal (?f s) |] ==> ?P;
         [| ?s = Stuck; ?t = Stuck |] ==> ?P;
         !!s. [| ?s = Abrupt s; ?t = Abrupt s |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 8, template_var 5),
                    template_app (template_hole 7, template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_implication
         ([template_equation (template_var 3, template_hole 1)],
          template_implication
           ([template_equation (template_var 1, template_hole 1)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.exec_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>DynCom
   ?c,?s\<rangle> \<Rightarrow> ?t;
         !!f. [| ?s = Fault f; ?t = Fault f |] ==> ?P;
         [| ?s = Stuck; ?t = Stuck |] ==> ?P;
         !!s. [| ?s = Normal s;
                 ?\<Gamma>\<turnstile> \<langle>?c
           s,Normal s\<rangle> \<Rightarrow> ?t |]
              ==> ?P;
         !!s. [| ?s = Abrupt s; ?t = Abrupt s |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 4),
                  template_app (template_hole 7, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_implication
         ([template_equation (template_var 2, template_hole 3)],
          template_implication
           ([template_equation (template_var 1, template_hole 3)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.execn_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>DynCom
   ?c,?s\<rangle> =?n\<Rightarrow> ?t;
         !!f. [| ?s = Fault f; ?t = Fault f |] ==> ?P;
         [| ?s = Stuck; ?t = Stuck |] ==> ?P;
         !!s. [| ?s = Normal s;
                 ?\<Gamma>\<turnstile> \<langle>?c
           s,Normal s\<rangle> =?n\<Rightarrow> ?t |]
              ==> ?P;
         !!s. [| ?s = Abrupt s; ?t = Abrupt s |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 8, template_var 5),
                    template_app (template_hole 7, template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_implication
         ([template_equation (template_var 3, template_hole 3)],
          template_implication
           ([template_equation (template_var 1, template_hole 3)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.exec_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Seq ?c1.0
   ?c2.0,?s\<rangle> \<Rightarrow> ?t;
         !!f. [| ?s = Fault f; ?t = Fault f |] ==> ?P;
         !!s s'.
            [| ?s = Normal s;
               ?\<Gamma>\<turnstile> \<langle>?c1.0,Normal
               s\<rangle> \<Rightarrow> s';
               ?\<Gamma>\<turnstile> \<langle>?c2.0,s'\<rangle> \<Rightarrow> ?t |]
            ==> ?P;
         [| ?s = Stuck; ?t = Stuck |] ==> ?P;
         !!s. [| ?s = Abrupt s; ?t = Abrupt s |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 5),
                  template_app
                   (template_app (template_hole 8, template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_implication
         ([template_equation (template_var 2, template_hole 1)],
          template_implication
           ([template_equation (template_var 1, template_hole 1)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.execn_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Seq ?c1.0
   ?c2.0,?s\<rangle> =?n\<Rightarrow> ?t;
         !!f. [| ?s = Fault f; ?t = Fault f |] ==> ?P;
         !!s s'.
            [| ?s = Normal s;
               ?\<Gamma>\<turnstile> \<langle>?c1.0,Normal
               s\<rangle> =?n\<Rightarrow> s';
               ?\<Gamma>\<turnstile> \<langle>?c2.0,s'\<rangle> =?n\<Rightarrow> ?t |]
            ==> ?P;
         [| ?s = Stuck; ?t = Stuck |] ==> ?P;
         !!s. [| ?s = Abrupt s; ?t = Abrupt s |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 6),
                    template_app
                     (template_app (template_hole 8, template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_implication
         ([template_equation (template_var 3, template_hole 1)],
          template_implication
           ([template_equation (template_var 1, template_hole 1)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.exec_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Guard ?f ?g
   ?c,?s\<rangle> \<Rightarrow> ?t;
         !!s. [| ?s = Normal s; s : ?g;
                 ?\<Gamma>\<turnstile> \<langle>?c,Normal
              s\<rangle> \<Rightarrow> ?t |]
              ==> ?P;
         !!s. [| ?s = Normal s; ?t = Fault ?f; s ~: ?g |] ==> ?P;
         !!f. [| ?s = Fault f; ?t = Fault f |] ==> ?P;
         [| ?s = Stuck; ?t = Stuck |] ==> ?P;
         !!s. [| ?s = Abrupt s; ?t = Abrupt s |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 6),
                  template_app
                   (template_app
                     (template_app (template_hole 9, template_var 5),
                      template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_implication
         ([template_equation (template_var 2, template_hole 1)],
          template_implication
           ([template_equation (template_var 1, template_hole 1)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.exec_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Call
   ?p,?s\<rangle> \<Rightarrow> ?t;
         !!f. [| ?s = Fault f; ?t = Fault f |] ==> ?P;
         !!bdy s.
            [| ?s = Normal s; ?\<Gamma> ?p = Some bdy;
               ?\<Gamma>\<turnstile> \<langle>bdy,Normal
             s\<rangle> \<Rightarrow> ?t |]
            ==> ?P;
         !!s. [| ?s = Normal s; ?t = Stuck; ?\<Gamma> ?p = None |] ==> ?P;
         [| ?s = Stuck; ?t = Stuck |] ==> ?P;
         !!s. [| ?s = Abrupt s; ?t = Abrupt s |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 4),
                  template_app (template_hole 11, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_implication
         ([template_equation (template_var 2, template_hole 2)],
          template_implication
           ([template_equation (template_var 1, template_hole 2)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.exec_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Cond ?b ?c1.0
   ?c2.0,?s\<rangle> \<Rightarrow> ?t;
         !!f. [| ?s = Fault f; ?t = Fault f |] ==> ?P;
         !!s. [| ?s = Normal s; s : ?b;
                 ?\<Gamma>\<turnstile> \<langle>?c1.0,Normal
                 s\<rangle> \<Rightarrow> ?t |]
              ==> ?P;
         !!s. [| ?s = Normal s; s ~: ?b;
                 ?\<Gamma>\<turnstile> \<langle>?c2.0,Normal
                 s\<rangle> \<Rightarrow> ?t |]
              ==> ?P;
         [| ?s = Stuck; ?t = Stuck |] ==> ?P;
         !!s. [| ?s = Abrupt s; ?t = Abrupt s |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 6),
                  template_app
                   (template_app
                     (template_app (template_hole 9, template_var 5),
                      template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_implication
         ([template_equation (template_var 2, template_hole 1)],
          template_implication
           ([template_equation (template_var 1, template_hole 1)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.execn_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Guard ?f ?g
   ?c,?s\<rangle> =?n\<Rightarrow> ?t;
         !!s. [| ?s = Normal s; s : ?g;
                 ?\<Gamma>\<turnstile> \<langle>?c,Normal
              s\<rangle> =?n\<Rightarrow> ?t |]
              ==> ?P;
         !!s. [| ?s = Normal s; ?t = Fault ?f; s ~: ?g |] ==> ?P;
         !!f. [| ?s = Fault f; ?t = Fault f |] ==> ?P;
         [| ?s = Stuck; ?t = Stuck |] ==> ?P;
         !!s. [| ?s = Abrupt s; ?t = Abrupt s |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 10, template_var 7),
                    template_app
                     (template_app
                       (template_app (template_hole 9, template_var 6),
                        template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_implication
         ([template_equation (template_var 3, template_hole 1)],
          template_implication
           ([template_equation (template_var 1, template_hole 1)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.exec_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Spec
   ?r,?s\<rangle> \<Rightarrow> ?t;
         !!f. [| ?s = Fault f; ?t = Fault f |] ==> ?P;
         !!s t. [| ?s = Normal s; ?t = Normal t; (s, t) : ?r |] ==> ?P;
         !!s. [| ?s = Normal s; ?t = Stuck; ALL t. (s, t) ~: ?r |] ==> ?P;
         [| ?s = Stuck; ?t = Stuck |] ==> ?P;
         !!s. [| ?s = Abrupt s; ?t = Abrupt s |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 4),
                  template_app (template_hole 11, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_implication
         ([template_equation (template_var 2, template_hole 3)],
          template_implication
           ([template_equation (template_var 1, template_hole 3)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.execn_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Spec
   ?r,?s\<rangle> =?n\<Rightarrow> ?t;
         !!f. [| ?s = Fault f; ?t = Fault f |] ==> ?P;
         !!s t. [| ?s = Normal s; ?t = Normal t; (s, t) : ?r |] ==> ?P;
         !!s. [| ?s = Normal s; ?t = Stuck; ALL t. (s, t) ~: ?r |] ==> ?P;
         [| ?s = Stuck; ?t = Stuck |] ==> ?P;
         !!s. [| ?s = Abrupt s; ?t = Abrupt s |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 12, template_var 5),
                    template_app (template_hole 11, template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_implication
         ([template_equation (template_var 3, template_hole 3)],
          template_implication
           ([template_equation (template_var 1, template_hole 3)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.execn_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Cond ?b ?c1.0
   ?c2.0,?s\<rangle> =?n\<Rightarrow> ?t;
         !!f. [| ?s = Fault f; ?t = Fault f |] ==> ?P;
         !!s. [| ?s = Normal s; s : ?b;
                 ?\<Gamma>\<turnstile> \<langle>?c1.0,Normal
                 s\<rangle> =?n\<Rightarrow> ?t |]
              ==> ?P;
         !!s. [| ?s = Normal s; s ~: ?b;
                 ?\<Gamma>\<turnstile> \<langle>?c2.0,Normal
                 s\<rangle> =?n\<Rightarrow> ?t |]
              ==> ?P;
         [| ?s = Stuck; ?t = Stuck |] ==> ?P;
         !!s. [| ?s = Abrupt s; ?t = Abrupt s |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 10, template_var 7),
                    template_app
                     (template_app
                       (template_app (template_hole 9, template_var 6),
                        template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_implication
         ([template_equation (template_var 3, template_hole 1)],
          template_implication
           ([template_equation (template_var 1, template_hole 1)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.exec_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Catch ?c1.0
   ?c2.0,?s\<rangle> \<Rightarrow> ?t;
         !!f. [| ?s = Fault f; ?t = Fault f |] ==> ?P;
         [| ?s = Stuck; ?t = Stuck |] ==> ?P;
         !!s. [| ?s = Abrupt s; ?t = Abrupt s |] ==> ?P;
         !!s s'.
            [| ?s = Normal s;
               ?\<Gamma>\<turnstile> \<langle>?c1.0,Normal
               s\<rangle> \<Rightarrow> Abrupt s';
               ?\<Gamma>\<turnstile> \<langle>?c2.0,Normal
               s'\<rangle> \<Rightarrow> ?t |]
            ==> ?P;
         !!s. [| ?s = Normal s;
                 ?\<Gamma>\<turnstile> \<langle>?c1.0,Normal
                 s\<rangle> \<Rightarrow> ?t;
                 ~ isAbr ?t |]
              ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 5),
                  template_app
                   (template_app (template_hole 9, template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_implication
         ([template_equation (template_var 2, template_hole 5)],
          template_implication
           ([template_equation (template_var 1, template_hole 5)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.exec_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>While ?b
   ?c,?s\<rangle> \<Rightarrow> ?t;
         !!f. [| ?s = Fault f; ?t = Fault f |] ==> ?P;
         !!s s'.
            [| ?s = Normal s; s : ?b;
               ?\<Gamma>\<turnstile> \<langle>?c,Normal
            s\<rangle> \<Rightarrow> s';
               ?\<Gamma>\<turnstile> \<langle>While ?b
         ?c,s'\<rangle> \<Rightarrow> ?t |]
            ==> ?P;
         !!s. [| ?s = Normal s; ?t = Normal s; s ~: ?b |] ==> ?P;
         [| ?s = Stuck; ?t = Stuck |] ==> ?P;
         !!s. [| ?s = Abrupt s; ?t = Abrupt s |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 5),
                  template_app
                   (template_app (template_hole 10, template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_implication
         ([template_equation (template_var 2, template_hole 1)],
          template_implication
           ([template_equation (template_var 1, template_hole 1)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.execn_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Catch ?c1.0
   ?c2.0,?s\<rangle> =?n\<Rightarrow> ?t;
         !!f. [| ?s = Fault f; ?t = Fault f |] ==> ?P;
         [| ?s = Stuck; ?t = Stuck |] ==> ?P;
         !!s. [| ?s = Abrupt s; ?t = Abrupt s |] ==> ?P;
         !!s s'.
            [| ?s = Normal s;
               ?\<Gamma>\<turnstile> \<langle>?c1.0,Normal
               s\<rangle> =?n\<Rightarrow> Abrupt s';
               ?\<Gamma>\<turnstile> \<langle>?c2.0,Normal
               s'\<rangle> =?n\<Rightarrow> ?t |]
            ==> ?P;
         !!s. [| ?s = Normal s;
                 ?\<Gamma>\<turnstile> \<langle>?c1.0,Normal
                 s\<rangle> =?n\<Rightarrow> ?t;
                 ~ isAbr ?t |]
              ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 10, template_var 6),
                    template_app
                     (template_app (template_hole 9, template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_implication
         ([template_equation (template_var 3, template_hole 5)],
          template_implication
           ([template_equation (template_var 1, template_hole 5)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.exec_block_Normal_elim",
     "[| ?\<Gamma>\<turnstile> \<langle>block ?init ?bdy ?return
   ?c,Normal ?s\<rangle> \<Rightarrow> ?t;
         !!t'. [| ?\<Gamma>\<turnstile> \<langle>?bdy,Normal
                 (?init ?s)\<rangle> \<Rightarrow> Normal t';
                  ?\<Gamma>\<turnstile> \<langle>?c ?s
            t',Normal (?return ?s t')\<rangle> \<Rightarrow> ?t |]
               ==> ?P;
         !!t'. [| ?\<Gamma>\<turnstile> \<langle>?bdy,Normal
                 (?init ?s)\<rangle> \<Rightarrow> Abrupt t';
                  ?t = Abrupt (?return ?s t') |]
               ==> ?P;
         !!f. [| ?\<Gamma>\<turnstile> \<langle>?bdy,Normal
                (?init ?s)\<rangle> \<Rightarrow> Fault f;
                 ?t = Fault f |]
              ==> ?P;
         [| ?\<Gamma>\<turnstile> \<langle>?bdy,Normal
           (?init ?s)\<rangle> \<Rightarrow> Stuck;
            ?t = Stuck |]
         ==> ?P;
         [| ?\<Gamma> ?p = None; ?t = Stuck |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 8),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4)),
                template_app (template_hole 8, template_var 3)),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 10, template_var 8),
                     template_var 6),
                   template_app
                    (template_hole 8,
                     template_app (template_var 7, template_var 3))),
                 template_hole 2)
               )],
          template_implication
           ([template_equation (template_var 2, template_hole 2)],
            template_predicate (template_var 1))),
        template_implication
         ([template_equation
            (template_app (template_var 8, template_var 0),
             template_hole 0)],
          template_implication
           ([template_equation (template_var 2, template_hole 2)],
            template_predicate (template_var 1)))],
       template_predicate (template_var 1))),
    ("Semantic.execn_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>While ?b
   ?c,?s\<rangle> =?n\<Rightarrow> ?t;
         !!f. [| ?s = Fault f; ?t = Fault f |] ==> ?P;
         !!s s'.
            [| ?s = Normal s; s : ?b;
               ?\<Gamma>\<turnstile> \<langle>?c,Normal
            s\<rangle> =?n\<Rightarrow> s';
               ?\<Gamma>\<turnstile> \<langle>While ?b
         ?c,s'\<rangle> =?n\<Rightarrow> ?t |]
            ==> ?P;
         !!s. [| ?s = Normal s; ?t = Normal s; s ~: ?b |] ==> ?P;
         [| ?s = Stuck; ?t = Stuck |] ==> ?P;
         !!s. [| ?s = Abrupt s; ?t = Abrupt s |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 11, template_var 6),
                    template_app
                     (template_app (template_hole 10, template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_implication
         ([template_equation (template_var 3, template_hole 1)],
          template_implication
           ([template_equation (template_var 1, template_hole 1)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.execn_block_Normal_elim",
     "[| ?\<Gamma>\<turnstile> \<langle>block ?init ?bdy ?return
   ?c,Normal ?s\<rangle> =?n\<Rightarrow> ?t;
         !!t'. [| ?\<Gamma>\<turnstile> \<langle>?bdy,Normal
                 (?init ?s)\<rangle> =?n\<Rightarrow> Normal t';
                  ?\<Gamma>\<turnstile> \<langle>?c ?s
            t',Normal (?return ?s t')\<rangle> =?n\<Rightarrow> ?t |]
               ==> ?P;
         !!t'. [| ?\<Gamma>\<turnstile> \<langle>?bdy,Normal
                 (?init ?s)\<rangle> =?n\<Rightarrow> Abrupt t';
                  ?t = Abrupt (?return ?s t') |]
               ==> ?P;
         !!f. [| ?\<Gamma>\<turnstile> \<langle>?bdy,Normal
                (?init ?s)\<rangle> =?n\<Rightarrow> Fault f;
                 ?t = Fault f |]
              ==> ?P;
         [| ?\<Gamma>\<turnstile> \<langle>?bdy,Normal
           (?init ?s)\<rangle> =?n\<Rightarrow> Stuck;
            ?t = Stuck |]
         ==> ?P;
         [| ?\<Gamma> ?p = None; ?t = Stuck |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 10, template_var 9),
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 9, template_var 8),
                          template_var 7),
                        template_var 6),
                      template_var 5)),
                  template_app (template_hole 8, template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 9),
                       template_var 7),
                     template_app
                      (template_hole 8,
                       template_app (template_var 8, template_var 4))),
                   template_var 3),
                 template_hole 2)
               )],
          template_implication
           ([template_equation (template_var 2, template_hole 2)],
            template_predicate (template_var 1))),
        template_implication
         ([template_equation
            (template_app (template_var 9, template_var 0),
             template_hole 0)],
          template_implication
           ([template_equation (template_var 2, template_hole 2)],
            template_predicate (template_var 1)))],
       template_predicate (template_var 1))),
    ("Semantic.execn_elim_cases",
     "[| ?\<Gamma>\<turnstile> \<langle>Call
   ?p,?s\<rangle> =?n\<Rightarrow> ?t;
         !!f. [| ?s = Fault f; ?t = Fault f |] ==> ?P;
         !!bdy s n.
            [| ?s = Normal s; ?n = Suc n; ?\<Gamma> ?p = Some bdy;
               ?\<Gamma>\<turnstile> \<langle>bdy,Normal
             s\<rangle> =n\<Rightarrow> ?t |]
            ==> ?P;
         !!s n.
            [| ?s = Normal s; ?n = Suc n; ?t = Stuck; ?\<Gamma> ?p = None |]
            ==> ?P;
         [| ?s = Stuck; ?t = Stuck |] ==> ?P;
         !!s. [| ?s = Abrupt s; ?t = Abrupt s |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 15, template_var 5),
                    template_app (template_hole 14, template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_implication
         ([template_equation (template_var 3, template_hole 2)],
          template_implication
           ([template_equation (template_var 1, template_hole 2)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate (template_var 0))),
    ("Semantic.exec_call_Normal_elim",
     "[| ?\<Gamma>\<turnstile> \<langle>call ?init ?p ?return
   ?c,Normal ?s\<rangle> \<Rightarrow> ?t;
         !!bdy t'.
            [| ?\<Gamma> ?p = Some bdy;
               ?\<Gamma>\<turnstile> \<langle>bdy,Normal
             (?init ?s)\<rangle> \<Rightarrow> Normal t';
               ?\<Gamma>\<turnstile> \<langle>?c ?s
         t',Normal (?return ?s t')\<rangle> \<Rightarrow> ?t |]
            ==> ?P;
         !!bdy t'.
            [| ?\<Gamma> ?p = Some bdy;
               ?\<Gamma>\<turnstile> \<langle>bdy,Normal
             (?init ?s)\<rangle> \<Rightarrow> Abrupt t';
               ?t = Abrupt (?return ?s t') |]
            ==> ?P;
         !!bdy f.
            [| ?\<Gamma> ?p = Some bdy;
               ?\<Gamma>\<turnstile> \<langle>bdy,Normal
             (?init ?s)\<rangle> \<Rightarrow> Fault f;
               ?t = Fault f |]
            ==> ?P;
         !!bdy.
            [| ?\<Gamma> ?p = Some bdy;
               ?\<Gamma>\<turnstile> \<langle>bdy,Normal
             (?init ?s)\<rangle> \<Rightarrow> Stuck;
               ?t = Stuck |]
            ==> ?P;
         [| ?\<Gamma> ?p = None; ?t = Stuck |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 7),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 11, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3)),
                template_app (template_hole 10, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_implication
         ([template_equation
            (template_app (template_var 7, template_var 5),
             template_hole 0)],
          template_implication
           ([template_equation (template_var 1, template_hole 1)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Semantic.execn_call_Normal_elim",
     "[| ?\<Gamma>\<turnstile> \<langle>call ?init ?p ?return
   ?c,Normal ?s\<rangle> =?n\<Rightarrow> ?t;
         !!bdy i t'.
            [| ?\<Gamma> ?p = Some bdy;
               ?\<Gamma>\<turnstile> \<langle>bdy,Normal
             (?init ?s)\<rangle> =i\<Rightarrow> Normal t';
               ?\<Gamma>\<turnstile> \<langle>?c ?s
         t',Normal (?return ?s t')\<rangle> =Suc i\<Rightarrow> ?t;
               ?n = Suc i |]
            ==> ?P;
         !!bdy i t'.
            [| ?\<Gamma> ?p = Some bdy;
               ?\<Gamma>\<turnstile> \<langle>bdy,Normal
             (?init ?s)\<rangle> =i\<Rightarrow> Abrupt t';
               ?n = Suc i; ?t = Abrupt (?return ?s t') |]
            ==> ?P;
         !!bdy i f.
            [| ?\<Gamma> ?p = Some bdy;
               ?\<Gamma>\<turnstile> \<langle>bdy,Normal
             (?init ?s)\<rangle> =i\<Rightarrow> Fault f;
               ?n = Suc i; ?t = Fault f |]
            ==> ?P;
         !!bdy i.
            [| ?\<Gamma> ?p = Some bdy;
               ?\<Gamma>\<turnstile> \<langle>bdy,Normal
             (?init ?s)\<rangle> =i\<Rightarrow> Stuck;
               ?n = Suc i; ?t = Stuck |]
            ==> ?P;
         !!i. [| ?\<Gamma> ?p = None; ?n = Suc i; ?t = Stuck |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 15, template_var 8),
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 14, template_var 7),
                          template_var 6),
                        template_var 5),
                      template_var 4)),
                  template_app (template_hole 13, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_var 0)))]
