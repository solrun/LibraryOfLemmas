Loading theory "Draft.Language" (required by "Draft.HoareTemplates" via "Draft.Hoare" via "Draft.HoarePartial" via "Draft.HoarePartialProps" via "Draft.HoarePartialDef" via "Draft.Semantic")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.HoareTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.HoareTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.HoareTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.091s elapsed time, 0.388s cpu time, 0.000s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.HoareTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.249s elapsed time, 1.003s cpu time, 0.109s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.HoareTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.272s elapsed time, 1.096s cpu time, 0.109s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.HoareTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.921s elapsed time, 3.423s cpu time, 0.759s GC time
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.998s elapsed time, 3.640s cpu time, 0.759s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.846s elapsed time, 5.818s cpu time, 1.123s GC time
Loading theory "Draft.Templates" (required by "Draft.HoareTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.052s elapsed time, 0.104s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.HoareTemplates")
consts
  switch ::
    "('s => 'v) => ('v set * ('s, 'p, 'f) com) list => ('s, 'p, 'f) com"
consts
  guards :: "('f * 's set) list => ('s, 'p, 'f) com => ('s, 'p, 'f) com"
consts
  flatten :: "('s, 'p, 'f) com => ('s, 'p, 'f) com list"
consts
  sequence ::
    "(('s, 'p, 'f) com => ('s, 'p, 'f) com => ('s, 'p, 'f) com)
     => ('s, 'p, 'f) com list => ('s, 'p, 'f) com"
consts
  normalize :: "('s, 'p, 'f) com => ('s, 'p, 'f) com"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.528s elapsed time, 1.129s cpu time, 0.163s GC time
consts
  strip_guards :: "'f set => ('s, 'p, 'f) com => ('s, 'p, 'f) com"
consts
  mark_guards :: "'f => ('s, 'p, 'g) com => ('s, 'p, 'f) com"
### No equation for constructor "Skip"
### No equation for constructor "Basic"
### No equation for constructor "Spec"
### No equation for constructor "Seq"
### No equation for constructor "Cond"
### No equation for constructor "While"
### No equation for constructor "Call"
### No equation for constructor "DynCom"
### No equation for constructor "Throw"
### No equation for constructor "Catch"
consts
  dest_Guard :: "('s, 'p, 'f) com => 'f * 's set * ('s, 'p, 'f) com"
consts
  merge_guards :: "('s, 'p, 'f) com => ('s, 'p, 'f) com"
consts
  noguards :: "('s, 'p, 'f) com => bool"
consts
  nothrows :: "('s, 'p, 'f) com => bool"
Proofs for inductive predicate(s) "com_relp"
  Proving monotonicity ...
### Legacy feature! Old 'recdef' command -- use 'fun' or 'function' instead
Defining recursive function "Language.inter_guards" ...
Proving induction theorem ...
Postprocessing ...
Simplifying nested TCs ...
... Postprocessing finished
Proving unsplit equation...
th:
(Skip \<inter>\<^sub>g Skip) = None ==> (Skip \<inter>\<^sub>g Skip) = None
split ths:
(Skip \<inter>\<^sub>g Basic ?bc) = None
(Skip \<inter>\<^sub>g Spec ?bd) = None
(Skip \<inter>\<^sub>g Seq ?be ?bf) = None
(Skip \<inter>\<^sub>g Cond ?bg ?bh ?bi) = None
(Skip \<inter>\<^sub>g While ?bj ?bk) = None
(Skip \<inter>\<^sub>g Call ?bl) = None
(Skip \<inter>\<^sub>g DynCom ?bm) = None
(Skip \<inter>\<^sub>g Guard ?bn ?bo ?bp) = None
(Skip \<inter>\<^sub>g Throw) = None
(Skip \<inter>\<^sub>g Catch ?bq ?br) = None
(Basic ?w \<inter>\<^sub>g Skip) = None
(Basic ?w \<inter>\<^sub>g Spec ?cj) = None
(Basic ?w \<inter>\<^sub>g Seq ?ck ?cl) = None
(Basic ?w \<inter>\<^sub>g Cond ?cm ?cn ?co) = None
(Basic ?w \<inter>\<^sub>g While ?cp ?cq) = None
(Basic ?w \<inter>\<^sub>g Call ?cr) = None
(Basic ?w \<inter>\<^sub>g DynCom ?cs) = None
(Basic ?w \<inter>\<^sub>g Guard ?ct ?cu ?cv) = None
(Basic ?w \<inter>\<^sub>g Throw) = None
(Basic ?w \<inter>\<^sub>g Catch ?cw ?cx) = None
(Spec ?x \<inter>\<^sub>g Skip) = None
(Spec ?x \<inter>\<^sub>g Basic ?do) = None
(Spec ?x \<inter>\<^sub>g Seq ?dq ?dr) = None
(Spec ?x \<inter>\<^sub>g Cond ?ds ?dt ?du) = None
(Spec ?x \<inter>\<^sub>g While ?dv ?dw) = None
(Spec ?x \<inter>\<^sub>g Call ?dx) = None
(Spec ?x \<inter>\<^sub>g DynCom ?dy) = None
(Spec ?x \<inter>\<^sub>g Guard ?dz ?ea ?eb) = None
(Spec ?x \<inter>\<^sub>g Throw) = None
(Spec ?x \<inter>\<^sub>g Catch ?ec ?ed) = None
(Seq ?y ?z \<inter>\<^sub>g Skip) = None
(Seq ?y ?z \<inter>\<^sub>g Basic ?ev) = None
(Seq ?y ?z \<inter>\<^sub>g Spec ?ew) = None
(Seq ?y ?z \<inter>\<^sub>g Cond ?ez ?fa ?fb) = None
(Seq ?y ?z \<inter>\<^sub>g While ?fc ?fd) = None
(Seq ?y ?z \<inter>\<^sub>g Call ?fe) = None
(Seq ?y ?z \<inter>\<^sub>g DynCom ?ff) = None
(Seq ?y ?z \<inter>\<^sub>g Guard ?fg ?fh ?fi) = None
(Seq ?y ?z \<inter>\<^sub>g Throw) = None
(Seq ?y ?z \<inter>\<^sub>g Catch ?fj ?fk) = None
(Cond ?aa ?ab ?ac \<inter>\<^sub>g Skip) = None
(Cond ?aa ?ab ?ac \<inter>\<^sub>g Basic ?gb) = None
(Cond ?aa ?ab ?ac \<inter>\<^sub>g Spec ?gc) = None
(Cond ?aa ?ab ?ac \<inter>\<^sub>g Seq ?gd ?ge) = None
(Cond ?aa ?ab ?ac \<inter>\<^sub>g While ?gi ?gj) = None
(Cond ?aa ?ab ?ac \<inter>\<^sub>g Call ?gk) = None
(Cond ?aa ?ab ?ac \<inter>\<^sub>g DynCom ?gl) = None
(Cond ?aa ?ab ?ac \<inter>\<^sub>g Guard ?gm ?gn ?go) = None
(Cond ?aa ?ab ?ac \<inter>\<^sub>g Throw) = None
(Cond ?aa ?ab ?ac \<inter>\<^sub>g Catch ?gp ?gq) = None
(While ?ad ?ae \<inter>\<^sub>g Skip) = None
(While ?ad ?ae \<inter>\<^sub>g Basic ?hh) = None
(While ?ad ?ae \<inter>\<^sub>g Spec ?hi) = None
(While ?ad ?ae \<inter>\<^sub>g Seq ?hj ?hk) = None
(While ?ad ?ae \<inter>\<^sub>g Cond ?hl ?hm ?hn) = None
(While ?ad ?ae \<inter>\<^sub>g Call ?hq) = None
(While ?ad ?ae \<inter>\<^sub>g DynCom ?hr) = None
(While ?ad ?ae \<inter>\<^sub>g Guard ?hs ?ht ?hu) = None
(While ?ad ?ae \<inter>\<^sub>g Throw) = None
(While ?ad ?ae \<inter>\<^sub>g Catch ?hv ?hw) = None
(Call ?af \<inter>\<^sub>g Skip) = None
(Call ?af \<inter>\<^sub>g Basic ?in) = None
(Call ?af \<inter>\<^sub>g Spec ?io) = None
(Call ?af \<inter>\<^sub>g Seq ?ip ?iq) = None
(Call ?af \<inter>\<^sub>g Cond ?ir ?is ?it) = None
(Call ?af \<inter>\<^sub>g While ?iu ?iv) = None
(Call ?af \<inter>\<^sub>g DynCom ?ix) = None
(Call ?af \<inter>\<^sub>g Guard ?iy ?iz ?ja) = None
(Call ?af \<inter>\<^sub>g Throw) = None
(Call ?af \<inter>\<^sub>g Catch ?jb ?jc) = None
(DynCom ?ag \<inter>\<^sub>g Skip) = None
(DynCom ?ag \<inter>\<^sub>g Basic ?jt) = None
(DynCom ?ag \<inter>\<^sub>g Spec ?ju) = None
(DynCom ?ag \<inter>\<^sub>g Seq ?jv ?jw) = None
(DynCom ?ag \<inter>\<^sub>g Cond ?jx ?jy ?jz) = None
(DynCom ?ag \<inter>\<^sub>g While ?ka ?kb) = None
(DynCom ?ag \<inter>\<^sub>g Call ?kc) = None
(DynCom ?ag \<inter>\<^sub>g Guard ?ke ?kf ?kg) = None
(DynCom ?ag \<inter>\<^sub>g Throw) = None
(DynCom ?ag \<inter>\<^sub>g Catch ?kh ?ki) = None
(Guard ?ah ?ai ?aj \<inter>\<^sub>g Skip) = None
(Guard ?ah ?ai ?aj \<inter>\<^sub>g Basic ?kz) = None
(Guard ?ah ?ai ?aj \<inter>\<^sub>g Spec ?la) = None
(Guard ?ah ?ai ?aj \<inter>\<^sub>g Seq ?lb ?lc) = None
(Guard ?ah ?ai ?aj \<inter>\<^sub>g Cond ?ld ?le ?lf) = None
(Guard ?ah ?ai ?aj \<inter>\<^sub>g While ?lg ?lh) = None
(Guard ?ah ?ai ?aj \<inter>\<^sub>g Call ?li) = None
(Guard ?ah ?ai ?aj \<inter>\<^sub>g DynCom ?lj) = None
(Guard ?ah ?ai ?aj \<inter>\<^sub>g Throw) = None
(Guard ?ah ?ai ?aj \<inter>\<^sub>g Catch ?ln ?lo) = None
(Throw \<inter>\<^sub>g Skip) = None
(Throw \<inter>\<^sub>g Basic ?mf) = None
(Throw \<inter>\<^sub>g Spec ?mg) = None
(Throw \<inter>\<^sub>g Seq ?mh ?mi) = None
(Throw \<inter>\<^sub>g Cond ?mj ?mk ?ml) = None
(Throw \<inter>\<^sub>g While ?mm ?mn) = None
(Throw \<inter>\<^sub>g Call ?mo) = None
(Throw \<inter>\<^sub>g DynCom ?mp) = None
(Throw \<inter>\<^sub>g Guard ?mq ?mr ?ms) = None
(Throw \<inter>\<^sub>g Catch ?mt ?mu) = None
(Catch ?ak ?al \<inter>\<^sub>g Skip) = None
(Catch ?ak ?al \<inter>\<^sub>g Basic ?nl) = None
(Catch ?ak ?al \<inter>\<^sub>g Spec ?nm) = None
(Catch ?ak ?al \<inter>\<^sub>g Seq ?nn ?no) = None
(Catch ?ak ?al \<inter>\<^sub>g Cond ?np ?nq ?nr) = None
(Catch ?ak ?al \<inter>\<^sub>g While ?ns ?nt) = None
(Catch ?ak ?al \<inter>\<^sub>g Call ?nu) = None
(Catch ?ak ?al \<inter>\<^sub>g DynCom ?nv) = None
(Catch ?ak ?al \<inter>\<^sub>g Guard ?nw ?nx ?ny) = None
(Catch ?ak ?al \<inter>\<^sub>g Throw) = None
--
### recdef (solve_eq): splitto: cannot find variable to split on
Proofs for inductive predicate(s) "subseteq_guards"
  Proving monotonicity ...
### theory "Draft.Language"
### 3.919s elapsed time, 8.878s cpu time, 1.350s GC time
Loading theory "Draft.Semantic" (required by "Draft.HoareTemplates" via "Draft.Hoare" via "Draft.HoarePartial" via "Draft.HoarePartialProps" via "Draft.HoarePartialDef")
Proofs for inductive predicate(s) "exec"
  Proving monotonicity ...
Proofs for inductive predicate(s) "execn"
  Proving monotonicity ...
### theory "Draft.Semantic"
### 2.274s elapsed time, 3.239s cpu time, 1.120s GC time
Loading theory "Draft.HoarePartialDef" (required by "Draft.HoareTemplates" via "Draft.Hoare" via "Draft.HoarePartial" via "Draft.HoarePartialProps")
Loading theory "Draft.Termination" (required by "Draft.HoareTemplates" via "Draft.Hoare" via "Draft.HoareTotal" via "Draft.HoareTotalProps" via "Draft.SmallStep")
Proofs for inductive predicate(s) "terminates"
### Ambiguous input (line 84 of "$AFP/Simpl/HoarePartialDef.thy") produces 2 parse trees:
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>HOL.All_binder" ("_position" n)
###       ("\<^const>HoarePartialDef.cnvalid" ("_position" \<Gamma>)
###         ("_position" \<Theta>) ("_position" n) ("_position" F)
###         ("_position" P) ("_position" c) ("_position" Q) ("_position" A))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>HoarePartialDef.cvalid" ("_position" \<Gamma>)
###       ("_position" \<Theta>) ("_position" F) ("_position" P) ("_position" c)
###       ("_position" Q) ("_position" A))))
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("_tuple"
###       ("\<^const>HOL.All_binder" ("_position" n) ("_position" \<Gamma>))
###       ("_tuple_arg"
###         ("\<^const>HoarePartialDef.nvalid" ("_position" \<Theta>)
###           ("_position" n) ("_position" F) ("_position" P) ("_position" c)
###           ("_position" Q) ("_position" A)))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>HoarePartialDef.cvalid" ("_position" \<Gamma>)
###       ("_position" \<Theta>) ("_position" F) ("_position" P) ("_position" c)
###       ("_position" Q) ("_position" A))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
  Proving monotonicity ...
Proofs for inductive predicate(s) "hoarep"
  Proving monotonicity ...
### theory "Draft.HoarePartialDef"
### 0.418s elapsed time, 1.033s cpu time, 0.304s GC time
Loading theory "Draft.HoarePartialProps" (required by "Draft.HoareTemplates" via "Draft.Hoare" via "Draft.HoarePartial")
### Ambiguous input (line 1078 of "$AFP/Simpl/HoarePartialProps.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("_Ball" ("_position" s) ("_position" P)
###     ("\<^const>HOL.All_binder"
###       ("_idtyp" ("_position" t)
###         ("_tappl" ("_position_sort" 's) ("_position_sort" 'f)
###           ("_type_name" xstate)))
###       ("\<^const>HOL.Ex_binder"
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" Q') ("_position" A')))
###         ("\<^const>HOL.conj"
###           ("\<^const>HOL.All_binder" ("_position" n)
###             ("\<^const>HoarePartialDef.cnvalid" ("_position" \<Gamma>)
###               ("_position" \<Theta>) ("_position" n) ("_position" F)
###               ("_position" P') ("_position" c) ("_position" Q')
###               ("_position" A')))
###           ("\<^const>HOL.implies"
###             ("\<^const>HOL.implies"
###               ("\<^const>Set.member" ("_position" s) ("_position" P'))
###               ("\<^const>Set.member" ("_position" t)
###                 ("\<^const>Set.union"
###                   ("\<^const>Set.image" ("_position" Normal)
###                     ("_position" Q'))
###                   ("\<^const>Set.image" ("_position" Abrupt)
###                     ("_position" A')))))
###             ("\<^const>Set.member" ("_position" t)
###               ("\<^const>Set.union"
###                 ("\<^const>Set.image" ("_position" Normal) ("_position" Q))
###                 ("\<^const>Set.image" ("_position" Abrupt)
###                   ("_position" A))))))))))
### ("\<^const>HOL.Trueprop"
###   ("_Ball" ("_position" s) ("_position" P)
###     ("\<^const>HOL.All_binder"
###       ("_idtyp" ("_position" t)
###         ("_tappl" ("_position_sort" 's) ("_position_sort" 'f)
###           ("_type_name" xstate)))
###       ("\<^const>HOL.Ex_binder"
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" Q') ("_position" A')))
###         ("\<^const>HOL.conj"
###           ("_tuple"
###             ("\<^const>HOL.All_binder" ("_position" n)
###               ("_position" \<Gamma>))
###             ("_tuple_arg"
###               ("\<^const>HoarePartialDef.nvalid" ("_position" \<Theta>)
###                 ("_position" n) ("_position" F) ("_position" P')
###                 ("_position" c) ("_position" Q') ("_position" A'))))
###           ("\<^const>HOL.implies"
###             ("\<^const>HOL.implies"
###               ("\<^const>Set.member" ("_position" s) ("_position" P'))
###               ("\<^const>Set.member" ("_position" t)
###                 ("\<^const>Set.union"
###                   ("\<^const>Set.image" ("_position" Normal)
###                     ("_position" Q'))
###                   ("\<^const>Set.image" ("_position" Abrupt)
###                     ("_position" A')))))
###             ("\<^const>Set.member" ("_position" t)
###               ("\<^const>Set.union"
###                 ("\<^const>Set.image" ("_position" Normal) ("_position" Q))
###                 ("\<^const>Set.image" ("_position" Abrupt)
###                   ("_position" A))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### theory "Draft.Termination"
### 0.645s elapsed time, 1.561s cpu time, 0.511s GC time
Loading theory "Draft.HoareTotalDef" (required by "Draft.HoareTemplates" via "Draft.Hoare" via "Draft.HoareTotal" via "Draft.HoareTotalProps")
Loading theory "Draft.SmallStep" (required by "Draft.HoareTemplates" via "Draft.Hoare" via "Draft.HoareTotal" via "Draft.HoareTotalProps")
### No equation for constructor "Spec"
consts
  procs :: "('s, 'p, 'f) com => 'p set"
consts
  noSpec :: "('s, 'p, 'f) com => bool"
consts
  redex :: "('s, 'p, 'f) com => ('s, 'p, 'f) com"
Proofs for inductive predicate(s) "step"
  Proving monotonicity ...
Proofs for inductive predicate(s) "hoaret"
  Proving monotonicity ...
### theory "Draft.HoarePartialProps"
### 0.582s elapsed time, 1.679s cpu time, 0.336s GC time
Loading theory "Draft.HoarePartial" (required by "Draft.HoareTemplates" via "Draft.Hoare")
### theory "Draft.HoareTotalDef"
### 0.450s elapsed time, 1.420s cpu time, 0.128s GC time
val tranclp_induct2 =
   "[| ?r^++ (?aa, ?ab) (?ba, ?bb); !!a b. ?r (?aa, ?ab) (a, b) ==> ?P a b;
       !!a b aa ba.
          [| ?r^++ (?aa, ?ab) (a, b); ?r (a, b) (aa, ba); ?P a b |]
          ==> ?P aa ba |]
    ==> ?P ?ba ?bb":
   thm
val it = (): unit
consts
  subst_redex :: "('s, 'p, 'f) com => ('s, 'p, 'f) com => ('s, 'p, 'f) com"
val trancl_induct2 =
   "[| ((?aa, ?ab), ?ba, ?bb) : ?r^+;
       !!a b. ((?aa, ?ab), a, b) : ?r ==> ?P a b;
       !!a b aa ba.
          [| ((?aa, ?ab), a, b) : ?r^+; ((a, b), aa, ba) : ?r; ?P a b |]
          ==> ?P aa ba |]
    ==> ?P ?ba ?bb":
   thm
val it = (): unit
consts
  seq :: "(nat => ('s, 'p, 'f) com) => 'p => nat => ('s, 'p, 'f) com"
### theory "Draft.HoarePartial"
### 0.650s elapsed time, 1.502s cpu time, 0.221s GC time
consts
  redexes :: "('s, 'p, 'f) com => ('s, 'p, 'f) com set"
### theory "Draft.SmallStep"
### 1.060s elapsed time, 2.658s cpu time, 0.350s GC time
Loading theory "Draft.HoareTotalProps" (required by "Draft.HoareTemplates" via "Draft.Hoare" via "Draft.HoareTotal")
### theory "Draft.HoareTotalProps"
### 0.635s elapsed time, 0.776s cpu time, 0.191s GC time
Loading theory "Draft.HoareTotal" (required by "Draft.HoareTemplates" via "Draft.Hoare")
### theory "Draft.HoareTotal"
### 1.063s elapsed time, 2.493s cpu time, 1.948s GC time
Loading theory "Draft.Hoare" (required by "Draft.HoareTemplates")
"\<Gamma>|-P c Q"
  :: "bool"
"\<Gamma>|-P c Q,A"
  :: "bool"
"\<Gamma>|-/F P c Q"
  :: "bool"
locale hoare
  fixes \<Gamma> :: "'p => ('s, 'p, 'f) com option"
"\<Gamma>|-/F P c Q,A"
  :: "bool"
"\<Gamma>,\<Theta>|-P c Q"
  :: "bool"
"\<Gamma>,\<Theta>|-/F P c Q"
  :: "bool"
"\<Gamma>,\<Theta>|- P c Q,A"
  :: "bool"
"\<Gamma>|-tP c Q"
  :: "bool"
"\<Gamma>,\<Theta>\<turnstile>\<^bsub>/F \<^esub>P c Q,A"
  :: "bool"
"\<Gamma>|-tP c Q,A"
  :: "bool"
"\<Gamma>|-t/F P c Q"
  :: "bool"
"\<Gamma>|-t/F P c Q,A"
  :: "bool"
"\<Gamma>,\<Theta>|-P c Q"
  :: "bool"
"\<Gamma>,\<Theta>|- P c Q,A"
  :: "bool"
"\<Gamma>,\<Theta>|-t/F P c Q"
  :: "bool"
"\<Gamma>,\<Theta>\<turnstile>\<^sub>t\<^bsub>/F\<^esub> P c Q,A"
  :: "bool"
consts
  assoc :: "('a * 'b) list => 'a => 'b"
### theory "Draft.Hoare"
### 0.231s elapsed time, 0.254s cpu time, 0.000s GC time
Loading theory "Draft.HoareTemplates"
val templateLemmas =
   [("Hoare.in_insert_hd", "?f : insert ?f ?X",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Hoare.unit_object", "(ALL u. ?P u) = ?P ()",
     template_equation
      (template_app (template_hole 1, t_empty),
       template_app (template_var 0, template_hole 0))),
    ("Hoare.unit_ex", "(EX u. ?P u) = ?P ()",
     template_equation
      (template_app (template_hole 1, t_empty),
       template_app (template_var 0, template_hole 0))),
    ("Hoare.wf_measure_lex_prod", "wf ?r ==> wf (?f <*mlex*> ?r)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Hoare.Compl_Collect", "- Collect ?b = {x. ~ ?b x}",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("Hoare.unit_UN", "\<Union> (range ?P) = ?P ()",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_hole 1)),
       template_app (template_var 0, template_hole 0))),
    ("Hoare.all_imp_eq_triv", "(ALL x. x = ?k --> ?Q) = ?Q",
     template_equation
      (template_app (template_hole 2, t_empty), template_var 0)),
    ("Hoare.all_imp_eq_triv", "(ALL x. ?k = x --> ?Q) = ?Q",
     template_equation
      (template_app (template_hole 2, t_empty), template_var 0)),
    ("Hoare.subset_unI1", "?A <= ?B ==> ?A <= ?B Un ?C",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Hoare.subset_unI2", "?A <= ?C ==> ?A <= ?B Un ?C",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Hoare.lookup_Some_in_dom",
     "?\<Gamma> ?p = Some ?bdy ==> ?p : dom ?\<Gamma>",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Hoare.in_measure_iff", "((?x, ?y) : measure ?f) = (?f ?x < ?f ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 0, template_var 2)),
         template_app (template_var 0, template_var 1)))),
    ("Hoare.subset_singleton_insert1", "?y = ?x ==> {?y} <= insert ?x ?A",
     template_implication
      ([template_equation (template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 2), template_hole 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Hoare.all_imp_to_ex", "(ALL x. ?P x --> ?Q) = ((EX x. ?P x) --> ?Q)",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, t_empty)),
         template_var 0))),
    ("HoarePartial.Throw",
     "?P <= ?A ==>
      ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P Throw ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 5),
                 template_hole 0),
               template_var 0),
             template_var 4)
           ))),
    ("HoareTotal.Throw",
     "?P <= ?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Throw ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 5),
                 template_hole 0),
               template_var 0),
             template_var 4)
           ))),
    ("HoarePartial.Skip",
     "?P <= ?Q ==>
      ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P Skip ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 5),
                 template_hole 0),
               template_var 4),
             template_var 0)
           ))),
    ("HoareTotal.Skip",
     "?P <= ?Q ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Skip ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 5),
                 template_hole 0),
               template_var 4),
             template_var 0)
           ))),
    ("Hoare.subset_singleton_insert2",
     "{?y} <= ?A ==> {?y} <= insert ?x ?A",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_var 2),
            template_hole 0),
          template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 2), template_hole 0),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("Hoare.in_inv_image_iff",
     "((?x, ?y) : inv_image ?r ?f) = ((?f ?x, ?f ?y) : ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app (template_var 0, template_var 3)),
             template_app (template_var 0, template_var 2))),
         template_var 1))),
    ("HoarePartial.switchNil",
     "?P <= ?Q ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P switch ?v [] ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 6, template_var 5)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 6),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_hole 0)),
               template_var 5),
             template_var 0)
           ))),
    ("HoareTotal.switchNil",
     "?P <= ?Q ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P switch ?v [] ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 6, template_var 5)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 6),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_hole 0)),
               template_var 5),
             template_var 0)
           ))),
    ("HoareTotalProps.CollInt_iff",
     "{s. ?P s} Int {s. ?Q s} = {s. ?P s & ?Q s}",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_app (template_hole 1, t_empty)),
       template_app (template_hole 1, t_empty))),
    ("Hoare.split_all_conj",
     "(ALL x. ?P x & ?Q x) = ((ALL x. ?P x) & (ALL x. ?Q x))",
     template_equation
      (template_app (template_hole 1, t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, t_empty)),
         template_app (template_hole 1, t_empty)))),
    ("HoarePartialProps.hoare_complete",
     "?\<Gamma>|=/?F ?P ?c ?Q,?A ==> ?\<Gamma>|-/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 5),
                       template_hole 0),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.hoaret_complete",
     "?\<Gamma>|=t/?F ?P ?c ?Q,?A ==> ?\<Gamma>|-t/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 5),
                       template_hole 0),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.hoaret_sound'",
     "?\<Gamma>|-t/?F ?P ?c ?Q,?A ==> ?\<Gamma>|=t/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 5),
                        template_hole 1),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartialDef.valid_iff_nvalid",
     "?\<Gamma>|=/?F ?P ?c ?Q,?A = (ALL n. ?\<Gamma>|=n:/?F ?P ?c ?Q,?A)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app (template_hole 1, t_empty))),
    ("HoarePartial.MergeGuards_iff",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P merge_guards ?c ?Q,?A =
      ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("HoareTotal.MergeGuards_iff",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P merge_guards ?c ?Q,?A =
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("HoarePartialProps.hoare_sound",
     "?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>|=/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.hoaret_complete'",
     "?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.total_to_partial",
     "?\<Gamma>|-t/?F ?P ?c ?Q,?A ==> ?\<Gamma>|-/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 5),
                        template_hole 1),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_hole 1),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.hoaret_sound",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartialProps.valid_restrict_to_valid",
     "?\<Gamma>|\<^bsub>?M\<^esub>|=/?F ?P ?c ?Q,?A ==>
      ?\<Gamma>|=/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 1,
                        template_app
                         (template_app (template_hole 0, template_var 6),
                          template_var 5)),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 6),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.validt_restrict_to_validt",
     "?\<Gamma>|\<^bsub>?M\<^esub>|=t/?F ?P ?c ?Q,?A ==>
      ?\<Gamma>|=t/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 1,
                        template_app
                         (template_app (template_hole 0, template_var 6),
                          template_var 5)),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 6),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Hoare.split_paired_UN", "\<Union> (range ?P) = (UN a b. ?P (a, b))",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, t_empty), template_hole 5)),
       template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 4, t_empty), template_hole 0)))),
    ("Hoare.in_set_Un_simp",
     "(ALL x:?A Un ?B. ?P x) = ((ALL x:?A. ?P x) & (ALL x:?B. ?P x))",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2), t_empty)),
         template_app
          (template_app (template_hole 2, template_var 1), t_empty)))),
    ("HoarePartialProps.hoare_cnvalid",
     "?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>|=?n:/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 7),
                         template_var 6),
                       template_var 0),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartialProps.MergeGuardsI",
     "?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P merge_guards ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_app (template_hole 0, template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartialProps.NormalizeI",
     "?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P Language.normalize ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_app (template_hole 0, template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.MergeGuardsI_sound",
     "?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>|=t/?F  ?P merge_guards ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_app (template_hole 0, template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.NormalizeI_sound",
     "?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>|=t/?F  ?P Language.normalize ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_app (template_hole 0, template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.MergeGuardsI",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P merge_guards ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_app (template_hole 0, template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.NormalizeI",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Language.normalize ?c
           ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_app (template_hole 0, template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartial.raise",
     "?P <= {s. ?f s : ?A} ==>
      ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P raise ?f ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 6,
          template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 6),
                 template_app (template_hole 0, template_var 5)),
               template_var 0),
             template_var 4)
           ))),
    ("HoareTotal.raise",
     "?P <= {s. ?f s : ?A} ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P raise ?f ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 6,
          template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 6),
                 template_app (template_hole 0, template_var 5)),
               template_var 0),
             template_var 4)
           ))),
    ("HoarePartial.Basic",
     "?P <= {s. ?f s : ?Q} ==>
      ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P Basic ?f ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 6,
          template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 6),
                 template_app (template_hole 0, template_var 5)),
               template_var 4),
             template_var 0)
           ))),
    ("HoareTotal.Basic",
     "?P <= {s. ?f s : ?Q} ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Basic ?f ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 6,
          template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 6),
                 template_app (template_hole 0, template_var 5)),
               template_var 4),
             template_var 0)
           ))),
    ("HoarePartialProps.MergeGuardsD",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P merge_guards ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_app (template_hole 0, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartialProps.NormalizeD",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P Language.normalize ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_app (template_hole 0, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.MergeGuardsD_sound",
     "?\<Gamma>,?\<Theta>|=t/?F  ?P merge_guards ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_app (template_hole 0, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.NormalizeD_sound",
     "?\<Gamma>,?\<Theta>|=t/?F  ?P Language.normalize ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_app (template_hole 0, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.MergeGuardsD",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P merge_guards ?c
           ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_app (template_hole 0, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.NormalizeD",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Language.normalize ?c
           ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_app (template_hole 0, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Hoare.image_Un_single_simp",
     "?f ` (UN Z. {?P Z}) = (UN Z. {?f (?P Z)})",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1),
         template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, t_empty), template_hole 4))),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_hole 4)))),
    ("HoarePartial.GuardsNil",
     "?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P guards [] ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartialProps.MarkGuardsI",
     "?\<Gamma>,?\<Theta>|- ?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>|- ?P mark_guards ?f ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 6),
                        template_var 5),
                      template_hole 1),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 6),
                       template_var 5),
                     template_hole 1),
                   template_var 4),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotalProps.MarkGuardsI_sound",
     "?\<Gamma>,?\<Theta>|=t/{}  ?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>|=t/{}  ?P mark_guards ?f ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 6),
                        template_var 5),
                      template_hole 1),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 6),
                       template_var 5),
                     template_hole 1),
                   template_var 4),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.GuardsNil",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P guards [] ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.MarkGuardsI",
     "?\<Gamma>,?\<Theta>\<turnstile>\<^sub>t ?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>\<turnstile>\<^sub>t ?P mark_guards ?f ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 6),
                        template_var 5),
                      template_hole 1),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 6),
                       template_var 5),
                     template_hole 1),
                   template_var 4),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartialProps.MarkGuardsD",
     "?\<Gamma>,?\<Theta>|- ?P mark_guards ?f ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>|- ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 6),
                        template_var 5),
                      template_hole 1),
                    template_var 4),
                  template_app
                   (template_app (template_hole 0, template_var 3),
                    template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 6),
                       template_var 5),
                     template_hole 1),
                   template_var 4),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartialProps.augment_procs",
     "?\<Gamma>|\<^bsub>?M\<^esub>|-/?F ?P ?c ?Q,?A ==>
      ?\<Gamma>|-/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_hole 2,
                          template_app
                           (template_app (template_hole 1, template_var 6),
                            template_var 5)),
                        template_hole 0),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 6),
                       template_hole 0),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartialProps.nvalid_restrict_to_nvalid",
     "?\<Gamma>|\<^bsub>?M\<^esub>|=?n:/?F ?P ?c ?Q,?A ==>
      ?\<Gamma>|=?n:/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_hole 1,
                          template_app
                           (template_app (template_hole 0, template_var 7),
                            template_var 6)),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 7),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.MarkGuardsD_sound",
     "?\<Gamma>,?\<Theta>|=t/{}  ?P mark_guards ?f ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>|=t/{}  ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 6),
                        template_var 5),
                      template_hole 1),
                    template_var 4),
                  template_app
                   (template_app (template_hole 0, template_var 3),
                    template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 6),
                       template_var 5),
                     template_hole 1),
                   template_var 4),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.MarkGuardsD",
     "?\<Gamma>,?\<Theta>\<turnstile>\<^sub>t ?P mark_guards ?f ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>\<turnstile>\<^sub>t ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 6),
                        template_var 5),
                      template_hole 1),
                    template_var 4),
                  template_app
                   (template_app (template_hole 0, template_var 3),
                    template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 6),
                       template_var 5),
                     template_hole 1),
                   template_var 4),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.augment_procs",
     "?\<Gamma>|\<^bsub>?M\<^esub>|-t/?F ?P ?c ?Q,?A ==>
      ?\<Gamma>|-t/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_hole 2,
                          template_app
                           (template_app (template_hole 1, template_var 6),
                            template_var 5)),
                        template_hole 0),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 6),
                       template_hole 0),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartialDef.cnvalid_to_cvalid",
     "ALL n. ?\<Gamma>,?\<Theta>|=n:/?F ?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>|=/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartialProps.hoare_complete'",
     "ALL n. ?\<Gamma>,?\<Theta>|=n:/?F ?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartialDef.valid_augment_Faults",
     "[| ?\<Gamma>|=/?F ?P ?c ?Q,?A; ?F <= ?F' |]
      ==> ?\<Gamma>|=/?F' ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 5, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 6),
                     template_var 0),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotalDef.validt_augment_Faults",
     "[| ?\<Gamma>|=t/?F ?P ?c ?Q,?A; ?F <= ?F' |]
      ==> ?\<Gamma>|=t/?F' ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 5, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 6),
                     template_var 0),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartialProps.MergeGuardsI_sound",
     "ALL n. ?\<Gamma>,?\<Theta>|=n:/?F ?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>|=?n:/?F ?P merge_guards ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 7),
                         template_var 6),
                       template_var 0),
                     template_var 5),
                   template_var 4),
                 template_app (template_hole 0, template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartialProps.NormalizeI_sound",
     "ALL n. ?\<Gamma>,?\<Theta>|=n:/?F ?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>|=?n:/?F ?P Language.normalize ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 7),
                         template_var 6),
                       template_var 0),
                     template_var 5),
                   template_var 4),
                 template_app (template_hole 0, template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartialProps.MergeGuardsD_sound",
     "ALL n. ?\<Gamma>,?\<Theta>|=n:/?F ?P merge_guards ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>|=?n:/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 7),
                         template_var 6),
                       template_var 0),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartialProps.NormalizeD_sound",
     "ALL n. ?\<Gamma>,?\<Theta>|=n:/?F ?P Language.normalize ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>|=?n:/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 7),
                         template_var 6),
                       template_var 0),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartialProps.SubsetGuards",
     "[| ?c \<subseteq>\<^sub>g ?c'; ?\<Gamma>,?\<Theta>|- ?P ?c' ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>|- ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 4),
                        template_var 3),
                      template_hole 0),
                    template_var 2),
                  template_var 5),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_hole 0),
                   template_var 2),
                 template_var 6),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.SubsetGuards_sound",
     "[| ?c \<subseteq>\<^sub>g ?c';
         ?\<Gamma>,?\<Theta>|=t/{}  ?P ?c' ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>|=t/{}  ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 4),
                        template_var 3),
                      template_hole 0),
                    template_var 2),
                  template_var 5),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_hole 0),
                   template_var 2),
                 template_var 6),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.SubsetGuards",
     "[| ?c \<subseteq>\<^sub>g ?c';
         ?\<Gamma>,?\<Theta>\<turnstile>\<^sub>t ?P ?c' ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>\<turnstile>\<^sub>t ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 4),
                        template_var 3),
                      template_hole 0),
                    template_var 2),
                  template_var 5),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_hole 0),
                   template_var 2),
                 template_var 6),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartialProps.augment_Faults",
     "[| ?\<Gamma>|-/?F ?P ?c ?Q,?A; ?F <= ?F' |]
      ==> ?\<Gamma>|-/?F' ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 6),
                        template_hole 1),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 5, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 6),
                       template_hole 1),
                     template_var 0),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartial.annotateI",
     "[| ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?anno ?Q,?A;
         ?c = ?anno |]
      ==> ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation (template_var 0, template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartialDef.hoare_augment_context",
     "[| ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?p ?Q,?A;
         ?\<Theta> <= ?\<Theta>' |]
      ==> ?\<Gamma>,?\<Theta>'\<turnstile>\<^bsub>/?F \<^esub>?P ?p ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 6, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 7),
                       template_var 0),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartialDef.conseqPre",
     "[| ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P' ?c ?Q,?A;
         ?P <= ?P' |]
      ==> ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 0),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartialDef.nvalid_augment_Faults",
     "[| ?\<Gamma>|=?n:/?F ?P ?c ?Q,?A; ?F <= ?F' |]
      ==> ?\<Gamma>|=?n:/?F' ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 5, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 7),
                       template_var 6),
                     template_var 0),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotalProps.augment_Faults",
     "[| ?\<Gamma>|-t/?F ?P ?c ?Q,?A; ?F <= ?F' |]
      ==> ?\<Gamma>|-t/?F' ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 6),
                        template_hole 1),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 5, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 6),
                       template_hole 1),
                     template_var 0),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.annotateI",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?anno ?Q,?A;
         ?c = ?anno |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation (template_var 0, template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotalDef.hoaret_augment_context",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?p ?Q,?A;
         ?\<Theta> <= ?\<Theta>' |]
      ==> ?\<Gamma>,?\<Theta>'
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?p ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 6, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 7),
                       template_var 0),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotalDef.conseqPre",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P' ?c ?Q,?A;
         ?P <= ?P' |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 0),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartialProps.MarkGuardsI_sound",
     "ALL n. ?\<Gamma>,?\<Theta>|=n:/{} ?P ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>|=?n:/{} ?P mark_guards ?f ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 2, template_var 7),
                         template_var 6),
                       template_var 1),
                     template_hole 1),
                   template_var 5),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoarePartialProps.MarkGuardsD_sound",
     "ALL n. ?\<Gamma>,?\<Theta>|=n:/{} ?P mark_guards ?f ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>|=?n:/{} ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 2, template_var 7),
                         template_var 6),
                       template_var 0),
                     template_hole 1),
                   template_var 5),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartialDef.valid_to_valid_strip",
     "[| ?\<Gamma>|=/?F ?P ?c ?Q,?A; ?F' <= - ?F |]
      ==> strip ?F' ?\<Gamma>|=/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 1, template_var 5))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 0, template_var 0),
                         template_var 6)),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("Hoare.in_mlex_iff",
     "((?x, ?y) : ?f <*mlex*> ?r) =
      (?f ?x < ?f ?y | ?f ?x = ?f ?y & (?x, ?y) : ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_var 1, template_var 3)),
                 template_app (template_var 1, template_var 2))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_var 1, template_var 3)),
                   template_app (template_var 1, template_var 2))),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 3),
                     template_var 2)),
                 template_var 0)))
           ))),
    ("HoarePartial.TrivPostNoAbr",
     "ALL Z. ?\<Gamma>,?\<Theta>|-/?F (?P' Z) ?c (?Q' Z) ==>
      ALL Z. ?\<Gamma>,?\<Theta>|-/?F (?P' Z) ?c UNIV",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("HoareTotal.TrivPostNoAbr",
     "ALL Z. ?\<Gamma>,?\<Theta>|-t/?F (?P' Z) ?c (?Q' Z) ==>
      ALL Z. ?\<Gamma>,?\<Theta>|-t/?F (?P' Z) ?c UNIV",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("HoarePartial.conseq_exploit_pre",
     "ALL s:?P.
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>({s} Int ?P) ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 6), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 6),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.conseq_exploit_pre",
     "ALL s:?P.
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ({s} Int ?P) ?c
              ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 6), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 6),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartial.annotate_normI",
     "[| ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?anno ?Q,?A;
         Language.normalize ?c = Language.normalize ?anno |]
      ==> ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 0, template_var 0),
          template_app (template_hole 0, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.annotate_normI",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?anno ?Q,?A;
         Language.normalize ?c = Language.normalize ?anno |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 0, template_var 0),
          template_app (template_hole 0, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartial.reannotateWhileNoGuard",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P whileAnno ?b ?I ?V ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P whileAnno ?b ?J ?V ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 0, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 7),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 6),
                       template_var 0),
                     template_var 4),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.reannotateWhileNoGuard",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P whileAnno ?b ?I ?V ?c
           ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P whileAnno ?b ?J ?V ?c
           ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 0, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 7),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 6),
                       template_var 0),
                     template_var 4),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartial.TrivPost",
     "ALL Z.
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>(?P' Z) ?c (?Q' Z),(?A' Z) ==>
      ALL Z.
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>(?P' Z) ?c UNIV,UNIV",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("HoareTotal.TrivPost",
     "ALL Z.
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) ?c
              (?Q' Z),(?A' Z) ==>
      ALL Z.
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) ?c UNIV,UNIV",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("HoarePartial.annotateWhile",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P whileAnnoG ?gs ?b ?I ?V ?c ?Q,
   ?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P while ?gs ?b ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 1, template_var 6),
                          template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 7),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 6),
                     template_var 5),
                   template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.annotateWhile",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           whileAnnoG ?gs ?b ?I ?V ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P while ?gs ?b ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 1, template_var 6),
                          template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 7),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 6),
                     template_var 5),
                   template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartialProps.Seq_NoFaultStuckD1",
     "?\<Gamma>\<turnstile> \<langle>Seq ?c1.0
?c2.0,?s\<rangle> \<Rightarrow>\<notin>{Stuck} Un Fault ` ?F ==>
      ?\<Gamma>\<turnstile> \<langle>?c1.0,?s\<rangle> \<Rightarrow>\<notin>{Stuck} Un
Fault ` ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 4),
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_var 2)),
                template_var 1),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_hole 2)),
                template_app
                 (template_app (template_hole 1, template_hole 0),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_var 4),
                 template_var 3),
               template_var 1),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_hole 2)),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)))
           ))),
    ("HoarePartialProps.hoare_strip_\<Gamma>",
     "[| ?\<Gamma>|-/?F ?P ?p ?Q,?A; ?F' <= - ?F |]
      ==> strip ?F' ?\<Gamma>|-/?F ?P ?p ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 6),
                        template_hole 3),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 1, template_var 5))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 0, template_var 0),
                           template_var 6)),
                       template_hole 3),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartialDef.nvalid_to_nvalid_strip",
     "[| ?\<Gamma>|=?n:/?F ?P ?c ?Q,?A; ?F' <= - ?F |]
      ==> strip ?F' ?\<Gamma>|=?n:/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 1, template_var 5))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 0, template_var 0),
                           template_var 7)),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("Hoare.in_lex_iff",
     "(((?a, ?b), ?x, ?y) : ?r <*lex*> ?s) =
      ((?a, ?x) : ?r | ?a = ?x & (?b, ?y) : ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_var 5),
                      template_var 4)),
                  template_app
                   (template_app (template_hole 8, template_var 3),
                    template_var 2))),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 5),
                     template_var 3)),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 3)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 2)),
                 template_var 0)))
           ))),
    ("HoarePartial.WhileInvInt",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>(?P Int ?b) ?c ?P,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P whileAnno ?b ?P ?V ?c
   (?P Int - ?b),?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_app
                     (template_app (template_hole 2, template_var 4),
                      template_var 3)),
                  template_var 2),
                template_var 4),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 4),
                     template_var 0),
                   template_var 2)),
               template_app
                (template_app (template_hole 2, template_var 4),
                 template_app (template_hole 0, template_var 3))),
             template_var 1)
           ))),
    ("HoarePartialProps.SubsetGuards_sound",
     "[| ?c \<subseteq>\<^sub>g ?c';
         ALL n. ?\<Gamma>,?\<Theta>|=n:/{} ?P ?c' ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>|=?n:/{} ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 7),
              template_var 6)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 5),
                         template_var 4),
                       template_var 0),
                     template_hole 0),
                   template_var 3),
                 template_var 7),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartialProps.conseq_extract_state_indep_prop",
     "[| ALL s:?P. ?R;
         ?R ==>
         ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 7), t_empty)
            ),
        template_implication
         ([template_predicate (template_var 6)],
          template_predicate
           (
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 0, template_var 5),
                          template_var 4),
                        template_var 3),
                      template_var 7),
                    template_var 2),
                  template_var 1),
                template_var 0)
              ))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 7),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.conseq_extract_state_indep_prop",
     "[| ALL s:?P. ?R;
         ?R ==>
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 7), t_empty)
            ),
        template_implication
         ([template_predicate (template_var 6)],
          template_predicate
           (
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 0, template_var 5),
                          template_var 4),
                        template_var 3),
                      template_var 7),
                    template_var 2),
                  template_var 1),
                template_var 0)
              ))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 7),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartial.augment_FaultsUNIV",
     "ALL Z. ?\<Gamma>|-/?F (?P Z) ?p (?Q Z),(?A Z) ==>
      ALL Z. ?\<Gamma>|-/UNIV (?P Z) ?p (?Q Z),(?A Z)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("HoarePartial.augment_emptyFaults",
     "ALL Z. ?\<Gamma>|-(?P Z) ?p (?Q Z),(?A Z) ==>
      ALL Z. ?\<Gamma>|-/?F (?P Z) ?p (?Q Z),(?A Z)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("HoareTotal.hoaret_to_hoarep'",
     "ALL Z. ?\<Gamma>|-t/?F (?P Z) ?p (?Q Z),(?A Z) ==>
      ALL Z. ?\<Gamma>|-/?F (?P Z) ?p (?Q Z),(?A Z)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("HoareTotal.augment_FaultsUNIV",
     "ALL Z. ?\<Gamma>|-t/?F (?P Z) ?p (?Q Z),(?A Z) ==>
      ALL Z. ?\<Gamma>|-t/UNIV (?P Z) ?p (?Q Z),(?A Z)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("HoareTotal.augment_emptyFaults",
     "ALL Z. ?\<Gamma>|-t(?P Z) ?p (?Q Z),(?A Z) ==>
      ALL Z. ?\<Gamma>|-t/?F (?P Z) ?p (?Q Z),(?A Z)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("HoarePartial.reannotateWhile",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P whileAnnoG ?gs ?b ?I ?V ?c ?Q,
   ?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P whileAnnoG ?gs ?b ?J ?V ?c ?Q,
   ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 11),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 0, template_var 7),
                          template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 11),
                       template_var 10),
                     template_var 9),
                   template_var 8),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 7),
                         template_var 6),
                       template_var 0),
                     template_var 4),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.reannotateWhile",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           whileAnnoG ?gs ?b ?I ?V ?c ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           whileAnnoG ?gs ?b ?J ?V ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 11),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 0, template_var 7),
                          template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 11),
                       template_var 10),
                     template_var 9),
                   template_var 8),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 7),
                         template_var 6),
                       template_var 0),
                     template_var 4),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartial.Guard",
     "[| ?P <= ?g Int ?R;
         ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?R ?c ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P Guard ?f ?g ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 9,
          template_app
           (template_app (template_hole 2, template_var 8),
            template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 7),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 8),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartial.GuaranteeAsGuard",
     "[| ?P <= ?g Int ?R;
         ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?R ?c ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P guaranteeStrip ?f ?g ?c ?Q,
       ?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 9,
          template_app
           (template_app (template_hole 2, template_var 8),
            template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 7),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 8),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.Guard",
     "[| ?P <= ?g Int ?R;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Guard ?f ?g ?c
               ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 9,
          template_app
           (template_app (template_hole 2, template_var 8),
            template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 7),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 8),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.GuaranteeAsGuard",
     "[| ?P <= ?g Int ?R;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               guaranteeStrip ?f ?g ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 9,
          template_app
           (template_app (template_hole 2, template_var 8),
            template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 7),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 8),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotalProps.TerminationPartial",
     "[| ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A;
         ALL s:?P. ?\<Gamma>\<turnstile>?c \<down> Normal s |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartial.GuardSwap",
     "[| ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?R ?c ?Q,?A;
         ?P <= ?g Int ?R |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P Guard ?f ?g ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 6))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoarePartial.GuaranteeAsGuardSwap",
     "[| ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?R ?c ?Q,?A;
         ?P <= ?g Int ?R |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P guaranteeStrip ?f ?g ?c ?Q,
       ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 6))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotalProps.SplitTotalPartial",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q',?A';
         ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 0, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.GuardSwap",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c ?Q,?A;
         ?P <= ?g Int ?R |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Guard ?f ?g ?c
               ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 6))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotal.GuaranteeAsGuardSwap",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c ?Q,?A;
         ?P <= ?g Int ?R |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               guaranteeStrip ?f ?g ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 6))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotalProps.SplitTotalPartial'",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/UNIV\<^esub> ?P ?c ?Q',?A';
         ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 8),
                        template_var 7),
                      template_hole 1),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 0, template_var 8),
                        template_var 7),
                      template_var 2),
                    template_var 6),
                  template_var 5),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 8),
                       template_var 7),
                     template_var 2),
                   template_var 6),
                 template_var 5),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.TerminationPartial_sound",
     "[| ALL s:?P. ?\<Gamma>\<turnstile>?c \<down> Normal s;
         ?\<Gamma>,?\<Theta>|=/?F ?P ?c ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 6), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 5),
                        template_var 3),
                      template_var 2),
                    template_var 6),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 3),
                     template_var 2),
                   template_var 6),
                 template_var 4),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartialDef.conseqPost",
     "[| ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q',?A';
         ?Q' <= ?Q; ?A' <= ?A |]
      ==> ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 3, template_var 1),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalDef.conseqPost",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q',?A';
         ?Q' <= ?Q; ?A' <= ?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 3, template_var 1),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartial.WhileInt",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>(?P Int ?b) ?c ?P,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P
   whileAnno ?b {s. undefined} ?V ?c (?P Int - ?b),?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 5, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_app
                     (template_app (template_hole 4, template_var 4),
                      template_var 3)),
                  template_var 2),
                template_var 4),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 3),
                       template_app (template_hole 2, t_empty)),
                     template_var 0),
                   template_var 2)),
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_app (template_hole 0, template_var 3))),
             template_var 1)
           ))),
    ("HoarePartial.GuardsCons",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P Guard ?f ?g (guards ?gs ?c) ?Q,
   ?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P guards ((?f, ?g) # ?gs) ?c ?Q,
   ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_app
                     (template_app (template_hole 2, template_var 3),
                      template_var 2))),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 6),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 0, template_var 5),
                           template_var 4)),
                       template_var 3)),
                   template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartial.GuardsConsGuaranteeStrip",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P
   guaranteeStrip ?f ?g (guards ?gs ?c) ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P
   guards (guaranteeStripPair ?f ?g # ?gs) ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_app
                     (template_app (template_hole 2, template_var 3),
                      template_var 2))),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 6),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 0, template_var 5),
                           template_var 4)),
                       template_var 3)),
                   template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.GuardsCons",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           Guard ?f ?g (guards ?gs ?c) ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           guards ((?f, ?g) # ?gs) ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_app
                     (template_app (template_hole 2, template_var 3),
                      template_var 2))),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 6),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 0, template_var 5),
                           template_var 4)),
                       template_var 3)),
                   template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.GuardsConsGuaranteeStrip",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           guaranteeStrip ?f ?g (guards ?gs ?c) ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           guards (guaranteeStripPair ?f ?g # ?gs) ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_app
                     (template_app (template_hole 2, template_var 3),
                      template_var 2))),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 6),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 0, template_var 5),
                           template_var 4)),
                       template_var 3)),
                   template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartialProps.GuardsFlip",
     "[| ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/- ?F \<^esub>?P ?c UNIV,UNIV |]
      ==> ?\<Gamma>,?\<Theta>|- ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 6),
                        template_var 5),
                      template_app (template_hole 2, template_var 4)),
                    template_var 3),
                  template_var 2),
                template_hole 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 6),
                       template_var 5),
                     template_hole 0),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.GuardsFlip_sound",
     "[| ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A;
         ?\<Gamma>,?\<Theta>|=/- ?F ?P ?c UNIV,UNIV |]
      ==> ?\<Gamma>,?\<Theta>|=t/{}  ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 6),
                        template_var 5),
                      template_app (template_hole 2, template_var 4)),
                    template_var 3),
                  template_var 2),
                template_hole 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 6),
                       template_var 5),
                     template_hole 0),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.GuardsFlip",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/- ?F \<^esub>?P ?c UNIV,UNIV |]
      ==> ?\<Gamma>,?\<Theta>\<turnstile>\<^sub>t ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 6),
                        template_var 5),
                      template_app (template_hole 2, template_var 4)),
                    template_var 3),
                  template_var 2),
                template_hole 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 6),
                       template_var 5),
                     template_hole 0),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartial.BSeq",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P ?c\<^sub>1 ?R,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?R ?c\<^sub>2 ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P bseq ?c\<^sub>1 ?c\<^sub>2
       ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 3),
                  template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1)),
               template_var 0),
             template_var 2)
           ))),
    ("HoarePartial.Seq",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P ?c\<^sub>1 ?R,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?R ?c\<^sub>2 ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P Seq ?c\<^sub>1 ?c\<^sub>2
       ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 3),
                  template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1)),
               template_var 0),
             template_var 2)
           ))),
    ("HoarePartial.SeqSwap",
     "[| ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?R ?c2.0 ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P ?c1.0 ?R,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P Seq ?c1.0 ?c2.0 ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 1),
                  template_var 0),
                template_var 5),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoarePartial.CatchSwap",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?R ?c\<^sub>2 ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P ?c\<^sub>1 ?Q,?R |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P Catch ?c\<^sub>1 ?c\<^sub>2
       ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 1),
                  template_var 0),
                template_var 3),
              template_var 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoarePartial.Catch",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P ?c\<^sub>1 ?Q,?R;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?R ?c\<^sub>2 ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P Catch ?c\<^sub>1 ?c\<^sub>2
       ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 2),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1)),
               template_var 3),
             template_var 0)
           ))),
    ("HoareTotal.BSeq",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c\<^sub>1 ?R,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c\<^sub>2 ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               bseq ?c\<^sub>1 ?c\<^sub>2 ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 3),
                  template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1)),
               template_var 0),
             template_var 2)
           ))),
    ("HoareTotal.Seq",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c\<^sub>1 ?R,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c\<^sub>2 ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               Seq ?c\<^sub>1 ?c\<^sub>2 ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 3),
                  template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1)),
               template_var 0),
             template_var 2)
           ))),
    ("HoareTotal.SeqSwap",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c2.0 ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c1.0 ?R,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Seq ?c1.0 ?c2.0
               ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 1),
                  template_var 0),
                template_var 5),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoareTotal.CatchSwap",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c\<^sub>2 ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c\<^sub>1 ?Q,?R |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               Catch ?c\<^sub>1 ?c\<^sub>2 ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 1),
                  template_var 0),
                template_var 3),
              template_var 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoareTotal.Catch",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c\<^sub>1 ?Q,?R;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c\<^sub>2 ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               Catch ?c\<^sub>1 ?c\<^sub>2 ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 2),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1)),
               template_var 3),
             template_var 0)
           ))),
    ("HoarePartial.FCall",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P
   call ?init ?p ?return (%s t. ?c (?result t)) ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P
   fcall ?init ?p ?return ?result ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    t_empty)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 7),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 5),
                       template_var 4),
                     template_var 2),
                   template_var 3)),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.FCall",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           call ?init ?p ?return (%s t. ?c (?result t)) ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           fcall ?init ?p ?return ?result ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    t_empty)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 7),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 5),
                       template_var 4),
                     template_var 2),
                   template_var 3)),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartialProps.CombineStrip",
     "[| ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A;
         ?\<Gamma>,?\<Theta>|- ?P strip_guards (- ?F) ?c UNIV,UNIV |]
      ==> ?\<Gamma>,?\<Theta>|- ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 6),
                        template_var 5),
                      template_hole 3),
                    template_var 3),
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app (template_hole 1, template_var 4)),
                    template_var 2)),
                template_hole 0),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 6),
                       template_var 5),
                     template_hole 3),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.CombineStrip_sound",
     "[| ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A;
         ?\<Gamma>,?\<Theta>|=/{} ?P strip_guards (- ?F) ?c UNIV,UNIV |]
      ==> ?\<Gamma>,?\<Theta>|=t/{}  ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 5, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 6),
                        template_var 5),
                      template_hole 3),
                    template_var 3),
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app (template_hole 1, template_var 4)),
                    template_var 2)),
                template_hole 0),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 6),
                       template_var 5),
                     template_hole 3),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.CombineStrip",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A;
         ?\<Gamma>,?\<Theta>|- ?P strip_guards (- ?F) ?c UNIV,UNIV |]
      ==> ?\<Gamma>,?\<Theta>\<turnstile>\<^sub>t ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 5, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 6),
                        template_var 5),
                      template_hole 3),
                    template_var 3),
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app (template_hole 1, template_var 4)),
                    template_var 2)),
                template_hole 0),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 6),
                       template_var 5),
                     template_hole 3),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartial.ProcBody",
     "[| ?P <= ?P';
         ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P' ?body ?Q,?A;
         ?\<Gamma> ?p = Some ?body |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P Call ?p ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 8, template_var 7),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 7),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app (template_var 6, template_var 0),
          template_app (template_hole 1, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 8),
                 template_app (template_hole 0, template_var 0)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.ProcBody",
     "[| ?P <= ?P';
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P' ?body ?Q,?A;
         ?\<Gamma> ?p = Some ?body |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Call ?p ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 8, template_var 7),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 7),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app (template_var 6, template_var 0),
          template_app (template_hole 1, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 8),
                 template_app (template_hole 0, template_var 0)),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartial.GuardStrip",
     "[| ?P <= ?R;
         ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?R ?c ?Q,?A;
         ?f : ?F |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P Guard ?f ?g ?c ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 9, template_var 8),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 8),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoarePartial.GuaranteeStrip",
     "[| ?P <= ?R;
         ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?R ?c ?Q,?A;
         ?f : ?F |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P guaranteeStrip ?f ?g ?c ?Q,
       ?A",
     template_implication
      ([template_inequation (less_equals, template_var 9, template_var 8),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 8),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoareTotal.GuardStrip",
     "[| ?P <= ?R;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c ?Q,?A;
         ?f : ?F |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Guard ?f ?g ?c
               ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 9, template_var 8),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 8),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoareTotal.GuaranteeStrip",
     "[| ?P <= ?R;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c ?Q,?A;
         ?f : ?F |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               guaranteeStrip ?f ?g ?c ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 9, template_var 8),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 8),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoarePartial.GuardStripSwap",
     "[| ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?R ?c ?Q,?A;
         ?P <= ?R; ?f : ?F |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P Guard ?f ?g ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_inequation (less_equals, template_var 2, template_var 6),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 7)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoarePartial.GuaranteeStripSwap",
     "[| ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?R ?c ?Q,?A;
         ?P <= ?R; ?f : ?F |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P guaranteeStrip ?f ?g ?c ?Q,
       ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_inequation (less_equals, template_var 2, template_var 6),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 7)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotal.GuardStripSwap",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c ?Q,?A;
         ?P <= ?R; ?f : ?F |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Guard ?f ?g ?c
               ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_inequation (less_equals, template_var 2, template_var 6),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 7)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotal.GuaranteeStripSwap",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c ?Q,?A;
         ?P <= ?R; ?f : ?F |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               guaranteeStrip ?f ?g ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_inequation (less_equals, template_var 2, template_var 6),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 7)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotalProps.image_Un_conv",
     "?f ` (UN p:dom ?\<Gamma>. UN Z. {?x p Z}) =
      (UN p:dom ?\<Gamma>. UN Z. {?f (?x p Z)})",
     template_equation
      (template_app
        (template_app (template_hole 12, template_var 2),
         template_app
          (template_hole 11,
           template_app
            (template_app (template_hole 10, t_empty),
             template_app (template_hole 5, template_var 0)))),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 5, template_var 0))))),
    ("HoarePartial.PostConjI",
     "[| ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A;
         ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?R,?B |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P ?c (?Q Int ?R),(?A Int ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("HoareTotalProps.TerminationPartialStrip",
     "[| ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A;
         ALL s:?P.
            strip ?F'
             ?\<Gamma>\<turnstile>strip_guards ?F' ?c \<down> Normal s |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 6, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotalProps.PostConjI_sound",
     "[| ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A;
         ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?R,?B |]
      ==> ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c (?Q Int ?R),(?A Int ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("HoareTotal.PostConjI",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?R,?B |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c
               (?Q Int ?R),(?A Int ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("HoarePartial.WhileAnnoG",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P
   guards ?gs (whileAnno ?b ?J ?V (Seq ?c (guards ?gs Skip))) ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P whileAnnoG ?gs ?b ?I ?V ?c ?Q,
   ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 5, template_var 11),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_app
                   (template_app (template_hole 4, template_var 7),
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 3, template_var 6),
                          template_var 5),
                        template_var 4),
                      template_app
                       (template_app (template_hole 2, template_var 3),
                        template_app
                         (template_app (template_hole 4, template_var 7),
                          template_hole 1))))),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 11),
                       template_var 10),
                     template_var 9),
                   template_var 8),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 7),
                         template_var 6),
                       template_var 0),
                     template_var 4),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.WhileAnnoG",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           guards ?gs (whileAnno ?b ?J ?V (Seq ?c (guards ?gs Skip)))
           ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           whileAnnoG ?gs ?b ?I ?V ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 5, template_var 11),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_app
                   (template_app (template_hole 4, template_var 7),
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 3, template_var 6),
                          template_var 5),
                        template_var 4),
                      template_app
                       (template_app (template_hole 2, template_var 3),
                        template_app
                         (template_app (template_hole 4, template_var 7),
                          template_hole 1))))),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 11),
                       template_var 10),
                     template_var 9),
                   template_var 8),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 7),
                         template_var 6),
                       template_var 0),
                     template_var 4),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartial.augment_context'",
     "[| ?\<Theta> <= ?\<Theta>';
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?P Z) ?p (?Q Z),(?A Z) |]
      ==> ALL Z.
             ?\<Gamma>,?\<Theta>'
                \<turnstile>\<^bsub>/?F \<^esub>(?P Z) ?p (?Q Z),(?A Z)",
     template_implication
      ([template_inequation (less_equals, template_var 7, template_var 6),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("HoareTotal.augment_context'",
     "[| ?\<Theta> <= ?\<Theta>';
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P Z) ?p
                 (?Q Z),(?A Z) |]
      ==> ALL Z.
             ?\<Gamma>,?\<Theta>'
                \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P Z) ?p
                  (?Q Z),(?A Z)",
     template_implication
      ([template_inequation (less_equals, template_var 7, template_var 6),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("HoarePartialDef.conseqPrePost",
     "[| ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P' ?c ?Q',?A';
         ?P <= ?P'; ?Q' <= ?Q; ?A' <= ?A |]
      ==> ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_inequation (less_equals, template_var 2, template_var 6),
        template_inequation (less_equals, template_var 4, template_var 1),
        template_inequation (less_equals, template_var 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_var 5),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalDef.conseqPrePost",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P' ?c ?Q',?A';
         ?P <= ?P'; ?Q' <= ?Q; ?A' <= ?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_inequation (less_equals, template_var 2, template_var 6),
        template_inequation (less_equals, template_var 4, template_var 1),
        template_inequation (less_equals, template_var 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_var 5),
               template_var 1),
             template_var 0)
           ))),
    ("Hoare.in_Specs_simp",
     "(ALL x:UN Z. {(?P Z, ?p, ?Q Z, ?A Z)}. ?Prop x) =
      (ALL Z. ?Prop (?P Z, ?p, ?Q Z, ?A Z))",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, t_empty), template_hole 1))),
         t_empty),
       template_app (template_hole 0, t_empty))),
    ("HoarePartial.AsmUN",
     "(UN Z. {(?P Z, ?p, ?Q Z, ?A Z)}) <= ?\<Theta> ==>
      ALL Z.
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>(?P Z) Call ?p (?Q Z),(?A Z)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 10,
            template_app
             (template_app (template_hole 9, t_empty), template_hole 3)),
          template_var 2)],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("HoareTotal.AsmUN",
     "(UN Z. {(?P Z, ?p, ?Q Z, ?A Z)}) <= ?\<Theta> ==>
      ALL Z.
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P Z) Call ?p
              (?Q Z),(?A Z)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 10,
            template_app
             (template_app (template_hole 9, t_empty), template_hole 3)),
          template_var 2)],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("HoarePartial.Spec",
     "?P <= {s. (ALL t. (s, t) : ?r --> t : ?Q) & (EX t. (s, t) : ?r)} ==>
      ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P Spec ?r ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 6,
          template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 6),
                 template_app (template_hole 0, template_var 5)),
               template_var 4),
             template_var 0)
           ))),
    ("HoareTotal.Spec",
     "?P <= {s. (ALL t. (s, t) : ?r --> t : ?Q) & (EX t. (s, t) : ?r)} ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Spec ?r ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 6,
          template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 6),
                 template_app (template_hole 0, template_var 5)),
               template_var 4),
             template_var 0)
           ))),
    ("HoarePartial.conseq_under_new_pre",
     "[| ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P' ?c ?Q',?A';
         ALL s:?P. s : ?P' & ?Q' <= ?Q & ?A' <= ?A |]
      ==> ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_var 5),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartial.WhileAnnoGFix",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P
   guards ?gs (whileAnnoFix ?b ?J ?V (%Z. Seq (?c Z) (guards ?gs Skip))) ?Q,
   ?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P whileAnnoGFix ?gs ?b ?I ?V ?c
   ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 5, template_var 11),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_app
                   (template_app (template_hole 4, template_var 7),
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 3, template_var 6),
                          template_var 5),
                        template_var 4),
                      t_empty))),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 11),
                       template_var 10),
                     template_var 9),
                   template_var 8),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 7),
                         template_var 6),
                       template_var 0),
                     template_var 4),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.WhileAnnoGFix",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           guards ?gs
            (whileAnnoFix ?b ?J ?V (%Z. Seq (?c Z) (guards ?gs Skip)))
           ?Q,?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           whileAnnoGFix ?gs ?b ?I ?V ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 5, template_var 11),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_app
                   (template_app (template_hole 4, template_var 7),
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 3, template_var 6),
                          template_var 5),
                        template_var 4),
                      t_empty))),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 11),
                       template_var 10),
                     template_var 9),
                   template_var 8),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 7),
                         template_var 6),
                       template_var 0),
                     template_var 4),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartial.Bind",
     "[| ?P <= {s. s : ?P' s};
         ALL s.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?P' s) ?c (?e s) ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P bind ?e ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 8,
          template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 8),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 3)),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.Bind",
     "[| ?P <= {s. s : ?P' s};
         ALL s.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' s) ?c (?e s)
                 ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P bind ?e ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 8,
          template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 8),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 3)),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartial.CondInt",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>(?P Int ?b) ?c1.0 ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>(?P Int - ?b) ?c2.0 ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P Cond ?b ?c1.0 ?c2.0 ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_app
                     (template_app (template_hole 2, template_var 5),
                      template_app (template_hole 1, template_var 4))),
                  template_var 0),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 0)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.CondInt",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P Int ?b) ?c1.0 ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P Int - ?b) ?c2.0
              ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Cond ?b ?c1.0 ?c2.0
               ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_app
                     (template_app (template_hole 2, template_var 5),
                      template_app (template_hole 1, template_var 4))),
                  template_var 0),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 0)),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartialProps.GuardsFlip_sound",
     "[| ALL n. ?\<Gamma>,?\<Theta>|=n:/?F ?P ?c ?Q,?A;
         ALL n. ?\<Gamma>,?\<Theta>|=n:/- ?F ?P ?c UNIV,UNIV |]
      ==> ?\<Gamma>,?\<Theta>|=?n:/{} ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_var 7),
                         template_var 6),
                       template_var 0),
                     template_hole 0),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartial.hoarep_strip",
     "[| ALL Z. ?\<Gamma>|-/?F (?P Z) ?p (?Q Z),(?A Z); ?F' <= - ?F |]
      ==> ALL Z. strip ?F' ?\<Gamma>|-/?F (?P Z) ?p (?Q Z),(?A Z)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 1, template_var 5))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("HoarePartial.conseq_no_aux",
     "[| ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P' ?c ?Q',?A';
         ALL s. s : ?P --> s : ?P' & ?Q' <= ?Q & ?A' <= ?A |]
      ==> ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 5, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_var 5),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.conseq_no_aux",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P' ?c ?Q',?A';
         ALL s. s : ?P --> s : ?P' & ?Q' <= ?Q & ?A' <= ?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 5, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_var 5),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartial.ProcNoRec1",
     "[| ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?P Z) the (?\<Gamma> ?p)
         (?Q Z),(?A Z);
         ?p : dom ?\<Gamma> |]
      ==> ALL Z.
             ?\<Gamma>,?\<Theta>
                \<turnstile>\<^bsub>/?F \<^esub>(?P Z) Call ?p (?Q Z),
          (?A Z)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 6))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("HoareTotal.ProcNoRec1",
     "[| ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P Z)
                 the (?\<Gamma> ?p) (?Q Z),(?A Z);
         ?p : dom ?\<Gamma> |]
      ==> ALL Z.
             ?\<Gamma>,?\<Theta>
                \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P Z) Call ?p
                  (?Q Z),(?A Z)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 6))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("HoarePartial.While",
     "[| ?P <= ?I;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>(?I Int ?b) ?c ?I,?A;
         ?I Int - ?b <= ?Q |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P whileAnno ?b ?I ?V ?c ?Q,
       ?A",
     template_implication
      ([template_inequation (less_equals, template_var 9, template_var 8),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_app
                     (template_app (template_hole 2, template_var 8),
                      template_var 4)),
                  template_var 3),
                template_var 8),
              template_var 2)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 8),
            template_app (template_hole 1, template_var 4)),
          template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 8),
                     template_var 0),
                   template_var 3)),
               template_var 1),
             template_var 2)
           ))),
    ("HoarePartialProps.SplitGuards",
     "[| (?c\<^sub>1 \<inter>\<^sub>g ?c\<^sub>2) = Some ?c;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P ?c\<^sub>1 ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P ?c\<^sub>2 UNIV,UNIV |]
      ==> ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A",
     template_implication
      ([template_equation
         (template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 8),
              template_var 7)),
          template_app (template_hole 2, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 8),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 7),
                template_hole 0),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 6),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.SplitGuards",
     "[| (?c\<^sub>1 \<inter>\<^sub>g ?c\<^sub>2) = Some ?c;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c\<^sub>1 ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P ?c\<^sub>2 UNIV,UNIV |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_equation
         (template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 8),
              template_var 7)),
          template_app (template_hole 3, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 8),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 7),
                template_hole 0),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 6),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.SplitGuards_sound",
     "[| ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c\<^sub>1 ?Q,?A;
         ?\<Gamma>,?\<Theta>|=/?F ?P ?c\<^sub>2 UNIV,UNIV;
         (?c\<^sub>1 \<inter>\<^sub>g ?c\<^sub>2) = Some ?c |]
      ==> ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 6, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 5, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 1),
                template_hole 4),
              template_hole 4)
            ),
        template_equation
         (template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 4),
              template_var 1)),
          template_app (template_hole 0, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 6, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 0),
               template_var 3),
             template_var 2)
           ))),
    ("HoarePartial.BasicCond",
     "?P <= {s. (?b s --> ?f s : ?Q) & (~ ?b s --> ?g s : ?Q)} ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P
   Basic (%s. if ?b s then ?f s else ?g s) ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 8,
          template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 8),
                 template_app (template_hole 1, t_empty)),
               template_var 5),
             template_var 0)
           ))),
    ("HoareTotal.BasicCond",
     "?P <= {s. (?b s --> ?f s : ?Q) & (~ ?b s --> ?g s : ?Q)} ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           Basic (%s. if ?b s then ?f s else ?g s) ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 8,
          template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 8),
                 template_app (template_hole 1, t_empty)),
               template_var 5),
             template_var 0)
           ))),
    ("HoarePartial.condCatchSwap",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?R ?c\<^sub>2 ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P ?c\<^sub>1 ?Q,
      (?b Int ?R Un - ?b Int ?A) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P
       condCatch ?c\<^sub>1 ?b ?c\<^sub>2 ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 2),
                  template_var 1),
                template_var 4),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 0),
                    template_var 6)),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 0)),
                  template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoarePartialProps.WeakenContext",
     "[| ?\<Gamma>,?\<Theta>'\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A;
         ALL (P, p, Q, A):?\<Theta>'.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>P Call p Q,A |]
      ==> ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 5, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 6),
              template_app (template_hole 3, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 7),
                       template_var 0),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.condCatchSwap",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c\<^sub>2 ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c\<^sub>1
              ?Q,(?b Int ?R Un - ?b Int ?A) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               condCatch ?c\<^sub>1 ?b ?c\<^sub>2 ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 2),
                  template_var 1),
                template_var 4),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 0),
                    template_var 6)),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 0)),
                  template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoarePartialProps.CombineStrip_sound",
     "[| ALL n. ?\<Gamma>,?\<Theta>|=n:/?F ?P ?c ?Q,?A;
         ALL n. ?\<Gamma>,?\<Theta>|=n:/{}
            ?P strip_guards (- ?F) ?c UNIV,UNIV |]
      ==> ?\<Gamma>,?\<Theta>|=?n:/{} ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 4, template_var 7),
                         template_var 6),
                       template_var 0),
                     template_hole 3),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartial.PostConjE",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P ?c (?Q Int ?R),(?A Int ?B);
         [| ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A;
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>?P ?c ?R,?B |]
         ==> ?S |]
      ==> ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 1, template_var 9),
                           template_var 8),
                         template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 2)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 1, template_var 9),
                             template_var 8),
                           template_var 7),
                         template_var 6),
                       template_var 5),
                     template_var 3),
                   template_var 1)
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("HoareTotal.PostConjE",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c
              (?Q Int ?R),(?A Int ?B);
         [| ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A;
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?R,?B |]
         ==> ?S |]
      ==> ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 1, template_var 9),
                           template_var 8),
                         template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 2)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 1, template_var 9),
                             template_var 8),
                           template_var 7),
                         template_var 6),
                       template_var 5),
                     template_var 3),
                   template_var 1)
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("HoarePartial.condCatch",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P ?c\<^sub>1 ?Q,
      (?b Int ?R Un - ?b Int ?A);
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?R ?c\<^sub>2 ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P
       condCatch ?c\<^sub>1 ?b ?c\<^sub>2 ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 3),
                    template_var 2)),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 3)),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 2),
                  template_var 0),
                template_var 4),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 6),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 3),
                   template_var 0)),
               template_var 4),
             template_var 1)
           ))),
    ("HoareTotal.condCatch",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c\<^sub>1
              ?Q,(?b Int ?R Un - ?b Int ?A);
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c\<^sub>2 ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               condCatch ?c\<^sub>1 ?b ?c\<^sub>2 ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 3),
                    template_var 2)),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 3)),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 2),
                  template_var 0),
                template_var 4),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 6),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 3),
                   template_var 0)),
               template_var 4),
             template_var 1)
           ))),
    ("HoarePartialProps.PostConjI_sound",
     "[| ALL n. ?\<Gamma>,?\<Theta>|=n:/?F ?P ?c ?Q,?A;
         ALL n. ?\<Gamma>,?\<Theta>|=n:/?F ?P ?c ?R,?B |]
      ==> ?\<Gamma>,?\<Theta>|=?n:/?F ?P ?c (?Q Int ?R),(?A Int ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 9),
                         template_var 8),
                       template_var 0),
                     template_var 7),
                   template_var 6),
                 template_var 5),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1))
           ))),
    ("HoarePartial.WhileNoGuard'",
     "[| ?P <= ?I;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>(?I Int ?b) ?c ?I,?A;
         ?I Int - ?b <= ?Q |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P
       whileAnno ?b ?I ?V (Seq ?c Skip) ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 9, template_var 8),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 5, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_app
                     (template_app (template_hole 4, template_var 8),
                      template_var 4)),
                  template_var 3),
                template_var 8),
              template_var 2)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 4, template_var 8),
            template_app (template_hole 3, template_var 4)),
          template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 4),
                       template_var 8),
                     template_var 0),
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_hole 0))),
               template_var 1),
             template_var 2)
           ))),
    ("HoarePartial.GuaranteeSwap",
     "[| ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?R ?c ?Q,?A;
         ?P <= {s. s : ?g --> s : ?R}; ?f : ?F |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P Guard ?f ?g ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 6, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 4, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 7)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 6, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotalDef.cvalidt_termD",
     "[| ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A;
         ALL (P, p, Q, A):?\<Theta>. ?\<Gamma>|=t/?F P Call p Q,A;
         ?s : ?P |]
      ==> ?\<Gamma>\<turnstile>?c \<down> Normal ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 6),
              template_app (template_hole 7, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 7),
               template_var 3),
             template_app (template_hole 0, template_var 0))
           ))),
    ("HoareTotal.GuaranteeSwap",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c ?Q,?A;
         ?P <= {s. s : ?g --> s : ?R}; ?f : ?F |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Guard ?f ?g ?c
               ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 6, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 4, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 7)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 6, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoarePartial.Guarantee",
     "[| ?P <= {s. s : ?g --> s : ?R};
         ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?R ?c ?Q,?A;
         ?f : ?F |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P Guard ?f ?g ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 9,
          template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 7),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 8),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.Guarantee",
     "[| ?P <= {s. s : ?g --> s : ?R};
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?R ?c ?Q,?A;
         ?f : ?F |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Guard ?f ?g ?c
               ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 9,
          template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 7),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 8),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartialProps.valid_to_valid_involved",
     "?\<Gamma>|=/?F ?P ?c ?Q,?A ==>
      ?\<Gamma>|=/?F
      {s. s = ?Z &
          s : ?P} ?c {t. ?Z : ?P --> t : ?Q},{t. ?Z : ?P --> t : ?A}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 5, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 5, template_var 6),
                     template_var 5),
                   template_app (template_hole 4, t_empty)),
                 template_var 3),
               template_app (template_hole 4, t_empty)),
             template_app (template_hole 4, t_empty))
           ))),
    ("HoarePartial.SpecIf",
     "?P <= {s. (?b s --> ?f s : ?Q) &
                (~ ?b s --> ?g s : ?Q & ?h s : ?Q)} ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P Spec (if_rel ?b ?f ?g ?h) ?Q,
   ?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 9,
          template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 9),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 8),
                         template_var 7),
                       template_var 5),
                     template_var 4))),
               template_var 6),
             template_var 0)
           ))),
    ("HoareTotal.SpecIf",
     "?P <= {s. (?b s --> ?f s : ?Q) &
                (~ ?b s --> ?g s : ?Q & ?h s : ?Q)} ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
           Spec (if_rel ?b ?f ?g ?h) ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 9,
          template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 9),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 8),
                         template_var 7),
                       template_var 5),
                     template_var 4))),
               template_var 6),
             template_var 0)
           ))),
    ("HoarePartialProps.MGT_valid",
     "?\<Gamma>|=/?F
      {s. s = ?Z &
          ?\<Gamma>\<turnstile> \<langle>?c,Normal
       s\<rangle> \<Rightarrow>\<notin>{Stuck} Un
 Fault `
 (- ?F)} ?c {t. ?\<Gamma>\<turnstile> \<langle>?c,Normal
             ?Z\<rangle> \<Rightarrow> Normal
  t},{t. ?\<Gamma>\<turnstile> \<langle>?c,Normal
      ?Z\<rangle> \<Rightarrow> Abrupt t}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 14, template_var 3),
                   template_var 2),
                 template_app (template_hole 13, t_empty)),
               template_var 0),
             template_app (template_hole 13, t_empty)),
           template_app (template_hole 13, t_empty))
         )),
    ("HoarePartial.DynComConseq",
     "?P <= {s. EX P' Q' A'.
                   ?\<Gamma>,?\<Theta>
                      \<turnstile>\<^bsub>/?F \<^esub>P' ?c s Q',A' &
                   ?P <= P' & Q' <= ?Q & A' <= ?A} ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>?P DynCom ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 6,
          template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 6),
                 template_app (template_hole 0, template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.DynComConseq",
     "?P <= {s. EX P' Q' A'.
                   ?\<Gamma>,?\<Theta>
                      \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> P' ?c s
                        Q',A' &
                   ?P <= P' & Q' <= ?Q & A' <= ?A} ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P DynCom ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 6,
          template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 6),
                 template_app (template_hole 0, template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartialProps.valid_involved_to_valid",
     "ALL Z. ?\<Gamma>|=/?F
         {s. s = Z &
             s : ?P} ?c {t. Z : ?P --> t : ?Q},{t. Z : ?P --> t : ?A} ==>
      ?\<Gamma>|=/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 5, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartial.PostConjI'",
     "[| ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A;
         ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A ==>
         ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?R,?B |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P ?c (?Q Int ?R),(?A Int ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 1, template_var 8),
                           template_var 7),
                         template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate
           (
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 1, template_var 8),
                          template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 1),
                template_var 0)
              ))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("HoareTotal.PostConjI'",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A ==>
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?R,?B |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c
               (?Q Int ?R),(?A Int ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 1, template_var 8),
                           template_var 7),
                         template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate
           (
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 1, template_var 8),
                          template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 1),
                template_var 0)
              ))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("HoarePartialProps.Merge_PostConj",
     "[| ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A;
         ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?G \<^esub>?P' ?c ?R,?X;
         ?F <= ?G; ?P <= ?P' |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P ?c (?Q Int ?R),(?A Int ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 10),
                        template_var 9),
                      template_var 3),
                    template_var 2),
                  template_var 6),
                template_var 1),
              template_var 0)
            ),
        template_inequation (less_equals, template_var 8, template_var 3),
        template_inequation (less_equals, template_var 7, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 7),
                 template_var 6),
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0))
           ))),
    ("HoareTotalProps.Merge_PostConj_sound",
     "[| ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A;
         ?\<Gamma>,?\<Theta>|=t/?G  ?P' ?c ?R,?X; ?F <= ?G; ?P <= ?P' |]
      ==> ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c (?Q Int ?R),(?A Int ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 10),
                        template_var 9),
                      template_var 3),
                    template_var 2),
                  template_var 6),
                template_var 1),
              template_var 0)
            ),
        template_inequation (less_equals, template_var 8, template_var 3),
        template_inequation (less_equals, template_var 7, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 7),
                 template_var 6),
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0))
           ))),
    ("HoareTotalProps.Merge_PostConj",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?G\<^esub> ?P' ?c ?R,?X;
         ?F <= ?G; ?P <= ?P' |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c
               (?Q Int ?R),(?A Int ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 10),
                        template_var 9),
                      template_var 3),
                    template_var 2),
                  template_var 6),
                template_var 1),
              template_var 0)
            ),
        template_inequation (less_equals, template_var 8, template_var 3),
        template_inequation (less_equals, template_var 7, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 7),
                 template_var 6),
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0))
           ))),
    ("HoarePartialDef.validI",
     "(!!s t.
          [| ?\<Gamma>\<turnstile> \<langle>?c,Normal
          s\<rangle> \<Rightarrow> t;
             s : ?P; t ~: Fault ` ?F |]
          ==> t : Normal ` ?Q Un Abrupt ` ?A) ==>
      ?\<Gamma>|=/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 2),
                   template_var 3),
                 template_var 4),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartialProps.WeakenContext_sound",
     "[| ALL n. ?\<Gamma>,?\<Theta>'|=n:/?F ?P ?c ?Q,?A;
         ALL (P, p, Q, A):?\<Theta>'. ?\<Gamma>,?\<Theta>|=?n:/?F
            P Call p Q,A |]
      ==> ?\<Gamma>,?\<Theta>|=?n:/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 7),
              template_app (template_hole 3, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 5, template_var 8),
                         template_var 1),
                       template_var 0),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2)
           ))),
    ("HoarePartial.conseq_Kleymann",
     "[| ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?P' Z) ?c (?Q' Z),(?A' Z);
         ALL s:?P. EX Z. s : ?P' Z & ?Q' Z <= ?Q & ?A' Z <= ?A |]
      ==> ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_var 5),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartialProps.SplitGuards_sound",
     "[| ALL n. ?\<Gamma>,?\<Theta>|=n:/?F ?P ?c\<^sub>1 ?Q,?A;
         ALL n. ?\<Gamma>,?\<Theta>|=n:/?F ?P ?c\<^sub>2 UNIV,UNIV;
         (?c\<^sub>1 \<inter>\<^sub>g ?c\<^sub>2) = Some ?c |]
      ==> ?\<Gamma>,?\<Theta>|=?n:/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_equation
         (template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 5),
              template_var 2)),
          template_app (template_hole 0, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 5, template_var 9),
                         template_var 8),
                       template_var 0),
                     template_var 7),
                   template_var 6),
                 template_var 1),
               template_var 4),
             template_var 3)
           ))),
    ("HoarePartialProps.Seq_NoFaultStuckD2",
     "?\<Gamma>\<turnstile> \<langle>Seq ?c1.0
?c2.0,?s\<rangle> \<Rightarrow>\<notin>{Stuck} Un Fault ` ?F ==>
      ALL t.
         ?\<Gamma>\<turnstile> \<langle>?c1.0,?s\<rangle> \<Rightarrow> t -->
         t ~: {Stuck} Un Fault ` ?F -->
         ?\<Gamma>\<turnstile> \<langle>?c2.0,t\<rangle> \<Rightarrow>\<notin>{Stuck} Un
  Fault ` ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 4),
                  template_app
                   (template_app (template_hole 11, template_var 3),
                    template_var 2)),
                template_var 1),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_hole 7)),
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 0)))
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("HoarePartialDef.nvalidI",
     "(!!s t.
          [| ?\<Gamma>\<turnstile> \<langle>?c,Normal
          s\<rangle> =?n\<Rightarrow> t;
             s : ?P; t ~: Fault ` ?F |]
          ==> t : Normal ` ?Q Un Abrupt ` ?A) ==>
      ?\<Gamma>|=?n:/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 6),
                       template_var 4),
                     template_var 2),
                   template_var 3),
                 template_var 5),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartial.Cond'",
     "[| ?P <= {s. ?b <= ?P1.0 & - ?b <= ?P2.0};
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P1.0 ?c1.0 ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P2.0 ?c2.0 ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P Cond ?b ?c1.0 ?c2.0 ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 10,
          template_app (template_hole 4, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 8),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 7),
                  template_var 0),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 10),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 9),
                     template_var 3),
                   template_var 0)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.Cond'",
     "[| ?P <= {s. ?b <= ?P1.0 & - ?b <= ?P2.0};
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P1.0 ?c1.0 ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P2.0 ?c2.0 ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Cond ?b ?c1.0 ?c2.0
               ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 10,
          template_app (template_hole 4, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 8),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 7),
                  template_var 0),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 10),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 9),
                     template_var 3),
                   template_var 0)),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartial.WhileConj",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>{s. ?P s & ?b s} ?c {s. ?P s},
   ?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>{s. ?P s}
   whileAnno {s. ?b s} {s. undefined} ?V ?c {s. ?P s & ~ ?b s},?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 5, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_app (template_hole 4, t_empty)),
                  template_var 2),
                template_app (template_hole 4, t_empty)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_app (template_hole 4, t_empty)),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_hole 2,
                         template_app (template_hole 4, t_empty)),
                       template_app (template_hole 4, t_empty)),
                     template_var 0),
                   template_var 2)),
               template_app (template_hole 4, t_empty)),
             template_var 1)
           ))),
    ("HoareTotalProps.MGT_valid",
     "?\<Gamma>|=t/?F
      {s. s = ?Z &
          ?\<Gamma>\<turnstile> \<langle>?c,Normal
       s\<rangle> \<Rightarrow>\<notin>{Stuck} Un Fault ` (- ?F) &
          ?\<Gamma>\<turnstile>?c \<down> Normal
     s} ?c {t. ?\<Gamma>\<turnstile> \<langle>?c,Normal
            ?Z\<rangle> \<Rightarrow> Normal
 t},{t. ?\<Gamma>\<turnstile> \<langle>?c,Normal
     ?Z\<rangle> \<Rightarrow> Abrupt t}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 15, template_var 3),
                   template_var 2),
                 template_app (template_hole 14, t_empty)),
               template_var 0),
             template_app (template_hole 14, t_empty)),
           template_app (template_hole 14, t_empty))
         )),
    ("HoarePartial.WhileInvConj",
     "?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>{s. ?P s & ?b s} ?c {s. ?P s},
   ?A ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>{s. ?P s}
   whileAnno {s. ?b s} {s. ?P s} ?V ?c {s. ?P s & ~ ?b s},?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_app (template_hole 3, t_empty)),
                  template_var 2),
                template_app (template_hole 3, t_empty)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_app (template_hole 3, t_empty)),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_hole 1,
                         template_app (template_hole 3, t_empty)),
                       template_app (template_hole 3, t_empty)),
                     template_var 0),
                   template_var 2)),
               template_app (template_hole 3, t_empty)),
             template_var 1)
           ))),
    ("HoarePartial.Lem",
     "[| ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?P' Z) ?c (?Q' Z),(?A' Z);
         ?P <= {s. EX Z. s : ?P' Z & ?Q' Z <= ?Q & ?A' Z <= ?A} |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P lem ?x ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 6, template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 3),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 6)),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartial.conseq",
     "[| ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?P' Z) ?c (?Q' Z),(?A' Z);
         ALL s. s : ?P --> (EX Z. s : ?P' Z & ?Q' Z <= ?Q & ?A' Z <= ?A) |]
      ==> ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 6, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_var 5),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.Lem",
     "[| ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) ?c
                 (?Q' Z),(?A' Z);
         ?P <= {s. EX Z. s : ?P' Z & ?Q' Z <= ?Q & ?A' Z <= ?A} |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P lem ?x ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 6, template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 3),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 6)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.conseq",
     "[| ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) ?c
                 (?Q' Z),(?A' Z);
         ALL s. s : ?P --> (EX Z. s : ?P' Z & ?Q' Z <= ?Q & ?A' Z <= ?A) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 6, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_var 5),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartial.LemAnnoNoAbrupt",
     "[| ?P <= {s. EX Z. s : ?P' Z & (ALL t. t : ?Q' Z --> t : ?Q)};
         ALL Z. ?\<Gamma>,?\<Theta>|-/?F (?P' Z) ?c (?Q' Z) |]
      ==> ?\<Gamma>,?\<Theta>|-/?F ?P lem ?x ?c ?Q",
     template_implication
      ([template_inequation
         (less_equals, template_var 8,
          template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 8),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1)),
               template_var 5),
             template_hole 1)
           ))),
    ("HoareTotal.LemAnnoNoAbrupt",
     "[| ?P <= {s. EX Z. s : ?P' Z & (ALL t. t : ?Q' Z --> t : ?Q)};
         ALL Z. ?\<Gamma>,?\<Theta>|-t/?F (?P' Z) ?c (?Q' Z) |]
      ==> ?\<Gamma>,?\<Theta>|-t/?F ?P lem ?x ?c ?Q",
     template_implication
      ([template_inequation
         (less_equals, template_var 8,
          template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 8),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1)),
               template_var 5),
             template_hole 1)
           ))),
    ("HoarePartial.CombineStrip'",
     "[| ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c' ?Q,?A;
         ?\<Gamma>|-?P ?c'' UNIV,UNIV;
         ?c'' = mark_guards False (strip_guards (- ?F) ?c');
         merge_guards ?c = merge_guards (mark_guards False ?c') |]
      ==> ?\<Gamma>,?\<Theta>|- ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 8),
                        template_hole 8),
                      template_hole 7),
                    template_var 5),
                  template_var 1),
                template_hole 6),
              template_hole 6)
            ),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 4, template_hole 3),
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 6)),
              template_var 4))),
        template_equation
         (template_app (template_hole 0, template_var 0),
          template_app
           (template_hole 0,
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 4)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 8),
                       template_var 7),
                     template_hole 7),
                   template_var 5),
                 template_var 0),
               template_var 3),
             template_var 2)
           ))),
    ("HoareTotal.CombineStrip'",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c' ?Q,?A;
         ?\<Gamma>|-?P ?c'' UNIV,UNIV;
         ?c'' = mark_guards False (strip_guards (- ?F) ?c');
         merge_guards ?c = merge_guards (mark_guards False ?c') |]
      ==> ?\<Gamma>,?\<Theta>\<turnstile>\<^sub>t ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 8),
                        template_hole 8),
                      template_hole 7),
                    template_var 5),
                  template_var 1),
                template_hole 6),
              template_hole 6)
            ),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 4, template_hole 3),
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 6)),
              template_var 4))),
        template_equation
         (template_app (template_hole 0, template_var 0),
          template_app
           (template_hole 0,
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 4)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 8),
                       template_var 7),
                     template_hole 7),
                   template_var 5),
                 template_var 0),
               template_var 3),
             template_var 2)
           ))),
    ("HoarePartialProps.Merge_PostConj_sound",
     "[| ALL n. ?\<Gamma>,?\<Theta>|=n:/?F ?P ?c ?Q,?A;
         ALL n. ?\<Gamma>,?\<Theta>|=n:/?G ?P' ?c ?R,?X; ?F <= ?G;
         ?P <= ?P' |]
      ==> ?\<Gamma>,?\<Theta>|=?n:/?F ?P ?c (?Q Int ?R),(?A Int ?X)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_inequation (less_equals, template_var 9, template_var 4),
        template_inequation (less_equals, template_var 8, template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_var 11),
                         template_var 10),
                       template_var 0),
                     template_var 9),
                   template_var 8),
                 template_var 7),
               template_app
                (template_app (template_hole 0, template_var 6),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 5),
               template_var 1))
           ))),
    ("HoarePartial.CondConj",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>{s. ?P s & ?b s} ?c1.0 ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>{s. ?P s & ~ ?b s} ?c2.0 ?Q,
      ?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>{s. ?P s}
       Cond {s. ?b s} ?c1.0 ?c2.0 ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_app (template_hole 3, t_empty)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_app (template_hole 3, t_empty)),
                  template_var 0),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_app (template_hole 3, t_empty)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 0,
                       template_app (template_hole 3, t_empty)),
                     template_var 3),
                   template_var 0)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.CondConj",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> {s. ?P s & ?b s} ?c1.0
              ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> {s. ?P s & ~ ?b s} ?c2.0
              ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> {s. ?P s}
               Cond {s. ?b s} ?c1.0 ?c2.0 ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_app (template_hole 3, t_empty)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_app (template_hole 3, t_empty)),
                  template_var 0),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_app (template_hole 3, t_empty)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 0,
                       template_app (template_hole 3, t_empty)),
                     template_var 3),
                   template_var 0)),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartial.CombineStrip''",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/{True} \<^esub>?P ?c' ?Q,?A;
         ?\<Gamma>|-?P ?c'' UNIV,UNIV;
         ?c'' = mark_guards False (strip_guards {False} ?c');
         merge_guards ?c = merge_guards (mark_guards False ?c') |]
      ==> ?\<Gamma>,?\<Theta>|- ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 7),
                        template_var 6),
                      template_app
                       (template_app (template_hole 9, template_hole 8),
                        template_hole 7)),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 7),
                        template_hole 6),
                      template_hole 7),
                    template_var 5),
                  template_var 1),
                template_hole 5),
              template_hole 5)
            ),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 3, template_hole 2),
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 9, template_hole 2),
                  template_hole 7)),
              template_var 4))),
        template_equation
         (template_app (template_hole 0, template_var 0),
          template_app
           (template_hole 0,
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 4)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 7),
                       template_var 6),
                     template_hole 7),
                   template_var 5),
                 template_var 0),
               template_var 3),
             template_var 2)
           ))),
    ("HoareTotal.CombineStrip''",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/{True}\<^esub> ?P ?c' ?Q,?A;
         ?\<Gamma>|-?P ?c'' UNIV,UNIV;
         ?c'' = mark_guards False (strip_guards {False} ?c');
         merge_guards ?c = merge_guards (mark_guards False ?c') |]
      ==> ?\<Gamma>,?\<Theta>\<turnstile>\<^sub>t ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 11, template_var 7),
                        template_var 6),
                      template_app
                       (template_app (template_hole 10, template_hole 9),
                        template_hole 8)),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 7, template_var 7),
                        template_hole 6),
                      template_hole 8),
                    template_var 5),
                  template_var 1),
                template_hole 5),
              template_hole 5)
            ),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 3, template_hole 2),
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 10, template_hole 2),
                  template_hole 8)),
              template_var 4))),
        template_equation
         (template_app (template_hole 0, template_var 0),
          template_app
           (template_hole 0,
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 4)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 11, template_var 7),
                       template_var 6),
                     template_hole 8),
                   template_var 5),
                 template_var 0),
               template_var 3),
             template_var 2)
           ))),
    ("HoarePartialProps.exec_noSpec_no_Stuck",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t;
         noSpec ?c; ALL p:dom ?\<Gamma>. noSpec (the (?\<Gamma> p));
         procs ?c <= dom ?\<Gamma>;
         ALL p:dom ?\<Gamma>. procs (the (?\<Gamma> p)) <= dom ?\<Gamma>;
         ?s ~= Stuck |]
      ==> ?t ~= Stuck",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 3)),
              t_empty)
            ),
        template_inequation
         (less_equals, template_app (template_hole 3, template_var 2),
          template_app (template_hole 6, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 3)),
              t_empty)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 0))],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("HoarePartialProps.MGT_Calls",
     "ALL p:dom ?\<Gamma>.
         ALL Z.
            ?\<Gamma>
               |-/?F {s. s = Z &
                         ?\<Gamma>\<turnstile> \<langle>Call
                   p,Normal
                      s\<rangle> \<Rightarrow>\<notin>{Stuck} Un
                Fault ` (- ?F)}
                     Call p
                     {t. ?\<Gamma>\<turnstile> \<langle>Call
                   p,Normal Z\<rangle> \<Rightarrow> Normal t},
                     {t. ?\<Gamma>\<turnstile> \<langle>Call
                   p,Normal Z\<rangle> \<Rightarrow> Abrupt t}",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 19,
             template_app (template_hole 18, template_var 1)),
           t_empty)
         )),
    ("HoarePartialDef.mono_WeakenContext",
     "?A <= ?B ==>
      (case ?x of
       (P, c, Q, A') => (?\<Gamma>, ?\<Theta>, ?F, P, c, Q, A') : ?A) -->
      (case ?x of
       (P, c, Q, A') => (?\<Gamma>, ?\<Theta>, ?F, P, c, Q, A') : ?B)",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, t_empty), template_var 0)),
             template_app
              (template_app (template_hole 9, t_empty), template_var 0))
           ))),
    ("HoarePartialDef.Conseq'",
     "ALL s.
         s : ?P -->
         (EX P' Q' A'.
             (ALL Z.
                 ?\<Gamma>,?\<Theta>
                    \<turnstile>\<^bsub>/?F \<^esub>(P' Z) ?c (Q' Z),
              (A' Z)) &
             (EX Z. s : P' Z & Q' Z <= ?Q & A' Z <= ?A)) ==>
      ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 6),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalDef.Conseq'",
     "ALL s.
         s : ?P -->
         (EX P' Q' A'.
             (ALL Z.
                 ?\<Gamma>,?\<Theta>
                    \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (P' Z) ?c
                      (Q' Z),(A' Z)) &
             (EX Z. s : P' Z & Q' Z <= ?Q & A' Z <= ?A)) ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 6),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartialProps.execn_noSpec_no_Stuck",
     "[| ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t;
         noSpec ?c; ALL p:dom ?\<Gamma>. noSpec (the (?\<Gamma> p));
         procs ?c <= dom ?\<Gamma>;
         ALL p:dom ?\<Gamma>. procs (the (?\<Gamma> p)) <= dom ?\<Gamma>;
         ?s ~= Stuck |]
      ==> ?t ~= Stuck",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 4)),
              t_empty)
            ),
        template_inequation
         (less_equals, template_app (template_hole 3, template_var 3),
          template_app (template_hole 6, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 4)),
              t_empty)
            ),
        template_negation
         (template_equation (template_var 2, template_hole 0))],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("HoarePartialProps.LiberalConseq",
     "ALL s:?P.
         ALL t.
            EX P' Q' A'.
               ?\<Gamma>,?\<Theta>
                  \<turnstile>\<^bsub>/?F \<^esub>P' ?c Q',A' &
               ((s : P' --> t : Normal ` Q' Un Abrupt ` A') -->
                t : Normal ` ?Q Un Abrupt ` ?A) ==>
      ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 6), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 7, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 6),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartialProps.LiberalConseq'",
     "ALL s:?P.
         EX P' Q' A'.
            ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>P' ?c Q',A' &
            (ALL t.
                (s : P' --> t : Normal ` Q' Un Abrupt ` A') -->
                t : Normal ` ?Q Un Abrupt ` ?A) ==>
      ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 6), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 6),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartial.CondSwap",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P1.0 ?c1.0 ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P2.0 ?c2.0 ?Q,?A;
         ?P <= {s. (s : ?b --> s : ?P1.0) & (s ~: ?b --> s : ?P2.0)} |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P Cond ?b ?c1.0 ?c2.0 ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 7, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 7, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 3),
                  template_var 2),
                template_var 5),
              template_var 4)
            ),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 7, template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 1),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 6),
                   template_var 2)),
               template_var 5),
             template_var 4)
           ))),
    ("HoareTotal.CondSwap",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P1.0 ?c1.0 ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P2.0 ?c2.0 ?Q,?A;
         ?P <= {s. (s : ?b --> s : ?P1.0) & (s ~: ?b --> s : ?P2.0)} |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P Cond ?b ?c1.0 ?c2.0
               ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 7, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 7, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 3),
                  template_var 2),
                template_var 5),
              template_var 4)
            ),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 7, template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 1),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 6),
                   template_var 2)),
               template_var 5),
             template_var 4)
           ))),
    ("HoarePartial.Cond",
     "[| ?P <= {s. (s : ?b --> s : ?P\<^sub>1) &
                   (s ~: ?b --> s : ?P\<^sub>2)};
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P\<^sub>1 ?c\<^sub>1 ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P\<^sub>2 ?c\<^sub>2 ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P
       Cond ?b ?c\<^sub>1 ?c\<^sub>2 ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 10,
          template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 8),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 7),
                  template_var 0),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 10),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 9),
                     template_var 3),
                   template_var 0)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.Cond",
     "[| ?P <= {s. (s : ?b --> s : ?P\<^sub>1) &
                   (s ~: ?b --> s : ?P\<^sub>2)};
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P\<^sub>1 ?c\<^sub>1
              ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P\<^sub>2 ?c\<^sub>2
              ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               Cond ?b ?c\<^sub>1 ?c\<^sub>2 ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 10,
          template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 8),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 7),
                  template_var 0),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 10),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 9),
                     template_var 3),
                   template_var 0)),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartial.ProcRec1",
     "[| ALL Z.
            ?\<Gamma>,?\<Theta> Un (UN Z. {(?P Z, ?p, ?Q Z, ?A Z)})
               \<turnstile>\<^bsub>/?F \<^esub>(?P Z) the (?\<Gamma> ?p)
         (?Q Z),(?A Z);
         ?p : dom ?\<Gamma> |]
      ==> ALL Z.
             ?\<Gamma>,?\<Theta>
                \<turnstile>\<^bsub>/?F \<^esub>(?P Z) Call ?p (?Q Z),
          (?A Z)",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app (template_hole 1, template_var 6))
            )],
       template_predicate (template_app (template_hole 14, t_empty)))),
    ("HoareTotal.While",
     "[| ?P <= ?I;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ({\<sigma>} Int
                  ?I Int
                  ?b)
                 ?c ({t. (t, \<sigma>) : ?V} Int ?I),?A;
         ?I Int - ?b <= ?Q; wf ?V |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               whileAnno ?b ?I ?V ?c ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 9, template_var 8),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 8, template_var 8),
            template_app (template_hole 2, template_var 4)),
          template_var 0),
        template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 8),
                     template_var 2),
                   template_var 3)),
               template_var 0),
             template_var 1)
           ))),
    ("HoarePartial.ProcRecSpecs",
     "[| ALL (P, p, Q, A):?Specs.
            ?\<Gamma>,?\<Theta> Un ?Specs
               \<turnstile>\<^bsub>/?F \<^esub>P the (?\<Gamma> p) Q,A;
         ALL (P, p, Q, A):?Specs. p : dom ?\<Gamma> |]
      ==> ALL (P, p, Q, A):?Specs.
             ?\<Gamma>,?\<Theta>
                \<turnstile>\<^bsub>/?F \<^esub>P Call p Q,A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app (template_hole 8, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app (template_hole 8, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 9, template_var 3),
             template_app (template_hole 8, t_empty))
           ))),
    ("HoarePartialProps.LiberalConseq_sound",
     "ALL s:?P.
         ALL t.
            EX P' Q' A'.
               (ALL n. ?\<Gamma>,?\<Theta>|=n:/?F P' ?c Q',A') &
               ((s : P' --> t : Normal ` Q' Un Abrupt ` A') -->
                t : Normal ` ?Q Un Abrupt ` ?A) ==>
      ?\<Gamma>,?\<Theta>|=?n:/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 7), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 7, template_var 6),
                         template_var 5),
                       template_var 0),
                     template_var 4),
                   template_var 7),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotalDef.validtI",
     "[| !!s t.
            [| ?\<Gamma>\<turnstile> \<langle>?c,Normal
            s\<rangle> \<Rightarrow> t;
               s : ?P; t ~: Fault ` ?F |]
            ==> t : Normal ` ?Q Un Abrupt ` ?A;
         !!s. s : ?P ==> ?\<Gamma>\<turnstile>?c \<down> Normal s |]
      ==> ?\<Gamma>|=t/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 2),
                   template_var 3),
                 template_var 4),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.WhileNoGuard'",
     "[| ?P <= ?I;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ({\<sigma>} Int
                  ?I Int
                  ?b)
                 ?c ({t. (t, \<sigma>) : ?V} Int ?I),?A;
         ?I Int - ?b <= ?Q; wf ?V |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               whileAnno ?b ?I ?V (Seq ?c Skip) ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 9, template_var 8),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 10, template_var 8),
            template_app (template_hole 4, template_var 4)),
          template_var 0),
        template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 11, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 4),
                       template_var 8),
                     template_var 2),
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_hole 0))),
               template_var 0),
             template_var 1)
           ))),
    ("HoarePartialProps.ConseqMGT",
     "[| ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?P' Z) ?c (?Q' Z),(?A' Z);
         !!s. s : ?P ==>
              s : ?P' s &
              (ALL t. t : ?Q' s --> t : ?Q) &
              (ALL t. t : ?A' s --> t : ?A) |]
      ==> ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_var 5),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotalProps.ConseqMGT",
     "[| ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) ?c
                 (?Q' Z),(?A' Z);
         !!s. s : ?P ==>
              s : ?P' s &
              (ALL t. t : ?Q' s --> t : ?Q) &
              (ALL t. t : ?A' s --> t : ?A) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_var 5),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartial.WhileAnnoFix",
     "[| ?P <= {s. EX Z. s : ?I Z & ?I Z Int - ?b <= ?Q};
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?I Z Int ?b) ?c Z (?I Z),?A;
         ALL Z. ?c Z = ?c undefined |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P whileAnnoFix ?b ?I ?V ?c ?Q,
       ?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 9,
          template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 7),
                       template_var 8),
                     template_var 0),
                   template_var 2)),
               template_var 6),
             template_var 1)
           ))),
    ("HoarePartial.CondInv",
     "[| ?P <= ?Q;
         ?Q <= {s. (s : ?b --> s : ?P\<^sub>1) &
                   (s ~: ?b --> s : ?P\<^sub>2)};
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P\<^sub>1 ?c\<^sub>1 ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P\<^sub>2 ?c\<^sub>2 ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P
       Cond ?b ?c\<^sub>1 ?c\<^sub>2 ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 10, template_var 9),
        template_inequation
         (less_equals, template_var 9,
          template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 7),
                  template_var 2),
                template_var 9),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 6),
                  template_var 0),
                template_var 9),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 10),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 8),
                     template_var 2),
                   template_var 0)),
               template_var 9),
             template_var 1)
           ))),
    ("HoareTotal.CondInv",
     "[| ?P <= ?Q;
         ?Q <= {s. (s : ?b --> s : ?P\<^sub>1) &
                   (s ~: ?b --> s : ?P\<^sub>2)};
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P\<^sub>1 ?c\<^sub>1
              ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P\<^sub>2 ?c\<^sub>2
              ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               Cond ?b ?c\<^sub>1 ?c\<^sub>2 ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 10, template_var 9),
        template_inequation
         (less_equals, template_var 9,
          template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 7),
                  template_var 2),
                template_var 9),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 6),
                  template_var 0),
                template_var 9),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 10),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 8),
                     template_var 2),
                   template_var 0)),
               template_var 9),
             template_var 1)
           ))),
    ("HoareTotalProps.MGT_Call",
     "ALL p:dom ?\<Gamma>.
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> {s.
                  s = Z &
                  ?\<Gamma>\<turnstile> \<langle>Call
            p,Normal
               s\<rangle> \<Rightarrow>\<notin>{Stuck} Un Fault ` (- ?F) &
                  ?\<Gamma>\<turnstile>Call p \<down> Normal s}
                 Call p
                 {t. ?\<Gamma>\<turnstile> \<langle>Call
               p,Normal
                  Z\<rangle> \<Rightarrow> Normal
      t},{t. ?\<Gamma>\<turnstile> \<langle>Call
       p,Normal Z\<rangle> \<Rightarrow> Abrupt t}",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 19,
             template_app (template_hole 18, template_var 2)),
           t_empty)
         )),
    ("HoarePartial.LemAnno",
     "[| ?P <= {s. EX Z. s : ?P' Z &
                         (ALL t. t : ?Q' Z --> t : ?Q) &
                         (ALL t. t : ?A' Z --> t : ?A)};
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?P' Z) ?c (?Q' Z),(?A' Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P lem ?x ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 10,
          template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 10),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1)),
               template_var 7),
             template_var 5)
           ))),
    ("HoareTotal.LemAnno",
     "[| ?P <= {s. EX Z. s : ?P' Z &
                         (ALL t. t : ?Q' Z --> t : ?Q) &
                         (ALL t. t : ?A' Z --> t : ?A)};
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) ?c
                 (?Q' Z),(?A' Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P lem ?x ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 10,
          template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 10),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1)),
               template_var 7),
             template_var 5)
           ))),
    ("HoarePartial.SpecAnno",
     "[| ?P <= {s. EX Z. s : ?P' Z & ?Q' Z <= ?Q & ?A' Z <= ?A};
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?P' Z) ?c Z (?Q' Z),(?A' Z);
         ALL Z. ?c Z = ?c undefined |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P specAnno ?P' ?c ?Q' ?A' ?Q,
       ?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 9,
          template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 8),
                       template_var 0),
                     template_var 7),
                   template_var 5)),
               template_var 6),
             template_var 4)
           ))),
    ("HoareTotal.SpecAnno",
     "[| ?P <= {s. EX Z. s : ?P' Z & ?Q' Z <= ?Q & ?A' Z <= ?A};
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) ?c Z
                 (?Q' Z),(?A' Z);
         ALL Z. ?c Z = ?c undefined |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               specAnno ?P' ?c ?Q' ?A' ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 9,
          template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 8),
                       template_var 0),
                     template_var 7),
                   template_var 5)),
               template_var 6),
             template_var 4)
           ))),
    ("HoarePartialDef.cvalidD",
     "[| ?\<Gamma>,?\<Theta>|=/?F ?P ?c ?Q,?A;
         ALL (P, p, Q, A):?\<Theta>. ?\<Gamma>|=/?F P Call p Q,A;
         ?\<Gamma>\<turnstile> \<langle>?c,Normal
      ?s\<rangle> \<Rightarrow> ?t;
         ?s : ?P; ?t ~: Fault ` ?F |]
      ==> ?t : Normal ` ?Q Un Abrupt ` ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 16, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 7),
              template_app (template_hole 14, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 8),
                  template_var 4),
                template_app (template_hole 8, template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 5)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_var 6))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 0),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 8),
                   template_var 3)),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2)))
           ))),
    ("HoareTotalDef.cvalidt_postD",
     "[| ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A;
         ALL (P, p, Q, A):?\<Theta>. ?\<Gamma>|=t/?F P Call p Q,A;
         ?\<Gamma>\<turnstile> \<langle>?c,Normal
      ?s\<rangle> \<Rightarrow> ?t;
         ?s : ?P; ?t ~: Fault ` ?F |]
      ==> ?t : Normal ` ?Q Un Abrupt ` ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 16, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 7),
              template_app (template_hole 14, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 8),
                  template_var 4),
                template_app (template_hole 8, template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 5)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_var 6))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 0),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 8),
                   template_var 3)),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2)))
           ))),
    ("HoarePartial.SpecAnnoNoAbrupt",
     "[| ?P <= {s. EX Z. s : ?P' Z & (ALL t. t : ?Q' Z --> t : ?Q)};
         ALL Z. ?\<Gamma>,?\<Theta>|-/?F (?P' Z) ?c Z (?Q' Z);
         ALL Z. ?c Z = ?c undefined |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P specAnno ?P' ?c ?Q' (%s. {})
       ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 8,
          template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 8),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 7),
                       template_var 1),
                     template_var 6),
                   t_empty)),
               template_var 5),
             template_var 0)
           ))),
    ("HoareTotal.SpecAnnoNoAbrupt",
     "[| ?P <= {s. EX Z. s : ?P' Z & (ALL t. t : ?Q' Z --> t : ?Q)};
         ALL Z. ?\<Gamma>,?\<Theta>|-t/?F (?P' Z) ?c Z (?Q' Z);
         ALL Z. ?c Z = ?c undefined |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               specAnno ?P' ?c ?Q' (%s. {}) ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 8,
          template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 8),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 7),
                       template_var 1),
                     template_var 6),
                   t_empty)),
               template_var 5),
             template_var 0)
           ))),
    ("HoarePartial.switchCons",
     "[| ?P <= {s. (?v s : ?V --> s : ?P\<^sub>1) &
                   (?v s ~: ?V --> s : ?P\<^sub>2)};
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P\<^sub>1 ?c ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P\<^sub>2 switch ?v ?vs ?Q,
      ?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P switch ?v ((?V, ?c) # ?vs)
       ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 11,
          template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 8),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 7),
                  template_app
                   (template_app (template_hole 2, template_var 10),
                    template_var 0)),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 11),
                 template_app
                  (template_app (template_hole 2, template_var 10),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 9),
                         template_var 3)),
                     template_var 0))),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.switchCons",
     "[| ?P <= {s. (?v s : ?V --> s : ?P\<^sub>1) &
                   (?v s ~: ?V --> s : ?P\<^sub>2)};
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P\<^sub>1 ?c ?Q,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P\<^sub>2 switch ?v ?vs
              ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               switch ?v ((?V, ?c) # ?vs) ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 11,
          template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 8),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 7),
                  template_app
                   (template_app (template_hole 2, template_var 10),
                    template_var 0)),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 11),
                 template_app
                  (template_app (template_hole 2, template_var 10),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 9),
                         template_var 3)),
                     template_var 0))),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartialProps.LiberalConseq''",
     "[| ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?P' Z) ?c (?Q' Z),(?A' Z);
         ALL s t.
            (ALL Z. s : ?P' Z --> t : Normal ` ?Q' Z Un Abrupt ` ?A' Z) -->
            s : ?P --> t : Normal ` ?Q Un Abrupt ` ?A |]
      ==> ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_var 5),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartial.ProcModifyReturnNoAbrSameFaults",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P call ?init ?p ?return' ?c ?Q,
      ?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>|-/?F {\<sigma>} Call ?p (?Modif \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P call ?init ?p ?return ?c ?Q,
       ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_var 11),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 7, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 11),
                       template_var 10),
                     template_var 9),
                   template_var 8),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 7, template_var 7),
                       template_var 6),
                     template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoarePartial.ProcModifyReturnNoAbr",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P call ?init ?p ?return' ?c ?Q,
      ?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>
               |-/UNIV {\<sigma>} Call ?p (?Modif \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P call ?init ?p ?return ?c ?Q,
       ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 11),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 11),
                       template_var 10),
                     template_var 9),
                   template_var 8),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 7),
                       template_var 6),
                     template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoareTotal.ProcModifyReturnNoAbrSameFaults",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
              call ?init ?p ?return' ?c ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>|-/?F {\<sigma>} Call ?p (?Modif \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               call ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 11),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 11),
                       template_var 10),
                     template_var 9),
                   template_var 8),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 7),
                       template_var 6),
                     template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoareTotal.ProcModifyReturnNoAbr",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
              call ?init ?p ?return' ?c ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>
               |-/UNIV {\<sigma>} Call ?p (?Modif \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               call ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 11),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 11),
                       template_var 10),
                     template_var 9),
                   template_var 8),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 7),
                       template_var 6),
                     template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoarePartialDef.cnvalidD",
     "[| ?\<Gamma>,?\<Theta>|=?n:/?F ?P ?c ?Q,?A;
         ALL (P, p, Q, A):?\<Theta>. ?\<Gamma>|=?n:/?F P Call p Q,A;
         ?\<Gamma>\<turnstile> \<langle>?c,Normal
      ?s\<rangle> =?n\<Rightarrow> ?t;
         ?s : ?P; ?t ~: Fault ` ?F |]
      ==> ?t : Normal ` ?Q Un Abrupt ` ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 16, template_var 9),
                          template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 8),
              template_app (template_hole 14, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 9),
                    template_var 4),
                  template_app (template_hole 8, template_var 1)),
                template_var 7),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 5)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_var 6))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 0),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 8),
                   template_var 3)),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2)))
           ))),
    ("HoarePartialDef.cvalidI",
     "(!!s t.
          [| ALL (P, p, Q, A):?\<Theta>. ?\<Gamma>|=/?F P Call p Q,A;
             ?\<Gamma>\<turnstile> \<langle>?c,Normal
          s\<rangle> \<Rightarrow> t;
             s : ?P; t ~: Fault ` ?F |]
          ==> t : Normal ` ?Q Un Abrupt ` ?A) ==>
      ?\<Gamma>,?\<Theta>|=/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 19, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 6),
                     template_var 4),
                   template_var 2),
                 template_var 3),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartialProps.MGT_implies_complete",
     "[| ALL Z.
            ?\<Gamma>
               |-/?F {s. s = Z &
                         ?\<Gamma>\<turnstile> \<langle>?c,Normal
                      s\<rangle> \<Rightarrow>\<notin>{Stuck} Un
                Fault ` (- ?F)}
                     ?c {t. ?\<Gamma>\<turnstile> \<langle>?c,Normal
                         Z\<rangle> \<Rightarrow> Normal t},
                     {t. ?\<Gamma>\<turnstile> \<langle>?c,Normal
                      Z\<rangle> \<Rightarrow> Abrupt t};
         ?\<Gamma>|=/?F ?P ?c ?Q,?A |]
      ==> ?\<Gamma>|-/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 0, template_var 5),
                      template_var 4),
                    template_var 2),
                  template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 16, template_var 5),
                       template_hole 15),
                     template_var 4),
                   template_var 2),
                 template_var 3),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartial.CondInv'",
     "[| ?P <= ?I;
         ?I <= {s. (s : ?b --> s : ?P\<^sub>1) &
                   (s ~: ?b --> s : ?P\<^sub>2)};
         ?I <= ?Q;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P\<^sub>1 ?c\<^sub>1 ?I,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P\<^sub>2 ?c\<^sub>2 ?I,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P
       Cond ?b ?c\<^sub>1 ?c\<^sub>2 ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 11, template_var 10),
        template_inequation
         (less_equals, template_var 10,
          template_app (template_hole 6, t_empty)),
        template_inequation (less_equals, template_var 10, template_var 6),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 8),
                  template_var 2),
                template_var 10),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 7),
                  template_var 0),
                template_var 10),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 11),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 9),
                     template_var 2),
                   template_var 0)),
               template_var 6),
             template_var 1)
           ))),
    ("HoareTotal.CondInv'",
     "[| ?P <= ?I;
         ?I <= {s. (s : ?b --> s : ?P\<^sub>1) &
                   (s ~: ?b --> s : ?P\<^sub>2)};
         ?I <= ?Q;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P\<^sub>1 ?c\<^sub>1
              ?I,?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P\<^sub>2 ?c\<^sub>2
              ?I,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               Cond ?b ?c\<^sub>1 ?c\<^sub>2 ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 11, template_var 10),
        template_inequation
         (less_equals, template_var 10,
          template_app (template_hole 6, t_empty)),
        template_inequation (less_equals, template_var 10, template_var 6),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 8),
                  template_var 2),
                template_var 10),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 7),
                  template_var 0),
                template_var 10),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 11),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 9),
                     template_var 2),
                   template_var 0)),
               template_var 6),
             template_var 1)
           ))),
    ("HoarePartial.WhileAnnoFix'",
     "[| ?P <= {s. EX Z. s : ?I Z & (ALL t. t : ?I Z Int - ?b --> t : ?Q)};
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?I Z Int ?b) ?c Z (?I Z),?A;
         ALL Z. ?c Z = ?c undefined |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P whileAnnoFix ?b ?I ?V ?c ?Q,
       ?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 9,
          template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 7),
                       template_var 8),
                     template_var 0),
                   template_var 2)),
               template_var 6),
             template_var 1)
           ))),
    ("HoarePartial.ProcDynModifyReturnNoAbrSameFaults",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P dynCall ?init ?p ?return' ?c
      ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s:?P.
            ALL \<sigma>.
               ?\<Gamma>,?\<Theta>
                  |-/?F {\<sigma>} Call (?p s) (?Modif \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P dynCall ?init ?p ?return ?c
       ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 11),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 8), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 11),
                       template_var 10),
                     template_var 9),
                   template_var 8),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 7),
                       template_var 6),
                     template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoarePartial.DynProcModifyReturnNoAbr",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P dynCall ?init ?p ?return' ?c
      ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s:?P.
            ALL \<sigma>.
               ?\<Gamma>,?\<Theta>
                  |-/UNIV {\<sigma>} Call (?p s) (?Modif \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P dynCall ?init ?p ?return ?c
       ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 11),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 8), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 11),
                       template_var 10),
                     template_var 9),
                   template_var 8),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 7),
                       template_var 6),
                     template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoareTotal.ProcDynModifyReturnNoAbrSameFaults",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
              dynCall ?init ?p ?return' ?c ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s:?P.
            ALL \<sigma>.
               ?\<Gamma>,?\<Theta>
                  |-/?F {\<sigma>} Call (?p s) (?Modif \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 11),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 8), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 11),
                       template_var 10),
                     template_var 9),
                   template_var 8),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 7),
                       template_var 6),
                     template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoareTotal.DynProcModifyReturnNoAbr",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
              dynCall ?init ?p ?return' ?c ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s:?P.
            ALL \<sigma>.
               ?\<Gamma>,?\<Theta>
                  |-/UNIV {\<sigma>} Call (?p s) (?Modif \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 11, template_var 11),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 8), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 11, template_var 11),
                       template_var 10),
                     template_var 9),
                   template_var 8),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 7),
                       template_var 6),
                     template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoarePartialDef.cnvalidI",
     "(!!s t.
          [| ALL (P, p, Q, A):?\<Theta>. ?\<Gamma>|=?n:/?F P Call p Q,A;
             ?\<Gamma>\<turnstile> \<langle>?c,Normal
          s\<rangle> =?n\<Rightarrow> t;
             s : ?P; t ~: Fault ` ?F |]
          ==> t : Normal ` ?Q Un Abrupt ` ?A) ==>
      ?\<Gamma>,?\<Theta>|=?n:/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 19, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 7),
                       template_var 5),
                     template_var 4),
                   template_var 2),
                 template_var 3),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.WhileInvPost",
     "[| ?P <= ?I;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/UNIV\<^esub> ({\<sigma>} Int
                    ?I Int
                    ?b)
                   ?c ({t. (t, \<sigma>) : ?V} Int ?P),?A;
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>(?I Int ?b) ?c ?I,?A;
         ?I Int - ?b <= ?Q; wf ?V |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               whileAnno ?b ?I ?V ?c ?Q,?A",
     template_implication
      ([template_inequation (less_equals, template_var 9, template_var 8),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 7),
                        template_var 6),
                      template_var 1),
                    template_app
                     (template_app (template_hole 9, template_var 8),
                      template_var 5)),
                  template_var 4),
                template_var 8),
              template_var 2)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 9, template_var 8),
            template_app (template_hole 2, template_var 5)),
          template_var 0),
        template_predicate
         (template_app (template_hole 1, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 11, template_var 7),
                       template_var 6),
                     template_var 1),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 8),
                     template_var 3),
                   template_var 4)),
               template_var 0),
             template_var 2)
           ))),
    ("HoarePartial.Block",
     "[| ?P <= {s. ?init s : ?P' s};
         ALL s.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?P' s) ?bdy
         {t. ?return s t : ?R s t},{t. ?return s t : ?A};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?R s t) ?c s t ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P block ?init ?bdy ?return ?c
       ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 11,
          template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 11),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 10),
                       template_var 5),
                     template_var 4),
                   template_var 1)),
               template_var 0),
             template_var 2)
           ))),
    ("HoareTotal.Block",
     "[| ?P <= {s. ?init s : ?P' s};
         ALL s.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' s) ?bdy
                 {t. ?return s t : ?R s t},{t. ?return s t : ?A};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?R s t) ?c s t
                 ?Q,?A |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               block ?init ?bdy ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 11,
          template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 11),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 10),
                       template_var 5),
                     template_var 4),
                   template_var 1)),
               template_var 0),
             template_var 2)
           ))),
    ("HoarePartial.BlockSwap",
     "[| ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?R s t) ?c s t ?Q,?A;
         ALL s.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?P' s) ?bdy
         {t. ?return s t : ?R s t},{t. ?return s t : ?A};
         ?P <= {s. ?init s : ?P' s} |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P block ?init ?bdy ?return ?c
       ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 11),
                       template_var 10),
                     template_var 9),
                   template_var 1),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 3),
                     template_var 2),
                   template_var 7)),
               template_var 6),
             template_var 5)
           ))),
    ("HoareTotal.BlockSwap",
     "[| ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?R s t) ?c s t
                 ?Q,?A;
         ALL s.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' s) ?bdy
                 {t. ?return s t : ?R s t},{t. ?return s t : ?A};
         ?P <= {s. ?init s : ?P' s} |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               block ?init ?bdy ?return ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 11),
                       template_var 10),
                     template_var 9),
                   template_var 1),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 3),
                     template_var 2),
                   template_var 7)),
               template_var 6),
             template_var 5)
           ))),
    ("HoareTotalProps.MGT_implies_complete",
     "[| ALL Z.
            ?\<Gamma>
               |-t/?F {s. s = Z &
                          ?\<Gamma>\<turnstile> \<langle>?c,Normal
                       s\<rangle> \<Rightarrow>\<notin>{Stuck} Un
                 Fault ` (- ?F) &
                          ?\<Gamma>\<turnstile>?c \<down> Normal s}
                      ?c {t. ?\<Gamma>\<turnstile> \<langle>?c,Normal
                          Z\<rangle> \<Rightarrow> Normal t},
                      {t. ?\<Gamma>\<turnstile> \<langle>?c,Normal
                       Z\<rangle> \<Rightarrow> Abrupt t};
         ?\<Gamma>|=t/?F ?P ?c ?Q,?A |]
      ==> ?\<Gamma>|-t/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 0, template_var 5),
                      template_var 4),
                    template_var 2),
                  template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 17, template_var 5),
                       template_hole 16),
                     template_var 4),
                   template_var 2),
                 template_var 3),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartial.SpecAnno'",
     "[| ?P <= {s. EX Z. s : ?P' Z &
                         (ALL t. t : ?Q' Z --> t : ?Q) &
                         (ALL t. t : ?A' Z --> t : ?A)};
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?P' Z) ?c Z (?Q' Z),(?A' Z);
         ALL Z. ?c Z = ?c undefined |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P specAnno ?P' ?c ?Q' ?A' ?Q,
       ?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 9,
          template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 8),
                       template_var 0),
                     template_var 7),
                   template_var 5)),
               template_var 6),
             template_var 4)
           ))),
    ("HoareTotal.SpecAnno'",
     "[| ?P <= {s. EX Z. s : ?P' Z &
                         (ALL t. t : ?Q' Z --> t : ?Q) &
                         (ALL t. t : ?A' Z --> t : ?A)};
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) ?c Z
                 (?Q' Z),(?A' Z);
         ALL Z. ?c Z = ?c undefined |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               specAnno ?P' ?c ?Q' ?A' ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 9,
          template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 8),
                       template_var 0),
                     template_var 7),
                   template_var 5)),
               template_var 6),
             template_var 4)
           ))),
    ("HoarePartial.ProcRec",
     "[| ALL p:?Procs.
            ALL Z.
               ?\<Gamma>,?\<Theta> Un
                         (UN p:?Procs. UN Z. {(?P p Z, p, ?Q p Z, ?A p Z)})
                  \<turnstile>\<^bsub>/?F \<^esub>(?P p Z) the (?\<Gamma> p)
            (?Q p Z),(?A p Z);
         ?Procs <= dom ?\<Gamma> |]
      ==> ALL p:?Procs.
             ALL Z.
                ?\<Gamma>,?\<Theta>
                   \<turnstile>\<^bsub>/?F \<^esub>(?P p Z) Call p (?Q p Z),
             (?A p Z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 6), t_empty)
            ),
        template_inequation
         (less_equals, template_var 6,
          template_app (template_hole 1, template_var 5))],
       template_predicate
        (
           template_app
            (template_app (template_hole 16, template_var 6), t_empty)
           ))),
    ("HoarePartialDef.CallRec'",
     "[| ?p : ?Procs; ?Procs <= dom ?\<Gamma>;
         ALL p:?Procs.
            ALL Z.
               ?\<Gamma>,?\<Theta> Un
                         (UN p:?Procs. UN Z. {(?P p Z, p, ?Q p Z, ?A p Z)})
                  \<turnstile>\<^bsub>/?F \<^esub>(?P p Z) the (?\<Gamma> p)
            (?Q p Z),(?A p Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>(?P ?p ?Z) Call ?p (?Q ?p ?Z),
       (?A ?p ?Z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 8),
              template_var 7)
            ),
        template_inequation
         (less_equals, template_var 7,
          template_app (template_hole 15, template_var 6)),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 7), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 12, template_var 6),
                       template_var 5),
                     template_var 1),
                   template_app
                    (template_app (template_var 4, template_var 8),
                     template_var 0)),
                 template_app (template_hole 0, template_var 8)),
               template_app
                (template_app (template_var 3, template_var 8),
                 template_var 0)),
             template_app
              (template_app (template_var 2, template_var 8),
               template_var 0))
           ))),
    ("HoarePartial.ProcSpecNoAbrupt",
     "[| ?P <= {s. EX Z. ?init s : ?P' Z &
                         (ALL t. t : ?Q' Z --> ?return s t : ?R s t)};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?R s t) ?c s t ?Q,?A;
         ALL Z. ?\<Gamma>,?\<Theta>|-/?F (?P' Z) Call ?p (?Q' Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P call ?init ?p ?return ?c ?Q,
       ?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 12,
          template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 12),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 11),
                       template_var 0),
                     template_var 8),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoareTotal.ProcSpecNoAbrupt",
     "[| ?P <= {s. EX Z. ?init s : ?P' Z &
                         (ALL t. t : ?Q' Z --> ?return s t : ?R s t)};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?R s t) ?c s t
                 ?Q,?A;
         ALL Z. ?\<Gamma>,?\<Theta>|-t/?F (?P' Z) Call ?p (?Q' Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               call ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 12,
          template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 12),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 11),
                       template_var 0),
                     template_var 8),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("HoarePartial.ProcProcParModifyReturnNoAbrSameFaults",
     "[| ?P <= {s. ?p s = ?q} Int ?P';
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P' dynCall ?init ?p ?return' ?c
      ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>|-/?F {\<sigma>} Call ?q (?Modif \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P dynCall ?init ?p ?return ?c
       ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 13,
          template_app
           (template_app
             (template_hole 11, template_app (template_hole 10, t_empty)),
            template_var 10)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 10),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 7, template_var 6),
                        template_var 12),
                      template_var 5),
                    template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 13),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 7, template_var 6),
                       template_var 12),
                     template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoarePartial.ProcProcParModifyReturnNoAbr",
     "[| ?P <= {s. ?p s = ?q} Int ?P';
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P' dynCall ?init ?p ?return' ?c
      ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>
               |-/UNIV {\<sigma>} Call ?q (?Modif \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P dynCall ?init ?p ?return ?c
       ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 13,
          template_app
           (template_app
             (template_hole 12, template_app (template_hole 11, t_empty)),
            template_var 10)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 10),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_var 6),
                        template_var 12),
                      template_var 5),
                    template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 13),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 6),
                       template_var 12),
                     template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoareTotal.ProcProcParModifyReturnNoAbrSameFaults",
     "[| ?P <= {s. ?p s = ?q} Int ?P';
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P'
              dynCall ?init ?p ?return' ?c ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>|-/?F {\<sigma>} Call ?q (?Modif \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 13,
          template_app
           (template_app
             (template_hole 12, template_app (template_hole 11, t_empty)),
            template_var 10)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 10),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_var 6),
                        template_var 12),
                      template_var 5),
                    template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 13),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 6),
                       template_var 12),
                     template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoareTotal.ProcProcParModifyReturnNoAbr",
     "[| ?P <= {s. ?p s = ?q} Int ?P';
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P'
              dynCall ?init ?p ?return' ?c ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>
               |-/UNIV {\<sigma>} Call ?q (?Modif \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 13,
          template_app
           (template_app
             (template_hole 13, template_app (template_hole 12, t_empty)),
            template_var 10)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 10),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 6),
                        template_var 12),
                      template_var 5),
                    template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 13),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 6),
                       template_var 12),
                     template_var 0),
                   template_var 4)),
               template_var 3),
             template_var 2)
           ))),
    ("HoarePartial.CallBody",
     "[| ?P <= {s. ?init s : ?P' s};
         ALL s.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?P' s) ?body
         {t. ?return s t : ?R s t},{t. ?return s t : ?A};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?R s t) ?c s t ?Q,?A;
         ?\<Gamma> ?p = Some ?body |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P call ?init ?p ?return ?c ?Q,
       ?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 12,
          template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_equation
         (template_app (template_var 9, template_var 0),
          template_app (template_hole 1, template_var 6))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 12),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 11),
                       template_var 0),
                     template_var 5),
                   template_var 2)),
               template_var 1),
             template_var 3)
           ))),
    ("HoareTotal.CallBody",
     "[| ?P <= {s. ?init s : ?P' s};
         ALL s.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' s) ?body
                 {t. ?return s t : ?R s t},{t. ?return s t : ?A};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?R s t) ?c s t
                 ?Q,?A;
         ?\<Gamma> ?p = Some ?body |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               call ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 12,
          template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_equation
         (template_app (template_var 9, template_var 0),
          template_app (template_hole 1, template_var 6))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 12),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 11),
                       template_var 0),
                     template_var 5),
                   template_var 2)),
               template_var 1),
             template_var 3)
           ))),
    ("HoareTotal.ProcRec1",
     "[| ALL \<sigma> Z.
            ?\<Gamma>,?\<Theta> Un
                      (UN Z. {(?P Z Int {s. ((s, ?p), \<sigma>, ?p) : ?r},
                               ?p, ?Q Z, ?A Z)})
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ({\<sigma>} Int ?P Z)
                 the (?\<Gamma> ?p) (?Q Z),(?A Z);
         wf ?r; ?p : dom ?\<Gamma> |]
      ==> ALL Z.
             ?\<Gamma>,?\<Theta>
                \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P Z) Call ?p
                  (?Q Z),(?A Z)",
     template_implication
      ([template_predicate (template_app (template_hole 23, t_empty)),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app (template_hole 1, template_var 7))
            )],
       template_predicate (template_app (template_hole 22, t_empty)))),
    ("HoarePartial.ProcRec'",
     "[| ?\<Theta>' =
         ?\<Theta> Un (UN p:?Procs. UN Z. {(?P p Z, p, ?Q p Z, ?A p Z)});
         ALL p:?Procs.
            ALL Z.
               ?\<Gamma>,?\<Theta>'
                  \<turnstile>\<^bsub>/?F \<^esub>(?P p Z) the (?\<Gamma> p)
            (?Q p Z),(?A p Z);
         ?Procs <= dom ?\<Gamma> |]
      ==> ALL p:?Procs.
             ALL Z.
                ?\<Gamma>,?\<Theta>
                   \<turnstile>\<^bsub>/?F \<^esub>(?P p Z) Call p (?Q p Z),
             (?A p Z)",
     template_implication
      ([template_equation
         (template_var 7,
          template_app
           (template_app (template_hole 16, template_var 6),
            template_app
             (template_hole 15,
              template_app
               (template_app (template_hole 14, t_empty),
                template_var 2)))),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2), t_empty)
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 2), t_empty)
           ))),
    ("HoarePartial.DynProcProcParNoAbrupt",
     "[| ?P <= {s. ?p s = ?q &
                   (EX Z. ?init s : ?P' Z &
                          (ALL \<tau>.
                              \<tau> : ?Q' Z -->
                              ?return s \<tau> : ?R s \<tau>))};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?R s t) ?c s t ?Q,?A;
         ALL Z. ?\<Gamma>,?\<Theta>|-/?F (?P' Z) Call ?q (?Q' Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P dynCall ?init ?p ?return ?c
       ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 13,
          template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 13),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 10),
                       template_var 12),
                     template_var 7),
                   template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.DynProcProcParNoAbrupt",
     "[| ?P <= {s. ?p s = ?q &
                   (EX Z. ?init s : ?P' Z &
                          (ALL \<tau>.
                              \<tau> : ?Q' Z -->
                              ?return s \<tau> : ?R s \<tau>))};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?R s t) ?c s t
                 ?Q,?A;
         ALL Z. ?\<Gamma>,?\<Theta>|-t/?F (?P' Z) Call ?q (?Q' Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 13,
          template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 13),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 10),
                       template_var 12),
                     template_var 7),
                   template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("HoareTotal.WhileAnnoFix",
     "[| ?P <= {s. EX Z. s : ?I Z & ?I Z Int - ?b <= ?Q};
         ALL Z \<sigma>.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ({\<sigma>} Int
                  ?I Z Int
                  ?b)
                 ?c Z ({t. (t, \<sigma>) : ?V Z} Int ?I Z),?A;
         ALL Z. ?c Z = ?c undefined; ALL Z. wf (?V Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               whileAnnoFix ?b ?I ?V ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 9,
          template_app (template_hole 16, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 7),
                       template_var 8),
                     template_var 1),
                   template_var 2)),
               template_var 6),
             template_var 0)
           ))),
    ("HoarePartial.ProcSpec'",
     "[| ?P <= {s. EX Z. ?init s : ?P' Z &
                         (ALL t:?Q' Z. ?return s t : ?R s t) &
                         (ALL t:?A' Z. ?return s t : ?A)};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?R s t) ?c s t ?Q,?A;
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?P' Z) Call ?p (?Q' Z),
         (?A' Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P call ?init ?p ?return ?c ?Q,
       ?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 13,
          template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 13),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 12),
                       template_var 0),
                     template_var 9),
                   template_var 2)),
               template_var 1),
             template_var 6)
           ))),
    ("HoareTotal.ProcSpec'",
     "[| ?P <= {s. EX Z. ?init s : ?P' Z &
                         (ALL t:?Q' Z. ?return s t : ?R s t) &
                         (ALL t:?A' Z. ?return s t : ?A)};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?R s t) ?c s t
                 ?Q,?A;
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) Call ?p
                 (?Q' Z),(?A' Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               call ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 13,
          template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 13),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 12),
                       template_var 0),
                     template_var 9),
                   template_var 2)),
               template_var 1),
             template_var 6)
           ))),
    ("HoarePartial.ProcRecList",
     "[| ALL p:set ?Procs.
            ALL Z.
               ?\<Gamma>,?\<Theta> Un
                         (UN p:set ?Procs.
                             UN Z. {(?P p Z, p, ?Q p Z, ?A p Z)})
                  \<turnstile>\<^bsub>/?F \<^esub>(?P p Z) the (?\<Gamma> p)
            (?Q p Z),(?A p Z);
         distinct ?Procs; set ?Procs <= dom ?\<Gamma> |]
      ==> ALL p:set ?Procs.
             ALL Z.
                ?\<Gamma>,?\<Theta>
                   \<turnstile>\<^bsub>/?F \<^esub>(?P p Z) Call p (?Q p Z),
             (?A p Z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app (template_hole 17, template_var 6)),
              t_empty)
            ),
        template_predicate (template_app (template_hole 3, template_var 6)),
        template_inequation
         (less_equals, template_app (template_hole 17, template_var 6),
          template_app (template_hole 1, template_var 5))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 18,
               template_app (template_hole 17, template_var 6)),
             t_empty)
           ))),
    ("HoarePartial.ProcModifyReturnSameFaults",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P call ?init ?p ?return' ?c ?Q,
      ?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>{\<sigma>} Call ?p
         (?Modif \<sigma>),(?ModifAbr \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P call ?init ?p ?return ?c ?Q,
       ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_var 12),
                        template_var 11),
                      template_var 10),
                    template_var 9),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 7, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 12),
                       template_var 11),
                     template_var 10),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 7, template_var 8),
                       template_var 7),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoarePartial.ProcModifyReturn",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P call ?init ?p ?return' ?c ?Q,
      ?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/UNIV \<^esub>{\<sigma>} Call ?p
           (?Modif \<sigma>),(?ModifAbr \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P call ?init ?p ?return ?c ?Q,
       ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 12),
                        template_var 11),
                      template_var 10),
                    template_var 9),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 12),
                       template_var 11),
                     template_var 10),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 8),
                       template_var 7),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotalProps.ProcModifyReturnSameFaults_sound",
     "[| ?\<Gamma>,?\<Theta>|=t/?F  ?P call ?init ?p ?return' ?c ?Q,?A;
         ALL \<sigma>. ?\<Gamma>,?\<Theta>|=/?F
            {\<sigma>} Call ?p (?Modif \<sigma>),(?ModifAbr \<sigma>);
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t |]
      ==> ?\<Gamma>,?\<Theta>|=t/?F  ?P call ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 12),
                        template_var 11),
                      template_var 10),
                    template_var 9),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 12),
                       template_var 11),
                     template_var 10),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 8),
                       template_var 7),
                     template_var 0),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotalProps.ProcModifyReturn_sound",
     "[| ?\<Gamma>,?\<Theta>|=t/?F  ?P call ?init ?p ?return' ?c ?Q,?A;
         ALL \<sigma>. ?\<Gamma>,?\<Theta>|=/UNIV
            {\<sigma>} Call ?p (?Modif \<sigma>),(?ModifAbr \<sigma>);
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t |]
      ==> ?\<Gamma>,?\<Theta>|=t/?F  ?P call ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 12),
                        template_var 11),
                      template_var 10),
                    template_var 9),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 12),
                       template_var 11),
                     template_var 10),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 8),
                       template_var 7),
                     template_var 0),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotal.ProcModifyReturnSameFaults",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
              call ?init ?p ?return' ?c ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>{\<sigma>} Call ?p
         (?Modif \<sigma>),(?ModifAbr \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               call ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 12),
                        template_var 11),
                      template_var 10),
                    template_var 9),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 12),
                       template_var 11),
                     template_var 10),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 8),
                       template_var 7),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotal.ProcModifyReturn",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
              call ?init ?p ?return' ?c ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/UNIV \<^esub>{\<sigma>} Call ?p
           (?Modif \<sigma>),(?ModifAbr \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               call ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 12),
                        template_var 11),
                      template_var 10),
                    template_var 9),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 12),
                       template_var 11),
                     template_var 10),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 8),
                       template_var 7),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoarePartialProps.dynProcModifyReturnSameFaults",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P dynCall ?init ?p ?return' ?c
      ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t;
         ALL s:?P.
            ALL \<sigma>.
               ?\<Gamma>,?\<Theta>
                  \<turnstile>\<^bsub>/?F \<^esub>{\<sigma>} Call (?p s)
            (?Modif \<sigma>),(?ModifAbr \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P dynCall ?init ?p ?return ?c
       ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 12),
                        template_var 11),
                      template_var 10),
                    template_var 9),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 9), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 12),
                       template_var 11),
                     template_var 10),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 8),
                       template_var 7),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoarePartialProps.dynProcModifyReturn",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P dynCall ?init ?p ?return' ?c
      ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t;
         ALL s:?P.
            ALL \<sigma>.
               ?\<Gamma>,?\<Theta>
                  \<turnstile>\<^bsub>/UNIV \<^esub>{\<sigma>} Call (?p s)
              (?Modif \<sigma>),(?ModifAbr \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P dynCall ?init ?p ?return ?c
       ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 12),
                        template_var 11),
                      template_var 10),
                    template_var 9),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 9), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 12),
                       template_var 11),
                     template_var 10),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 8),
                       template_var 7),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotalProps.dynProcModifyReturnSameFaults_sound",
     "[| ?\<Gamma>,?\<Theta>|=t/?F  ?P dynCall ?init ?p ?return' ?c ?Q,?A;
         ALL s:?P.
            ALL \<sigma>. ?\<Gamma>,?\<Theta>|=/?F
               {\<sigma>} Call
                           (?p s) (?Modif \<sigma>),(?ModifAbr \<sigma>);
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t |]
      ==> ?\<Gamma>,?\<Theta>|=t/?F  ?P dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 12),
                        template_var 11),
                      template_var 10),
                    template_var 9),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 9), t_empty)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 12),
                       template_var 11),
                     template_var 10),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 8),
                       template_var 7),
                     template_var 0),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotalProps.dynProcModifyReturn_sound",
     "[| ?\<Gamma>,?\<Theta>|=t/?F  ?P dynCall ?init ?p ?return' ?c ?Q,?A;
         ALL s:?P.
            ALL \<sigma>. ?\<Gamma>,?\<Theta>|=/UNIV
               {\<sigma>} Call
                           (?p s) (?Modif \<sigma>),(?ModifAbr \<sigma>);
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t |]
      ==> ?\<Gamma>,?\<Theta>|=t/?F  ?P dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 11, template_var 12),
                        template_var 11),
                      template_var 10),
                    template_var 9),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 9), t_empty)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 11, template_var 12),
                       template_var 11),
                     template_var 10),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 8),
                       template_var 7),
                     template_var 0),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotalProps.dynProcModifyReturnSameFaults",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
              dynCall ?init ?p ?return' ?c ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t;
         ALL s:?P.
            ALL \<sigma>.
               ?\<Gamma>,?\<Theta>
                  \<turnstile>\<^bsub>/?F \<^esub>{\<sigma>} Call (?p s)
            (?Modif \<sigma>),(?ModifAbr \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 12),
                        template_var 11),
                      template_var 10),
                    template_var 9),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 9), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 12),
                       template_var 11),
                     template_var 10),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 8),
                       template_var 7),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotalProps.dynProcModifyReturn",
     "[| ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
              dynCall ?init ?p ?return' ?c ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t;
         ALL s:?P.
            ALL \<sigma>.
               ?\<Gamma>,?\<Theta>
                  \<turnstile>\<^bsub>/UNIV \<^esub>{\<sigma>} Call (?p s)
              (?Modif \<sigma>),(?ModifAbr \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 11, template_var 12),
                        template_var 11),
                      template_var 10),
                    template_var 9),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 9), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 11, template_var 12),
                       template_var 11),
                     template_var 10),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 8),
                       template_var 7),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotalDef.Spec_wf_conv",
     "(%(P, q, Q, A). (P Int {s. ((s, q), ?\<tau>, ?p) : ?r}, q, Q, A)) `
      (UN p:?Procs. UN Z. {(?P p Z, p, ?Q p Z, ?A p Z)}) =
      (UN q:?Procs.
          UN Z. {(?P q Z Int {s. ((s, q), ?\<tau>, ?p) : ?r}, q, ?Q q Z,
                  ?A q Z)})",
     template_equation
      (template_app
        (template_app
          (template_hole 18, template_app (template_hole 17, t_empty)),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty), template_var 0))),
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty), template_var 0)))),
    ("HoarePartial.BlockSpec",
     "[| ?P <= {s. EX Z. ?init s : ?P' Z &
                         (ALL t. t : ?Q' Z --> ?return s t : ?R s t) &
                         (ALL t. t : ?A' Z --> ?return s t : ?A)};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?R s t) ?c s t ?Q,?A;
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?P' Z) ?bdy (?Q' Z),
         (?A' Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P block ?init ?bdy ?return ?c
       ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 13,
          template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 13),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 12),
                       template_var 0),
                     template_var 9),
                   template_var 2)),
               template_var 1),
             template_var 6)
           ))),
    ("HoareTotal.BlockSpec",
     "[| ?P <= {s. EX Z. ?init s : ?P' Z &
                         (ALL t. t : ?Q' Z --> ?return s t : ?R s t) &
                         (ALL t. t : ?A' Z --> ?return s t : ?A)};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?R s t) ?c s t
                 ?Q,?A;
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) ?bdy
                 (?Q' Z),(?A' Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               block ?init ?bdy ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 13,
          template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 13),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 12),
                       template_var 0),
                     template_var 9),
                   template_var 2)),
               template_var 1),
             template_var 6)
           ))),
    ("HoareTotal.WhileAnnoFix'",
     "[| ?P <= {s. EX Z. s : ?I Z & (ALL t. t : ?I Z Int - ?b --> t : ?Q)};
         ALL Z \<sigma>.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ({\<sigma>} Int
                  ?I Z Int
                  ?b)
                 ?c Z ({t. (t, \<sigma>) : ?V Z} Int ?I Z),?A;
         ALL Z. ?c Z = ?c undefined; ALL Z. wf (?V Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               whileAnnoFix ?b ?I ?V ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 9,
          template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 9),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 7),
                       template_var 8),
                     template_var 1),
                   template_var 2)),
               template_var 6),
             template_var 0)
           ))),
    ("HoarePartialProps.MGT_implies_complete'",
     "[| ALL Z.
            ?\<Gamma>
               |-/?F {s. s = Z &
                         ?\<Gamma>\<turnstile> \<langle>?c,Normal
                      s\<rangle> \<Rightarrow>\<notin>{Stuck} Un
                Fault ` (- ?F)}
                     ?c {t. ?\<Gamma>\<turnstile> \<langle>?c,Normal
                         Z\<rangle> \<Rightarrow> Normal t},
                     {t. ?\<Gamma>\<turnstile> \<langle>?c,Normal
                      Z\<rangle> \<Rightarrow> Abrupt t};
         ?\<Gamma>|=/?F ?P ?c ?Q,?A |]
      ==> ?\<Gamma>
             |-/?F {s. s = ?Z & s : ?P} ?c {t. ?Z : ?P --> t : ?Q},
                   {t. ?Z : ?P --> t : ?A}",
     template_implication
      ([template_predicate (template_app (template_hole 19, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 6),
                      template_var 5),
                    template_var 3),
                  template_var 4),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 18, template_var 6),
                       template_hole 17),
                     template_var 5),
                   template_app (template_hole 16, t_empty)),
                 template_var 4),
               template_app (template_hole 16, t_empty)),
             template_app (template_hole 16, t_empty))
           ))),
    ("HoarePartial.ProcSpec",
     "[| ?P <= {s. EX Z. ?init s : ?P' Z &
                         (ALL t. t : ?Q' Z --> ?return s t : ?R s t) &
                         (ALL t. t : ?A' Z --> ?return s t : ?A)};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?R s t) ?c s t ?Q,?A;
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?P' Z) Call ?p (?Q' Z),
         (?A' Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P call ?init ?p ?return ?c ?Q,
       ?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 13,
          template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 13),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 12),
                       template_var 0),
                     template_var 9),
                   template_var 2)),
               template_var 1),
             template_var 6)
           ))),
    ("HoareTotal.ProcSpec",
     "[| ?P <= {s. EX Z. ?init s : ?P' Z &
                         (ALL t. t : ?Q' Z --> ?return s t : ?R s t) &
                         (ALL t. t : ?A' Z --> ?return s t : ?A)};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?R s t) ?c s t
                 ?Q,?A;
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) Call ?p
                 (?Q' Z),(?A' Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               call ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 13,
          template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 13),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 12),
                       template_var 0),
                     template_var 9),
                   template_var 2)),
               template_var 1),
             template_var 6)
           ))),
    ("HoarePartialProps.ProcModifyReturnSameFaults_sound",
     "[| ALL n. ?\<Gamma>,?\<Theta>|=n:/?F
            ?P call ?init ?p ?return' ?c ?Q,?A;
         ALL \<sigma> n. ?\<Gamma>,?\<Theta>|=n:/?F
            {\<sigma>} Call ?p (?Modif \<sigma>),(?ModifAbr \<sigma>);
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t |]
      ==> ?\<Gamma>,?\<Theta>|=?n:/?F ?P call ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 8, template_var 13),
                         template_var 12),
                       template_var 0),
                     template_var 11),
                   template_var 10),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 7, template_var 9),
                       template_var 8),
                     template_var 1),
                   template_var 6)),
               template_var 5),
             template_var 4)
           ))),
    ("HoarePartialProps.ProcModifyReturn_sound",
     "[| ALL n. ?\<Gamma>,?\<Theta>|=n:/?F
            ?P call ?init ?p ?return' ?c ?Q,?A;
         ALL \<sigma> n. ?\<Gamma>,?\<Theta>|=n:/UNIV
            {\<sigma>} Call ?p (?Modif \<sigma>),(?ModifAbr \<sigma>);
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t |]
      ==> ?\<Gamma>,?\<Theta>|=?n:/?F ?P call ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 9, template_var 13),
                         template_var 12),
                       template_var 0),
                     template_var 11),
                   template_var 10),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 9),
                       template_var 8),
                     template_var 1),
                   template_var 6)),
               template_var 5),
             template_var 4)
           ))),
    ("HoarePartial.DynProc'",
     "[| ?P <= {s. EX Z. ?init s : ?P' s Z &
                         (ALL t:?Q' s Z. ?return s t : ?R s t) &
                         (ALL t:?A' s Z. ?return s t : ?A)};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?R s t) ?c s t ?Q,?A;
         ALL s:?P.
            ALL Z.
               ?\<Gamma>,?\<Theta>
                  \<turnstile>\<^bsub>/?F \<^esub>(?P' s Z) Call (?p s)
            (?Q' s Z),(?A' s Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P dynCall ?init ?p ?return ?c
       ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 13,
          template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 13), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 13),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 12),
                       template_var 0),
                     template_var 9),
                   template_var 2)),
               template_var 1),
             template_var 6)
           ))),
    ("HoareTotal.DynProc'",
     "[| ?P <= {s. EX Z. ?init s : ?P' s Z &
                         (ALL t:?Q' s Z. ?return s t : ?R s t) &
                         (ALL t:?A' s Z. ?return s t : ?A)};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?R s t) ?c s t
                 ?Q,?A;
         ALL s:?P.
            ALL Z.
               ?\<Gamma>,?\<Theta>
                  \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' s Z)
                    Call (?p s) (?Q' s Z),(?A' s Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 13,
          template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 13), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 13),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 12),
                       template_var 0),
                     template_var 9),
                   template_var 2)),
               template_var 1),
             template_var 6)
           ))),
    ("HoarePartial.DynProcProcPar",
     "[| ?P <= {s. ?p s = ?q &
                   (EX Z. ?init s : ?P' Z &
                          (ALL \<tau>.
                              \<tau> : ?Q' Z -->
                              ?return s \<tau> : ?R s \<tau>) &
                          (ALL \<tau>.
                              \<tau> : ?A' Z --> ?return s \<tau> : ?A))};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?R s t) ?c s t ?Q,?A;
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?P' Z) Call ?q (?Q' Z),
         (?A' Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P dynCall ?init ?p ?return ?c
       ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 14,
          template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 14),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 11),
                       template_var 13),
                     template_var 8),
                   template_var 1)),
               template_var 0),
             template_var 5)
           ))),
    ("HoareTotal.DynProcProcPar",
     "[| ?P <= {s. ?p s = ?q &
                   (EX Z. ?init s : ?P' Z &
                          (ALL \<tau>.
                              \<tau> : ?Q' Z -->
                              ?return s \<tau> : ?R s \<tau>) &
                          (ALL \<tau>.
                              \<tau> : ?A' Z --> ?return s \<tau> : ?A))};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?R s t) ?c s t
                 ?Q,?A;
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z) Call ?q
                 (?Q' Z),(?A' Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 14,
          template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 14),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 11),
                       template_var 13),
                     template_var 8),
                   template_var 1)),
               template_var 0),
             template_var 5)
           ))),
    ("HoarePartialProps.dynProcModifyReturnSameFaults_sound",
     "[| !!n. ?\<Gamma>,?\<Theta>|=n:/?F
              ?P dynCall ?init ?p ?return' ?c ?Q,?A;
         ALL s:?P.
            ALL \<sigma> n. ?\<Gamma>,?\<Theta>|=n:/?F
               {\<sigma>} Call
                           (?p s) (?Modif \<sigma>),(?ModifAbr \<sigma>);
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t |]
      ==> ?\<Gamma>,?\<Theta>|=?n:/?F ?P dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 10), t_empty)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 10, template_var 13),
                         template_var 12),
                       template_var 0),
                     template_var 11),
                   template_var 10),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 9),
                       template_var 8),
                     template_var 1),
                   template_var 6)),
               template_var 5),
             template_var 4)
           ))),
    ("HoarePartialProps.dynProcModifyReturn_sound",
     "[| !!n. ?\<Gamma>,?\<Theta>|=n:/?F
              ?P dynCall ?init ?p ?return' ?c ?Q,?A;
         ALL s:?P.
            ALL \<sigma> n. ?\<Gamma>,?\<Theta>|=n:/UNIV
               {\<sigma>} Call
                           (?p s) (?Modif \<sigma>),(?ModifAbr \<sigma>);
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t |]
      ==> ?\<Gamma>,?\<Theta>|=?n:/?F ?P dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 10), t_empty)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 11, template_var 13),
                         template_var 12),
                       template_var 0),
                     template_var 11),
                   template_var 10),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 9),
                       template_var 8),
                     template_var 1),
                   template_var 6)),
               template_var 5),
             template_var 4)
           ))),
    ("HoareTotal.ProcRecSpecs",
     "[| ALL \<sigma>.
            ALL (P, p, Q, A):?Specs.
               ?\<Gamma>,?\<Theta> Un
                         (%(P, q, Q, A).
                             (P Int {s. ((s, q), \<sigma>, p) : ?r}, q, Q,
                              A)) `
                         ?Specs
                  \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ({\<sigma>} Int P)
                    the (?\<Gamma> p) Q,A;
         wf ?r; ALL (P, p, Q, A):?Specs. p : dom ?\<Gamma> |]
      ==> ALL (P, p, Q, A):?Specs.
             ?\<Gamma>,?\<Theta>
                \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> P Call p Q,A",
     template_implication
      ([template_predicate (template_app (template_hole 25, t_empty)),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 4),
              template_app (template_hole 23, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 24, template_var 4),
             template_app (template_hole 23, t_empty))
           ))),
    ("HoarePartial.ProcProcParModifyReturnSameFaults",
     "[| ?P <= {s. ?p s = ?q} Int ?P';
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P' dynCall ?init ?p ?return' ?c
      ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>{\<sigma>} Call ?q
         (?Modif \<sigma>),(?ModifAbr \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P dynCall ?init ?p ?return ?c
       ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 14,
          template_app
           (template_app
             (template_hole 11, template_app (template_hole 10, t_empty)),
            template_var 11)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 11),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 7, template_var 7),
                        template_var 13),
                      template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 14),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 7, template_var 7),
                       template_var 13),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoarePartial.ProcProcParModifyReturn",
     "[| ?P <= {s. ?p s = ?q} Int ?P';
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^bsub>/?F \<^esub>?P' dynCall ?init ?p ?return' ?c
      ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/UNIV \<^esub>{\<sigma>} Call ?q
           (?Modif \<sigma>),(?ModifAbr \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P dynCall ?init ?p ?return ?c
       ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 14,
          template_app
           (template_app
             (template_hole 12, template_app (template_hole 11, t_empty)),
            template_var 11)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 11),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_var 7),
                        template_var 13),
                      template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 14),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 7),
                       template_var 13),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotal.ProcProcParModifyReturnSameFaults",
     "[| ?P <= {s. ?p s = ?q} Int ?P';
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P'
              dynCall ?init ?p ?return' ?c ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>{\<sigma>} Call ?q
         (?Modif \<sigma>),(?ModifAbr \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 14,
          template_app
           (template_app
             (template_hole 12, template_app (template_hole 11, t_empty)),
            template_var 11)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 11),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_var 7),
                        template_var 13),
                      template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 14),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 7),
                       template_var 13),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoareTotal.ProcProcParModifyReturn",
     "[| ?P <= {s. ?p s = ?q} Int ?P';
         ?\<Gamma>,?\<Theta>
            \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P'
              dynCall ?init ?p ?return' ?c ?Q,?A;
         ALL s t. t : ?Modif (?init s) --> ?return' s t = ?return s t;
         ALL s t. t : ?ModifAbr (?init s) --> ?return' s t = ?return s t;
         ALL \<sigma>.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/UNIV \<^esub>{\<sigma>} Call ?q
           (?Modif \<sigma>),(?ModifAbr \<sigma>) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 14,
          template_app
           (template_app
             (template_hole 13, template_app (template_hole 12, t_empty)),
            template_var 11)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 11),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 7),
                        template_var 13),
                      template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 14),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 7),
                       template_var 13),
                     template_var 1),
                   template_var 5)),
               template_var 4),
             template_var 3)
           ))),
    ("HoarePartial.DynProcStaticSpec",
     "[| ?P <= {s: ?S.
                EX Z. ?init s : ?P' Z &
                      (ALL \<tau>.
                          \<tau> : ?Q' Z -->
                          ?return s \<tau> : ?R s \<tau>) &
                      (ALL \<tau>.
                          \<tau> : ?A' Z --> ?return s \<tau> : ?A)};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?R s t) ?c s t ?Q,?A;
         ALL s:?S.
            ALL Z.
               ?\<Gamma>,?\<Theta>
                  \<turnstile>\<^bsub>/?F \<^esub>(?P' Z) Call (?p s)
            (?Q' Z),(?A' Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P dynCall ?init ?p ?return ?c
       ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 14,
          template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 13), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 14),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 12),
                       template_var 0),
                     template_var 9),
                   template_var 2)),
               template_var 1),
             template_var 6)
           ))),
    ("HoareTotal.DynProcStaticSpec",
     "[| ?P <= {s: ?S.
                EX Z. ?init s : ?P' Z &
                      (ALL \<tau>.
                          \<tau> : ?Q' Z -->
                          ?return s \<tau> : ?R s \<tau>) &
                      (ALL \<tau>.
                          \<tau> : ?A' Z --> ?return s \<tau> : ?A)};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?R s t) ?c s t
                 ?Q,?A;
         ALL s:?S.
            ALL Z.
               ?\<Gamma>,?\<Theta>
                  \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' Z)
                    Call (?p s) (?Q' Z),(?A' Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 14,
          template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 13), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 14),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 12),
                       template_var 0),
                     template_var 9),
                   template_var 2)),
               template_var 1),
             template_var 6)
           ))),
    ("HoareTotal.ProcRec",
     "[| ALL p:?Procs.
            ALL \<sigma> Z.
               ?\<Gamma>,?\<Theta> Un
                         (UN q:?Procs.
                             UN Z. {(?P q Z Int
                                     {s. ((s, q), \<sigma>, p) : ?r},
                                     q, ?Q q Z, ?A q Z)})
                  \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ({\<sigma>} Int
                     ?P p Z)
                    the (?\<Gamma> p) (?Q p Z),(?A p Z);
         wf ?r; ?Procs <= dom ?\<Gamma> |]
      ==> ALL p:?Procs.
             ALL Z.
                ?\<Gamma>,?\<Theta>
                   \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P p Z) Call p
                     (?Q p Z),(?A p Z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 25, template_var 7), t_empty)
            ),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_inequation
         (less_equals, template_var 7,
          template_app (template_hole 1, template_var 6))],
       template_predicate
        (
           template_app
            (template_app (template_hole 25, template_var 7), t_empty)
           ))),
    ("HoareTotalDef.CallRec'",
     "[| ?p : ?Procs; ?Procs <= dom ?\<Gamma>; wf ?r;
         ALL p:?Procs.
            ALL \<tau> Z.
               ?\<Gamma>,?\<Theta> Un
                         (UN q:?Procs.
                             UN Z. {(?P q Z Int
                                     {s. ((s, q), \<tau>, p) : ?r},
                                     q, ?Q q Z, ?A q Z)})
                  \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ({\<tau>} Int
                     ?P p Z)
                    the (?\<Gamma> p) (?Q p Z),(?A p Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P ?p ?Z) Call ?p
               (?Q ?p ?Z),(?A ?p ?Z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 26, template_var 9),
              template_var 8)
            ),
        template_inequation
         (less_equals, template_var 8,
          template_app (template_hole 24, template_var 7)),
        template_predicate
         (template_app (template_hole 23, template_var 6)),
        template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 8), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 19, template_var 7),
                       template_var 5),
                     template_var 1),
                   template_app
                    (template_app (template_var 4, template_var 9),
                     template_var 0)),
                 template_app (template_hole 0, template_var 9)),
               template_app
                (template_app (template_var 3, template_var 9),
                 template_var 0)),
             template_app
              (template_app (template_var 2, template_var 9),
               template_var 0))
           ))),
    ("HoarePartialProps.MGT_lemma",
     "ALL p:dom ?\<Gamma>.
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>{s.
          s = Z &
          ?\<Gamma>\<turnstile> \<langle>Call
    p,Normal s\<rangle> \<Rightarrow>\<notin>{Stuck} Un Fault ` (- ?F)}
         Call p
         {t. ?\<Gamma>\<turnstile> \<langle>Call
       p,Normal Z\<rangle> \<Rightarrow> Normal t},
         {t. ?\<Gamma>\<turnstile> \<langle>Call
       p,Normal Z\<rangle> \<Rightarrow> Abrupt t} ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^bsub>/?F \<^esub>{s.
    s = ?Z &
    ?\<Gamma>\<turnstile> \<langle>?c,Normal
 s\<rangle> \<Rightarrow>\<notin>{Stuck} Un Fault ` (- ?F)}
   ?c {t. ?\<Gamma>\<turnstile> \<langle>?c,Normal
       ?Z\<rangle> \<Rightarrow> Normal t},
   {t. ?\<Gamma>\<turnstile> \<langle>?c,Normal
    ?Z\<rangle> \<Rightarrow> Abrupt t}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app (template_hole 17, template_var 4)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 15, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_app (template_hole 14, t_empty)),
                 template_var 0),
               template_app (template_hole 14, t_empty)),
             template_app (template_hole 14, t_empty))
           ))),
    ("HoareTotalDef.cvalidtI",
     "[| !!s t.
            [| ALL (P, p, Q, A):?\<Theta>. ?\<Gamma>|=t/?F P Call p Q,A;
               ?\<Gamma>\<turnstile> \<langle>?c,Normal
            s\<rangle> \<Rightarrow> t;
               s : ?P; t ~: Fault ` ?F |]
            ==> t : Normal ` ?Q Un Abrupt ` ?A;
         !!s. [| ALL (P, p, Q, A):?\<Theta>. ?\<Gamma>|=t/?F P Call p Q,A;
                 s : ?P |]
              ==> ?\<Gamma>\<turnstile>?c \<down> Normal s |]
      ==> ?\<Gamma>,?\<Theta>|=t/?F  ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 20, t_empty)),
        template_predicate (template_app (template_hole 20, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 6),
                     template_var 4),
                   template_var 2),
                 template_var 3),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartial.DynProc",
     "[| ?P <= {s. EX Z. ?init s : ?P' s Z &
                         (ALL t. t : ?Q' s Z --> ?return s t : ?R s t) &
                         (ALL t. t : ?A' s Z --> ?return s t : ?A)};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?R s t) ?c s t ?Q,?A;
         ALL s:?P.
            ALL Z.
               ?\<Gamma>,?\<Theta>
                  \<turnstile>\<^bsub>/?F \<^esub>(?P' s Z) Call (?p s)
            (?Q' s Z),(?A' s Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^bsub>/?F \<^esub>?P dynCall ?init ?p ?return ?c
       ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 13,
          template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 13), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 13),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 12),
                       template_var 0),
                     template_var 9),
                   template_var 2)),
               template_var 1),
             template_var 6)
           ))),
    ("HoareTotal.DynProc",
     "[| ?P <= {s. EX Z. ?init s : ?P' s Z &
                         (ALL t. t : ?Q' s Z --> ?return s t : ?R s t) &
                         (ALL t. t : ?A' s Z --> ?return s t : ?A)};
         ALL s t.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?R s t) ?c s t
                 ?Q,?A;
         ALL s:?P.
            ALL Z.
               ?\<Gamma>,?\<Theta>
                  \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P' s Z)
                    Call (?p s) (?Q' s Z),(?A' s Z) |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ?P
               dynCall ?init ?p ?return ?c ?Q,?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 13,
          template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 13), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 13),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 12),
                       template_var 0),
                     template_var 9),
                   template_var 2)),
               template_var 1),
             template_var 6)
           ))),
    ("HoareTotal.ProcRecList",
     "[| ALL p:set ?Procs.
            ALL \<sigma> Z.
               ?\<Gamma>,?\<Theta> Un
                         (UN q:set ?Procs.
                             UN Z. {(?P q Z Int
                                     {s. ((s, q), \<sigma>, p) : ?r},
                                     q, ?Q q Z, ?A q Z)})
                  \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ({\<sigma>} Int
                     ?P p Z)
                    the (?\<Gamma> p) (?Q p Z),(?A p Z);
         wf ?r; distinct ?Procs; set ?Procs <= dom ?\<Gamma> |]
      ==> ALL p:set ?Procs.
             ALL Z.
                ?\<Gamma>,?\<Theta>
                   \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P p Z) Call p
                     (?Q p Z),(?A p Z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 27,
                template_app (template_hole 26, template_var 7)),
              t_empty)
            ),
        template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate (template_app (template_hole 3, template_var 7)),
        template_inequation
         (less_equals, template_app (template_hole 26, template_var 7),
          template_app (template_hole 1, template_var 6))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 27,
               template_app (template_hole 26, template_var 7)),
             t_empty)
           ))),
    ("HoareTotal.ProcRec'",
     "[| ?\<Theta>' =
         (%\<sigma> p.
             ?\<Theta> Un
             (UN q:?Procs.
                 UN Z. {(?P q Z Int {s. ((s, q), \<sigma>, p) : ?r}, q,
                         ?Q q Z, ?A q Z)}));
         ALL p:?Procs.
            ALL \<sigma> Z.
               ?\<Gamma>,?\<Theta>' \<sigma> p
                  \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ({\<sigma>} Int
                     ?P p Z)
                    the (?\<Gamma> p) (?Q p Z),(?A p Z);
         wf ?r; ?Procs <= dom ?\<Gamma> |]
      ==> ALL p:?Procs.
             ALL Z.
                ?\<Gamma>,?\<Theta>
                   \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> (?P p Z) Call p
                     (?Q p Z),(?A p Z)",
     template_implication
      ([template_equation (template_var 8, t_empty),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2), t_empty)
            ),
        template_predicate (template_app (template_hole 3, template_var 5)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 10, template_var 2), t_empty)
           ))),
    ("HoareTotalProps.MGT_lemma",
     "ALL p:dom ?\<Gamma>.
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> {s.
                  s = Z &
                  ?\<Gamma>\<turnstile> \<langle>Call
            p,Normal
               s\<rangle> \<Rightarrow>\<notin>{Stuck} Un Fault ` (- ?F) &
                  ?\<Gamma>\<turnstile>Call p \<down> Normal s}
                 Call p
                 {t. ?\<Gamma>\<turnstile> \<langle>Call
               p,Normal
                  Z\<rangle> \<Rightarrow> Normal
      t},{t. ?\<Gamma>\<turnstile> \<langle>Call
       p,Normal Z\<rangle> \<Rightarrow> Abrupt t} ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> {s.
            s = ?Z &
            ?\<Gamma>\<turnstile> \<langle>?c,Normal
         s\<rangle> \<Rightarrow>\<notin>{Stuck} Un Fault ` (- ?F) &
            ?\<Gamma>\<turnstile>?c \<down> Normal s}
           ?c {t. ?\<Gamma>\<turnstile> \<langle>?c,Normal
               ?Z\<rangle> \<Rightarrow> Normal
    t},{t. ?\<Gamma>\<turnstile> \<langle>?c,Normal
        ?Z\<rangle> \<Rightarrow> Abrupt t}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app (template_hole 18, template_var 4)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 16, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_app (template_hole 15, t_empty)),
                 template_var 0),
               template_app (template_hole 15, t_empty)),
             template_app (template_hole 15, t_empty))
           ))),
    ("HoarePartialProps.LiberalConseq_noguards_nothrows",
     "[| ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^bsub>/?F \<^esub>(?P' Z) ?c (?Q' Z),(?A' Z);
         ALL s t. (ALL Z. s : ?P' Z --> t : ?Q' Z) --> s : ?P --> t : ?Q;
         noguards ?c; ALL p:dom ?\<Gamma>. noguards (the (?\<Gamma> p));
         nothrows ?c; ALL p:dom ?\<Gamma>. nothrows (the (?\<Gamma> p));
         noSpec ?c; ALL p:dom ?\<Gamma>. noSpec (the (?\<Gamma> p));
         procs ?c <= dom ?\<Gamma>;
         ALL p:dom ?\<Gamma>. procs (the (?\<Gamma> p)) <= dom ?\<Gamma> |]
      ==> ?\<Gamma>,?\<Theta>\<turnstile>\<^bsub>/?F \<^esub>?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 7, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 9)),
              t_empty)
            ),
        template_predicate (template_app (template_hole 3, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 9)),
              t_empty)
            ),
        template_predicate (template_app (template_hole 2, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 9)),
              t_empty)
            ),
        template_inequation
         (less_equals, template_app (template_hole 0, template_var 5),
          template_app (template_hole 5, template_var 9)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 9)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 11, template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 2),
                 template_var 5),
               template_var 1),
             template_var 0)
           ))),
    ("HoarePartialProps.LiberalConseq_noguards_nothrows_sound",
     "[| ALL Z n. ?\<Gamma>,?\<Theta>|=n:/?F (?P' Z) ?c (?Q' Z),(?A' Z);
         ALL s t. (ALL Z. s : ?P' Z --> t : ?Q' Z) --> s : ?P --> t : ?Q;
         noguards ?c; ALL p:dom ?\<Gamma>. noguards (the (?\<Gamma> p));
         nothrows ?c; ALL p:dom ?\<Gamma>. nothrows (the (?\<Gamma> p));
         noSpec ?c; ALL p:dom ?\<Gamma>. noSpec (the (?\<Gamma> p));
         procs ?c <= dom ?\<Gamma>;
         ALL p:dom ?\<Gamma>. procs (the (?\<Gamma> p)) <= dom ?\<Gamma> |]
      ==> ?\<Gamma>,?\<Theta>|=?n:/?F ?P ?c ?Q,?A",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 7, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 10)),
              t_empty)
            ),
        template_predicate (template_app (template_hole 3, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 10)),
              t_empty)
            ),
        template_predicate (template_app (template_hole 2, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 10)),
              t_empty)
            ),
        template_inequation
         (less_equals, template_app (template_hole 0, template_var 6),
          template_app (template_hole 5, template_var 10)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 10)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 11, template_var 10),
                         template_var 9),
                       template_var 1),
                     template_var 8),
                   template_var 3),
                 template_var 6),
               template_var 2),
             template_var 0)
           ))),
    ("HoareTotalProps.Call_lemma_switch_Call_body",
     "[| ALL q:dom ?\<Gamma>.
            ALL Z.
               ?\<Gamma>,?\<Theta>
                  \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> {s.
                     s = Z &
                     ?\<Gamma>\<turnstile> \<langle>Call
               q,Normal
                  s\<rangle> \<Rightarrow>\<notin>{Stuck} Un
            Fault ` (- ?F) &
                     ?\<Gamma>\<turnstile>Call q \<down> Normal s &
                     ((s, q), ?\<sigma>, ?p) : termi_call_steps ?\<Gamma>}
                    Call q
                    {t. ?\<Gamma>\<turnstile> \<langle>Call
                  q,Normal
                     Z\<rangle> \<Rightarrow> Normal
         t},{t. ?\<Gamma>\<turnstile> \<langle>Call
          q,Normal Z\<rangle> \<Rightarrow> Abrupt t};
         ?p : dom ?\<Gamma> |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ({?\<sigma>} Int
                {s. s = ?Z &
                    ?\<Gamma>\<turnstile> \<langle>Call
              ?p,Normal
                  s\<rangle> \<Rightarrow>\<notin>{Stuck} Un
            Fault ` (- ?F) &
                    ?\<Gamma>\<turnstile>Call ?p \<down> Normal s})
               the (?\<Gamma> ?p)
               {t. ?\<Gamma>\<turnstile> \<langle>Call
             ?p,Normal
                 ?Z\<rangle> \<Rightarrow> Normal
      t},{t. ?\<Gamma>\<turnstile> \<langle>Call
       ?p,Normal ?Z\<rangle> \<Rightarrow> Abrupt t}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 28,
                template_app (template_hole 27, template_var 5)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 27, template_var 5))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 25, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_var 2),
                         template_hole 1)),
                     template_app (template_hole 24, t_empty))),
                 template_app
                  (template_hole 0,
                   template_app (template_var 5, template_var 1))),
               template_app (template_hole 24, t_empty)),
             template_app (template_hole 24, t_empty))
           ))),
    ("HoareTotalProps.Call_lemma",
     "[| ALL q:dom ?\<Gamma>.
            ALL Z.
               ?\<Gamma>,?\<Theta>
                  \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> {s.
                     s = Z &
                     ?\<Gamma>\<turnstile> \<langle>Call
               q,Normal
                  s\<rangle> \<Rightarrow>\<notin>{Stuck} Un
            Fault ` (- ?F) &
                     ?\<Gamma>\<turnstile>Call q \<down> Normal s &
                     ((s, q), ?\<sigma>, ?p) : termi_call_steps ?\<Gamma>}
                    Call q
                    {t. ?\<Gamma>\<turnstile> \<langle>Call
                  q,Normal
                     Z\<rangle> \<Rightarrow> Normal
         t},{t. ?\<Gamma>\<turnstile> \<langle>Call
          q,Normal Z\<rangle> \<Rightarrow> Abrupt t};
         ?p : dom ?\<Gamma> |]
      ==> ?\<Gamma>,?\<Theta>
             \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> ({?\<sigma>} Int
                {s. s = ?Z &
                    ?\<Gamma>\<turnstile> \<langle>the
              (?\<Gamma>
                ?p),Normal
                     s\<rangle> \<Rightarrow>\<notin>{Stuck} Un
               Fault ` (- ?F) &
                    ?\<Gamma>\<turnstile>the
    (?\<Gamma> ?p) \<down> Normal s})
               the (?\<Gamma> ?p)
               {t. ?\<Gamma>\<turnstile> \<langle>the
             (?\<Gamma>
               ?p),Normal
                    ?Z\<rangle> \<Rightarrow> Normal
         t},{t. ?\<Gamma>\<turnstile> \<langle>the
          (?\<Gamma> ?p),Normal ?Z\<rangle> \<Rightarrow> Abrupt t}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 28,
                template_app (template_hole 27, template_var 5)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 27, template_var 5))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 25, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_var 2),
                         template_hole 1)),
                     template_app (template_hole 24, t_empty))),
                 template_app
                  (template_hole 0,
                   template_app (template_var 5, template_var 1))),
               template_app (template_hole 24, t_empty)),
             template_app (template_hole 24, t_empty))
           ))),
    ("HoareTotalProps.Call_lemma'",
     "ALL q:dom ?\<Gamma>.
         ALL Z.
            ?\<Gamma>,?\<Theta>
               \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> {s.
                  s = Z &
                  ?\<Gamma>\<turnstile> \<langle>Call
            q,Normal
               s\<rangle> \<Rightarrow>\<notin>{Stuck} Un Fault ` (- ?F) &
                  ?\<Gamma>\<turnstile>Call q \<down> Normal s &
                  ((s, q), ?\<sigma>, ?p) : termi_call_steps ?\<Gamma>}
                 Call q
                 {t. ?\<Gamma>\<turnstile> \<langle>Call
               q,Normal
                  Z\<rangle> \<Rightarrow> Normal
      t},{t. ?\<Gamma>\<turnstile> \<langle>Call
       q,Normal Z\<rangle> \<Rightarrow> Abrupt t} ==>
      ?\<Gamma>,?\<Theta>
         \<turnstile>\<^sub>t\<^bsub>/?F\<^esub> {s.
            s = ?Z &
            ?\<Gamma>\<turnstile> \<langle>?c,Normal
         s\<rangle> \<Rightarrow>\<notin>{Stuck} Un Fault ` (- ?F) &
            ?\<Gamma>\<turnstile>Call ?p \<down> Normal ?\<sigma> &
            (EX c'.
                ?\<Gamma>\<turnstile> (Call ?p,
 Normal ?\<sigma>) \<rightarrow>\<^sup>+
(c', Normal s) &
                ?c : redexes c')}
           ?c {t. ?\<Gamma>\<turnstile> \<langle>?c,Normal
               ?Z\<rangle> \<Rightarrow> Normal
    t},{t. ?\<Gamma>\<turnstile> \<langle>?c,Normal
        ?Z\<rangle> \<Rightarrow> Abrupt t}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 29,
                template_app (template_hole 28, template_var 6)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 26, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_app (template_hole 25, t_empty)),
                 template_var 0),
               template_app (template_hole 25, t_empty)),
             template_app (template_hole 25, t_empty))
           )))]:
   (string * thm * template) list
### theory "Draft.HoareTemplates"
### 0.724s elapsed time, 0.886s cpu time, 0.144s GC time
val it = (): unit
