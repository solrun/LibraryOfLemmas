   [("Semantic.isAbr_simps", "isAbr (Normal ?s) = False",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Semantic.isAbr_simps", "isAbr (Abrupt ?s) = True",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Semantic.isAbr_simps", "isAbr (Fault ?f) = False",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Semantic.isFault_simps", "isFault (Normal ?s) = False",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Semantic.isFault_simps", "isFault (Abrupt ?s) = False",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Semantic.isFault_simps", "isFault (Fault ?f) = True",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Semantic.restrict_dom_same", "?m|\<^bsub>dom ?m\<^esub> = ?m",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Semantic.not_isFault_iff", "(~ isFault ?t) = (ALL f. ?t ~= Fault f)",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app (template_hole 2, t_empty))),
    ("Semantic.exec_iff_exec_merge_guards",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>\<turnstile> \<langle>merge_guards
?c,?s\<rangle> \<Rightarrow> ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0))),
    ("Semantic.exec_normalize_iff_exec",
     "?\<Gamma>\<turnstile> \<langle>Language.normalize
?c,?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Semantic.exec_iff_execn",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow> ?t =
      (EX n. ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =n\<Rightarrow> ?t)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Semantic.exec_final_notin_iff_execn",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> \<Rightarrow>\<notin>?T =
      (ALL n.
          ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =n\<Rightarrow>\<notin>?T)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Semantic.execn_iff_execn_merge_guards",
     "?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t =
      ?\<Gamma>\<turnstile> \<langle>merge_guards
?c,?s\<rangle> =?n\<Rightarrow> ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_app (template_hole 0, template_var 3)),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Semantic.execn_normalize_iff_execn",
     "?\<Gamma>\<turnstile> \<langle>Language.normalize
?c,?s\<rangle> =?n\<Rightarrow> ?t =
      ?\<Gamma>\<turnstile> \<langle>?c,?s\<rangle> =?n\<Rightarrow> ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_app (template_hole 0, template_var 3)),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Semantic.exec_assoc",
     "?\<Gamma>\<turnstile> \<langle>Seq ?c1.0
(Seq ?c2.0 ?c3.0),?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>\<turnstile> \<langle>Seq (Seq ?c1.0 ?c2.0)
?c3.0,?s\<rangle> \<Rightarrow> ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3)),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("Semantic.execn_assoc",
     "?\<Gamma>\<turnstile> \<langle>Seq ?c1.0
(Seq ?c2.0 ?c3.0),?s\<rangle> =?n\<Rightarrow> ?t =
      ?\<Gamma>\<turnstile> \<langle>Seq (Seq ?c1.0 ?c2.0)
?c3.0,?s\<rangle> =?n\<Rightarrow> ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 6),
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3))),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 6),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4)),
                 template_var 3)),
             template_var 2),
           template_var 1),
         template_var 0)))]
