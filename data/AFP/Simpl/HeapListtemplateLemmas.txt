   [("HeapList.List_Null", "List Null ?h ?ps = (?ps = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 1),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 0))),
    ("HeapList.List_empty", "List ?p ?h [] = (?p = Null)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_equation (template_var 1, template_hole 0))),
    ("HeapList.List_distinct", "List ?p ?h ?ps ==> distinct ?ps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("HeapList.list_distinct", "islist ?p ?h ==> distinct (list ?p ?h)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("HeapList.List_islist", "List ?p ?h ?ps ==> islist ?p ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 1)
           ))),
    ("HeapList.conj_impl_simp", "(?P & ?Q --> ?K) = (?P --> ?Q --> ?K)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("HeapList.Null_notin_List", "List ?p ?h ?ps ==> Null ~: set ?ps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("HeapList.List_list", "List ?p ?h ?ps ==> list ?p ?h = ?ps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("HeapList.Null_notin_list",
     "islist ?p ?h ==> Null ~: set (list ?p ?h)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)))
               )
           ))),
    ("HeapList.List_unique1", "List ?p ?h ?as ==> EX! as. List ?p ?h as",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("HeapList.List_hd_not_in_tl", "List (?h ?p) ?h ?ps ==> ?p ~: set ?ps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app (template_var 2, template_var 1)),
                template_var 2),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("HeapList.Null_notin_Path", "Path ?p ?f ?q ?ps ==> Null ~: set ?ps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("HeapList.Path_Null_iff",
     "Path Null ?h ?y ?xs = (?xs = [] & ?y = Null)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_hole 4))
           ))),
    ("HeapList.List_conv_islist_list",
     "List ?p ?h ?ps = (islist ?p ?h & ?ps = list ?p ?h)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)))
           ))),
    ("HeapList.List_upd_same_lemma",
     "?p ~= Null ==> ~ List ?p (?h(?p := ?p)) ?ps",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 2))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 2),
                     template_var 2)),
                 template_var 0)
               )
           ))),
    ("HeapList.List_upd_same",
     "List ?p (?h(?p := ?p)) ?ps = (?p = Null & ?ps = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_app
                 (template_app
                   (template_app (template_hole 5, template_var 1),
                    template_var 2),
                  template_var 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_hole 2)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("HeapList.List_unique",
     "[| List ?p ?h ?as; List ?p ?h ?bs |] ==> ?as = ?bs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("HeapList.List_unique_all_impl_simp",
     "List ?p ?h ?ps ==> (ALL ps. List ?p ?h ps --> ?P ps) = ?P ?ps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app (template_hole 1, t_empty),
         template_app (template_var 0, template_var 1)))),
    ("HeapList.List_unique_ex_conj_simp",
     "List ?p ?h ?ps ==> (EX ps. List ?p ?h ps & ?P ps) = ?P ?ps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app (template_hole 1, t_empty),
         template_app (template_var 0, template_var 1)))),
    ("HeapList.List_app",
     "List ?p ?h (?as @ ?bs) = (EX y. Path ?p ?h y ?as & List y ?h ?bs)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app (template_hole 2, t_empty))),
    ("HeapList.notin_List_update",
     "?q ~: set ?ps ==> List ?p (?h(?q := ?y)) ?ps = List ?p ?h ?ps",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app (template_hole 3, template_var 3))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 4),
               template_var 0)),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 3)))),
    ("HeapList.heap_eq_List_eq",
     "ALL x:set ?ps. ?h x = ?g x ==> List ?p ?h ?ps = List ?p ?g ?ps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 3)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1),
           template_var 3)))),
    ("HeapList.islist_upd",
     "[| islist ?p ?h; ?y ~: set (list ?p ?h) |]
      ==> islist ?p (?h(?y := ?q))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 1, template_var 3),
                      template_var 2)))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("HeapList.List_updateI",
     "[| List ?p ?h ?ps; ?q ~: set ?ps |] ==> List ?p (?h(?q := ?y)) ?ps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_app (template_hole 1, template_var 2))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 4),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0)),
             template_var 2)
           ))),
    ("HeapList.List_cons",
     "List ?p ?h (?a # ?ps) = (?p = ?a & ?p ~= Null & List (?h ?p) ?h ?ps)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_hole 0))),
               template_app
                (template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_var 2, template_var 3)),
                   template_var 2),
                 template_var 0)))
           ))),
    ("HeapList.Path_append",
     "Path ?p ?f ?q (?as @ ?bs) =
      (EX y. Path ?p ?f y ?as & Path y ?f ?q ?bs)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("HeapList.notin_Path_update",
     "?u ~: set ?ps ==> Path ?p (?f(?u := ?v)) ?q ?ps = Path ?p ?f ?q ?ps",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 5),
                  template_app (template_hole 3, template_var 4))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 5),
                 template_var 1)),
             template_var 0),
           template_var 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 0),
           template_var 4)))),
    ("HeapList.List_update_new",
     "set ?ps <= set ?alloc ==>
      List ?p (?h(new (set ?alloc) := ?x)) ?ps = List ?p ?h ?ps",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 4),
          template_app (template_hole 4, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_hole 0,
                   template_app (template_hole 4, template_var 3))),
               template_var 0)),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 4)))),
    ("HeapList.heap_eq_ListI1",
     "[| List ?p ?h ?ps; ALL x:set ?ps. ?g x = ?h x |] ==> List ?p ?g ?ps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 0),
             template_var 1)
           ))),
    ("HeapList.heap_eq_ListI",
     "[| List ?p ?h ?ps; ALL x:set ?ps. ?h x = ?g x |] ==> List ?p ?g ?ps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 0),
             template_var 1)
           ))),
    ("HeapList.list_Ref_conv",
     "[| islist (?h ?p) ?h; ?p ~= Null |]
      ==> list ?p ?h = ?p # list (?h ?p) ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_var 1, template_var 0)),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 1, template_var 0)),
             template_var 1))))),
    ("HeapList.notin_Path_updateI",
     "[| Path ?p ?h ?q ?ps; ?r ~: set ?ps |]
      ==> Path ?p (?h(?r := ?y)) ?q ?ps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_app (template_hole 1, template_var 2))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 5),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 1),
                   template_var 0)),
               template_var 3),
             template_var 2)
           ))),
    ("HeapList.Path_update_new",
     "set ?ps <= set ?alloc ==>
      Path ?p (?f(new (set ?alloc) := ?x)) ?q ?ps = Path ?p ?f ?q ?ps",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 5),
          template_app (template_hole 4, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app
                    (template_hole 0,
                     template_app (template_hole 4, template_var 4))),
                 template_var 1)),
             template_var 0),
           template_var 5),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 0),
           template_var 5)))),
    ("HeapList.List_not_Null",
     "?p ~= Null ==>
      List ?p ?h ?as = (EX ps. ?as = ?p # ps & List (?h ?p) ?h ps)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 6))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_var 0),
         template_app (template_hole 3, t_empty)))),
    ("HeapList.list_upd_conv",
     "[| islist ?p ?h; ?y ~: set (list ?p ?h) |]
      ==> list ?p (?h(?y := ?q)) = list ?p ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 3),
                      template_var 2)))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 2)))),
    ("HeapList.Path_snoc",
     "[| Path ?p (?f(?a := ?q)) ?a ?as; ?a ~= Null |]
      ==> Path ?p (?f(?a := ?q)) ?q (?as @ [?a])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 4),
                  template_app
                   (template_app
                     (template_app (template_hole 6, template_var 3),
                      template_var 2),
                    template_var 1)),
                template_var 2),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 2, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_var 4),
                 template_app
                  (template_app
                    (template_app (template_hole 6, template_var 3),
                     template_var 2),
                   template_var 1)),
               template_var 1),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0)))
           ))),
    ("HeapList.Path_not_Null_iff",
     "?p ~= Null ==>
      Path ?p ?h ?q ?as =
      (?as = [] & ?q = ?p |
       (EX ps. ?as = ?p # ps & Path (?h ?p) ?h ?q ps))",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 8))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 0),
                       template_hole 2)),
                   template_app
                    (template_app (template_hole 9, template_var 1),
                     template_var 3))),
               template_app (template_hole 1, t_empty))
             )))),
    ("HeapList.Path_upd_same",
     "Path ?p (?f(?p := ?p)) ?q ?qs =
      (?p = Null & ?q = Null & ?qs = [] |
       ?p ~= Null & ?q = ?p & (ALL x:set ?qs. x = ?p))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 3),
                  template_app
                   (template_app
                     (template_app (template_hole 9, template_var 2),
                      template_var 3),
                    template_var 3)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 3),
                     template_hole 5)),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_var 1),
                       template_hole 5)),
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_hole 3)))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 6, template_var 3),
                     template_hole 5))),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 1),
                     template_var 3)),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 0)),
                   t_empty))))
           )))]
