   [("Compose.state_simps", "state (Normal ?s) = ?s",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Compose.state_simps", "state (Abrupt ?s) = ?s",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Compose.xstate_map_simps", "xstate_map ?g Stuck = Stuck",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Compose.xstate_map_simps", "xstate_map ?g (Fault ?f) = Fault ?f",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Compose.xstate_map_simps",
     "xstate_map ?g (Normal ?s) = Normal (?g ?s)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_var 1, template_var 0)))),
    ("Compose.xstate_map_simps",
     "xstate_map ?g (Abrupt ?s) = Abrupt (?g ?s)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_var 1, template_var 0)))),
    ("Compose.rename_Skip", "(rename ?h ?c = Skip) = (?c = Skip)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Compose.rename_Throw", "(rename ?h ?c = Throw) = (?c = Throw)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Compose.xstate_map_Stuck_conv",
     "(xstate_map ?g ?S = Stuck) = (?S = Stuck)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Compose.lift\<^sub>c_Skip",
     "(lift\<^sub>c ?prj ?inject ?c = Skip) = (?c = Skip)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Compose.lift\<^sub>c_Throw",
     "(lift\<^sub>c ?prj ?inject ?c = Throw) = (?c = Throw)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Compose.rename_Basic", "(rename ?h ?c = Basic ?f) = (?c = Basic ?f)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Compose.rename_Spec", "(rename ?h ?c = Spec ?r) = (?c = Spec ?r)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Compose.xstate_map_Fault_conv",
     "(xstate_map ?g ?S = Fault ?f) = (?S = Fault ?f)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Compose.lift\<^sub>c_Call",
     "(lift\<^sub>c ?prj ?inject ?c = Call ?p) = (?c = Call ?p)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2),
           template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Compose.rename_whileAnno",
     "rename ?h (whileAnno ?b ?I ?V ?c) =
      whileAnno ?b ?I ?V (rename ?h ?c)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 4),
           template_var 0)))),
    ("Compose.rename_Call",
     "(rename ?h ?c = Call ?q) = (EX p. ?c = Call p & ?q = ?h p)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_app (template_hole 5, template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Compose.xstate_map_Abrupt_conv",
     "(xstate_map ?g ?S = Abrupt ?s) =
      (EX s'. ?S = Abrupt s' & ?s = ?g s')",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_app (template_hole 5, template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Compose.xstate_map_Normal_conv",
     "(xstate_map ?g ?S = Normal ?s) =
      (EX s'. ?S = Normal s' & ?s = ?g s')",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_app (template_hole 5, template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Compose.rename_call",
     "rename ?h (call ?init ?p ?return ?c) =
      call ?init (?h ?p) ?return (%s t. rename ?h (?c s t))",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_app (template_var 4, template_var 2)),
           template_var 1),
         t_empty))),
    ("Compose.rename_DynCom",
     "(rename ?h ?c = DynCom ?rc) =
      (EX C. ?c = DynCom C & ?rc = (%s. rename ?h (C s)))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_app (template_hole 5, template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Compose.rename_While",
     "(rename ?h ?c = While ?b ?rc') =
      (EX c'. ?c = While ?b c' & ?rc' = rename ?h c')",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Compose.lift\<^sub>c_Basic",
     "(lift\<^sub>c ?prj ?inject ?c = Basic ?lf) =
      (EX f. ?c = Basic f & ?lf = lift\<^sub>f ?prj ?inject f)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 3),
               template_var 2),
             template_var 1)),
         template_app (template_hole 6, template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Compose.lift\<^sub>c_Spec",
     "(lift\<^sub>c ?prj ?inject ?c = Spec ?lr) =
      (EX r. ?c = Spec r & ?lr = lift\<^sub>r ?prj ?inject r)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 3),
               template_var 2),
             template_var 1)),
         template_app (template_hole 6, template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Compose.rename_block",
     "rename ?h (block ?init ?bdy ?return ?c) =
      block ?init (rename ?h ?bdy) ?return (%s t. rename ?h (?c s t))",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_app
              (template_app (template_hole 2, template_var 4),
               template_var 2)),
           template_var 1),
         t_empty))),
    ("Compose.rename_Guard",
     "(rename ?h ?c = Guard ?f ?g ?rc') =
      (EX c'. ?c = Guard ?f ?g c' & ?rc' = rename ?h c')",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 4),
             template_var 3)),
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Compose.lift\<^sub>c_DynCom",
     "(lift\<^sub>c ?prj ?inject ?c = DynCom ?lc) =
      (EX C. ?c = DynCom C &
             ?lc = (%s. lift\<^sub>c ?prj ?inject (C (?prj s))))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 6, template_var 3),
               template_var 2),
             template_var 1)),
         template_app (template_hole 5, template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Compose.lift\<^sub>c_whileAnno",
     "lift\<^sub>c ?prj ?inject (whileAnno ?b ?I ?V ?c) =
      whileAnno (lift\<^sub>s ?prj ?b) (lift\<^sub>s ?prj ?I)
       (lift\<^sub>r ?prj ?inject ?V) (lift\<^sub>c ?prj ?inject ?c)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 5), template_var 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 3)),
             template_app
              (template_app (template_hole 1, template_var 5),
               template_var 2)),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 4),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 4, template_var 5),
             template_var 4),
           template_var 0)))),
    ("Compose.rename_Catch",
     "(rename ?h ?c = Catch ?rc\<^sub>1 ?rc\<^sub>2) =
      (EX c\<^sub>1 c\<^sub>2.
          ?c = Catch c\<^sub>1 c\<^sub>2 &
          ?rc\<^sub>1 = rename ?h c\<^sub>1 &
          ?rc\<^sub>2 = rename ?h c\<^sub>2)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Compose.rename_Seq",
     "(rename ?h ?c = Seq ?rc\<^sub>1 ?rc\<^sub>2) =
      (EX c\<^sub>1 c\<^sub>2.
          ?c = Seq c\<^sub>1 c\<^sub>2 &
          ?rc\<^sub>1 = rename ?h c\<^sub>1 &
          ?rc\<^sub>2 = rename ?h c\<^sub>2)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Compose.rename_Cond",
     "(rename ?h ?c = Cond ?b ?rc\<^sub>1 ?rc\<^sub>2) =
      (EX c\<^sub>1 c\<^sub>2.
          ?c = Cond ?b c\<^sub>1 c\<^sub>2 &
          ?rc\<^sub>1 = rename ?h c\<^sub>1 &
          ?rc\<^sub>2 = rename ?h c\<^sub>2)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 4),
             template_var 3)),
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Compose.lift\<^sub>c_While",
     "(lift\<^sub>c ?prj ?inject ?c = While ?lb ?lc') =
      (EX b c'.
          ?c = While b c' &
          ?lb = lift\<^sub>s ?prj b & ?lc' = lift\<^sub>c ?prj ?inject c')",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 4),
               template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app (template_hole 6, t_empty))),
    ("Compose.lift\<^sub>c_Catch",
     "(lift\<^sub>c ?prj ?inject ?c = Catch ?lc\<^sub>1 ?lc\<^sub>2) =
      (EX c\<^sub>1 c\<^sub>2.
          ?c = Catch c\<^sub>1 c\<^sub>2 &
          ?lc\<^sub>1 = lift\<^sub>c ?prj ?inject c\<^sub>1 &
          ?lc\<^sub>2 = lift\<^sub>c ?prj ?inject c\<^sub>2)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 4),
               template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Compose.lift\<^sub>c_Seq",
     "(lift\<^sub>c ?prj ?inject ?c = Seq ?lc\<^sub>1 ?lc\<^sub>2) =
      (EX c\<^sub>1 c\<^sub>2.
          ?c = Seq c\<^sub>1 c\<^sub>2 &
          ?lc\<^sub>1 = lift\<^sub>c ?prj ?inject c\<^sub>1 &
          ?lc\<^sub>2 = lift\<^sub>c ?prj ?inject c\<^sub>2)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 4),
               template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Compose.lift\<^sub>c_call",
     "lift\<^sub>c ?prj ?inject (call ?init ?p ?return ?c) =
      call (lift\<^sub>f ?prj ?inject ?init) ?p
       (%s. lift\<^sub>f ?prj ?inject (?return (?prj s)))
       (%s t. lift\<^sub>c ?prj ?inject (?c (?prj s) (?prj t)))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 5), template_var 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 4),
                 template_var 3)),
             template_var 2),
           t_empty),
         t_empty))),
    ("Compose.lift\<^sub>c_Guard",
     "(lift\<^sub>c ?prj ?inject ?c = Guard ?f ?lg ?lc') =
      (EX g c'.
          ?c = Guard ?f g c' &
          ?lg = lift\<^sub>s ?prj g & ?lc' = lift\<^sub>c ?prj ?inject c')",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 5),
               template_var 4),
             template_var 3)),
         template_app
          (template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 6, t_empty))),
    ("Compose.lift\<^sub>c_block",
     "lift\<^sub>c ?prj ?inject (block ?init ?bdy ?return ?c) =
      block (lift\<^sub>f ?prj ?inject ?init)
       (lift\<^sub>c ?prj ?inject ?bdy)
       (%s. lift\<^sub>f ?prj ?inject (?return (?prj s)))
       (%s t. lift\<^sub>c ?prj ?inject (?c (?prj s) (?prj t)))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 5), template_var 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 4),
                 template_var 3)),
             template_app
              (template_app
                (template_app (template_hole 3, template_var 5),
                 template_var 4),
               template_var 2)),
           t_empty),
         t_empty))),
    ("Compose.lift\<^sub>c_Cond",
     "(lift\<^sub>c ?prj ?inject ?c = Cond ?lb ?lc\<^sub>1 ?lc\<^sub>2) =
      (EX b c\<^sub>1 c\<^sub>2.
          ?c = Cond b c\<^sub>1 c\<^sub>2 &
          ?lb = lift\<^sub>s ?prj b &
          ?lc\<^sub>1 = lift\<^sub>c ?prj ?inject c\<^sub>1 &
          ?lc\<^sub>2 = lift\<^sub>c ?prj ?inject c\<^sub>2)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 5),
               template_var 4),
             template_var 3)),
         template_app
          (template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 6, t_empty)))]
