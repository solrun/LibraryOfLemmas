   [("KPL_execution_group.merge_is_unique",
     "[| dom ?\<gamma> = ?T; ~ group_race ?T ?\<gamma> |]
      ==> EX! z'. pre_merge ?T ?\<gamma> ?z z'",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 2), template_var 1),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 2)
                )
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("KPL_execution_group.no_races_imp_no_write_overlap",
     "~ group_race ?T ?\<gamma> ==>
      ALL i:?T.
         ALL j:?T.
            i ~= j -->
            W (the (?\<gamma> i)) Int W (the (?\<gamma> j)) = {}",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_var 0)
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 1), t_empty)
           ))),
    ("KPL_execution_group.G_No_Op_helper",
     "[| ALL j:the (?T ?i).
            ~ eval_bool ?p (the (?\<gamma> \<^sub>t\<^sub>s j));
         ?\<gamma> = ?\<gamma>' |]
      ==> step_g ?a ?i ?T (?\<gamma>, Barrier, ?p) (Some ?\<gamma>')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_hole 10,
                  template_app (template_var 5, template_var 4))),
              t_empty)
            ),
        template_equation (template_var 2, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_var 0),
                   template_var 4),
                 template_var 5),
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 3))),
             template_app (template_hole 0, template_var 1))
           ))),
    ("KPL_execution_group.pre_merge_inv",
     "[| pre_merge ?P ?\<gamma> ?z ?z';
         !!j. [| ?z' = sh (the (?\<gamma> j)) ?z; j : ?P;
                 ?z : W (the (?\<gamma> j)); dom ?\<gamma> = ?P |]
              ==> ?Pa;
         [| ?z' = sh (the (?\<gamma> 0)) ?z;
            ALL j:?P. ?z ~: W (the (?\<gamma> j)); dom ?\<gamma> = ?P |]
         ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_implication
         ([template_equation
            (template_var 1,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_hole 7,
                   template_app (template_var 3, template_hole 2))),
               template_var 2))],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 1, template_var 4), t_empty)
                 )],
            template_implication
             ([template_equation
                (template_app (template_hole 3, template_var 3),
                 template_var 4)],
              template_predicate (template_var 0))))],
       template_predicate (template_var 0)))]
