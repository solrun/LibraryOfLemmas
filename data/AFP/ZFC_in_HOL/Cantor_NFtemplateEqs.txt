   [("Cantor_NF.\<omega>_of_Cantor_Nil", "\<omega>_of_Cantor [] ?ms = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Cantor_NF.Cantor_sum_Nil", "Cantor_sum [] ?ms = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Cantor_NF.indecomposable_succ",
     "indecomposable (ZFC_in_HOL.succ ?\<alpha>) = (?\<alpha> = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0))
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Cantor_NF.\<omega>_of_Cantor_Nil2",
     "\<omega>_of_Cantor (?\<alpha> # ?\<alpha>s) [] = []",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Cantor_NF.Cantor_sum_Nil2",
     "Cantor_sum (?\<alpha> # ?\<alpha>s) [] = 0",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Cantor_NF.\<omega>_sum_of_Cantor",
     "\<omega>_sum (\<omega>_of_Cantor ?\<alpha>s ?ms) =
      Cantor_sum ?\<alpha>s ?ms",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Cantor_NF.\<omega>_sum_append",
     "\<omega>_sum (?xs @ ?ys) = \<omega>_sum ?xs + \<omega>_sum ?ys",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Cantor_NF.\<omega>_sum_Cons",
     "\<omega>_sum (?\<alpha> # ?\<alpha>s) =
      \<omega> \<up> ?\<alpha> + \<omega>_sum ?\<alpha>s",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_app (template_hole 4, template_var 0)))),
    ("Cantor_NF.\<omega>_sum_replicate",
     "\<omega>_sum (replicate ?m ?a) = \<omega> \<up> ?a * ord_of_nat ?m",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Cantor_NF.\<omega>_sum_take_drop",
     "\<omega>_sum ?\<alpha>s =
      \<omega>_sum (take ?k ?\<alpha>s) +
      \<omega>_sum (drop ?k ?\<alpha>s)",
     template_equation
      (template_app (template_hole 3, template_var 1),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Cantor_NF.\<omega>_of_Cantor_Cons",
     "\<omega>_of_Cantor (?\<alpha> # ?\<alpha>s) (?m # ?ms) =
      replicate ?m ?\<alpha> @ \<omega>_of_Cantor ?\<alpha>s ?ms",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3)),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 0)))),
    ("Cantor_NF.indecomposable_iff_\<omega>_power",
     "indecomposable ?\<mu> =
      (?\<mu> = 0 |
       (EX \<delta>. ?\<mu> = \<omega> \<up> \<delta> & Ord \<delta>))",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_dunno)),
    ("Cantor_NF.Cantor_sum_Cons",
     "Cantor_sum (?\<alpha> # ?\<alpha>s) (?m # ?ms) =
      \<omega> \<up> ?\<alpha> * ord_of_nat ?m + Cantor_sum ?\<alpha>s ?ms",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 3)),
             template_app (template_hole 0, template_var 1))),
         template_app
          (template_app (template_hole 7, template_var 2),
           template_var 0)))),
    ("Cantor_NF.Cantor_dec_Cons_iff",
     "sorted_wrt (%x y. y < x) (?\<alpha> # ?\<beta> # ?\<beta>s) =
      (?\<beta> < ?\<alpha> &
       sorted_wrt (%x y. y < x) (?\<beta> # ?\<beta>s))",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Cantor_NF.\<omega>_dec_Cons_iff",
     "sorted_wrt (%x y. y <= x) (?\<alpha> # ?\<beta> # ?\<beta>s) =
      (?\<beta> <= ?\<alpha> &
       sorted_wrt (%x y. y <= x) (?\<beta> # ?\<beta>s))",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Cantor_NF.\<omega>_dec_replicate",
     "sorted_wrt (%x y. y <= x) (replicate ?m ?\<alpha> @ ?\<alpha>s) =
      (if ?m = 0 then sorted_wrt (%x y. y <= x) ?\<alpha>s
       else sorted_wrt (%x y. y <= x) (?\<alpha> # ?\<alpha>s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, t_empty),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_dunno))]
