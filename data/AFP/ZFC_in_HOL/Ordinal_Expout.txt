Loading theory "HOL-Cardinals.Fun_More" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding")
Loading theory "HOL-Library.FuncSet" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Library.Equipollence")
Loading theory "HOL-Cardinals.Order_Relation_More" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding" via "HOL-Cardinals.Wellorder_Relation" via "HOL-Cardinals.Wellfounded_More")
Loading theory "HOL-Cardinals.Order_Union" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions")
### theory "HOL-Cardinals.Fun_More"
### 0.074s elapsed time, 0.329s cpu time, 0.000s GC time
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Cardinals.Order_Union"
### 0.144s elapsed time, 0.596s cpu time, 0.046s GC time
Loading theory "HOL-Cardinals.Wellorder_Extension" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Cardinals.Cardinals")
### theory "HOL-Library.Function_Algebras"
### 0.108s elapsed time, 0.421s cpu time, 0.046s GC time
Loading theory "HOL-Library.Infinite_Set" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Library.Countable_Set")
### theory "HOL-Cardinals.Wellorder_Extension"
### 0.089s elapsed time, 0.351s cpu time, 0.000s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
### theory "HOL-Cardinals.Order_Relation_More"
### 0.271s elapsed time, 1.083s cpu time, 0.159s GC time
Loading theory "HOL-Cardinals.Wellfounded_More" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding" via "HOL-Cardinals.Wellorder_Relation")
### theory "HOL-Cardinals.Wellfounded_More"
### 0.029s elapsed time, 0.119s cpu time, 0.000s GC time
Loading theory "HOL-Cardinals.Wellorder_Relation" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding")
locale wo_rel
  fixes r :: "('a * 'a) set"
  assumes "wo_rel r"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  enumerate :: "'a set => nat => 'a"
### theory "HOL-Library.FuncSet"
### 0.417s elapsed time, 1.658s cpu time, 0.220s GC time
Loading theory "HOL-Library.Equipollence" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library")
### theory "HOL-Cardinals.Wellorder_Relation"
### 0.148s elapsed time, 0.583s cpu time, 0.061s GC time
Loading theory "HOL-Cardinals.Wellorder_Embedding" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Infinite_Set"
### 0.291s elapsed time, 1.138s cpu time, 0.174s GC time
Loading theory "HOL-Library.Old_Datatype" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Library.Countable_Set" via "HOL-Library.Countable")
### theory "HOL-Library.Nat_Bijection"
### 0.327s elapsed time, 1.286s cpu time, 0.160s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Cardinals.Wellorder_Embedding"
### 0.187s elapsed time, 0.739s cpu time, 0.099s GC time
Loading theory "HOL-Cardinals.Wellorder_Constructions" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic")
### theory "HOL-Library.Equipollence"
### 0.246s elapsed time, 0.976s cpu time, 0.099s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Set_Algebras"
### 0.432s elapsed time, 1.559s cpu time, 0.726s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
signature OLD_DATATYPE =
  sig
    val check_specs: spec list -> theory -> spec list * Proof.context
    type config = {quiet: bool, strict: bool}
    val default_config: config
    type descr =
       (int * (string * dtyp list * (string * dtyp list) list)) list
    val distinct_lemma: thm
    datatype dtyp
    = DtRec of int | DtTFree of string * sort | DtType of string * dtyp list
    type info =
       {case_cong: thm,
        case_cong_weak: thm,
        case_name: string,
        case_rewrites: thm list,
        descr: descr,
        distinct: thm list,
        exhaust: thm,
        index: int,
        induct: thm,
        inducts: thm list,
        inject: thm list,
        nchotomy: thm,
        rec_names: string list,
        rec_rewrites: thm list, split: thm, split_asm: thm}
    val read_specs: spec_cmd list -> theory -> spec list * Proof.context
    type spec =
       (binding * (string * sort) list * mixfix) *
       (binding * typ list * mixfix) list
    type spec_cmd =
       (binding * (string * string option) list * mixfix) *
       (binding * string list * mixfix) list
  end
structure Old_Datatype: OLD_DATATYPE
### theory "HOL-Library.Old_Datatype"
### 0.646s elapsed time, 2.389s cpu time, 0.871s GC time
Loading theory "HOL-Library.Countable" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Library.Countable_Set")
locale wo_rel
  fixes r :: "('a * 'a) set"
  assumes "wo_rel r"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
### theory "HOL-Cardinals.Wellorder_Constructions"
### 0.860s elapsed time, 3.239s cpu time, 0.950s GC time
Loading theory "HOL-Cardinals.Cardinal_Order_Relation" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Cardinal_Arithmetic")
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### Additional type variable(s) in locale specification "countable": 'a
consts
  flat :: "'a list stream => 'a stream"
class countable = type +
  assumes "ex_inj": "EX to_nat. inj to_nat"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
### theory "HOL-Library.Stream"
### 1.151s elapsed time, 4.386s cpu time, 1.073s GC time
Loading theory "HOL-Cardinals.Ordinal_Arithmetic" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Cardinals.Cardinals")
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "finite_item"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
val old_countable_datatype_tac = fn: Proof.context -> int -> tactic
locale wo_rel
  fixes r :: "('a * 'a) set"
  assumes "wo_rel r"
Found termination order: "size <*mlex*> {}"
### ML warning (line 93 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 139 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 143 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 145 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 156 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
signature BNF_LFP_COUNTABLE =
  sig
    val countable_datatype_tac: Proof.context -> tactic
    val derive_encode_injectives_thms:
       Proof.context -> string list -> thm list
  end
structure BNF_LFP_Countable: BNF_LFP_COUNTABLE
val countable_datatype_tac = fn: Proof.context -> thm -> thm Seq.seq
val countable_tac = fn: Proof.context -> int -> tactic
locale wo_rel2
  fixes r :: "('a * 'a) set"
    and s :: "('b * 'b) set"
  assumes "wo_rel2 r s"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Cardinals.Cardinal_Order_Relation"
### 1.089s elapsed time, 4.098s cpu time, 1.349s GC time
Loading theory "HOL-Cardinals.Cardinal_Arithmetic" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Cardinals.Cardinals")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Countable"
### 1.622s elapsed time, 6.212s cpu time, 1.593s GC time
Loading theory "HOL-Library.Countable_Set" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Cardinals.Cardinal_Arithmetic"
### 0.195s elapsed time, 0.766s cpu time, 0.066s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Cardinals.Ordinal_Arithmetic"
### 1.227s elapsed time, 4.648s cpu time, 1.381s GC time
Loading theory "HOL-Cardinals.Cardinals" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
### theory "HOL-Library.Countable_Set"
### 0.459s elapsed time, 1.819s cpu time, 0.162s GC time
### theory "HOL-Cardinals.Cardinals"
### 0.246s elapsed time, 0.942s cpu time, 0.073s GC time
Loading theory "Draft.ZFC_Library" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.327s elapsed time, 8.786s cpu time, 1.810s GC time
Loading theory "Draft.Templates" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.084s elapsed time, 0.285s cpu time, 0.079s GC time
### theory "HOL-Library.BigO"
### 0.802s elapsed time, 2.732s cpu time, 0.296s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Ordinal_ExpMoreTemplates")
### theory "Draft.ZFC_Library"
### 0.429s elapsed time, 1.209s cpu time, 0.135s GC time
Loading theory "Draft.ZFC_in_HOL" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals")
instantiation
  V :: zero
  zero_V == zero_class.zero :: V
instantiation
  V :: one
  one_V == one_class.one :: V
instantiation
  V :: distrib_lattice
  inf_V == inf :: V => V => V
  sup_V == sup :: V => V => V
  less_eq_V == less_eq :: V => V => bool
  less_V == less :: V => V => bool
instantiation
  V :: Sup
  Sup_V == Sup :: V set => V
instantiation
  V :: Inf
  Inf_V == Inf :: V set => V
instantiation
  V :: conditionally_complete_lattice
instantiation
  V :: zero_neq_one
instantiation
  V :: zero_less_one
consts
  ord_of_nat :: "nat => V"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ZFC_in_HOL"
### 0.868s elapsed time, 2.299s cpu time, 1.311s GC time
Loading theory "Draft.ZFC_Cardinals" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.Ordinal_Exp" via "Draft.Kirby")
### theory "Draft.ExtrEqs"
### 0.924s elapsed time, 2.412s cpu time, 1.311s GC time
### theory "Draft.ZFC_Cardinals"
### 0.714s elapsed time, 0.870s cpu time, 0.210s GC time
Loading theory "Draft.Kirby" (required by "Draft.Ordinal_ExpMoreTemplates" via "Draft.Ordinal_Exp")
instantiation
  V :: plus
  plus_V == plus :: V => V => V
instantiation
  V :: monoid_add
instantiation
  V :: times
  times_V == times :: V => V => V
instantiation
  V :: monoid_mult
### theory "Draft.Kirby"
### 0.329s elapsed time, 0.444s cpu time, 0.155s GC time
Loading theory "Draft.Ordinal_Exp" (required by "Draft.Ordinal_ExpMoreTemplates")
### theory "Draft.Ordinal_Exp"
### 0.091s elapsed time, 0.091s cpu time, 0.000s GC time
Loading theory "Draft.Ordinal_ExpMoreTemplates"
val templateLemmas =
   [("Ordinal_Exp.oexp_1_right", "?\<alpha> \<up> 1 = ?\<alpha>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Ordinal_Exp.oexp_0_right", "?\<alpha> \<up> 0 = 1",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Ordinal_Exp.omega_le_Limit", "Limit ?\<mu> ==> \<omega> <= ?\<mu>",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_inequation (less_equals, template_hole 0, template_var 0))),
    ("Ordinal_Exp.oexp_1", "Ord ?\<alpha> ==> 1 \<up> ?\<alpha> = 1",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 0),
         template_hole 0))),
    ("Ordinal_Exp.ord_of_nat_oexp",
     "ord_of_nat (?m ^ ?n) = ord_of_nat ?m \<up> ord_of_nat ?n",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Ordinal_Exp.Ord_oexp",
     "[| Ord ?\<alpha>; Ord ?\<beta> |] ==> Ord (?\<alpha> \<up> ?\<beta>)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Ordinal_Exp.oexp_0",
     "Ord ?\<alpha> ==>
      0 \<up> ?\<alpha> = (if ?\<alpha> = 0 then 1 else 0)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 0)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_hole 2)),
                 template_hole 0),
               template_hole 2)
             )))),
    ("Ordinal_Exp.oexp_succ",
     "Ord ?\<beta> ==>
      ?\<alpha> \<up> ZFC_in_HOL.succ ?\<beta> =
      ?\<alpha> \<up> ?\<beta> * ?\<alpha>",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           template_var 0)))),
    ("Ordinal_Exp.countable_oexp",
     "?\<alpha> : elts \<omega>1 ==>
      \<omega> \<up> ?\<alpha> : elts \<omega>1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_hole 2)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)),
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2)))
           ))),
    ("Ordinal_Exp.Limit_omega_oexp",
     "[| Ord ?\<delta>; ?\<delta> ~= 0 |]
      ==> Limit (\<omega> \<up> ?\<delta>)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Ordinal_Exp.\<omega>_power_succ_gtr",
     "Ord ?\<alpha> ==>
      \<omega> \<up> ?\<alpha> * ord_of_nat ?n
      < \<omega> \<up> ZFC_in_HOL.succ ?\<alpha>",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 1)),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 0, template_var 1))))),
    ("Ordinal_Exp.oexp_\<omega>_Limit",
     "Limit ?\<beta> ==>
      \<omega> \<up> ?\<beta> =
      \<Squnion> ((\<up>) \<omega> ` elts ?\<beta>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty),
             template_app (template_hole 0, template_var 0)))))),
    ("Ordinal_Exp.finite_omega_power",
     "[| 1 < ?n; ?n : elts \<omega> |] ==> ?n \<up> \<omega> = \<omega>",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_hole 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_hole 2),
         template_hole 2))),
    ("Ordinal_Exp.oexp_mult_commute",
     "Ord ?\<alpha> ==>
      ?\<alpha> \<up> ord_of_nat ?j * ?\<alpha> =
      ?\<alpha> * ?\<alpha> \<up> ord_of_nat ?j",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0))),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0)))))),
    ("Ordinal_Exp.oexp_gt_0_iff",
     "Ord ?\<beta> ==>
      (0 < ?\<alpha> \<up> ?\<beta>) = (0 < ?\<alpha> | ?\<beta> = 0)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_var 1))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_hole 3))
             )))),
    ("Ordinal_Exp.Limit_oexp",
     "[| Limit ?\<gamma>; Ord ?\<alpha>; 1 < ?\<alpha> |]
      ==> Limit (?\<alpha> \<up> ?\<gamma>)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_inequation (less_than, template_hole 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Ordinal_Exp.oexp_eq_0_iff",
     "Ord ?\<beta> ==>
      (?\<alpha> \<up> ?\<beta> = 0) = (?\<alpha> = 0 & ?\<beta> ~= 0)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 3, template_var 0),
             template_var 1),
           template_hole 2),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 2)),
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_hole 2)))
             )))),
    ("Ordinal_Exp.omega_closed_oexp",
     "[| ?\<alpha> : elts \<omega>; ?\<beta> : elts \<omega> |]
      ==> ?\<alpha> \<up> ?\<beta> : elts \<omega>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_hole 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_app (template_hole 2, template_hole 1))
           ))),
    ("Ordinal_Exp.le_oexp'",
     "[| Ord ?\<alpha>; 1 < ?\<alpha>; Ord ?\<beta> |]
      ==> ?\<beta> <= ?\<alpha> \<up> ?\<beta>",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_inequation (less_than, template_hole 2, template_var 1),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Ordinal_Exp.\<omega>_oexp_iff",
     "[| Ord ?\<alpha>; Ord ?\<beta> |]
      ==> (\<omega> \<up> ?\<alpha> = \<omega> \<up> ?\<beta>) =
          (?\<alpha> = ?\<beta>)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)),
         template_equation (template_var 1, template_var 0)))),
    ("Ordinal_Exp.le_oexp",
     "[| Ord ?\<alpha>; Ord ?\<beta>; ?\<beta> ~= 0 |]
      ==> ?\<alpha> <= ?\<alpha> \<up> ?\<beta>",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Ordinal_Exp.oexp_Limit",
     "Limit ?\<beta> ==>
      ?\<alpha> \<up> ?\<beta> =
      (if ?\<alpha> = 0 then 0
       else \<Squnion> ((\<up>) ?\<alpha> ` elts ?\<beta>))",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 5, template_var 0),
                template_var 1)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 6, template_var 0),
                     template_hole 3)),
                 template_hole 3),
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, t_empty),
                   template_app (template_hole 0, template_var 1))))
             )))),
    ("Ordinal_Exp.oexp_mult",
     "[| Ord ?\<alpha>; Ord ?\<beta>; Ord ?\<gamma> |]
      ==> ?\<alpha> \<up> (?\<beta> * ?\<gamma>) =
          (?\<alpha> \<up> ?\<beta>) \<up> ?\<gamma>",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Ordinal_Exp.oexp_add",
     "[| Ord ?\<alpha>; Ord ?\<beta>; Ord ?\<gamma> |]
      ==> ?\<alpha> \<up> (?\<beta> + ?\<gamma>) =
          ?\<alpha> \<up> ?\<beta> * ?\<alpha> \<up> ?\<gamma>",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Ordinal_Exp.oexp_Limit_le",
     "[| ?\<beta> < ?\<gamma>; Limit ?\<gamma>; Ord ?\<beta>;
         0 < ?\<alpha> |]
      ==> ?\<alpha> \<up> ?\<beta> <= ?\<alpha> \<up> ?\<gamma>",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, template_var 2)),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Ordinal_Exp.oexp_mono",
     "[| Ord ?\<alpha>; ?\<alpha> ~= 0; Ord ?\<beta>;
         ?\<gamma> \<sqsubseteq> ?\<beta> |]
      ==> ?\<alpha> \<up> ?\<gamma> <= ?\<alpha> \<up> ?\<beta>",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 3)),
        template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Ordinal_Exp.oexp_less",
     "[| ?\<beta> : elts ?\<gamma>; Ord ?\<gamma>; 1 < ?\<alpha>;
         Ord ?\<alpha> |]
      ==> ?\<alpha> \<up> ?\<beta> < ?\<alpha> \<up> ?\<gamma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_inequation (less_than, template_hole 1, template_var 0),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Ordinal_Exp.oexp_mono_le",
     "[| ?\<gamma> <= ?\<beta>; ?\<alpha> ~= 0; Ord ?\<alpha>; Ord ?\<beta>;
         Ord ?\<gamma> |]
      ==> ?\<alpha> \<up> ?\<gamma> <= ?\<alpha> \<up> ?\<beta>",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_negation
         (template_equation (template_var 0, template_hole 2)),
        template_predicate (template_app (template_hole 1, template_var 0)),
        template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Ordinal_Exp.oexp_sup",
     "[| ?\<alpha> ~= 0; Ord ?\<alpha>; Ord ?\<beta>; Ord ?\<gamma> |]
      ==> ?\<alpha> \<up> (?\<beta> \<squnion> ?\<gamma>) =
          ?\<alpha> \<up> ?\<beta> \<squnion> ?\<alpha> \<up> ?\<gamma>",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 3)),
        template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("Ordinal_Exp.oexp_less_iff",
     "[| 0 < ?\<alpha>; Ord ?\<alpha>; Ord ?\<beta>; Ord ?\<gamma> |]
      ==> (?\<alpha> \<up> ?\<beta> < ?\<alpha> \<up> ?\<gamma>) =
          (?\<beta> : elts ?\<gamma> & 1 < ?\<alpha>)",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 2),
        template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 1, template_var 0))),
           template_app
            (template_app (template_hole 8, template_hole 0),
             template_var 2))))),
    ("Ordinal_Exp.oexp_Sup",
     "[| ?\<alpha> ~= 0; Ord ?\<alpha>; ?X <= ON; small ?X; ?X ~= {} |]
      ==> ?\<alpha> \<up> \<Squnion> ?X =
          \<Squnion> ((\<up>) ?\<alpha> ` ?X)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 9)),
        template_predicate (template_app (template_hole 8, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 6, template_hole 8)),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 1)),
             template_var 0)))))]:
   (string * thm * template) list
### theory "Draft.Ordinal_ExpMoreTemplates"
### 0.753s elapsed time, 1.964s cpu time, 1.494s GC time
val it = (): unit
