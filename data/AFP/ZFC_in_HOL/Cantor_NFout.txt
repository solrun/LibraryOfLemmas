Loading theory "HOL-Cardinals.Order_Relation_More" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.Cantor_NF" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding" via "HOL-Cardinals.Wellorder_Relation" via "HOL-Cardinals.Wellfounded_More")
Loading theory "HOL-Cardinals.Order_Union" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.Cantor_NF" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions")
Loading theory "HOL-Cardinals.Fun_More" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.Cantor_NF" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding")
Loading theory "HOL-Library.FuncSet" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.Cantor_NF" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Library.Equipollence")
### theory "HOL-Cardinals.Fun_More"
### 0.097s elapsed time, 0.402s cpu time, 0.052s GC time
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
### theory "HOL-Cardinals.Order_Union"
### 0.113s elapsed time, 0.462s cpu time, 0.052s GC time
Loading theory "HOL-Cardinals.Wellorder_Extension" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.Cantor_NF" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Cardinals.Cardinals")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Cardinals.Wellorder_Extension"
### 0.075s elapsed time, 0.305s cpu time, 0.000s GC time
Loading theory "HOL-Library.Infinite_Set" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.Cantor_NF" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Library.Countable_Set")
### theory "HOL-Cardinals.Order_Relation_More"
### 0.191s elapsed time, 0.775s cpu time, 0.052s GC time
Loading theory "HOL-Cardinals.Wellfounded_More" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.Cantor_NF" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding" via "HOL-Cardinals.Wellorder_Relation")
### theory "HOL-Library.Function_Algebras"
### 0.104s elapsed time, 0.413s cpu time, 0.000s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
### theory "HOL-Cardinals.Wellfounded_More"
### 0.036s elapsed time, 0.144s cpu time, 0.000s GC time
Loading theory "HOL-Cardinals.Wellorder_Relation" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.Cantor_NF" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding")
locale wo_rel
  fixes r :: "('a * 'a) set"
  assumes "wo_rel r"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  enumerate :: "'a set => nat => 'a"
### theory "HOL-Cardinals.Wellorder_Relation"
### 0.136s elapsed time, 0.527s cpu time, 0.068s GC time
Loading theory "HOL-Cardinals.Wellorder_Embedding" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.Cantor_NF" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.FuncSet"
### 0.435s elapsed time, 1.723s cpu time, 0.250s GC time
Loading theory "HOL-Library.Equipollence" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.Cantor_NF" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library")
### theory "HOL-Library.Infinite_Set"
### 0.290s elapsed time, 1.137s cpu time, 0.198s GC time
Loading theory "HOL-Library.Old_Datatype" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.Cantor_NF" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Library.Countable_Set" via "HOL-Library.Countable")
### theory "HOL-Library.Nat_Bijection"
### 0.322s elapsed time, 1.261s cpu time, 0.198s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Cardinals.Wellorder_Embedding"
### 0.183s elapsed time, 0.714s cpu time, 0.089s GC time
Loading theory "HOL-Cardinals.Wellorder_Constructions" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.Cantor_NF" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic")
### theory "HOL-Library.Equipollence"
### 0.272s elapsed time, 1.066s cpu time, 0.184s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
locale wo_rel
  fixes r :: "('a * 'a) set"
  assumes "wo_rel r"
signature OLD_DATATYPE =
  sig
    val check_specs: spec list -> theory -> spec list * Proof.context
    type config = {quiet: bool, strict: bool}
    val default_config: config
    type descr =
       (int * (string * dtyp list * (string * dtyp list) list)) list
    val distinct_lemma: thm
    datatype dtyp
    = DtRec of int | DtTFree of string * sort | DtType of string * dtyp list
    type info =
       {case_cong: thm,
        case_cong_weak: thm,
        case_name: string,
        case_rewrites: thm list,
        descr: descr,
        distinct: thm list,
        exhaust: thm,
        index: int,
        induct: thm,
        inducts: thm list,
        inject: thm list,
        nchotomy: thm,
        rec_names: string list,
        rec_rewrites: thm list, split: thm, split_asm: thm}
    val read_specs: spec_cmd list -> theory -> spec list * Proof.context
    type spec =
       (binding * (string * sort) list * mixfix) *
       (binding * typ list * mixfix) list
    type spec_cmd =
       (binding * (string * string option) list * mixfix) *
       (binding * string list * mixfix) list
  end
structure Old_Datatype: OLD_DATATYPE
### theory "HOL-Library.Old_Datatype"
### 0.641s elapsed time, 2.350s cpu time, 0.827s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Set_Algebras"
### 0.408s elapsed time, 1.450s cpu time, 0.643s GC time
Loading theory "HOL-Library.Countable" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.Cantor_NF" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Library.Countable_Set")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
### theory "HOL-Cardinals.Wellorder_Constructions"
### 0.828s elapsed time, 3.102s cpu time, 0.821s GC time
Loading theory "HOL-Cardinals.Cardinal_Order_Relation" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.Cantor_NF" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Cardinal_Arithmetic")
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
### Additional type variable(s) in locale specification "countable": 'a
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
class countable = type +
  assumes "ex_inj": "EX to_nat. inj to_nat"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.150s elapsed time, 4.371s cpu time, 1.037s GC time
Loading theory "HOL-Cardinals.Ordinal_Arithmetic" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.Cantor_NF" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Cardinals.Cardinals")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "finite_item"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
locale wo_rel
  fixes r :: "('a * 'a) set"
  assumes "wo_rel r"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
val old_countable_datatype_tac = fn: Proof.context -> int -> tactic
locale wo_rel2
  fixes r :: "('a * 'a) set"
    and s :: "('b * 'b) set"
  assumes "wo_rel2 r s"
Found termination order: "size <*mlex*> {}"
### ML warning (line 93 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 139 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 143 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 145 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 156 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
signature BNF_LFP_COUNTABLE =
  sig
    val countable_datatype_tac: Proof.context -> tactic
    val derive_encode_injectives_thms:
       Proof.context -> string list -> thm list
  end
structure BNF_LFP_Countable: BNF_LFP_COUNTABLE
val countable_datatype_tac = fn: Proof.context -> thm -> thm Seq.seq
val countable_tac = fn: Proof.context -> int -> tactic
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Cardinals.Cardinal_Order_Relation"
### 0.783s elapsed time, 3.071s cpu time, 0.424s GC time
Loading theory "HOL-Cardinals.Cardinal_Arithmetic" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.Cantor_NF" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library" via "HOL-Cardinals.Cardinals")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Countable"
### 1.263s elapsed time, 4.961s cpu time, 0.701s GC time
Loading theory "HOL-Library.Countable_Set" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.Cantor_NF" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Cardinals.Cardinal_Arithmetic"
### 0.231s elapsed time, 0.901s cpu time, 0.158s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Cardinals.Ordinal_Arithmetic"
### 0.908s elapsed time, 3.536s cpu time, 0.562s GC time
Loading theory "HOL-Cardinals.Cardinals" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.Cantor_NF" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL" via "Draft.ZFC_Library")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Cardinals.Cardinals"
### 0.250s elapsed time, 0.986s cpu time, 0.068s GC time
### theory "HOL-Library.Countable_Set"
### 0.487s elapsed time, 1.920s cpu time, 0.228s GC time
Loading theory "Draft.ZFC_Library" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.Cantor_NF" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals" via "Draft.ZFC_in_HOL")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.107s elapsed time, 7.992s cpu time, 1.085s GC time
Loading theory "Draft.Templates" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.060s elapsed time, 0.212s cpu time, 0.000s GC time
### theory "HOL-Library.BigO"
### 0.826s elapsed time, 2.896s cpu time, 0.345s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Cantor_NFMoreTemplates")
### theory "Draft.ZFC_Library"
### 0.457s elapsed time, 1.408s cpu time, 0.199s GC time
Loading theory "Draft.ZFC_in_HOL" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.Cantor_NF" via "Draft.Ordinal_Exp" via "Draft.Kirby" via "Draft.ZFC_Cardinals")
instantiation
  V :: zero
  zero_V == zero_class.zero :: V
instantiation
  V :: one
  one_V == one_class.one :: V
instantiation
  V :: distrib_lattice
  inf_V == inf :: V => V => V
  sup_V == sup :: V => V => V
  less_eq_V == less_eq :: V => V => bool
  less_V == less :: V => V => bool
instantiation
  V :: Sup
  Sup_V == Sup :: V set => V
instantiation
  V :: Inf
  Inf_V == Inf :: V set => V
instantiation
  V :: conditionally_complete_lattice
instantiation
  V :: zero_neq_one
instantiation
  V :: zero_less_one
consts
  ord_of_nat :: "nat => V"
### theory "Draft.ZFC_in_HOL"
### 0.480s elapsed time, 1.015s cpu time, 0.119s GC time
Loading theory "Draft.ZFC_Cardinals" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.Cantor_NF" via "Draft.Ordinal_Exp" via "Draft.Kirby")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.587s elapsed time, 1.256s cpu time, 0.185s GC time
### theory "Draft.ZFC_Cardinals"
### 1.101s elapsed time, 2.102s cpu time, 1.338s GC time
Loading theory "Draft.Kirby" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.Cantor_NF" via "Draft.Ordinal_Exp")
instantiation
  V :: plus
  plus_V == plus :: V => V => V
instantiation
  V :: monoid_add
instantiation
  V :: times
  times_V == times :: V => V => V
instantiation
  V :: monoid_mult
### theory "Draft.Kirby"
### 0.341s elapsed time, 0.399s cpu time, 0.081s GC time
Loading theory "Draft.Ordinal_Exp" (required by "Draft.Cantor_NFMoreTemplates" via "Draft.Cantor_NF")
### theory "Draft.Ordinal_Exp"
### 0.114s elapsed time, 0.173s cpu time, 0.081s GC time
Loading theory "Draft.Cantor_NF" (required by "Draft.Cantor_NFMoreTemplates")
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "length <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
### theory "Draft.Cantor_NF"
### 0.342s elapsed time, 0.417s cpu time, 0.094s GC time
Loading theory "Draft.Cantor_NFMoreTemplates"
val templateLemmas =
   [("Cantor_NF.\<omega>_of_Cantor_Nil", "\<omega>_of_Cantor [] ?ms = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Cantor_NF.Cantor_sum_Nil", "Cantor_sum [] ?ms = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Cantor_NF.indecomposable_imp_Ord",
     "indecomposable ?\<alpha> ==> Ord ?\<alpha>",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Cantor_NF.indecomposable_succ",
     "indecomposable (ZFC_in_HOL.succ ?\<alpha>) = (?\<alpha> = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0))
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Cantor_NF.\<omega>_of_Cantor_Nil2",
     "\<omega>_of_Cantor (?\<alpha> # ?\<alpha>s) [] = []",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Cantor_NF.Cantor_sum_Nil2",
     "Cantor_sum (?\<alpha> # ?\<alpha>s) [] = 0",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Cantor_NF.\<omega>_of_Cantor_subset",
     "list.set (\<omega>_of_Cantor ?\<alpha>s ?ms) <= list.set ?\<alpha>s",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Cantor_NF.\<omega>_sum_of_Cantor",
     "\<omega>_sum (\<omega>_of_Cantor ?\<alpha>s ?ms) =
      Cantor_sum ?\<alpha>s ?ms",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Cantor_NF.indecomposable_\<omega>_power",
     "Ord ?\<delta> ==> indecomposable (\<omega> \<up> ?\<delta>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Cantor_NF.\<omega>_sum_append",
     "\<omega>_sum (?xs @ ?ys) = \<omega>_sum ?xs + \<omega>_sum ?ys",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Cantor_NF.Ord_\<omega>_sum",
     "list.set ?\<alpha>s <= ON ==> Ord (\<omega>_sum ?\<alpha>s)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 0),
          template_app (template_hole 2, template_hole 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Cantor_NF.\<omega>_sum_Cons",
     "\<omega>_sum (?\<alpha> # ?\<alpha>s) =
      \<omega> \<up> ?\<alpha> + \<omega>_sum ?\<alpha>s",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_app (template_hole 4, template_var 0)))),
    ("Cantor_NF.\<omega>_sum_replicate",
     "\<omega>_sum (replicate ?m ?a) = \<omega> \<up> ?a * ord_of_nat ?m",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Cantor_NF.Ord_Cantor_sum",
     "list.set ?\<alpha>s <= ON ==> Ord (Cantor_sum ?\<alpha>s ?ms)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_hole 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Cantor_NF.indecomposable_imp_Limit",
     "[| indecomposable ?\<alpha>; 1 < ?\<alpha> |] ==> Limit ?\<alpha>",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_inequation (less_than, template_hole 1, template_var 0)],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Cantor_NF.\<omega>_sum_take_drop",
     "\<omega>_sum ?\<alpha>s =
      \<omega>_sum (take ?k ?\<alpha>s) +
      \<omega>_sum (drop ?k ?\<alpha>s)",
     template_equation
      (template_app (template_hole 3, template_var 1),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Cantor_NF.mult_oexp_\<omega>",
     "Ord ?\<alpha> ==>
      ?\<alpha> * ?\<alpha> \<up> \<omega> = ?\<alpha> \<up> \<omega>",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Cantor_NF.\<omega>_of_Cantor_Cons",
     "\<omega>_of_Cantor (?\<alpha> # ?\<alpha>s) (?m # ?ms) =
      replicate ?m ?\<alpha> @ \<omega>_of_Cantor ?\<alpha>s ?ms",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3)),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 0)))),
    ("Cantor_NF.\<omega>_sum_0E",
     "[| \<omega>_sum ?\<alpha>s = 0; list.set ?\<alpha>s <= ON |]
      ==> ?\<alpha>s = []",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 0), template_hole 6),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 0),
          template_app (template_hole 3, template_hole 2))],
       template_equation (template_var 0, template_hole 0))),
    ("Cantor_NF.indecomposable_iff_\<omega>_power",
     "indecomposable ?\<mu> =
      (?\<mu> = 0 |
       (EX \<delta>. ?\<mu> = \<omega> \<up> \<delta> & Ord \<delta>))",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_hole 5)),
             template_app (template_hole 4, t_empty))
           ))),
    ("Cantor_NF.Cantor_sum_Cons",
     "Cantor_sum (?\<alpha> # ?\<alpha>s) (?m # ?ms) =
      \<omega> \<up> ?\<alpha> * ord_of_nat ?m + Cantor_sum ?\<alpha>s ?ms",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 3)),
             template_app (template_hole 0, template_var 1))),
         template_app
          (template_app (template_hole 7, template_var 2),
           template_var 0)))),
    ("Cantor_NF.indecomposable_imp_eq",
     "[| indecomposable ?\<alpha>; Ord ?\<beta>; ?\<beta> < ?\<alpha> |]
      ==> ?\<beta> + ?\<alpha> = ?\<alpha>",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("Cantor_NF.eq_imp_indecomposable",
     "[| Ord ?\<alpha>;
         !!\<beta>.
            \<beta> : elts ?\<alpha> ==> \<beta> + ?\<alpha> = ?\<alpha> |]
      ==> indecomposable ?\<alpha>",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Cantor_NF.\<omega>_le_\<omega>_sum",
     "[| ?k < length ?\<alpha>s; list.set ?\<alpha>s <= ON |]
      ==> \<omega> \<up> ?\<alpha>s ! ?k <= \<omega>_sum ?\<alpha>s",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 9, template_var 0)),
        template_inequation
         (less_equals, template_app (template_hole 7, template_var 0),
          template_app (template_hole 6, template_hole 5))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Cantor_NF.mult_oexp_indec",
     "[| Ord ?\<alpha>; Limit ?\<mu>; indecomposable ?\<mu> |]
      ==> ?\<alpha> * ?\<alpha> \<up> ?\<mu> = ?\<alpha> \<up> ?\<mu>",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Cantor_NF.indecomposable_imp_type2",
     "[| indecomposable ?\<gamma>; ?X <= elts ?\<gamma> |]
      ==> ordertype ?X VWF = ?\<gamma> |
          ordertype (elts ?\<gamma> - ?X) VWF = ?\<gamma>",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 5, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_hole 1)),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app (template_hole 5, template_var 1)),
                       template_var 0)),
                   template_hole 1)),
               template_var 1))
           ))),
    ("Cantor_NF.Cantor_dec_Cons_iff",
     "sorted_wrt (%x y. y < x) (?\<alpha> # ?\<beta> # ?\<beta>s) =
      (?\<beta> < ?\<alpha> &
       sorted_wrt (%x y. y < x) (?\<beta> # ?\<beta>s))",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Cantor_NF.\<omega>_dec_Cons_iff",
     "sorted_wrt (%x y. y <= x) (?\<alpha> # ?\<beta> # ?\<beta>s) =
      (?\<beta> <= ?\<alpha> &
       sorted_wrt (%x y. y <= x) (?\<beta> # ?\<beta>s))",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Cantor_NF.\<omega>_dec_of_Cantor",
     "[| sorted_wrt (%x y. y < x) ?\<alpha>s;
         length ?\<alpha>s = length ?ms |]
      ==> sorted_wrt (%x y. y <= x) (\<omega>_of_Cantor ?\<alpha>s ?ms)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, t_empty), template_var 1)
            ),
        template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, t_empty),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Cantor_NF.indecomposableD",
     "[| indecomposable ?\<alpha>; ?\<beta> < ?\<alpha>;
         ?\<gamma> < ?\<alpha>; Ord ?\<beta>; Ord ?\<gamma> |]
      ==> ?\<beta> + ?\<gamma> < ?\<alpha>",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_inequation (less_than, template_var 1, template_var 2),
        template_inequation (less_than, template_var 0, template_var 2),
        template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 2))),
    ("Cantor_NF.\<omega>_sum_less_\<omega>_power",
     "[| sorted_wrt (%x y. y <= x) (?\<alpha> # ?\<alpha>s);
         list.set (?\<alpha> # ?\<alpha>s) <= ON |]
      ==> \<omega>_sum ?\<alpha>s < \<omega> \<up> ?\<alpha> * \<omega>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, t_empty),
              template_app
               (template_app (template_hole 9, template_var 1),
                template_var 0))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 0)),
          template_app (template_hole 6, template_hole 5))],
       template_inequation
        (less_than, template_app (template_hole 3, template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_hole 0)))),
    ("Cantor_NF.cnf_1",
     "[| ?\<alpha> : elts ?\<beta>; Ord ?\<beta>; 0 < ?m |]
      ==> \<omega> \<up> ?\<alpha> * ord_of_nat ?n
          < \<omega> \<up> ?\<beta> * ord_of_nat ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app (template_hole 8, template_var 2))
            ),
        template_predicate (template_app (template_hole 7, template_var 2)),
        template_inequation (less_than, template_hole 5, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 3)),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2)),
           template_app (template_hole 0, template_var 1))))),
    ("Cantor_NF.\<omega>_sum_less_self",
     "[| list.set (?\<alpha> # ?\<alpha>s) <= ON;
         sorted_wrt (%x y. y <= x) (?\<alpha> # ?\<alpha>s) |]
      ==> \<omega>_sum ?\<alpha>s
          < \<omega> \<up> ?\<alpha> + \<omega>_sum ?\<alpha>s",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 10,
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 0)),
          template_app (template_hole 8, template_hole 7)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, t_empty),
              template_app
               (template_app (template_hole 9, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_than, template_app (template_hole 3, template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_app (template_hole 3, template_var 0))))),
    ("Cantor_NF.indecomposable_is_\<omega>_power",
     "[| indecomposable ?\<mu>; ?\<mu> = 0 ==> ?thesis;
         !!\<delta>.
            [| Ord \<delta>; ?\<mu> = \<omega> \<up> \<delta> |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_implication
         ([template_equation (template_var 1, template_hole 4)],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Cantor_NF.indecomposable2",
     "[| ?y < ?x; ?z < ?x; !!y. y < ?x ==> y + ?x = ?x |] ==> ?y + ?z < ?x",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_var 0, template_var 1),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("Cantor_NF.in_elts_\<omega>_sum",
     "?\<delta> : elts (\<omega>_sum ?\<alpha>s) ==>
      EX k<length ?\<alpha>s.
         EX \<gamma>:elts (\<omega> \<up> ?\<alpha>s ! k).
            ?\<delta> = \<omega>_sum (take k ?\<alpha>s) + \<gamma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 0)))
            )],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Cantor_NF.type_imp_indecomposable",
     "[| Ord ?\<alpha>;
         !!X. X <= elts ?\<alpha> ==>
              ordertype X VWF = ?\<alpha> |
              ordertype (elts ?\<alpha> - X) VWF = ?\<alpha> |]
      ==> indecomposable ?\<alpha>",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 0)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Cantor_NF.\<omega>_power_imp_eq",
     "[| ?\<beta> < \<omega> \<up> ?\<delta>; Ord ?\<beta>; Ord ?\<delta>;
         ?\<delta> ~= 0 |]
      ==> ?\<beta> + \<omega> \<up> ?\<delta> = \<omega> \<up> ?\<delta>",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app
           (template_app (template_hole 6, template_hole 5),
            template_var 0)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_var 0)),
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_var 0)))),
    ("Cantor_NF.\<omega>_dec_of_Cantor_aux",
     "[| sorted_wrt (%x y. y < x) (?\<alpha> # ?\<alpha>s);
         length ?\<alpha>s = length ?ms |]
      ==> sorted_wrt (%x y. y <= x)
           (\<omega>_of_Cantor (?\<alpha> # ?\<alpha>s) (?m # ?ms))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, t_empty),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2))
            ),
        template_equation
         (template_app (template_hole 4, template_var 2),
          template_app (template_hole 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, t_empty),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 6, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Cantor_NF.Cantor_sum_ge",
     "[| list.set (?\<alpha> # ?\<alpha>s) <= ON; list.set ?ms <= {0<..};
         0 < length ?ms |]
      ==> \<omega> \<up> ?\<alpha>
          <= Cantor_sum (?\<alpha> # ?\<alpha>s) ?ms",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 13,
            template_app
             (template_app (template_hole 12, template_var 2),
              template_var 1)),
          template_app (template_hole 11, template_hole 10)),
        template_inequation
         (less_equals, template_app (template_hole 8, template_var 0),
          template_app (template_hole 7, template_hole 6)),
        template_inequation
         (less_than, template_hole 6,
          template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_hole 1), template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 12, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Cantor_NF.Cantor_sum_0E",
     "[| Cantor_sum ?\<alpha>s ?ms = 0; list.set ?\<alpha>s <= ON;
         list.set ?ms <= {0<..}; length ?\<alpha>s = length ?ms |]
      ==> ?\<alpha>s = []",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 14, template_var 1),
            template_var 0),
          template_hole 13),
        template_inequation
         (less_equals, template_app (template_hole 11, template_var 1),
          template_app (template_hole 10, template_hole 9)),
        template_inequation
         (less_equals, template_app (template_hole 7, template_var 0),
          template_app (template_hole 6, template_hole 5)),
        template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation (template_var 1, template_hole 0))),
    ("Cantor_NF.\<omega>_dec_replicate",
     "sorted_wrt (%x y. y <= x) (replicate ?m ?\<alpha> @ ?\<alpha>s) =
      (if ?m = 0 then sorted_wrt (%x y. y <= x) ?\<alpha>s
       else sorted_wrt (%x y. y <= x) (?\<alpha> # ?\<alpha>s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, t_empty),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_hole 1)),
               template_app
                (template_app (template_hole 7, t_empty), template_var 0)),
             template_app
              (template_app (template_hole 7, t_empty),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Cantor_NF.\<omega>_nf_exists",
     "[| Ord ?\<alpha>;
         !!\<alpha>s.
            [| list.set \<alpha>s <= ON;
               sorted_wrt (%x y. y <= x) \<alpha>s;
               ?\<alpha> = \<omega>_sum \<alpha>s |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("Cantor_NF.indecomposable_ordertype_ge",
     "[| indecomposable ?\<alpha>; ?\<alpha> <= ordertype ?A VWF; small ?A;
         small ?B |]
      ==> ?\<alpha> <= ordertype ?B VWF |
          ?\<alpha> <= ordertype (?A - ?B) VWF",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_hole 3)),
        template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 3))),
             template_app
              (template_app (template_hole 5, template_var 2),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)),
                 template_hole 3)))
           ))),
    ("Cantor_NF.indecomposable_ordertype_eq",
     "[| indecomposable ?\<alpha>; ordertype ?A VWF = ?\<alpha>; ?B <= ?A;
         small ?A |]
      ==> ordertype ?B VWF = ?\<alpha> |
          ordertype (?A - ?B) VWF = ?\<alpha>",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 1),
            template_hole 4),
          template_var 2),
        template_inequation (less_equals, template_var 0, template_var 1),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_hole 4)),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0)),
                   template_hole 4)),
               template_var 2))
           ))),
    ("Cantor_NF.indecomposable_ordertype_finite_ge",
     "[| indecomposable ?\<alpha>; finite ?\<A>; ?A <= \<Union> ?\<A>;
         ?\<A> ~= {}; ?\<alpha> <= ordertype ?A VWF;
         small (\<Union> ?\<A>) |]
      ==> EX X:?\<A>. ?\<alpha> <= ordertype X VWF",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 8, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 3, template_var 0),
            template_hole 2)),
        template_predicate
         (
            template_app
             (template_hole 1,
              template_app (template_hole 8, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), t_empty)
           ))),
    ("Cantor_NF.cnf_2",
     "[| list.set (?\<alpha> # ?\<alpha>s) <= ON; list.set ?ms <= {0<..};
         length ?\<alpha>s = length ?ms;
         sorted_wrt (%x y. y < x) (?\<alpha> # ?\<alpha>s) |]
      ==> Cantor_sum ?\<alpha>s ?ms < \<omega> \<up> ?\<alpha>",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 15,
            template_app
             (template_app (template_hole 14, template_var 2),
              template_var 1)),
          template_app (template_hole 13, template_hole 12)),
        template_inequation
         (less_equals, template_app (template_hole 10, template_var 0),
          template_app (template_hole 9, template_hole 8)),
        template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, t_empty),
              template_app
               (template_app (template_hole 14, template_var 2),
                template_var 1))
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 2)))),
    ("Cantor_NF.indecomposable_alt",
     "[| Ord ?\<alpha>; Ord ?\<beta>; ?\<beta> < ?\<alpha>;
         !!\<beta> \<gamma>.
            [| \<beta> < ?\<alpha>; \<gamma> < ?\<alpha>; Ord \<gamma> |]
            ==> \<beta> + \<gamma> < ?\<alpha> |]
      ==> ?\<beta> + ?\<alpha> = ?\<alpha>",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_inequation (less_than, template_var 0, template_var 1),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_var 1))),
    ("Cantor_NF.indecomposable_ordertype_finite_eq",
     "[| indecomposable ?\<alpha>; finite ?\<A>; pairwise disjnt ?\<A>;
         \<Union> ?\<A> = ?A; ?\<A> ~= {}; ordertype ?A VWF = ?\<alpha>;
         small ?A |]
      ==> EX X:?\<A>. ordertype X VWF = ?\<alpha>",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 2)),
        template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_hole 10),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 8, template_var 1), template_var 0),
        template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 0),
            template_hole 2),
          template_var 2),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), t_empty)
           ))),
    ("Cantor_NF.Cantor_nf_exists",
     "[| Ord ?\<alpha>;
         !!\<alpha>s ms.
            [| list.set \<alpha>s <= ON; list.set ms <= {0<..};
               length \<alpha>s = length ms;
               sorted_wrt (%x y. y < x) \<alpha>s;
               ?\<alpha> = Cantor_sum \<alpha>s ms |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 1)),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_predicate (template_var 0))),
    ("Cantor_NF.indecomposable_imp_type",
     "[| indecomposable ?\<gamma>; !!b. ordertype (?X b) VWF <= ?\<gamma>;
         !!b. small (?X b); !!b. ?X b <= ON;
         elts ?\<gamma> <= \<Union> (range ?X) |]
      ==> EX b. ordertype (?X b) VWF = ?\<gamma>",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 1)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_inequation
         (less_equals, template_app (template_hole 5, template_var 1),
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, t_empty), template_hole 2)))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Cantor_NF.\<omega>_sum_nf_unique_aux",
     "[| Ord ?\<alpha>; list.set ?\<alpha>s <= ON; list.set ?\<beta>s <= ON;
         sorted_wrt (%x y. y <= x) ?\<alpha>s;
         sorted_wrt (%x y. y <= x) ?\<beta>s;
         ?\<alpha> = \<omega>_sum ?\<alpha>s;
         ?\<alpha> = \<omega>_sum ?\<beta>s |]
      ==> ?\<alpha>s = ?\<beta>s",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_hole 8)),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 0),
          template_app (template_hole 5, template_hole 8)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, t_empty), template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, t_empty), template_var 0)
            ),
        template_equation
         (template_var 2, template_app (template_hole 1, template_var 1)),
        template_equation
         (template_var 2, template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Cantor_NF.less_\<omega>_power",
     "[| Ord ?\<alpha>1.0; Ord ?\<beta>; ?\<alpha>2.0 : elts ?\<alpha>1.0;
         ?\<beta> < \<omega> \<up> ?\<alpha>2.0; 0 < ?m1.0; 0 < ?m2.0 |]
      ==> \<omega> \<up> ?\<alpha>2.0 * ord_of_nat ?m2.0 + ?\<beta>
          < \<omega> \<up> ?\<alpha>1.0 * ord_of_nat ?m1.0 +
            (\<omega> \<up> ?\<alpha>2.0 * ord_of_nat ?m2.0 + ?\<beta>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 4)),
        template_predicate
         (template_app (template_hole 10, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 8, template_var 4))
            ),
        template_inequation
         (less_than, template_var 3,
          template_app
           (template_app (template_hole 6, template_hole 5),
            template_var 2)),
        template_inequation (less_than, template_hole 3, template_var 1),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_var 2)),
               template_app (template_hole 0, template_var 0))),
           template_var 3),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_var 4)),
               template_app (template_hole 0, template_var 1))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_var 2)),
                 template_app (template_hole 0, template_var 0))),
             template_var 3))))),
    ("Cantor_NF.Cantor_nf_unique",
     "[| Cantor_sum ?\<alpha>s ?ms = Cantor_sum ?\<beta>s ?ns;
         list.set ?\<alpha>s <= ON; list.set ?\<beta>s <= ON;
         list.set ?ms <= {0<..}; list.set ?ns <= {0<..};
         length ?\<alpha>s = length ?ms; length ?\<beta>s = length ?ns;
         sorted_wrt (%x y. y < x) ?\<alpha>s;
         sorted_wrt (%x y. y < x) ?\<beta>s |]
      ==> ?\<alpha>s = ?\<beta>s & ?ms = ?ns",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 16, template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 16, template_var 1),
            template_var 0)),
        template_inequation
         (less_equals, template_app (template_hole 14, template_var 3),
          template_app (template_hole 13, template_hole 12)),
        template_inequation
         (less_equals, template_app (template_hole 14, template_var 1),
          template_app (template_hole 13, template_hole 12)),
        template_inequation
         (less_equals, template_app (template_hole 10, template_var 2),
          template_app (template_hole 9, template_hole 8)),
        template_inequation
         (less_equals, template_app (template_hole 10, template_var 0),
          template_app (template_hole 9, template_hole 8)),
        template_equation
         (template_app (template_hole 6, template_var 3),
          template_app (template_hole 5, template_var 2)),
        template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, t_empty), template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, t_empty), template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Cantor_NF.Cantor_nf_unique_aux",
     "[| Ord ?\<alpha>; list.set ?\<alpha>s <= ON; list.set ?\<beta>s <= ON;
         list.set ?ms <= {0<..}; list.set ?ns <= {0<..};
         length ?\<alpha>s = length ?ms; length ?\<beta>s = length ?ns;
         sorted_wrt (%x y. y < x) ?\<alpha>s;
         sorted_wrt (%x y. y < x) ?\<beta>s;
         ?\<alpha> = Cantor_sum ?\<alpha>s ?ms;
         ?\<alpha> = Cantor_sum ?\<beta>s ?ns |]
      ==> ?\<alpha>s = ?\<beta>s & ?ms = ?ns",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 4)),
        template_inequation
         (less_equals, template_app (template_hole 15, template_var 3),
          template_app (template_hole 14, template_hole 17)),
        template_inequation
         (less_equals, template_app (template_hole 15, template_var 2),
          template_app (template_hole 14, template_hole 17)),
        template_inequation
         (less_equals, template_app (template_hole 12, template_var 1),
          template_app (template_hole 11, template_hole 10)),
        template_inequation
         (less_equals, template_app (template_hole 12, template_var 0),
          template_app (template_hole 11, template_hole 10)),
        template_equation
         (template_app (template_hole 8, template_var 3),
          template_app (template_hole 7, template_var 1)),
        template_equation
         (template_app (template_hole 8, template_var 2),
          template_app (template_hole 7, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, t_empty), template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, t_empty), template_var 2)
            ),
        template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 3, template_var 3),
            template_var 1)),
        template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           )))]:
   (string * thm * template) list
### theory "Draft.Cantor_NFMoreTemplates"
### 0.749s elapsed time, 1.911s cpu time, 1.447s GC time
val it = (): unit
