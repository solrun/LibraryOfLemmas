   [("Cantor_NF.\<omega>_of_Cantor_Nil", "\<omega>_of_Cantor [] ?ms = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Cantor_NF.Cantor_sum_Nil", "Cantor_sum [] ?ms = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Cantor_NF.indecomposable_imp_Ord",
     "indecomposable ?\<alpha> ==> Ord ?\<alpha>",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Cantor_NF.indecomposable_succ",
     "indecomposable (ZFC_in_HOL.succ ?\<alpha>) = (?\<alpha> = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0))
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Cantor_NF.\<omega>_of_Cantor_Nil2",
     "\<omega>_of_Cantor (?\<alpha> # ?\<alpha>s) [] = []",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Cantor_NF.Cantor_sum_Nil2",
     "Cantor_sum (?\<alpha> # ?\<alpha>s) [] = 0",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Cantor_NF.\<omega>_of_Cantor_subset",
     "list.set (\<omega>_of_Cantor ?\<alpha>s ?ms) <= list.set ?\<alpha>s",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Cantor_NF.\<omega>_sum_of_Cantor",
     "\<omega>_sum (\<omega>_of_Cantor ?\<alpha>s ?ms) =
      Cantor_sum ?\<alpha>s ?ms",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Cantor_NF.indecomposable_\<omega>_power",
     "Ord ?\<delta> ==> indecomposable (\<omega> \<up> ?\<delta>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Cantor_NF.\<omega>_sum_append",
     "\<omega>_sum (?xs @ ?ys) = \<omega>_sum ?xs + \<omega>_sum ?ys",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Cantor_NF.Ord_\<omega>_sum",
     "list.set ?\<alpha>s <= ON ==> Ord (\<omega>_sum ?\<alpha>s)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 0),
          template_app (template_hole 2, template_hole 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Cantor_NF.\<omega>_sum_Cons",
     "\<omega>_sum (?\<alpha> # ?\<alpha>s) =
      \<omega> \<up> ?\<alpha> + \<omega>_sum ?\<alpha>s",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_app (template_hole 4, template_var 0)))),
    ("Cantor_NF.\<omega>_sum_replicate",
     "\<omega>_sum (replicate ?m ?a) = \<omega> \<up> ?a * ord_of_nat ?m",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Cantor_NF.Ord_Cantor_sum",
     "list.set ?\<alpha>s <= ON ==> Ord (Cantor_sum ?\<alpha>s ?ms)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_hole 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Cantor_NF.indecomposable_imp_Limit",
     "[| indecomposable ?\<alpha>; 1 < ?\<alpha> |] ==> Limit ?\<alpha>",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_inequation (less_than, template_hole 1, template_var 0)],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Cantor_NF.\<omega>_sum_take_drop",
     "\<omega>_sum ?\<alpha>s =
      \<omega>_sum (take ?k ?\<alpha>s) +
      \<omega>_sum (drop ?k ?\<alpha>s)",
     template_equation
      (template_app (template_hole 3, template_var 1),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Cantor_NF.mult_oexp_\<omega>",
     "Ord ?\<alpha> ==>
      ?\<alpha> * ?\<alpha> \<up> \<omega> = ?\<alpha> \<up> \<omega>",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Cantor_NF.\<omega>_of_Cantor_Cons",
     "\<omega>_of_Cantor (?\<alpha> # ?\<alpha>s) (?m # ?ms) =
      replicate ?m ?\<alpha> @ \<omega>_of_Cantor ?\<alpha>s ?ms",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3)),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 0)))),
    ("Cantor_NF.\<omega>_sum_0E",
     "[| \<omega>_sum ?\<alpha>s = 0; list.set ?\<alpha>s <= ON |]
      ==> ?\<alpha>s = []",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 0), template_hole 6),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 0),
          template_app (template_hole 3, template_hole 2))],
       template_equation (template_var 0, template_hole 0))),
    ("Cantor_NF.indecomposable_iff_\<omega>_power",
     "indecomposable ?\<mu> =
      (?\<mu> = 0 |
       (EX \<delta>. ?\<mu> = \<omega> \<up> \<delta> & Ord \<delta>))",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_hole 5)),
             template_app (template_hole 4, t_empty))
           ))),
    ("Cantor_NF.Cantor_sum_Cons",
     "Cantor_sum (?\<alpha> # ?\<alpha>s) (?m # ?ms) =
      \<omega> \<up> ?\<alpha> * ord_of_nat ?m + Cantor_sum ?\<alpha>s ?ms",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 3)),
             template_app (template_hole 0, template_var 1))),
         template_app
          (template_app (template_hole 7, template_var 2),
           template_var 0)))),
    ("Cantor_NF.indecomposable_imp_eq",
     "[| indecomposable ?\<alpha>; Ord ?\<beta>; ?\<beta> < ?\<alpha> |]
      ==> ?\<beta> + ?\<alpha> = ?\<alpha>",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("Cantor_NF.eq_imp_indecomposable",
     "[| Ord ?\<alpha>;
         !!\<beta>.
            \<beta> : elts ?\<alpha> ==> \<beta> + ?\<alpha> = ?\<alpha> |]
      ==> indecomposable ?\<alpha>",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Cantor_NF.\<omega>_le_\<omega>_sum",
     "[| ?k < length ?\<alpha>s; list.set ?\<alpha>s <= ON |]
      ==> \<omega> \<up> ?\<alpha>s ! ?k <= \<omega>_sum ?\<alpha>s",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 9, template_var 0)),
        template_inequation
         (less_equals, template_app (template_hole 7, template_var 0),
          template_app (template_hole 6, template_hole 5))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Cantor_NF.mult_oexp_indec",
     "[| Ord ?\<alpha>; Limit ?\<mu>; indecomposable ?\<mu> |]
      ==> ?\<alpha> * ?\<alpha> \<up> ?\<mu> = ?\<alpha> \<up> ?\<mu>",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Cantor_NF.indecomposable_imp_type2",
     "[| indecomposable ?\<gamma>; ?X <= elts ?\<gamma> |]
      ==> ordertype ?X VWF = ?\<gamma> |
          ordertype (elts ?\<gamma> - ?X) VWF = ?\<gamma>",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 5, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_hole 1)),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app (template_hole 5, template_var 1)),
                       template_var 0)),
                   template_hole 1)),
               template_var 1))
           ))),
    ("Cantor_NF.Cantor_dec_Cons_iff",
     "sorted_wrt (%x y. y < x) (?\<alpha> # ?\<beta> # ?\<beta>s) =
      (?\<beta> < ?\<alpha> &
       sorted_wrt (%x y. y < x) (?\<beta> # ?\<beta>s))",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Cantor_NF.\<omega>_dec_Cons_iff",
     "sorted_wrt (%x y. y <= x) (?\<alpha> # ?\<beta> # ?\<beta>s) =
      (?\<beta> <= ?\<alpha> &
       sorted_wrt (%x y. y <= x) (?\<beta> # ?\<beta>s))",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Cantor_NF.\<omega>_dec_of_Cantor",
     "[| sorted_wrt (%x y. y < x) ?\<alpha>s;
         length ?\<alpha>s = length ?ms |]
      ==> sorted_wrt (%x y. y <= x) (\<omega>_of_Cantor ?\<alpha>s ?ms)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, t_empty), template_var 1)
            ),
        template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, t_empty),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Cantor_NF.indecomposableD",
     "[| indecomposable ?\<alpha>; ?\<beta> < ?\<alpha>;
         ?\<gamma> < ?\<alpha>; Ord ?\<beta>; Ord ?\<gamma> |]
      ==> ?\<beta> + ?\<gamma> < ?\<alpha>",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_inequation (less_than, template_var 1, template_var 2),
        template_inequation (less_than, template_var 0, template_var 2),
        template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 2))),
    ("Cantor_NF.\<omega>_sum_less_\<omega>_power",
     "[| sorted_wrt (%x y. y <= x) (?\<alpha> # ?\<alpha>s);
         list.set (?\<alpha> # ?\<alpha>s) <= ON |]
      ==> \<omega>_sum ?\<alpha>s < \<omega> \<up> ?\<alpha> * \<omega>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, t_empty),
              template_app
               (template_app (template_hole 9, template_var 1),
                template_var 0))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 0)),
          template_app (template_hole 6, template_hole 5))],
       template_inequation
        (less_than, template_app (template_hole 3, template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_hole 0)))),
    ("Cantor_NF.cnf_1",
     "[| ?\<alpha> : elts ?\<beta>; Ord ?\<beta>; 0 < ?m |]
      ==> \<omega> \<up> ?\<alpha> * ord_of_nat ?n
          < \<omega> \<up> ?\<beta> * ord_of_nat ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app (template_hole 8, template_var 2))
            ),
        template_predicate (template_app (template_hole 7, template_var 2)),
        template_inequation (less_than, template_hole 5, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 3)),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2)),
           template_app (template_hole 0, template_var 1))))),
    ("Cantor_NF.\<omega>_sum_less_self",
     "[| list.set (?\<alpha> # ?\<alpha>s) <= ON;
         sorted_wrt (%x y. y <= x) (?\<alpha> # ?\<alpha>s) |]
      ==> \<omega>_sum ?\<alpha>s
          < \<omega> \<up> ?\<alpha> + \<omega>_sum ?\<alpha>s",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 10,
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 0)),
          template_app (template_hole 8, template_hole 7)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, t_empty),
              template_app
               (template_app (template_hole 9, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_than, template_app (template_hole 3, template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_app (template_hole 3, template_var 0))))),
    ("Cantor_NF.indecomposable_is_\<omega>_power",
     "[| indecomposable ?\<mu>; ?\<mu> = 0 ==> ?thesis;
         !!\<delta>.
            [| Ord \<delta>; ?\<mu> = \<omega> \<up> \<delta> |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_implication
         ([template_equation (template_var 1, template_hole 4)],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Cantor_NF.indecomposable2",
     "[| ?y < ?x; ?z < ?x; !!y. y < ?x ==> y + ?x = ?x |] ==> ?y + ?z < ?x",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_var 0, template_var 1),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("Cantor_NF.in_elts_\<omega>_sum",
     "?\<delta> : elts (\<omega>_sum ?\<alpha>s) ==>
      EX k<length ?\<alpha>s.
         EX \<gamma>:elts (\<omega> \<up> ?\<alpha>s ! k).
            ?\<delta> = \<omega>_sum (take k ?\<alpha>s) + \<gamma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 0)))
            )],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Cantor_NF.type_imp_indecomposable",
     "[| Ord ?\<alpha>;
         !!X. X <= elts ?\<alpha> ==>
              ordertype X VWF = ?\<alpha> |
              ordertype (elts ?\<alpha> - X) VWF = ?\<alpha> |]
      ==> indecomposable ?\<alpha>",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 0)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Cantor_NF.\<omega>_power_imp_eq",
     "[| ?\<beta> < \<omega> \<up> ?\<delta>; Ord ?\<beta>; Ord ?\<delta>;
         ?\<delta> ~= 0 |]
      ==> ?\<beta> + \<omega> \<up> ?\<delta> = \<omega> \<up> ?\<delta>",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app
           (template_app (template_hole 6, template_hole 5),
            template_var 0)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_var 0)),
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_var 0)))),
    ("Cantor_NF.\<omega>_dec_of_Cantor_aux",
     "[| sorted_wrt (%x y. y < x) (?\<alpha> # ?\<alpha>s);
         length ?\<alpha>s = length ?ms |]
      ==> sorted_wrt (%x y. y <= x)
           (\<omega>_of_Cantor (?\<alpha> # ?\<alpha>s) (?m # ?ms))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, t_empty),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2))
            ),
        template_equation
         (template_app (template_hole 4, template_var 2),
          template_app (template_hole 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, t_empty),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 6, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Cantor_NF.Cantor_sum_ge",
     "[| list.set (?\<alpha> # ?\<alpha>s) <= ON; list.set ?ms <= {0<..};
         0 < length ?ms |]
      ==> \<omega> \<up> ?\<alpha>
          <= Cantor_sum (?\<alpha> # ?\<alpha>s) ?ms",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 13,
            template_app
             (template_app (template_hole 12, template_var 2),
              template_var 1)),
          template_app (template_hole 11, template_hole 10)),
        template_inequation
         (less_equals, template_app (template_hole 8, template_var 0),
          template_app (template_hole 7, template_hole 6)),
        template_inequation
         (less_than, template_hole 6,
          template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_hole 1), template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 12, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Cantor_NF.Cantor_sum_0E",
     "[| Cantor_sum ?\<alpha>s ?ms = 0; list.set ?\<alpha>s <= ON;
         list.set ?ms <= {0<..}; length ?\<alpha>s = length ?ms |]
      ==> ?\<alpha>s = []",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 14, template_var 1),
            template_var 0),
          template_hole 13),
        template_inequation
         (less_equals, template_app (template_hole 11, template_var 1),
          template_app (template_hole 10, template_hole 9)),
        template_inequation
         (less_equals, template_app (template_hole 7, template_var 0),
          template_app (template_hole 6, template_hole 5)),
        template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation (template_var 1, template_hole 0))),
    ("Cantor_NF.\<omega>_dec_replicate",
     "sorted_wrt (%x y. y <= x) (replicate ?m ?\<alpha> @ ?\<alpha>s) =
      (if ?m = 0 then sorted_wrt (%x y. y <= x) ?\<alpha>s
       else sorted_wrt (%x y. y <= x) (?\<alpha> # ?\<alpha>s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, t_empty),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_hole 1)),
               template_app
                (template_app (template_hole 7, t_empty), template_var 0)),
             template_app
              (template_app (template_hole 7, t_empty),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Cantor_NF.\<omega>_nf_exists",
     "[| Ord ?\<alpha>;
         !!\<alpha>s.
            [| list.set \<alpha>s <= ON;
               sorted_wrt (%x y. y <= x) \<alpha>s;
               ?\<alpha> = \<omega>_sum \<alpha>s |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("Cantor_NF.indecomposable_ordertype_ge",
     "[| indecomposable ?\<alpha>; ?\<alpha> <= ordertype ?A VWF; small ?A;
         small ?B |]
      ==> ?\<alpha> <= ordertype ?B VWF |
          ?\<alpha> <= ordertype (?A - ?B) VWF",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_hole 3)),
        template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 3))),
             template_app
              (template_app (template_hole 5, template_var 2),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)),
                 template_hole 3)))
           ))),
    ("Cantor_NF.indecomposable_ordertype_eq",
     "[| indecomposable ?\<alpha>; ordertype ?A VWF = ?\<alpha>; ?B <= ?A;
         small ?A |]
      ==> ordertype ?B VWF = ?\<alpha> |
          ordertype (?A - ?B) VWF = ?\<alpha>",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 1),
            template_hole 4),
          template_var 2),
        template_inequation (less_equals, template_var 0, template_var 1),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_hole 4)),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0)),
                   template_hole 4)),
               template_var 2))
           ))),
    ("Cantor_NF.indecomposable_ordertype_finite_ge",
     "[| indecomposable ?\<alpha>; finite ?\<A>; ?A <= \<Union> ?\<A>;
         ?\<A> ~= {}; ?\<alpha> <= ordertype ?A VWF;
         small (\<Union> ?\<A>) |]
      ==> EX X:?\<A>. ?\<alpha> <= ordertype X VWF",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 8, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 3, template_var 0),
            template_hole 2)),
        template_predicate
         (
            template_app
             (template_hole 1,
              template_app (template_hole 8, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), t_empty)
           ))),
    ("Cantor_NF.cnf_2",
     "[| list.set (?\<alpha> # ?\<alpha>s) <= ON; list.set ?ms <= {0<..};
         length ?\<alpha>s = length ?ms;
         sorted_wrt (%x y. y < x) (?\<alpha> # ?\<alpha>s) |]
      ==> Cantor_sum ?\<alpha>s ?ms < \<omega> \<up> ?\<alpha>",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 15,
            template_app
             (template_app (template_hole 14, template_var 2),
              template_var 1)),
          template_app (template_hole 13, template_hole 12)),
        template_inequation
         (less_equals, template_app (template_hole 10, template_var 0),
          template_app (template_hole 9, template_hole 8)),
        template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, t_empty),
              template_app
               (template_app (template_hole 14, template_var 2),
                template_var 1))
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 2)))),
    ("Cantor_NF.indecomposable_alt",
     "[| Ord ?\<alpha>; Ord ?\<beta>; ?\<beta> < ?\<alpha>;
         !!\<beta> \<gamma>.
            [| \<beta> < ?\<alpha>; \<gamma> < ?\<alpha>; Ord \<gamma> |]
            ==> \<beta> + \<gamma> < ?\<alpha> |]
      ==> ?\<beta> + ?\<alpha> = ?\<alpha>",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_inequation (less_than, template_var 0, template_var 1),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_var 1))),
    ("Cantor_NF.indecomposable_ordertype_finite_eq",
     "[| indecomposable ?\<alpha>; finite ?\<A>; pairwise disjnt ?\<A>;
         \<Union> ?\<A> = ?A; ?\<A> ~= {}; ordertype ?A VWF = ?\<alpha>;
         small ?A |]
      ==> EX X:?\<A>. ordertype X VWF = ?\<alpha>",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 2)),
        template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_hole 10),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 8, template_var 1), template_var 0),
        template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 0),
            template_hole 2),
          template_var 2),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), t_empty)
           ))),
    ("Cantor_NF.Cantor_nf_exists",
     "[| Ord ?\<alpha>;
         !!\<alpha>s ms.
            [| list.set \<alpha>s <= ON; list.set ms <= {0<..};
               length \<alpha>s = length ms;
               sorted_wrt (%x y. y < x) \<alpha>s;
               ?\<alpha> = Cantor_sum \<alpha>s ms |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 1)),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_predicate (template_var 0))),
    ("Cantor_NF.indecomposable_imp_type",
     "[| indecomposable ?\<gamma>; !!b. ordertype (?X b) VWF <= ?\<gamma>;
         !!b. small (?X b); !!b. ?X b <= ON;
         elts ?\<gamma> <= \<Union> (range ?X) |]
      ==> EX b. ordertype (?X b) VWF = ?\<gamma>",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 1)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_inequation
         (less_equals, template_app (template_hole 5, template_var 1),
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, t_empty), template_hole 2)))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Cantor_NF.\<omega>_sum_nf_unique_aux",
     "[| Ord ?\<alpha>; list.set ?\<alpha>s <= ON; list.set ?\<beta>s <= ON;
         sorted_wrt (%x y. y <= x) ?\<alpha>s;
         sorted_wrt (%x y. y <= x) ?\<beta>s;
         ?\<alpha> = \<omega>_sum ?\<alpha>s;
         ?\<alpha> = \<omega>_sum ?\<beta>s |]
      ==> ?\<alpha>s = ?\<beta>s",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_hole 8)),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 0),
          template_app (template_hole 5, template_hole 8)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, t_empty), template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, t_empty), template_var 0)
            ),
        template_equation
         (template_var 2, template_app (template_hole 1, template_var 1)),
        template_equation
         (template_var 2, template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Cantor_NF.less_\<omega>_power",
     "[| Ord ?\<alpha>1.0; Ord ?\<beta>; ?\<alpha>2.0 : elts ?\<alpha>1.0;
         ?\<beta> < \<omega> \<up> ?\<alpha>2.0; 0 < ?m1.0; 0 < ?m2.0 |]
      ==> \<omega> \<up> ?\<alpha>2.0 * ord_of_nat ?m2.0 + ?\<beta>
          < \<omega> \<up> ?\<alpha>1.0 * ord_of_nat ?m1.0 +
            (\<omega> \<up> ?\<alpha>2.0 * ord_of_nat ?m2.0 + ?\<beta>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 4)),
        template_predicate
         (template_app (template_hole 10, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 8, template_var 4))
            ),
        template_inequation
         (less_than, template_var 3,
          template_app
           (template_app (template_hole 6, template_hole 5),
            template_var 2)),
        template_inequation (less_than, template_hole 3, template_var 1),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_var 2)),
               template_app (template_hole 0, template_var 0))),
           template_var 3),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_var 4)),
               template_app (template_hole 0, template_var 1))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_var 2)),
                 template_app (template_hole 0, template_var 0))),
             template_var 3))))),
    ("Cantor_NF.Cantor_nf_unique",
     "[| Cantor_sum ?\<alpha>s ?ms = Cantor_sum ?\<beta>s ?ns;
         list.set ?\<alpha>s <= ON; list.set ?\<beta>s <= ON;
         list.set ?ms <= {0<..}; list.set ?ns <= {0<..};
         length ?\<alpha>s = length ?ms; length ?\<beta>s = length ?ns;
         sorted_wrt (%x y. y < x) ?\<alpha>s;
         sorted_wrt (%x y. y < x) ?\<beta>s |]
      ==> ?\<alpha>s = ?\<beta>s & ?ms = ?ns",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 16, template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 16, template_var 1),
            template_var 0)),
        template_inequation
         (less_equals, template_app (template_hole 14, template_var 3),
          template_app (template_hole 13, template_hole 12)),
        template_inequation
         (less_equals, template_app (template_hole 14, template_var 1),
          template_app (template_hole 13, template_hole 12)),
        template_inequation
         (less_equals, template_app (template_hole 10, template_var 2),
          template_app (template_hole 9, template_hole 8)),
        template_inequation
         (less_equals, template_app (template_hole 10, template_var 0),
          template_app (template_hole 9, template_hole 8)),
        template_equation
         (template_app (template_hole 6, template_var 3),
          template_app (template_hole 5, template_var 2)),
        template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, t_empty), template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, t_empty), template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Cantor_NF.Cantor_nf_unique_aux",
     "[| Ord ?\<alpha>; list.set ?\<alpha>s <= ON; list.set ?\<beta>s <= ON;
         list.set ?ms <= {0<..}; list.set ?ns <= {0<..};
         length ?\<alpha>s = length ?ms; length ?\<beta>s = length ?ns;
         sorted_wrt (%x y. y < x) ?\<alpha>s;
         sorted_wrt (%x y. y < x) ?\<beta>s;
         ?\<alpha> = Cantor_sum ?\<alpha>s ?ms;
         ?\<alpha> = Cantor_sum ?\<beta>s ?ns |]
      ==> ?\<alpha>s = ?\<beta>s & ?ms = ?ns",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 4)),
        template_inequation
         (less_equals, template_app (template_hole 15, template_var 3),
          template_app (template_hole 14, template_hole 17)),
        template_inequation
         (less_equals, template_app (template_hole 15, template_var 2),
          template_app (template_hole 14, template_hole 17)),
        template_inequation
         (less_equals, template_app (template_hole 12, template_var 1),
          template_app (template_hole 11, template_hole 10)),
        template_inequation
         (less_equals, template_app (template_hole 12, template_var 0),
          template_app (template_hole 11, template_hole 10)),
        template_equation
         (template_app (template_hole 8, template_var 3),
          template_app (template_hole 7, template_var 1)),
        template_equation
         (template_app (template_hole 8, template_var 2),
          template_app (template_hole 7, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, t_empty), template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, t_empty), template_var 2)
            ),
        template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 3, template_var 3),
            template_var 1)),
        template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           )))]
