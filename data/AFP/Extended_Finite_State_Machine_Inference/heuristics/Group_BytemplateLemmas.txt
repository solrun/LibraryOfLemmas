   [("Group_By.group_by_inverse", "foldr (@) (group_by ?f ?l) [] = ?l",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0),
       template_var 0)),
    ("Group_By.dropWhile_drop", "EX x. dropWhile ?f ?l = drop x ?l",
     template_predicate (template_app (template_hole 3, t_empty))),
    ("Group_By.no_empty_groups", "ALL x:set (group_by ?f ?xs). x ~= []",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0))),
           t_empty)
         )),
    ("Group_By.group_by_drop_foldr",
     "drop ?x ?l = foldr (@) (group_by ?f (drop ?x ?l)) []",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2), template_var 1),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1))),
         template_hole 0))),
    ("Group_By.not_empty_group_by_drop",
     "ALL x:set (group_by ?f (drop ?l ?xs)). x ~= []",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0)))),
           t_empty)
         )),
    ("Group_By.append_pref", "?l' = ?l'' ==> ?l @ ?l' = ?l @ ?l''",
     template_implication
      ([template_equation (template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Group_By.takeWhile_dropWhile",
     "takeWhile ?f ?l @ dropWhile ?f ?l = ?l' ==> ?l' = ?l",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1)),
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)),
          template_var 0)],
       template_equation (template_var 0, template_var 1)))]
