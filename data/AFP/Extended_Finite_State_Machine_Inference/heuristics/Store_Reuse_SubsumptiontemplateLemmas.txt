   [("Store_Reuse_Subsumption.is_generalisation_of_i_lt_arity",
     "is_generalisation_of ?t' ?t ?i ?r ==> ?i < Arity ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_than, template_var 1,
         template_app (template_hole 0, template_var 2)))),
    ("Store_Reuse_Subsumption.generalise_output_posterior",
     "posterior (generalise_output ?t ?p ?r) ?i ?ra = posterior ?t ?i ?ra",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 4), template_var 1),
         template_var 0))),
    ("Store_Reuse_Subsumption.is_generalisation_of_same_arity",
     "is_generalisation_of ?t' ?t ?i ?r ==> Arity ?t = Arity ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 2),
         template_app (template_hole 0, template_var 3)))),
    ("Store_Reuse_Subsumption.is_generalisation_of_guard_subset",
     "is_generalisation_of ?t' ?t ?i ?r ==>
      set (Guards ?t') <= set (Guards ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 3)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 2))))),
    ("Store_Reuse_Subsumption.one_extra_update_direct_subsumption",
     "one_extra_update ?t1.0 ?t2.0 ?s2.0 ?e2.0 ==>
      directly_subsumes ?e1.0 ?e2.0 ?s1.0 ?s2.0 ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 2),
                   template_var 0),
                 template_var 3),
               template_var 5),
             template_var 4)
           ))),
    ("Store_Reuse_Subsumption.stored_reused_is_generalised_output_of",
     "stored_reused ?t' ?t = Some (?p, ?r) ==>
      is_generalised_output_of ?t' ?t ?p ?r",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Store_Reuse_Subsumption.not_updated",
     "not_updated ?r ?t2.0 ==>
      apply_updates (Updates ?t2.0) ?s ?s' $ ?r = ?s' $ ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 template_var 1),
               template_var 0)),
           template_var 3),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 3)))),
    ("Store_Reuse_Subsumption.is_generalisation_of_medial",
     "is_generalisation_of ?t' ?t ?i ?r ==>
      can_take_transition ?t ?ip ?rg --> can_take_transition ?t' ?ip ?rg",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 1),
               template_var 0))
           ))),
    ("Store_Reuse_Subsumption.drop_guard_add_update_direct_subsumption_implies_direct_subsumption",
     "drop_guard_add_update_direct_subsumption ?t' ?t ?e ?s' ==>
      directly_subsumes (tm ?e1.0) (tm ?e) ?s ?s' ?t' ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 1)),
                     template_app (template_hole 0, template_var 3)),
                   template_var 0),
                 template_var 2),
               template_var 5),
             template_var 4)
           ))),
    ("Store_Reuse_Subsumption.input_stored_in_reg_is_generalisation",
     "input_stored_in_reg ?t' ?t ?e = Some (?i, ?r) ==>
      is_generalisation_of ?t' ?t ?i ?r",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 1),
             template_var 0)
           ))),
    ("Store_Reuse_Subsumption.lists_neq_if",
     "EX i. ?l ! i ~= ?l' ! i ==> ?l ~= ?l'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("Store_Reuse_Subsumption.apply_updates_foldr",
     "apply_updates ?u ?old =
      foldr (%h r. r(fst h $:= aval (snd h) ?old)) (rev ?u)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 5, t_empty),
         template_app (template_hole 0, template_var 1)))),
    ("Store_Reuse_Subsumption.diff_outputs_direct_subsumption",
     "diff_outputs_ctx ?e1.0 ?e2.0 ?s1.0 ?s2.0 ?t1.0 ?t2.0 ==>
      ~ directly_subsumes ?e1.0 ?e2.0 ?s1.0 ?s2.0 ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 5),
                         template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)
               )
           ))),
    ("Store_Reuse_Subsumption.input_stored_in_reg_aux_is_generalisation_aux",
     "input_stored_in_reg_aux ?t' ?t ?mr ?mi = Some (?i, ?r) ==>
      is_generalisation_of ?t' ?t ?i ?r",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 4),
               template_var 1),
             template_var 0)
           ))),
    ("Store_Reuse_Subsumption.stored_reused_aux_is_generalised_output_of",
     "stored_reused_aux ?t' ?t ?mr ?mp = Some (?p, ?r) ==>
      is_generalised_output_of ?t' ?t ?p ?r",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 4),
               template_var 1),
             template_var 0)
           ))),
    ("Store_Reuse_Subsumption.is_generalisation_of_apply_guards",
     "[| is_generalisation_of ?t' ?t ?i ?r; apply_guards (Guards ?t) ?j |]
      ==> apply_guards (Guards ?t') ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 4)),
             template_var 0)
           ))),
    ("Store_Reuse_Subsumption.is_generalisation_of_derestricts_input",
     "is_generalisation_of ?t' ?t ?i ?r ==>
      ALL g:set (Guards ?t'). ~ gexp_constrains g (V (I ?i))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 3))),
             t_empty)
           ))),
    ("Store_Reuse_Subsumption.generalise_output_directly_subsumes_original_executable",
     "generalise_output_direct_subsumption ?t' ?t ?e ?e' ?s ?s' ==>
      directly_subsumes (tm ?e) (tm ?e') ?s ?s' ?t' ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 3)),
                     template_app (template_hole 0, template_var 2)),
                   template_var 1),
                 template_var 0),
               template_var 5),
             template_var 4)
           ))),
    ("Store_Reuse_Subsumption.is_generalisation_of_subsumes_original",
     "[| is_generalisation_of ?t' ?t ?i ?r; ?c $ ?r = None |]
      ==> subsumes ?t' ?c ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 0), template_var 1),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0),
             template_var 3)
           ))),
    ("Store_Reuse_Subsumption.is_generalisation_of_constrains_input",
     "is_generalisation_of ?t' ?t ?i ?r ==>
      EX v. Eq (V (I ?i)) (L v) : set (Guards ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Store_Reuse_Subsumption.is_generalisation_of_preserves_reg",
     "is_generalisation_of ?t' ?t ?i ?r ==>
      evaluate_updates ?t ?ia ?c $ ?r = ?c $ ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 4)),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_var 2)))),
    ("Store_Reuse_Subsumption.input_stored_in_reg_updates_reg",
     "input_stored_in_reg ?t2.0 ?t1.0 ?a = Some (?i, ?r) ==>
      (?r, V (I ?i)) : set (Updates ?t2.0)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 8, template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)))),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 4)))
           ))),
    ("Store_Reuse_Subsumption.input_not_constrained_aval_swap_inputs",
     "~ aexp_constrains ?a (V (I ?v)) ==>
      aval ?a (join_ir ?i ?c) = aval ?a (join_ir (?i[?v := ?x]) ?c)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 3)))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 3),
                 template_var 0)),
             template_var 1))))),
    ("Store_Reuse_Subsumption.input_not_constrained_gval_swap_inputs",
     "~ gexp_constrains ?a (V (I ?v)) ==>
      gval ?a (join_ir ?i ?c) = gval ?a (join_ir (?i[?v := ?x]) ?c)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 3)))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 3),
                 template_var 0)),
             template_var 1))))),
    ("Store_Reuse_Subsumption.generalisation_of_preserves",
     "is_generalisation_of ?t' ?t ?i ?r ==>
      Label ?t = Label ?t' &
      Arity ?t = Arity ?t' & Outputs ?t = Outputs ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 2)),
                 template_app (template_hole 4, template_var 3))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 2)),
                   template_app (template_hole 2, template_var 3))),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 template_app (template_hole 0, template_var 3))))
           ))),
    ("Store_Reuse_Subsumption.no_return_to_zero",
     "ALL ((from, to), t):?e. 0 < to ==>
      ALL r n. ~ visits 0 ?e (Suc n) r ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_hole 8, template_app (template_hole 7, t_empty)))
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Store_Reuse_Subsumption.generalise_output_subsumes_original",
     "[| Outputs ?t ! ?r = L ?v; ?c $ ?p = Some ?v |]
      ==> subsumes (generalise_output ?t ?p ?r) ?c ?t",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 4)),
            template_var 3),
          template_app (template_hole 5, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_app (template_hole 2, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 0),
                   template_var 3)),
               template_var 1),
             template_var 4)
           ))),
    ("Store_Reuse_Subsumption.input_stored_in_reg_not_subsumed",
     "[| input_stored_in_reg ?t' ?t ?e = Some (?i, ?r);
         EX ia. can_take_transition ?t' ia ?c |]
      ==> ~ subsumes ?t ?c ?t'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 6, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1))),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 0),
                 template_var 5)
               )
           ))),
    ("Store_Reuse_Subsumption.can_take_append_subset",
     "set (Guards ?t') < set (Guards ?t) ==>
      can_take ?a (Guards ?t @ Guards ?t') ?ia ?c =
      can_take ?a (Guards ?t) ?ia ?c",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_hole 5,
            template_app (template_hole 4, template_var 4)),
          template_app
           (template_hole 5,
            template_app (template_hole 3, template_var 3)))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 3, template_var 3)),
                 template_app (template_hole 4, template_var 4))),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 3, template_var 3)),
             template_var 1),
           template_var 0)))),
    ("Store_Reuse_Subsumption.no_return_to_zero_must_be_empty",
     "[| ALL ((from, to), t):?e. to ~= 0; obtains 0 ?a ?e ?s ?r ?t |]
      ==> ?t = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_app
               (template_hole 7, template_app (template_hole 6, t_empty)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_hole 3),
                      template_var 3),
                    template_var 4),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Store_Reuse_Subsumption.must_be_an_update",
     "[| ?U1.0 ~= []; fst (hd ?U1.0) = ?r & tl ?U1.0 = ?U2.0 |]
      ==> EX u. ?U1.0 = (?r, u) # ?U2.0",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 8)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_hole 5,
                      template_app (template_hole 4, template_var 2))),
                  template_var 1)),
              template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 3, template_var 2)),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Store_Reuse_Subsumption.no_incoming_to_zero",
     "[| ALL ((from, to), t):?e. 0 < to;
         (?aaa, ?ba) |\<in>| possible_steps ?e ?s ?d ?l ?i |]
      ==> ?aaa ~= 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 6),
              template_app
               (template_hole 8, template_app (template_hole 7, t_empty)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4)),
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 6),
                      template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_negation
        (template_equation (template_var 5, template_hole 5)))),
    ("Store_Reuse_Subsumption.is_generalised_output_of_subsumes",
     "[| is_generalised_output_of ?t' ?t ?r ?p; Outputs ?t ! ?p = L ?v;
         ?c $ ?r = Some ?v |]
      ==> subsumes ?t' ?c ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 4)),
            template_var 2),
          template_app (template_hole 4, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 0), template_var 3),
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 0),
             template_var 4)
           ))),
    ("Store_Reuse_Subsumption.aval_updated",
     "[| (?r, ?u) : set ?U; ?r ~: set (map fst (removeAll (?r, ?u) ?U)) |]
      ==> apply_updates ?U ?s ?c $ ?r = aval ?u ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 4),
                  template_var 3)),
              template_app (template_hole 10, template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_hole 5),
                      template_app
                       (template_app
                         (template_hole 4,
                          template_app
                           (template_app (template_hole 11, template_var 4),
                            template_var 3)),
                        template_var 2))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 0)),
           template_var 4),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 1)))),
    ("Store_Reuse_Subsumption.no_accepting_return_to_zero",
     "[| ALL ((from, to), t):?e. to ~= 0; recognises ?e (?a # ?t) |]
      ==> ~ visits 0 ?e 0 <> (?a # ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_hole 8, template_app (template_hole 7, t_empty)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_hole 4),
                template_hole 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_hole 4),
                       template_var 2),
                     template_hole 4),
                   template_hole 2),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))
               )
           ))),
    ("Store_Reuse_Subsumption.is_generalisation_of_preserves_reg_2",
     "[| is_generalisation_of ?t' ?t ?i ?r; ?ra ~= ?r |]
      ==> evaluate_updates ?t ?ia ?c $ ?ra =
          evaluate_updates ?t' ?ia ?c $ ?ra",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_negation
         (template_equation (template_var 2, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 5)),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 6)),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_var 0)),
           template_var 2)))),
    ("Store_Reuse_Subsumption.generalised_directly_subsumes_original",
     "[| input_stored_in_reg ?t' ?t ?e = Some (?i, ?r);
         initially_undefined_context_check (tm ?e) ?r ?s';
         no_illegal_updates ?t ?r |]
      ==> directly_subsumes (tm ?e1.0) (tm ?e) ?s ?s' ?t' ?t",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 6, template_var 7),
              template_var 6),
            template_var 5),
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 3))),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 5)),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 6),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 0,
                       template_app (template_hole 2, template_var 1)),
                     template_app (template_hole 2, template_var 5)),
                   template_var 0),
                 template_var 2),
               template_var 7),
             template_var 6)
           ))),
    ("Store_Reuse_Subsumption.generalise_output_eq",
     "[| Outputs ?t ! ?r = L ?v; ?c $ ?p = Some ?v |]
      ==> evaluate_outputs ?t ?i ?c =
          apply_outputs ((Outputs ?t)[?r := V (R ?p)]) (join_ir ?i ?c)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 11,
              template_app (template_hole 10, template_var 5)),
            template_var 4),
          template_app (template_hole 9, template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 2), template_var 1),
          template_app (template_hole 6, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 10, template_var 5)),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 10, template_var 5)),
                 template_var 4),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)))),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 2))))),
    ("Store_Reuse_Subsumption.generalise_output_context_check_directly_subsumes_original",
     "[| stored_reused ?t' ?t = Some (?r, ?p); Outputs ?t ! ?p = L ?v;
         generalise_output_context_check ?v ?r ?s ?s' ?e1.0 ?e2.0 |]
      ==> directly_subsumes (tm ?e1.0) (tm ?e2.0) ?s ?s' ?t' ?t",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 9, template_var 8), template_var 7),
          template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_var 6),
              template_var 5))),
        template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 7)),
            template_var 5),
          template_app (template_hole 3, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 4),
                      template_var 6),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 1)),
                     template_app (template_hole 0, template_var 0)),
                   template_var 3),
                 template_var 2),
               template_var 8),
             template_var 7)
           ))),
    ("Store_Reuse_Subsumption.aval_unconstrained",
     "[| ~ aexp_constrains ?a (V (I ?i)); ?i < length ?ia; ?v = ?ia ! ?i;
         ?v' ~= ?v |]
      ==> aval ?a (join_ir ?ia ?c) = aval ?a (join_ir (?ia[?i := ?v']) ?c)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 5),
                  template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 4)))
                )
            ),
        template_inequation
         (less_than, template_var 4,
          template_app (template_hole 6, template_var 3)),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 4, template_var 3),
            template_var 4)),
        template_negation
         (template_equation (template_var 1, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 5),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 5),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 4),
                 template_var 1)),
             template_var 0))))),
    ("Store_Reuse_Subsumption.is_generalised_output_of_does_not_subsume",
     "[| is_generalised_output_of ?t' ?t ?r ?p; ?p < length (Outputs ?t);
         Outputs ?t ! ?p = L ?v; ?c $ ?r ~= Some ?v;
         EX i. can_take_transition ?t i ?c |]
      ==> ~ subsumes ?t' ?c ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 13, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_than, template_var 2,
          template_app
           (template_hole 11,
            template_app (template_hole 10, template_var 4))),
        template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 10, template_var 4)),
            template_var 2),
          template_app (template_hole 7, template_var 1)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 4, template_var 0),
                template_var 3),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 0),
                 template_var 4)
               )
           ))),
    ("Store_Reuse_Subsumption.generalise_output_directly_subsumes_original",
     "[| stored_reused ?t' ?t = Some (?r, ?p); Outputs ?t ! ?p = L ?v;
         ALL c1 c2 t.
            obtains ?s c1 ?e1.0 0 <> t & obtains ?s' c2 ?e2.0 0 <> t -->
            c2 $ ?r = Some ?v |]
      ==> directly_subsumes ?e1.0 ?e2.0 ?s ?s' ?t' ?t",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 17, template_var 8),
            template_var 7),
          template_app
           (template_hole 16,
            template_app
             (template_app (template_hole 15, template_var 6),
              template_var 5))),
        template_equation
         (template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 7)),
            template_var 5),
          template_app (template_hole 11, template_var 4)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0),
                   template_var 3),
                 template_var 1),
               template_var 8),
             template_var 7)
           ))),
    ("Store_Reuse_Subsumption.one_extra_update_subsumes",
     "[| Label ?t1.0 = Label ?t2.0; Arity ?t1.0 = Arity ?t2.0;
         set (Guards ?t1.0) <= set (Guards ?t2.0);
         Outputs ?t1.0 = Outputs ?t2.0;
         Updates ?t1.0 = (?r, ?u) # Updates ?t2.0; not_updated ?r ?t2.0;
         ?c $ ?r = None |]
      ==> subsumes ?t1.0 ?c ?t2.0",
     template_implication
      ([template_equation
         (template_app (template_hole 16, template_var 4),
          template_app (template_hole 16, template_var 3)),
        template_equation
         (template_app (template_hole 14, template_var 4),
          template_app (template_hole 14, template_var 3)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 12,
            template_app (template_hole 11, template_var 4)),
          template_app
           (template_hole 12,
            template_app (template_hole 11, template_var 3))),
        template_equation
         (template_app (template_hole 9, template_var 4),
          template_app (template_hole 9, template_var 3)),
        template_equation
         (template_app (template_hole 7, template_var 4),
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1)),
            template_app (template_hole 7, template_var 3))),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 0), template_var 2),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0),
             template_var 3)
           ))),
    ("Store_Reuse_Subsumption.one_extra_update_directly_subsumes",
     "[| Label ?t1.0 = Label ?t2.0; Arity ?t1.0 = Arity ?t2.0;
         set (Guards ?t1.0) <= set (Guards ?t2.0);
         Outputs ?t1.0 = Outputs ?t2.0;
         Updates ?t1.0 = (?r, ?u) # Updates ?t2.0; not_updated ?r ?t2.0;
         initially_undefined_context_check ?e2.0 ?r ?s2.0 |]
      ==> directly_subsumes ?e1.0 ?e2.0 ?s1.0 ?s2.0 ?t1.0 ?t2.0",
     template_implication
      ([template_equation
         (template_app (template_hole 14, template_var 7),
          template_app (template_hole 14, template_var 6)),
        template_equation
         (template_app (template_hole 12, template_var 7),
          template_app (template_hole 12, template_var 6)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 10,
            template_app (template_hole 9, template_var 7)),
          template_app
           (template_hole 10,
            template_app (template_hole 9, template_var 6))),
        template_equation
         (template_app (template_hole 7, template_var 7),
          template_app (template_hole 7, template_var 6)),
        template_equation
         (template_app (template_hole 5, template_var 7),
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 5),
                template_var 4)),
            template_app (template_hole 5, template_var 6))),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 5),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 5),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 3),
                   template_var 0),
                 template_var 2),
               template_var 7),
             template_var 6)
           ))),
    ("Store_Reuse_Subsumption.original_does_not_subsume_generalised_output",
     "[| stored_reused ?t' ?t = Some (?p, ?r); ?r < length (Outputs ?t);
         Outputs ?t ! ?r = L ?v;
         EX a c1 tt.
            obtains ?s c1 ?e1.0 0 <> tt &
            obtains ?s' a ?e 0 <> tt &
            a $ ?p ~= Some ?v & (EX i. can_take_transition ?t i a) |]
      ==> ~ directly_subsumes ?e1.0 ?e ?s ?s' ?t' ?t",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 21, template_var 8),
            template_var 7),
          template_app
           (template_hole 20,
            template_app
             (template_app (template_hole 19, template_var 6),
              template_var 5))),
        template_inequation
         (less_than, template_var 5,
          template_app
           (template_hole 17,
            template_app (template_hole 16, template_var 7))),
        template_equation
         (template_app
           (template_app
             (template_hole 14,
              template_app (template_hole 16, template_var 7)),
            template_var 5),
          template_app (template_hole 13, template_var 4)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 2),
                         template_var 0),
                       template_var 3),
                     template_var 1),
                   template_var 8),
                 template_var 7)
               )
           ))),
    ("Store_Reuse_Subsumption.general_not_subsume_orig",
     "[| Arity ?t' = Arity ?t; set (Guards ?t') < set (Guards ?t);
         (?r, V (I ?i)) : set (Updates ?t');
         ?r ~: set (map fst (removeAll (?r, V (I ?i)) (Updates ?t')));
         ?r ~: set (map fst (Updates ?t));
         EX i. can_take_transition ?t i ?c; ?c $ ?r = None; ?i < Arity ?t |]
      ==> ~ subsumes ?t ?c ?t'",
     template_implication
      ([template_equation
         (template_app (template_hole 22, template_var 4),
          template_app (template_hole 22, template_var 3)),
        template_inequation
         (less_than,
          template_app
           (template_hole 20,
            template_app (template_hole 19, template_var 4)),
          template_app
           (template_hole 20,
            template_app (template_hole 19, template_var 3))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_app (template_hole 17, template_var 2),
                  template_app
                   (template_hole 16,
                    template_app (template_hole 15, template_var 1)))),
              template_app
               (template_hole 14,
                template_app (template_hole 13, template_var 4)))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 2),
                  template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 9, template_hole 8),
                      template_app
                       (template_app
                         (template_hole 7,
                          template_app
                           (template_app (template_hole 17, template_var 2),
                            template_app
                             (template_hole 16,
                              template_app
                               (template_hole 15, template_var 1)))),
                        template_app (template_hole 13, template_var 4)))))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 2),
                  template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 9, template_hole 8),
                      template_app (template_hole 13, template_var 3))))
                )
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 0), template_var 2),
          template_hole 2),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 22, template_var 3))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0),
                 template_var 4)
               )
           )))]
