   [("Least_Upper_Bound.no_corresponding_bc",
     "~ has_corresponding (Bc ?x1.0) ?G1.0",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_var 0)
             )
         )),
    ("Least_Upper_Bound.no_corresponding_gt",
     "~ has_corresponding (Gt ?x1.0 ?y1.0) ?G1.0",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_var 0)
             )
         )),
    ("Least_Upper_Bound.no_corresponding_nor",
     "~ has_corresponding (Nor ?x1.0 ?y1.0) ?G1.0",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_var 0)
             )
         )),
    ("Least_Upper_Bound.opposite_gob_directly_subsumption",
     "opposite_gob ?t1.0 ?t2.0 ==> ~ subsumes ?t1.0 ?c ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0),
                 template_var 1)
               )
           ))),
    ("Least_Upper_Bound.singleton_list",
     "(length ?l = 1) = (EX e. ?l = [e])",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_hole 4),
       template_app (template_hole 3, t_empty))),
    ("Least_Upper_Bound.is_lob_direct_subsumption",
     "is_lob ?t1.0 ?t2.0 ==>
      directly_subsumes ?e1.0 ?e2.0 ?s ?s' ?t2.0 ?t1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0),
               template_var 4),
             template_var 5)
           ))),
    ("Least_Upper_Bound.get_in_is",
     "(get_in ?x = Some (?v, ?s1.0)) = (?x = In ?v ?s1.0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Least_Upper_Bound.has_corresponding_eq",
     "has_corresponding (Eq ?x21.0 ?x22.0) ?G1.0 ==>
      Eq ?x21.0 ?x22.0 : set ?G1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Least_Upper_Bound.these_cons",
     "these (?a # ?as) =
      (case ?a of None => these ?as | Some x => x # these ?as)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 0)),
           t_empty),
         template_var 1))),
    ("Least_Upper_Bound.not_subset_not_in",
     "(~ ?s1.0 <= ?s2.0) = (EX i. i : ?s1.0 & i ~: ?s2.0)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app (template_hole 2, t_empty))),
    ("Least_Upper_Bound.In_in_get_Ins",
     "(In (I ?v) ?l : set ?G) = ((?v, ?l) : set (get_Ins ?G))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 2)),
             template_var 1)),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Least_Upper_Bound.gval_each_one",
     "[| ?g : set ?G; apply_guards ?G ?s |] ==> gval ?g ?s = true",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_hole 0))),
    ("Least_Upper_Bound.has_corresponding_apply_guards",
     "[| ALL g:set ?G2.0. has_corresponding g ?G1.0;
         apply_guards ?G1.0 ?s |]
      ==> apply_guards ?G2.0 ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Least_Upper_Bound.Ball_Cons",
     "(ALL x:set (?a # ?l). ?P x) = (?P ?a & (ALL x:set ?l. ?P x))",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 0, template_var 2)),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           t_empty)))),
    ("Least_Upper_Bound.no_Ins",
     "[] = get_Ins ?G ==> set ?G - {In (I ?i) ?l} = set ?G",
     template_implication
      ([template_equation
         (template_hole 8, template_app (template_hole 7, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 2)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 template_var 0)),
             template_hole 0)),
         template_app (template_hole 4, template_var 2)))),
    ("Least_Upper_Bound.literal_args_eq",
     "literal_args (Eq ?a ?b) ==> EX v l. ?a = V v & ?b = L l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Least_Upper_Bound.in_get_ins",
     "(I ?x1a, ?b) : set (these (map get_in ?G)) ==>
      In (I ?x1a) ?b : set ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_var 2)),
                  template_var 1)),
              template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 7, template_var 2)),
                 template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Least_Upper_Bound.get_Ins_Cons_equiv",
     "\<nexists>v l. ?a = In (I v) l ==> get_Ins (?a # ?G) = get_Ins ?G",
     template_implication
      ([template_negation
         (template_predicate (template_app (template_hole 7, t_empty)))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Least_Upper_Bound.Eq_apply_guards",
     "[| Eq (V ?v) (L ?l) : set ?G1.0; apply_guards ?G1.0 ?s |]
      ==> ?s ?v = Some ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 3)),
                  template_app (template_hole 4, template_var 2))),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_var 0, template_var 3),
         template_app (template_hole 0, template_var 2)))),
    ("Least_Upper_Bound.not_restricted_swap_inputs",
     "[| not_restricted (I ?x1a) ?G; apply_guards ?G (join_ir ?i ?r) |]
      ==> apply_guards ?G (join_ir (?i[?x1a := ?x1.0]) ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 4),
                   template_var 0)),
               template_var 1))
           ))),
    ("Least_Upper_Bound.must_be_another",
     "[| 1 < size (fset_of_list ?b); ?x : set ?b |]
      ==> EX x':set ?b. ?x ~= x'",
     template_implication
      ([template_inequation
         (less_than, template_hole 7,
          template_app
           (template_hole 6,
            template_app (template_hole 5, template_var 1))),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 3, template_var 1)),
             t_empty)
           ))),
    ("Least_Upper_Bound.input_not_constrained_aval_swap_inputs",
     "~ aexp_constrains ?a (V (I ?v)) ==>
      aval ?a (join_ir ?i ?c) = aval ?a (join_ir (?i[?v := ?x]) ?c)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 3)))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 3),
                 template_var 0)),
             template_var 1))))),
    ("Least_Upper_Bound.input_not_constrained_gval_swap_inputs",
     "~ gexp_constrains ?a (V (I ?v)) ==>
      gval ?a (join_ir ?i ?c) = gval ?a (join_ir (?i[?v := ?x]) ?c)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 3)))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 3),
                 template_var 0)),
             template_var 1))))),
    ("Least_Upper_Bound.In_apply_guards",
     "[| In ?v ?l : set ?G1.0; apply_guards ?G1.0 ?s |]
      ==> EX v':set ?l. ?s ?v = Some v'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2)),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 2)),
             t_empty)
           ))),
    ("Least_Upper_Bound.remove_restricted",
     "[| ?g : set ?G; gexp_constrains ?g (V ?v); restricted_once ?v ?G |]
      ==> not_restricted ?v (removeAll ?g ?G)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("Least_Upper_Bound.unrestricted_input_swap",
     "[| not_restricted (I ?i) ?G; apply_guards ?G (join_ir ?iaa ?c) |]
      ==> apply_guards (removeAll ?g ?G) (join_ir (?iaa[?i := ?ia]) ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 5)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 4)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 5),
                   template_var 0)),
               template_var 2))
           ))),
    ("Least_Upper_Bound.gval_rearrange",
     "[| ?g : set ?G; gval ?g ?s = true;
         apply_guards (removeAll ?g ?G) ?s |]
      ==> apply_guards ?G ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 0),
          template_hole 2),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("Least_Upper_Bound.has_distinguishing_Eq",
     "has_distinguishing (Eq (V ?v) (L ?l)) ?G ==>
      EX l'. Eq (V ?v) (L l') : set ?G & ?l ~= l'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_var 2)),
                  template_app (template_hole 6, template_var 1))),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Least_Upper_Bound.restricted_max_once_cons",
     "ALL v. restricted_once v (?g # ?gs) | not_restricted v (?g # ?gs) ==>
      ALL v. restricted_once v ?gs | not_restricted v ?gs",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Least_Upper_Bound.has_distinguishing",
     "has_distinguishing ?g ?G ==>
      (EX v l. ?g = Eq (V v) (L l)) | (EX v l. ?g = In v l)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8, template_app (template_hole 7, t_empty)),
             template_app (template_hole 7, t_empty))
           ))),
    ("Least_Upper_Bound.restricted_head",
     "ALL v.
         restricted_once v (Eq (V ?x2.0) (L ?x1.0) # ?G) |
         not_restricted v (Eq (V ?x2.0) (L ?x1.0) # ?G) ==>
      not_restricted ?x2.0 ?G",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Least_Upper_Bound.unconstrained_input",
     "[| ALL g:set ?G. ~ gexp_constrains g (V (I ?i));
         apply_guards ?G (join_ir ?ia ?c) |]
      ==> apply_guards ?G (join_ir (?ia[?i := ?x']) ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 4)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 3),
                   template_var 0)),
               template_var 1))
           ))),
    ("Least_Upper_Bound.has_corresponding_In",
     "has_corresponding (In ?v ?l) ?G1.0 ==>
      (EX l'. In ?v l' : set ?G1.0 & set l' <= set ?l) |
      (EX l':set ?l. Eq (V ?v) (L l') : set ?G1.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10, template_app (template_hole 9, t_empty)),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 4, template_var 1)),
               t_empty))
           ))),
    ("Least_Upper_Bound.In_neq_apply_guards",
     "[| In ?v ?l : set ?G2.0; Eq (V ?v) (L ?l') : set ?G1.0; ?l' ~: set ?l;
         apply_guards ?G1.0 ?s |]
      ==> ~ apply_guards ?G2.0 ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 5),
                  template_var 4)),
              template_app (template_hole 7, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 5)),
                  template_app (template_hole 4, template_var 2))),
              template_app (template_hole 7, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_app (template_hole 1, template_var 4))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)
               )
           ))),
    ("Least_Upper_Bound.ex_mutex",
     "[| Eq (V ?v) (L ?l) : set ?G1.0; Eq (V ?v) (L ?l') : set ?G2.0;
         ?l ~= ?l'; apply_guards ?G1.0 ?s |]
      ==> ~ apply_guards ?G2.0 ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 5)),
                  template_app (template_hole 4, template_var 4))),
              template_app (template_hole 3, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 5)),
                  template_app (template_hole 4, template_var 2))),
              template_app (template_hole 3, template_var 1))
            ),
        template_negation
         (template_equation (template_var 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)
               )
           ))),
    ("Least_Upper_Bound.apply_guards_remove_restricted",
     "[| ?g : set ?G; gexp_constrains ?g (V (I ?i));
         restricted_once (I ?i) ?G; apply_guards ?G (join_ir ?iaa ?c) |]
      ==> apply_guards (removeAll ?g ?G) (join_ir (?iaa[?i := ?ia]) ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 5),
              template_app (template_hole 8, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 5),
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 5, template_var 3)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 4)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 3),
                   template_var 0)),
               template_var 1))
           ))),
    ("Least_Upper_Bound.In_swap_inputs",
     "[| In (I ?i) ?s2.0 : set ?G; restricted_once (I ?i) ?G;
         ?ia : set ?s2.0; apply_guards ?G (join_ir ?iaa ?c) |]
      ==> apply_guards ?G (join_ir (?iaa[?i := ?ia]) ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_var 5)),
                  template_var 4)),
              template_app (template_hole 6, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 7, template_var 5)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 5),
                   template_var 2)),
               template_var 0))
           ))),
    ("Least_Upper_Bound.another_swap_inputs",
     "[| apply_guards ?G (join_ir ?i ?c);
         filter (%g. gexp_constrains g (V (I ?a))) ?G = [In (I ?a) ?b];
         ?xa : set ?b |]
      ==> apply_guards ?G (join_ir (?i[?a := ?xa]) ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 5),
              template_app
               (template_app (template_hole 11, template_var 4),
                template_var 3))
            ),
        template_equation
         (template_app
           (template_app (template_hole 9, t_empty), template_var 5),
          template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 6, template_var 2)),
                template_var 1)),
            template_hole 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 12, template_var 5),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 2),
                   template_var 0)),
               template_var 3))
           ))),
    ("Least_Upper_Bound.test_aux",
     "[| ALL g:set (removeAll (In (I ?v) ?l) ?G1.0).
            ~ gexp_constrains g (V (I ?v));
         apply_guards ?G1.0 (join_ir ?i ?c); ?x : set ?l |]
      ==> apply_guards ?G1.0 (join_ir (?i[?v := ?x]) ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_hole 11,
                  template_app
                   (template_app
                     (template_hole 10,
                      template_app
                       (template_app
                         (template_hole 9,
                          template_app (template_hole 8, template_var 5)),
                        template_var 4)),
                    template_var 3))),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 4))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 5),
                   template_var 0)),
               template_var 1))
           ))),
    ("Least_Upper_Bound.guard_subset_eq_outputs_updates_subsumption",
     "[| Label ?t1.0 = Label ?t2.0; Arity ?t1.0 = Arity ?t2.0;
         Outputs ?t1.0 = Outputs ?t2.0; Updates ?t1.0 = Updates ?t2.0;
         set (Guards ?t2.0) <= set (Guards ?t1.0) |]
      ==> subsumes ?t2.0 ?c ?t1.0",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 2),
          template_app (template_hole 10, template_var 1)),
        template_equation
         (template_app (template_hole 8, template_var 2),
          template_app (template_hole 8, template_var 1)),
        template_equation
         (template_app (template_hole 6, template_var 2),
          template_app (template_hole 6, template_var 1)),
        template_equation
         (template_app (template_hole 4, template_var 2),
          template_app (template_hole 4, template_var 1)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 1)),
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 2)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2)
           ))),
    ("Least_Upper_Bound.each_input_guarded_once_cons",
     "ALL i:\<Union> (enumerate_gexp_inputs ` set (?a # ?G)).
         length (filter (%g. gexp_constrains g (V (I i))) (?a # ?G))
         <= 1 ==>
      ALL i:\<Union> (enumerate_gexp_inputs ` set ?G).
         length (filter (%g. gexp_constrains g (V (I i))) ?G) <= 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_hole 9),
                    template_app
                     (template_hole 8,
                      template_app
                       (template_app (template_hole 7, template_var 1),
                        template_var 0))))),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_app (template_hole 8, template_var 0)))),
             t_empty)
           ))),
    ("Least_Upper_Bound.correspondence_subsumption",
     "[| Label ?t1.0 = Label ?t2.0; Arity ?t1.0 = Arity ?t2.0;
         Outputs ?t1.0 = Outputs ?t2.0; Updates ?t1.0 = Updates ?t2.0;
         ALL g:set (Guards ?t2.0). has_corresponding g (Guards ?t1.0) |]
      ==> subsumes ?t2.0 ?c ?t1.0",
     template_implication
      ([template_equation
         (template_app (template_hole 11, template_var 2),
          template_app (template_hole 11, template_var 1)),
        template_equation
         (template_app (template_hole 9, template_var 2),
          template_app (template_hole 9, template_var 1)),
        template_equation
         (template_app (template_hole 7, template_var 2),
          template_app (template_hole 7, template_var 1)),
        template_equation
         (template_app (template_hole 5, template_var 2),
          template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 1))),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2)
           ))),
    ("Least_Upper_Bound.guard_subset_eq_outputs_updates_direct_subsumption",
     "[| Label ?t1.0 = Label ?t2.0; Arity ?t1.0 = Arity ?t2.0;
         Outputs ?t1.0 = Outputs ?t2.0; Updates ?t1.0 = Updates ?t2.0;
         set (Guards ?t2.0) <= set (Guards ?t1.0) |]
      ==> directly_subsumes ?m1.0 ?m2.0 ?s1.0 ?s2.0 ?t2.0 ?t1.0",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 5),
          template_app (template_hole 10, template_var 4)),
        template_equation
         (template_app (template_hole 8, template_var 5),
          template_app (template_hole 8, template_var 4)),
        template_equation
         (template_app (template_hole 6, template_var 5),
          template_app (template_hole 6, template_var 4)),
        template_equation
         (template_app (template_hole 4, template_var 5),
          template_app (template_hole 4, template_var 4)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 4)),
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 5)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0),
               template_var 4),
             template_var 5)
           ))),
    ("Least_Upper_Bound.has_distinguishing_In",
     "has_distinguishing (In ?v ?l) ?G ==>
      (EX l' i. ?v = I i & Eq (V ?v) (L l') : set ?G & l' ~: set ?l) |
      (EX l' i. ?v = I i & In ?v l' : set ?G & set ?l < set l')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app (template_hole 16, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 15, template_app (template_hole 14, t_empty)),
             template_app (template_hole 1, t_empty))
           ))),
    ("Least_Upper_Bound.distinguishing_subsumption",
     "[| EX g:set (Guards ?t2.0). has_distinguishing g (Guards ?t1.0);
         Arity ?t1.0 = Arity ?t2.0; EX i. can_take_transition ?t1.0 i ?c;
         ALL (v, l'):insert (0, []) (set (get_Ins (Guards ?t1.0))).
            ALL g:set (removeAll (In (I v) l') (Guards ?t1.0)).
               ~ gexp_constrains g (V (I v)) |]
      ==> ~ subsumes ?t2.0 ?c ?t1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app
                 (template_hole 22,
                  template_app (template_hole 21, template_var 2))),
              t_empty)
            ),
        template_equation
         (template_app (template_hole 18, template_var 1),
          template_app (template_hole 18, template_var 2)),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app
                   (template_hole 14,
                    template_app
                     (template_app (template_hole 13, template_hole 12),
                      template_hole 11)),
                  template_app
                   (template_hole 10,
                    template_app
                     (template_hole 9,
                      template_app (template_hole 21, template_var 1))))),
              template_app (template_hole 8, t_empty))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0),
                 template_var 1)
               )
           ))),
    ("Least_Upper_Bound.lob_distinguished_3_not_subsumes",
     "[| EX (i, l):set (get_Ins (Guards ?t2.0)).
            filter (%g. gexp_constrains g (V (I i))) (Guards ?t2.0) =
            [In (I i) l] &
            (EX (i', l'):set (get_Ins (Guards ?t1.0)).
                i = i' & set l' < set l);
         Arity ?t1.0 = Arity ?t2.0; EX i. can_take_transition ?t2.0 i ?c |]
      ==> ~ subsumes ?t1.0 ?c ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 21,
                template_app
                 (template_hole 20,
                  template_app
                   (template_hole 19,
                    template_app (template_hole 18, template_var 2)))),
              template_app (template_hole 17, t_empty))
            ),
        template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 4, template_var 2)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0),
                 template_var 2)
               )
           ))),
    ("Least_Upper_Bound.lob_aux_some",
     "[| Outputs ?t1.0 = Outputs ?t2.0; Updates ?t1.0 = Updates ?t2.0;
         all_literal_args ?t1.0; all_literal_args ?t2.0;
         Label ?t = Label ?t1.0; Arity ?t = Arity ?t1.0;
         Guards ?t = remdups (merge_guards (Guards ?t1.0) (Guards ?t2.0));
         Outputs ?t = Outputs ?t1.0; Updates ?t = Updates ?t1.0 |]
      ==> lob_aux ?t1.0 ?t2.0 = Some ?t",
     template_implication
      ([template_equation
         (template_app (template_hole 14, template_var 2),
          template_app (template_hole 14, template_var 1)),
        template_equation
         (template_app (template_hole 12, template_var 2),
          template_app (template_hole 12, template_var 1)),
        template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_equation
         (template_app (template_hole 9, template_var 0),
          template_app (template_hole 9, template_var 2)),
        template_equation
         (template_app (template_hole 7, template_var 0),
          template_app (template_hole 7, template_var 2)),
        template_equation
         (template_app (template_hole 5, template_var 0),
          template_app
           (template_hole 4,
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 5, template_var 2)),
              template_app (template_hole 5, template_var 1)))),
        template_equation
         (template_app (template_hole 14, template_var 0),
          template_app (template_hole 14, template_var 2)),
        template_equation
         (template_app (template_hole 12, template_var 0),
          template_app (template_hole 12, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Least_Upper_Bound.lob_distinguished_2_not_subsumes",
     "[| EX (i, l):set (get_Ins (Guards ?t2.0)).
            filter (%g. gexp_constrains g (V (I i))) (Guards ?t2.0) =
            [In (I i) l] &
            (EX l':set l.
                i < Arity ?t1.0 &
                Eq (V (I i)) (L l') : set (Guards ?t1.0) &
                1 < size (fset_of_list l));
         Arity ?t1.0 = Arity ?t2.0; EX i. can_take_transition ?t2.0 i ?c |]
      ==> ~ subsumes ?t1.0 ?c ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 29,
                template_app
                 (template_hole 28,
                  template_app
                   (template_hole 27,
                    template_app (template_hole 26, template_var 2)))),
              template_app (template_hole 25, t_empty))
            ),
        template_equation
         (template_app (template_hole 12, template_var 1),
          template_app (template_hole 12, template_var 2)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0),
                 template_var 2)
               )
           ))),
    ("Least_Upper_Bound.literal_args_can_take",
     "[| ALL g:set ?G.
            EX i v s. g = Eq (V (I i)) (L v) | g = In (I i) s & s ~= [];
         ALL i:\<Union> (enumerate_gexp_inputs ` set ?G). i < ?a;
         ALL i:\<Union> (enumerate_gexp_inputs ` set ?G).
            length (filter (%g. gexp_constrains g (V (I i))) ?G) <= 1 |]
      ==> EX i. length i = ?a & apply_guards ?G (join_ir i ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 29,
                template_app (template_hole 28, template_var 2)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_hole 12,
                  template_app
                   (template_app (template_hole 11, template_hole 10),
                    template_app (template_hole 28, template_var 2)))),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_hole 12,
                  template_app
                   (template_app (template_hole 11, template_hole 10),
                    template_app (template_hole 28, template_var 2)))),
              t_empty)
            )],
       template_predicate (template_app (template_hole 25, t_empty)))),
    ("Least_Upper_Bound.test",
     "[| In (I ?v) ?l : set ?G2.0; In (I ?v) ?l' : set ?G1.0; ?x : set ?l';
         ?x ~: set ?l; apply_guards ?G1.0 (join_ir ?i ?c); length ?i = ?a;
         ALL g:set (removeAll (In (I ?v) ?l') ?G1.0).
            ~ gexp_constrains g (V (I ?v)) |]
      ==> EX i. length i = ?a &
                apply_guards ?G1.0 (join_ir i ?c) &
                (length i = ?a --> ~ apply_guards ?G2.0 (join_ir i ?c))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app
                   (template_hole 16,
                    template_app (template_hole 15, template_var 8)),
                  template_var 7)),
              template_app (template_hole 14, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app
                   (template_hole 16,
                    template_app (template_hole 15, template_var 8)),
                  template_var 5)),
              template_app (template_hole 14, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 3),
              template_app (template_hole 12, template_var 5))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 13, template_var 3),
                  template_app (template_hole 12, template_var 7))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 4),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1))
            ),
        template_equation
         (template_app (template_hole 7, template_var 2), template_var 0),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 14,
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app
                       (template_app
                         (template_hole 16,
                          template_app (template_hole 15, template_var 8)),
                        template_var 5)),
                    template_var 4))),
              t_empty)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Least_Upper_Bound.test2",
     "[| In (I ?i) ?l : set (Guards ?t2.0);
         In (I ?i) ?l' : set (Guards ?t1.0); length ?ia = Arity ?t1.0;
         apply_guards (Guards ?t1.0) (join_ir ?ia ?c); ?x : set ?l';
         ?x ~: set ?l;
         ALL (v, l'):insert (0, []) (set (get_Ins (Guards ?t1.0))).
            ALL g:set (removeAll (In (I v) l') (Guards ?t1.0)).
               ~ gexp_constrains g (V (I v));
         Arity ?t1.0 = Arity ?t2.0 |]
      ==> EX i. length i = Arity ?t2.0 &
                apply_guards (Guards ?t1.0) (join_ir i ?c) &
                (length i = Arity ?t2.0 -->
                 ~ apply_guards (Guards ?t2.0) (join_ir i ?c))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 29,
                template_app
                 (template_app
                   (template_hole 28,
                    template_app (template_hole 27, template_var 7)),
                  template_var 6)),
              template_app
               (template_hole 26,
                template_app (template_hole 25, template_var 5)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 29,
                template_app
                 (template_app
                   (template_hole 28,
                    template_app (template_hole 27, template_var 7)),
                  template_var 4)),
              template_app
               (template_hole 26,
                template_app (template_hole 24, template_var 3)))
            ),
        template_equation
         (template_app (template_hole 22, template_var 2),
          template_app (template_hole 21, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app (template_hole 24, template_var 3)),
              template_app
               (template_app (template_hole 19, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 0),
              template_app (template_hole 17, template_var 4))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 18, template_var 0),
                  template_app (template_hole 17, template_var 6))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app
                   (template_hole 14,
                    template_app
                     (template_app (template_hole 13, template_hole 12),
                      template_hole 11)),
                  template_app
                   (template_hole 10,
                    template_app
                     (template_hole 9,
                      template_app (template_hole 24, template_var 3))))),
              template_app (template_hole 8, t_empty))
            ),
        template_equation
         (template_app (template_hole 21, template_var 3),
          template_app (template_hole 3, template_var 5))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Least_Upper_Bound.opposite_gob_subsumption",
     "[| ALL g:set (Guards ?t1.0).
            EX i v s. g = Eq (V (I i)) (L v) | g = In (I i) s & s ~= [];
         ALL g:set (Guards ?t2.0).
            EX i v s. g = Eq (V (I i)) (L v) | g = In (I i) s & s ~= [];
         EX i v.
            Eq (V (I i)) (L v) : set (Guards ?t1.0) &
            (ALL g:set (Guards ?t2.0). ~ gexp_constrains g (V (I i)));
         Arity ?t1.0 = Arity ?t2.0;
         ALL i:enumerate_inputs ?t2.0. i < Arity ?t2.0;
         ALL i:enumerate_inputs ?t2.0.
            length (filter (%g. gexp_constrains g (V (I i))) (Guards ?t2.0))
            <= 1 |]
      ==> ~ subsumes ?t1.0 ?c ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 28,
                template_app
                 (template_hole 27,
                  template_app (template_hole 26, template_var 2))),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 28,
                template_app
                 (template_hole 27,
                  template_app (template_hole 26, template_var 1))),
              t_empty)
            ),
        template_predicate (template_app (template_hole 25, t_empty)),
        template_equation
         (template_app (template_hole 8, template_var 2),
          template_app (template_hole 8, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)),
              t_empty)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0),
                 template_var 1)
               )
           )))]
