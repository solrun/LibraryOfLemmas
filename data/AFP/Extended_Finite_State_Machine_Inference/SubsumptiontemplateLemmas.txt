   [("Subsumption.subsumes_reflexive", "subsumes ?t ?c ?t",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 1)
         )),
    ("Subsumption.directly_subsumes_reflexive",
     "directly_subsumes ?e1.0 ?e2.0 ?s1.0 ?s2.0 ?t ?t",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0),
           template_var 0)
         )),
    ("Subsumption.subsumes_in_all_contexts_directly_subsumes",
     "(!!c. subsumes ?t2.0 c ?t1.0) ==>
      directly_subsumes ?e1.0 ?e2.0 ?s ?s' ?t2.0 ?t1.0",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0),
               template_var 5),
             template_var 4)
           ))),
    ("Subsumption.subsumes_transitive",
     "[| subsumes ?t1.0 ?c ?t2.0; subsumes ?t2.0 ?c ?t3.0 |]
      ==> subsumes ?t1.0 ?c ?t3.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 1),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Subsumption.bad_guards",
     "EX i. can_take_transition ?t1.0 i ?r &
            ~ can_take_transition ?t2.0 i ?r ==>
      ~ subsumes ?t2.0 ?r ?t1.0",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1),
                 template_var 2)
               )
           ))),
    ("Subsumption.directly_subsumes_transitive",
     "[| directly_subsumes ?e1.0 ?e2.0 ?s1.0 ?s2.0 ?t1.0 ?t2.0;
         directly_subsumes ?e1.0 ?e2.0 ?s1.0 ?s2.0 ?t2.0 ?t3.0 |]
      ==> directly_subsumes ?e1.0 ?e2.0 ?s1.0 ?s2.0 ?t1.0 ?t3.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 0, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 0, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Subsumption.no_functionality_subsumed",
     "[| Label ?t1.0 = Label ?t2.0; Arity ?t1.0 = Arity ?t2.0;
         \<nexists>i. can_take_transition ?t1.0 i ?c |]
      ==> subsumes ?t2.0 ?c ?t1.0",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 2),
          template_app (template_hole 6, template_var 1)),
        template_equation
         (template_app (template_hole 4, template_var 2),
          template_app (template_hole 4, template_var 1)),
        template_negation
         (template_predicate (template_app (template_hole 2, t_empty)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2)
           ))),
    ("Subsumption.bad_outputs",
     "EX i. can_take_transition ?t1.0 i ?r &
            evaluate_outputs ?t1.0 i ?r ~= evaluate_outputs ?t2.0 i ?r ==>
      ~ subsumes ?t2.0 ?r ?t1.0",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1),
                 template_var 2)
               )
           ))),
    ("Subsumption.no_choice_no_subsumption",
     "[| Label ?t = Label ?t'; Arity ?t = Arity ?t'; ~ choice ?t ?t';
         EX i. can_take_transition ?t' i ?c |]
      ==> ~ subsumes ?t ?c ?t'",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 2),
          template_app (template_hole 7, template_var 1)),
        template_equation
         (template_app (template_hole 5, template_var 2),
          template_app (template_hole 5, template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)
                )
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0),
                 template_var 1)
               )
           ))),
    ("Subsumption.visits_and_not_subsumes",
     "EX c1 c2 t.
         obtains ?s1.0 c1 ?e1.0 0 <> t &
         obtains ?s2.0 c2 ?e2.0 0 <> t & ~ subsumes ?t1.0 c2 ?t2.0 ==>
      ~ directly_subsumes ?e1.0 ?e2.0 ?s1.0 ?s2.0 ?t1.0 ?t2.0",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 4),
                         template_var 2),
                       template_var 5),
                     template_var 3),
                   template_var 1),
                 template_var 0)
               )
           ))),
    ("Subsumption.subsumes_updates",
     "[| subsumes ?t2.0 ?r ?t1.0; can_take_transition ?t1.0 ?i ?r;
         evaluate_updates ?t1.0 ?i ?r $ ?a = Some ?x |]
      ==> evaluate_updates ?t2.0 ?i ?r $ ?a = Some ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2),
              template_var 4)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 2, template_var 3)),
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 4)),
                template_var 4)),
            template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 5)),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 4)),
               template_var 4)),
           template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Subsumption.subsumes_update_equality",
     "subsumes ?t1.0 ?c ?t2.0 ==>
      ALL i.
         can_take_transition ?t2.0 i ?c -->
         (ALL r'.
             evaluate_updates ?t1.0 i ?c $ r' =
             evaluate_updates ?t2.0 i ?c $ r' |
             evaluate_updates ?t2.0 i ?c $ r' = None)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Subsumption.direct_subsumption",
     "[| !!t c1 c2.
            [| obtains ?s1.0 c1 ?e1.0 0 <> t;
               obtains ?s2.0 c2 ?e2.0 0 <> t |]
            ==> ?f c2;
         !!c. ?f c ==> subsumes ?t1.0 c ?t2.0 |]
      ==> directly_subsumes ?e1.0 ?e2.0 ?s1.0 ?s2.0 ?t1.0 ?t2.0",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 3),
                   template_var 6),
                 template_var 4),
               template_var 1),
             template_var 0)
           ))),
    ("Subsumption.subsumes_possible_steps_replace",
     "[| (?s2', ?t2') |\<in>| possible_steps ?e2.0 ?s2.0 ?r2.0 ?l ?i;
         subsumes ?t2.0 ?r2.0 ?t1.0;
         ((?s2.0, ?s2'), ?t2') = ((?ss2.0, ?ss2'), ?t1.0) |]
      ==> (?s2', ?t2.0) |\<in>|
          possible_steps
           (replace ?e2.0 ((?ss2.0, ?ss2'), ?t1.0) ((?ss2.0, ?ss2'), ?t2.0))
           ?s2.0 ?r2.0 ?l ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 10),
                  template_var 9)),
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 5, template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 6),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 7),
                template_var 10)),
            template_var 9),
          template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0)),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 10),
                 template_var 3)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app
                          (template_app (template_hole 0, template_var 8),
                           template_app
                            (template_app
                              (template_hole 2,
                               template_app
                                (template_app
                                  (template_hole 1, template_var 1),
                                 template_var 0)),
                             template_var 2)),
                         template_app
                          (template_app
                            (template_hole 2,
                             template_app
                              (template_app
                                (template_hole 1, template_var 1),
                               template_var 0)),
                           template_var 3))),
                     template_var 7),
                   template_var 6),
                 template_var 5),
               template_var 4))
           ))),
    ("Subsumption.inconsistent_updates",
     "EX p2 p1.
         (EX i. posterior_separate (Arity ?t1.0) (Guards ?t1.0)
                 (Updates ?t2.0) i ?r =
                Some p2 &
                posterior_separate (Arity ?t1.0) (Guards ?t1.0)
                 (Updates ?t1.0) i ?r =
                Some p1) &
         (EX r' P.
             P (p2 $ r') & (EX y. p1 $ r' = Some y) & ~ P (p1 $ r')) ==>
      ~ subsumes ?t2.0 ?r ?t1.0",
     template_implication
      ([template_predicate (template_app (template_hole 16, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0),
                 template_var 2)
               )
           ))),
    ("Subsumption.subsumption",
     "[| Label ?t1.0 = Label ?t2.0 & Arity ?t1.0 = Arity ?t2.0;
         ALL i.
            can_take_transition ?t1.0 i ?r -->
            can_take_transition ?t2.0 i ?r;
         ALL i.
            can_take_transition ?t1.0 i ?r -->
            evaluate_outputs ?t1.0 i ?r = evaluate_outputs ?t2.0 i ?r;
         ALL p1 p2 i.
            posterior_separate (Arity ?t1.0) (Guards ?t1.0) (Updates ?t2.0)
             i ?r =
            Some p2 -->
            posterior_separate (Arity ?t1.0) (Guards ?t1.0) (Updates ?t1.0)
             i ?r =
            Some p1 -->
            (ALL P r'. p1 $ r' = None | (P (p2 $ r') --> P (p1 $ r'))) |]
      ==> subsumes ?t2.0 ?r ?t1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 24,
                template_app
                 (template_app
                   (template_hole 23,
                    template_app (template_hole 22, template_var 2)),
                  template_app (template_hole 22, template_var 1))),
              template_app
               (template_app
                 (template_hole 21,
                  template_app (template_hole 20, template_var 2)),
                template_app (template_hole 20, template_var 1)))
            ),
        template_predicate (template_app (template_hole 19, t_empty)),
        template_predicate (template_app (template_hole 19, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2)
           )))]
