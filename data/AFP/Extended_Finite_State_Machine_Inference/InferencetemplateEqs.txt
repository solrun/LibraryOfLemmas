   [("Inference.state_nondeterminism_empty",
     "state_nondeterminism ?a {||} = {||}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Inference.S_alt", "Inference.S ?t = EFSM.S (tm ?t)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Inference.merge_state_self", "merge_states ?s ?s ?t = ?t",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 1),
         template_var 0),
       template_var 0)),
    ("Inference.state_nondeterminism_singledestn",
     "state_nondeterminism ?a {|?x|} = {||}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_hole 0)),
    ("Inference.score_1", "score_1 ?e ?s = k_score 1 ?e ?s",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 1),
         template_var 0))),
    ("Inference.merge_states_symmetry",
     "merge_states ?x ?y ?t = merge_states ?y ?x ?t",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_var 0))),
    ("Inference.make_pta_aux_fold",
     "make_pta_aux ?l ?e = fold (%h e. make_branch e 0 <> h) ?l ?e",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, t_empty), template_var 1),
         template_var 0))),
    ("Inference.paths_of_length_1",
     "paths_of_length 1 ?e ?s =
      (%(d, t, id). [id]) |`| Inference.outgoing_transitions ?s ?e",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_hole 6), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Inference.merge_states_self_simp",
     "merge_states ?x ?y ?t =
      (if ?x = ?y then ?t
       else if ?y < ?x then merge_states_aux ?x ?y ?t
            else merge_states_aux ?y ?x ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("Inference.step_score_foldr",
     "step_score ?xs ?e ?s =
      foldr
       (%(id1, id2) acc.
           let score = ?s id1 id2 ?e
           in if score = 0 then 0 else score + acc)
       ?xs 0",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 5, template_app (template_hole 4, t_empty)),
           template_var 2),
         template_hole 1)))]
