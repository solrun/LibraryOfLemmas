   [("SetUtils.subset_inter_diff_empty",
     "?s <= ?t ==> ?s Int (?u - ?t) = {}",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_hole 0))),
    ("SetUtils.bound_child_parent_neq_mems_state_set_neq_len",
     "ALL x. x : ?s --> x < ?k ==> finite ?s",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("SetUtils.mems_le_finite", "ALL x. x : ?s --> x <= ?k ==> finite ?s",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("SetUtils.FINITE_ALL_DISTINCT_LISTS",
     "finite ?P ==> finite {p. distinct p & set p <= ?P}",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 5, template_app (template_hole 4, t_empty))
           ))),
    ("SetUtils.scc_main_lemma_x", "?x : ?s & ?x ~: ?t ==> ?s ~= ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 0)))
            )],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("SetUtils.mem_lt_imp_MIN_lt", "EX x. x : ?s & x < ?k ==> Inf ?s < ?k",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("SetUtils.mem_le_imp_MIN_le",
     "EX x. x : ?s & x <= ?k ==> Inf ?s <= ?k",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("SetUtils.bound_main_lemma_2",
     "?s ~= {} & (ALL x. x : ?s --> x <= ?k) ==> Sup ?s <= ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_hole 5))),
              template_app (template_hole 4, t_empty))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("SetUtils.card_union'",
     "finite ?s & finite ?t & disjnt ?s ?t ==>
      card (?s Un ?t) = card ?s + card ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 0)),
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("SetUtils.bound_child_parent_not_eq_last_diff_paths",
     "[| ?s ~= {}; ALL x. x : ?s --> x < ?k |] ==> Sup ?s < ?k",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("SetUtils.CARD_INJ_IMAGE_2",
     "[| finite ?s; ALL x y. x : ?s & y : ?s --> (?f x = ?f y) = (x = y) |]
      ==> card (?f ` ?s) = card ?s",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app (template_hole 0, template_var 1)))),
    ("SetUtils.neq_funs_neq_images",
     "[| ALL x. x : ?s --> (ALL y. y : ?s --> ?f1.0 x ~= ?f2.0 y);
         EX x. x : ?s |]
      ==> ?f1.0 ` ?s ~= ?f2.0 ` ?s",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("SetUtils.FINITE_ALL_DISTINCT_LISTS_i",
     "finite ?P ==>
      {p. distinct p & set p <= ?P} =
      {[]} Un (UN e:?P. {e # p0 |p0. distinct p0 & set p0 <= ?P - {e}})",
     template_implication
      ([template_predicate
         (template_app (template_hole 18, template_var 0))],
       template_equation
        (template_app (template_hole 16, t_empty),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 10, template_hole 9),
               template_hole 8)),
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, t_empty),
               template_var 0))))))]
