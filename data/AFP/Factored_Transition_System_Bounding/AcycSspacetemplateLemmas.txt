   [("AcycSspace.snapshot_bound_leq_S",
     "problem_plan_bound (snapshot ?PROB (fmrestrict_set ?vs ?s))
      <= S ?vs ?lss ?PROB (fmrestrict_set ?vs ?s)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1))),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 3),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 1)))),
    ("AcycSspace.empty_change_no_change",
     "vars_change ?as ?vs ?s = [] ==>
      fmrestrict_set ?vs (exec_plan ?s ?as) = fmrestrict_set ?vs ?s",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1),
            template_var 0),
          template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("AcycSspace.vars_change_cat",
     "vars_change (?as1.0 @ ?as2.0) ?vs ?s =
      vars_change ?as1.0 ?vs ?s @
      vars_change ?as2.0 ?vs (exec_plan ?s ?as1.0)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3))))),
    ("AcycSspace.vars_change_cons_2",
     "vars_change ?as ?vs ?s = ?s' # ?ss ==>
      fmrestrict_set ?vs ?s' ~= fmrestrict_set ?vs ?s",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2))
           ))),
    ("AcycSspace.no_vs_change_valid_in_snapshot",
     "[| ?as : valid_plans ?PROB; sat_precond_as ?s ?as;
         vars_change ?as ?vs ?s = [] |]
      ==> ?as : valid_plans (snapshot ?PROB (fmrestrict_set ?vs ?s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 3),
              template_var 0),
            template_var 1),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 3),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))))
           ))),
    ("AcycSspace.problem_plan_bound_S_bound_thesis",
     "[| finite ?PROB; sspace_DAG (prob_proj ?PROB ?vs) ?lss |]
      ==> problem_plan_bound ?PROB
          <= Sup {S ?vs ?lss ?PROB s' |s'.
                  s' : valid_states (prob_proj ?PROB ?vs)}",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 8, template_var 2),
         template_app
          (template_hole 7, template_app (template_hole 6, t_empty))))),
    ("AcycSspace.zero_change_imp_all_preconds_submap",
     "[| vars_change ?as ?vs ?s = []; sat_precond_as ?s ?as; ListMem ?b ?as;
         fmrestrict_set ?vs ?s = fmrestrict_set ?vs ?s' |]
      ==> fmrestrict_set ?vs (fst ?b) \<subseteq>\<^sub>f
          fmrestrict_set ?vs ?s'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 2),
          template_hole 6),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 4)
            ),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_app (template_hole 0, template_var 1))),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 0))
           ))),
    ("AcycSspace.zero_change_imp_all_effects_submap",
     "[| vars_change ?as ?vs ?s = []; sat_precond_as ?s ?as; ListMem ?b ?as;
         fmrestrict_set ?vs ?s = fmrestrict_set ?vs ?s' |]
      ==> fmrestrict_set ?vs (snd ?b) \<subseteq>\<^sub>f
          fmrestrict_set ?vs ?s'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 2),
          template_hole 6),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 4)
            ),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_app (template_hole 0, template_var 1))),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 0))
           ))),
    ("AcycSspace.problem_plan_bound_S_bound",
     "[| finite ?PROB;
         top_sorted_abs (%x y. y : state_successors (prob_proj ?PROB ?vs) x)
          ?lss;
         set ?lss = valid_states (prob_proj ?PROB ?vs) |]
      ==> problem_plan_bound ?PROB
          <= Sup {S ?vs ?lss ?PROB s' |s'.
                  s' : valid_states (prob_proj ?PROB ?vs)}",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, t_empty), template_var 0)
            ),
        template_equation
         (template_app (template_hole 9, template_var 0),
          template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 11, template_var 2),
              template_var 1)))],
       template_inequation
        (less_equals, template_app (template_hole 6, template_var 2),
         template_app
          (template_hole 5, template_app (template_hole 4, t_empty))))),
    ("AcycSspace.problem_plan_bound_S_bound_2nd_step_thesis",
     "[| finite ?PROB; sspace_DAG (prob_proj ?PROB ?vs) ?lss;
         ?s : valid_states ?PROB; ?as : valid_plans ?PROB |]
      ==> EX as'.
             exec_plan ?s as' = exec_plan ?s ?as &
             subseq as' ?as &
             length as' <= S ?vs ?lss ?PROB (fmrestrict_set ?vs ?s)",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_app (template_hole 12, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_app (template_hole 10, template_var 4))
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("AcycSspace.vars_change_cons",
     "vars_change ?as ?vs ?s = ?s' # ?ss ==>
      EX as1 act as2.
         ?as = as1 @ act # as2 &
         vars_change as1 ?vs ?s = [] &
         state_succ (exec_plan ?s as1) act = ?s' &
         vars_change as2 ?vs (state_succ (exec_plan ?s as1) act) = ?ss",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 11, template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 10, template_var 1),
            template_var 0))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("AcycSspace.no_vs_change_snapshot_s_vs_is_valid_bound",
     "[| finite ?PROB; vars_change ?as ?vs ?s = []; no_effectless_act ?as;
         sat_precond_as ?s ?as; ?s : valid_states ?PROB;
         ?as : valid_plans ?PROB |]
      ==> EX as'.
             exec_plan ?s ?as = exec_plan ?s as' &
             subseq as' ?as &
             length as'
             <= problem_plan_bound
                 (snapshot ?PROB (fmrestrict_set ?vs ?s))",
     template_implication
      ([template_predicate
         (template_app (template_hole 20, template_var 3)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 18, template_var 2),
              template_var 1),
            template_var 0),
          template_hole 17),
        template_predicate
         (template_app (template_hole 16, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 0),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 0),
              template_app (template_hole 13, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_app (template_hole 11, template_var 3))
            )],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("AcycSspace.S_geq_S_succ_plus_ell",
     "[| ?s : valid_states ?PROB;
         top_sorted_abs (%x y. y : state_successors (prob_proj ?PROB ?vs) x)
          ?lss;
         ?s' : state_successors (prob_proj ?PROB ?vs) ?s;
         set ?lss = valid_states (prob_proj ?PROB ?vs) |]
      ==> problem_plan_bound (snapshot ?PROB (fmrestrict_set ?vs ?s)) +
          S ?vs ?lss ?PROB (fmrestrict_set ?vs ?s') +
          1
          <= S ?vs ?lss ?PROB (fmrestrict_set ?vs ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 4),
              template_app (template_hole 12, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, t_empty), template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 0),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_var 3),
                    template_var 2)),
                template_var 4))
            ),
        template_equation
         (template_app (template_hole 7, template_var 1),
          template_app
           (template_hole 12,
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_app
                      (template_app (template_hole 2, template_var 2),
                       template_var 4)))),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1),
                   template_var 3),
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 0)))),
           template_hole 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 4))))),
    ("AcycSspace.problem_plan_bound_S_bound_2nd_step",
     "[| finite ?PROB;
         top_sorted_abs (%x y. y : state_successors (prob_proj ?PROB ?vs) x)
          ?lss;
         set ?lss = valid_states (prob_proj ?PROB ?vs);
         ?s : valid_states ?PROB; ?as : valid_plans ?PROB |]
      ==> EX as'.
             exec_plan ?s as' = exec_plan ?s ?as &
             subseq as' ?as &
             length as' <= S ?vs ?lss ?PROB (fmrestrict_set ?vs ?s)",
     template_implication
      ([template_predicate
         (template_app (template_hole 19, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 18, t_empty), template_var 2)
            ),
        template_equation
         (template_app (template_hole 13, template_var 2),
          template_app
           (template_hole 12,
            template_app
             (template_app (template_hole 15, template_var 4),
              template_var 3))),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 1),
              template_app (template_hole 12, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_app (template_hole 10, template_var 4))
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("AcycSspace.no_vs_change_obtain_snapshot_bound_1st_step",
     "[| finite ?PROB; vars_change ?as ?vs ?s = []; sat_precond_as ?s ?as;
         ?s : valid_states ?PROB; ?as : valid_plans ?PROB |]
      ==> EX as'.
             exec_plan
              (fmrestrict_set
                (prob_dom (snapshot ?PROB (fmrestrict_set ?vs ?s))) ?s)
              ?as =
             exec_plan
              (fmrestrict_set
                (prob_dom (snapshot ?PROB (fmrestrict_set ?vs ?s))) ?s)
              as' &
             subseq as' ?as &
             length as'
             <= problem_plan_bound
                 (snapshot ?PROB (fmrestrict_set ?vs ?s))",
     template_implication
      ([template_predicate
         (template_app (template_hole 20, template_var 3)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 18, template_var 2),
              template_var 1),
            template_var 0),
          template_hole 17),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 0),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 0),
              template_app (template_hole 14, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_app (template_hole 12, template_var 3))
            )],
       template_predicate (template_app (template_hole 11, t_empty)))),
    ("AcycSspace.no_vs_change_obtain_snapshot_bound_2nd_step",
     "[| finite ?PROB; vars_change ?as ?vs ?s = []; sat_precond_as ?s ?as;
         ?s : valid_states ?PROB; ?as : valid_plans ?PROB |]
      ==> EX as'.
             exec_plan
              (fmrestrict_set
                (prob_dom (snapshot ?PROB (fmrestrict_set ?vs ?s))) ?s)
              ?as =
             exec_plan
              (fmrestrict_set
                (prob_dom (snapshot ?PROB (fmrestrict_set ?vs ?s))) ?s)
              as' &
             subseq as' ?as &
             sat_precond_as ?s as' &
             length as'
             <= problem_plan_bound
                 (snapshot ?PROB (fmrestrict_set ?vs ?s))",
     template_implication
      ([template_predicate
         (template_app (template_hole 20, template_var 3)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 18, template_var 2),
              template_var 1),
            template_var 0),
          template_hole 17),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 0),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 0),
              template_app (template_hole 14, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_app (template_hole 12, template_var 3))
            )],
       template_predicate (template_app (template_hole 11, t_empty)))),
    ("AcycSspace.no_vs_change_obtain_snapshot_bound_3rd_step",
     "[| finite ?PROB; vars_change ?as ?vs ?s = []; no_effectless_act ?as;
         sat_precond_as ?s ?as; ?s : valid_states ?PROB;
         ?as : valid_plans ?PROB |]
      ==> EX as'.
             fmrestrict_set
              (prob_dom (snapshot ?PROB (fmrestrict_set ?vs ?s)))
              (exec_plan ?s ?as) =
             fmrestrict_set
              (prob_dom (snapshot ?PROB (fmrestrict_set ?vs ?s)))
              (exec_plan ?s as') &
             subseq as' ?as &
             length as'
             <= problem_plan_bound
                 (snapshot ?PROB (fmrestrict_set ?vs ?s))",
     template_implication
      ([template_predicate
         (template_app (template_hole 21, template_var 3)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 19, template_var 2),
              template_var 1),
            template_var 0),
          template_hole 18),
        template_predicate
         (template_app (template_hole 17, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 0),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 0),
              template_app (template_hole 14, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_app (template_hole 12, template_var 3))
            )],
       template_predicate (template_app (template_hole 11, t_empty)))),
    ("AcycSspace.problem_plan_bound_S_bound_1st_step",
     "[| finite ?PROB;
         top_sorted_abs (%x y. y : state_successors (prob_proj ?PROB ?vs) x)
          ?lss;
         set ?lss = valid_states (prob_proj ?PROB ?vs);
         ?s : valid_states ?PROB; ?as : valid_plans ?PROB;
         no_effectless_act ?as; sat_precond_as ?s ?as |]
      ==> EX as'.
             exec_plan ?s as' = exec_plan ?s ?as &
             subseq as' ?as &
             length as' <= S ?vs ?lss ?PROB (fmrestrict_set ?vs ?s)",
     template_implication
      ([template_predicate
         (template_app (template_hole 21, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, t_empty), template_var 2)
            ),
        template_equation
         (template_app (template_hole 15, template_var 2),
          template_app
           (template_hole 14,
            template_app
             (template_app (template_hole 17, template_var 4),
              template_var 3))),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 1),
              template_app (template_hole 14, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 0),
              template_app (template_hole 12, template_var 4))
            ),
        template_predicate
         (template_app (template_hole 11, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("AcycSspace.S_in_MPLS_leq_2_pow_n",
     "[| finite ?PROB;
         top_sorted_abs (%x y. y : state_successors (prob_proj ?PROB ?vs) x)
          ?lss;
         set ?lss = valid_states (prob_proj ?PROB ?vs);
         ?s : valid_states ?PROB; ?as : valid_plans ?PROB |]
      ==> EX as'.
             exec_plan ?s as' = exec_plan ?s ?as &
             subseq as' ?as &
             length as'
             <= Sup {S ?vs ?lss ?PROB s' |s'.
                     s' : valid_states (prob_proj ?PROB ?vs)}",
     template_implication
      ([template_predicate
         (template_app (template_hole 22, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 21, t_empty), template_var 2)
            ),
        template_equation
         (template_app (template_hole 16, template_var 2),
          template_app
           (template_hole 15,
            template_app
             (template_app (template_hole 18, template_var 4),
              template_var 3))),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 1),
              template_app (template_hole 15, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 0),
              template_app (template_hole 13, template_var 4))
            )],
       template_predicate (template_app (template_hole 12, t_empty)))),
    ("AcycSspace.no_vs_change_snapshot_s_vs_is_valid_bound_i",
     "[| finite ?PROB; vars_change ?as ?vs ?s = []; no_effectless_act ?as;
         sat_precond_as ?s ?as; ?s : valid_states ?PROB;
         ?as : valid_plans ?PROB;
         fmrestrict_set (prob_dom (snapshot ?PROB (fmrestrict_set ?vs ?s)))
          (exec_plan ?s ?as) =
         fmrestrict_set (prob_dom (snapshot ?PROB (fmrestrict_set ?vs ?s)))
          (exec_plan ?s ?as');
         subseq ?as' ?as;
         length ?as'
         <= problem_plan_bound (snapshot ?PROB (fmrestrict_set ?vs ?s)) |]
      ==> fmrestrict_set
           (fmdom' (exec_plan ?s ?as) -
            prob_dom (snapshot ?PROB (fmrestrict_set ?vs ?s)))
           (exec_plan ?s ?as) =
          fmrestrict_set
           (fmdom' (exec_plan ?s ?as) -
            prob_dom (snapshot ?PROB (fmrestrict_set ?vs ?s)))
           ?s &
          fmrestrict_set
           (fmdom' (exec_plan ?s ?as') -
            prob_dom (snapshot ?PROB (fmrestrict_set ?vs ?s)))
           (exec_plan ?s ?as') =
          fmrestrict_set
           (fmdom' (exec_plan ?s ?as') -
            prob_dom (snapshot ?PROB (fmrestrict_set ?vs ?s)))
           ?s",
     template_implication
      ([template_predicate
         (template_app (template_hole 22, template_var 4)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 20, template_var 3),
              template_var 2),
            template_var 1),
          template_hole 19),
        template_predicate
         (template_app (template_hole 18, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_app (template_hole 15, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 3),
              template_app (template_hole 13, template_var 4))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 11,
              template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_app
                   (template_app (template_hole 11, template_var 2),
                    template_var 1)))),
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 3)),
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_app
                   (template_app (template_hole 11, template_var 2),
                    template_var 1)))),
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0))),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_hole 6),
                template_var 0),
              template_var 3)
            ),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 0),
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 9, template_var 4),
              template_app
               (template_app (template_hole 11, template_var 2),
                template_var 1))))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 12,
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_hole 0,
                             template_app
                              (template_app
                                (template_hole 8, template_var 1),
                               template_var 3))),
                         template_app
                          (template_hole 10,
                           template_app
                            (template_app (template_hole 9, template_var 4),
                             template_app
                              (template_app
                                (template_hole 11, template_var 2),
                               template_var 1))))),
                     template_app
                      (template_app (template_hole 8, template_var 1),
                       template_var 3))),
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_hole 0,
                           template_app
                            (template_app (template_hole 8, template_var 1),
                             template_var 3))),
                       template_app
                        (template_hole 10,
                         template_app
                          (template_app (template_hole 9, template_var 4),
                           template_app
                            (template_app
                              (template_hole 11, template_var 2),
                             template_var 1))))),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_hole 0,
                           template_app
                            (template_app (template_hole 8, template_var 1),
                             template_var 0))),
                       template_app
                        (template_hole 10,
                         template_app
                          (template_app (template_hole 9, template_var 4),
                           template_app
                            (template_app
                              (template_hole 11, template_var 2),
                             template_var 1))))),
                   template_app
                    (template_app (template_hole 8, template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_hole 0,
                         template_app
                          (template_app (template_hole 8, template_var 1),
                           template_var 0))),
                     template_app
                      (template_hole 10,
                       template_app
                        (template_app (template_hole 9, template_var 4),
                         template_app
                          (template_app (template_hole 11, template_var 2),
                           template_var 1))))),
                 template_var 1)))
           )))]
