Loading theory "Draft.HoArithUtils" (required by "Draft.DependencyTemplates" via "Draft.Dependency" via "Draft.FactoredSystem")
Loading theory "Draft.RelUtils" (required by "Draft.DependencyTemplates" via "Draft.Dependency")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.DependencyTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Stream" (required by "Draft.DependencyTemplates" via "Draft.ExtrEqs")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "Draft.HoArithUtils"
### 0.036s elapsed time, 0.170s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.DependencyTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
### theory "Draft.RelUtils"
### 0.081s elapsed time, 0.349s cpu time, 0.000s GC time
Loading theory "Draft.ListUtils" (required by "Draft.DependencyTemplates" via "Draft.Dependency" via "Draft.FactoredSystem" via "Draft.FSSublist")
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.131s elapsed time, 0.537s cpu time, 0.050s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.DependencyTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "Draft.ListUtils"
### 0.082s elapsed time, 0.313s cpu time, 0.050s GC time
Loading theory "Draft.FSSublist" (required by "Draft.DependencyTemplates" via "Draft.Dependency" via "Draft.FactoredSystem")
### theory "HOL-Library.Set_Algebras"
### 0.225s elapsed time, 0.882s cpu time, 0.050s GC time
Loading theory "Draft.FactoredSystemLib" (required by "Draft.DependencyTemplates" via "Draft.Dependency" via "Draft.FactoredSystem")
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "Draft.FactoredSystemLib"
### 0.175s elapsed time, 0.677s cpu time, 0.175s GC time
Loading theory "Draft.FmapUtils" (required by "Draft.DependencyTemplates" via "Draft.Dependency" via "Draft.FactoredSystem")
### theory "Draft.FSSublist"
### 0.269s elapsed time, 1.051s cpu time, 0.175s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.DependencyTemplates" via "Draft.ExtrEqs")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
### theory "Draft.FmapUtils"
### 0.056s elapsed time, 0.224s cpu time, 0.000s GC time
Loading theory "Draft.FactoredSystem" (required by "Draft.DependencyTemplates" via "Draft.Dependency")
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.877s elapsed time, 3.460s cpu time, 0.397s GC time
0 <= length ?l
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order:
  "(%p. size_list (%p. size (snd p)) (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.021s elapsed time, 3.526s cpu time, 0.887s GC time
Found termination order: "size <*mlex*> {}"
Found termination order:
  "(%p. size_list (%p. size (snd p)) (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "length <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.010s elapsed time, 6.213s cpu time, 1.289s GC time
Loading theory "Draft.Templates" (required by "Draft.DependencyTemplates" via "Draft.ExtrEqs")
### theory "Draft.FactoredSystem"
### 1.624s elapsed time, 4.686s cpu time, 1.115s GC time
Loading theory "Draft.ActionSeqProcess" (required by "Draft.DependencyTemplates" via "Draft.Dependency")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.056s elapsed time, 0.127s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.DependencyTemplates")
Found termination order:
  "(%p. size_list (%p. size (snd p)) (snd p)) <*mlex*> {}"
Found termination order: "size_list (%p. size (snd p)) <*mlex*> {}"
Found termination order: "size_list (%p. size (snd p)) <*mlex*> {}"
Found termination order:
  "(%p. size_list (%p. size (snd p)) (snd (snd p))) <*mlex*> {}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.787s elapsed time, 1.992s cpu time, 0.953s GC time
### theory "Draft.ActionSeqProcess"
### 0.846s elapsed time, 2.098s cpu time, 0.953s GC time
Loading theory "Draft.Dependency" (required by "Draft.DependencyTemplates")
### theory "Draft.Dependency"
### 0.281s elapsed time, 0.281s cpu time, 0.000s GC time
Loading theory "Draft.DependencyTemplates"
val templateLemmas =
   [("Dependency.DEP_REFL", "reflexive (dep ?PROB)",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("Dependency.dep_var_set_self_empty",
     "dep_var_set ?PROB ?vs ?vs ==> ?vs = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Dependency.NEQ_DEP_IMP_IN_DOM_i",
     "[| ?a : ?PROB; ?v : fmdom' (fst ?a) |] ==> ?v : prob_dom ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Dependency.NEQ_DEP_IMP_IN_DOM_ii",
     "[| ?a : ?PROB; ?v : fmdom' (snd ?a) |] ==> ?v : prob_dom ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Dependency.dep_tc_imp_in_dom",
     "[| ?v1.0 ~= ?v2.0; dep_tc ?PROB ?v1.0 ?v2.0 |]
      ==> ?v1.0 : prob_dom ?PROB",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 0),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Dependency.dep_biunion_imp_or_dep",
     "dep_var_set ?PROB ?vs (\<Union> ?S) ==>
      EX vs'. vs' : ?S & dep_var_set ?PROB ?vs vs'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Dependency.dep_sos_imp_mem_dep",
     "dep_var_set ?PROB (\<Union> ?S) ?vs ==>
      EX vs'. vs' : ?S & dep_var_set ?PROB vs' ?vs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Dependency.dep_union_imp_or_dep",
     "dep_var_set ?PROB ?vs (?vs' Un ?vs'') ==>
      dep_var_set ?PROB ?vs ?vs' | dep_var_set ?PROB ?vs ?vs''",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_var 0))
           ))),
    ("Dependency.dep_slist_imp_mem_dep",
     "dep_var_set ?PROB (\<Union> (set ?lvs)) ?vs ==>
      EX vs'. ListMem vs' ?lvs & dep_var_set ?PROB vs' ?vs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 1))),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Dependency.n_bigunion_le_sum_3",
     "ALL vs'. vs' : ?svs --> ~ dep_var_set ?PROB vs' ?vs ==>
      ~ dep_var_set ?PROB (\<Union> ?svs) ?vs",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app (template_hole 0, template_var 2)),
                 template_var 0)
               )
           ))),
    ("Dependency.NEQ_DEP_IMP_IN_DOM",
     "[| ?v ~= ?v'; dep ?PROB ?v ?v' |]
      ==> ?v : prob_dom ?PROB & ?v' : prob_dom ?PROB",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 0),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app (template_hole 0, template_var 0))),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Dependency.not_dep_disj_imp_not_dep",
     "[| ?vs_1.0 Int ?vs_2.0 = {}; ?vs_3.0 <= ?vs_2.0;
         ~ dep_var_set ?PROB ?vs_1.0 ?vs_2.0 |]
      ==> ~ dep_var_set ?PROB ?vs_1.0 ?vs_3.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 3), template_var 2),
          template_hole 3),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 0, template_var 0),
                    template_var 3),
                  template_var 2)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3),
                 template_var 1)
               )
           ))),
    ("Dependency.disj_not_dep_vset_union_imp_or",
     "[| ?a : ?PROB; disjnt ?vs ?vs';
         ~ dep_var_set ?PROB ?vs' ?vs | ~ dep_var_set ?PROB ?vs ?vs';
         varset_action ?a (?vs Un ?vs') |]
      ==> varset_action ?a ?vs | varset_action ?a ?vs'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app
                   (template_app
                     (template_app (template_hole 2, template_var 2),
                      template_var 0),
                    template_var 1))),
              template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app (template_hole 2, template_var 2),
                    template_var 1),
                  template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0))
           )))]:
   (string * thm * template) list
### theory "Draft.DependencyTemplates"
### 0.379s elapsed time, 0.549s cpu time, 0.082s GC time
val it = (): unit
