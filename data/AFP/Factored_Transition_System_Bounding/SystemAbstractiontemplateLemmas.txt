   [("SystemAbstraction.no_effectless_proj",
     "no_effectless_act (as_proj ?as ?vs)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("SystemAbstraction.as_proj_pair", "as_proj [] ?vs = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("SystemAbstraction.snapshot_subset", "snapshot ?PROB ?s <= ?PROB",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_var 1)),
    ("SystemAbstraction.empty_problem_proj_bound",
     "problem_plan_bound (prob_proj ?PROB {}) = 0",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_hole 0)),
    ("SystemAbstraction.PROJ_DOM_IDEMPOT",
     "prob_proj ?PROB (prob_dom ?PROB) = ?PROB",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("SystemAbstraction.dom_prob_proj",
     "prob_dom (prob_proj ?PROB ?vs) <= ?vs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("SystemAbstraction.agree_comm", "agree ?x ?x' = agree ?x' ?x",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("SystemAbstraction.FINITE_ss_proj",
     "finite ?ss ==> finite (ss_proj ?ss ?vs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SystemAbstraction.FINITE_snapshot",
     "finite ?PROB ==> finite (snapshot ?PROB ?s)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SystemAbstraction.finite_imp_finite_prob_proj",
     "finite ?PROB ==> finite (prob_proj ?PROB ?vs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SystemAbstraction.agree_imp_submap",
     "?f1.0 \<subseteq>\<^sub>f ?f2.0 ==> agree ?f1.0 ?f2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("SystemAbstraction.graph_plan_neq_mems_state_set_neq_len",
     "prob_dom (prob_proj ?PROB ?vs) = prob_dom ?PROB Int ?vs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_var 0))),
    ("SystemAbstraction.fmdom'_fmrestrict_set",
     "fmdom' (fmrestrict_set ?X ?f) = ?X Int fmdom' ?f",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("SystemAbstraction.action_proj_idempot",
     "action_proj (action_proj ?a ?vs) ?vs = action_proj ?a ?vs",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("SystemAbstraction.act_dom_proj_eff_subset_act_dom_eff",
     "fmdom' (snd (action_proj ?a ?vs)) <= fmdom' (snd ?a)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 1)))),
    ("SystemAbstraction.every_action_proj_eq_as_proj",
     "list_all (%a. action_proj a ?vs = a) (as_proj ?as ?vs)",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("SystemAbstraction.invariantStateSpace_thm_9",
     "ss_proj ?ss (?vs1.0 Int ?vs2.0) =
      ss_proj (ss_proj ?ss ?vs2.0) ?vs1.0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_var 1))),
    ("SystemAbstraction.prob_proj_comm",
     "prob_proj (prob_proj ?PROB ?vs) ?vs' =
      prob_proj (prob_proj ?PROB ?vs') ?vs",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("SystemAbstraction.prob_proj_inter",
     "prob_proj (prob_proj ?PROB ?vs1.0) ?vs2.0 =
      prob_proj ?PROB (?vs1.0 Int ?vs2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SystemAbstraction.union_proj_absorb",
     "prob_proj (prob_proj ?PROB (?vs Un ?vs')) ?vs = prob_proj ?PROB ?vs",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_var 1),
       template_app
        (template_app (template_hole 1, template_var 2), template_var 1))),
    ("SystemAbstraction.action_proj_inter_i",
     "fmrestrict_set ?V (fmrestrict_set ?W ?f) =
      fmrestrict_set (?V Int ?W) ?f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("SystemAbstraction.action_proj_inter",
     "action_proj (action_proj ?a ?vs1.0) ?vs2.0 =
      action_proj ?a (?vs1.0 Int ?vs2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SystemAbstraction.card_proj_leq",
     "finite ?PROB ==> card (prob_proj ?PROB ?vs) <= card ?PROB",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 1)))),
    ("SystemAbstraction.action_proj_idempot''",
     "prob_dom ?P <= ?vs ==> prob_proj ?P ?vs = ?P",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("SystemAbstraction.dom_proj_snapshot",
     "prob_dom (prob_proj ?PROB (prob_dom (snapshot ?PROB ?s))) =
      prob_dom (snapshot ?PROB ?s)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SystemAbstraction.PROB_DOM_PROJ_DIFF",
     "prob_dom (prob_proj ?PROB (prob_dom ?PROB - ?vs)) =
      prob_dom ?PROB - ?vs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 1)),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_var 0))),
    ("SystemAbstraction.valid_states_snapshot",
     "valid_states (prob_proj ?PROB (prob_dom (snapshot ?PROB ?s))) =
      valid_states (snapshot ?PROB ?s)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SystemAbstraction.exec_rem_effless_as_proj_eq_exec_as_proj",
     "exec_plan ?s (as_proj (rem_effectless_act ?as) ?vs) =
      exec_plan ?s (as_proj ?as ?vs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SystemAbstraction.invariantStateSpace_thm_5",
     "stateSpace ?ss ?domain ==>
      stateSpace (ss_proj ?ss ?vs) (?domain Int ?vs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SystemAbstraction.action_proj_in_prob_proj",
     "?a : ?PROB ==> action_proj ?a ?vs : prob_proj ?PROB ?vs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SystemAbstraction.fmrestrict_agree_monotonous",
     "agree ?f ?g ==> agree (fmrestrict_set ?X ?f) (fmrestrict_set ?X ?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("SystemAbstraction.agree_DRESTRICT",
     "agree ?s1.0 ?s2.0 ==>
      agree (fmrestrict_set ?vs ?s1.0) (fmrestrict_set ?vs ?s2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("SystemAbstraction.nempty_stateSpace_nempty_ss_proj",
     "?ss ~= {} ==> ss_proj ?ss ?vs ~= {}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 1))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_hole 1)
           ))),
    ("SystemAbstraction.two_children_parent_mems_le_finite",
     "?vs <= prob_dom ?PROB ==> prob_dom (prob_proj ?PROB ?vs) = ?vs",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 1))),
    ("SystemAbstraction.dep_proj_dep",
     "dep (prob_proj ?PROB ?vs) ?v ?v' ==> dep ?PROB ?v ?v'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 3),
                    template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0)
           ))),
    ("SystemAbstraction.SUBMAPS_AGREE",
     "?s1.0 \<subseteq>\<^sub>f ?s & ?s2.0 \<subseteq>\<^sub>f ?s ==>
      agree ?s1.0 ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 1, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("SystemAbstraction.action_proj_pair",
     "action_proj (?p, ?e) ?vs =
      (fmrestrict_set ?vs ?p, fmrestrict_set ?vs ?e)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("SystemAbstraction.vset_imp_vset_act_proj_diff",
     "varset_action ?a ?vs ==>
      varset_action (action_proj ?a (prob_dom ?PROB - ?vs')) ?vs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1)),
                   template_var 0))),
             template_var 2)
           ))),
    ("SystemAbstraction.sublist_as_proj_eq_as",
     "subseq ?as' (as_proj ?as ?vs) ==> as_proj ?as' ?vs = ?as'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_var 2))),
    ("SystemAbstraction.fmdom'_fmrestrict_set_fmadd",
     "fmdom' (fmrestrict_set ?X (?f ++\<^sub>f ?g)) =
      ?X Int (fmdom' ?f Un fmdom' ?g)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 4, template_var 1)),
           template_app (template_hole 4, template_var 0))))),
    ("SystemAbstraction.fmrestrict_set_inter_img",
     "fmrestrict_set (?X Int ?Y) ` ?A =
      (fmrestrict_set ?X o fmrestrict_set ?Y) ` ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 2)),
             template_app (template_hole 2, template_var 1))),
         template_var 0))),
    ("SystemAbstraction.prob_proj_idempot",
     "?vs <= ?vs' ==>
      prob_proj ?PROB ?vs = prob_proj (prob_proj ?PROB ?vs') ?vs",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2)))),
    ("SystemAbstraction.subset_proj_absorb",
     "?vs1.0 <= ?vs2.0 ==>
      prob_proj (prob_proj ?PROB ?vs2.0) ?vs1.0 = prob_proj ?PROB ?vs1.0",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("SystemAbstraction.subset_proj_absorb_1_a",
     "?vs1.0 <= ?vs2.0 ==>
      fmrestrict_set ?vs1.0 (fmrestrict_set ?vs2.0 ?f) =
      fmrestrict_set ?vs1.0 ?f",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("SystemAbstraction.subset_proj_absorb_1",
     "?vs1.0 <= ?vs2.0 ==>
      action_proj (action_proj ?a ?vs2.0) ?vs1.0 = action_proj ?a ?vs1.0",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("SystemAbstraction.valid_as_valid_as_proj",
     "?as : valid_plans ?PROB ==>
      as_proj ?as ?vs : valid_plans (prob_proj ?PROB ?vs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("SystemAbstraction.proj_successors_of_valid_are_valid",
     "?s : valid_states ?PROB ==>
      state_successors (prob_proj ?PROB ?vs) ?s <= valid_states ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_app (template_hole 3, template_var 1)))),
    ("SystemAbstraction.graph_plan_not_eq_last_diff_paths",
     "?s : valid_states ?PROB ==>
      fmrestrict_set ?vs ?s : valid_states (prob_proj ?PROB ?vs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("SystemAbstraction.NDEP_PROJ_NDEP",
     "~ dep_var_set ?PROB ?vs ?vs' ==>
      ~ dep_var_set (prob_proj ?PROB ?vs'') ?vs ?vs'",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 2),
                  template_var 1)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 0)),
                   template_var 2),
                 template_var 1)
               )
           ))),
    ("SystemAbstraction.action_proj_idempot'",
     "action_dom (fst ?a) (snd ?a) <= ?vs ==> action_proj ?a ?vs = ?a",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            template_app (template_hole 2, template_var 1)),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("SystemAbstraction.SUBSET_PROJ_DOM_DISJ",
     "?vs <= prob_dom (prob_proj ?PROB (prob_dom ?PROB - ?vs')) ==>
      disjnt ?vs ?vs'",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 3, template_var 1)),
                template_var 0))))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("SystemAbstraction.succ_drest_eq_drest_succ",
     "state_succ (fmrestrict_set ?vs ?s) (action_proj ?a ?vs) =
      fmrestrict_set ?vs (state_succ ?s (action_proj ?a ?vs))",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2)),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("SystemAbstraction.graph_plan_lemma_9",
     "fmrestrict_set ?vs (exec_plan ?s (as_proj ?as ?vs)) =
      exec_plan (fmrestrict_set ?vs ?s) (as_proj ?as ?vs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("SystemAbstraction.PROJ_DEP_IMP_DEP",
     "dep (prob_proj ?PROB (prob_dom ?PROB - ?vs)) ?v ?v' ==>
      dep ?PROB ?v ?v'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 3),
                    template_app
                     (template_app
                       (template_hole 1,
                        template_app (template_hole 0, template_var 3)),
                      template_var 2))),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 1),
             template_var 0)
           ))),
    ("SystemAbstraction.vset_proj_imp_vset",
     "[| varset_action ?a ?vs'; varset_action (action_proj ?a ?vs') ?vs |]
      ==> varset_action ?a ?vs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("SystemAbstraction.dom_subset_ssproj_eq_ss",
     "[| stateSpace ?ss ?domain; ?domain <= ?vs |]
      ==> ss_proj ?ss ?vs = ?ss",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 2))),
    ("SystemAbstraction.subset_dom_stateSpace_ss_proj",
     "[| ?vs1.0 <= ?vs2.0; stateSpace ?ss ?vs2.0 |]
      ==> stateSpace (ss_proj ?ss ?vs1.0) ?vs1.0",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_var 2)
           ))),
    ("SystemAbstraction.agree_FUNION",
     "[| agree ?fm ?fm1.0; agree ?fm ?fm2.0 |]
      ==> agree ?fm (?fm1.0 ++ ?fm2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SystemAbstraction.snapshot_eq_filter",
     "snapshot ?PROB ?s =
      Set.filter (%a. agree (fst a) ?s & agree (snd a) ?s) ?PROB",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 4, t_empty), template_var 1))),
    ("SystemAbstraction.restricted_agree_imp_agree",
     "[| fmdom' ?s2.0 <= ?vs; agree (fmrestrict_set ?vs ?s1.0) ?s2.0 |]
      ==> agree ?s1.0 ?s2.0",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 2),
          template_var 1),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), template_var 2)
           ))),
    ("SystemAbstraction.proj_action_dom_eq_inter",
     "action_dom (fst (action_proj ?a ?vs)) (snd (action_proj ?a ?vs)) =
      action_dom (fst ?a) (snd ?a) Int ?vs",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_app (template_hole 1, template_var 1))),
         template_var 0))),
    ("SystemAbstraction.proj_exec_proj_eq_exec_proj",
     "fmrestrict_set ?vs
       (exec_plan (fmrestrict_set ?vs ?s) (as_proj ?as ?vs)) =
      exec_plan (fmrestrict_set ?vs ?s) (as_proj ?as ?vs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("SystemAbstraction.proj_exec_proj_eq_exec_proj'",
     "fmrestrict_set ?vs
       (exec_plan (fmrestrict_set ?vs ?s) (as_proj ?as ?vs)) =
      fmrestrict_set ?vs (exec_plan ?s (as_proj ?as ?vs))",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("SystemAbstraction.agree_fm_list_union",
     "ALL fm'. ListMem fm' ?fmList --> agree ?fm fm' ==>
      agree ?fm (foldr (++) ?fmList fmempty)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1),
               template_hole 0))
           ))),
    ("SystemAbstraction.as_proj_eq_filter_action_proj",
     "as_proj ?as ?vs =
      filter (%a. fmdom' (snd a) ~= {}) (map (%a. action_proj a ?vs) ?as)",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 7, t_empty),
         template_app
          (template_app (template_hole 1, t_empty), template_var 1)))),
    ("SystemAbstraction.proj_successors",
     "fmrestrict_set ?vs ` state_successors (prob_proj ?PROB ?vs) ?s
      <= state_successors (prob_proj ?PROB ?vs) (fmrestrict_set ?vs ?s)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("SystemAbstraction.graph_plan_lemma_1",
     "sat_precond_as ?s ?as ==>
      exec_plan (fmrestrict_set ?vs ?s) (as_proj ?as ?vs) =
      fmrestrict_set ?vs (exec_plan ?s ?as)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1))))),
    ("SystemAbstraction.drest_exec_as_proj_eq_drest_exec",
     "sat_precond_as ?s ?as ==>
      fmrestrict_set ?vs (exec_plan ?s (as_proj ?as ?vs)) =
      fmrestrict_set ?vs (exec_plan ?s ?as)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1))))),
    ("SystemAbstraction.empty_eff_not_in_as_proj",
     "fmdom' (fmrestrict_set ?vs (snd ?a)) = {} ==>
      as_proj (?a # ?as) ?vs = as_proj ?as ?vs",
     template_implication
      ([template_equation
         (template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))),
          template_hole 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("SystemAbstraction.empty_eff_not_in_as_proj_2",
     "fmdom' (snd (action_proj ?a ?vs)) = {} ==>
      as_proj ?as ?vs = as_proj (?a # ?as) ?vs",
     template_implication
      ([template_equation
         (template_app
           (template_hole 6,
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))),
          template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 1)))),
    ("SystemAbstraction.DISJ_EFF_DISJ_PROJ_EFF",
     "fmdom' (snd ?a) Int ?s = {} ==>
      fmdom' (snd (action_proj ?a ?vs)) Int ?s = {}",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2))),
            template_var 1),
          template_hole 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0)))),
           template_var 1),
         template_hole 1))),
    ("SystemAbstraction.PROJ_DOM_PRE_EFF_SUBSET_DOM",
     "fmdom' (fst (action_proj ?a ?vs)) <= fmdom' (fst ?a) &
      fmdom' (snd (action_proj ?a ?vs)) <= fmdom' (snd ?a)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_var 0)))),
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 1)))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 0)))),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1))))
         )),
    ("SystemAbstraction.proj_state_succ",
     "fst ?a \<subseteq>\<^sub>f ?s ==>
      state_succ (fmrestrict_set ?vs ?s) (action_proj ?a ?vs) =
      fmrestrict_set ?vs (state_succ ?s ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2))))),
    ("SystemAbstraction.disj_proj_proj_eq_proj",
     "?vs Int ?vs' = {} ==>
      prob_proj (prob_proj ?PROB (prob_dom ?PROB - ?vs')) ?vs =
      prob_proj ?PROB ?vs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_var 1))),
           template_var 2),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 2)))),
    ("SystemAbstraction.dom_eff_subset_imp_dom_succ_eq_proj",
     "fmdom' (snd ?h) <= fmdom' ?s ==>
      fmdom' (state_succ ?s (action_proj ?h ?vs)) =
      fmdom' (state_succ ?s ?h)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 4,
            template_app (template_hole 3, template_var 2)),
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2))))),
    ("SystemAbstraction.sat_precond_as_proj",
     "[| sat_precond_as ?s ?as;
         fmrestrict_set ?vs ?s = fmrestrict_set ?vs ?s' |]
      ==> sat_precond_as ?s' (as_proj ?as ?vs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 3),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("SystemAbstraction.n_replace_proj_le_n_as_2",
     "[| ?vs <= ?vs'; varset_action ?a ?vs' |]
      ==> varset_action (action_proj ?a ?vs') ?vs = varset_action ?a ?vs",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 2)))),
    ("SystemAbstraction.valid_proj_action_valid_succ",
     "[| ?h : prob_proj ?PROB ?vs; ?s : valid_states ?PROB |]
      ==> state_succ ?s ?h : valid_states ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3)),
             template_app (template_hole 1, template_var 2))
           ))),
    ("SystemAbstraction.empty_eff_drest_no_eff",
     "fmdom' (fmrestrict_set ?vs (snd ?a)) = {} ==>
      fmrestrict_set ?vs (state_succ ?s (action_proj ?a ?vs)) =
      fmrestrict_set ?vs ?s",
     template_implication
      ([template_equation
         (template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))),
          template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_var 0)))),
    ("SystemAbstraction.state_in_successor_proj_in_state_in_successor",
     "?s' : state_successors (prob_proj ?PROB ?vs) ?s ==>
      fmrestrict_set ?vs ?s'
      : state_successors (prob_proj ?PROB ?vs) (fmrestrict_set ?vs ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("SystemAbstraction.exec_as_proj_valid",
     "[| ?s : valid_states ?PROB; ?as : valid_plans ?PROB |]
      ==> exec_plan ?s (as_proj ?as ?vs) : valid_states ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_app (template_hole 4, template_var 2))
           ))),
    ("SystemAbstraction.proj_FDOM_eff_subset_FDOM_valid_states",
     "[| (?p, ?e) : prob_proj ?PROB ?vs; ?s : valid_states ?PROB |]
      ==> fmdom' ?e <= fmdom' ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 2))
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 3),
         template_app (template_hole 0, template_var 0)))),
    ("SystemAbstraction.snapshot_pair",
     "snapshot ?PROB ?s =
      {(p, e). (p, e) : ?PROB & agree p ?s & agree e ?s}",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_hole 5, template_app (template_hole 4, t_empty)))),
    ("SystemAbstraction.sat_precond_drest_as_proj",
     "[| sat_precond_as ?s ?as;
         fmrestrict_set ?vs ?s = fmrestrict_set ?vs ?s' |]
      ==> sat_precond_as (fmrestrict_set ?vs ?s') (as_proj ?as ?vs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 3),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("SystemAbstraction.exec_as_proj_eq_exec_as",
     "[| ?as : valid_plans ?PROB; prob_dom ?PROB <= ?vs |]
      ==> exec_plan ?s (as_proj ?as ?vs) = exec_plan ?s ?as",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app (template_hole 5, template_var 2))
            ),
        template_inequation
         (less_equals, template_app (template_hole 3, template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 3)))),
    ("SystemAbstraction.as_proj_eq_as",
     "[| no_effectless_act ?as; ?as : valid_plans ?PROB;
         prob_dom ?PROB <= ?vs |]
      ==> as_proj ?as ?vs = ?as",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 2))),
    ("SystemAbstraction.SUBMAP_FUNION_DRESTRICT_i",
     "?v : ?vsa ==>
      fmlookup (fmrestrict_set ((?vsa Un ?vsb) Int ?vs) ?f) ?v =
      fmlookup (fmrestrict_set (?vsa Int ?vs) ?f) ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 2)),
                   template_var 1)),
               template_var 0)),
           template_var 4),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1)),
               template_var 0)),
           template_var 4)))),
    ("SystemAbstraction.agree_state_succ_idempot",
     "[| ?a : ?PROB; ?s : valid_states ?PROB; agree (snd ?a) ?s |]
      ==> state_succ ?s ?a = ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_var 0))),
    ("SystemAbstraction.action_agree_valid_in_snapshot",
     "[| ?a : ?PROB; agree (fst ?a) ?s; agree (snd ?a) ?s |]
      ==> ?a : snapshot ?PROB ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 1, template_var 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SystemAbstraction.exec_drest",
     "fst ?a \<subseteq>\<^sub>f ?s ==>
      exec_plan (fmrestrict_set ?vs (state_succ ?s ?a)) ?as =
      exec_plan (fmrestrict_set ?vs ?s) (action_proj ?a ?vs # ?as)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 3)),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 3))),
           template_var 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 2)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_var 0))))),
    ("SystemAbstraction.exec_drest_cons_proj_eq_succ",
     "fst ?a \<subseteq>\<^sub>f ?s ==>
      exec_plan (fmrestrict_set ?vs ?s) (action_proj ?a ?vs # ?as) =
      exec_plan (fmrestrict_set ?vs (state_succ ?s ?a)) ?as",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 3)),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 2)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3))),
           template_var 0)))),
    ("SystemAbstraction.not_empty_eff_in_as_proj",
     "fmdom' (fmrestrict_set ?vs (snd ?a)) ~= {} ==>
      as_proj (?a # ?as) ?vs = action_proj ?a ?vs # as_proj ?as ?vs",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_app (template_hole 5, template_var 1))),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 2))))),
    ("SystemAbstraction.DRESTRICT_EQ_AGREE",
     "[| fmdom' ?s2.0 <= ?vs2.0; fmdom' ?s1.0 <= ?vs1.0 |]
      ==> fmrestrict_set ?vs2.0 ?s1.0 = fmrestrict_set ?vs1.0 ?s2.0 -->
          agree ?s1.0 ?s2.0",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 3),
          template_var 2),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 3))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3))
           ))),
    ("SystemAbstraction.agree_DRESTRICT_2",
     "[| fmdom' ?s1.0 <= ?vs1.0; fmdom' ?s2.0 <= ?vs2.0;
         agree ?s1.0 ?s2.0 |]
      ==> agree (fmrestrict_set ?vs2.0 ?s1.0)
           (fmrestrict_set ?vs1.0 ?s2.0)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 3),
          template_var 2),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("SystemAbstraction.prob_proj_dom_diff_eq_prob_proj_prob_proj_dom_diff",
     "prob_proj ?PROB (prob_dom ?PROB - (?vs Un ?vs')) =
      prob_proj (prob_proj ?PROB (prob_dom ?PROB - ?vs))
       (prob_dom (prob_proj ?PROB (prob_dom ?PROB - ?vs)) - ?vs')",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 2)),
               template_var 1))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 2)),
                   template_var 1)))),
           template_var 0)))),
    ("SystemAbstraction.valid_proj_neq_succ_restricted_neq_succ",
     "[| ?x' : prob_proj ?PROB ?vs; state_succ ?s ?x' ~= ?s |]
      ==> fmrestrict_set ?vs (state_succ ?s ?x') ~= fmrestrict_set ?vs ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 1, template_var 0),
                template_var 3),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SystemAbstraction.drest_proj_succ_eq_drest_succ",
     "[| fst ?h \<subseteq>\<^sub>f ?s; fmdom' (snd ?h) <= fmdom' ?s |]
      ==> fmrestrict_set ?vs (state_succ ?s (action_proj ?h ?vs)) =
          fmrestrict_set ?vs (state_succ ?s ?h)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 2)),
              template_var 1)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 5,
            template_app (template_hole 4, template_var 2)),
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2))))),
    ("SystemAbstraction.action_proj_disj_diff",
     "[| action_dom (fst ?a) (snd ?a) <= ?vs1.0; ?vs2.0 Int ?vs3.0 = {} |]
      ==> action_proj (action_proj ?a (?vs1.0 - ?vs2.0)) ?vs3.0 =
          action_proj ?a ?vs3.0",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 3)),
            template_app (template_hole 6, template_var 3)),
          template_var 2),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 1), template_var 0),
          template_hole 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1))),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_var 0)))),
    ("SystemAbstraction.DISJ_PROJ_NDEP_IMP_NDEP",
     "[| disjnt ?vs ?vs''; disjnt ?vs ?vs';
         ~ dep_var_set (prob_proj ?PROB (prob_dom ?PROB - ?vs)) ?vs'
            ?vs'' |]
      ==> ~ dep_var_set ?PROB ?vs' ?vs''",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_hole 3,
                      template_app
                       (template_app (template_hole 2, template_var 0),
                        template_app
                         (template_app
                           (template_hole 1,
                            template_app (template_hole 0, template_var 0)),
                          template_var 3))),
                    template_var 1),
                  template_var 2)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 1),
                 template_var 2)
               )
           ))),
    ("SystemAbstraction.NOT_VS_DEP_IMP_DEP_PROJ",
     "[| ?v ~: ?vs; ?v' ~: ?vs; dep ?PROB ?v ?v' |]
      ==> dep (prob_proj ?PROB (prob_dom ?PROB - ?vs)) ?v ?v'",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 2)
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 0),
                template_var 3),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 0)),
                     template_var 2))),
               template_var 3),
             template_var 1)
           ))),
    ("SystemAbstraction.as_proj_pair",
     "as_proj ((?p, ?e) # ?as) ?vs =
      (if fmdom' (fmrestrict_set ?vs ?e) ~= {}
       then action_proj (?p, ?e) ?vs # as_proj ?as ?vs
       else as_proj ?as ?vs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 2, template_var 0),
                           template_var 2))),
                     template_hole 1))),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 0,
                       template_app
                        (template_app (template_hole 7, template_var 3),
                         template_var 2)),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 9, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 9, template_var 1),
               template_var 0))
           ))),
    ("SystemAbstraction.state_succ_proj_eq_state_succ",
     "[| varset_action ?a ?vs; fst ?a \<subseteq>\<^sub>f ?s;
         fmdom' (snd ?a) <= fmdom' ?s |]
      ==> state_succ ?s (action_proj ?a ?vs) = state_succ ?s ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 2)),
              template_var 0)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 4,
            template_app (template_hole 3, template_var 2)),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("SystemAbstraction.state_succ_fixpoint_if",
     "[| ?a : ?PROB; ?s : valid_states ?PROB; fst ?a \<subseteq>\<^sub>f ?s;
         agree (snd ?a) ?s |]
      ==> state_succ ?s ?a = ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_var 0))),
    ("SystemAbstraction.as_mem_agree_valid_in_snapshot",
     "[| ALL a. ListMem a ?as --> agree (fst a) ?s & agree (snd a) ?s;
         ?as : valid_plans ?PROB |]
      ==> ?as : valid_plans (snapshot ?PROB ?s)",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("SystemAbstraction.IN_DISJ_DEP_IMP_DEP_DIFF",
     "[| ?v : ?vs'; ?v' : ?vs'; disjnt ?vs ?vs' |]
      ==> dep ?PROB ?v ?v' -->
          dep (prob_proj ?PROB (prob_dom ?PROB - ?vs)) ?v ?v'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 4),
                 template_var 2)),
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app (template_hole 0, template_var 0)),
                       template_var 1))),
                 template_var 4),
               template_var 2))
           ))),
    ("SystemAbstraction.agree_exec_idempot",
     "[| ?as : valid_plans ?PROB; ?s : valid_states ?PROB;
         ALL a. ListMem a ?as --> agree (snd a) ?s |]
      ==> exec_plan ?s ?as = ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app (template_hole 9, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app (template_hole 7, template_var 1))
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_var 0))),
    ("SystemAbstraction.agree_restrict_state_succ_idempot",
     "[| ?a : ?PROB; ?s : valid_states ?PROB;
         agree (fmrestrict_set ?vs (snd ?a)) (fmrestrict_set ?vs ?s) |]
      ==> fmrestrict_set ?vs (state_succ ?s ?a) = fmrestrict_set ?vs ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app (template_hole 2, template_var 3))),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_var 1)))),
    ("SystemAbstraction.NOT_IN_PRE_EFF_NOT_IN_PRE_EFF_PROJ",
     "(?v ~: fmdom' (fst ?a) --> ?v ~: fmdom' (fst (action_proj ?a ?vs))) &
      (?v ~: fmdom' (snd ?a) --> ?v ~: fmdom' (snd (action_proj ?a ?vs)))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_var 1))))),
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_var 1),
                         template_var 0))))))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1))))),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_var 0)))))))
         )),
    ("SystemAbstraction.fmrestrict_agree",
     "[| agree (fmrestrict_set ?X ?f) (fmrestrict_set ?X ?g);
         ?x : ?X Int fmdom' ?f Int fmdom' ?g |]
      ==> fmlookup (fmrestrict_set ?X ?f) ?x =
          fmlookup (fmrestrict_set ?X ?g) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_app (template_hole 2, template_var 2))),
                template_app (template_hole 2, template_var 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 5, template_var 3),
               template_var 2)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 5, template_var 3),
               template_var 1)),
           template_var 0)))),
    ("SystemAbstraction.neq_vs_neq_ss_proj",
     "[| ?ss ~= {}; stateSpace ?ss ?vs; ?vs1.0 <= ?vs; ?vs2.0 <= ?vs;
         ?vs1.0 ~= ?vs2.0 |]
      ==> ss_proj ?ss ?vs1.0 ~= ss_proj ?ss ?vs2.0",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_inequation (less_equals, template_var 0, template_var 2),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("SystemAbstraction.append_eq_as_proj",
     "?as1.0 @ ?as2.0 @ ?as3.0 = as_proj ?p ?vs ==>
      EX p_1 p_2 p_3.
         p_1 @ p_2 @ p_3 = ?p &
         ?as2.0 = as_proj p_2 ?vs & ?as1.0 = as_proj p_1 ?vs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 4),
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("SystemAbstraction.UNION_FUNION_DRESTRICT_SUBMAP",
     "[| ?vs1.0 <= fmdom' ?fma; ?vs2.0 <= fmdom' ?fmb; agree ?fma ?fmb;
         fmrestrict_set ?vs1.0 ?fma \<subseteq>\<^sub>f ?s;
         fmrestrict_set ?vs2.0 ?fmb \<subseteq>\<^sub>f ?s |]
      ==> fmrestrict_set (?vs1.0 Un ?vs2.0)
           (?fma ++ ?fmb) \<subseteq>\<^sub>f
          ?s",
     template_implication
      ([template_inequation
         (less_equals, template_var 4,
          template_app (template_hole 5, template_var 3)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1))),
             template_var 0)
           ))),
    ("SystemAbstraction.NOT_VS_IN_DOM_PROJ_PRE_EFF",
     "[| ?v ~: ?vs; ?a : ?PROB |]
      ==> (?v : fmdom' (fst ?a) -->
           ?v : fmdom' (fst (action_proj ?a (prob_dom ?PROB - ?vs)))) &
          (?v : fmdom' (snd ?a) -->
           ?v : fmdom' (snd (action_proj ?a (prob_dom ?PROB - ?vs))))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_var 2)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 10, template_var 3),
                     template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_var 1)))),
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_var 1),
                         template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_hole 2, template_var 0)),
                           template_var 2))))))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1)))),
               template_app
                (template_app (template_hole 10, template_var 3),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 4, template_var 1),
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app (template_hole 2, template_var 0)),
                         template_var 2)))))))
           ))),
    ("SystemAbstraction.agree_restrict_exec_idempot",
     "[| ?as : valid_plans ?PROB; ?s' : valid_states ?PROB;
         ?s : valid_states ?PROB;
         ALL a.
            ListMem a ?as -->
            agree (fmrestrict_set ?vs (snd a)) (fmrestrict_set ?vs ?s);
         fmrestrict_set ?vs ?s' = fmrestrict_set ?vs ?s |]
      ==> fmrestrict_set ?vs (exec_plan ?s' ?as) = fmrestrict_set ?vs ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 4),
              template_app (template_hole 10, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 8, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app (template_hole 8, template_var 3))
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 0), template_var 2),
          template_app
           (template_app (template_hole 3, template_var 0),
            template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 4)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_var 1)))),
    ("SystemAbstraction.PROJ_NDEP_TC_IMP_NDEP_TC_OR",
     "~ (dep (prob_proj ?PROB (prob_dom ?PROB - ?vs)))^++ ?v ?v' ==>
      ~ (dep ?PROB)^++ ?v ?v' |
      (EX v''. v'' : ?vs & (dep ?PROB)^++ ?v v'' & (dep ?PROB)^++ v'' ?v')",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 8, t_empty),
                    template_var 1),
                  template_var 0)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_app (template_hole 8, t_empty),
                     template_var 1),
                   template_var 0))),
             template_app (template_hole 2, t_empty))
           ))),
    ("SystemAbstraction.SUBMAP_FUNION_DRESTRICT'",
     "[| agree ?fma ?fmb; ?vsa <= fmdom' ?fma; ?vsb <= fmdom' ?fmb;
         fmrestrict_set ?vsa ?fm = fmrestrict_set (?vsa Int ?vs) ?fma;
         fmrestrict_set ?vsb ?fm = fmrestrict_set (?vsb Int ?vs) ?fmb |]
      ==> fmrestrict_set (?vsa Un ?vsb) ?fm =
          fmrestrict_set ((?vsa Un ?vsb) Int ?vs) (?fma ++ ?fmb)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4)
            ),
        template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 5, template_var 5)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 5, template_var 4)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 1),
          template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 0)),
            template_var 5)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 0)),
            template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2)),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 5),
             template_var 4))))),
    ("SystemAbstraction.agree_restrict_exec_idempot_pair",
     "[| ?as : valid_plans ?PROB; ?s' : valid_states ?PROB;
         ?s : valid_states ?PROB;
         ALL p e.
            ListMem (p, e) ?as -->
            agree (fmrestrict_set ?vs e) (fmrestrict_set ?vs ?s);
         fmrestrict_set ?vs ?s' = fmrestrict_set ?vs ?s |]
      ==> fmrestrict_set ?vs (exec_plan ?s' ?as) = fmrestrict_set ?vs ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 4),
              template_app (template_hole 10, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 8, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app (template_hole 8, template_var 3))
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 0), template_var 2),
          template_app
           (template_app (template_hole 2, template_var 0),
            template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 4)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 1)))),
    ("SystemAbstraction.problem_plan_bound_works_proj",
     "[| finite ?PROB; ?s : valid_states ?PROB; ?as : valid_plans ?PROB;
         sat_precond_as ?s ?as |]
      ==> EX as'.
             exec_plan (fmrestrict_set ?vs ?s) as' =
             exec_plan (fmrestrict_set ?vs ?s) (as_proj ?as ?vs) &
             length as' <= problem_plan_bound (prob_proj ?PROB ?vs) &
             subseq as' (as_proj ?as ?vs) &
             sat_precond_as ?s as' & no_effectless_act as'",
     template_implication
      ([template_predicate
         (template_app (template_hole 18, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 2),
              template_app (template_hole 16, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_app (template_hole 14, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 12, t_empty))))]
