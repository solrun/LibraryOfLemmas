   [("FactoredSystem.state_set_finite", "finite (state_set ?X)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("FactoredSystem.empty_plan_is_valid", "[] : valid_plans ?PROB",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("FactoredSystem.system_needed_asses_submap",
     "system_needed_asses ?PROB ?s \<subseteq>\<^sub>f ?s",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 0)
         )),
    ("FactoredSystem.NIL_NOTIN_stateset", "[] ~: state_set ?X",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("FactoredSystem.reachable_s_non_empty", "reachable_s ?PROB ?s ~= {}",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_hole 0)
         )),
    ("FactoredSystem.empty_state_list_lemma", "[] ~= state_list ?s ?as",
     template_negation
      (
         template_equation
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("FactoredSystem.state_set_card", "card (state_set ?X) = length ?X",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("FactoredSystem.state_list_length_non_zero",
     "0 ~= length (state_list ?s ?as)",
     template_negation
      (
         template_equation
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("FactoredSystem.valid_as_submap_init_submap_exec_i",
     "fmdom' ?s <= fmdom' (state_succ ?s ?a)",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("FactoredSystem.FINITE_prob_dom",
     "finite ?PROB ==> finite (prob_dom ?PROB)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("FactoredSystem.FINITE_valid_states",
     "finite ?PROB ==> finite (valid_states ?PROB)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("FactoredSystem.empty_prob_dom_finite",
     "prob_dom ?PROB = {} ==> finite ?PROB",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 0), template_hole 1)],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("FactoredSystem.state_list_length_lemma",
     "length ?as = length (state_list ?s ?as) - 1",
     template_equation
      (template_app (template_hole 4, template_var 1),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1))),
         template_hole 0))),
    ("FactoredSystem.card_state_set",
     "Suc (length ?as) = card (state_set (state_list ?s ?as))",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 1)),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("FactoredSystem.state_list_length_lemma_2",
     "length (state_list ?s ?as) = length ?as + 1",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("FactoredSystem.state_set_card_i", "[?a] ~: (#) ?a ` state_set ?X",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_hole 2)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 3, template_var 1)),
                 template_app (template_hole 0, template_var 0)))
             )
         )),
    ("FactoredSystem.state_set_card_ii",
     "card ((#) ?a ` state_set ?X) = card (state_set ?X)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_hole 3, template_app (template_hole 0, template_var 0)))),
    ("FactoredSystem.valid_states_nempty",
     "finite ?PROB ==> EX s. s : valid_states ?PROB",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("FactoredSystem.as_needed_asses_submap_exec_viii'",
     "?f \<subseteq>\<^sub>f ?g ==> fmdom' ?f <= fmdom' ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("FactoredSystem.prob_subset_dom_subset",
     "?PROB1.0 <= ?PROB2.0 ==> prob_dom ?PROB1.0 <= prob_dom ?PROB2.0",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("FactoredSystem.nempty_sl_in_state_set",
     "?sl ~= [] ==> ?sl : state_set ?sl",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 0))
           ))),
    ("FactoredSystem.state_set_card_iii",
     "card (state_set (?a # ?X)) = 1 + card (state_set ?X)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 0))))),
    ("FactoredSystem.exec_plan_Append",
     "exec_plan ?s (?as_a @ ?as_b) = exec_plan (exec_plan ?s ?as_a) ?as_b",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0))),
    ("FactoredSystem.FDOM_state_succ_subset",
     "fmdom' (state_succ ?s ?a) <= fmdom' ?s Un fmdom' (snd ?a)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 1)),
         template_app
          (template_hole 3,
           template_app (template_hole 0, template_var 0))))),
    ("FactoredSystem.FINITE_states",
     "finite ?X ==> finite {s. fmdom' s = ?X}",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 3, template_app (template_hole 2, t_empty))
           ))),
    ("FactoredSystem.FDOM_pre_subset_prob_dom_pair",
     "?a : ?PROB ==> fmdom' (fst ?a) <= prob_dom ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("FactoredSystem.FDOM_eff_subset_prob_dom_pair",
     "?a : ?PROB ==> fmdom' (snd ?a) <= prob_dom ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("FactoredSystem.LENGTH_state_set",
     "?e : state_set ?X ==> length ?e <= length ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("FactoredSystem.lemma_1_reachability_s_i",
     "?s : valid_states ?PROB ==> ?s : reachable_s ?PROB ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("FactoredSystem.valid_plan_valid_head",
     "?h # ?as : valid_plans ?PROB ==> ?h : ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("FactoredSystem.submap_imp_state_succ_submap_b",
     "?s1.0 \<subseteq>\<^sub>f ?s2.0 ==>
      ?s0.0 ++ ?s1.0 \<subseteq>\<^sub>f ?s0.0 ++ ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("FactoredSystem.action_needed_asses_submap_sys_needed_asses",
     "?a : ?PROB ==>
      action_needed_asses ?a ?s \<subseteq>\<^sub>f
      system_needed_asses ?PROB ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("FactoredSystem.action_needed_vars_subset_sys_needed_vars_subset",
     "?a : ?PROB ==>
      action_needed_vars ?a ?s <= system_needed_vars ?PROB ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("FactoredSystem.valid_filter_valid_as",
     "?as : valid_plans ?PROB ==> filter ?P ?as : valid_plans ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app (template_hole 1, template_var 1))
           ))),
    ("FactoredSystem.reachable_s_finite_thm_1",
     "?s : valid_states ?PROB ==>
      reachable_s ?PROB ?s <= valid_states ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("FactoredSystem.empty_eff_exec_eq",
     "fmdom' (snd ?a) = {} ==> state_succ ?s ?a = ?s",
     template_implication
      ([template_equation
         (template_app
           (template_hole 4,
            template_app (template_hole 3, template_var 1)),
          template_hole 2)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 0))),
    ("FactoredSystem.FDOM_pre_subset_prob_dom",
     "(?p, ?e) : ?PROB ==> fmdom' ?p <= prob_dom ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 2),
         template_app (template_hole 0, template_var 0)))),
    ("FactoredSystem.FDOM_eff_subset_prob_dom",
     "(?p, ?e) : ?PROB ==> fmdom' ?e <= prob_dom ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("FactoredSystem.valid_append_valid_pref",
     "?as1.0 @ ?as2.0 : valid_plans ?PROB ==> ?as1.0 : valid_plans ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 0, template_var 0))
           ))),
    ("FactoredSystem.valid_append_valid_suff",
     "?as1.0 @ ?as2.0 : valid_plans ?PROB ==> ?as2.0 : valid_plans ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("FactoredSystem.valid_plan_valid_tail",
     "?h # ?as : valid_plans ?PROB ==> ?as : valid_plans ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("FactoredSystem.state_set_thm",
     "(?s1.0 : state_set ?s2.0) = (prefix ?s1.0 ?s2.0 & ?s1.0 ~= [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)))
           ))),
    ("FactoredSystem.exec_as_proj_valid_2",
     "?a : ?PROB ==> action_dom (fst ?a) (snd ?a) <= prob_dom ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("FactoredSystem.empty_list_nin_state_set",
     "?h # ?slist : state_set (state_list ?s ?as) ==> ?h = ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)))
            )],
       template_equation (template_var 3, template_var 1))),
    ("FactoredSystem.submap_imp_state_succ_submap_a",
     "[| ?s1.0 \<subseteq>\<^sub>f ?s2.0; ?s2.0 \<subseteq>\<^sub>f ?s3.0 |]
      ==> ?s1.0 \<subseteq>\<^sub>f ?s3.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("FactoredSystem.FINITE_SS",
     "[| ?ss ~= {}; stateSpace ?ss ?domain |] ==> finite ?ss",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("FactoredSystem.state_succ_pair",
     "state_succ ?s (?p, ?e) =
      (if ?p \<subseteq>\<^sub>f ?s then ?e ++ ?s else ?s)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_var 2))),
    ("FactoredSystem.system_needed_asses_include_action_needed_asses_i",
     "?A <= ?B ==>
      fmrestrict_set ?A (fmrestrict_set ?B ?f) = fmrestrict_set ?A ?f",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("FactoredSystem.system_needed_asses_include_action_needed_asses",
     "?a : ?PROB ==>
      action_needed_asses ?a (system_needed_asses ?PROB ?s) =
      action_needed_asses ?a ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("FactoredSystem.empty_prob_dom_single_val_state",
     "prob_dom ?PROB = {} ==> EX s. valid_states ?PROB = {s}",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 0), template_hole 5)],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("FactoredSystem.possible_states_set_ii_a",
     "?v : fmdom' ?s ==> fmdom' (fmupd ?v ?x ?s) = fmdom' ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)),
         template_app (template_hole 2, template_var 1)))),
    ("FactoredSystem.reachable_s_finite_thm",
     "[| finite ?PROB; ?s : valid_states ?PROB |]
      ==> finite (reachable_s ?PROB ?s)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("FactoredSystem.valid_plan_mems",
     "[| ?as : valid_plans ?PROB; ListMem ?a ?as |] ==> ?a : ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("FactoredSystem.as_needed_asses_submap_exec_ix",
     "(?f \<subseteq>\<^sub>f ?g) =
      (ALL v:fmdom' ?f. fmlookup ?f v = fmlookup ?g v)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         t_empty))),
    ("FactoredSystem.CARD_valid_states",
     "finite ?PROB ==>
      card (valid_states ?PROB) = 2 ^ card (prob_dom ?PROB)",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_equation
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 0)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2))),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("FactoredSystem.as_needed_asses_submap_exec_xii",
     "?v : fmdom' ?f ==> fmlookup (?f ++ ?g) ?v = fmlookup ?f ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("FactoredSystem.as_works_from_system_needed_asses",
     "?as : valid_plans ?PROB ==>
      exec_plan (system_needed_asses ?PROB ?s) ?as \<subseteq>\<^sub>f
      exec_plan ?s ?as",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)),
                 template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2))
           ))),
    ("FactoredSystem.reachable_s_finite_thm_1_a",
     "?s : valid_states ?PROB ==>
      ALL l:reachable_s ?PROB ?s. l : valid_states ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             t_empty)
           ))),
    ("FactoredSystem.FDOM_state_succ",
     "fmdom' (snd ?a) <= fmdom' ?s ==>
      fmdom' (state_succ ?s ?a) = fmdom' ?s",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 1)),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("FactoredSystem.as_needed_asses_submap_exec_v",
     "[| ?v : fmdom' ?f; ?f \<subseteq>\<^sub>f ?g |] ==> ?v : fmdom' ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 0))
           ))),
    ("FactoredSystem.card_state_set_cons",
     "card (state_set (state_list ?s (?h # ?as))) =
      Suc (card (state_set (state_list (state_succ ?s ?h) ?as)))",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)))),
       template_app
        (template_hole 1,
         template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_var 0)))))),
    ("FactoredSystem.as_needed_asses_submap_exec_viii",
     "?f \<subseteq>\<^sub>f ?g ==>
      ALL v:fmdom' ?f. fmlookup ?f v = fmlookup ?g v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             t_empty)
           ))),
    ("FactoredSystem.system_needed_asses_include_action_needed_asses_1",
     "?a : ?PROB ==>
      action_needed_vars ?a
       (fmrestrict_set (system_needed_vars ?PROB ?s) ?s) =
      action_needed_vars ?a ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("FactoredSystem.exec_plan_fdom_subset",
     "?as : valid_plans ?PROB ==>
      fmdom' (exec_plan ?s ?as) <= fmdom' ?s Un prob_dom ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 0)),
           template_app (template_hole 0, template_var 1))))),
    ("FactoredSystem.as_needed_asses_submap_exec_vii",
     "ALL v:fmdom' ?f. fmlookup ?f v = fmlookup ?g v ==>
      ?f \<subseteq>\<^sub>f ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("FactoredSystem.lemma_2_reachability_s_i",
     "[| finite ?t; card ?t < card ?s |] ==> ~ FactoredSystem.inj ?f ?s ?t",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_inequation
         (less_than, template_app (template_hole 3, template_var 2),
          template_app (template_hole 2, template_var 1))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1),
                 template_var 2)
               )
           ))),
    ("FactoredSystem.card_reachable_s_non_zero",
     "[| finite ?PROB; ?s : valid_states ?PROB |]
      ==> 0 < card (reachable_s ?PROB ?s)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            )],
       template_inequation
        (less_than, template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("FactoredSystem.sublist_valid_is_valid",
     "[| ?as : valid_plans ?PROB; subseq ?as' ?as |]
      ==> ?as' : valid_plans ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_hole 0),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app (template_hole 2, template_var 1))
           ))),
    ("FactoredSystem.sublist_valid_plan__alt",
     "[| ?as1.0 : valid_plans ?PROB; subseq ?as2.0 ?as1.0 |]
      ==> ?as2.0 : valid_plans ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_hole 0),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app (template_hole 2, template_var 1))
           ))),
    ("FactoredSystem.sublist_valid_plan",
     "[| subseq ?as' ?as; ?as : valid_plans ?PROB |]
      ==> ?as' : valid_plans ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 0))
           ))),
    ("FactoredSystem.empty_prob_dom",
     "prob_dom ?PROB = {} ==> ?PROB = {(fmempty, fmempty)} | ?PROB = {}",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 0), template_hole 7)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_hole 1)),
                   template_hole 0))),
             template_app
              (template_app (template_hole 5, template_var 0),
               template_hole 0))
           ))),
    ("FactoredSystem.lemma_temp",
     "?x : state_set (state_list ?s ?as) ==>
      length ?x < length (?h # state_list ?s ?as)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)))
            )],
       template_inequation
        (less_than, template_app (template_hole 1, template_var 3),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)))))),
    ("FactoredSystem.fmdom'_fmsubset_restrict_set",
     "[| ?X1.0 <= ?X2.0; fmdom' ?s = ?X2.0 |]
      ==> fmdom' (fmrestrict_set ?X1.0 ?s) = ?X1.0",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_equation
         (template_app (template_hole 1, template_var 0), template_var 1)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 2))),
    ("FactoredSystem.valid_head_and_tail_valid_plan",
     "[| ?h : ?PROB; ?as : valid_plans ?PROB |]
      ==> ?h # ?as : valid_plans ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app (template_hole 1, template_var 1))
           ))),
    ("FactoredSystem.valid_action_valid_succ",
     "[| ?h : ?PROB; ?s : valid_states ?PROB |]
      ==> state_succ ?s ?h : valid_states ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app (template_hole 1, template_var 1))
           ))),
    ("FactoredSystem.FDOM_pre_subset_FDOM_valid_states_pair",
     "[| ?a : ?PROB; ?s : valid_states ?PROB |]
      ==> fmdom' (fst ?a) <= fmdom' ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app (template_hole 0, template_var 0)))),
    ("FactoredSystem.FDOM_eff_subset_FDOM_valid_states_pair",
     "[| ?a : ?PROB; ?s : valid_states ?PROB |]
      ==> fmdom' (snd ?a) <= fmdom' ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app (template_hole 0, template_var 0)))),
    ("FactoredSystem.lemma_1_i",
     "[| ?s : valid_states ?PROB; ?a : ?PROB |]
      ==> state_succ ?s ?a : valid_states ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app (template_hole 2, template_var 1))
           ))),
    ("FactoredSystem.card_of_set_of_all_possible_states",
     "finite ?X ==> card {s. fmdom' s = ?X} = 2 ^ card ?X",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0))],
       template_equation
        (template_app
          (template_hole 8, template_app (template_hole 7, t_empty)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_app (template_hole 0, template_var 0))))),
    ("FactoredSystem.valid_plan_pre_subset_prob_dom_pair",
     "?as : valid_plans ?PROB ==>
      ALL a. ListMem a ?as --> fmdom' (fst a) <= prob_dom ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 0))
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("FactoredSystem.sat_precond_as_proj_3",
     "fmdom' (fmrestrict_set ?vs (snd ?a)) = {} ==>
      fmrestrict_set ?vs (state_succ ?s ?a) = fmrestrict_set ?vs ?s",
     template_implication
      ([template_equation
         (template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))),
          template_hole 2)],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 0)))),
    ("FactoredSystem.disj_imp_eq_proj_exec",
     "fmdom' (snd ?a) Int ?vs = {} ==>
      fmrestrict_set ?vs ?s = fmrestrict_set ?vs (state_succ ?s ?a)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2))),
            template_var 1),
          template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("FactoredSystem.submap_imp_state_succ_submap",
     "[| fst ?a \<subseteq>\<^sub>f ?s1.0;
         ?s1.0 \<subseteq>\<^sub>f ?s2.0 |]
      ==> state_succ ?s1.0 ?a \<subseteq>\<^sub>f state_succ ?s2.0 ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("FactoredSystem.as_needed_asses_submap_exec_ii",
     "[| ?v : fmdom' ?f; ?f \<subseteq>\<^sub>f ?g |]
      ==> fmlookup ?f ?v = fmlookup ?g ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("FactoredSystem.valid_pref_suff_valid_append",
     "[| ?as1.0 : valid_plans ?PROB; ?as2.0 : valid_plans ?PROB |]
      ==> ?as1.0 @ ?as2.0 : valid_plans ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app (template_hole 1, template_var 1))
           ))),
    ("FactoredSystem.valid_as_valid_exec",
     "[| ?as : valid_plans ?PROB; ?s : valid_states ?PROB |]
      ==> exec_plan ?s ?as : valid_states ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app (template_hole 1, template_var 1))
           ))),
    ("FactoredSystem.FDOM_pre_subset_FDOM_valid_states",
     "[| (?p, ?e) : ?PROB; ?s : valid_states ?PROB |]
      ==> fmdom' ?p <= fmdom' ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 3),
         template_app (template_hole 0, template_var 0)))),
    ("FactoredSystem.FDOM_eff_subset_FDOM_valid_states",
     "[| (?p, ?e) : ?PROB; ?s : valid_states ?PROB |]
      ==> fmdom' ?e <= fmdom' ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 2),
         template_app (template_hole 0, template_var 0)))),
    ("FactoredSystem.fmsubset_eq",
     "?s1.0 \<subseteq>\<^sub>f ?s2.0 ==>
      ALL a. a |\<in>| fmdom ?s1.0 --> fmlookup ?s1.0 a = fmlookup ?s2.0 a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("FactoredSystem.possible_states_set_ii_b",
     "?v ~: fmdom' ?s ==> fmdom' (fmupd ?v ?x ?s) = fmdom' ?s Un {?v}",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_app (template_hole 5, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 5, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0))))),
    ("FactoredSystem.reachable_s_empty_prob",
     "[| prob_dom ?PROB = {}; ?s : valid_states ?PROB |]
      ==> reachable_s ?PROB ?s <= {fmempty}",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 1), template_hole 7),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)))),
    ("FactoredSystem.action_dom_subset_valid_states_FDOM",
     "[| (?p, ?e) : ?PROB; ?s : valid_states ?PROB |]
      ==> action_dom ?p ?e <= fmdom' ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app (template_hole 0, template_var 0)))),
    ("FactoredSystem.EQ_SS_DOM",
     "[| ?ss ~= {}; stateSpace ?ss ?vs1.0; stateSpace ?ss ?vs2.0 |]
      ==> ?vs1.0 = ?vs2.0",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("FactoredSystem.lemma_1_ii",
     "last ` (#) ?s ` state_set (state_list (state_succ ?s ?a) ?as) =
      last ` state_set (state_list (state_succ ?s ?a) ?as)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_hole 5),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 2)),
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_var 0)))),
       template_app
        (template_app (template_hole 6, template_hole 5),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0))))),
    ("FactoredSystem.pred_dom_subset_succ_submap",
     "[| fmdom' (fst ?a) <= fmdom' ?s1.0; ?s1.0 \<subseteq>\<^sub>f ?s2.0 |]
      ==> state_succ ?s1.0 ?a \<subseteq>\<^sub>f state_succ ?s2.0 ?a",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 2)),
          template_app (template_hole 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("FactoredSystem.lemma_1",
     "[| ?s : valid_states ?PROB; ?as : valid_plans ?PROB |]
      ==> last ` state_set (state_list ?s ?as) <= valid_states ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app (template_hole 7, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))),
         template_app (template_hole 7, template_var 1)))),
    ("FactoredSystem.act_needed_asses_submap_succ_submap",
     "[| action_needed_asses ?a ?s2.0 \<subseteq>\<^sub>f
         action_needed_asses ?a ?s1.0;
         ?s1.0 \<subseteq>\<^sub>f ?s2.0 |]
      ==> state_succ ?s1.0 ?a \<subseteq>\<^sub>f state_succ ?s2.0 ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("FactoredSystem.bool_update_inj",
     "[| finite ?X; ?v ~: ?X |]
      ==> inj_on (fmupd ?v ?b) {s. fmdom' s = ?X}",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 2)
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, t_empty),
             template_app (template_hole 2, t_empty))
           ))),
    ("FactoredSystem.state_succ_valid_act_disjoint",
     "[| ?a : ?PROB; ?vs Int prob_dom ?PROB = {} |]
      ==> fmrestrict_set ?vs (state_succ ?s ?a) = fmrestrict_set ?vs ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 1),
            template_app (template_hole 4, template_var 2)),
          template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("FactoredSystem.lemma_1_reachability_s",
     "[| ?s : valid_states ?PROB; ?as : valid_plans ?PROB |]
      ==> last ` state_set (state_list ?s ?as) <= reachable_s ?PROB ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 8, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("FactoredSystem.as_needed_asses_submap_exec_xii'",
     "[| ?v ~: fmdom' ?f; ?v : fmdom' ?g |]
      ==> fmlookup (?f ++ ?g) ?v = fmlookup ?g ?v",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app (template_hole 3, template_var 1))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("FactoredSystem.exec_valid_as_disjoint",
     "[| ?vs Int prob_dom ?PROB = {}; ?as : valid_plans ?PROB |]
      ==> fmrestrict_set ?vs (exec_plan ?s ?as) = fmrestrict_set ?vs ?s",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_var 3),
            template_app (template_hole 6, template_var 2)),
          template_hole 5),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_var 0)))),
    ("FactoredSystem.exec_fdom_empty_prob",
     "[| prob_dom ?PROB = {}; ?s : valid_states ?PROB;
         ?as : valid_plans ?PROB |]
      ==> exec_plan ?s ?as = fmempty",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 2), template_hole 7),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("FactoredSystem.MEM_statelist_valid_state",
     "[| ?s0.0 : valid_states ?PROB; ?as : valid_plans ?PROB;
         ListMem ?h (state_list ?s0.0 ?as) |]
      ==> ?h : valid_states ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 0),
             template_app (template_hole 4, template_var 2))
           ))),
    ("FactoredSystem.fmap_neq",
     "fmdom' ?s = fmdom' ?s' ==>
      (?s ~= ?s') = (EX v:fmdom' ?s. fmlookup ?s v ~= fmlookup ?s' v)",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 6, template_var 1)),
           t_empty)))),
    ("FactoredSystem.cycle_removal_lemma",
     "exec_plan ?s (?as1.0 @ ?as2.0) = exec_plan ?s ?as1.0 ==>
      exec_plan ?s (?as1.0 @ ?as2.0 @ ?as3.0) =
      exec_plan ?s (?as1.0 @ ?as3.0)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 3),
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)),
          template_app
           (template_app (template_hole 1, template_var 3),
            template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("FactoredSystem.disjoint_effects_no_effects",
     "ALL a. ListMem a ?as --> fmdom' (fmrestrict_set ?vs (snd a)) = {} ==>
      fmrestrict_set ?vs (exec_plan ?s ?as) = fmrestrict_set ?vs ?s",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 0)))),
    ("FactoredSystem.MEM_statelist_FDOM",
     "[| ?s0.0 : valid_states ?PROB; ?as : valid_plans ?PROB;
         ListMem ?h (state_list ?s0.0 ?as) |]
      ==> fmdom' ?h = fmdom' ?s0.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 1))
            )],
       template_equation
        (template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 3)))),
    ("FactoredSystem.fmsubset_restrict_set",
     "[| ?X1.0 <= ?X2.0; ?s : {s. fmdom' s = ?X2.0} |]
      ==> fmrestrict_set ?X1.0 ?s : {s. fmdom' s = ?X1.0}",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app (template_hole 3, t_empty))
           ))),
    ("FactoredSystem.no_change_vs_eff_submap",
     "[| fmrestrict_set ?vs ?s = fmrestrict_set ?vs (state_succ ?s ?a);
         fst ?a \<subseteq>\<^sub>f ?s |]
      ==> fmrestrict_set ?vs (snd ?a) \<subseteq>\<^sub>f
          fmrestrict_set ?vs ?s",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 0)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_app (template_hole 0, template_var 0))),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1))
           ))),
    ("FactoredSystem.empty_prob_dom_imp_empty_plan_always_good",
     "[| prob_dom ?PROB = {}; ?s : valid_states ?PROB;
         ?as : valid_plans ?PROB |]
      ==> exec_plan ?s [] = exec_plan ?s ?as",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 2), template_hole 7),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("FactoredSystem.not_eq_last_diff_paths_i",
     "[| ?s : valid_states ?PROB; ?as : valid_plans ?PROB;
         ?x : state_set (state_list ?s ?as) |]
      ==> last ?x : valid_states ?PROB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 0, template_var 0)),
             template_app (template_hole 6, template_var 2))
           ))),
    ("FactoredSystem.as_needed_asses_submap_exec_iii",
     "fmdom' (action_needed_asses ?a ?s) =
      {v: fmdom' ?s.
       v : fmdom' (fst ?a) & fmlookup (fst ?a) v = fmlookup ?s v}",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("FactoredSystem.valid_as_submap_init_submap_exec",
     "[| ?s1.0 \<subseteq>\<^sub>f ?s2.0;
         ALL a. ListMem a ?as --> fmdom' (fst a) <= fmdom' ?s1.0 |]
      ==> exec_plan ?s1.0 ?as \<subseteq>\<^sub>f exec_plan ?s2.0 ?as",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("FactoredSystem.cons_in_state_set_2",
     "[| ?slist ~= []; ?s # ?slist : state_set (state_list ?s (?h # ?t)) |]
      ==> ?slist : state_set (state_list (state_succ ?s ?h) ?t)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 3)),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_app
                   (template_app (template_hole 1, template_var 1),
                    template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 3),
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1)),
                 template_var 0)))
           ))),
    ("FactoredSystem.as_needed_asses_submap_exec_x",
     "?v : fmdom' (action_needed_asses ?a ?f) ==>
      ?v : fmdom' (fst ?a) &
      ?v : fmdom' ?f & fmlookup (fst ?a) ?v = fmlookup ?f ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 6, template_var 2),
                 template_app
                  (template_hole 5,
                   template_app (template_hole 2, template_var 1)))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_app (template_hole 5, template_var 0))),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_hole 0,
                       template_app (template_hole 2, template_var 1)),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2))))
           ))),
    ("FactoredSystem.as_needed_asses_submap_exec",
     "[| ?s1.0 \<subseteq>\<^sub>f ?s2.0;
         ALL a.
            ListMem a ?as -->
            action_needed_asses a ?s2.0 \<subseteq>\<^sub>f
            action_needed_asses a ?s1.0 |]
      ==> exec_plan ?s1.0 ?as \<subseteq>\<^sub>f exec_plan ?s2.0 ?as",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("FactoredSystem.as_needed_asses_submap_exec_i",
     "?v : fmdom' (action_needed_asses ?a ?s) ==>
      fmlookup (action_needed_asses ?a ?s) ?v = fmlookup ?s ?v &
      fmlookup (action_needed_asses ?a ?s) ?v = fmlookup (fst ?a) ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 4, template_var 1),
                         template_var 0)),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 2))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 4, template_var 1),
                       template_var 0)),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)),
                 template_var 2)))
           ))),
    ("FactoredSystem.fmupd_fmsubset_restrict_set",
     "[| ?s : {s. fmdom' s = insert ?v ?X}; fmlookup ?s ?v = Some ?x |]
      ==> ?s = fmupd ?v ?x (fmrestrict_set ?X ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app (template_hole 9, t_empty))
            ),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 3), template_var 2),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_var 3,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3))))),
    ("FactoredSystem.neq_mems_state_set_neq_len",
     "[| ?x : state_set (state_list ?s ?as);
         ?y : state_set (state_list ?s ?as); ?x ~= ?y |]
      ==> length ?x ~= length ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)))
            ),
        template_negation
         (template_equation (template_var 3, template_var 0))],
       template_negation
        (
           template_equation
            (template_app (template_hole 0, template_var 3),
             template_app (template_hole 0, template_var 0))
           ))),
    ("FactoredSystem.card_update",
     "[| finite ?X; ?v ~: ?X |]
      ==> card (fmupd ?v ?b ` {s. fmdom' s = ?X}) =
          card {s. fmdom' s = ?X}",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 2)
                )
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty),
             template_app (template_hole 2, t_empty))),
         template_app
          (template_hole 5, template_app (template_hole 2, t_empty))))),
    ("FactoredSystem.len_in_state_set_le_max_len",
     "[| ?s : valid_states ?PROB; ?as : valid_plans ?PROB; ?as ~= [];
         ?x : state_set (state_list ?s ?as) |]
      ==> length ?x <= Suc (length ?as)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 3),
              template_app (template_hole 12, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app (template_hole 10, template_var 2))
            ),
        template_negation
         (template_equation (template_var 1, template_hole 7)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 1)))
            )],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 1))))),
    ("FactoredSystem.bool_update_effect",
     "[| finite ?X; ?s : {s. fmdom' s = ?X}; ?x : ?X; ?x ~= ?v |]
      ==> fmlookup (fmupd ?v ?b ?s) ?x = fmlookup ?s ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app (template_hole 8, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 4)
            ),
        template_negation
         (template_equation (template_var 2, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 3)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_var 2)))),
    ("FactoredSystem.as_needed_asses_submap_exec_iv",
     "?v : fmdom' (action_needed_asses ?a ?s) ==>
      fmlookup (action_needed_asses ?a ?s) ?v = fmlookup ?s ?v &
      fmlookup (action_needed_asses ?a ?s) ?v = fmlookup (fst ?a) ?v &
      fmlookup (fst ?a) ?v = fmlookup ?s ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 4, template_var 1),
                         template_var 0)),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 2))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 4, template_var 1),
                           template_var 0)),
                       template_var 2)),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 1)),
                     template_var 2))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 1)),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 2))))
           ))),
    ("FactoredSystem.updates_disjoint",
     "[| finite ?X; ?x ~: ?X |]
      ==> fmupd ?x True ` {s. fmdom' s = ?X} Int
          fmupd ?x False ` {s. fmdom' s = ?X} =
          {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 0),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, t_empty),
               template_app (template_hole 4, t_empty))),
           template_app
            (template_app (template_hole 7, t_empty),
             template_app (template_hole 4, t_empty))),
         template_hole 0))),
    ("FactoredSystem.construction_of_all_possible_states_lemma",
     "?v ~: ?X ==>
      {s. fmdom' s = insert ?v ?X} =
      fmupd ?v True ` {s. fmdom' s = ?X} Un
      fmupd ?v False ` {s. fmdom' s = ?X}",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_var 0)
                )
            )],
       template_equation
        (template_app (template_hole 8, t_empty),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 8, t_empty))),
           template_app
            (template_app (template_hole 3, t_empty),
             template_app (template_hole 8, t_empty)))))),
    ("FactoredSystem.as_needed_asses_submap_exec_xi",
     "[| ?v : fmdom' (action_needed_asses ?a (?f ++ ?g)); ?v : fmdom' ?f |]
      ==> fmlookup (action_needed_asses ?a (?f ++ ?g)) ?v = fmlookup ?f ?v &
          fmlookup (action_needed_asses ?a (?f ++ ?g)) ?v =
          fmlookup (fst ?a) ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_var 0))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 6, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 5, template_var 2),
                         template_app
                          (template_app (template_hole 4, template_var 1),
                           template_var 0))),
                     template_var 3)),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 3))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 5, template_var 2),
                       template_app
                        (template_app (template_hole 4, template_var 1),
                         template_var 0))),
                   template_var 3)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 template_var 3)))
           ))),
    ("FactoredSystem.main_lemma_reachability_s",
     "[| finite ?PROB; ?s : valid_states ?PROB; ?as : valid_plans ?PROB |]
      ==> EX as'.
             exec_plan ?s ?as = exec_plan ?s as' &
             subseq as' ?as &
             length as' <= card (reachable_s ?PROB ?s) - 1",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_app (template_hole 14, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 0),
              template_app (template_hole 12, template_var 2))
            )],
       template_predicate (template_app (template_hole 11, t_empty)))),
    ("FactoredSystem.proj_eq_proj_exec_eq",
     "[| fmrestrict_set ?vs ?s = fmrestrict_set ?vs ?s';
         (fst ?a \<subseteq>\<^sub>f ?s) =
         (fst ?a' \<subseteq>\<^sub>f ?s');
         fmrestrict_set ?vs (snd ?a) = fmrestrict_set ?vs (snd ?a') |]
      ==> fmrestrict_set ?vs (state_succ ?s ?a) =
          fmrestrict_set ?vs (state_succ ?s' ?a')",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 5, template_var 4),
            template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 1)),
            template_var 3),
          template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0)),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 4),
            template_app (template_hole 1, template_var 1)),
          template_app
           (template_app (template_hole 5, template_var 4),
            template_app (template_hole 1, template_var 0)))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 4),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 5, template_var 4),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("FactoredSystem.main_lemma",
     "[| finite ?PROB; ?s : valid_states ?PROB; ?as : valid_plans ?PROB |]
      ==> EX as'.
             exec_plan ?s ?as = exec_plan ?s as' &
             subseq as' ?as & length as' <= 2 ^ card (prob_dom ?PROB) - 1",
     template_implication
      ([template_predicate
         (template_app (template_hole 20, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 1),
              template_app (template_hole 18, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 0),
              template_app (template_hole 16, template_var 2))
            )],
       template_predicate (template_app (template_hole 15, t_empty)))),
    ("FactoredSystem.lemma_3_reachability_s",
     "[| finite ?PROB; ?s : valid_states ?PROB; ?as : valid_plans ?PROB;
         card (reachable_s ?PROB ?s) - 1 < length ?as |]
      ==> EX as'.
             exec_plan ?s ?as = exec_plan ?s as' &
             length as' < length ?as & subseq as' ?as",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_app (template_hole 14, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 0),
              template_app (template_hole 12, template_var 2))
            ),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 10,
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_var 1))),
            template_hole 7),
          template_app (template_hole 6, template_var 0))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("FactoredSystem.lemma_3",
     "[| finite ?PROB; ?s : valid_states ?PROB; ?as : valid_plans ?PROB;
         2 ^ card (prob_dom ?PROB) - 1 < length ?as |]
      ==> EX as'.
             exec_plan ?s ?as = exec_plan ?s as' &
             length as' < length ?as & subseq as' ?as",
     template_implication
      ([template_predicate
         (template_app (template_hole 20, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 1),
              template_app (template_hole 18, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 0),
              template_app (template_hole 16, template_var 2))
            ),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 14,
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_hole 12,
                    template_app (template_hole 11, template_hole 10))),
                template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 2)))),
            template_hole 7),
          template_app (template_hole 6, template_var 0))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("FactoredSystem.not_eq_last_diff_paths_ii",
     "[| ?s : valid_states ?PROB; ?as : valid_plans ?PROB;
         ~ FactoredSystem.inj last (state_set (state_list ?s ?as))
            (valid_states ?PROB) |]
      ==> EX l1 l2.
             l1 : state_set (state_list ?s ?as) &
             l2 : state_set (state_list ?s ?as) &
             last l1 = last l2 & l1 ~= l2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_app (template_hole 12, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_app (template_hole 10, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 8, template_hole 7),
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 2),
                        template_var 0))),
                  template_app (template_hole 12, template_var 1))
                )
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("FactoredSystem.in_state_set_imp_eq_exec_prefix",
     "[| ?as ~= []; ?slist ~= []; ?s : valid_states ?PROB;
         ?as : valid_plans ?PROB; ?slist : state_set (state_list ?s ?as) |]
      ==> EX as'.
             prefix as' ?as &
             exec_plan ?s as' = last ?slist &
             length ?slist = Suc (length as')",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 19)),
        template_negation
         (template_equation (template_var 2, template_hole 17)),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_app (template_hole 15, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 3),
              template_app (template_hole 13, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_var 3)))
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("FactoredSystem.not_eq_last_diff_paths",
     "[| ?s : valid_states ?PROB; ?as : valid_plans ?PROB;
         ~ FactoredSystem.inj last (state_set (state_list ?s ?as))
            (valid_states ?PROB) |]
      ==> EX slist_1 slist_2.
             slist_1 : state_set (state_list ?s ?as) &
             slist_2 : state_set (state_list ?s ?as) &
             last slist_1 = last slist_2 &
             length slist_1 ~= length slist_2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_app (template_hole 13, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 0),
              template_app (template_hole 11, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 6, template_var 2),
                        template_var 0))),
                  template_app (template_hole 13, template_var 1))
                )
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("FactoredSystem.not_eq_last_diff_paths_reachability_s",
     "[| ?s : valid_states ?PROB; ?as : valid_plans ?PROB;
         ~ FactoredSystem.inj last (state_set (state_list ?s ?as))
            (reachable_s ?PROB ?s) |]
      ==> EX slist_1 slist_2.
             slist_1 : state_set (state_list ?s ?as) &
             slist_2 : state_set (state_list ?s ?as) &
             last slist_1 = last slist_2 &
             length slist_1 ~= length slist_2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2),
              template_app (template_hole 14, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 0),
              template_app (template_hole 12, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 10, template_hole 9),
                    template_app
                     (template_hole 8,
                      template_app
                       (template_app (template_hole 7, template_var 2),
                        template_var 0))),
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_var 2))
                )
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("FactoredSystem.lemma_2_reachability_s",
     "[| finite ?PROB; ?s : valid_states ?PROB; ?as : valid_plans ?PROB;
         card (reachable_s ?PROB ?s) - 1 < length ?as |]
      ==> EX as1 as2 as3.
             as1 @ as2 @ as3 = ?as &
             exec_plan ?s (as1 @ as2) = exec_plan ?s as1 & as2 ~= []",
     template_implication
      ([template_predicate
         (template_app (template_hole 18, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 1),
              template_app (template_hole 16, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 0),
              template_app (template_hole 14, template_var 2))
            ),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 12,
              template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_var 1))),
            template_hole 9),
          template_app (template_hole 8, template_var 0))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("FactoredSystem.as_needed_asses_submap_exec_vi",
     "[| ?v : fmdom' (action_needed_asses ?a ?s1.0);
         action_needed_asses ?a ?s1.0 \<subseteq>\<^sub>f
         action_needed_asses ?a ?s2.0 |]
      ==> fmlookup (action_needed_asses ?a ?s1.0) ?v =
          fmlookup (fst ?a) ?v &
          fmlookup (action_needed_asses ?a ?s2.0) ?v =
          fmlookup (fst ?a) ?v &
          fmlookup ?s1.0 ?v = fmlookup (fst ?a) ?v &
          fmlookup ?s2.0 ?v = fmlookup (fst ?a) ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 5, template_var 2),
                         template_var 1)),
                     template_var 3)),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 2)),
                   template_var 3))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 5, template_var 2),
                           template_var 0)),
                       template_var 3)),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 2)),
                     template_var 3))),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 1),
                         template_var 3)),
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app (template_hole 0, template_var 2)),
                       template_var 3))),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_var 3)),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 2)),
                     template_var 3)))))
           ))),
    ("FactoredSystem.lemma_2_prob_dom",
     "[| finite ?PROB; ?s : valid_states ?PROB; ?as : valid_plans ?PROB;
         2 ^ card (prob_dom ?PROB) - 1 < length ?as |]
      ==> EX as1 as2 as3.
             as1 @ as2 @ as3 = ?as &
             exec_plan ?s (as1 @ as2) = exec_plan ?s as1 & as2 ~= []",
     template_implication
      ([template_predicate
         (template_app (template_hole 22, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 21, template_var 1),
              template_app (template_hole 20, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 0),
              template_app (template_hole 18, template_var 2))
            ),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 16,
              template_app
               (template_app
                 (template_hole 15,
                  template_app
                   (template_hole 14,
                    template_app (template_hole 13, template_hole 12))),
                template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_var 2)))),
            template_hole 9),
          template_app (template_hole 8, template_var 0))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("FactoredSystem.lemma_2",
     "[| finite ?PROB; ?s : valid_states ?PROB; ?as : valid_plans ?PROB;
         2 ^ card (fmdom' ?s) - 1 < length ?as |]
      ==> EX as1 as2 as3.
             as1 @ as2 @ as3 = ?as &
             exec_plan ?s (as1 @ as2) = exec_plan ?s as1 & as2 ~= []",
     template_implication
      ([template_predicate
         (template_app (template_hole 22, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 21, template_var 1),
              template_app (template_hole 20, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 0),
              template_app (template_hole 18, template_var 2))
            ),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 16,
              template_app
               (template_app
                 (template_hole 15,
                  template_app
                   (template_hole 14,
                    template_app (template_hole 13, template_hole 12))),
                template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_var 1)))),
            template_hole 9),
          template_app (template_hole 8, template_var 0))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("FactoredSystem.eq_last_state_imp_append_nempty_as",
     "[| ?as ~= []; ?s : valid_states ?PROB; ?as : valid_plans ?PROB;
         ?slist_1.0 ~= []; ?slist_2.0 ~= [];
         ?slist_1.0 : state_set (state_list ?s ?as);
         ?slist_2.0 : state_set (state_list ?s ?as);
         length ?slist_1.0 ~= length ?slist_2.0;
         last ?slist_1.0 = last ?slist_2.0 |]
      ==> EX as1 as2 as3.
             as1 @ as2 @ as3 = ?as &
             exec_plan ?s (as1 @ as2) = exec_plan ?s as1 & as2 ~= []",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_hole 17)),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 3),
              template_app (template_hole 15, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 4),
              template_app (template_hole 13, template_var 2))
            ),
        template_negation
         (template_equation (template_var 1, template_hole 11)),
        template_negation
         (template_equation (template_var 0, template_hole 11)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 4)))
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 6, template_var 0))
            ),
        template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty))))]
