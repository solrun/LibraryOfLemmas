Loading theory "Draft.ArithExtras" (required by "Draft.streamMoreTemplates" via "Draft.stream")
Loading theory "Draft.ListExtras" (required by "Draft.streamMoreTemplates" via "Draft.stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.streamMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.streamMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
consts
  mem :: "'a => 'a list => bool"
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.120s elapsed time, 0.491s cpu time, 0.042s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.streamMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.ListExtras"
### 0.145s elapsed time, 0.590s cpu time, 0.042s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.streamMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.220s elapsed time, 0.866s cpu time, 0.070s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.streamMoreTemplates" via "Draft.ExtrEqs")
consts
  nat2inat :: "nat list => natInf list"
### theory "Draft.ArithExtras"
### 0.351s elapsed time, 1.402s cpu time, 0.112s GC time
Loading theory "Draft.stream" (required by "Draft.streamMoreTemplates")
### theory "HOL-Library.Nat_Bijection"
### 0.388s elapsed time, 1.542s cpu time, 0.112s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.streamMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
### theory "HOL-Library.BigO"
### 1.089s elapsed time, 4.136s cpu time, 0.821s GC time
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.135s elapsed time, 4.251s cpu time, 0.900s GC time
consts
  finU_dom :: "'a list => nat set"
consts
  finT_range :: "'a list list => 'a set"
Found termination order: "size <*mlex*> {}"
consts
  nticks :: "nat => 'a list list"
consts
  fin_find1nonemp :: "'a list list => 'a list"
consts
  fin_find1nonemp_index :: "'a list list => nat"
consts
  fin_length :: "'a list list => nat"
Found termination order: "size <*mlex*> {}"
consts
  inf_nth :: "(nat => 'a list) => nat => 'a"
consts
  inf_prefix :: "'a list => (nat => 'a) => nat => bool"
consts
  fin_prefix :: "'a list => 'a list => bool"
consts
  fin_truncate :: "'a list => nat => 'a list"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
consts
  inf_truncate :: "(nat => 'a) => nat => 'a list"
consts
  fin_msg :: "nat => 'a list list => bool"
consts
  inf_make_untimed1 :: "(nat => 'a list) => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  fin_tm :: "'a list list => nat => nat"
consts
  fst_remdups :: "'a list => 'a list"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size_list length (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  infU_get_prefix :: "(nat => 'a) => nat => 'a list"
consts
  fin_merge_ti :: "'a list list => 'a list list => 'a list list"
consts
  fin_last_ti :: "'a list list => nat => 'a list"
consts
  inf_last_ti :: "(nat => 'a list) => nat => 'a list"
### theory "HOL-Library.Tree"
### 2.058s elapsed time, 6.657s cpu time, 1.129s GC time
Loading theory "Draft.Templates" (required by "Draft.streamMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.stream"
### 1.870s elapsed time, 5.878s cpu time, 1.059s GC time
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.056s elapsed time, 0.102s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.streamMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.470s elapsed time, 0.514s cpu time, 0.052s GC time
Loading theory "Draft.streamMoreTemplates"
val templateLemmas =
   [("stream.fin_append_Nil", "fin_inf_append [] ?z = ?z",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("stream.inf_tl_Suc", "inf_tl ?x ?i = ?x (Suc ?i)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("stream.ts_msg1", "ts ?p ==> msg 1 ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)
           ))),
    ("stream.ts_inf_tl", "ts ?x ==> ts (inf_tl ?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Stream.stream_all_iff", "stream_all ?P ?s = Ball (sset ?s) ?P",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("Stream.streams_empty_iff", "(streams ?S = {}) = (?S = {})",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Stream.stream_smap_nats", "?s = smap ((!!) ?s) nats",
     template_equation
      (template_var 0,
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)))),
    ("Stream.streams_iff_sset", "(?s : streams ?A) = (sset ?s <= ?A)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("stream.fin_make_untimed_append_empty",
     "fin_make_untimed (?z @ [[]]) = fin_make_untimed ?z",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))),
       template_app (template_hole 4, template_var 0))),
    ("stream.ts_length_hint1", "ts ?x ==> ?x ?i ~= []",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_negation
        (
           template_equation
            (template_app (template_var 1, template_var 0), template_hole 0)
           ))),
    ("stream.correct_fin_inf_append2",
     "fin_inf_append [?x] ?s (Suc ?i) = ?s ?i",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 1)),
           template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app (template_var 1, template_var 0))),
    ("stream.fin_length_append",
     "fin_length (?x @ ?y) = fin_length ?x + fin_length ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("stream.ts_length_hint2", "ts ?x ==> length (?x ?i) = Suc 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_var 1, template_var 0)),
         template_app (template_hole 1, template_hole 0)))),
    ("Stream.streams_mono2", "?S <= ?T ==> streams ?S <= streams ?T",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Stream.sset_streams", "sset ?s <= ?A ==> ?s : streams ?A",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Stream.streams_sset", "?s : streams ?A ==> sset ?s <= ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("Stream.streams_shd", "?s : streams ?A ==> shd ?s : ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("stream.last_fin_make_untimed_append",
     "last (fin_make_untimed (?z @ [[?a]])) = ?a",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 1)),
               template_hole 0)))),
       template_var 0)),
    ("stream.fin_append_com_Nil1",
     "fin_inf_append [] (fin_inf_append ?y ?z) =
      fin_inf_append ([] @ ?y) ?z",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_hole 1),
             template_var 1)),
         template_var 0))),
    ("stream.fin_append_com_Nil2",
     "fin_inf_append ?x (fin_inf_append [] ?z) =
      fin_inf_append (?x @ []) ?z",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_hole 1)),
         template_var 0))),
    ("Stream.streamsp_streams_eq",
     "streamsp (%x. x : ?A) = (%x. x : streams ?A)",
     template_equation (template_app (template_hole 3, t_empty), t_empty)),
    ("Stream.sconst_streams", "?x : ?A ==> sconst ?x : streams ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Stream.streams_stl", "?s : streams ?A ==> stl ?s : streams ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Stream.streams_iff_snth", "(?s : streams ?X) = (ALL n. ?s !! n : ?X)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app (template_hole 2, t_empty))),
    ("Stream.stream_all_Stream",
     "stream_all ?P (?x ## ?X) = (?P ?x & stream_all ?P ?X)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 2, template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("stream.fin_append_com_i",
     "fin_inf_append ?x (fin_inf_append ?y ?z) ?i =
      fin_inf_append (?x @ ?y) ?z ?i",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("stream.arith_sum_t2k", "?t + 2 + ?k = Suc ?t + Suc ?k",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1)))),
         template_var 0),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Stream.stream_all_shift",
     "stream_all ?P (?xs @- ?s) = (list_all ?P ?xs & stream_all ?P ?s)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("stream.ts_inf_make_untimed_inf_tl",
     "ts ?x ==>
      inf_make_untimed (inf_tl ?x) ?i = inf_make_untimed ?x (Suc ?i)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("stream.ts_inf_make_untimed1_inf_tl",
     "ts ?x ==>
      inf_make_untimed1 (inf_tl ?x) ?i = inf_make_untimed1 ?x (Suc ?i)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("stream.ts_Least_0", "ts ?x ==> (LEAST i. ?x i ~= []) = 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app (template_hole 4, t_empty), template_hole 0))),
    ("stream.inf_truncate_nonempty",
     "?z ?i ~= [] ==> inf_truncate ?z ?i ~= []",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_var 1, template_var 0),
              template_hole 3)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("stream.inf_truncate_append",
     "inf_truncate ?z ?i @ [?z (Suc ?i)] = inf_truncate ?z (Suc ?i)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_var 1,
               template_app (template_hole 1, template_var 0))),
           template_hole 0)),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 1, template_var 0)))),
    ("stream.ts_Least_Suc0", "ts ?x ==> (LEAST i. ?x (Suc i) ~= []) = 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app (template_hole 5, t_empty), template_hole 0))),
    ("stream.fin_make_untimed_append",
     "fin_make_untimed ?x ~= [] ==> fin_make_untimed (?x @ ?y) ~= []",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("stream.concat_inf_truncate_nonempty",
     "?z ?i ~= [] ==> concat (inf_truncate ?z ?i) ~= []",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_var 1, template_var 0),
              template_hole 2)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 2)
           ))),
    ("Stream.streams_Stream",
     "(?x ## ?s : streams ?A) = (?x : ?A & ?s : streams ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app (template_hole 2, template_var 0))))),
    ("Stream.stream_smap_fromN",
     "?s = smap (%j. Let (j - ?n) ((!!) ?s)) (fromN ?n)",
     template_equation
      (template_var 1,
       template_app
        (template_app (template_hole 5, t_empty),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("stream.length_inf_drop_hint1",
     "?s ?k ~= [] ==> length (inf_drop ?k ?s 0) ~= 0",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_var 1, template_var 0),
              template_hole 4)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 1),
                 template_hole 0)),
             template_hole 0)
           ))),
    ("stream.inf_last_ti_nonempty",
     "?s ?t ~= [] ==> inf_last_ti ?s (?t + ?k) ~= []",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_var 2, template_var 1),
              template_hole 2)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 2)
           ))),
    ("stream.concat_inf_truncate_nonempty_a",
     "?z ?i = [?a] ==> concat (inf_truncate ?z ?i) ~= []",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1),
          template_app
           (template_app (template_hole 4, template_var 0),
            template_hole 3))],
       template_negation
        (
           template_equation
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_hole 3)
           ))),
    ("stream.last_fin_make_untimed_inf_truncate",
     "?z ?i = [?a] ==> last (fin_make_untimed (inf_truncate ?z ?i)) = ?a",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1),
          template_app
           (template_app (template_hole 5, template_var 0),
            template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))),
         template_var 0))),
    ("stream.correct_fin_inf_append1",
     "?s1.0 = fin_inf_append [?x] ?s ==> ?s1.0 (Suc ?i) = ?s ?i",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_hole 2)),
            template_var 1))],
       template_equation
        (template_app
          (template_var 3, template_app (template_hole 0, template_var 0)),
         template_app (template_var 1, template_var 0)))),
    ("Stream.streams_mono",
     "[| ?s : streams ?A; ?A <= ?B |] ==> ?s : streams ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 0))
           ))),
    ("stream.fin_make_untimed_inf_truncate_Nonempty_all0",
     "?z 0 ~= [] ==> ALL i. fin_make_untimed (inf_truncate ?z i) ~= []",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_var 0, template_hole 4),
              template_hole 3)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("stream.inf_last_ti_nonempty_k",
     "inf_last_ti ?dt ?t ~= [] ==> inf_last_ti ?dt (?t + ?k) ~= []",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_hole 1)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("stream.fin_make_untimed_inf_truncate_Nonempty_all0a",
     "?z 0 = [?a] ==> ALL i. fin_make_untimed (inf_truncate ?z i) ~= []",
     template_implication
      ([template_equation
         (template_app (template_var 1, template_hole 6),
          template_app
           (template_app (template_hole 5, template_var 0),
            template_hole 4))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("stream.msg_nonempty1",
     "[| msg (Suc 0) ?a; ?a ?t = ?aa # ?l |] ==> ?l = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_hole 3)),
              template_var 3)
            ),
        template_equation
         (template_app (template_var 3, template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_equation (template_var 0, template_hole 0))),
    ("Stream.in_streams",
     "[| stl ?s : streams ?S; shd ?s : ?S |] ==> ?s : streams ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              template_app (template_hole 2, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app (template_hole 2, template_var 0))
           ))),
    ("Stream.shift_streams",
     "[| ?w : lists ?A; ?s : streams ?A |] ==> ?w @- ?s : streams ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app (template_hole 1, template_var 1))
           ))),
    ("stream.msg_nonempty2",
     "[| msg (Suc 0) ?a; ?a ?t ~= [] |] ==> length (?a ?t) = Suc 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_hole 5)),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 1, template_var 0),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_hole 0, template_app (template_var 1, template_var 0)),
         template_app (template_hole 6, template_hole 5)))),
    ("stream.fin_make_untimed_inf_truncate_Nonempty",
     "[| ?z ?k ~= []; ?k <= ?i |]
      ==> fin_make_untimed (inf_truncate ?z ?i) ~= []",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_var 2, template_var 1),
              template_hole 3)
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_negation
        (
           template_equation
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_hole 3)
           ))),
    ("stream.fin_make_untimed_inf_truncate_Nonempty_all",
     "?z ?k ~= [] ==>
      ALL i>=?k. fin_make_untimed (inf_truncate ?z i) ~= []",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_var 1, template_var 0),
              template_hole 5)
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("stream.fin_make_untimed_inf_truncate_Nonempty_all_app",
     "?z 0 = [?a] ==>
      ALL i. fin_make_untimed (inf_truncate ?z i @ [?z (Suc i)]) ~= []",
     template_implication
      ([template_equation
         (template_app (template_var 1, template_hole 10),
          template_app
           (template_app (template_hole 9, template_var 0),
            template_hole 8))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("stream.fin_make_untimed_nth_length",
     "?z ?i = [?a] ==>
      fin_make_untimed (inf_truncate ?z ?i) !
      (length (fin_make_untimed (inf_truncate ?z ?i)) - Suc 0) =
      ?a",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1),
          template_app
           (template_app (template_hole 9, template_var 0),
            template_hole 8))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 1)))),
             template_app (template_hole 1, template_hole 0))),
         template_var 0))),
    ("Stream.streamsE",
     "[| ?s : streams ?A; [| shd ?s : ?A; stl ?s : streams ?A |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 2)),
                 template_var 1)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 0, template_var 2)),
                   template_app (template_hole 3, template_var 1))
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Stream.smap_streams",
     "[| ?s : streams ?A; !!x. x : ?A ==> ?f x : ?B |]
      ==> smap ?f ?s : streams ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 3)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("stream.length_inf_drop_hint2",
     "?s 0 ~= [] -->
      length (inf_drop 0 ?s 0) < Suc ?i -->
      Suc ?i - length (inf_drop 0 ?s 0) < Suc ?i",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_var 1, template_hole 6)),
                 template_hole 5))),
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app
                        (template_app (template_hole 2, template_hole 6),
                         template_var 1),
                       template_hole 6))),
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_hole 1, template_var 0)),
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app
                        (template_app (template_hole 2, template_hole 6),
                         template_var 1),
                       template_hole 6)))),
               template_app (template_hole 1, template_var 0))))
         )),
    ("stream.fin_nth_Cons",
     "fin_nth (?hds # ?tls) ?k =
      (if ?hds = [] then fin_nth ?tls ?k
       else if ?k < length ?hds then ?hds ! ?k
            else fin_nth ?tls (?k - length ?hds))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_hole 4)),
               template_app
                (template_app (template_hole 8, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_app (template_hole 2, template_var 2))),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0)),
               template_app
                (template_app (template_hole 8, template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_app (template_hole 2, template_var 2)))))
           ))),
    ("stream.fin_make_untimed_inf_truncate_append_a",
     "fin_make_untimed (inf_truncate ?z ?i @ [[?a]]) !
      (length (fin_make_untimed (inf_truncate ?z ?i @ [[?a]])) - Suc 0) =
      ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 2),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 0),
                     template_hole 5)),
                 template_hole 4)))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 8, template_var 2),
                       template_var 1)),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 6, template_var 0),
                         template_hole 5)),
                     template_hole 4))))),
           template_app (template_hole 1, template_hole 0))),
       template_var 0)),
    ("stream.inf_tm_hint1",
     "[| ?i2.0 = Suc ?i - length ?a; ~ Suc ?i <= length ?a; ?a ~= [] |]
      ==> ?i2.0 < Suc ?i",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 1)),
            template_app (template_hole 5, template_var 0))),
        template_negation
         (
            template_inequation
             (less_equals, template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            ),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_inequation
        (less_than, template_var 2,
         template_app (template_hole 6, template_var 1)))),
    ("stream.inf_last_ti_Suc2",
     "?dt (Suc ?t) ~= [] | ?dt (Suc (Suc ?t)) ~= [] ==>
      inf_last_ti ?dt (?t + 2 + ?k) ~= []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_var 2,
                        template_app (template_hole 6, template_var 1))),
                    template_hole 5))),
              template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_var 2,
                      template_app
                       (template_hole 6,
                        template_app (template_hole 6, template_var 1)))),
                  template_hole 5)))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_hole 0)))),
                 template_var 0)),
             template_hole 5)
           ))),
    ("stream.inf_disj_index",
     "[| inf_disj ?n ?nS; ?nS ?k ?t ~= []; ?k < ?n |]
      ==> (SOME i. i < ?n & ?nS i ?t ~= []) = ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_var 2, template_var 1),
                template_var 0),
              template_hole 4)
            ),
        template_inequation (less_than, template_var 1, template_var 3)],
       template_equation
        (template_app (template_hole 1, t_empty), template_var 1))),
    ("stream.inf_disjS_index",
     "[| inf_disjS ?IdSet ?nS; ?k : ?IdSet; ?nS ?k ?t ~= [] |]
      ==> (SOME i. i : ?IdSet & ?nSend i ?t ~= []) = ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 4)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_var 3, template_var 2),
                template_var 1),
              template_hole 5)
            )],
       template_equation
        (template_app (template_hole 3, t_empty), template_var 2)))]:
   (string * thm * template) list
### theory "Draft.streamMoreTemplates"
### 0.322s elapsed time, 0.442s cpu time, 0.000s GC time
val it = (): unit
