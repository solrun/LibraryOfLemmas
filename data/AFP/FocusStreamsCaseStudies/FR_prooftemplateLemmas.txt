   [("FR_proof.FlexRayArch_CorrectSheaf",
     "FlexRayArch ?n ?nReturn ?nC ?nStore ?nGet ==> CorrectSheaf ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 4)))),
    ("FR_proof.main_fr_refinement",
     "FlexRayArch ?n ?nReturn ?nC ?nStore ?nGet ==>
      FlexRay ?n ?nReturn ?nC ?nStore ?nGet",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("FR_proof.msg_nGet1",
     "FlexRayController (?nReturn ?k) ?recv (?nC ?k) (?nStore ?k)
       (?nSend ?k) (?nGet ?k) ==>
      msg (Suc 0) (?nGet ?k)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 3,
                        template_app (template_var 6, template_var 5)),
                      template_var 4),
                    template_app (template_var 3, template_var 5)),
                  template_app (template_var 2, template_var 5)),
                template_app (template_var 1, template_var 5)),
              template_app (template_var 0, template_var 5))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0)),
             template_app (template_var 0, template_var 5))
           ))),
    ("FR_proof.Scheduler_L1",
     "[| Scheduler ?C ?activation; ?activation ?t ~= [] |]
      ==> ?t mod cycleLength ?C mem schedule ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 1, template_var 0),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 1, template_var 2))),
             template_app (template_hole 0, template_var 2))
           ))),
    ("FR_proof.Scheduler_L3",
     "[| Scheduler ?C ?activation; ?t mod cycleLength ?C mem schedule ?C |]
      ==> ?activation ?t ~= []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_app (template_hole 4, template_var 2))),
              template_app (template_hole 3, template_var 2))
            )],
       template_negation
        (
           template_equation
            (template_app (template_var 1, template_var 0), template_hole 0)
           ))),
    ("FR_proof.Scheduler_L2",
     "[| Scheduler ?C ?activation;
         ~ ?t mod cycleLength ?C mem schedule ?C |]
      ==> ?activation ?t = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 0),
                      template_app (template_hole 3, template_var 2))),
                  template_app (template_hole 2, template_var 2))
                )
            )],
       template_equation
        (template_app (template_var 1, template_var 0), template_hole 0))),
    ("FR_proof.Send_L1",
     "[| Send ?return ?send ?get ?activation; ?send ?t ~= [] |]
      ==> ?activation ?t ~= []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 3, template_var 0),
              template_hole 2)
            )],
       template_negation
        (
           template_equation
            (template_app (template_var 1, template_var 0), template_hole 0)
           ))),
    ("FR_proof.length_nGet1",
     "FlexRayController (?nReturn ?k) ?recv (?nC ?k) (?nStore ?k)
       (?nSend ?k) (?nGet ?k) ==>
      length (?nGet ?k ?t) <= Suc 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 4,
                        template_app (template_var 7, template_var 6)),
                      template_var 5),
                    template_app (template_var 4, template_var 6)),
                  template_app (template_var 3, template_var 6)),
                template_app (template_var 2, template_var 6)),
              template_app (template_var 1, template_var 6))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_var 1, template_var 6),
             template_var 0)),
         template_app (template_hole 1, template_hole 0)))),
    ("FR_proof.Scheduler_L4",
     "[| Scheduler ?C ?activation; ?t mod cycleLength ?C mem schedule ?C |]
      ==> ?activation ?t = [?t mod cycleLength ?C]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_app (template_hole 4, template_var 2))),
              template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app (template_var 1, template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 5, template_var 0),
               template_app (template_hole 4, template_var 2))),
           template_hole 0)))),
    ("FR_proof.Broadcast_nSend_empty1",
     "[| Broadcast ?n ?nSend ?recv; ALL k<?n. ?nSend k ?t = [] |]
      ==> ?recv ?t = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app (template_var 1, template_var 0), template_hole 0))),
    ("FR_proof.msg_nSend",
     "[| BusInterface ?activation (?nReturn ?i) ?recv (?nStore ?i)
          (?nSend ?i) (?nGet ?i);
         msg (Suc 0) (?nReturn ?i) |]
      ==> msg (Suc 0) (?nSend ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 6),
                      template_app (template_var 5, template_var 4)),
                    template_var 3),
                  template_app (template_var 2, template_var 4)),
                template_app (template_var 1, template_var 4)),
              template_app (template_var 0, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_hole 0)),
              template_app (template_var 5, template_var 4))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0)),
             template_app (template_var 1, template_var 4))
           ))),
    ("FR_proof.Send_L2",
     "[| Send ?return ?send ?get ?activation; ?activation ?t ~= [];
         ?return ?t ~= [] |]
      ==> ?send ?t ~= []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 1, template_var 0),
              template_hole 2)
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 4, template_var 0),
              template_hole 0)
            )],
       template_negation
        (
           template_equation
            (template_app (template_var 3, template_var 0), template_hole 0)
           ))),
    ("FR_proof.msg_nGet2",
     "[| ALL i<?n.
            FlexRayController (?nReturn i) ?recv (?nC i) (?nStore i)
             (?nSend i) (?nGet i);
         ?k < ?n |]
      ==> msg (Suc 0) (?nGet ?k)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_inequation (less_than, template_var 0, template_var 7)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0)),
             template_app (template_var 1, template_var 0))
           ))),
    ("FR_proof.length_nSend",
     "[| BusInterface ?activation (?nReturn ?i) ?recv (?nStore ?i)
          (?nSend ?i) (?nGet ?i);
         ALL t. length (?nReturn ?i t) <= Suc 0 |]
      ==> length (?nSend ?i ?t) <= Suc 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 5, template_var 7),
                      template_app (template_var 6, template_var 5)),
                    template_var 4),
                  template_app (template_var 3, template_var 5)),
                template_app (template_var 2, template_var 5)),
              template_app (template_var 1, template_var 5))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_var 2, template_var 5),
             template_var 0)),
         template_app (template_hole 1, template_hole 0)))),
    ("FR_proof.fr_Send1",
     "[| FlexRayController (?nReturn ?i) ?recv (?nC ?i) (?nStore ?i)
          (?nSend ?i) (?nGet ?i);
         ~ ?t mod cycleLength (?nC ?i) mem schedule (?nC ?i) |]
      ==> ?nSend ?i ?t = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 7,
                        template_app (template_var 7, template_var 6)),
                      template_var 5),
                    template_app (template_var 4, template_var 6)),
                  template_app (template_var 3, template_var 6)),
                template_app (template_var 2, template_var 6)),
              template_app (template_var 1, template_var 6))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 0),
                      template_app
                       (template_hole 3,
                        template_app (template_var 4, template_var 6)))),
                  template_app
                   (template_hole 2,
                    template_app (template_var 4, template_var 6)))
                )
            )],
       template_equation
        (template_app
          (template_app (template_var 2, template_var 6), template_var 0),
         template_hole 0))),
    ("FR_proof.fr_nGet2a",
     "[| FlexRayController (?nReturn ?k) ?recv (?nC ?k) (?nStore ?k)
          (?nSend ?k) (?nGet ?k);
         ~ ?t mod cycleLength (?nC ?k) mem schedule (?nC ?k) |]
      ==> ?nGet ?k ?t = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 7,
                        template_app (template_var 7, template_var 6)),
                      template_var 5),
                    template_app (template_var 4, template_var 6)),
                  template_app (template_var 3, template_var 6)),
                template_app (template_var 2, template_var 6)),
              template_app (template_var 1, template_var 6))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 0),
                      template_app
                       (template_hole 3,
                        template_app (template_var 4, template_var 6)))),
                  template_app
                   (template_hole 2,
                    template_app (template_var 4, template_var 6)))
                )
            )],
       template_equation
        (template_app
          (template_app (template_var 1, template_var 6), template_var 0),
         template_hole 0))),
    ("FR_proof.disjointFrame_L2",
     "[| DisjointSchedules ?n ?nC; IdenticCycleLength ?n ?nC;
         ALL i<?n.
            FlexRayController (?nReturn i) ?rcv (?nC i) (?nStore i)
             (?nSend i) (?nGet i) |]
      ==> inf_disj ?n ?nSend",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 6),
              template_var 5)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 6), template_var 1)
           ))),
    ("FR_proof.fr_nGet1a",
     "[| FlexRayController (?nReturn ?k) ?recv (?nC ?k) (?nStore ?k)
          (?nSend ?k) (?nGet ?k);
         ?t mod cycleLength (?nC ?k) mem schedule (?nC ?k) |]
      ==> ?nGet ?k ?t = [?t mod cycleLength (?nC ?k)]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 7,
                        template_app (template_var 7, template_var 6)),
                      template_var 5),
                    template_app (template_var 4, template_var 6)),
                  template_app (template_var 3, template_var 6)),
                template_app (template_var 2, template_var 6)),
              template_app (template_var 1, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_app
                   (template_hole 4,
                    template_app (template_var 4, template_var 6)))),
              template_app
               (template_hole 3,
                template_app (template_var 4, template_var 6)))
            )],
       template_equation
        (template_app
          (template_app (template_var 1, template_var 6), template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 5, template_var 0),
               template_app
                (template_hole 4,
                 template_app (template_var 4, template_var 6)))),
           template_hole 0)))),
    ("FR_proof.FlexRayArch_FrameTransmission",
     "[| FlexRayArch ?n ?nReturn ?nC ?nStore ?nGet;
         ALL i<?n. msg (Suc 0) (?nReturn i); DisjointSchedules ?n ?nC;
         IdenticCycleLength ?n ?nC |]
      ==> FrameTransmission ?n ?nStore ?nReturn ?nGet ?nC",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 4),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1),
                 template_var 3),
               template_var 0),
             template_var 2)
           ))),
    ("FR_proof.FlexRayArch_nGet",
     "[| FlexRayArch ?n ?nReturn ?nC ?nStore ?nGet;
         ALL i<?n. msg (Suc 0) (?nReturn i); DisjointSchedules ?n ?nC;
         IdenticCycleLength ?n ?nC; ?i < ?n |]
      ==> msg (Suc 0) (?nGet ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 5),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 5),
              template_var 3)
            ),
        template_inequation (less_than, template_var 0, template_var 5)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 4, template_hole 3)),
             template_app (template_var 1, template_var 0))
           ))),
    ("FR_proof.FlexRayArch_nStore",
     "[| FlexRayArch ?n ?nReturn ?nC ?nStore ?nGet;
         ALL i<?n. msg (Suc 0) (?nReturn i); DisjointSchedules ?n ?nC;
         IdenticCycleLength ?n ?nC; ?i < ?n |]
      ==> msg (Suc 0) (?nStore ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 8, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 5),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 5),
              template_var 3)
            ),
        template_inequation (less_than, template_var 0, template_var 5)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2)),
             template_app (template_var 2, template_var 0))
           ))),
    ("FR_proof.fr_nGet2",
     "[| ALL i<?n.
            FlexRayController (?nReturn i) ?recv (?nC i) (?nStore i)
             (?nSend i) (?nGet i);
         ~ ?t mod cycleLength (?nC ?k) mem schedule (?nC ?k); ?k < ?n |]
      ==> ?nGet ?k ?t = []",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 1),
                      template_app
                       (template_hole 3,
                        template_app (template_var 5, template_var 0)))),
                  template_app
                   (template_hole 2,
                    template_app (template_var 5, template_var 0)))
                )
            ),
        template_inequation (less_than, template_var 0, template_var 8)],
       template_equation
        (template_app
          (template_app (template_var 2, template_var 0), template_var 1),
         template_hole 0))),
    ("FR_proof.fr_refinement_FrameTransmission",
     "[| Cable ?n ?nSend ?recv;
         ALL i<?n.
            FlexRayController (?nReturn i) ?recv (?nC i) (?nStore i)
             (?nSend i) (?nGet i);
         DisjointSchedules ?n ?nC; IdenticCycleLength ?n ?nC |]
      ==> FrameTransmission ?n ?nStore ?nReturn ?nGet ?nC",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 6),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 6),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 6),
                   template_var 1),
                 template_var 3),
               template_var 0),
             template_var 2)
           ))),
    ("FR_proof.fr_nGet1",
     "[| ALL i<?n.
            FlexRayController (?nReturn i) ?recv (?nC i) (?nStore i)
             (?nSend i) (?nGet i);
         ?t mod cycleLength (?nC ?k) mem schedule (?nC ?k); ?k < ?n |]
      ==> ?nGet ?k ?t = [?t mod cycleLength (?nC ?k)]",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app
                   (template_hole 4,
                    template_app (template_var 5, template_var 0)))),
              template_app
               (template_hole 3,
                template_app (template_var 5, template_var 0)))
            ),
        template_inequation (less_than, template_var 0, template_var 8)],
       template_equation
        (template_app
          (template_app (template_var 2, template_var 0), template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_app
                (template_hole 4,
                 template_app (template_var 5, template_var 0)))),
           template_hole 0)))),
    ("FR_proof.correct_DisjointSchedules1",
     "[| DisjointSchedules ?n ?nC; IdenticCycleLength ?n ?nC;
         ?t mod cycleLength (?nC ?i) mem schedule (?nC ?i); ?i < ?n;
         ?j < ?n; ?i ~= ?j |]
      ==> ~ ?t mod cycleLength (?nC ?j) mem schedule (?nC ?j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app
                   (template_hole 4,
                    template_app (template_var 3, template_var 1)))),
              template_app
               (template_hole 3,
                template_app (template_var 3, template_var 1)))
            ),
        template_inequation (less_than, template_var 1, template_var 4),
        template_inequation (less_than, template_var 0, template_var 4),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_app
                      (template_hole 4,
                       template_app (template_var 3, template_var 0)))),
                 template_app
                  (template_hole 3,
                   template_app (template_var 3, template_var 0)))
               )
           ))),
    ("FR_proof.fr_Send2",
     "[| ALL i<?n.
            FlexRayController (?nReturn i) ?recv (?nC i) (?nStore i)
             (?nSend i) (?nGet i);
         DisjointSchedules ?n ?nC; IdenticCycleLength ?n ?nC;
         ?t mod cycleLength (?nC ?k) mem schedule (?nC ?k); ?k < ?n |]
      ==> ?nSend ?k ?t = ?nReturn ?k ?t",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 8),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 8),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app
                   (template_hole 2,
                    template_app (template_var 5, template_var 0)))),
              template_app
               (template_hole 1,
                template_app (template_var 5, template_var 0)))
            ),
        template_inequation (less_than, template_var 0, template_var 8)],
       template_equation
        (template_app
          (template_app (template_var 3, template_var 0), template_var 1),
         template_app
          (template_app (template_var 7, template_var 0),
           template_var 1)))),
    ("FR_proof.fr_nStore_empty1",
     "[| Cable ?n ?nSend ?recv;
         ALL i<?n.
            FlexRayController (?nReturn i) ?recv (?nC i) (?nStore i)
             (?nSend i) (?nGet i);
         DisjointSchedules ?n ?nC; IdenticCycleLength ?n ?nC;
         ?t mod cycleLength (?nC ?k) mem schedule (?nC ?k); ?k < ?n |]
      ==> ?nStore ?k ?t = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 8),
                template_var 7),
              template_var 6)
            ),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 8),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 8),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app
                   (template_hole 3,
                    template_app (template_var 4, template_var 0)))),
              template_app
               (template_hole 2,
                template_app (template_var 4, template_var 0)))
            ),
        template_inequation (less_than, template_var 0, template_var 8)],
       template_equation
        (template_app
          (template_app (template_var 3, template_var 0), template_var 1),
         template_hole 0))),
    ("FR_proof.disjointFrame_L1",
     "[| DisjointSchedules ?n ?nC; IdenticCycleLength ?n ?nC;
         ALL i<?n.
            FlexRayController (?nReturn i) ?rcv (?nC i) (?nStore i)
             (?nSend i) (?nGet i);
         ?nSend ?i ?t ~= []; ?i < ?n; ?j < ?n; ?i ~= ?j |]
      ==> ?nSend ?j ?t = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 9),
              template_var 8)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 9),
              template_var 8)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_var 4, template_var 2),
                template_var 1),
              template_hole 1)
            ),
        template_inequation (less_than, template_var 2, template_var 9),
        template_inequation (less_than, template_var 0, template_var 9),
        template_negation
         (template_equation (template_var 2, template_var 0))],
       template_equation
        (template_app
          (template_app (template_var 4, template_var 0), template_var 1),
         template_hole 1))),
    ("FR_proof.fr_Send3",
     "[| ALL i<?n.
            FlexRayController (?nReturn i) ?recv (?nC i) (?nStore i)
             (?nSend i) (?nGet i);
         DisjointSchedules ?n ?nC; IdenticCycleLength ?n ?nC;
         ?t mod cycleLength (?nC ?k) mem schedule (?nC ?k); ?k < ?n;
         ?nReturn ?k ?t ~= [] |]
      ==> ?nSend ?k ?t ~= []",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 8),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 8),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app
                   (template_hole 4,
                    template_app (template_var 5, template_var 0)))),
              template_app
               (template_hole 3,
                template_app (template_var 5, template_var 0)))
            ),
        template_inequation (less_than, template_var 0, template_var 8),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_var 7, template_var 0),
                template_var 1),
              template_hole 0)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_var 3, template_var 0),
               template_var 1),
             template_hole 0)
           ))),
    ("FR_proof.fr_nC_Send",
     "[| ALL i<?n.
            FlexRayController (?nReturn i) ?recv (?nC i) (?nStore i)
             (?nSend i) (?nGet i);
         ?k < ?n; DisjointSchedules ?n ?nC; IdenticCycleLength ?n ?nC;
         ?t mod cycleLength (?nC ?k) mem schedule (?nC ?k) |]
      ==> ALL j. j < ?n & j ~= ?k --> ?nSend j ?t = []",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty)),
        template_inequation (less_than, template_var 1, template_var 8),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 8),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 8),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 0),
                  template_app
                   (template_hole 6,
                    template_app (template_var 5, template_var 1)))),
              template_app
               (template_hole 5,
                template_app (template_var 5, template_var 1)))
            )],
       template_predicate (template_app (template_hole 14, t_empty)))),
    ("FR_proof.disjointFrame_L3",
     "[| DisjointSchedules ?n ?nC; IdenticCycleLength ?n ?nC;
         ALL i<?n.
            FlexRayController (?nReturn i) ?rcv (?nC i) (?nStore i)
             (?nSend i) (?nGet i);
         ?t mod cycleLength (?nC ?i) mem schedule (?nC ?i); ?i < ?n;
         ?j < ?n; ?i ~= ?j |]
      ==> ?nSend ?j ?t = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 9),
              template_var 8)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 9),
              template_var 8)
            ),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_app
                   (template_hole 5,
                    template_app (template_var 8, template_var 1)))),
              template_app
               (template_hole 4,
                template_app (template_var 8, template_var 1)))
            ),
        template_inequation (less_than, template_var 1, template_var 9),
        template_inequation (less_than, template_var 0, template_var 9),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app (template_var 4, template_var 0), template_var 2),
         template_hole 0))),
    ("FR_proof.fr_Send7",
     "[| ALL i<?n.
            FlexRayController (?nReturn i) ?recv (?nC i) (?nStore i)
             (?nSend i) (?nGet i);
         DisjointSchedules ?n ?nC; IdenticCycleLength ?n ?nC;
         ?t mod cycleLength (?nC ?k) mem schedule (?nC ?k); ?k < ?n;
         ?j < ?n; ?nReturn ?k ?t = [] |]
      ==> ?nSend ?j ?t = []",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 9),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 9),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app
                   (template_hole 3,
                    template_app (template_var 6, template_var 1)))),
              template_app
               (template_hole 2,
                template_app (template_var 6, template_var 1)))
            ),
        template_inequation (less_than, template_var 1, template_var 9),
        template_inequation (less_than, template_var 0, template_var 9),
        template_equation
         (template_app
           (template_app (template_var 8, template_var 1), template_var 2),
          template_hole 0)],
       template_equation
        (template_app
          (template_app (template_var 4, template_var 0), template_var 2),
         template_hole 0))),
    ("FR_proof.msg_nStore",
     "[| ALL i<?n.
            FlexRayController (?nReturn i) ?recv (?nC i) (?nStore i)
             (?nSend i) (?nGet i);
         DisjointSchedules ?n ?nC; IdenticCycleLength ?n ?nC;
         inf_disj ?n ?nSend; ?i < ?n; ALL i<?n. msg (Suc 0) (?nReturn i);
         Cable ?n ?nSend ?recv |]
      ==> msg (Suc 0) (?nStore ?i)",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 7),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 7),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 7),
              template_var 2)
            ),
        template_inequation (less_than, template_var 0, template_var 7),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 7),
                template_var 2),
              template_var 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1)),
             template_app (template_var 3, template_var 0))
           ))),
    ("FR_proof.fr_Send8",
     "[| ALL i<?n.
            FlexRayController (?nReturn i) ?recv (?nC i) (?nStore i)
             (?nSend i) (?nGet i);
         DisjointSchedules ?n ?nC; IdenticCycleLength ?n ?nC;
         ?t mod cycleLength (?nC ?k) mem schedule (?nC ?k); ?k < ?n;
         ?nReturn ?k ?t = [] |]
      ==> ~ (EX k<?n. ?nSend k ?t ~= [])",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 8),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 8),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_app
                   (template_hole 6,
                    template_app (template_var 5, template_var 0)))),
              template_app
               (template_hole 5,
                template_app (template_var 5, template_var 0)))
            ),
        template_inequation (less_than, template_var 0, template_var 8),
        template_equation
         (template_app
           (template_app (template_var 7, template_var 0), template_var 1),
          template_hole 3)],
       template_negation
        (template_predicate (template_app (template_hole 1, t_empty))))),
    ("FR_proof.fr_Send6",
     "[| ALL i<?n.
            FlexRayController (?nReturn i) ?recv (?nC i) (?nStore i)
             (?nSend i) (?nGet i);
         DisjointSchedules ?n ?nC; IdenticCycleLength ?n ?nC;
         ?t mod cycleLength (?nC ?k) mem schedule (?nC ?k); ?k < ?n;
         ?nReturn ?k ?t ~= [] |]
      ==> EX k<?n. ?nSend k ?t ~= []",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 8),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 8),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_app
                   (template_hole 6,
                    template_app (template_var 5, template_var 0)))),
              template_app
               (template_hole 5,
                template_app (template_var 5, template_var 0)))
            ),
        template_inequation (less_than, template_var 0, template_var 8),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_var 7, template_var 0),
                template_var 1),
              template_hole 2)
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("FR_proof.fr_Send4",
     "[| ALL i<?n.
            FlexRayController (?nReturn i) ?recv (?nC i) (?nStore i)
             (?nSend i) (?nGet i);
         DisjointSchedules ?n ?nC; IdenticCycleLength ?n ?nC;
         ?t mod cycleLength (?nC ?k) mem schedule (?nC ?k); ?k < ?n;
         ?nReturn ?k ?t ~= [] |]
      ==> EX k. k < ?n --> ?nSend k ?t ~= []",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 8),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 8),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_app
                   (template_hole 5,
                    template_app (template_var 5, template_var 0)))),
              template_app
               (template_hole 4,
                template_app (template_var 5, template_var 0)))
            ),
        template_inequation (less_than, template_var 0, template_var 8),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_var 7, template_var 0),
                template_var 1),
              template_hole 1)
            )],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("FR_proof.length_nStore",
     "[| ALL i<?n.
            FlexRayController (?nReturn i) ?recv (?nC i) (?nStore i)
             (?nSend i) (?nGet i);
         DisjointSchedules ?n ?nC; IdenticCycleLength ?n ?nC;
         inf_disj ?n ?nSend; ?i < ?n; ALL i<?n. msg (Suc 0) (?nReturn i);
         Broadcast ?n ?nSend ?recv |]
      ==> length (?nStore ?i ?t) <= Suc 0",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 8),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 8),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 8),
              template_var 3)
            ),
        template_inequation (less_than, template_var 1, template_var 8),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 8),
                template_var 3),
              template_var 6)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 0,
           template_app
            (template_app (template_var 4, template_var 1),
             template_var 0)),
         template_app (template_hole 4, template_hole 3)))),
    ("FR_proof.fr_Send5",
     "[| ALL i<?n.
            FlexRayController (?nReturn i) ?recv (?nC i) (?nStore i)
             (?nSend i) (?nGet i);
         DisjointSchedules ?n ?nC; IdenticCycleLength ?n ?nC;
         ?t mod cycleLength (?nC ?k) mem schedule (?nC ?k); ?k < ?n;
         ?nReturn ?k ?t ~= []; ALL k<?n. ?nSend k ?t = [] |]
      ==> False",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 8),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 8),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_app
                   (template_hole 5,
                    template_app (template_var 5, template_var 0)))),
              template_app
               (template_hole 4,
                template_app (template_var 5, template_var 0)))
            ),
        template_inequation (less_than, template_var 0, template_var 8),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_var 7, template_var 0),
                template_var 1),
              template_hole 1)
            ),
        template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate (template_hole 0))),
    ("FR_proof.fr_nStore_nReturn3",
     "[| Cable ?n ?nSend ?recv;
         ALL i<?n.
            FlexRayController (?nReturn i) ?recv (?nC i) (?nStore i)
             (?nSend i) (?nGet i);
         DisjointSchedules ?n ?nC; IdenticCycleLength ?n ?nC;
         ?t mod cycleLength (?nC ?k) mem schedule (?nC ?k); ?k < ?n |]
      ==> ALL j. j < ?n & j ~= ?k --> ?nStore j ?t = ?nReturn ?k ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 8),
                template_var 7),
              template_var 6)
            ),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 8),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 8),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_app
                   (template_hole 5,
                    template_app (template_var 4, template_var 0)))),
              template_app
               (template_hole 4,
                template_app (template_var 4, template_var 0)))
            ),
        template_inequation (less_than, template_var 0, template_var 8)],
       template_predicate (template_app (template_hole 13, t_empty)))),
    ("FR_proof.fr_nStore_nReturn2",
     "[| Cable ?n ?nSend ?recv;
         ALL i<?n.
            FlexRayController (?nReturn i) ?recv (?nC i) (?nStore i)
             (?nSend i) (?nGet i);
         DisjointSchedules ?n ?nC; IdenticCycleLength ?n ?nC;
         ?t mod cycleLength (?nC ?k) mem schedule (?nC ?k); ?k < ?n;
         ?j < ?n; ?j ~= ?k |]
      ==> ?nStore ?j ?t = ?nReturn ?k ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 9),
                template_var 8),
              template_var 7)
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 9),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 9),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app
                   (template_hole 4,
                    template_app (template_var 5, template_var 1)))),
              template_app
               (template_hole 3,
                template_app (template_var 5, template_var 1)))
            ),
        template_inequation (less_than, template_var 1, template_var 9),
        template_inequation (less_than, template_var 0, template_var 9),
        template_negation
         (template_equation (template_var 0, template_var 1))],
       template_equation
        (template_app
          (template_app (template_var 4, template_var 0), template_var 2),
         template_app
          (template_app (template_var 6, template_var 1),
           template_var 2)))),
    ("FR_proof.fr_nStore_nReturn1",
     "[| Broadcast ?n ?nSend ?recv; inf_disj ?n ?nSend;
         ALL i<?n.
            FlexRayController (?nReturn i) ?recv (?nC i) (?nStore i)
             (?nSend i) (?nGet i);
         DisjointSchedules ?n ?nC; IdenticCycleLength ?n ?nC;
         ?t mod cycleLength (?nC ?k) mem schedule (?nC ?k); ?k < ?n;
         ?j < ?n; ?j ~= ?k |]
      ==> ?nStore ?j ?t = ?nReturn ?k ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 9),
                template_var 8),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 9),
              template_var 8)
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 9),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 9),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app
                   (template_hole 4,
                    template_app (template_var 5, template_var 1)))),
              template_app
               (template_hole 3,
                template_app (template_var 5, template_var 1)))
            ),
        template_inequation (less_than, template_var 1, template_var 9),
        template_inequation (less_than, template_var 0, template_var 9),
        template_negation
         (template_equation (template_var 0, template_var 1))],
       template_equation
        (template_app
          (template_app (template_var 4, template_var 0), template_var 2),
         template_app
          (template_app (template_var 6, template_var 1),
           template_var 2))))]
