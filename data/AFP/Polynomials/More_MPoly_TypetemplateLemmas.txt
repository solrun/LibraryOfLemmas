   [("More_MPoly_Type.vars_finite", "finite (vars ?p)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("More_MPoly_Type.polyfun_const", "polyfun ?N (%_. ?c)",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)
         )),
    ("More_MPoly_Type.reduce_nested_mpoly_extract_var",
     "reduce_nested_mpoly (extract_var ?p ?v) = ?p",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("More_MPoly_Type.v_not_in_vars_extract_var",
     "?v ~: vars (extract_var ?p ?v)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1)))
             )
         )),
    ("More_MPoly_Type.remove_key_single",
     "remove_key ?v (Poly_Mapping.single ?v ?n) = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("More_MPoly_Type.vars_monom_subset", "vars (monom ?m ?a) <= keys ?m",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("More_MPoly_Type.vars_extract_var_subset",
     "vars (extract_var ?p ?v) <= vars ?p",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("More_MPoly_Type.coeff_eq", "(coeff ?p = coeff ?q) = (?p = ?q)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("More_MPoly_Type.reduce_nested_mpoly_sum",
     "reduce_nested_mpoly (?p1.0 + ?p2.0) =
      reduce_nested_mpoly ?p1.0 + reduce_nested_mpoly ?p2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("More_MPoly_Type.reduce_nested_mpoly_prod",
     "reduce_nested_mpoly (?p1.0 * ?p2.0) =
      reduce_nested_mpoly ?p1.0 * reduce_nested_mpoly ?p2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("More_MPoly_Type.vars_mult", "vars (?p * ?q) <= vars ?p Un vars ?q",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("More_MPoly_Type.vars_add",
     "vars (?p1.0 + ?p2.0) <= vars ?p1.0 Un vars ?p2.0",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("More_MPoly_Type.vars_monom_single",
     "vars (monom (Poly_Mapping.single ?v ?k) ?a) <= {?v}",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2), template_hole 0))),
    ("More_MPoly_Type.vars_coeff_extract_var",
     "vars (coeff (extract_var ?p ?v) ?j) <= {?v}",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_hole 0))),
    ("More_MPoly_Type.polyfun_single", "?i : ?N ==> polyfun ?N (%x. x ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), t_empty)
           ))),
    ("More_MPoly_Type.coeff_monom",
     "coeff (monom ?m ?a) ?m' = (?a when ?m' = ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("More_MPoly_Type.insertion_replace_coeff",
     "insertion ?f (replace_coeff (insertion ?f) ?pp) =
      insertion ?f (reduce_nested_mpoly ?pp)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 2, template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("More_MPoly_Type.remove_key_keys",
     "keys ?f - {?k} = keys (remove_key ?k ?f)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("More_MPoly_Type.remove_term_sum",
     "remove_term ?m ?p + monom ?m (coeff ?p ?m) = ?p",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))),
       template_var 0)),
    ("More_MPoly_Type.remove_key_sum",
     "remove_key ?k ?f + Poly_Mapping.single ?k (lookup ?f ?k) = ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))),
       template_var 0)),
    ("More_MPoly_Type.coeff_keys",
     "(?m : keys (mapping_of ?p)) = (coeff ?p ?m ~= (0::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 0)))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1),
             template_hole 0)
           ))),
    ("More_MPoly_Type.coeff_all_0",
     "(!!m. coeff ?p m = (0::?'a)) ==> ?p = 0",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation (template_var 0, template_hole 0))),
    ("More_MPoly_Type.coeff_add",
     "coeff ?p ?m + coeff ?q ?m = coeff (?p + ?q) ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("More_MPoly_Type.remove_term_keys",
     "keys (mapping_of ?p) - {?m} = keys (mapping_of (remove_term ?m ?p))",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1))),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("More_MPoly_Type.extract_var_sum",
     "extract_var (?p + ?p') ?v = extract_var ?p ?v + extract_var ?p' ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("More_MPoly_Type.remove_key_add",
     "remove_key ?v ?m + remove_key ?v ?m' = remove_key ?v (?m + ?m')",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("More_MPoly_Type.vars_monom_keys",
     "?a ~= (0::?'a) ==> vars (monom ?m ?a) = keys ?m",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("More_MPoly_Type.vars_replace_coeff",
     "?f (0::?'b) = (0::?'a) ==> vars (replace_coeff ?f ?p) <= vars ?p",
     template_implication
      ([template_equation
         (template_app (template_var 1, template_hole 5), template_hole 4)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("More_MPoly_Type.polyfun_subset",
     "[| ?N <= ?N'; polyfun ?N ?f |] ==> polyfun ?N' ?f",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("More_MPoly_Type.remove_term_coeff",
     "coeff (remove_term ?m0.0 ?p) ?m = (coeff ?p ?m when ?m ~= ?m0.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)))
           ))),
    ("More_MPoly_Type.remove_key_lookup",
     "lookup (remove_key ?k0.0 ?f) ?k = (lookup ?f ?k when ?k ~= ?k0.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)))
           ))),
    ("More_MPoly_Type.insertion_nested_poly",
     "insertion ?f (insertion (%v. monom 0 (?f v)) ?pp) =
      insertion ?f (reduce_nested_mpoly ?pp)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("More_MPoly_Type.insertion_single",
     "insertion ?f (monom (Poly_Mapping.single ?v ?n) ?a) =
      ?a * ?f ?v ^ ?n",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 3),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_var 3, template_var 2)),
           template_var 1)))),
    ("More_MPoly_Type.coeff_monom_mult",
     "coeff (monom ?m' ?a * ?q) (?m' + ?m) = ?a * coeff ?q ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2)),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 3), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 0)))),
    ("More_MPoly_Type.extract_var_single",
     "extract_var (monom (Poly_Mapping.single ?v ?n) ?a) ?v =
      monom 0 (monom (Poly_Mapping.single ?v ?n) ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_var 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("More_MPoly_Type.vars_monom",
     "?a ~= (0::?'a) ==> vars (monom ?m (1::?'a)) = vars (monom ?m ?a)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("More_MPoly_Type.fun_when",
     "?f (0::?'b) = (0::?'a) ==> ?f (?a when ?P) = (?f ?a when ?P)",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_hole 3), template_hole 2)],
       template_equation
        (template_app
          (template_var 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_var 2, template_var 1)),
           template_var 0)))),
    ("More_MPoly_Type.coeff_replace_coeff",
     "?f (0::?'b) = (0::?'a) ==>
      coeff (replace_coeff ?f ?p) ?m = ?f (coeff ?p ?m)",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_hole 4), template_hole 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_var 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("More_MPoly_Type.replace_coeff_monom",
     "?f (0::?'b) = (0::?'a) ==>
      replace_coeff ?f (monom ?m ?a) = monom ?m (?f ?a)",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_hole 5), template_hole 4)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_var 2, template_var 0))))),
    ("More_MPoly_Type.map_lookup",
     "?g (0::?'b) = (0::?'a) ==>
      lookup (Poly_Mapping.map ?g ?f) ?x = ?g (lookup ?f ?x)",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_hole 4), template_hole 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_var 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("More_MPoly_Type.insertion_fun_single",
     "insertion_fun ?f (%m. ?a when Poly_Mapping.single ?v ?n = m) =
      ?a * ?f ?v ^ ?n",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 3), t_empty),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_var 3, template_var 1)),
           template_var 0)))),
    ("More_MPoly_Type.monom_pow",
     "monom (Poly_Mapping.single ?v ?n0.0) ?a ^ ?n =
      monom (Poly_Mapping.single ?v (?n0.0 * ?n)) (?a ^ ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("More_MPoly_Type.extract_var_monom",
     "extract_var (monom ?m ?a) ?v =
      monom (remove_key ?v ?m)
       (monom (Poly_Mapping.single ?v (lookup ?m ?v)) ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0))),
           template_var 1)))),
    ("More_MPoly_Type.vars_setsum",
     "finite ?S ==> vars (sum ?f ?S) <= (UN m:?S. vars (?f m))",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 1))))),
    ("More_MPoly_Type.polyfun_add",
     "[| polyfun ?N ?f; polyfun ?N ?g |] ==> polyfun ?N (%x. ?f x + ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("More_MPoly_Type.polyfun_mult",
     "[| polyfun ?N ?f; polyfun ?N ?g |] ==> polyfun ?N (%x. ?f x * ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("More_MPoly_Type.vars_monom_single_cases",
     "vars (monom (Poly_Mapping.single ?v ?k) ?a) =
      (if ?k = 0 | ?a = (0::?'a) then {} else {?v})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 1),
                       template_hole 4)),
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_hole 2))),
               template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_hole 1))
           ))),
    ("More_MPoly_Type.keys_add",
     "keys ?f Int keys ?g = {} ==> keys ?f Un keys ?g = keys (?f + ?g)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            template_app (template_hole 3, template_var 0)),
          template_hole 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 1)),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("More_MPoly_Type.replace_coeff_extract_var_cong",
     "?f ?v = ?g ?v ==>
      replace_coeff (insertion ?f) (extract_var ?p ?v) =
      replace_coeff (insertion ?g) (extract_var ?p ?v)",
     template_implication
      ([template_equation
         (template_app (template_var 3, template_var 2),
          template_app (template_var 1, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 3)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("More_MPoly_Type.extract_var_monom_mult",
     "extract_var (monom (?m + ?m') (?a * ?b)) ?v =
      extract_var (monom ?m ?a) ?v * extract_var (monom ?m' ?b) ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 3)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 2)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 1)),
           template_var 0)))),
    ("More_MPoly_Type.lookup_Abs_poly_mapping_when_finite",
     "finite ?S ==>
      lookup (Abs_poly_mapping (%x. ?f x when x : ?S)) =
      (%x. ?f x when x : ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         t_empty))),
    ("More_MPoly_Type.extract_var_single'",
     "?v ~= ?v' ==>
      extract_var (monom (Poly_Mapping.single ?v ?n) ?a) ?v' =
      monom (Poly_Mapping.single ?v ?n) (monom 0 ?a)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 1)),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 3, template_hole 0),
             template_var 0))))),
    ("More_MPoly_Type.insertion_irrelevant_vars",
     "(!!v. v : vars ?p ==> ?f v = ?g v) ==>
      insertion ?f ?p = insertion ?g ?p",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("More_MPoly_Type.one_term_is_monomial",
     "[| card (keys (mapping_of ?p)) <= 1;
         !!m. ?p = monom m (coeff ?p m) ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1))),
          template_hole 4),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("More_MPoly_Type.vars_add_monom",
     "[| ?p2.0 = monom ?m ?a; ?m ~: keys (mapping_of ?p1.0) |]
      ==> vars (?p1.0 + ?p2.0) = vars ?p1.0 Un vars ?p2.0",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 8, template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 0)))
                )
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 3)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 2, template_var 3))))),
    ("More_MPoly_Type.polyfun_Sum",
     "[| finite ?I; !!i. i : ?I ==> polyfun ?N (?f i) |]
      ==> polyfun ?N (%x. SUM i:?I. ?f i x)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("More_MPoly_Type.polyfun_Prod",
     "[| finite ?I; !!i. i : ?I ==> polyfun ?N (?f i) |]
      ==> polyfun ?N (%x. PROD i:?I. ?f i x)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("More_MPoly_Type.extract_var_non_zero_coeff",
     "extract_var ?p ?v =
      (SUM m:{m'. coeff ?p m' ~= (0::?'a)}.
          monom (remove_key ?v m)
           (monom (Poly_Mapping.single ?v (lookup m ?v)) (coeff ?p m)))",
     template_equation
      (template_app
        (template_app (template_hole 11, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 10, t_empty),
         template_app (template_hole 3, t_empty)))),
    ("More_MPoly_Type.polyfunI",
     "(!!P. (!!p. [| vars p <= ?N; !!x. insertion x p = ?f x |] ==> P) ==>
            P) ==>
      polyfun ?N ?f",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("More_MPoly_Type.insertion_fun_irrelevant_vars",
     "(!!m v. [| ?p m ~= (0::?'a); lookup m v ~= 0 |] ==> ?f v = ?g v) ==>
      insertion_fun ?f ?p = insertion_fun ?g ?p",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("More_MPoly_Type.insertion_aux_irrelevant_vars",
     "(!!m v.
          [| lookup ?p m ~= (0::?'a); lookup m v ~= 0 |]
          ==> ?f v = ?g v) ==>
      insertion_aux ?f ?p = insertion_aux ?g ?p",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("More_MPoly_Type.replace_coeff_add",
     "[| ?f (0::?'b) = (0::?'a); !!a b. ?f (a + b) = ?f a + ?f b |]
      ==> replace_coeff ?f (?p1.0 + ?p2.0) =
          replace_coeff ?f ?p1.0 + replace_coeff ?f ?p2.0",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_hole 8), template_hole 7),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("More_MPoly_Type.extract_var_finite_set",
     "[| {m'. coeff ?p m' ~= (0::?'a)} <= ?S; finite ?S |]
      ==> extract_var ?p ?v =
          (SUM m:?S.
              monom (remove_key ?v m)
               (monom (Poly_Mapping.single ?v (lookup m ?v))
                 (coeff ?p m)))",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 13, t_empty),
          template_var 1),
        template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 5, t_empty), template_var 1)))),
    ("More_MPoly_Type.poly_mapping_induct",
     "[| !!k v. ?P (Poly_Mapping.single k v);
         !!f g k v.
            [| ?P f; ?P g; g = Poly_Mapping.single k v; k ~: keys f |]
            ==> ?P (f + g) |]
      ==> ?P ?f",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("More_MPoly_Type.mpoly_induct",
     "[| !!m a. ?P (monom m a);
         !!p1 p2 m a.
            [| ?P p1; ?P p2; p2 = monom m a; m ~: keys (mapping_of p1) |]
            ==> ?P (p1 + p2) |]
      ==> ?P ?p",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (template_app (template_var 1, template_var 0))))]
