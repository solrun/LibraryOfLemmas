   [("MPoly_Type_Class.fst_to_pair_unit", "fst (to_pair_unit ?x) = ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("MPoly_Type_Class.to_pair_unit_fst", "to_pair_unit (fst ?x) = ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("MPoly_Type_Class.map_scale_zero_left", "(0::?'b) \<cdot> ?t = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("MPoly_Type_Class.map_scale_zero_right", "?k \<cdot> 0 = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("MPoly_Type_Class.map_scale_one_left", "(1::?'b) \<cdot> ?t = ?t",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("MPoly_Type_Class.keys_uminus", "keys (- ?p) = keys ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("MPoly_Type_Class.is_monomial_uminus",
     "is_monomial (- ?p) = is_monomial ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("MPoly_Type_Class.keys_sum_list_subset",
     "keys (sum_list ?ps) <= Keys (set ?ps)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("MPoly_Type_Class.keys_map_scale_subset",
     "keys (?k \<cdot> ?t) <= keys ?t",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("MPoly_Type_Class.monomial_not_0", "is_monomial ?p ==> ?p ~= 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("MPoly_Type_Class.deg_pm_map_scale",
     "deg_pm (?k \<cdot> ?t) = ?k * deg_pm ?t",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("MPoly_Type_Class.monomial_0_iff",
     "(monomial ?c ?t = 0) = (?c = (0::?'b))",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("MPoly_Type_Class.map_scale_uminus_right",
     "?k \<cdot> - ?p = - (?k \<cdot> ?p)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("MPoly_Type_Class.map_scale_uminus_left",
     "- ?k \<cdot> ?p = - (?k \<cdot> ?p)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("MPoly_Type_Class.map_scale_uminus_uminus",
     "- ?k \<cdot> - ?p = ?k \<cdot> ?p",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("MPoly_Type_Class.monomial_uminus",
     "- monomial ?c ?s = monomial (- ?c) ?s",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("MPoly_Type_Class.map_scale_eq_times",
     "?c \<cdot> ?p = monomial ?c (0::?'a) * ?p",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_var 0))),
    ("MPoly_Type_Class.map_scale_Suc",
     "Suc ?k \<cdot> ?t = ?k \<cdot> ?t + ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_var 0))),
    ("MPoly_Type_Class.keys_minus", "keys (?p - ?q) <= keys ?p Un keys ?q",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("MPoly_Type_Class.monomial_0I", "?c = (0::?'a) ==> monomial ?c ?t = 0",
     template_implication
      ([template_equation (template_var 1, template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("MPoly_Type_Class.monomial_is_monomial",
     "?c ~= (0::?'a) ==> is_monomial (monomial ?c ?t)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("MPoly_Type_Class.monomial_0D", "monomial ?c ?t = 0 ==> ?c = (0::?'b)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_hole 2)],
       template_equation (template_var 0, template_hole 0))),
    ("MPoly_Type_Class.lookup_map_scale",
     "lookup (?c \<cdot> ?p) = (%x. ?c * lookup ?p x)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       t_empty)),
    ("MPoly_Type_Class.mapp_2_mapp",
     "mapp_2 (%t a. ?f t) 0 ?p = Poly_Mapping.mapp ?f ?p",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, t_empty), template_hole 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("MPoly_Type_Class.map_scale_single",
     "?k \<cdot> monomial ?l ?x = monomial (?k * ?l) ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("MPoly_Type_Class.map_scale_assoc",
     "?c \<cdot> ?d \<cdot> ?t = (?c * ?d) \<cdot> ?t",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("MPoly_Type_Class.poly_mapping_sum_monomials",
     "(SUM a:keys ?p. monomial (lookup ?p a) a) = ?p",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("MPoly_Type_Class.keys_mapp_subset",
     "keys (mapp_2 ?f ?p ?q) <= keys ?p Un keys ?q",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("MPoly_Type_Class.lookup_sum_list",
     "lookup (sum_list ?ps) ?a = (SUM p<-?ps. lookup p ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("MPoly_Type_Class.keys_map_scale",
     "keys (?k \<cdot> ?t) = (if ?k = (0::?'b) then {} else keys ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_hole 1)),
               template_hole 0),
             template_app (template_hole 5, template_var 0))
           ))),
    ("MPoly_Type_Class.times_monomial_left",
     "monomial ?c ?t * ?p = punit.monom_mult ?c ?t ?p",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0),
             template_var 1),
           template_var 2),
         template_var 0))),
    ("MPoly_Type_Class.keys_sum_subset",
     "keys (sum ?b ?I) <= (UN i:?I. keys (?b i))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("MPoly_Type_Class.map_scale_eq_0_iff",
     "(?c \<cdot> ?t = 0) = (?c = (0::?'b) | ?t = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_hole 3),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)),
             template_app
              (template_app (template_hole 5, template_var 0),
               template_hole 3))
           ))),
    ("MPoly_Type_Class.map_scale_distrib_left",
     "?k \<cdot> (?s + ?t) = ?k \<cdot> ?s + ?k \<cdot> ?t",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("MPoly_Type_Class.map_scale_sum_distrib_left",
     "?k \<cdot> sum ?f ?A = (SUM a:?A. ?k \<cdot> ?f a)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("MPoly_Type_Class.map_scale_distrib_right",
     "(?k + ?l) \<cdot> ?t = ?k \<cdot> ?t + ?l \<cdot> ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("MPoly_Type_Class.map_scale_sum_distrib_right",
     "sum ?f ?A \<cdot> ?p = (SUM a:?A. ?f a \<cdot> ?p)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, t_empty), template_var 1))),
    ("MPoly_Type_Class.monomial_sum",
     "monomial (sum ?f ?C) ?a = (SUM c:?C. monomial (?f c) ?a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("MPoly_Type_Class.map_scale_minus_distrib_left",
     "?k \<cdot> (?p - ?q) = ?k \<cdot> ?p - ?k \<cdot> ?q",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("MPoly_Type_Class.map_scale_minus_distrib_right",
     "(?k - ?l) \<cdot> ?f = ?k \<cdot> ?f - ?l \<cdot> ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("MPoly_Type_Class.keys_of_monomial",
     "?c ~= (0::?'a) ==> keys (monomial ?c ?t) = {?t}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("MPoly_Type_Class.sum_poly_mapping_eq_zeroI",
     "?p ` ?A <= {0} ==> sum ?p ?A = 0",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 1), template_var 0),
          template_app
           (template_app (template_hole 4, template_hole 3),
            template_hole 2))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_hole 3))),
    ("MPoly_Type_Class.times_monomial_monomial",
     "monomial ?c ?t * monomial ?d ?v = monomial (?c * ?d) (?t + ?v)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("MPoly_Type_Class.keys_subset_singleton_imp_monomial",
     "keys ?p <= {?t} ==> monomial (lookup ?p ?t) ?t = ?p",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 5, template_var 1),
          template_app
           (template_app (template_hole 4, template_var 0),
            template_hole 3))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1))),
    ("MPoly_Type_Class.punit_monom_mult_monomial",
     "punit.monom_mult ?c ?s (monomial ?d ?v) =
      monomial (?c * ?d) (?s + ?v)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_hole 3),
             template_var 3),
           template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("MPoly_Type_Class.lookup_times_monomial_right",
     "lookup (?p * monomial ?c ?t) ?s =
      (lookup ?p (?s - ?t) * ?c when ?t adds ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 3),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 6, template_var 3),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 2))),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("MPoly_Type_Class.lookup_times_monomial_left",
     "lookup (monomial ?c ?t * ?p) ?s =
      (?c * lookup ?p (?s - ?t) when ?t adds ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 6, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 3)))),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("MPoly_Type_Class.times_rec_right",
     "?p * ?q = ?p * monomial (lookup ?q ?v) ?v + ?p * except ?q {?v}",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2), template_var 1),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)))),
         template_app
          (template_app (template_hole 6, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))))),
    ("MPoly_Type_Class.keys_plus_eqI",
     "keys ?p Int keys ?q = {} ==> keys (?p + ?q) = keys ?p Un keys ?q",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            template_app (template_hole 3, template_var 0)),
          template_hole 2)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 1)),
           template_app (template_hole 3, template_var 0))))),
    ("MPoly_Type_Class.when_distrib",
     "(~ ?b ==> ?f (0::?'b) = (0::?'a)) ==>
      ?f (?a when ?b) = (?f ?a when ?b)",
     template_implication
      ([template_implication
         ([template_negation (template_predicate (template_var 2))],
          template_equation
           (template_app (template_var 1, template_hole 3),
            template_hole 2))],
       template_equation
        (template_app
          (template_var 1,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_var 1, template_var 0)),
           template_var 2)))),
    ("MPoly_Type_Class.in_keys_plusI1",
     "[| ?t : keys ?p; ?t ~: keys ?q |] ==> ?t : keys (?p + ?q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_hole 2, template_var 0))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("MPoly_Type_Class.in_keys_plusI2",
     "[| ?t : keys ?q; ?t ~: keys ?p |] ==> ?t : keys (?p + ?q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_hole 2, template_var 0))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("MPoly_Type_Class.times_rec_left",
     "?p * ?q =
      punit.monom_mult (lookup ?p ?t) ?t ?q + except ?p {?t} * ?q",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 2), template_var 1),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_hole 4),
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 0)),
               template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0))),
           template_var 1)))),
    ("MPoly_Type_Class.monomial_Sum_any",
     "finite {c. ?f c ~= (0::?'b)} ==>
      monomial (Sum_any ?f) ?a = (SUM c. monomial (?f c) ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8, template_app (template_hole 7, t_empty))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, t_empty)))),
    ("MPoly_Type_Class.lookup_mapp_2",
     "lookup (mapp_2 ?f ?p ?q) ?k =
      (?f ?k (lookup ?p ?k) (lookup ?q ?k) when ?k : keys ?p Un keys ?q)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_var 3, template_var 0),
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_app (template_hole 0, template_var 1)))))),
    ("MPoly_Type_Class.lookup_mapp_2_homogenous",
     "?f ?k (0::?'c) (0::?'d) = (0::?'a) ==>
      lookup (mapp_2 ?f ?p ?q) ?k = ?f ?k (lookup ?p ?k) (lookup ?q ?k)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_var 3, template_var 2),
              template_hole 6),
            template_hole 5),
          template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_app (template_var 3, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("MPoly_Type_Class.monomial_inj",
     "monomial ?c ?s = monomial ?d ?t ==>
      ?c = (0::?'b) & ?d = (0::?'b) | ?c = ?d & ?s = ?t",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_hole 1)),
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 1))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)))
           ))),
    ("MPoly_Type_Class.is_monomial_monomial",
     "[| is_monomial ?p;
         !!c t. [| c ~= (0::?'b); ?p = monomial c t |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("MPoly_Type_Class.lookup_times",
     "lookup (?p * ?q) ?u =
      (SUM t:keys ?p.
          lookup ?p t * (SUM v:keys ?q. lookup ?q v when ?u = t + v))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 5, t_empty),
         template_app (template_hole 0, template_var 2)))),
    ("MPoly_Type_Class.in_keys_timesE",
     "[| ?v : keys (?p * ?q);
         !!t u. [| t : keys ?p; u : keys ?q; ?v = t + u |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("MPoly_Type_Class.keys_sum",
     "[| finite ?A;
         !!a1 a2.
            [| a1 : ?A; a2 : ?A; a1 ~= a2 |]
            ==> keys (?f a1) Int keys (?f a2) = {} |]
      ==> keys (sum ?f ?A) = (UN a:?A. keys (?f a))",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 1))))),
    ("MPoly_Type_Class.mapp_2_cong",
     "[| ?p = ?p'; ?q = ?q';
         !!k. k : keys ?p' Un keys ?q' ==>
              ?f k (lookup ?p' k) (lookup ?q' k) =
              ?f' k (lookup ?p' k) (lookup ?q' k) |]
      ==> mapp_2 ?f ?p ?q = mapp_2 ?f' ?p' ?q'",
     template_implication
      ([template_equation (template_var 5, template_var 4),
        template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 5),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 4),
           template_var 2))))]
