   [("MPoly_Type.finite_coeffs", "finite (coeffs ?p)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("MPoly_Type.inj_monom", "inj (monom ?m)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("MPoly_Type.insertion_one", "insertion ?f 1 = (1::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("MPoly_Type.insertion_zero", "insertion ?f 0 = (0::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("MPoly_Type.degree_zero", "degree 0 ?v = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("MPoly_Type.degree_one", "degree 1 ?v = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("MPoly_Type.smult_0", "smult (0::?'b) ?p = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("MPoly_Type.Const\<^sub>0_numeral",
     "Const\<^sub>0 (numeral ?x) = numeral ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("MPoly_Type.monom_of_int", "monom 0 (of_int ?k) = of_int ?k",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("MPoly_Type.monom_of_nat", "monom 0 (of_nat ?n) = of_nat ?n",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("MPoly_Type.monom_numeral", "monom 0 (numeral ?n) = numeral ?n",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("MPoly_Type.Const\<^sub>0_minus",
     "Const\<^sub>0 (- ?x) = - Const\<^sub>0 ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("MPoly_Type.insertion_trivial",
     "insertion (%_. 0::?'a) ?p = coeff ?p 0",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("MPoly_Type.pmod_code", "?p pmod ?q = snd (pdivmod ?p ?q)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("MPoly_Type.div_poly_code",
     "?p div ?q = fst (MPoly_Type.divmod ?p ?q)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("MPoly_Type.mod_poly_code",
     "?p mod ?q = snd (MPoly_Type.divmod ?p ?q)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("MPoly_Type.pdiv_code", "?p pdiv ?q = fst (pdivmod ?p ?q)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("MPoly_Type.mapping_of_monom",
     "mapping_of (monom ?m ?a) = Poly_Mapping.single ?m ?a",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("MPoly_Type.aux", "(poly_mapping.lookup ?f = (%_. 0::?'b)) = (?f = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), t_empty),
       template_equation (template_var 0, template_hole 0))),
    ("MPoly_Type.smult_conv_mult", "smult ?s ?p = monom 0 ?s * ?p",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_var 0))),
    ("MPoly_Type.monom_uminus", "monom ?m (- ?a) = - monom ?m ?a",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("MPoly_Type.Var\<^sub>0_power",
     "Var\<^sub>0 ?v ^ ?n =
      Poly_Mapping.single (Poly_Mapping.single ?v ?n) (1::?'b)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("MPoly_Type.mult_smult_left", "smult ?s ?p * ?q = smult ?s (?p * ?q)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("MPoly_Type.smult_monom",
     "smult ?c (monom ?x ?c') = monom ?x (?c * ?c')",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("MPoly_Type.insertion_add",
     "insertion ?f (?p + ?q) = insertion ?f ?p + insertion ?f ?q",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("MPoly_Type.insertion_mult",
     "insertion ?f (?p * ?q) = insertion ?f ?p * insertion ?f ?q",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("MPoly_Type.monom_add",
     "monom ?m (?a + ?b) = monom ?m ?a + monom ?m ?b",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("MPoly_Type.monom_diff",
     "monom ?m (?a - ?b) = monom ?m ?a - monom ?m ?b",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("MPoly_Type.mult_monom",
     "monom ?x ?a * monom ?y ?b = monom (?x + ?y) (?a * ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("MPoly_Type.insertion_fun_add",
     "insertion_fun ?f (poly_mapping.lookup (?p + ?q)) =
      insertion_fun ?f (poly_mapping.lookup ?p) +
      insertion_fun ?f (poly_mapping.lookup ?q)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app (template_hole 2, template_var 0))))),
    ("MPoly_Type.insertion_fun_mult",
     "insertion_fun ?f (poly_mapping.lookup (?p * ?q)) =
      insertion_fun ?f (poly_mapping.lookup ?p) *
      insertion_fun ?f (poly_mapping.lookup ?q)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app (template_hole 2, template_var 0)))))]
