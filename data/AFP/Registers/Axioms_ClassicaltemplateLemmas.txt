   [("Axioms_Classical.preregister_mult_right",
     "preregister (%a. a \<circ>\<^sub>m ?z)",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("Axioms_Classical.preregister_mult_left",
     "preregister ((\<circ>\<^sub>m) ?z)",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("Axioms_Classical.id_update_right", "?a \<circ>\<^sub>m Some = ?a",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Axioms_Classical.id_update_left", "Some \<circ>\<^sub>m ?a = ?a",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Axioms_Classical.register_preregister",
     "register ?F ==> preregister ?F",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Axioms_Classical.register_of_id", "register ?F ==> ?F Some = Some",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_var 0, template_hole 1), template_hole 0))),
    ("Axioms_Classical.comp_update_assoc",
     "?a \<circ>\<^sub>m ?b \<circ>\<^sub>m ?c =
      ?a \<circ>\<^sub>m (?b \<circ>\<^sub>m ?c)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Axioms_Classical.getter_of_register_from_getter_setter",
     "valid_getter_setter ?g ?s ==>
      getter (register_from_getter_setter ?g ?s) = ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1))),
    ("Axioms_Classical.setter_of_register_from_getter_setter",
     "valid_getter_setter ?g ?s ==>
      setter (register_from_getter_setter ?g ?s) = ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Axioms_Classical.comp_preregister",
     "[| preregister ?F; preregister ?G |] ==> preregister (?G o ?F)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Axioms_Classical.register_comp",
     "[| register ?F; register ?G |] ==> register (?G o ?F)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Axioms_Classical.register_mult",
     "register ?F ==>
      ?F ?a \<circ>\<^sub>m ?F ?b = ?F (?a \<circ>\<^sub>m ?b)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_var 2, template_var 1)),
           template_app (template_var 2, template_var 0)),
         template_app
          (template_var 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Axioms_Classical.tensor_update_mult",
     "tensor_update ?a ?c \<circ>\<^sub>m tensor_update ?b ?d =
      tensor_update (?a \<circ>\<^sub>m ?b) (?c \<circ>\<^sub>m ?d)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Axioms_Classical.update1_extensionality",
     "[| preregister ?F; preregister ?G;
         !!x y. ?F (update1 x y) = ?G (update1 x y) |]
      ==> ?F = ?G",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Axioms_Classical.tensor_extensionality",
     "[| preregister ?F; preregister ?G;
         !!a b. ?F (tensor_update a b) = ?G (tensor_update a b) |]
      ==> ?F = ?G",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Axioms_Classical.register_pair_is_register",
     "[| register ?F; register ?G;
         !!a b. ?F a \<circ>\<^sub>m ?G b = ?G b \<circ>\<^sub>m ?F a |]
      ==> register (register_pair ?F ?G)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Axioms_Classical.register_pair_apply",
     "[| register ?F; register ?G;
         !!a b. ?F a \<circ>\<^sub>m ?G b = ?G b \<circ>\<^sub>m ?F a |]
      ==> register_pair ?F ?G (tensor_update ?a ?b) =
          ?F ?a \<circ>\<^sub>m ?G ?b",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_var 3, template_var 1)),
           template_app (template_var 2, template_var 0))))),
    ("Axioms_Classical.compatible_setter",
     "[| register ?F; register ?G;
         !!a b. ?F a \<circ>\<^sub>m ?G b = ?G b \<circ>\<^sub>m ?F a |]
      ==> setter ?F ?x o setter ?G ?y = setter ?G ?y o setter ?F ?x",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)))))]
