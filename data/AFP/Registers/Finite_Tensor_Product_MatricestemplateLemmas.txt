   [("Finite_Tensor_Product_Matrices.tensor_op_jnf_dim",
     "dim_col (tensor_op_jnf ?a ?b) = dim_col ?a * dim_col ?b",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Finite_Tensor_Product_Matrices.tensor_op_jnf_dim",
     "dim_row (tensor_op_jnf ?a ?b) = dim_row ?a * dim_row ?b",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Finite_Tensor_Product_Matrices.tensor_state_jnf_dim",
     "dim_vec (tensor_state_jnf ?\<psi> ?\<phi>) =
      dim_vec ?\<psi> * dim_vec ?\<phi>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Finite_Tensor_Product_Matrices.mat_of_cblinfun_tensor_op",
     "mat_of_cblinfun (?a \<otimes>\<^sub>o ?b) =
      tensor_op_jnf (mat_of_cblinfun ?a) (mat_of_cblinfun ?b)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Finite_Tensor_Product_Matrices.vec_of_basis_enum_tensor_state",
     "vec_of_basis_enum (?\<psi> \<otimes>\<^sub>s ?\<phi>) =
      tensor_state_jnf (vec_of_basis_enum ?\<psi>)
       (vec_of_basis_enum ?\<phi>)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Finite_Tensor_Product_Matrices.tensor_unpack_bound1",
     "?i < ?A * ?B ==> fst (tensor_unpack ?A ?B ?i) < ?A",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2)),
         template_var 1))),
    ("Finite_Tensor_Product_Matrices.tensor_unpack_bound2",
     "?i < ?A * ?B ==> snd (tensor_unpack ?A ?B ?i) < ?B",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2)),
         template_var 0))),
    ("Finite_Tensor_Product_Matrices.tensor_unpack_fstfst",
     "fst (tensor_unpack ?A ?B (fst (tensor_unpack (?A * ?B) ?C ?i))) =
      fst (tensor_unpack ?A (?B * ?C) ?i)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2)),
                 template_var 1),
               template_var 0)))),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Finite_Tensor_Product_Matrices.tensor_unpack_sndsnd",
     "snd (tensor_unpack ?B ?C (snd (tensor_unpack ?A (?B * ?C) ?i))) =
      snd (tensor_unpack (?A * ?B) ?C ?i)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2)),
               template_var 0)))),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3)),
             template_var 2),
           template_var 0)))),
    ("Finite_Tensor_Product_Matrices.tensor_unpack_fstsnd",
     "fst (tensor_unpack ?B ?C (snd (tensor_unpack ?A (?B * ?C) ?i))) =
      snd (tensor_unpack ?A ?B (fst (tensor_unpack (?A * ?B) ?C ?i)))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2)),
               template_var 0)))),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_var 3),
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 3)),
                 template_var 2),
               template_var 0)))))),
    ("Finite_Tensor_Product_Matrices.tensor_unpack_inj",
     "[| ?i < ?A * ?B; ?j < ?A * ?B |]
      ==> (tensor_unpack ?A ?B ?i = tensor_unpack ?A ?B ?j) = (?i = ?j)",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 3),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0)),
         template_equation (template_var 3, template_var 0)))),
    ("Finite_Tensor_Product_Matrices.enum_prod_nth_tensor_unpack",
     "?i < CARD(?'a) * CARD(?'b) ==>
      enum_class.enum ! ?i =
      (let (i1, i2) = tensor_unpack CARD(?'a) CARD(?'b) ?i
       in (enum_class.enum ! i1, enum_class.enum ! i2))",
     template_implication
      ([template_inequation
         (less_than, template_var 0,
          template_app
           (template_app
             (template_hole 15,
              template_app (template_hole 14, template_hole 13)),
            template_app (template_hole 12, template_hole 11)))],
       template_equation
        (template_app
          (template_app (template_hole 9, template_hole 8), template_var 0),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 14, template_hole 13)),
                 template_app (template_hole 12, template_hole 11)),
               template_var 0)),
           template_app (template_hole 5, t_empty))))),
    ("Finite_Tensor_Product_Matrices.vec_of_basis_enum_tensor_state_index",
     "?i < CARD(?'a) * CARD(?'b) ==>
      vec_of_basis_enum (?\<psi> \<otimes>\<^sub>s ?\<phi>) $ ?i =
      (let (i1, i2) = tensor_unpack CARD(?'a) CARD(?'b) ?i
       in vec_of_basis_enum ?\<psi> $ i1 * vec_of_basis_enum ?\<phi> $ i2)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app
             (template_hole 14,
              template_app (template_hole 13, template_hole 12)),
            template_app (template_hole 11, template_hole 10)))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 0))),
           template_var 2),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 13, template_hole 12)),
                 template_app (template_hole 11, template_hole 10)),
               template_var 2)),
           template_app (template_hole 3, t_empty))))),
    ("Finite_Tensor_Product_Matrices.mat_of_cblinfun_tensor_op_index",
     "[| ?i < CARD(?'b) * CARD(?'d); ?j < CARD(?'a) * CARD(?'c) |]
      ==> mat_of_cblinfun (?a \<otimes>\<^sub>o ?b) $$ (?i, ?j) =
          (let (i1, i2) = tensor_unpack CARD(?'b) CARD(?'d) ?i;
               (j1, j2) = tensor_unpack CARD(?'a) CARD(?'c) ?j
           in mat_of_cblinfun ?a $$ (i1, j1) *
              mat_of_cblinfun ?b $$ (i2, j2))",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app
           (template_app
             (template_hole 19,
              template_app (template_hole 18, template_hole 17)),
            template_app (template_hole 16, template_hole 15))),
        template_inequation
         (less_than, template_var 2,
          template_app
           (template_app
             (template_hole 19,
              template_app (template_hole 14, template_hole 13)),
            template_app (template_hole 12, template_hole 11)))],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_var 0))),
           template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 18, template_hole 17)),
                 template_app (template_hole 16, template_hole 15)),
               template_var 3)),
           template_app (template_hole 3, t_empty)))))]
