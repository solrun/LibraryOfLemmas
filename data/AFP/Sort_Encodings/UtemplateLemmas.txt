   [("Set.subset_UNIV", "?A <= UNIV",
     template_inequation (less_equals, template_var 0, template_hole 0)),
    ("Set.UNIV_I", "?x : UNIV",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Series.sums_Uniq", "?< a. ?f sums a",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("Complete_Lattices.Union_Pow_eq", "\<Union> (Pow ?A) = ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Set.Diff_UNIV", "?A - UNIV = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Hull.hull_UNIV", "?S hull UNIV = UNIV",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Set.Int_UNIV_right", "?A Int UNIV = ?A",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Set.Int_UNIV_left", "UNIV Int ?B = ?B",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Set.Un_absorb", "?A Un ?A = ?A",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("Set.Un_empty_right", "?A Un {} = ?A",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Set.Un_UNIV_right", "?A Un UNIV = UNIV",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Set.Un_empty_left", "{} Un ?B = ?B",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Set.Un_UNIV_left", "UNIV Un ?B = UNIV",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Set.insert_UNIV", "insert ?x UNIV = UNIV",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Set.vimage_UNIV", "?f -` UNIV = UNIV",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("HOL.ASSUMPTION_cong", "ASSUMPTION ?A = ASSUMPTION ?A",
     template_equation
      (template_app (template_hole 0, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Countable_Set_Type.cUn_absorb", "cUn ?A ?A = ?A",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("Countable_Set_Type.cUn_cempty_right", "cUn ?A cempty = ?A",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Countable_Set_Type.cUn_cempty_left", "cUn cempty ?B = ?B",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Set.Un_upper1", "?A <= ?A Un ?B",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Set.Un_upper2", "?B <= ?A Un ?B",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Complete_Lattices.subset_Pow_Union", "?A <= Pow (\<Union> ?A)",
     template_inequation
      (less_equals, template_var 0,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Countable_Set_Type.cUn_upper1", "csubset_eq ?A (cUn ?A ?B)",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Countable_Set_Type.cUn_upper2", "csubset_eq ?B (cUn ?A ?B)",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Relation.sym_Un_converse", "sym (?r Un ?r^-1)",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 0)))
         )),
    ("HOL.ASSUMPTION_I", "?A ==> ASSUMPTION ?A",
     template_implication
      ([template_predicate (template_var 0)],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("HOL.ASSUMPTION_D", "ASSUMPTION ?A ==> ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate (template_var 0))),
    ("Set.Compl_eq_Diff_UNIV", "- ?A = UNIV - ?A",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Set.ball_UNIV", "Ball UNIV ?P = All ?P",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Set.bex_UNIV", "Bex UNIV ?P = Ex ?P",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Countable_Set_Type.cUN_empty", "cUnion (cimage ?B cempty) = cempty",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_hole 0)),
    ("Order_Relation_More.Under_Field", "Under ?r ?A <= Field ?r",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("Order_Relation_More.UnderS_Field", "UnderS ?r ?A <= Field ?r",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("Countable_Set_Type.Union_conv_UNION",
     "\<Union> ?A = \<Union> (id ` ?A)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Set.Un_commute", "?A Un ?B = ?B Un ?A",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Complete_Lattices.UN_empty2", "(UN x:?A. {}) = {}",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_hole 0)),
    ("Cardinal_Order_Relation.Union_set_lists",
     "\<Union> (set ` lists ?A) = ?A",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))),
       template_var 0)),
    ("Order_Relation_More.UnderS_disjoint", "?A Int UnderS ?r ?A = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1)),
       template_hole 0)),
    ("Set.Un_Int_eq", "?S Int (?S Un ?T) = ?S",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Set.Un_Int_eq", "?T Int (?S Un ?T) = ?T",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_var 1)),
    ("Set.Un_Int_eq", "(?S Un ?T) Int ?S = ?S",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1),
       template_var 1)),
    ("Set.Un_Int_eq", "(?S Un ?T) Int ?T = ?T",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_var 0)),
    ("Set.Int_Un_eq", "?S Un ?S Int ?T = ?S",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Set.Int_Un_eq", "?T Un ?S Int ?T = ?T",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_var 1)),
    ("Set.Int_Un_eq", "?S Int ?T Un ?S = ?S",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1),
       template_var 1)),
    ("Set.Int_Un_eq", "?S Int ?T Un ?T = ?T",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_var 0)),
    ("Countable_Set_Type.cUn_commute", "cUn ?A ?B = cUn ?B ?A",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Countable_Set_Type.cUN_empty2",
     "cUnion (cimage (%x. cempty) ?A) = cempty",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_hole 0)),
    ("Order_Relation_More.UnderS_subset_Under",
     "UnderS ?r ?A <= Under ?r ?A",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Cardinal_Order_Relation.card_of_UNIV", "|?A| \<le>o |UNIV|",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0)),
               template_app (template_hole 2, template_hole 1))),
           template_hole 0)
         )),
    ("Finite_Set.finite_UnionD", "finite (\<Union> ?A) ==> finite ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Countable_Set_Type.cUnion_parametric",
     "rel_fun (rel_cset (rel_cset ?A)) (rel_cset ?A) cUnion cUnion",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0))),
               template_app (template_hole 2, template_var 0)),
             template_hole 1),
           template_hole 0)
         )),
    ("Deriv.DERIV_Uniq", "?< D. (?f has_field_derivative D) (at ?x)",
     template_predicate (template_app (template_hole 3, t_empty))),
    ("Deriv.has_derivative_Uniq", "?< F. (?f has_derivative F) (at ?x)",
     template_predicate (template_app (template_hole 3, t_empty))),
    ("Relation.Field_Union", "Field (\<Union> ?R) = \<Union> (Field ` ?R)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_hole 3),
           template_var 0)))),
    ("Complete_Lattices.bind_UNION", "Set.bind ?A ?f = \<Union> (?f ` ?A)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Complete_Lattices.UN_empty", "\<Union> (?B ` {}) = {}",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_hole 1)),
       template_hole 0)),
    ("Lifting_Set.UNIV_transfer", "bi_total ?A ==> rel_set ?A UNIV UNIV",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1),
             template_hole 0)
           ))),
    ("Lifting.UNIV_typedef_to_equivp",
     "type_definition ?Rep ?Abs UNIV ==> equivp (=)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_predicate
        (template_app (template_hole 1, template_hole 0)))),
    ("Topological_Spaces.LIM_Uniq", "?< L. ?f \<midarrow>?a\<rightarrow> L",
     template_predicate (template_app (template_hole 4, t_empty))),
    ("Order_Relation_More.under_Under_singl", "under ?r ?a = Under ?r {?a}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Order_Relation_More.underS_UnderS_singl",
     "underS ?r ?a = UnderS ?r {?a}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Set.insert_is_Un", "insert ?a ?A = {?a} Un ?A",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 0)),
         template_var 0))),
    ("Complete_Lattices.Union_insert",
     "\<Union> (insert ?a ?B) = ?a Un \<Union> ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Set.Un_Diff_cancel", "?A Un (?B - ?A) = ?A Un ?B",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Set.Un_left_absorb", "?A Un (?A Un ?B) = ?A Un ?B",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Set.Un_Diff_cancel2", "?B - ?A Un ?A = ?B Un ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Complete_Lattices.UN_singleton", "(UN x:?A. {x}) = ?A",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_var 0)),
    ("Set.Un_Diff_Int", "?A - ?B Un ?A Int ?B = ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Set.Int_Diff_Un", "?A Int ?B Un (?A - ?B) = ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Set.subset_Un_eq", "(?A <= ?B) = (?A Un ?B = ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("Countable_Set_Type.csubset_cUn_eq",
     "csubset_eq ?A ?B = (cUn ?A ?B = ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("Countable_Set_Type.cinsert_is_cUn",
     "cinsert ?a ?A = cUn (csingle ?a) ?A",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 0)),
         template_var 0))),
    ("Countable_Set_Type.cUn_cDiff_cancel",
     "cUn ?A (cDiff ?B ?A) = cUn ?A ?B",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Countable_Set_Type.cUn_left_absorb", "cUn ?A (cUn ?A ?B) = cUn ?A ?B",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Countable_Set_Type.cUn_cDiff_cancel2",
     "cUn (cDiff ?B ?A) ?A = cUn ?B ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Countable_Set_Type.cUN_csingleton", "cUnion (cimage csingle ?A) = ?A",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_var 0)),
    ("Countable_Set_Type.cUn_cDiff_cInt",
     "cUn (cDiff ?A ?B) (cInt ?A ?B) = ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Cardinal_Order_Relation.card_of_Un1", "|?A| \<le>o |?A Un ?B|",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1)),
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)))),
           template_hole 0)
         )),
    ("Cardinal_Order_Relation.card_of_Un2", "|?A| \<le>o |?B Un ?A|",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1)),
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 1)))),
           template_hole 0)
         )),
    ("Complete_Lattices.Union_upper", "?B : ?A ==> ?B <= \<Union> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_var 1,
         template_app (template_hole 0, template_var 0)))),
    ("Relation.Sup_SUP_eq", "Sup ?S = (%x. x : \<Union> (Collect ` ?S))",
     template_equation
      (template_app (template_hole 4, template_var 0), t_empty)),
    ("Relation.Domain_Union",
     "Domain (\<Union> ?S) = \<Union> (Domain ` ?S)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Relation.Range_Union", "Range (\<Union> ?S) = \<Union> (Range ` ?S)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Complete_Lattices.Inter_Un_distrib",
     "\<Inter> (?A Un ?B) = \<Inter> ?A Int \<Inter> ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Complete_Lattices.Union_Un_distrib",
     "\<Union> (?A Un ?B) = \<Union> ?A Un \<Union> ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Set.Compl_Un", "- (?A Un ?B) = - ?A Int - ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Relation.Domain_Un_eq", "Domain (?A Un ?B) = Domain ?A Un Domain ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Relation.Field_Un", "Field (?r Un ?s) = Field ?r Un Field ?s",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Order_Union.Field_Osum",
     "Field (?r \<union>o ?r') = Field ?r Un Field ?r'",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Relation.Range_Un_eq", "Range (?A Un ?B) = Range ?A Un Range ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Cardinal_Order_Relation.lists_UNION_nlists",
     "lists ?A = \<Union> (range (nlists ?A))",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_hole 0)))),
    ("TermsAndClauses.varsPB_Un",
     "varsPB (?\<Phi>1.0 Un ?\<Phi>2.0) =
      varsPB ?\<Phi>1.0 Un varsPB ?\<Phi>2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Transitive_Closure.rtrancl_is_UN_relpow",
     "?R^* = \<Union> (range ((^^) ?R))",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_hole 0)))),
    ("Relation.converse_Un", "(?r Un ?s)^-1 = ?r^-1 Un ?s^-1",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Relation.single_valuedp_iff_Uniq",
     "single_valuedp ?r = (ALL x. ?< y. ?r x y)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Countable_Set.countable_Un_iff",
     "countable (?A Un ?B) = (countable ?A & countable ?B)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Finite_Set.finite_Un", "finite (?F Un ?G) = (finite ?F & finite ?G)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Countable_Set_Type.cimage_cUnion",
     "cimage ?f (cUnion ?S) = cUnion (cimage (cimage ?f) ?S)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 1)),
           template_var 0)))),
    ("Finite_Set.card_Un_le", "card (?A Un ?B) <= card ?A + card ?B",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Complete_Lattices.Union_Int_subset",
     "\<Union> (?A Int ?B) <= \<Union> ?A Int \<Union> ?B",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Complete_Lattices.Inter_Un_subset",
     "\<Inter> ?A Un \<Inter> ?B <= \<Inter> (?A Int ?B)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Set.Un_Pow_subset", "Pow ?A Un Pow ?B <= Pow (?A Un ?B)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Transitive_Closure.rtrancl_Un_subset", "?R^* Un ?S^* <= (?R Un ?S)^*",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Lifting.right_total_UNIV_transfer",
     "right_total ?A ==> rel_set ?A (Collect (Domainp ?A)) UNIV",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0))),
             template_hole 0)
           ))),
    ("Countable_Set_Type.cUnI1", "cin ?c ?A ==> cin ?c (cUn ?A ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Countable_Set_Type.cUnI2", "cin ?c ?B ==> cin ?c (cUn ?A ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Finite_Set.Un_infinite", "infinite ?S ==> infinite (?S Un ?T)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 1))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))
               )
           ))),
    ("Set.Un_absorb1", "?A <= ?B ==> ?A Un ?B = ?B",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("Set.Un_absorb2", "?B <= ?A ==> ?A Un ?B = ?A",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 0))),
    ("Complete_Lattices.Union_mono",
     "?A <= ?B ==> \<Union> ?A <= \<Union> ?B",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Countable_Set_Type.cUn_absorb1",
     "csubset_eq ?A ?B ==> cUn ?A ?B = ?B",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("Countable_Set_Type.cUn_absorb2",
     "csubset_eq ?B ?A ==> cUn ?A ?B = ?A",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 0))),
    ("Set.UnI1", "?c : ?A ==> ?c : ?A Un ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Set.UnI2", "?c : ?B ==> ?c : ?A Un ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Limits.isUCont_isCont", "isUCont ?f ==> isCont ?f ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_hole 2)),
             template_var 1)
           ))),
    ("Set.UNIV_eq_I", "(!!x. x : ?A) ==> UNIV = ?A",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation (template_hole 0, template_var 0))),
    ("Complete_Lattices.Union_eq", "\<Union> ?A = {x. EX B:?A. x : B}",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Set.Un_left_commute", "?A Un (?B Un ?C) = ?B Un (?A Un ?C)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Set.Un_insert_right", "?A Un insert ?a ?B = insert ?a (?A Un ?B)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Set.Un_assoc", "?A Un ?B Un ?C = ?A Un (?B Un ?C)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Set.Un_insert_left", "insert ?a ?B Un ?C = insert ?a (?B Un ?C)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Transitive_Closure.rtrancl_Un_rtrancl",
     "(?R^* Un ?S^*)^* = (?R Un ?S)^*",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Product_Type.Compl_Times_UNIV2",
     "- (?A \<times> UNIV) = (- ?A) \<times> UNIV",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0), t_empty)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("Product_Type.Compl_Times_UNIV1",
     "- (UNIV \<times> ?A) = UNIV \<times> - ?A",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1), t_empty)),
       template_app
        (template_app (template_hole 2, template_hole 1), t_empty))),
    ("Complete_Lattices.empty_Union_conv",
     "({} = \<Union> ?A) = (ALL x:?A. x = {})",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Complete_Lattices.Inter_UNIV_conv",
     "(UNIV = \<Inter> ?A) = (ALL x:?A. x = UNIV)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Complete_Lattices.Inter_UNIV_conv",
     "(\<Inter> ?A = UNIV) = (ALL x:?A. x = UNIV)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Complete_Lattices.Union_empty_conv",
     "(\<Union> ?A = {}) = (ALL x:?A. x = {})",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Complete_Lattices.disjnt_Union2",
     "disjnt ?B (\<Union> ?\<A>) = (ALL A:?\<A>. disjnt ?B A)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Complete_Lattices.disjnt_Union1",
     "disjnt (\<Union> ?\<A>) ?B = (ALL A:?\<A>. disjnt A ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Complete_Lattices.Union_iff",
     "(?A : \<Union> ?C) = (EX X:?C. ?A : X)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Countable_Set_Type.cUn_cinsert_right",
     "cUn ?A (cinsert ?a ?B) = cinsert ?a (cUn ?A ?B)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Countable_Set_Type.cUn_left_commute",
     "cUn ?A (cUn ?B ?C) = cUn ?B (cUn ?A ?C)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Countable_Set_Type.cUn_cinsert_left",
     "cUn (cinsert ?a ?B) ?C = cinsert ?a (cUn ?B ?C)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Countable_Set_Type.cUn_assoc",
     "cUn (cUn ?A ?B) ?C = cUn ?A (cUn ?B ?C)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Equiv_Relations.Union_quotient",
     "equiv ?A ?r ==> \<Union> (?A // ?r) = ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1))),
    ("Lifting_Set.Union_transfer",
     "rel_fun (rel_set (rel_set ?A)) (rel_set ?A) \<Union> \<Union>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0))),
               template_app (template_hole 2, template_var 0)),
             t_empty),
           t_empty)
         )),
    ("Predicate.eval_SUP",
     "pred.eval (Sup (?f ` ?A)) = Sup ((pred.eval o ?f) ` ?A)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_hole 5),
               template_var 1)),
           template_var 0)))),
    ("Complete_Lattices.Un_eq_UN",
     "?A Un ?B = (UN b. if b then ?A else ?B)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_hole 0)))),
    ("Complete_Lattices.Int_Union",
     "?A Int \<Union> ?B = \<Union> ((Int) ?A ` ?B)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Complete_Lattices.Int_Union2",
     "\<Union> ?B Int ?A = (UN C:?B. C Int ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Complete_Lattices.Un_Inter",
     "?A Un \<Inter> ?B = \<Inter> ((Un) ?A ` ?B)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Complete_Lattices.image_Union",
     "?f ` \<Union> ?S = \<Union> ((`) ?f ` ?S)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Complete_Lattices.vimage_Union",
     "?f -` \<Union> ?A = \<Union> ((-`) ?f ` ?A)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Complete_Lattices.UN_constant",
     "(UN y:?A. ?c) = (if ?A = {} then {} else ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, t_empty), template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 1)),
               template_hole 0),
             template_var 1)
           ))),
    ("Complete_Lattices.UN_bool_eq",
     "\<Union> (range ?A) = ?A True Un ?A False",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty), template_hole 3)),
       template_app
        (template_app
          (template_hole 2, template_app (template_var 0, template_hole 1)),
         template_app (template_var 0, template_hole 0)))),
    ("Complete_Lattices.UNION_singleton_eq_range",
     "(UN x:?A. {?f x}) = ?f ` ?A",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Product_Type.Sigma_Union",
     "Sigma (\<Union> ?X) ?B = (UN A:?X. Sigma A ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Countable_Set_Type.cUN_constant",
     "cUnion (cimage (%y. ?c) ?A) = (if ?A = cempty then cempty else ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, t_empty), template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 1)),
               template_hole 0),
             template_var 1)
           ))),
    ("Countable_Set_Type.cUN_upper",
     "cin ?a ?A ==> csubset_eq (?B ?a) (cUnion (cimage ?B ?A))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_inequation
        (less_equals, template_app (template_var 0, template_var 2),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Preliminaries.part1_Un_part2",
     "infinite ?V ==> part1 ?V Un part2 ?V = ?V",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Order_Relation_More.Under_decr",
     "?A <= ?B ==> Under ?r ?B <= Under ?r ?A",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Order_Relation_More.UnderS_decr",
     "?A <= ?B ==> UnderS ?r ?B <= UnderS ?r ?A",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Cardinal_Order_Relation.card_of_UNIV2",
     "Card_order ?r ==> ?r \<le>o |UNIV|",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app (template_hole 2, template_hole 1))),
             template_hole 0)
           ))),
    ("Order_Union.wf_Int_Times", "?A Int ?B = {} ==> wf (?A \<times> ?B)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1), t_empty))
           ))),
    ("Countable_Set.countable_Un",
     "[| countable ?A; countable ?B |] ==> countable (?A Un ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Finite_Set.finite_UnI",
     "[| finite ?F; finite ?G |] ==> finite (?F Un ?G)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Relation.sym_Un", "[| sym ?r; sym ?s |] ==> sym (?r Un ?s)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Relation.Image_eq_UN", "?r `` ?B = (UN y:?B. ?r `` {y})",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)))),
    ("Complete_Lattices.vimage_eq_UN", "?f -` ?B = (UN y:?B. ?f -` {y})",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)))),
    ("Set.Diff_Un", "?A - (?B Un ?C) = (?A - ?B) Int (?A - ?C)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Set.Un_Diff", "?A Un ?B - ?C = ?A - ?C Un (?B - ?C)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Hull.hull_Un_right",
     "?P hull (?S Un ?T) = ?P hull (?S Un ?P hull ?T)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("Hull.hull_Un_left", "?P hull (?S Un ?T) = ?P hull (?P hull ?S Un ?T)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Set.Int_Un_distrib", "?A Int (?B Un ?C) = ?A Int ?B Un ?A Int ?C",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Set.Int_Un_distrib2", "(?B Un ?C) Int ?A = ?B Int ?A Un ?C Int ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Set.Un_Int_distrib", "?A Un ?B Int ?C = (?A Un ?B) Int (?A Un ?C)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Set.Un_Int_distrib2", "?B Int ?C Un ?A = (?B Un ?A) Int (?C Un ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Relation.Image_Un", "?R `` (?A Un ?B) = ?R `` ?A Un ?R `` ?B",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Relation.Un_Image", "(?R Un ?S) `` ?A = ?R `` ?A Un ?S `` ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Set.image_Un", "?f ` (?A Un ?B) = ?f ` ?A Un ?f ` ?B",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Set.vimage_Un", "?f -` (?A Un ?B) = ?f -` ?A Un ?f -` ?B",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Set_Algebras.set_times_Un_distrib",
     "?A * (?B Un ?C) = ?A * ?B Un ?A * ?C",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Set_Algebras.set_times_Un_distrib",
     "(?A Un ?B) * ?C = ?A * ?C Un ?B * ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Wellorder_Constructions.Un_dir_image",
     "dir_image (?r1.0 Un ?r2.0) ?f =
      dir_image ?r1.0 ?f Un dir_image ?r2.0 ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Product_Type.Sigma_Un_distrib1",
     "Sigma (?I Un ?J) ?C = Sigma ?I ?C Un Sigma ?J ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Relation.converse_UNION",
     "(\<Union> (?r ` ?S))^-1 = (UN x:?S. (?r x)^-1)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Countable_Set_Type.cBall_cUn",
     "cBall (cUn ?A ?B) ?P = (cBall ?A ?P & cBall ?B ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Countable_Set_Type.cBex_cUn",
     "cBex (cUn ?A ?B) ?P = (cBex ?A ?P | cBex ?B ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Countable_Set_Type.cUn_iff",
     "cin ?c (cUn ?A ?B) = (cin ?c ?A | cin ?c ?B)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Finite_Set.infinite_Un",
     "infinite (?S Un ?T) = (infinite ?S | infinite ?T)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))))),
    ("Set.Int_UNIV", "(?A Int ?B = UNIV) = (?A = UNIV & ?B = UNIV)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 1))
           ))),
    ("Set.Un_empty", "(?A Un ?B = {}) = (?A = {} & ?B = {})",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 1))
           ))),
    ("Countable_Set_Type.cUn_cempty",
     "(cUn ?A ?B = cempty) = (?A = cempty & ?B = cempty)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 1))
           ))),
    ("Set.Un_subset_iff", "(?A Un ?B <= ?C) = (?A <= ?C & ?B <= ?C)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Countable_Set_Type.cUn_csubset_iff",
     "csubset_eq (cUn ?A ?B) ?C = (csubset_eq ?A ?C & csubset_eq ?B ?C)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Set.disjnt_Un2",
     "disjnt ?C (?A Un ?B) = (disjnt ?C ?A & disjnt ?C ?B)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Set.disjnt_Un1",
     "disjnt (?A Un ?B) ?C = (disjnt ?A ?C & disjnt ?B ?C)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Set.Un_iff", "(?c : ?A Un ?B) = (?c : ?A | ?c : ?B)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Set.subset_singleton_iff_Uniq", "(EX a. ?A <= {a}) = (?< x. x : ?A)",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app (template_hole 1, t_empty))),
    ("Countable_Set_Type.cimage_cUn",
     "cimage ?f (cUn ?A ?B) = cUn (cimage ?f ?A) (cimage ?f ?B)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Countable_Set_Type.cDiff_cUn",
     "cDiff ?A (cUn ?B ?C) = cInt (cDiff ?A ?B) (cDiff ?A ?C)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Countable_Set_Type.cUn_cDiff",
     "cDiff (cUn ?A ?B) ?C = cUn (cDiff ?A ?C) (cDiff ?B ?C)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Countable_Set_Type.cInt_cUn_distrib",
     "cInt ?A (cUn ?B ?C) = cUn (cInt ?A ?B) (cInt ?A ?C)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Countable_Set_Type.cInt_cUn_distrib2",
     "cInt (cUn ?B ?C) ?A = cUn (cInt ?B ?A) (cInt ?C ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Countable_Set_Type.cUn_cInt_distrib",
     "cUn ?A (cInt ?B ?C) = cInt (cUn ?A ?B) (cUn ?A ?C)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Countable_Set_Type.cUn_cInt_distrib2",
     "cUn (cInt ?B ?C) ?A = cInt (cUn ?B ?A) (cUn ?C ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Countable_Set_Type.cUNION_cimage",
     "cUnion (cimage ?g (cimage ?f ?A)) = cUnion (cimage (?g o ?f) ?A)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Hull.hull_Un_subset",
     "?S hull ?s Un ?S hull ?t <= ?S hull (?s Un ?t)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Cardinal_Order_Relation.card_of_Un_Plus_ordIso1",
     "|?A Un ?B| =o |?A <+> ?B - ?A|",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_var 0))),
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 1))))),
           template_hole 0)
         )),
    ("Cardinal_Order_Relation.card_of_Un_Plus_ordIso2",
     "|?A Un ?B| =o |(?A - ?B) <+> ?B|",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_var 0))),
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 0)),
                   template_var 0)))),
           template_hole 0)
         )),
    ("Order_Relation_More.subset_Above_Under",
     "?B <= Field ?r ==> ?B <= Above ?r (Under ?r ?B)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Order_Relation_More.subset_AboveS_UnderS",
     "?B <= Field ?r ==> ?B <= AboveS ?r (UnderS ?r ?B)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Order_Relation_More.subset_Under_Above",
     "?B <= Field ?r ==> ?B <= Under ?r (Above ?r ?B)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Order_Relation_More.subset_UnderS_AboveS",
     "?B <= Field ?r ==> ?B <= UnderS ?r (AboveS ?r ?B)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Order_Relation_More.in_Under_above",
     "?a : Field ?r ==> ?a : Under ?r (above ?r ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Order_Relation_More.in_UnderS_aboveS",
     "?a : Field ?r ==> ?a : UnderS ?r (aboveS ?r ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Relation.sym_UNION",
     "ALL x:?S. sym (?r x) ==> sym (\<Union> (?r ` ?S))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Relation.symp_SUP", "ALL x:?S. symp (?r x) ==> symp (Sup (?r ` ?S))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Relation.SUP_Sup_eq",
     "(SUP i\<in>?S. (%x. x : i)) = (%x. x : \<Union> ?S)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       t_empty)),
    ("HOL.ex1_iff_ex_Uniq", "(EX! x. ?P x) = ((EX x. ?P x) & (?< x. ?P x))",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_app (template_hole 0, t_empty)))),
    ("Countable_Set_Type.cBall_cUN",
     "cBall (cUnion (cimage ?B ?A)) ?P = cBall ?A (%x. cBall (?B x) ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Countable_Set_Type.cBex_cUN",
     "cBex (cUnion (cimage ?B ?A)) ?P = cBex ?A (%x. cBex (?B x) ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Countable_Set_Type.cUN_iff",
     "cin ?b (cUnion (cimage ?B ?A)) = cBex ?A (%x. cin ?b (?B x))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Countable_Set_Type.cUNION_cempty_conv",
     "(cempty = cUnion (cimage ?B ?A)) = cBall ?A (%x. ?B x = cempty)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Countable_Set_Type.cUNION_cempty_conv",
     "(cUnion (cimage ?B ?A) = cempty) = cBall ?A (%x. ?B x = cempty)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Countable_Set_Type.cUN_csubset_iff",
     "csubset_eq (cUnion (cimage ?A ?I)) ?B =
      cBall ?I (%i. csubset_eq (?A i) ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Countable_Set_Type.cUN_cinsert",
     "cUnion (cimage ?B (cinsert ?a ?A)) =
      cUn (?B ?a) (cUnion (cimage ?B ?A))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 2, template_var 1)),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Topological_Spaces.LIMSEQ_SUP",
     "incseq ?X ==> ?X \<longlonglongrightarrow> Sup (range ?X)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 0),
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, t_empty),
                     template_hole 1)))),
             template_hole 0)
           ))),
    ("Set.mono_Un", "mono ?f ==> ?f ?A Un ?f ?B <= ?f (?A Un ?B)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_var 2, template_var 1)),
           template_app (template_var 2, template_var 0)),
         template_app
          (template_var 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Complete_Lattices.UN_upper",
     "?a : ?A ==> ?B ?a <= \<Union> (?B ` ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_inequation
        (less_equals, template_app (template_var 0, template_var 2),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 1))))),
    ("Groups_Big.card_Union_le_sum_card",
     "ALL u:?U. finite u ==> card (\<Union> ?U) <= sum card ?U",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0), t_empty)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_app (template_hole 0, template_hole 2),
           template_var 0)))),
    ("Finite_Set.finite_UNIV_inj_surj",
     "[| finite UNIV; inj ?f |] ==> surj ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_hole 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 3)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_hole 3),
         template_hole 3))),
    ("Finite_Set.card_eq_UNIV_imp_eq_UNIV",
     "[| finite UNIV; card ?A = card UNIV |] ==> ?A = UNIV",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_hole 3)),
        template_equation
         (template_app (template_hole 1, template_var 0),
          template_app (template_hole 1, template_hole 3))],
       template_equation (template_var 0, template_hole 3))),
    ("Finite_Set.finite_UNIV_surj_inj",
     "[| finite UNIV; surj ?f |] ==> inj ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_hole 3)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 0),
            template_hole 3),
          template_hole 3)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0),
             template_hole 3)
           ))),
    ("Zorn.chain_subset_antisym_Union",
     "[| chain\<^sub>\<subseteq> ?R; ALL r:?R. antisym r |]
      ==> antisym (\<Union> ?R)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Zorn.chain_subset_trans_Union",
     "[| chain\<^sub>\<subseteq> ?R; ALL r:?R. trans r |]
      ==> trans (\<Union> ?R)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Complete_Lattices.UnionI",
     "[| ?X : ?C; ?A : ?X |] ==> ?A : \<Union> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Limits.isUCont_Cauchy",
     "[| isUCont ?f; Cauchy ?X |] ==> Cauchy (%n. ?f (?X n))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 1)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Complete_Lattices.SUP_apply",
     "Sup (?f ` ?A) ?x = (SUP y\<in>?A. ?f y ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Relation.Sup_SUP_eq2",
     "Sup ?S = (%x y. (x, y) : \<Union> (Collect ` case_prod ` ?S))",
     template_equation
      (template_app (template_hole 7, template_var 0), t_empty)),
    ("Relation.relcompp_SUP_distrib",
     "?s OO Sup (?r ` ?I) = (SUP i\<in>?I. ?s OO ?r i)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Relation.relcompp_SUP_distrib2",
     "Sup (?r ` ?I) OO ?s = (SUP i\<in>?I. ?r i OO ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Relation.Image_UN",
     "?r `` \<Union> (?B ` ?A) = (UN x:?A. ?r `` ?B x)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Complete_Lattices.image_UN",
     "?f ` \<Union> (?B ` ?A) = (UN x:?A. ?f ` ?B x)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Complete_Lattices.Compl_UN",
     "- \<Union> (?B ` ?A) = (INT x:?A. - ?B x)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)))),
    ("Set_Algebras.set_times_UNION_distrib",
     "?A * \<Union> (?M ` ?I) = (UN i:?I. ?A * ?M i)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Set_Algebras.set_times_UNION_distrib",
     "\<Union> (?M ` ?I) * ?A = (UN i:?I. ?M i * ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Old_Datatype.In0_UN1",
     "In0 (\<Union> (range ?f)) = (UN x. In0 (?f x))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0))),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_hole 0)))),
    ("Old_Datatype.In1_UN1",
     "In1 (\<Union> (range ?f)) = (UN x. In1 (?f x))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0))),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_hole 0)))),
    ("Relation.relcomp_UNION_distrib",
     "?s O \<Union> (?r ` ?I) = (UN i:?I. ?s O ?r i)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Relation.relcomp_UNION_distrib2",
     "\<Union> (?r ` ?I) O ?s = (UN i:?I. ?r i O ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Complete_Lattices.Union_disjoint",
     "(\<Union> ?C Int ?A = {}) = (ALL B:?C. B Int ?A = {})",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Complete_Lattices.UN_ball_bex_simps",
     "(ALL x:\<Union> ?A. ?P x) = (ALL y:?A. ALL x:y. ?P x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         t_empty),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Complete_Lattices.UN_ball_bex_simps",
     "(EX x:\<Union> ?A. ?P x) = (EX y:?A. EX x:y. ?P x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         t_empty),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Set.Un_Int_assoc_eq",
     "(?A Int ?B Un ?C = ?A Int (?B Un ?C)) = (?C <= ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 2))),
    ("Countable_Set_Type.cUn_cInt_assoc_eq",
     "(cUn (cInt ?A ?B) ?C = cInt ?A (cUn ?B ?C)) = csubset_eq ?C ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 2))),
    ("Filter.SUP_principal",
     "(SUP i\<in>?I. principal (?A i)) = principal (\<Union> (?A ` ?I))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 0))))),
    ("Countable_Set_Type.cimage_cUN",
     "cimage ?f (cUnion (cimage ?B ?A)) =
      cUnion (cimage (%x. cimage ?f (?B x)) ?A)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Complete_Lattices.UN_Pow_subset",
     "(UN x:?A. Pow (?B x)) <= Pow (\<Union> (?B ` ?A))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 0))))),
    ("Transitive_Closure.rtrancl_imp_UN_relpow",
     "?p : ?R^* ==> ?p : \<Union> (range ((^^) ?R))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, t_empty), template_hole 0)))
           ))),
    ("Set.Un_least", "[| ?A <= ?C; ?B <= ?C |] ==> ?A Un ?B <= ?C",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("Countable_Set_Type.cUn_least",
     "[| csubset_eq ?A ?C; csubset_eq ?B ?C |]
      ==> csubset_eq (cUn ?A ?B) ?C",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("HOL.Uniq_D", "[| Uniq ?P; ?P ?a; ?P ?b |] ==> ?a = ?b",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 2)),
        template_predicate (template_app (template_var 2, template_var 1)),
        template_predicate (template_app (template_var 2, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Relation.sup_Un_eq",
     "sup (%x. x : ?R) (%x. x : ?S) = (%x. x : ?R Un ?S)",
     template_equation
      (template_app (template_app (template_hole 2, t_empty), t_empty),
       t_empty)),
    ("Complete_Lattices.UNION_eq",
     "\<Union> (?B ` ?A) = {y. EX x:?A. y : ?B x}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)),
       template_app (template_hole 2, t_empty))),
    ("Ordinal_Arithmetic.support_Un",
     "support ?z (?A Un ?B) ?f = support ?z ?A ?f Un support ?z ?B ?f",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1),
           template_var 0)))),
    ("Complete_Lattices.UN_insert",
     "\<Union> (?B ` insert ?a ?A) = ?B ?a Un \<Union> (?B ` ?A)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 2, template_var 1)),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Complete_Lattices.UN_extend_simps",
     "(UN a:?A. ?B (?f a)) = \<Union> (?B ` ?f ` ?A)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Complete_Lattices.UN_simps",
     "\<Union> (?B ` ?f ` ?A) = (UN a:?A. ?B (?f a))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Product_Type.Times_Un_distrib1",
     "(?A Un ?B) \<times> ?C = ?A \<times> ?C Un ?B \<times> ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2), t_empty)),
         template_app
          (template_app (template_hole 2, template_var 1), t_empty)))),
    ("Product_Type.Sigma_Un_distrib2",
     "(SIGMA i:?I. ?A i Un ?B i) = Sigma ?I ?A Un Sigma ?I ?B",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Complete_Lattices.UNION_empty_conv",
     "({} = \<Union> (?B ` ?A)) = (ALL x:?A. ?B x = {})",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Complete_Lattices.INTER_UNIV_conv",
     "(UNIV = \<Inter> (?B ` ?A)) = (ALL x:?A. ?B x = UNIV)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Complete_Lattices.INTER_UNIV_conv",
     "(\<Inter> (?B ` ?A) = UNIV) = (ALL x:?A. ?B x = UNIV)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty), template_var 0))),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Complete_Lattices.UNION_empty_conv",
     "(\<Union> (?B ` ?A) = {}) = (ALL x:?A. ?B x = {})",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty), template_var 0))),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Complete_Lattices.UN_subset_iff",
     "(\<Union> (?A ` ?I) <= ?B) = (ALL i:?I. ?A i <= ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 1))),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Complete_Lattices.disjoint_UN_iff",
     "disjnt ?A (\<Union> (?B ` ?I)) = (ALL i:?I. disjnt ?A (?B i))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Complete_Lattices.UN_iff",
     "(?b : \<Union> (?B ` ?A)) = (EX x:?A. ?b : ?B x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Countable_Set_Type.cUN_cUn",
     "cUnion (cimage ?M (cUn ?A ?B)) =
      cUn (cUnion (cimage ?M ?A)) (cUnion (cimage ?M ?B))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Finite_Set.finite_UN",
     "finite ?A ==>
      finite (\<Union> (?B ` ?A)) = (ALL x:?A. finite (?B x))",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1))),
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)))),
    ("Countable_Set_Type.cUnCI",
     "(~ cin ?c ?B ==> cin ?c ?A) ==> cin ?c (cUn ?A ?B)",
     template_implication
      ([template_implication
         ([template_negation
            (
               template_predicate
                (
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1)
                   )
               )],
          template_predicate
           (
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 0)
              ))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Set.UnCI", "(?c ~: ?B ==> ?c : ?A) ==> ?c : ?A Un ?B",
     template_implication
      ([template_implication
         ([template_negation
            (
               template_predicate
                (
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1)
                   )
               )],
          template_predicate
           (
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 0)
              ))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Complete_Lattices.Union_least",
     "(!!X. X : ?A ==> X <= ?C) ==> \<Union> ?A <= ?C",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("Zorn.wf_Union_wf_init_segs",
     "[| ?R : Chains init_seg_of; ALL r:?R. wf r |] ==> wf (\<Union> ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_hole 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Complete_Lattices.Int_UN_distrib",
     "?B Int \<Union> (?A ` ?I) = (UN i:?I. ?B Int ?A i)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Complete_Lattices.Un_INT_distrib",
     "?B Un \<Inter> (?A ` ?I) = (INT i:?I. ?B Un ?A i)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Relation.UN_Image",
     "\<Union> (?X ` ?I) `` ?S = (UN i:?I. ?X i `` ?S)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty), template_var 1))),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Complete_Lattices.vimage_UN",
     "?f -` \<Union> (?B ` ?A) = (UN x:?A. ?f -` ?B x)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Complete_Lattices.UN_simps",
     "(UN x:?C. ?A x Int ?B) = \<Union> (?A ` ?C) Int ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 0))),
         template_var 1))),
    ("Complete_Lattices.UN_extend_simps",
     "\<Union> (?A ` ?C) Int ?B = (UN x:?C. ?A x Int ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, t_empty), template_var 1))),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Complete_Lattices.UN_simps",
     "(UN x:?C. ?A Int ?B x) = ?A Int \<Union> (?B ` ?C)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))))),
    ("Complete_Lattices.UN_extend_simps",
     "?A Int \<Union> (?B ` ?C) = (UN x:?C. ?A Int ?B x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Complete_Lattices.UN_simps",
     "(UN x:?C. ?A x - ?B) = \<Union> (?A ` ?C) - ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 0))),
         template_var 1))),
    ("Complete_Lattices.UN_extend_simps",
     "\<Union> (?A ` ?C) - ?B = (UN x:?C. ?A x - ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, t_empty), template_var 1))),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Complete_Lattices.UN_simps",
     "(UN x:?C. ?A - ?B x) = ?A - \<Inter> (?B ` ?C)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, t_empty), template_var 0))))),
    ("Complete_Lattices.UN_extend_simps",
     "?A - \<Inter> (?B ` ?C) = (UN x:?C. ?A - ?B x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)))),
    ("Old_Datatype.Scons_UN1_y",
     "Scons ?M (\<Union> (range ?f)) = (UN x. Scons ?M (?f x))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0))),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_hole 0)))),
    ("Old_Datatype.Scons_UN1_x",
     "Scons (\<Union> (range ?f)) ?M = (UN x. Scons (?f x) ?M)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_hole 0))),
         template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_hole 0)))),
    ("Old_Datatype.ntrunc_UN1",
     "ntrunc ?k (\<Union> (range ?f)) = (UN x. ntrunc ?k (?f x))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0))),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_hole 0)))),
    ("Filter.filtermap_SUP",
     "filtermap ?f (Sup (?F ` ?B)) = (SUP b\<in>?B. filtermap ?f (?F b))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Countable_Set_Type.cUN_cUN_flatten",
     "cUnion (cimage ?C (cUnion (cimage ?B ?A))) =
      cUnion (cimage (%y. cUnion (cimage ?C (?B y))) ?A)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)))),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Filter.filtercomap_SUP",
     "(SUP b\<in>?B. filtercomap ?f (?F b))
      <= filtercomap ?f (Sup (?F ` ?B))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 0))))),
    ("Countable_Set_Type.cUN_absorb",
     "cin ?k ?I ==>
      cUn (?A ?k) (cUnion (cimage ?A ?I)) = cUnion (cimage ?A ?I)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_var 0, template_var 2)),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Cardinal_Order_Relation.Card_order_Un2",
     "Card_order ?r ==> |Field ?r| \<le>o |?A Un Field ?r|",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 5, template_var 1))),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_app (template_hole 5, template_var 1))))),
             template_hole 0)
           ))),
    ("Cardinal_Order_Relation.Card_order_Un1",
     "Card_order ?r ==> |Field ?r| \<le>o |Field ?r Un ?B|",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 5, template_var 1))),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 5, template_var 1)),
                     template_var 0)))),
             template_hole 0)
           ))),
    ("Cardinal_Order_Relation.Un_Plus_bij_betw",
     "?A Int ?B = {} ==> EX f. bij_betw f (?A Un ?B) (?A <+> ?B)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 1), template_var 0),
          template_hole 4)],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Transitive_Closure.in_rtrancl_UnI",
     "?x : ?R^* | ?x : ?S^* ==> ?x : (?R Un ?S)^*",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_app (template_hole 1, template_var 1))),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_app (template_hole 1, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Inductive.gfp_fun_UnI2",
     "[| mono ?f; ?a : gfp ?f |] ==> ?a : ?f (?X Un gfp ?f)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_var 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app (template_hole 1, template_var 2))))
           ))),
    ("Countable_Set_Type.cUN_I",
     "[| cin ?a ?A; cin ?b (?B ?a) |] ==> cin ?b (cUnion (cimage ?B ?A))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_var 0, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)))
           ))),
    ("Set.Un_mono", "[| ?A <= ?C; ?B <= ?D |] ==> ?A Un ?B <= ?C Un ?D",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Relation.refl_on_Un",
     "[| refl_on ?A ?r; refl_on ?B ?s |] ==> refl_on (?A Un ?B) (?r Un ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Complete_Lattices.SUP1_I",
     "[| ?a : ?A; ?B ?a ?b |] ==> Sup (?B ` ?A) ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 1, template_var 3), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, t_empty), template_var 2)),
             template_var 0)
           ))),
    ("Zorn.Chains_init_seg_of_Union",
     "[| ?R : Chains init_seg_of; ?r : ?R |]
      ==> ?r initial_segment_of \<Union> ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_hole 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 1))),
             template_hole 4)
           ))),
    ("Countable_Set_Type.cUn_parametric",
     "rel_fun (rel_cset ?A) (rel_fun (rel_cset ?A) (rel_cset ?A)) cUn cUn",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 3, template_var 0)),
                 template_app (template_hole 3, template_var 0))),
             t_empty),
           t_empty)
         )),
    ("Complete_Lattices.UN_simps",
     "\<Union> (?B ` \<Union> ?A) = (UN y:?A. \<Union> (?B ` y))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Complete_Lattices.UN_extend_simps",
     "(UN y:?A. \<Union> (?B ` y)) = \<Union> (?B ` \<Union> ?A)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("Fun.inj_on_iff_Uniq",
     "inj_on ?f ?A = (ALL x:?A. ?< y. y : ?A & ?f x = ?f y)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 4, template_var 0), t_empty))),
    ("Complete_Lattices.ball_UN",
     "(ALL z:\<Union> (?B ` ?A). ?P z) = (ALL x:?A. ALL z:?B x. ?P z)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         t_empty),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Complete_Lattices.UN_ball_bex_simps",
     "(ALL x:\<Union> (?B ` ?A). ?P x) = (ALL a:?A. ALL x:?B a. ?P x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         t_empty),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Complete_Lattices.bex_UN",
     "(EX z:\<Union> (?B ` ?A). ?P z) = (EX x:?A. EX z:?B x. ?P z)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         t_empty),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Complete_Lattices.UN_ball_bex_simps",
     "(EX x:\<Union> (?B ` ?A). ?P x) = (EX a:?A. EX x:?B a. ?P x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         t_empty),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Groups_Big.card_UN_le",
     "finite ?I ==> card (\<Union> (?A ` ?I)) <= (SUM i:?I. card (?A i))",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 1))),
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Fun.inj_on_Un_image_eq_iff",
     "inj_on ?f (?A Un ?B) ==> (?f ` ?A = ?f ` ?B) = (?A = ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_equation (template_var 1, template_var 0)))),
    ("Cardinal_Order_Relation.card_of_Un_Plus_ordIso",
     "?A Int ?B = {} ==> |?A Un ?B| =o |?A <+> ?B|",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 8, template_var 1), template_var 0),
          template_hole 7)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 1),
                       template_var 0))),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0)))),
             template_hole 0)
           ))),
    ("Wellorder_Extension.downset_on_Union",
     "(!!r. r : ?R ==> downset_on (Field r) ?p) ==>
      downset_on (Field (\<Union> ?R)) ?p",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Finite_Set.finite_Union",
     "[| finite ?A; !!M. M : ?A ==> finite M |] ==> finite (\<Union> ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Relation.SUP_UN_eq",
     "(SUP i\<in>?S. (%x. x : ?r i)) = (%x. x : \<Union> (?r ` ?S))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)),
       t_empty)),
    ("Set_Interval.UN_le_eq_Un0",
     "\<Union> (?M ` {..?n}) = \<Union> (?M ` {1..?n}) Un ?M 0",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, t_empty),
           template_app (template_hole 4, template_var 0))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 0)))),
         template_app (template_var 1, template_hole 0)))),
    ("Complete_Lattices.Un_Union_image",
     "(UN x:?C. ?A x Un ?B x) = \<Union> (?A ` ?C) Un \<Union> (?B ` ?C)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Set_Interval.UN_UN_finite_eq",
     "(UN n. \<Union> (?A ` {0..<n})) = \<Union> (range ?A)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_hole 0)),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_hole 0)))),
    ("Set.ball_Un",
     "(ALL x:?A Un ?B. ?P x) = ((ALL x:?A. ?P x) & (ALL x:?B. ?P x))",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2), t_empty)),
         template_app
          (template_app (template_hole 2, template_var 1), t_empty)))),
    ("Set.bex_Un",
     "(EX x:?A Un ?B. ?P x) = ((EX x:?A. ?P x) | (EX x:?B. ?P x))",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2), t_empty)),
         template_app
          (template_app (template_hole 2, template_var 1), t_empty)))),
    ("Relation.refl_on_UNION",
     "ALL x:?S. refl_on (?A x) (?r x) ==>
      refl_on (\<Union> (?A ` ?S)) (\<Union> (?r ` ?S))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 2))),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)))
           ))),
    ("Countable_Set_Type.cUN_least",
     "(!!x. cin x ?A ==> csubset_eq (?B x) ?C) ==>
      csubset_eq (cUnion (cimage ?B ?A)) ?C",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_var 0))),
    ("HOL.Uniq_I", "(!!x y. [| ?P x; ?P y |] ==> y = x) ==> Uniq ?P",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Topological_Spaces.SUP_Lim",
     "[| incseq ?X; ?X \<longlonglongrightarrow> ?l |]
      ==> Sup (range ?X) = ?l",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_app (template_hole 5, template_var 0)),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0)),
         template_var 0))),
    ("Zorn.chain_subset_Total_Union",
     "[| chain\<^sub>\<subseteq> ?R; ALL r:?R. Total r |]
      ==> Total (\<Union> ?R)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Complete_Lattices.SUP2_I",
     "[| ?a : ?A; ?B ?a ?b ?c |] ==> Sup (?B ` ?A) ?b ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_var 2, template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, t_empty),
                   template_var 3)),
               template_var 1),
             template_var 0)
           ))),
    ("Complete_Lattices.UN_I",
     "[| ?a : ?A; ?b : ?B ?a |] ==> ?b : \<Union> (?B ` ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_var 0, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, t_empty), template_var 2)))
           ))),
    ("Lifting_Set.SUP_parametric",
     "rel_fun (rel_set ?R) (rel_fun (rel_fun ?R (=)) (=))
       (%A f. Sup (f ` A)) (%A f. Sup (f ` A))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 0)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_hole 3)),
                 template_hole 3)),
             t_empty),
           t_empty)
         )),
    ("Relation.SUP_Sup_eq2",
     "(SUP i\<in>?S. (%x y. (x, y) : i)) = (%x y. (x, y) : \<Union> ?S)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)),
       t_empty)),
    ("Set_Interval.UN_le_add_shift",
     "(UN i<=?n. ?M (i + ?k)) = \<Union> (?M ` {?k..?n + ?k})",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)))))),
    ("Set_Interval.UN_le_add_shift_strict",
     "(UN i<?n. ?M (i + ?k)) = \<Union> (?M ` {?k..<?n + ?k})",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)))))),
    ("Countable_Set_Type.cUN_cinsert_distrib",
     "cin ?u ?A ==>
      cUnion (cimage (%x. cinsert ?a (?B x)) ?A) =
      cinsert ?a (cUnion (cimage ?B ?A))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)))))),
    ("Set_Interval.atLeastLessThan_add_Un",
     "?i <= ?j ==> {?i..<?j + ?k} = {?i..<?j} Un {?j..<?j + ?k}",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)))))),
    ("Limits.LIMSEQ_incseq_SUP",
     "[| bdd_above (range ?X); incseq ?X |]
      ==> ?X \<longlonglongrightarrow> Sup (range ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 0),
                template_hole 5))
            ),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 6, t_empty),
                     template_hole 5)))),
             template_hole 0)
           ))),
    ("Zorn.pairwise_chain_Union",
     "[| !!S. S : ?\<C> ==> pairwise ?R S; chain\<^sub>\<subseteq> ?\<C> |]
      ==> pairwise ?R (\<Union> ?\<C>)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Zorn.Union_in_chain",
     "[| finite ?\<B>; ?\<B> ~= {}; subset.chain ?\<A> ?\<B> |]
      ==> \<Union> ?\<B> : ?\<B>",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 0),
                template_hole 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 1)
           ))),
    ("Topological_Spaces.connected_Un",
     "[| connected ?s; connected ?t; ?s Int ?t ~= {} |]
      ==> connected (?s Un ?t)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Complete_Lattices.UN_simps",
     "\<Union> (?C ` \<Union> (?B ` ?A)) = (UN x:?A. \<Union> (?C ` ?B x))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)))),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Complete_Lattices.UN_extend_simps",
     "(UN x:?A. \<Union> (?C ` ?B x)) = \<Union> (?C ` \<Union> (?B ` ?A))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))))),
    ("Infinite_Set.Union_maximal_sets",
     "finite ?\<F> ==>
      \<Union> {T: ?\<F>. ALL U:?\<F>. ~ T < U} = \<Union> ?\<F>",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app
          (template_hole 6, template_app (template_hole 5, t_empty)),
         template_app (template_hole 6, template_var 0)))),
    ("Order_Union.Osum_minus_Id1",
     "?r <= Id ==>
      (?r \<union>o ?r') - Id <= ?r' - Id Un Field ?r \<times> Field ?r'",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_hole 5)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_hole 5),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 5)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             t_empty))))),
    ("Order_Union.Osum_minus_Id2",
     "?r' <= Id ==>
      (?r \<union>o ?r') - Id <= ?r - Id Un Field ?r \<times> Field ?r'",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_hole 5)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1)),
           template_hole 5),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 5)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             t_empty))))),
    ("Complete_Lattices.UN_absorb",
     "?k : ?I ==> ?A ?k Un \<Union> (?A ` ?I) = \<Union> (?A ` ?I)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_var 0, template_var 2)),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, t_empty), template_var 1))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 1))))),
    ("Complete_Lattices.UN_least",
     "(!!x. x : ?A ==> ?B x <= ?C) ==> \<Union> (?B ` ?A) <= ?C",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 2)),
         template_var 0))),
    ("Topological_Spaces.generate_topology_Union",
     "(!!k. k : ?I ==> generate_topology ?S (?K k)) ==>
      generate_topology ?S (\<Union> (?K ` ?I))",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, t_empty), template_var 2)))
           ))),
    ("Topological_Spaces.connected_Union",
     "[| !!s. s : ?S ==> connected s; \<Inter> ?S ~= {} |]
      ==> connected (\<Union> ?S)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_negation
         (
            template_equation
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Wellfounded.wf_Un",
     "[| wf ?r; wf ?s; Domain ?r Int Range ?s = {} |] ==> wf (?r Un ?s)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 6, template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            template_app (template_hole 2, template_var 0)),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Order_Union.Osum_antisym",
     "[| Field ?r Int Field ?r' = {}; antisym ?r; antisym ?r' |]
      ==> antisym (?r \<union>o ?r')",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            template_app (template_hole 3, template_var 0)),
          template_hole 2),
        template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Order_Union.Osum_trans",
     "[| Field ?r Int Field ?r' = {}; trans ?r; trans ?r' |]
      ==> trans (?r \<union>o ?r')",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            template_app (template_hole 3, template_var 0)),
          template_hole 2),
        template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Order_Union.Osum_wf",
     "[| Field ?r Int Field ?r' = {}; wf ?r; wf ?r' |]
      ==> wf (?r \<union>o ?r')",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            template_app (template_hole 3, template_var 0)),
          template_hole 2),
        template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Lifting_Set.UNION_transfer",
     "rel_fun (rel_set ?A) (rel_fun (rel_fun ?A (rel_set ?B)) (rel_set ?B))
       (%A f. \<Union> (f ` A)) (%A f. \<Union> (f ` A))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app (template_hole 7, template_var 1)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_app (template_hole 4, template_var 0))),
                 template_app (template_hole 4, template_var 0))),
             t_empty),
           t_empty)
         )),
    ("Complete_Lattices.INT_Un",
     "\<Inter> (?M ` (?A Un ?B)) =
      \<Inter> (?M ` ?A) Int \<Inter> (?M ` ?B)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty), template_var 1))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_var 0))))),
    ("Complete_Lattices.UN_Un",
     "\<Union> (?M ` (?A Un ?B)) =
      \<Union> (?M ` ?A) Un \<Union> (?M ` ?B)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty), template_var 1))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_var 0))))),
    ("Complete_Lattices.UN_simps",
     "(UN x:?C. insert ?a (?B x)) =
      (if ?C = {} then {} else insert ?a (\<Union> (?B ` ?C)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, t_empty), template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 1)),
               template_hole 0),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, t_empty),
                   template_var 0))))
           ))),
    ("Complete_Lattices.UN_simps",
     "(UN x:?C. ?A x Un ?B) =
      (if ?C = {} then {} else \<Union> (?A ` ?C) Un ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, t_empty), template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 1)),
               template_hole 0),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, t_empty),
                     template_var 0))),
               template_var 1))
           ))),
    ("Complete_Lattices.UN_extend_simps",
     "\<Union> (?A ` ?C) Un ?B =
      (if ?C = {} then ?B else UN x:?C. ?A x Un ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, t_empty),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_hole 0)),
               template_var 0),
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, t_empty), template_var 1)))
           ))),
    ("Complete_Lattices.UN_simps",
     "(UN x:?C. ?A Un ?B x) =
      (if ?C = {} then {} else ?A Un \<Union> (?B ` ?C))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, t_empty), template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 1)),
               template_hole 0),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, t_empty),
                   template_var 0))))
           ))),
    ("Complete_Lattices.UN_extend_simps",
     "?A Un \<Union> (?B ` ?C) =
      (if ?C = {} then ?A else UN x:?C. ?A Un ?B x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, t_empty), template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0)),
               template_var 2),
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, t_empty), template_var 0)))
           ))),
    ("Transcendental.product_atMost_eq_Un",
     "?A \<times> {..?m} =
      (SIGMA i:?A. {..?m - i}) Un (SIGMA i:?A. {?m - i<..?m})",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), t_empty),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 4, template_var 1), t_empty)),
         template_app
          (template_app (template_hole 4, template_var 1), t_empty)))),
    ("Complete_Lattices.UN_insert_distrib",
     "?u : ?A ==>
      (UN x:?A. insert ?a (?B x)) = insert ?a (\<Union> (?B ` ?A))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty),
               template_var 2)))))),
    ("Set_Interval.UN_finite_subset",
     "(!!n. \<Union> (?A ` {0..<n}) <= ?C) ==> \<Union> (range ?A) <= ?C",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, t_empty), template_hole 0)),
         template_var 0))),
    ("Equiv_Relations.UN_constant_eq",
     "[| ?a : ?A; ALL y:?A. ?f y = ?c |] ==> \<Union> (?f ` ?A) = ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2), t_empty)
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 2)),
         template_var 0))),
    ("Complete_Lattices.UnionE",
     "[| ?A : \<Union> ?C; !!X. [| ?A : X; X : ?C |] ==> ?R |] ==> ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Complete_Lattices.SUP_UNION",
     "Sup (?f ` \<Union> (?g ` ?A)) = (SUP y\<in>?A. Sup (?f ` ?g y))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 0)))),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Complete_Lattices.UNION_fun_upd",
     "\<Union> (?A(?i := ?B) ` ?J) =
      \<Union> (?A ` (?J - {?i})) Un (if ?i : ?J then ?B else {})",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_app (template_hole 7, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 3),
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_hole 3))))),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_var 1),
           template_hole 0)))),
    ("Complete_Lattices.UN_Un_distrib",
     "(UN i:?I. ?A i Un ?B i) = \<Union> (?A ` ?I) Un \<Union> (?B ` ?I)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))))),
    ("Complete_Lattices.UN_UN_flatten",
     "\<Union> (?C ` \<Union> (?B ` ?A)) = (UN y:?A. \<Union> (?C ` ?B y))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 0)))),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Set.Un_Int_crazy",
     "?A Int ?B Un ?B Int ?C Un ?C Int ?A =
      (?A Un ?B) Int (?B Un ?C) Int (?C Un ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("Countable_Set_Type.cUn_cInt_crazy",
     "cUn (cUn (cInt ?A ?B) (cInt ?B ?C)) (cInt ?C ?A) =
      cInt (cInt (cUn ?A ?B) (cUn ?B ?C)) (cUn ?C ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("Complete_Lattices.Union_subsetI",
     "(!!x. x : ?A ==> EX y. y : ?B & x <= y) ==>
      \<Union> ?A <= \<Union> ?B",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Countable_Set.countable_UN",
     "[| countable ?I; !!i. i : ?I ==> countable (?A i) |]
      ==> countable (\<Union> (?A ` ?I))",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, t_empty), template_var 1)))
           ))),
    ("Finite_Set.card_Un_Int",
     "[| finite ?A; finite ?B |]
      ==> card ?A + card ?B = card (?A Un ?B) + card (?A Int ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0))),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))))),
    ("Finite_Set.finite_UN_I",
     "[| finite ?A; !!a. a : ?A ==> finite (?B a) |]
      ==> finite (\<Union> (?B ` ?A))",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, t_empty), template_var 1)))
           ))),
    ("Cardinal_Order_Relation.card_of_Un_infinite_simps",
     "[| infinite ?A; |?B| \<le>o |?A| |] ==> |?A Un ?B| =o |?A|",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 0)),
                  template_app (template_hole 3, template_var 1))),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 0))),
                 template_app (template_hole 3, template_var 1))),
             template_hole 0)
           ))),
    ("Cardinal_Order_Relation.card_of_Un_infinite_simps",
     "[| infinite ?A; |?B| \<le>o |?A| |] ==> |?B Un ?A| =o |?A|",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 0)),
                  template_app (template_hole 3, template_var 1))),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_var 1))),
                 template_app (template_hole 3, template_var 1))),
             template_hole 0)
           ))),
    ("Cardinal_Order_Relation.card_of_Un_diff_infinite",
     "[| infinite ?A; |?B| <o |?A| |] ==> |?A - ?B| =o |?A|",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 0)),
                  template_app (template_hole 3, template_var 1))),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 0))),
                 template_app (template_hole 3, template_var 1))),
             template_hole 0)
           ))),
    ("Groups_Big.card_Union_disjoint",
     "[| pairwise disjnt ?C; !!A. A : ?C ==> finite A |]
      ==> card (\<Union> ?C) = sum card ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_app (template_hole 0, template_hole 2),
           template_var 0)))),
    ("Order_Relation_More.Under_Above_Galois",
     "[| ?B <= Field ?r; ?C <= Field ?r |]
      ==> (?B <= Above ?r ?C) = (?C <= Under ?r ?B)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 3, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("Order_Relation_More.UnderS_AboveS_Galois",
     "[| ?B <= Field ?r; ?C <= Field ?r |]
      ==> (?B <= AboveS ?r ?C) = (?C <= UnderS ?r ?B)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 3, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("Order_Relation_More.Refl_under_Under",
     "[| Refl ?r; ?A ~= {} |] ==> Under ?r ?A = \<Inter> (under ?r ` ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))))),
    ("Order_Relation_More.Refl_underS_UnderS",
     "[| Refl ?r; ?A ~= {} |] ==> UnderS ?r ?A = \<Inter> (underS ?r ` ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))))),
    ("Finite_Set.card_Un_disjnt",
     "[| finite ?A; finite ?B; disjnt ?A ?B |]
      ==> card (?A Un ?B) = card ?A + card ?B",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("Order_Relation_More.under_Under_trans",
     "[| trans ?r; ?a : under ?r ?b; ?b : Under ?r ?C |]
      ==> ?a : Under ?r ?C",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Topological_Spaces.continuous_on_open_Un",
     "[| open ?s; open ?t; continuous_on ?s ?f; continuous_on ?t ?f |]
      ==> continuous_on (?s Un ?t) ?f",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("Topological_Spaces.continuous_on_closed_Un",
     "[| closed ?s; closed ?t; continuous_on ?s ?f; continuous_on ?t ?f |]
      ==> continuous_on (?s Un ?t) ?f",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("Complete_Lattices.UN_extend_simps",
     "insert ?a (\<Union> (?B ` ?C)) =
      (if ?C = {} then {?a} else UN x:?C. insert ?a (?B x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, t_empty), template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 1)),
               template_app
                (template_app (template_hole 6, template_var 2),
                 template_hole 0)),
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, t_empty), template_var 0)))
           ))),
    ("Complete_Lattices.Union_SetCompr_eq",
     "\<Union> {?f x |x. ?P x} = {a. EX x. ?P x & a : ?f x}",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, t_empty)),
       template_app (template_hole 1, t_empty))),
    ("Cardinal_Order_Relation.card_of_Un_singl_ordLess_infinite",
     "infinite ?B ==> (|?A| <o |?B|) = (|{?a} Un ?A| <o |?B|)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 9, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 1)),
               template_app (template_hole 4, template_var 2))),
           template_hole 3),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 0),
                         template_hole 0)),
                     template_var 1))),
               template_app (template_hole 4, template_var 2))),
           template_hole 3)))),
    ("Lifting_Set.rel_set_UNION",
     "[| rel_set ?Q ?A ?B; rel_fun ?Q (rel_set ?R) ?f ?g |]
      ==> rel_set ?R (\<Union> (?f ` ?A)) (\<Union> (?g ` ?B))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_app (template_hole 4, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 4))),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3)))
           ))),
    ("Countable_Set_Type.rel_cset_cUNION",
     "[| rel_cset ?Q ?A ?B; rel_fun ?Q (rel_cset ?R) ?f ?g |]
      ==> rel_cset ?R (cUnion (cimage ?f ?A)) (cUnion (cimage ?g ?B))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_app (template_hole 4, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 4))),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3)))
           ))),
    ("Countable_Set_Type.cuUnE",
     "[| cin ?c (cUn ?A ?B); cin ?c ?A ==> ?P; cin ?c ?B ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Set.UnE",
     "[| ?c : ?A Un ?B; ?c : ?A ==> ?P; ?c : ?B ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Hilbert_Choice.Ex_inj_on_UNION_Sigma",
     "EX f. inj_on f (\<Union> (?A ` ?I)) &
            f ` \<Union> (?A ` ?I) <= Sigma ?I ?A",
     template_predicate (template_app (template_hole 7, t_empty))),
    ("Relation.SUP_UN_eq2",
     "(SUP i\<in>?S. (%x y. (x, y) : ?r i)) =
      (%x y. (x, y) : \<Union> (?r ` ?S))",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty), template_var 0)),
       t_empty)),
    ("Relation.sup_Un_eq2",
     "sup (%x y. (x, y) : ?R) (%x y. (x, y) : ?S) =
      (%x y. (x, y) : ?R Un ?S)",
     template_equation
      (template_app (template_app (template_hole 3, t_empty), t_empty),
       t_empty)),
    ("Wellfounded.wfPUNIVI",
     "(!!P x. ALL x. (ALL y. ?r y x --> P y) --> P x ==> P x) ==> wfP ?r",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Series.suminf_eq_SUP_real",
     "[| summable ?X; !!i. 0 <= ?X i |]
      ==> suminf ?X = (SUP i. sum ?X {..<i})",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, t_empty), template_hole 0))))),
    ("Wellorder_Extension.chain_subset_extension_on_Union",
     "[| chain\<^sub>\<subseteq> ?R;
         !!r. r : ?R ==> extension_on (Field r) r ?p |]
      ==> extension_on (Field (\<Union> ?R)) (\<Union> ?R) ?p",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1))),
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Cardinal_Order_Relation.card_of_Un_singl_ordLess_infinite1",
     "[| infinite ?B; |?A| <o |?B| |] ==> |{?a} Un ?A| <o |?B|",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 8, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 1)),
                  template_app (template_hole 4, template_var 2))),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 0),
                           template_hole 0)),
                       template_var 1))),
                 template_app (template_hole 4, template_var 2))),
             template_hole 3)
           ))),
    ("Countable_Set_Type.cUN_E",
     "[| cin ?b (cUnion (cimage ?B ?A));
         !!x. [| cin x ?A; cin ?b (?B x) |] ==> ?R |]
      ==> ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Complete_Lattices.SUP1_E",
     "[| Sup (?B ` ?A) ?b; !!x. [| x : ?A; ?B x ?b |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, t_empty), template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Finite_Set.card_Un_disjoint",
     "[| finite ?A; finite ?B; ?A Int ?B = {} |]
      ==> card (?A Un ?B) = card ?A + card ?B",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 1), template_var 0),
          template_hole 4)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("Product_Type.UN_Times_distrib",
     "(UN (a, b):?A \<times> ?B. ?E a \<times> ?F b) =
      \<Union> (?E ` ?A) \<times> \<Union> (?F ` ?B)",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app
            (template_hole 7, template_app (template_hole 6, t_empty)),
           template_app
            (template_app (template_hole 4, template_var 1), t_empty))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1))),
         t_empty))),
    ("Complete_Lattices.Int_UN_distrib2",
     "\<Union> (?A ` ?I) Int \<Union> (?B ` ?J) =
      (UN i:?I. UN j:?J. ?A i Int ?B j)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 2))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, t_empty), template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 2)))),
    ("Complete_Lattices.Un_INT_distrib2",
     "\<Inter> (?A ` ?I) Un \<Inter> (?B ` ?J) =
      (INT i:?I. INT j:?J. ?A i Un ?B j)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 2))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, t_empty), template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 2)))),
    ("Fun.inj_on_Un",
     "inj_on ?f (?A Un ?B) =
      (inj_on ?f ?A &
       inj_on ?f ?B & ?f ` (?A - ?B) Int ?f ` (?B - ?A) = {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 7, template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 7, template_var 2),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_var 2),
                         template_app
                          (template_app (template_hole 1, template_var 1),
                           template_var 0))),
                     template_app
                      (template_app (template_hole 2, template_var 2),
                       template_app
                        (template_app (template_hole 1, template_var 0),
                         template_var 1)))),
                 template_hole 0)))
           ))),
    ("Hull.hull_Un",
     "(!!T. Ball T ?S ==> ?S (\<Inter> T)) ==>
      ?S hull (?s Un ?t) = ?S hull (?S hull ?s Un ?S hull ?t)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)))))),
    ("Wellfounded.wfUNIVI",
     "(!!P x. ALL x. (ALL y. (y, x) : ?r --> P y) --> P x ==> P x) ==>
      wf ?r",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Groups_Big.sum_Un_nat",
     "[| finite ?A; finite ?B |]
      ==> sum ?f (?A Un ?B) = sum ?f ?A + sum ?f ?B - sum ?f (?A Int ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_var 2)),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 1))),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)))))),
    ("Groups_Big.sum_Un",
     "[| finite ?A; finite ?B |]
      ==> sum ?f (?A Un ?B) = sum ?f ?A + sum ?f ?B - sum ?f (?A Int ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_var 2)),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 1))),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)))))),
    ("Complete_Lattices.SUP2_E",
     "[| Sup (?B ` ?A) ?b ?c; !!x. [| x : ?A; ?B x ?b ?c |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, t_empty),
                    template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Complete_Lattices.UN_E",
     "[| ?b : \<Union> (?B ` ?A); !!x. [| x : ?A; ?b : ?B x |] ==> ?R |]
      ==> ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, t_empty), template_var 1)))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Topological_Spaces.continuous_on_open_Union",
     "[| !!s. s : ?S ==> open s; !!s. s : ?S ==> continuous_on s ?f |]
      ==> continuous_on (\<Union> ?S) ?f",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Order_Relation_More.under_UnderS_trans",
     "[| trans ?r; antisym ?r; ?a : under ?r ?b; ?b : UnderS ?r ?C |]
      ==> ?a : UnderS ?r ?C",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Order_Relation_More.underS_Under_trans",
     "[| trans ?r; antisym ?r; ?a : underS ?r ?b; ?b : Under ?r ?C |]
      ==> ?a : UnderS ?r ?C",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Order_Relation_More.underS_UnderS_trans",
     "[| trans ?r; antisym ?r; ?a : underS ?r ?b; ?b : UnderS ?r ?C |]
      ==> ?a : UnderS ?r ?C",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Countable_Set_Type.cUN_mono",
     "[| csubset_eq ?A ?B; !!x. cin x ?A ==> csubset_eq (?f x) (?g x) |]
      ==> csubset_eq (cUnion (cimage ?f ?A)) (cUnion (cimage ?g ?B))",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Equiv_Relations.UN_equiv_class",
     "[| equiv ?A ?r; ?f respects ?r; ?a : ?A |]
      ==> \<Union> (?f ` ?r `` {?a}) = ?f ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))),
         template_app (template_var 1, template_var 0)))),
    ("Groups_Big.sum_Un2",
     "finite (?A Un ?B) ==>
      sum ?f (?A Un ?B) =
      sum ?f (?A - ?B) + sum ?f (?B - ?A) + sum ?f (?A Int ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1))),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 2)))),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)))))),
    ("Order_Union.Osum_Linear_order",
     "[| Field ?r Int Field ?r' = {}; Linear_order ?r; Linear_order ?r' |]
      ==> Linear_order (?r \<union>o ?r')",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            template_app (template_hole 3, template_var 0)),
          template_hole 2),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 3, template_var 1)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 3, template_var 0)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Order_Union.Osum_Partial_order",
     "[| Field ?r Int Field ?r' = {}; Partial_order ?r; Partial_order ?r' |]
      ==> Partial_order (?r \<union>o ?r')",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            template_app (template_hole 3, template_var 0)),
          template_hole 2),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 3, template_var 1)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 3, template_var 0)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Order_Union.Osum_Preorder",
     "[| Field ?r Int Field ?r' = {}; Preorder ?r; Preorder ?r' |]
      ==> Preorder (?r \<union>o ?r')",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            template_app (template_hole 3, template_var 0)),
          template_hole 2),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 3, template_var 1)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 3, template_var 0)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Order_Union.Osum_Well_order",
     "[| Field ?r Int Field ?r' = {}; Well_order ?r; Well_order ?r' |]
      ==> Well_order (?r \<union>o ?r')",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            template_app (template_hole 3, template_var 0)),
          template_hole 2),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 3, template_var 1)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 3, template_var 0)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Order_Union.Osum_Refl",
     "[| Field ?r Int Field ?r' = {}; Refl ?r; Refl ?r' |]
      ==> Refl (?r \<union>o ?r')",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            template_app (template_hole 3, template_var 0)),
          template_hole 2),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 3, template_var 1)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 3, template_var 0)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Order_Union.Osum_Total",
     "[| Field ?r Int Field ?r' = {}; Total ?r; Total ?r' |]
      ==> Total (?r \<union>o ?r')",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            template_app (template_hole 3, template_var 0)),
          template_hole 2),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 3, template_var 1)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 3, template_var 0)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Wellfounded.wf_Union",
     "[| ALL r:?R. wf r;
         ALL r:?R. ALL s:?R. r ~= s --> Domain r Int Range s = {} |]
      ==> wf (\<Union> ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 9,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Fun.notIn_Un_bij_betw3",
     "[| ?b ~: ?A; ?f ?b ~: ?A' |]
      ==> bij_betw ?f ?A ?A' = bij_betw ?f (?A Un {?b}) (?A' Un {?f ?b})",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 3),
                  template_var 2)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_var 1, template_var 3)),
                  template_var 0)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, template_var 1),
             template_var 2),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 1),
             template_app
              (template_app (template_hole 5, template_var 2),
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_hole 3))),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_var 1, template_var 3)),
               template_hole 0)))))),
    ("Hilbert_Choice.finite_subset_Union",
     "[| finite ?A; ?A <= \<Union> ?\<B>;
         !!\<F>.
            [| finite \<F>; \<F> <= ?\<B>; ?A <= \<Union> \<F> |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 3, template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Complete_Lattices.UN_mono",
     "[| ?A <= ?B; !!x. x : ?A ==> ?f x <= ?g x |]
      ==> \<Union> (?f ` ?A) <= \<Union> (?g ` ?B)",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 3)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 2))))),
    ("Set.subset_UnE",
     "[| ?C <= ?A Un ?B;
         !!A' B'. [| A' <= ?A; B' <= ?B; ?C = A' Un B' |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 1)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Cardinal_Order_Relation.card_of_Un_ordLeq_infinite",
     "[| infinite ?C; |?A| \<le>o |?C|; |?B| \<le>o |?C| |]
      ==> |?A Un ?B| \<le>o |?C|",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 1)),
                  template_app (template_hole 2, template_var 2))),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 0)),
                  template_app (template_hole 2, template_var 2))),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0))),
                 template_app (template_hole 2, template_var 2))),
             template_hole 1)
           ))),
    ("Cardinal_Order_Relation.card_of_Un_ordLess_infinite",
     "[| infinite ?C; |?A| <o |?C|; |?B| <o |?C| |] ==> |?A Un ?B| <o |?C|",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 1)),
                  template_app (template_hole 2, template_var 2))),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 0)),
                  template_app (template_hole 2, template_var 2))),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0))),
                 template_app (template_hole 2, template_var 2))),
             template_hole 1)
           ))),
    ("Fun.notIn_Un_bij_betw",
     "[| ?b ~: ?A; ?f ?b ~: ?A'; bij_betw ?f ?A ?A' |]
      ==> bij_betw ?f (?A Un {?b}) (?A' Un {?f ?b})",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 2)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_var 1, template_var 3)),
                  template_var 0)
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, template_var 1),
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_hole 3))),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_var 1, template_var 3)),
                 template_hole 0)))
           ))),
    ("Cardinal_Order_Relation.card_of_Un_infinite",
     "[| infinite ?A; |?B| \<le>o |?A| |]
      ==> |?A Un ?B| =o |?A| & |?B Un ?A| =o |?A|",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 7, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 0)),
                  template_app (template_hole 4, template_var 1))),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 1, template_var 1),
                           template_var 0))),
                     template_app (template_hole 4, template_var 1))),
                 template_hole 0)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 1, template_var 0),
                         template_var 1))),
                   template_app (template_hole 4, template_var 1))),
               template_hole 0))
           ))),
    ("Topological_Spaces.continuous_on_open_UN",
     "[| !!s. s : ?S ==> open (?A s);
         !!s. s : ?S ==> continuous_on (?A s) ?f |]
      ==> continuous_on (\<Union> (?A ` ?S)) ?f",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, t_empty),
                   template_var 2))),
             template_var 0)
           ))),
    ("Wellfounded.wfP_SUP",
     "[| ALL i. wfP (?r i);
         ALL i j.
            ?r i ~= ?r j --> inf (Domainp (?r i)) (Rangep (?r j)) = bot |]
      ==> wfP (Sup (range ?r))",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 11,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("Fun.inj_on_disjoint_Un",
     "[| inj_on ?f ?A; inj_on ?g ?B; ?f ` ?A Int ?g ` ?B = {} |]
      ==> inj_on (%x. if x : ?A then ?f x else ?g x) (?A Un ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2)),
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)),
          template_hole 3)],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, t_empty),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Fun_More.notIn_Un_bij_betw2",
     "[| ?b ~: ?A; ?b' ~: ?A'; bij_betw ?f ?A ?A' |]
      ==> bij_betw ?f (?A Un {?b}) (?A' Un {?b'}) = (?f ?b = ?b')",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 3)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_var 1)
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 0),
                template_var 3),
              template_var 1)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 8, template_var 0),
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_app
                     (template_app (template_hole 5, template_var 4),
                      template_hole 4))),
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_hole 1)))
              )],
         template_equation
          (template_app (template_var 0, template_var 4),
           template_var 2)))),
    ("Equiv_Relations.congruent2_implies_congruent_UN",
     "[| equiv ?A1.0 ?r1.0; equiv ?A2.0 ?r2.0; congruent2 ?r1.0 ?r2.0 ?f;
         ?a : ?A2.0 |]
      ==> (%x1. \<Union> (?f x1 ` ?r2.0 `` {?a})) respects ?r1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 4),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 4), t_empty)
           ))),
    ("Set_Interval.UN_finite2_eq",
     "(!!n. \<Union> (?A ` {0..<n}) = \<Union> (?B ` {0..<n + ?k})) ==>
      \<Union> (range ?A) = \<Union> (range ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty), template_hole 0)),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty), template_hole 0))))),
    ("Set_Interval.UN_finite2_subset",
     "(!!n. \<Union> (?A ` {0..<n}) <= \<Union> (?B ` {0..<n + ?k})) ==>
      \<Union> (range ?A) <= \<Union> (range ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty), template_hole 0)),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty), template_hole 0))))),
    ("Cardinal_Order_Relation.card_of_Un_ordLess_infinite_Field",
     "[| infinite (Field ?r); Card_order ?r; |?A| <o ?r; |?B| <o ?r |]
      ==> |?A Un ?B| <o ?r",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 2))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 6, template_var 2)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 2, template_var 1)),
                  template_var 2)),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 2, template_var 0)),
                  template_var 2)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0))),
                 template_var 2)),
             template_hole 1)
           ))),
    ("Topological_Spaces.continuous_on_closed_Union",
     "[| finite ?I; !!i. i : ?I ==> closed (?U i);
         !!i. i : ?I ==> continuous_on (?U i) ?f |]
      ==> continuous_on (\<Union> (?U ` ?I)) ?f",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, t_empty),
                   template_var 2))),
             template_var 0)
           ))),
    ("Order_Union.Osum_minus_Id",
     "[| Total ?r; Total ?r'; ~ ?r <= Id; ~ ?r' <= Id |]
      ==> (?r \<union>o ?r') - Id <= ?r - Id \<union>o ?r' - Id",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0)),
              template_var 0)
            ),
        template_negation
         (
            template_inequation
             (less_equals, template_var 1, template_hole 2)
            ),
        template_negation
         (
            template_inequation
             (less_equals, template_var 0, template_hole 2)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_hole 2),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 2)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 2))))),
    ("Transitive_Closure.rtrancl_Un_separatorE",
     "[| (?a, ?b) : (?P Un ?Q)^*;
         ALL x y. (?a, x) : ?P^* --> (x, y) : ?Q --> x = y |]
      ==> (?a, ?b) : ?P^*",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 3),
                 template_var 2)),
             template_app (template_hole 4, template_var 1))
           ))),
    ("Transitive_Closure.rtrancl_Un_separator_converseE",
     "[| (?a, ?b) : (?P Un ?Q)^*;
         ALL x y. (x, ?b) : ?P^* --> (y, x) : ?Q --> y = x |]
      ==> (?a, ?b) : ?P^*",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 3),
                 template_var 2)),
             template_app (template_hole 4, template_var 1))
           ))),
    ("Equiv_Relations.UN_equiv_class_type",
     "[| equiv ?A ?r; ?f respects ?r; ?X : ?A // ?r;
         !!x. x : ?A ==> ?f x : ?B |]
      ==> \<Union> (?f ` ?X) : ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, t_empty),
                   template_var 1))),
             template_var 0)
           ))),
    ("Zorn.finite_subset_Union_chain",
     "[| finite ?A; ?A <= \<Union> ?\<B>; ?\<B> ~= {};
         subset.chain ?\<A> ?\<B>;
         !!B. [| B : ?\<B>; ?A <= B |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 3)),
        template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 7, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_hole 2),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Equiv_Relations.UN_UN_split_split_eq",
     "(UN (x1, x2):?X. UN (y1, y2):?Y. ?A x1 x2 y1 y2) =
      (UN x:?X.
          UN y:?Y.
             case x of (x1, x2) => case y of (y1, y2) => ?A x1 x2 y1 y2)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3, template_app (template_hole 2, t_empty)),
           template_var 0)),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)))),
    ("Set.Un_singleton_iff",
     "(?A Un ?B = {?x}) =
      (?A = {} & ?B = {?x} | ?A = {?x} & ?B = {} | ?A = {?x} & ?B = {?x})",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_hole 2)),
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_hole 2)))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 5, template_var 2),
                       template_app
                        (template_app (template_hole 3, template_var 0),
                         template_hole 2))),
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_hole 2))),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_app
                      (template_app (template_hole 3, template_var 0),
                       template_hole 2))),
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_hole 2)))))
           ))),
    ("Set.singleton_Un_iff",
     "({?x} = ?A Un ?B) =
      (?A = {} & ?B = {?x} | ?A = {?x} & ?B = {} | ?A = {?x} & ?B = {?x})",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 2), template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_hole 3)),
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_hole 3)))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 5, template_var 1),
                       template_app
                        (template_app (template_hole 4, template_var 2),
                         template_hole 3))),
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_hole 3))),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_app
                      (template_app (template_hole 4, template_var 2),
                       template_hole 3))),
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_hole 3)))))
           ))),
    ("Countable_Set_Type.csingleton_cUn_iff",
     "(csingle ?x = cUn ?A ?B) =
      (?A = cempty & ?B = csingle ?x |
       ?A = csingle ?x & ?B = cempty | ?A = csingle ?x & ?B = csingle ?x)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 2), template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_hole 3)),
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_hole 3)))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 5, template_var 1),
                       template_app
                        (template_app (template_hole 4, template_var 2),
                         template_hole 3))),
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_hole 3))),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_app
                      (template_app (template_hole 4, template_var 2),
                       template_hole 3))),
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_hole 3)))))
           ))),
    ("Countable_Set_Type.cUn_csingleton_iff",
     "(cUn ?A ?B = csingle ?x) =
      (?A = cempty & ?B = csingle ?x |
       ?A = csingle ?x & ?B = cempty | ?A = csingle ?x & ?B = csingle ?x)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_hole 2)),
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_hole 2)))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 5, template_var 2),
                       template_app
                        (template_app (template_hole 3, template_var 0),
                         template_hole 2))),
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_hole 2))),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_app
                      (template_app (template_hole 3, template_var 0),
                       template_hole 2))),
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_hole 2)))))
           ))),
    ("Cardinal_Order_Relation.stable_UNION",
     "[| stable ?r; |?A| <o ?r; !!a. a : ?A ==> |?F a| <o ?r |]
      ==> |\<Union> (?F ` ?A)| <o ?r",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 1)),
                  template_var 2)),
              template_hole 8)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, t_empty),
                         template_var 1)))),
                 template_var 2)),
             template_hole 2)
           ))),
    ("Groups_Big.prod_Un",
     "[| finite ?A; finite ?B; ALL x:?A Int ?B. ?f x ~= (0::?'a) |]
      ==> prod ?f (?A Un ?B) =
          prod ?f ?A * prod ?f ?B / prod ?f (?A Int ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 2)),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 1))),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app (template_hole 7, template_var 2),
               template_var 1)))))),
    ("Order_Union.Osum_wf_Id",
     "[| Total ?r; Total ?r'; Field ?r Int Field ?r' = {}; wf (?r - Id);
         wf (?r' - Id) |]
      ==> wf ((?r \<union>o ?r') - Id)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 0)),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 7, template_var 1)),
            template_app (template_hole 7, template_var 0)),
          template_hole 4),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 1),
                template_hole 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 0),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_hole 1))
           ))),
    ("Binomial.card_UNION",
     "[| finite ?A; ALL k:?A. finite k |]
      ==> card (\<Union> ?A) =
          nat (SUM I | I <= ?A & I ~= {}.
                  (- 1) ^ (card I + 1) * int (card (\<Inter> I)))",
     template_implication
      ([template_predicate
         (template_app (template_hole 22, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 21, template_var 0), t_empty)
            )],
       template_equation
        (template_app
          (template_hole 18,
           template_app (template_hole 17, template_var 0)),
         template_app
          (template_hole 16,
           template_app
            (template_app (template_hole 15, t_empty),
             template_app (template_hole 5, t_empty)))))),
    ("Cardinal_Order_Relation.Card_order_Un_infinite",
     "[| infinite (Field ?r); Card_order ?r; ?p \<le>o ?r |]
      ==> |Field ?r Un Field ?p| =o ?r & |Field ?p Un Field ?r| =o ?r",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 1))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 8, template_var 1)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_var 1)),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_hole 8, template_var 1)),
                           template_app
                            (template_hole 8, template_var 0)))),
                     template_var 1)),
                 template_hole 0)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app (template_hole 8, template_var 0)),
                         template_app (template_hole 8, template_var 1)))),
                   template_var 1)),
               template_hole 0))
           ))),
    ("Conditionally_Complete_Lattices.cSUP_eq_cINF_D",
     "[| Sup (?f ` ?A) = Inf (?f ` ?A); bdd_above (?f ` ?A);
         bdd_below (?f ` ?A); ?a : ?A |]
      ==> ?f ?a = Inf (?f ` ?A)",
     template_implication
      ([template_equation
         (template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, t_empty), template_var 1)),
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 4, t_empty), template_var 1))),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app (template_var 2, template_var 0),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 4, t_empty), template_var 1))))),
    ("Cardinal_Order_Relation.card_of_UNION_Sigma2",
     "(!!i j. [| {i, j} <= ?I; i ~= j |] ==> ?A i Int ?A j = {}) ==>
      |\<Union> (?A ` ?I)| =o |Sigma ?I ?A|",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, t_empty),
                         template_var 1)))),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0)))),
             template_hole 0)
           ))),
    ("Fun.bij_betw_disjoint_Un",
     "[| bij_betw ?f ?A ?C; bij_betw ?g ?B ?D; ?A Int ?B = {};
         ?C Int ?D = {} |]
      ==> bij_betw (%x. if x : ?A then ?f x else ?g x) (?A Un ?B)
           (?C Un ?D)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app (template_hole 8, template_var 4), template_var 1),
          template_hole 7),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 3), template_var 0),
          template_hole 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 10, t_empty),
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Groups_Big.card_UN_disjoint",
     "[| finite ?I; ALL i:?I. finite (?A i);
         ALL i:?I. ALL j:?I. i ~= j --> ?A i Int ?A j = {} |]
      ==> card (\<Union> (?A ` ?I)) = (SUM i:?I. card (?A i))",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1), t_empty)
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1))),
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Complete_Lattices.inj_on_UNION_chain",
     "[| !!i j. [| i : ?I; j : ?I |] ==> ?A i <= ?A j | ?A j <= ?A i;
         !!i. i : ?I ==> inj_on ?f (?A i) |]
      ==> inj_on ?f (\<Union> (?A ` ?I))",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, t_empty), template_var 2)))
           ))),
    ("Wellorder_Embedding.UNION_bij_betw_ofilter",
     "[| Well_order ?r; !!i. i : ?I ==> ofilter ?r (?A i);
         !!i. i : ?I ==> bij_betw ?f (?A i) (?A' i) |]
      ==> bij_betw ?f (\<Union> (?A ` ?I)) (\<Union> (?A' ` ?I))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 4)),
              template_var 4)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, t_empty),
                   template_var 3))),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)))
           ))),
    ("Equiv_Relations.UN_equiv_class2",
     "[| equiv ?A1.0 ?r1.0; equiv ?A2.0 ?r2.0; congruent2 ?r1.0 ?r2.0 ?f;
         ?a1.0 : ?A1.0; ?a2.0 : ?A2.0 |]
      ==> (UN x1:?r1.0 `` {?a1.0}. \<Union> (?f x1 ` ?r2.0 `` {?a2.0})) =
          ?f ?a1.0 ?a2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 5),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, t_empty),
             template_app
              (template_app (template_hole 2, template_var 5),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)))),
         template_app
          (template_app (template_var 2, template_var 1),
           template_var 0)))),
    ("Wellfounded.wf_UN",
     "[| !!i. i : ?I ==> wf (?r i);
         !!i j.
            [| i : ?I; j : ?I; ?r i ~= ?r j |]
            ==> Domain (?r i) Int Range (?r j) = {} |]
      ==> wf (\<Union> (?r ` ?I))",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 9,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, t_empty), template_var 1)))
           ))),
    ("Limits.isCont_eq_Ub",
     "[| ?a <= ?b; ALL x. ?a <= x & x <= ?b --> isCont ?f x |]
      ==> EX M. (ALL x. ?a <= x & x <= ?b --> ?f x <= M) &
                (EX x>=?a. x <= ?b & ?f x = M)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Conditionally_Complete_Lattices.cSUP_UNION",
     "[| ?A ~= {}; !!x. x : ?A ==> ?B x ~= {};
         bdd_above (UN x:?A. ?f ` ?B x) |]
      ==> Sup (?f ` \<Union> (?B ` ?A)) = (SUP x\<in>?A. Sup (?f ` ?B x))",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 13)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, t_empty), template_var 2)))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 5, t_empty),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, t_empty),
                 template_var 2)))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, t_empty), template_var 2))))),
    ("Conditionally_Complete_Lattices.cINF_UNION",
     "[| ?A ~= {}; !!x. x : ?A ==> ?B x ~= {};
         bdd_below (UN x:?A. ?f ` ?B x) |]
      ==> Inf (?f ` \<Union> (?B ` ?A)) = (INF x\<in>?A. Inf (?f ` ?B x))",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 13)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, t_empty), template_var 2)))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 5, t_empty),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, t_empty),
                 template_var 2)))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, t_empty), template_var 2))))),
    ("Complete_Lattices.bij_betw_UNION_chain",
     "[| !!i j. [| i : ?I; j : ?I |] ==> ?A i <= ?A j | ?A j <= ?A i;
         !!i. i : ?I ==> bij_betw ?f (?A i) (?A' i) |]
      ==> bij_betw ?f (\<Union> (?A ` ?I)) (\<Union> (?A' ` ?I))",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, t_empty),
                   template_var 3))),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)))
           ))),
    ("Limits.isCont_has_Ub",
     "[| ?a <= ?b; ALL x. ?a <= x & x <= ?b --> isCont ?f x |]
      ==> EX M. (ALL x. ?a <= x & x <= ?b --> ?f x <= M) &
                (ALL N<M. EX x>=?a. x <= ?b & N < ?f x)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Equiv_Relations.UN_equiv_class_type2",
     "[| equiv ?A1.0 ?r1.0; equiv ?A2.0 ?r2.0; congruent2 ?r1.0 ?r2.0 ?f;
         ?X1.0 : ?A1.0 // ?r1.0; ?X2.0 : ?A2.0 // ?r2.0;
         !!x1 x2. [| x1 : ?A1.0; x2 : ?A2.0 |] ==> ?f x1 x2 : ?B |]
      ==> (UN x1:?X1.0. \<Union> (?f x1 ` ?X2.0)) : ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 7),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 6),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app
               (template_app (template_hole 10, template_var 7),
                template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_app (template_hole 8, template_var 5),
                template_var 4))
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, t_empty),
                   template_var 2))),
             template_var 0)
           ))),
    ("Limits.isCont_Lb_Ub",
     "[| ?a <= ?b; ALL x. ?a <= x & x <= ?b --> isCont ?f x |]
      ==> EX L M.
             (ALL x. ?a <= x & x <= ?b --> L <= ?f x & ?f x <= M) &
             (ALL y. L <= y & y <= M --> (EX x>=?a. x <= ?b & ?f x = y))",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Equiv_Relations.UN_equiv_class_inject",
     "[| equiv ?A ?r; ?f respects ?r;
         \<Union> (?f ` ?X) = \<Union> (?f ` ?Y); ?X : ?A // ?r;
         ?Y : ?A // ?r;
         !!x y. [| x : ?A; y : ?A; ?f x = ?f y |] ==> (x, y) : ?r |]
      ==> ?X = ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, t_empty), template_var 1)),
          template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, t_empty), template_var 0))),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation (template_var 1, template_var 0)))]
