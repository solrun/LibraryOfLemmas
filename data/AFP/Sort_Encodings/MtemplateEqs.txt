   [("HOL.ASSUMPTION_cong", "ASSUMPTION ?A = ASSUMPTION ?A",
     template_equation
      (template_app (template_hole 0, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Map.map_of_Cons_code", "map_of [] ?k = None",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Map.restrict_map_to_empty", "?m |` {} = Map.empty",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       t_empty)),
    ("Map.map_add_empty", "?m ++ Map.empty = ?m",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), t_empty),
       template_var 0)),
    ("Map.empty_map_add", "Map.empty ++ ?m = ?m",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_var 0)),
    ("Map.map_upds_Nil1", "?m([] [|->] ?bs) = ?m",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_var 0),
       template_var 1)),
    ("Map.map_upds_Nil2", "?m(?as [|->] []) = ?m",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_var 1)),
    ("Set_Interval.card_atMost", "card {..?u} = Suc ?u",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Num.BitM_inc_eq", "Num.BitM (Num.inc ?n) = num.Bit1 ?n",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Num.inc_BitM_eq", "Num.inc (Num.BitM ?n) = num.Bit0 ?n",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Set_Interval.Compl_atMost", "- {..?k} = {?k<..}",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Set_Interval.atMost_atLeast0", "{..?n} = {0..?n}",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Set_Interval.atLeast0AtMost", "{0..?n} = {..?n}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Set_Interval.lessThan_Suc_atMost", "{..<Suc ?k} = {..?k}",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Meson.skolem_COMBK_iff", "?P = Meson.skolem (Meson.COMBK ?P ?i)",
     template_equation
      (template_var 1,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Map.map_comp_empty", "?m \<circ>\<^sub>m Map.empty = Map.empty",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), t_empty),
       t_empty)),
    ("Map.restrict_map_empty", "Map.empty |` ?D = Map.empty",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       t_empty)),
    ("Map.map_comp_empty", "Map.empty \<circ>\<^sub>m ?m = Map.empty",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       t_empty)),
    ("Num.one_plus_BitM", "num.One + Num.BitM ?n = num.Bit0 ?n",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Num.BitM_plus_one", "Num.BitM ?n + num.One = num.Bit0 ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Map.fst_graph_eq_dom", "fst ` Map.graph ?m = dom ?m",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Map.snd_graph_ran", "snd ` Map.graph ?m = ran ?m",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Order_Relation_More.UnderS_disjoint", "?A Int UnderS ?r ?A = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1)),
       template_hole 0)),
    ("Map.dom_const", "dom (%x. Some (?f x)) = UNIV",
     template_equation
      (template_app (template_hole 2, t_empty), template_hole 0)),
    ("Map.finite_graph_iff_finite_dom",
     "finite (Map.graph ?m) = finite (dom ?m)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("HOL.NO_MATCH_cong", "NO_MATCH ?pat ?val = NO_MATCH ?pat ?val",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Map.map_option_o_empty", "map_option ?f o Map.empty = Map.empty",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         t_empty),
       t_empty)),
    ("Map.empty_upd_none", "Map.empty(?x := None) = Map.empty",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, t_empty), template_var 0),
         template_hole 0),
       t_empty)),
    ("Set_Interval.card_greaterThanAtMost", "card {?l<..?u} = ?u - ?l",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Map.dom_map_of_conv_image_fst", "dom (map_of ?xys) = fst ` set ?xys",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Map.dom_map_option_comp", "dom (map_option ?g o ?m) = dom ?m",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("List.atLeastAtMost_upto", "{?i..?j} = set [?i..?j]",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("List.atMost_upto", "{..?n} = set [0..<Suc ?n]",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("Set_Interval.atLeastSucAtMost_greaterThanAtMost",
     "{Suc ?l..?u} = {?l<..?u}",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Set_Interval.atLeastLessThanSuc_atLeastAtMost",
     "{?l..<Suc ?u} = {?l..?u}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("List.ListMem_iff", "ListMem ?x ?xs = (?x : set ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Set_Interval.card_greaterThanAtMost_int",
     "card {?l<..?u} = nat (?u - ?l)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Set_Interval.card_atLeastAtMost", "card {?l..?u} = Suc ?u - ?l",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("Order_Relation_More.above_Above_singl", "above ?r ?a = Above ?r {?a}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Order_Relation_More.aboveS_AboveS_singl",
     "aboveS ?r ?a = AboveS ?r {?a}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Order_Relation_More.under_Under_singl", "under ?r ?a = Under ?r {?a}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Order_Relation_More.underS_UnderS_singl",
     "underS ?r ?a = UnderS ?r {?a}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Map.dom_restrict", "dom (?m |` ?A) = dom ?m Int ?A",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_var 0))),
    ("Set_Interval.atMost_Int_atLeast", "{..?n} Int {?n..} = {?n}",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Set_Interval.atLeastPlusOneAtMost_greaterThanAtMost_int",
     "{?l + 1..?u} = {?l<..?u}",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Set_Interval.atLeastLessThanPlusOne_atLeastAtMost_int",
     "{?l..<?u + 1} = {?l..?u}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("List.atLeastAtMost_upt", "{?n..?m} = set [?n..<Suc ?m]",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Set_Interval.atMost_Suc", "{..Suc ?k} = insert (Suc ?k) {..?k}",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 2, template_var 0)))),
    ("Set_Interval.image_Suc_atMost", "Suc ` {..?n} = {1..Suc ?n}",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app (template_hole 3, template_var 0)))),
    ("Infinite_Set.MOST_const", "(MOST x. ?P) = (?P | finite UNIV)",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty), template_hole 3),
       template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)))),
    ("Map.dom_eq_empty_conv", "(dom ?f = {}) = (?f = Map.empty)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, t_empty))),
    ("Map.empty_eq_map_of_iff", "(Map.empty = map_of ?xys) = (?xys = [])",
     template_bimplication
      (template_equation
        (t_empty, template_app (template_hole 2, template_var 0)),
       template_equation (template_var 0, template_hole 0))),
    ("Map.map_of_eq_empty_iff", "(map_of ?xys = Map.empty) = (?xys = [])",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), t_empty),
       template_equation (template_var 0, template_hole 0))),
    ("Set_Interval.atMost_eq_iff", "({..?x} = {..?y}) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Set_Interval.atMost_subset_iff", "({..?x} <= {..?y}) = (?x <= ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Infinite_Set.MOST_eq", "(MOST x. x = ?a) = finite UNIV",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty), template_hole 2),
       template_app (template_hole 1, template_hole 0))),
    ("Infinite_Set.MOST_eq", "(MOST x. ?a = x) = finite UNIV",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty), template_hole 2),
       template_app (template_hole 1, template_hole 0))),
    ("Map.map_of_append", "map_of (?xs @ ?ys) = map_of ?ys ++ map_of ?xs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 0)),
         template_app (template_hole 2, template_var 1)))),
    ("Map.dom_map_add", "dom (?m ++ ?n) = dom ?n Un dom ?m",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 0)),
         template_app (template_hole 2, template_var 1)))),
    ("Map.dom_map_option", "dom (%k. map_option (?f k) (?m k)) = dom ?m",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("Set_Interval.image_minus_const_AtMost",
     "(-) ?c ` {..?b} = {?c - ?b..}",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("List.greaterThanAtMost_upto", "{?i<..?j} = set [?i + 1..?j]",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)),
           template_var 0)))),
    ("Set_Interval.atMost_Suc_eq_insert_0",
     "{..Suc ?n} = insert 0 (Suc ` {..?n})",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_hole 3),
           template_app (template_hole 4, template_var 0))))),
    ("Set_Interval.atMost_nat_numeral",
     "{..numeral ?k} = insert (numeral ?k) {..pred_numeral ?k}",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 3,
           template_app (template_hole 0, template_var 0))))),
    ("List.greaterThanAtMost_upt", "{?n<..?m} = set [Suc ?n..<Suc ?m]",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Map.graph_map_comp",
     "Map.graph (?m1.0 \<circ>\<^sub>m ?m2.0) =
      Map.graph ?m2.0 O Map.graph ?m1.0",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Infinite_Set.INFM_const", "(INFM x. ?P) = (?P & infinite UNIV)",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty), template_hole 4),
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("HOL.de_Morgan_conj", "(~ (?P & ?Q)) = (~ ?P | ~ ?Q)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("HOL.de_Morgan_disj", "(~ (?P | ?Q)) = (~ ?P & ~ ?Q)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Map.domIff", "(?a : dom ?m) = (?m ?a ~= None)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_negation
        (
           template_equation
            (template_app (template_var 0, template_var 1), template_hole 0)
           ))),
    ("Map.map_add_assoc",
     "?m1.0 ++ (?m2.0 ++ ?m3.0) = ?m1.0 ++ ?m2.0 ++ ?m3.0",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Map.restrict_restrict", "?m |` ?A |` ?B = ?m |` (?A Int ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Map.restrict_complement_singleton_eq",
     "?f |` (- {?x}) = ?f(?x := None)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2))),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Set_Interval.card_atLeastAtMost_int",
     "card {?l..?u} = nat (?u - ?l + 1)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_hole 0)))),
    ("Map.ran_map_option", "ran (%x. map_option ?f (?m x)) = ?f ` ran ?m",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Set_Interval.image_int_atLeastAtMost",
     "int ` {?a..?b} = {int ?a..int ?b}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Set_Interval.atLeast0_atMost_Suc",
     "{0..Suc ?n} = insert (Suc ?n) {0..?n}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 0)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)))),
    ("Set_Interval.atLeast1_atMost_eq_remove0",
     "{Suc 0..?n} = {..?n} - {0}",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app (template_hole 5, template_hole 4)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_app (template_hole 1, template_hole 4),
           template_hole 0)))),
    ("Set_Interval.image_Suc_atLeastAtMost",
     "Suc ` {?i..?j} = {Suc ?i..Suc ?j}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Map.inj_on_map_add_dom",
     "inj_on (?m ++ ?m') (dom ?m') = inj_on ?m' (dom ?m')",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Infinite_Set.INFM_neq", "(INFM x. x ~= ?a) = infinite UNIV",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty), template_hole 2),
       template_app
        (template_hole 4,
         template_app (template_hole 1, template_hole 0)))),
    ("Infinite_Set.INFM_neq", "(INFM x. ?a ~= x) = infinite UNIV",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty), template_hole 2),
       template_app
        (template_hole 4,
         template_app (template_hole 1, template_hole 0)))),
    ("Fun_More.atLeastLessThan_less", "({0..<?m} < {0..<?n}) = (?m < ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Fun_More.atLeastLessThan_less_eq",
     "({0..<?m} <= {0..<?n}) = (?m <= ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Int.sub_BitM_One_eq",
     "neg_numeral_class.sub (Num.BitM ?n) num.One =
      2 * neg_numeral_class.sub ?n num.One",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_hole 3),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_hole 3))),
         template_app
          (template_app (template_hole 5, template_var 0),
           template_hole 3)))),
    ("Set_Interval.atLeast0_atMost_Suc_eq_insert_0",
     "{0..Suc ?n} = insert 0 (Suc ` {0..?n})",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 3),
         template_app
          (template_app (template_hole 0, template_hole 2),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 0))))),
    ("Map.graph_eq_to_snd_dom",
     "Map.graph ?m = (%x. (x, the (?m x))) ` dom ?m",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app (template_hole 3, t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("Infinite_Set.MOST_iff_cofinite",
     "(MOST x. ?P x) = finite {x. ~ ?P x}",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty), template_hole 3),
       template_app
        (template_hole 2, template_app (template_hole 1, t_empty)))),
    ("Infinite_Set.INFM_iff_infinite",
     "(INFM x. ?P x) = infinite {x. ?P x}",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty), template_hole 3),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1, template_app (template_hole 0, t_empty))))),
    ("Infinite_Set.MOST_Suc_iff", "(MOST n. ?P (Suc n)) = (MOST n. ?P n)",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_hole 0),
       template_app
        (template_app (template_hole 2, t_empty), template_hole 0))),
    ("Divides.divmod_BitM_2_eq",
     "divmod (Num.BitM ?m) (num.Bit0 num.One) = (numeral ?m - 1, 1)",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 0)),
         template_app (template_hole 5, template_hole 4)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0)),
         template_hole 0))),
    ("Map.restrict_map_insert",
     "?f |` insert ?a ?A = (?f |` ?A)(?a := ?f ?a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_var 1),
         template_app (template_var 2, template_var 1)))),
    ("Map.map_add_upds",
     "?m1.0 ++ ?m2.0(?xs [|->] ?ys) = (?m1.0 ++ ?m2.0)(?xs [|->] ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("Map.map_of_eq_None_iff",
     "(map_of ?xys ?x = None) = (?x ~: fst ` set ?xys)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0)),
         template_hole 5),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 1)))))),
    ("Map.map_le_iff_map_add_commute",
     "(?f \<subseteq>\<^sub>m ?f ++ ?g) = (?f ++ ?g = ?g ++ ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("Infinite_Set.not_MOST", "(~ (MOST x. ?P x)) = (INFM x. ~ ?P x)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_hole 1)),
       template_app
        (template_app (template_hole 0, t_empty), template_hole 1))),
    ("Infinite_Set.not_INFM", "(~ (INFM x. ?P x)) = (MOST x. ~ ?P x)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_hole 1)),
       template_app
        (template_app (template_hole 0, t_empty), template_hole 1))),
    ("List.sorted_list_of_set_atMost_Suc",
     "sorted_list_of_set {..Suc ?k} = sorted_list_of_set {..?k} @ [Suc ?k]",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 0)),
           template_hole 0)))),
    ("Map.dom_map_upds",
     "dom (?m(?xs [|->] ?ys)) = set (take (length ?ys) ?xs) Un dom ?m",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 1))),
         template_app (template_hole 5, template_var 2)))),
    ("Set_Interval.image_minus_const_greaterThanAtMost",
     "(-) ?c ` {?a<..?b} = {?c - ?b..<?c - ?a}",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 1)))),
    ("Set_Interval.image_diff_atLeastAtMost",
     "(-) ?d ` {?a..?b} = {?d - ?b..?d - ?a}",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 1)))),
    ("Map.map_add_upd", "?f ++ ?g(?x |-> ?y) = (?f ++ ?g)(?x |-> ?y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2)),
           template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Map.map_of_map_restrict",
     "map_of (map (%k. (k, ?f k)) ?ks) = (Some o ?f) |` set ?ks",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Set_Interval.sum_atLeastAtMost_code",
     "sum ?f {?a..?b} =
      fold_atLeastAtMost_nat (%a. (+) (?f a)) ?a ?b (0::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, t_empty), template_var 1),
           template_var 0),
         template_hole 0))),
    ("Set_Interval.prod_atLeastAtMost_code",
     "prod ?f {?a..?b} =
      fold_atLeastAtMost_nat (%a. (*) (?f a)) ?a ?b (1::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, t_empty), template_var 1),
           template_var 0),
         template_hole 0))),
    ("Map.map_of_map",
     "map_of (map (%(k, v). (k, ?f v)) ?xs) = map_option ?f o map_of ?xs",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5, template_app (template_hole 4, t_empty)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Set_Interval.image_minus_const_atLeastAtMost'",
     "(%t. t - ?d) ` {?a..?b} = {?a - ?d..?b - ?d}",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("Map.graph_map_upd",
     "Map.graph (?m(?k |-> ?v)) =
      insert (?k, ?v) (Map.graph (?m(?k := None)))",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1),
             template_hole 0))))),
    ("Infinite_Set.MOST_nat", "(MOST n. ?P n) = (EX m. ALL n>m. ?P n)",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty), template_hole 4),
       template_app (template_hole 3, t_empty))),
    ("Infinite_Set.MOST_nat_le", "(MOST n. ?P n) = (EX m. ALL n>=m. ?P n)",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty), template_hole 4),
       template_app (template_hole 3, t_empty))),
    ("Infinite_Set.INFM_nat", "(INFM n. ?P n) = (ALL m. EX n>m. ?P n)",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty), template_hole 4),
       template_app (template_hole 3, t_empty))),
    ("Infinite_Set.INFM_nat_le", "(INFM n. ?P n) = (ALL m. EX n>=m. ?P n)",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty), template_hole 4),
       template_app (template_hole 3, t_empty))),
    ("Map.empty_eq_map_add_iff",
     "(Map.empty = ?f ++ ?g) = (?f = Map.empty & ?g = Map.empty)",
     template_bimplication
      (template_equation
        (t_empty,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_dunno)),
    ("Map.map_add_eq_empty_iff",
     "(?f ++ ?g = Map.empty) = (?f = Map.empty & ?g = Map.empty)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         t_empty),
       template_dunno)),
    ("Map.map_add_None",
     "((?m ++ ?n) ?k = None) = (?n ?k = None & ?m ?k = None)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0),
         template_hole 1),
       template_dunno)),
    ("Map.map_add_map_of_foldr",
     "?m ++ map_of ?ps = foldr (%(k, v) m. m(k |-> v)) ?ps ?m",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3, template_app (template_hole 2, t_empty)),
           template_var 0),
         template_var 1))),
    ("Map.fun_upd_restrict",
     "(?m |` ?D)(?x := ?y) = (?m |` (?D - {?x}))(?x := ?y)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_hole 0)))),
           template_var 1),
         template_var 0))),
    ("Map.map_of_zip_map",
     "map_of (zip ?xs (map ?f ?xs)) =
      (%x. if x : set ?xs then Some (?f x) else None)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_var 1))),
       t_empty)),
    ("Map.map_upds_Cons",
     "?m(?a # ?as [|->] ?b # ?bs) = ?m(?a |-> ?b, ?as [|->] ?bs)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 4),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3),
               template_app (template_hole 0, template_var 1))),
           template_var 2),
         template_var 0))),
    ("Map.restrict_upd_same", "?m(?x |-> ?y) |` (- {?x}) = ?m |` (- {?x})",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1),
             template_app (template_hole 3, template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0))),
       template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0))))),
    ("Map.dom_eq_singleton_conv",
     "(dom ?f = {?x}) = (EX v. ?f = [?x |-> v])",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 1)),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_hole 5)),
       template_app (template_hole 4, t_empty))),
    ("Map.map_of_Cons_code",
     "map_of ((?l, ?v) # ?ps) ?k =
      (if ?l = ?k then Some ?v else map_of ?ps ?k)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_dunno)),
    ("Map.map_option_o_map_upd",
     "map_option ?f o ?m(?a |-> ?b) = (map_option ?f o ?m)(?a |-> ?f ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 3)),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 3)),
               template_var 2)),
           template_var 1),
         template_app
          (template_hole 0,
           template_app (template_var 3, template_var 0))))),
    ("Map.graph_fun_upd_None",
     "Map.graph (?m(?k := None)) = {e: Map.graph ?m. fst e ~= ?k}",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app
            (template_app (template_hole 7, template_var 1),
             template_var 0),
           template_hole 6)),
       template_app (template_hole 5, t_empty))),
    ("Map.map_upds_fold_map_upd",
     "?m(?ks [|->] ?vs) = foldl (%m (k, v). m(k |-> v)) ?m (zip ?ks ?vs)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 4, t_empty), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Map.dom_fun_upd",
     "dom (?f(?x := ?y)) =
      (if ?y = None then dom ?f - {?x} else insert ?x (dom ?f))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("Infinite_Set.MOST_conj_distrib",
     "(MOST x. ?P x & ?Q x) = ((MOST x. ?P x) & (MOST x. ?Q x))",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_hole 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, t_empty), template_hole 0)),
         template_app
          (template_app (template_hole 2, t_empty), template_hole 0)))),
    ("Infinite_Set.INFM_disj_distrib",
     "(INFM x. ?P x | ?Q x) = ((INFM x. ?P x) | (INFM x. ?Q x))",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_hole 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, t_empty), template_hole 0)),
         template_app
          (template_app (template_hole 2, t_empty), template_hole 0)))),
    ("Infinite_Set.INFM_imp_distrib",
     "(INFM x. ?P x --> ?Q x) = ((MOST x. ?P x) --> (INFM x. ?Q x))",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty), template_hole 1),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, t_empty), template_hole 1)),
         template_app
          (template_app (template_hole 3, t_empty), template_hole 1)))),
    ("Map.fun_upd_None_restrict",
     "(?m |` ?D)(?x := None) =
      (if ?x : ?D then ?m |` (?D - {?x}) else ?m |` ?D)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 1)),
           template_var 0),
         template_hole 5),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))),
         template_app
          (template_app (template_hole 6, template_var 2),
           template_var 1)))),
    ("Map.map_comp_Some_iff",
     "((?m1.0 \<circ>\<^sub>m ?m2.0) ?k = Some ?v) =
      (EX k'. ?m2.0 ?k = Some k' & ?m1.0 k' = Some ?v)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 3),
               template_var 2),
             template_var 1)),
         template_app (template_hole 4, template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Fun_More.atLeastLessThan_less_eq3",
     "(EX f. inj_on f {0..<?m} & f ` {0..<?m} <= {0..<?n}) = (?m <= ?n)",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Map.restrict_fun_upd",
     "?m(?x := ?y) |` ?D =
      (if ?x : ?D then (?m |` (?D - {?x}))(?x := ?y) else ?m |` ?D)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0)),
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 6, template_var 3),
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_hole 0)))),
               template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 6, template_var 3),
           template_var 0)))),
    ("Map.map_comp_None_iff",
     "((?m1.0 \<circ>\<^sub>m ?m2.0) ?k = None) =
      (?m2.0 ?k = None | (EX k'. ?m2.0 ?k = Some k' & ?m1.0 k' = None))",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1),
           template_var 0),
         template_hole 6),
       template_dunno)),
    ("Map.map_add_Some_iff",
     "((?m ++ ?n) ?k = Some ?x) =
      (?n ?k = Some ?x | ?n ?k = None & ?m ?k = Some ?x)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2),
           template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_dunno)),
    ("Map.dom_override_on",
     "dom (override_on ?f ?g ?A) =
      dom ?f - {a. a : ?A - dom ?g} Un {a. a : ?A Int dom ?g}",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 6, template_var 2)),
             template_app (template_hole 2, t_empty))),
         template_app (template_hole 2, t_empty)))),
    ("Map.dom_if",
     "dom (%x. if ?P x then ?f x else ?g x) =
      dom ?f Int {x. ?P x} Un dom ?g Int {x. ~ ?P x}",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 5, template_var 1)),
             template_app (template_hole 1, t_empty))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 5, template_var 0)),
           template_app (template_hole 1, t_empty))))),
    ("Map.map_upd_Some_unfold",
     "((?m(?a |-> ?b)) ?x = Some ?y) =
      (?x = ?a & ?b = ?y | ?x ~= ?a & ?m ?x = Some ?y)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_var 4),
               template_var 3),
             template_app (template_hole 5, template_var 2)),
           template_var 1),
         template_app (template_hole 5, template_var 0)),
       template_dunno)),
    ("Map.map_upd_upds_conv_if",
     "?f(?x |-> ?y, ?xs [|->] ?ys) =
      (if ?x : set (take (length ?ys) ?xs) then ?f(?xs [|->] ?ys)
       else ?f(?xs [|->] ?ys, ?x |-> ?y))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app (template_hole 6, template_var 4),
                 template_var 3),
               template_app (template_hole 5, template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 0)),
                   template_var 1)))),
           template_app
            (template_app
              (template_app (template_hole 7, template_var 4),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app (template_hole 7, template_var 4),
                   template_var 1),
                 template_var 0)),
             template_var 3),
           template_app (template_hole 5, template_var 2)))))]
