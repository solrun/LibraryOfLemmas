Loading theory "HOL-Cardinals.Fun_More" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G" via "Draft.T_G_Prelim" via "Draft.Mcalc" via "Draft.Mono" via "Draft.CM" via "Draft.M" via "Draft.TermsAndClauses" via "Draft.Preliminaries" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding")
Loading theory "HOL-Cardinals.Order_Relation_More" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G" via "Draft.T_G_Prelim" via "Draft.Mcalc" via "Draft.Mono" via "Draft.CM" via "Draft.M" via "Draft.TermsAndClauses" via "Draft.Preliminaries" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding" via "HOL-Cardinals.Wellorder_Relation" via "HOL-Cardinals.Wellfounded_More")
Loading theory "HOL-Cardinals.Order_Union" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G" via "Draft.T_G_Prelim" via "Draft.Mcalc" via "Draft.Mono" via "Draft.CM" via "Draft.M" via "Draft.TermsAndClauses" via "Draft.Preliminaries" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.EncodingsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Cardinals.Fun_More"
### 0.071s elapsed time, 0.314s cpu time, 0.000s GC time
Loading theory "HOL-Library.Infinite_Set" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G" via "Draft.T_G_Prelim" via "Draft.Mcalc" via "Draft.Mono" via "Draft.CM" via "Draft.M" via "Draft.TermsAndClauses" via "Draft.Preliminaries" via "HOL-Library.Countable_Set_Type" via "HOL-Library.Countable_Set")
### theory "HOL-Cardinals.Order_Union"
### 0.143s elapsed time, 0.586s cpu time, 0.051s GC time
Loading theory "HOL-Cardinals.Wellorder_Extension" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G" via "Draft.T_G_Prelim" via "Draft.Mcalc" via "Draft.Mono" via "Draft.CM" via "Draft.M" via "Draft.TermsAndClauses" via "Draft.Preliminaries" via "HOL-Cardinals.Cardinals")
### theory "HOL-Library.Function_Algebras"
### 0.150s elapsed time, 0.614s cpu time, 0.051s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.EncodingsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
### theory "HOL-Cardinals.Order_Relation_More"
### 0.189s elapsed time, 0.769s cpu time, 0.051s GC time
Loading theory "HOL-Cardinals.Wellfounded_More" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G" via "Draft.T_G_Prelim" via "Draft.Mcalc" via "Draft.Mono" via "Draft.CM" via "Draft.M" via "Draft.TermsAndClauses" via "Draft.Preliminaries" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding" via "HOL-Cardinals.Wellorder_Relation")
### theory "HOL-Cardinals.Wellfounded_More"
### 0.034s elapsed time, 0.136s cpu time, 0.000s GC time
Loading theory "HOL-Cardinals.Wellorder_Relation" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G" via "Draft.T_G_Prelim" via "Draft.Mcalc" via "Draft.Mono" via "Draft.CM" via "Draft.M" via "Draft.TermsAndClauses" via "Draft.Preliminaries" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding")
### theory "HOL-Cardinals.Wellorder_Extension"
### 0.081s elapsed time, 0.321s cpu time, 0.000s GC time
Loading theory "HOL-Library.Old_Datatype" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G" via "Draft.T_G_Prelim" via "Draft.Mcalc" via "Draft.Mono" via "Draft.CM" via "Draft.M" via "Draft.TermsAndClauses" via "Draft.Preliminaries" via "HOL-Library.Countable_Set_Type" via "HOL-Library.Countable_Set" via "HOL-Library.Countable")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  enumerate :: "'a set => nat => 'a"
locale wo_rel
  fixes r :: "('a * 'a) set"
  assumes "wo_rel r"
### theory "HOL-Library.Infinite_Set"
### 0.276s elapsed time, 1.087s cpu time, 0.135s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.EncodingsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Cardinals.Wellorder_Relation"
### 0.155s elapsed time, 0.602s cpu time, 0.135s GC time
Loading theory "HOL-Cardinals.Wellorder_Embedding" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G" via "Draft.T_G_Prelim" via "Draft.Mcalc" via "Draft.Mono" via "Draft.CM" via "Draft.M" via "Draft.TermsAndClauses" via "Draft.Preliminaries" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Nat_Bijection"
### 0.321s elapsed time, 1.265s cpu time, 0.195s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.EncodingsMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Cardinals.Wellorder_Embedding"
### 0.155s elapsed time, 0.605s cpu time, 0.067s GC time
Loading theory "HOL-Cardinals.Wellorder_Constructions" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G" via "Draft.T_G_Prelim" via "Draft.Mcalc" via "Draft.Mono" via "Draft.CM" via "Draft.M" via "Draft.TermsAndClauses" via "Draft.Preliminaries" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic")
### theory "HOL-Library.Set_Algebras"
### 0.200s elapsed time, 0.785s cpu time, 0.126s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.EncodingsMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
signature OLD_DATATYPE =
  sig
    val check_specs: spec list -> theory -> spec list * Proof.context
    type config = {quiet: bool, strict: bool}
    val default_config: config
    type descr =
       (int * (string * dtyp list * (string * dtyp list) list)) list
    val distinct_lemma: thm
    datatype dtyp
    = DtRec of int | DtTFree of string * sort | DtType of string * dtyp list
    type info =
       {case_cong: thm,
        case_cong_weak: thm,
        case_name: string,
        case_rewrites: thm list,
        descr: descr,
        distinct: thm list,
        exhaust: thm,
        index: int,
        induct: thm,
        inducts: thm list,
        inject: thm list,
        nchotomy: thm,
        rec_names: string list,
        rec_rewrites: thm list, split: thm, split_asm: thm}
    val read_specs: spec_cmd list -> theory -> spec list * Proof.context
    type spec =
       (binding * (string * sort) list * mixfix) *
       (binding * typ list * mixfix) list
    type spec_cmd =
       (binding * (string * string option) list * mixfix) *
       (binding * string list * mixfix) list
  end
structure Old_Datatype: OLD_DATATYPE
### theory "HOL-Library.Old_Datatype"
### 0.394s elapsed time, 1.541s cpu time, 0.261s GC time
Loading theory "HOL-Library.Countable" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G" via "Draft.T_G_Prelim" via "Draft.Mcalc" via "Draft.Mono" via "Draft.CM" via "Draft.M" via "Draft.TermsAndClauses" via "Draft.Preliminaries" via "HOL-Library.Countable_Set_Type" via "HOL-Library.Countable_Set")
consts
  shift :: "'a list => 'a stream => 'a stream"
locale wo_rel
  fixes r :: "('a * 'a) set"
  assumes "wo_rel r"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
### Additional type variable(s) in locale specification "countable": 'a
class countable = type +
  assumes "ex_inj": "EX to_nat. inj to_nat"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Cardinals.Wellorder_Constructions"
### 0.766s elapsed time, 2.884s cpu time, 0.663s GC time
Loading theory "HOL-Cardinals.Cardinal_Order_Relation" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G" via "Draft.T_G_Prelim" via "Draft.Mcalc" via "Draft.Mono" via "Draft.CM" via "Draft.M" via "Draft.TermsAndClauses" via "Draft.Preliminaries" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Cardinal_Arithmetic")
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Proofs for inductive predicate(s) "finite_item"
  Proving monotonicity ...
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.029s elapsed time, 3.912s cpu time, 0.834s GC time
Loading theory "HOL-Cardinals.Ordinal_Arithmetic" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G" via "Draft.T_G_Prelim" via "Draft.Mcalc" via "Draft.Mono" via "Draft.CM" via "Draft.M" via "Draft.TermsAndClauses" via "Draft.Preliminaries" via "HOL-Cardinals.Cardinals")
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "size <*mlex*> {}"
val old_countable_datatype_tac = fn: Proof.context -> int -> tactic
Found termination order: "size <*mlex*> {}"
### ML warning (line 93 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 139 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 143 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 145 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 156 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
signature BNF_LFP_COUNTABLE =
  sig
    val countable_datatype_tac: Proof.context -> tactic
    val derive_encode_injectives_thms:
       Proof.context -> string list -> thm list
  end
structure BNF_LFP_Countable: BNF_LFP_COUNTABLE
val countable_datatype_tac = fn: Proof.context -> thm -> thm Seq.seq
val countable_tac = fn: Proof.context -> int -> tactic
Found termination order: "size <*mlex*> {}"
locale wo_rel
  fixes r :: "('a * 'a) set"
  assumes "wo_rel r"
Found termination order: "size <*mlex*> {}"
locale wo_rel2
  fixes r :: "('a * 'a) set"
    and s :: "('b * 'b) set"
  assumes "wo_rel2 r s"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Countable"
### 1.340s elapsed time, 5.132s cpu time, 1.011s GC time
Loading theory "HOL-Library.Countable_Set" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G" via "Draft.T_G_Prelim" via "Draft.Mcalc" via "Draft.Mono" via "Draft.CM" via "Draft.M" via "Draft.TermsAndClauses" via "Draft.Preliminaries" via "HOL-Library.Countable_Set_Type")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "HOL-Cardinals.Cardinal_Order_Relation"
### 0.835s elapsed time, 3.270s cpu time, 0.502s GC time
Loading theory "HOL-Cardinals.Cardinal_Arithmetic" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G" via "Draft.T_G_Prelim" via "Draft.Mcalc" via "Draft.Mono" via "Draft.CM" via "Draft.M" via "Draft.TermsAndClauses" via "Draft.Preliminaries" via "HOL-Cardinals.Cardinals")
Found termination order: "size <*mlex*> {}"
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Cardinals.Cardinal_Arithmetic"
### 0.217s elapsed time, 0.865s cpu time, 0.087s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.EncodingsMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Cardinals.Ordinal_Arithmetic"
### 0.911s elapsed time, 3.565s cpu time, 0.553s GC time
Loading theory "HOL-Cardinals.Cardinals" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G" via "Draft.T_G_Prelim" via "Draft.Mcalc" via "Draft.Mono" via "Draft.CM" via "Draft.M" via "Draft.TermsAndClauses" via "Draft.Preliminaries")
### theory "HOL-Library.Countable_Set"
### 0.521s elapsed time, 2.047s cpu time, 0.309s GC time
Loading theory "HOL-Library.Countable_Set_Type" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G" via "Draft.T_G_Prelim" via "Draft.Mcalc" via "Draft.Mono" via "Draft.CM" via "Draft.M" via "Draft.TermsAndClauses" via "Draft.Preliminaries")
Found termination order: "size <*mlex*> {}"
instantiation
  cset :: (type) {minus,bounded_lattice_bot,distrib_lattice}
  inf_cset == inf :: 'a cset => 'a cset => 'a cset
  bot_cset == bot :: 'a cset
  sup_cset == sup :: 'a cset => 'a cset => 'a cset
  less_eq_cset == less_eq :: 'a cset => 'a cset => bool
  less_cset == less :: 'a cset => 'a cset => bool
  minus_cset == minus :: 'a cset => 'a cset => 'a cset
### theory "HOL-Cardinals.Cardinals"
### 0.251s elapsed time, 0.997s cpu time, 0.052s GC time
### theory "HOL-Library.Tree"
### 2.232s elapsed time, 8.557s cpu time, 1.414s GC time
Loading theory "Draft.Templates" (required by "Draft.EncodingsMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.064s elapsed time, 0.210s cpu time, 0.000s GC time
### theory "HOL-Library.BigO"
### 0.764s elapsed time, 2.281s cpu time, 0.196s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.EncodingsMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.548s elapsed time, 1.146s cpu time, 0.126s GC time
### theory "HOL-Library.Countable_Set_Type"
### 1.283s elapsed time, 3.218s cpu time, 0.322s GC time
Loading theory "Draft.Preliminaries" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G" via "Draft.T_G_Prelim" via "Draft.Mcalc" via "Draft.Mono" via "Draft.CM" via "Draft.M" via "Draft.TermsAndClauses")
Found termination order: "(%p. length (snd3 p)) <*mlex*> {}"
### theory "Draft.Preliminaries"
### 0.783s elapsed time, 0.854s cpu time, 0.084s GC time
Loading theory "Draft.Sig" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G" via "Draft.T_G_Prelim" via "Draft.Mcalc" via "Draft.Mono" via "Draft.CM" via "Draft.M")
Loading theory "Draft.TermsAndClauses" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G" via "Draft.T_G_Prelim" via "Draft.Mcalc" via "Draft.Mono" via "Draft.CM" via "Draft.M")
locale Signature
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
  assumes "Signature TYPE('tp) wtFsym wtPsym"
### Additional type variable(s) in specification of "tpart1": 'tp
### Additional type variable(s) in specification of "tpart2": 'tp
### Additional type variable(s) in specification of "tinfinite": 'tp
Found termination order: "length <*mlex*> {}"
### theory "Draft.Sig"
### 0.131s elapsed time, 0.278s cpu time, 0.043s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.TermsAndClauses"
### 1.782s elapsed time, 2.900s cpu time, 1.387s GC time
Loading theory "Draft.M" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G" via "Draft.T_G_Prelim" via "Draft.Mcalc" via "Draft.Mono" via "Draft.CM")
Loading theory "Draft.U" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.E" via "Draft.CU")
locale Signature
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => nat"
    and parOf :: "'psym => nat"
  assumes "Signature wtFsym wtPsym"
Found termination order: "size <*mlex*> {}"
locale Struct
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => nat"
    and parOf :: "'psym => nat"
    and D :: "'univ => bool"
    and intF :: "'fsym => 'univ list => 'univ"
    and intP :: "'psym => 'univ list => bool"
  assumes "Struct wtFsym wtPsym arOf parOf D intF intP"
locale Signature
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
  assumes "Signature TYPE('tp) wtFsym wtPsym"
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale Signature
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => nat"
    and parOf :: "'psym => nat"
  assumes "Signature wtFsym wtPsym"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
locale Struct
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => nat"
    and parOf :: "'psym => nat"
    and D :: "'univ => bool"
    and intF :: "'fsym => 'univ list => 'univ"
    and intP :: "'psym => 'univ list => bool"
  assumes "Struct wtFsym wtPsym arOf parOf D intF intP"
locale Tstruct
  fixes intT :: "'tp => 'univ => bool"
  assumes "Tstruct intT"
Found termination order: "{}"
locale Struct
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and intT :: "'tp => 'univ => bool"
    and intF :: "'fsym => 'univ list => 'univ"
    and intP :: "'psym => 'univ list => bool"
  assumes "Struct wtFsym wtPsym arOf resOf intT intF intP"
Found termination order: "{}"
locale Problem
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => nat"
    and parOf :: "'psym => nat"
    and \<Phi> :: "('fsym, 'psym) lit list set"
  assumes "Problem wtFsym wtPsym arOf parOf \<Phi>"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "{}"
locale Model
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => nat"
    and parOf :: "'psym => nat"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and D :: "'univ => bool"
    and intF :: "'fsym => 'univ list => 'univ"
    and intP :: "'psym => 'univ list => bool"
  assumes "Model wtFsym wtPsym arOf parOf \<Phi> D intF intP"
### theory "Draft.U"
### 1.131s elapsed time, 2.938s cpu time, 1.565s GC time
Loading theory "Draft.CU" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.E")
Found termination order: "{}"
locale CU.Struct
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => nat"
    and parOf :: "'psym => nat"
    and D :: "univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
  assumes "CU.Struct wtFsym wtPsym arOf parOf D intF intP"
locale Signature
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
  assumes "Signature TYPE('tp) wtFsym wtPsym"
Found termination order: "size <*mlex*> {}"
locale CU.Model
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => nat"
    and parOf :: "'psym => nat"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and D :: "univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
  assumes "CU.Model wtFsym wtPsym arOf parOf \<Phi> D intF intP"
### theory "Draft.CU"
### 0.331s elapsed time, 0.698s cpu time, 0.078s GC time
Found termination order: "{}"
Found termination order: "{}"
locale Problem
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
  assumes "Problem wtFsym wtPsym arOf resOf parOf \<Phi>"
locale Model
  fixes wtFsym :: "'a => bool"
    and wtPsym :: "'b => bool"
    and arOf :: "'a => 'c list"
    and resOf :: "'a => 'c"
    and parOf :: "'b => 'c list"
    and \<Phi> :: "('a, 'b) lit list set"
    and intT :: "'c => 'd => bool"
    and intF :: "'a => 'd list => 'd"
    and intP :: "'b => 'd list => bool"
  assumes "Model wtFsym wtPsym arOf resOf parOf \<Phi> intT intF intP"
### theory "Draft.M"
### 1.865s elapsed time, 4.066s cpu time, 1.683s GC time
Loading theory "Draft.CM" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G" via "Draft.T_G_Prelim" via "Draft.Mcalc" via "Draft.Mono")
locale CM.Tstruct
  fixes intT :: "'tp => univ => bool"
  assumes "CM.Tstruct intT"
locale CM.Struct
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and intT :: "'tp => univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
  assumes "CM.Struct wtFsym wtPsym arOf resOf intT intF intP"
locale CM.Model
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and intT :: "'tp => univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
  assumes "CM.Model wtFsym wtPsym arOf resOf parOf \<Phi> intT intF intP"
### theory "Draft.CM"
### 0.626s elapsed time, 0.660s cpu time, 0.039s GC time
Loading theory "Draft.Mono" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G" via "Draft.T_G_Prelim" via "Draft.Mcalc")
locale FullStruct
  fixes wtFsym :: "'a => bool"
    and wtPsym :: "'b => bool"
    and arOf :: "'a => 'c list"
    and resOf :: "'a => 'c"
    and parOf :: "'b => 'c list"
    and intT :: "'c => univ => bool"
    and intF :: "'a => univ list => univ"
    and intP :: "'b => univ list => bool"
  assumes "FullStruct wtFsym wtPsym arOf resOf intT intF intP"
locale FullModel
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and intT :: "'tp => univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
  assumes "FullModel wtFsym wtPsym arOf resOf parOf \<Phi> intT intF intP"
locale InfStruct
  fixes wtFsym :: "'a => bool"
    and wtPsym :: "'b => bool"
    and arOf :: "'a => 'c list"
    and resOf :: "'a => 'c"
    and parOf :: "'b => 'c list"
    and intT :: "'c => univ => bool"
    and intF :: "'a => univ list => univ"
    and intP :: "'b => univ list => bool"
  assumes "InfStruct wtFsym wtPsym arOf resOf intT intF intP"
locale InfModel
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and intT :: "'tp => univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
  assumes "InfModel wtFsym wtPsym arOf resOf parOf \<Phi> intT intF intP"
locale Problem
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
  assumes "Problem wtFsym wtPsym arOf resOf parOf \<Phi>"
locale ProblemIk
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
  assumes "ProblemIk wtFsym wtPsym arOf resOf parOf \<Phi> infTp"
locale ModelIk
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and intT :: "'tp => univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
  assumes
    "ModelIk wtFsym wtPsym arOf resOf parOf \<Phi> infTp intT intF intP"
locale Problem
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
  assumes "Problem wtFsym wtPsym arOf resOf parOf \<Phi>"
locale MonotProblem
  fixes wtFsym :: "'a => bool"
    and wtPsym :: "'b => bool"
    and arOf :: "'a => 'c list"
    and resOf :: "'a => 'c"
    and parOf :: "'b => 'c list"
    and \<Phi> :: "('a, 'b) lit list set"
  assumes "MonotProblem wtFsym wtPsym arOf resOf parOf \<Phi>"
locale MonotProblemIk
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
  assumes "MonotProblemIk wtFsym wtPsym arOf resOf parOf \<Phi> infTp"
locale MonotProblem
  fixes wtFsym :: "'a => bool"
    and wtPsym :: "'b => bool"
    and arOf :: "'a => 'c list"
    and resOf :: "'a => 'c"
    and parOf :: "'b => 'c list"
    and \<Phi> :: "('a, 'b) lit list set"
  assumes "MonotProblem wtFsym wtPsym arOf resOf parOf \<Phi>"
locale MonotModel
  fixes wtFsym :: "'a => bool"
    and wtPsym :: "'b => bool"
    and arOf :: "'a => 'c list"
    and resOf :: "'a => 'c"
    and parOf :: "'b => 'c list"
    and \<Phi> :: "('a, 'b) lit list set"
    and intT :: "'c => univ => bool"
    and intF :: "'a => univ list => univ"
    and intP :: "'b => univ list => bool"
  assumes "MonotModel wtFsym wtPsym arOf resOf parOf \<Phi> intT intF intP"
locale MonotModel
  fixes wtFsym :: "'a => bool"
    and wtPsym :: "'b => bool"
    and arOf :: "'a => 'c list"
    and resOf :: "'a => 'c"
    and parOf :: "'b => 'c list"
    and \<Phi> :: "('a, 'b) lit list set"
    and intT :: "'c => univ => bool"
    and intF :: "'a => univ list => univ"
    and intP :: "'b => univ list => bool"
  assumes "MonotModel wtFsym wtPsym arOf resOf parOf \<Phi> intT intF intP"
locale InfModel
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and intT :: "'tp => univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
  assumes "IInfModel intT intF intP"
locale InfModel
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and intT :: "'tp => univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
  assumes "IInfModel intT intF intP"
locale MonotProblem
  fixes wtFsym :: "'a => bool"
    and wtPsym :: "'b => bool"
    and arOf :: "'a => 'c list"
    and resOf :: "'a => 'c"
    and parOf :: "'b => 'c list"
    and \<Phi> :: "('a, 'b) lit list set"
  assumes "MonotProblem wtFsym wtPsym arOf resOf parOf \<Phi>"
### theory "Draft.Mono"
### 3.897s elapsed time, 4.203s cpu time, 0.426s GC time
Loading theory "Draft.Mcalc" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G" via "Draft.T_G_Prelim")
Loading theory "Draft.Mcalc2" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G" via "Draft.Mcalc2C")
Loading theory "Draft.E" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings")
locale ProblemIk
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
  assumes "ProblemIk wtFsym wtPsym arOf resOf parOf \<Phi> infTp"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
locale M_Signature
  fixes wtFsym :: "'a => bool"
    and wtPsym :: "'b => bool"
    and arOf :: "'a => 'c list"
    and resOf :: "'a => 'c"
    and parOf :: "'b => 'c list"
  assumes "M_Signature TYPE('c) wtFsym wtPsym"
Proofs for inductive predicate(s) "mcalc"
  Proving monotonicity ...
locale ProblemIkPol
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and pol :: "'tp => 'psym => epol"
    and
    grdOf ::
      "('fsym, 'psym) lit list
       => ('fsym, 'psym) lit => Preliminaries.var => ('fsym, 'psym) lit"
  assumes "ProblemIkPol wtFsym wtPsym arOf resOf parOf \<Phi> infTp"
locale M_Problem
  fixes wtFsym :: "'a => bool"
    and wtPsym :: "'b => bool"
    and arOf :: "'a => 'c list"
    and resOf :: "'a => 'c"
    and parOf :: "'b => 'c list"
    and \<Phi> :: "('a, 'b) lit list set"
  assumes "M_Problem wtFsym wtPsym arOf resOf parOf \<Phi>"
locale ProblemIkMcalc
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
  assumes "ProblemIkMcalc wtFsym wtPsym arOf resOf parOf \<Phi> infTp"
locale ProblemIkPol
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and pol :: "'tp => 'psym => epol"
    and
    grdOf ::
      "('fsym, 'psym) lit list
       => ('fsym, 'psym) lit => Preliminaries.var => ('fsym, 'psym) lit"
  assumes "ProblemIkPol wtFsym wtPsym arOf resOf parOf \<Phi> infTp"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Proofs for inductive predicate(s) "mcalc2"
locale ModelIkMcalc
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and intT :: "'tp => univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
  assumes
    "ModelIkMcalc wtFsym wtPsym arOf resOf parOf \<Phi> infTp intT intF
      intP"
  Proving monotonicity ...
locale ModelIkMcalc
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and intT :: "'tp => univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
  assumes
    "ModelIkMcalc wtFsym wtPsym arOf resOf parOf \<Phi> infTp intT intF
      intP"
locale ProblemIkPolMcalc2
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and pol :: "'tp => 'psym => epol"
    and
    grdOf ::
      "('fsym, 'psym) lit list
       => ('fsym, 'psym) lit => Preliminaries.var => ('fsym, 'psym) lit"
  assumes
    "ProblemIkPolMcalc2 wtFsym wtPsym arOf resOf parOf \<Phi> infTp pol
      grdOf"
locale ModelIkPolMcalc2
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and pol :: "'tp => 'psym => epol"
    and
    grdOf ::
      "('fsym, 'psym) lit list
       => ('fsym, 'psym) lit => Preliminaries.var => ('fsym, 'psym) lit"
    and intT :: "'tp => univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
  assumes
    "ModelIkPolMcalc2 wtFsym wtPsym arOf resOf parOf \<Phi> infTp pol grdOf
      intT intF intP"
### theory "Draft.Mcalc2"
### 1.444s elapsed time, 4.429s cpu time, 0.547s GC time
Loading theory "Draft.Mcalc2C" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G")
locale M_MonotModel
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and intT :: "'tp => univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
    and \<Phi> :: "('fsym, 'psym) lit list set"
  assumes
    "M_MonotModel wtFsym wtPsym arOf resOf parOf intT intF intP \<Phi>"
locale ModelIkMcalc
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and intT :: "'tp => univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
  assumes
    "ModelIkMcalc wtFsym wtPsym arOf resOf parOf \<Phi> infTp intT intF
      intP"
locale ProblemIkPolMcalc2C
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and pol :: "'tp => 'psym => epol"
    and
    grdOf ::
      "('fsym, 'psym) lit list
       => ('fsym, 'psym) lit => Preliminaries.var => ('fsym, 'psym) lit"
  assumes
    "ProblemIkPolMcalc2C wtFsym wtPsym arOf resOf parOf \<Phi> infTp pol
      grdOf"
locale M_FullStruct
  fixes wtFsym :: "'a => bool"
    and wtPsym :: "'b => bool"
    and arOf :: "'a => 'c list"
    and resOf :: "'a => 'c"
    and parOf :: "'b => 'c list"
    and intT :: "'c => univ => bool"
    and intF :: "'a => univ list => univ"
    and intP :: "'b => univ list => bool"
  assumes "M_FullStruct wtFsym wtPsym arOf resOf intT intF intP"
locale ProblemIkPolMcalc2C
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and pol :: "'tp => 'psym => epol"
    and
    grdOf ::
      "('fsym, 'psym) lit list
       => ('fsym, 'psym) lit => Preliminaries.var => ('fsym, 'psym) lit"
  assumes
    "ProblemIkPolMcalc2C wtFsym wtPsym arOf resOf parOf \<Phi> infTp pol
      grdOf"
locale ProblemIkMcalc
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
  assumes "ProblemIkMcalc wtFsym wtPsym arOf resOf parOf \<Phi> infTp"
locale ModelIkPolMcalc2C
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and pol :: "'tp => 'psym => epol"
    and
    grdOf ::
      "('fsym, 'psym) lit list
       => ('fsym, 'psym) lit => Preliminaries.var => ('fsym, 'psym) lit"
    and intT :: "'tp => univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
  assumes
    "ModelIkPolMcalc2C wtFsym wtPsym arOf resOf parOf \<Phi> infTp pol grdOf
      intT intF intP"
### theory "Draft.Mcalc"
### 2.364s elapsed time, 7.228s cpu time, 0.896s GC time
Loading theory "Draft.T_G_Prelim" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings" via "Draft.G")
locale M_FullModel
  fixes wtFsym :: "'a => bool"
    and wtPsym :: "'b => bool"
    and arOf :: "'a => 'c list"
    and resOf :: "'a => 'c"
    and parOf :: "'b => 'c list"
    and \<Phi> :: "('a, 'b) lit list set"
    and intT :: "'c => univ => bool"
    and intF :: "'a => univ list => univ"
    and intP :: "'b => univ list => bool"
  assumes "M_FullModel wtFsym wtPsym arOf resOf parOf \<Phi> intT intF intP"
locale ProblemIkTpart
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and prot :: "'tp => bool"
    and protFw :: "'tp => bool"
  assumes
    "ProblemIkTpart wtFsym wtPsym arOf resOf parOf \<Phi> infTp prot protFw"
locale ModelIkPolMcalc2C
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and pol :: "'tp => 'psym => epol"
    and
    grdOf ::
      "('fsym, 'psym) lit list
       => ('fsym, 'psym) lit => Preliminaries.var => ('fsym, 'psym) lit"
    and intT :: "'tp => univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
  assumes
    "ModelIkPolMcalc2C wtFsym wtPsym arOf resOf parOf \<Phi> infTp pol grdOf
      intT intF intP"
locale ModelIkTpart
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and prot :: "'tp => bool"
    and protFw :: "'tp => bool"
    and intT :: "'tp => univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
  assumes
    "ModelIkTpart wtFsym wtPsym arOf resOf parOf \<Phi> infTp prot protFw
      intT intF intP"
### theory "Draft.T_G_Prelim"
### 0.670s elapsed time, 2.050s cpu time, 0.295s GC time
Loading theory "Draft.T" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings")
locale ModelIkPolMcalc2C
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and pol :: "'tp => 'psym => epol"
    and
    grdOf ::
      "('fsym, 'psym) lit list
       => ('fsym, 'psym) lit => Preliminaries.var => ('fsym, 'psym) lit"
    and intT :: "'tp => univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
  assumes
    "ModelIkPolMcalc2C wtFsym wtPsym arOf resOf parOf \<Phi> infTp pol grdOf
      intT intF intP"
locale Sig.Signature
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
  assumes "Sig.Signature TYPE('tp) wtFsym wtPsym"
locale ProblemIkTpart
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and prot :: "'tp => bool"
    and protFw :: "'tp => bool"
  assumes
    "ProblemIkTpart wtFsym wtPsym arOf resOf parOf \<Phi> infTp prot protFw"
Found termination order: "{}"
locale M_Signature
  fixes wtFsym :: "'a => bool"
    and wtPsym :: "'b => bool"
    and arOf :: "'a => 'c list"
    and resOf :: "'a => 'c"
    and parOf :: "'b => 'c list"
  assumes "M_Signature TYPE('c) wtFsym wtPsym"
Found termination order: "{}"
Found termination order: "{}"
locale ProblemIkPolMcalc2C
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and pol :: "'tp => 'psym => epol"
    and
    grdOf ::
      "('fsym, 'psym) lit list
       => ('fsym, 'psym) lit => Preliminaries.var => ('fsym, 'psym) lit"
  assumes
    "ProblemIkPolMcalc2C wtFsym wtPsym arOf resOf parOf \<Phi> infTp pol
      grdOf"
### theory "Draft.Mcalc2C"
### 2.822s elapsed time, 8.607s cpu time, 1.234s GC time
Loading theory "Draft.G" (required by "Draft.EncodingsMoreTemplates" via "Draft.Encodings")
locale UM_Struct
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and D :: "univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
  assumes "UM_Struct wtFsym wtPsym arOf parOf D intF intP"
locale ProblemIkTpart
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and prot :: "'tp => bool"
    and protFw :: "'tp => bool"
  assumes
    "ProblemIkTpart wtFsym wtPsym arOf resOf parOf \<Phi> infTp prot protFw"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
locale UM_Struct
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and D :: "univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
  assumes "UM_Struct wtFsym wtPsym arOf parOf D intF intP"
Found termination order: "{}"
locale UM_Model
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and D :: "univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
  assumes "UM_Model wtFsym wtPsym arOf resOf parOf \<Phi> D intF intP"
locale ModelIkTpart
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and prot :: "'tp => bool"
    and protFw :: "'tp => bool"
    and intT :: "'tp => univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
  assumes
    "ModelIkTpart wtFsym wtPsym arOf resOf parOf \<Phi> infTp prot protFw
      intT intF intP"
locale ProblemIkTpartG
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and prot :: "'tp => bool"
    and protFw :: "'tp => bool"
    and protCl :: "'tp => bool"
  assumes
    "ProblemIkTpartG wtFsym wtPsym arOf resOf parOf \<Phi> infTp prot protFw
      protCl"
Found termination order: "{}"
locale ModelIkTpartG
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and prot :: "'tp => bool"
    and protFw :: "'tp => bool"
    and protCl :: "'tp => bool"
    and intT :: "'tp => univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
  assumes
    "ModelIkTpartG wtFsym wtPsym arOf resOf parOf \<Phi> infTp prot protFw
      protCl intT intF intP"
locale ProblemIkTpartG
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and prot :: "'tp => bool"
    and protFw :: "'tp => bool"
    and protCl :: "'tp => bool"
  assumes
    "ProblemIkTpartG wtFsym wtPsym arOf resOf parOf \<Phi> infTp prot protFw
      protCl"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
locale M_FullModel
  fixes wtFsym :: "'a => bool"
    and wtPsym :: "'b => bool"
    and arOf :: "'a => 'c list"
    and resOf :: "'a => 'c"
    and parOf :: "'b => 'c list"
    and \<Phi> :: "('a, 'b) lit list set"
    and intT :: "'c => univ => bool"
    and intF :: "'a => univ list => univ"
    and intP :: "'b => univ list => bool"
  assumes "M_FullModel wtFsym wtPsym arOf resOf parOf \<Phi> intT intF intP"
locale ModelIkTpart
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and prot :: "'tp => bool"
    and protFw :: "'tp => bool"
    and intT :: "'tp => univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
  assumes
    "ModelIkTpart wtFsym wtPsym arOf resOf parOf \<Phi> infTp prot protFw
      intT intF intP"
locale ProblemIkTpartG
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and prot :: "'tp => bool"
    and protFw :: "'tp => bool"
    and protCl :: "'tp => bool"
  assumes
    "ProblemIkTpartG wtFsym wtPsym arOf resOf parOf \<Phi> infTp prot protFw
      protCl"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
locale ProblemIkTpart_TEModel
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and prot :: "'tp => bool"
    and protFw :: "'tp => bool"
    and eintT :: "'tp => univ => bool"
    and eintF :: "('fsym, 'tp) efsym => univ list => univ"
    and eintP :: "'psym => univ list => bool"
  assumes
    "ProblemIkTpart_TEModel wtFsym wtPsym arOf resOf parOf \<Phi> infTp prot
      protFw eintT eintF eintP"
locale M_MonotModel
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and intT :: "'tp => univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
    and \<Phi> :: "('fsym, 'psym) lit list set"
  assumes
    "M_MonotModel wtFsym wtPsym arOf resOf parOf intT intF intP \<Phi>"
locale ModelIkTpartG
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and prot :: "'tp => bool"
    and protFw :: "'tp => bool"
    and protCl :: "'tp => bool"
    and intT :: "'tp => univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
  assumes
    "ModelIkTpartG wtFsym wtPsym arOf resOf parOf \<Phi> infTp prot protFw
      protCl intT intF intP"
Found termination order: "{}"
locale ProblemIkTpart_TEModel
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and prot :: "'tp => bool"
    and protFw :: "'tp => bool"
    and eintT :: "'tp => univ => bool"
    and eintF :: "('fsym, 'tp) efsym => univ list => univ"
    and eintP :: "'psym => univ list => bool"
  assumes
    "ProblemIkTpart_TEModel wtFsym wtPsym arOf resOf parOf \<Phi> infTp prot
      protFw eintT eintF eintP"
Found termination order: "{}"
### theory "Draft.E"
### 9.814s elapsed time, 30.292s cpu time, 7.396s GC time
locale ProblemIkTpart_TEModel
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and prot :: "'tp => bool"
    and protFw :: "'tp => bool"
    and eintT :: "'tp => univ => bool"
    and eintF :: "('fsym, 'tp) efsym => univ list => univ"
    and eintP :: "'psym => univ list => bool"
  assumes
    "ProblemIkTpart_TEModel wtFsym wtPsym arOf resOf parOf \<Phi> infTp prot
      protFw eintT eintF eintP"
"invt"
  :: "'tp => univ => univ"
locale ModelIkTpartG
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and prot :: "'tp => bool"
    and protFw :: "'tp => bool"
    and protCl :: "'tp => bool"
    and intT :: "'tp => univ => bool"
    and intF :: "'fsym => univ list => univ"
    and intP :: "'psym => univ list => bool"
  assumes
    "ModelIkTpartG wtFsym wtPsym arOf resOf parOf \<Phi> infTp prot protFw
      protCl intT intF intP"
locale ProblemIkTpart
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and prot :: "'tp => bool"
    and protFw :: "'tp => bool"
  assumes
    "ProblemIkTpart wtFsym wtPsym arOf resOf parOf \<Phi> infTp prot protFw"
locale ProblemIkTpartG_GEModel
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and prot :: "'tp => bool"
    and protFw :: "'tp => bool"
    and protCl :: "'tp => bool"
    and eintT :: "'tp => univ => bool"
    and eintF :: "('fsym, 'tp) efsym => univ list => univ"
    and eintP :: "('psym, 'tp) epsym => univ list => bool"
  assumes
    "ProblemIkTpartG_GEModel wtFsym wtPsym arOf resOf parOf \<Phi> infTp
      prot protFw protCl eintT eintF eintP"
locale ProblemIkTpart
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and prot :: "'tp => bool"
    and protFw :: "'tp => bool"
  assumes
    "ProblemIkTpart wtFsym wtPsym arOf resOf parOf \<Phi> infTp prot protFw"
locale ProblemIkTpartG_GEModel
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and prot :: "'tp => bool"
    and protFw :: "'tp => bool"
    and protCl :: "'tp => bool"
    and eintT :: "'tp => univ => bool"
    and eintF :: "('fsym, 'tp) efsym => univ list => univ"
    and eintP :: "('psym, 'tp) epsym => univ list => bool"
  assumes
    "ProblemIkTpartG_GEModel wtFsym wtPsym arOf resOf parOf \<Phi> infTp
      prot protFw protCl eintT eintF eintP"
### theory "Draft.T"
### 19.961s elapsed time, 59.853s cpu time, 39.639s GC time
locale ProblemIkTpartG_GEModel
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and prot :: "'tp => bool"
    and protFw :: "'tp => bool"
    and protCl :: "'tp => bool"
    and eintT :: "'tp => univ => bool"
    and eintF :: "('fsym, 'tp) efsym => univ list => univ"
    and eintP :: "('psym, 'tp) epsym => univ list => bool"
  assumes
    "ProblemIkTpartG_GEModel wtFsym wtPsym arOf resOf parOf \<Phi> infTp
      prot protFw protCl eintT eintF eintP"
locale ProblemIkTpartG
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and prot :: "'tp => bool"
    and protFw :: "'tp => bool"
    and protCl :: "'tp => bool"
  assumes
    "ProblemIkTpartG wtFsym wtPsym arOf resOf parOf \<Phi> infTp prot protFw
      protCl"
Found termination order: "{}"
locale ProblemIkTpartG
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and prot :: "'tp => bool"
    and protFw :: "'tp => bool"
    and protCl :: "'tp => bool"
  assumes
    "ProblemIkTpartG wtFsym wtPsym arOf resOf parOf \<Phi> infTp prot protFw
      protCl"
locale ProblemIkTpartG
  fixes wtFsym :: "'fsym => bool"
    and wtPsym :: "'psym => bool"
    and arOf :: "'fsym => 'tp list"
    and resOf :: "'fsym => 'tp"
    and parOf :: "'psym => 'tp list"
    and \<Phi> :: "('fsym, 'psym) lit list set"
    and infTp :: "'tp => bool"
    and prot :: "'tp => bool"
    and protFw :: "'tp => bool"
    and protCl :: "'tp => bool"
  assumes
    "ProblemIkTpartG wtFsym wtPsym arOf resOf parOf \<Phi> infTp prot protFw
      protCl"
### theory "Draft.G"
### 22.148s elapsed time, 59.766s cpu time, 39.397s GC time
Loading theory "Draft.Encodings" (required by "Draft.EncodingsMoreTemplates")
### theory "Draft.Encodings"
### 0.283s elapsed time, 0.295s cpu time, 0.000s GC time
Loading theory "Draft.EncodingsMoreTemplates"
val templateLemmas =
   [("Encodings.guards_completeness",
     "[| ProblemIkTpartG ?wtFsym ?wtPsym ?arOf ?resOf ?parOf ?\<Phi> ?infTp
          ?tpD ?tpFD ?tpCD;
         CU.Model (ProblemIkTpartG.GE_wtFsym ?wtFsym ?resOf ?tpCD)
          (ProblemIkTpartG.GE_wtPsym ?wtPsym ?tpD ?tpFD)
          (length o ProblemIkTpartG.GE_arOf ?arOf)
          (length o ProblemIkTpartG.GE_parOf ?parOf)
          (ProblemIkTpartG.gPB ?wtFsym ?arOf ?resOf ?\<Phi> ?tpD ?tpFD
            ?tpCD)
          ?D ?eintF ?eintP |]
      ==> CM.Model ?wtFsym ?wtPsym ?arOf ?resOf ?parOf ?\<Phi>
           (ProblemIkTpartG_GEModel.intT ?tpD ?tpFD (%\<sigma>. ?D) ?eintP)
           (ProblemIkTpartG_GEModel.intF ?eintF)
           (ProblemIkTpartG_GEModel.intP ?eintP)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 13, template_var 12),
                              template_var 11),
                            template_var 10),
                          template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_hole 12,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 11, template_var 12),
                                template_var 9),
                              template_var 3)),
                          template_app
                           (template_app
                             (template_app
                               (template_hole 10, template_var 11),
                              template_var 5),
                            template_var 4)),
                        template_app
                         (template_app (template_hole 9, template_hole 8),
                          template_app (template_hole 7, template_var 10))),
                      template_app
                       (template_app (template_hole 6, template_hole 8),
                        template_app (template_hole 5, template_var 8))),
                    template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 4, template_var 12),
                                template_var 10),
                              template_var 9),
                            template_var 7),
                          template_var 5),
                        template_var 4),
                      template_var 3)),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 3, template_var 12),
                           template_var 11),
                         template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 7),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 5),
                       template_var 4),
                     t_empty),
                   template_var 0)),
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Encodings.tags_completeness",
     "[| ProblemIkTpart ?wtFsym ?wtPsym ?arOf ?resOf ?parOf ?\<Phi> ?infTp
          ?tpD ?tpFD;
         CU.Model (ProblemIkTpart.TE_wtFsym ?wtFsym ?resOf) ?wtPsym
          (length o ProblemIkTpart.TE_arOf ?arOf) (length o ?parOf)
          (ProblemIkTpart.tPB ?wtFsym ?arOf ?resOf ?\<Phi> ?tpD ?tpFD) ?D
          ?eintF ?eintP |]
      ==> CM.Model ?wtFsym ?wtPsym ?arOf ?resOf ?parOf ?\<Phi>
           (ProblemIkTpart_TEModel.intT ?tpD ?tpFD (%\<sigma>. ?D) ?eintF)
           (ProblemIkTpart_TEModel.intF ?arOf ?resOf ?tpD ?tpFD
             (%\<sigma>. ?D) ?eintF)
           (ProblemIkTpart_TEModel.intP ?parOf ?tpD ?tpFD (%\<sigma>. ?D)
             ?eintF ?eintP)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_hole 11, template_var 11),
                            template_var 10),
                          template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_hole 10,
                            template_app
                             (template_app
                               (template_hole 9, template_var 11),
                              template_var 8)),
                          template_var 10),
                        template_app
                         (template_app (template_hole 8, template_hole 7),
                          template_app (template_hole 6, template_var 9))),
                      template_app
                       (template_app (template_hole 5, template_hole 7),
                        template_var 7)),
                    template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 4, template_var 11),
                              template_var 9),
                            template_var 8),
                          template_var 6),
                        template_var 4),
                      template_var 3)),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 3, template_var 11),
                           template_var 10),
                         template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 6),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 4),
                       template_var 3),
                     t_empty),
                   template_var 1)),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 9),
                         template_var 8),
                       template_var 4),
                     template_var 3),
                   t_empty),
                 template_var 1)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 7),
                       template_var 4),
                     template_var 3),
                   t_empty),
                 template_var 1),
               template_var 0))
           ))),
    ("Encodings.tags_soundness",
     "[| ProblemIkTpart ?wtFsym ?wtPsym ?arOf ?resOf ?parOf ?\<Phi> ?infTp
          ?tpD ?tpFD;
         CM.Model ?wtFsym ?wtPsym ?arOf ?resOf ?parOf ?\<Phi> ?intT ?intF
          ?intP |]
      ==> CU.Model (ProblemIkTpart.TE_wtFsym ?wtFsym ?resOf) ?wtPsym
           (length o ProblemIkTpart.TE_arOf ?arOf) (length o ?parOf)
           (ProblemIkTpart.tPB ?wtFsym ?arOf ?resOf ?\<Phi> ?tpD ?tpFD)
           (InfModel.intTF any)
           (InfModel.intFF (ProblemIkTpart.TE_arOf ?arOf)
             (ProblemIkTpart.TE_resOf ?resOf)
             (MonotProblem.intTI (ProblemIkTpart.TE_wtFsym ?wtFsym ?resOf)
               ?wtPsym (ProblemIkTpart.TE_arOf ?arOf)
               (ProblemIkTpart.TE_resOf ?resOf) ?parOf
               (ProblemIkTpart.tPB ?wtFsym ?arOf ?resOf ?\<Phi> ?tpD ?tpFD))
             (MonotProblem.intFI (ProblemIkTpart.TE_wtFsym ?wtFsym ?resOf)
               ?wtPsym (ProblemIkTpart.TE_arOf ?arOf)
               (ProblemIkTpart.TE_resOf ?resOf) ?parOf
               (ProblemIkTpart.tPB ?wtFsym ?arOf ?resOf ?\<Phi> ?tpD
                 ?tpFD)))
           (InfModel.intPF ?parOf
             (MonotProblem.intTI (ProblemIkTpart.TE_wtFsym ?wtFsym ?resOf)
               ?wtPsym (ProblemIkTpart.TE_arOf ?arOf)
               (ProblemIkTpart.TE_resOf ?resOf) ?parOf
               (ProblemIkTpart.tPB ?wtFsym ?arOf ?resOf ?\<Phi> ?tpD ?tpFD))
             (MonotProblem.intPI (ProblemIkTpart.TE_wtFsym ?wtFsym ?resOf)
               ?wtPsym (ProblemIkTpart.TE_arOf ?arOf)
               (ProblemIkTpart.TE_resOf ?resOf) ?parOf
               (ProblemIkTpart.tPB ?wtFsym ?arOf ?resOf ?\<Phi> ?tpD
                 ?tpFD)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_hole 16, template_var 11),
                            template_var 10),
                          template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_hole 15, template_var 11),
                            template_var 10),
                          template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_hole 14,
                           template_app
                            (template_app
                              (template_hole 13, template_var 11),
                             template_var 8)),
                         template_var 10),
                       template_app
                        (template_app (template_hole 12, template_hole 11),
                         template_app (template_hole 10, template_var 9))),
                     template_app
                      (template_app (template_hole 9, template_hole 11),
                       template_var 7)),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 8, template_var 11),
                             template_var 9),
                           template_var 8),
                         template_var 6),
                       template_var 4),
                     template_var 3)),
                 template_app (template_hole 7, template_hole 6)),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 5,
                       template_app (template_hole 10, template_var 9)),
                     template_app (template_hole 4, template_var 8)),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 3,
                               template_app
                                (template_app
                                  (template_hole 13, template_var 11),
                                 template_var 8)),
                             template_var 10),
                           template_app (template_hole 10, template_var 9)),
                         template_app (template_hole 4, template_var 8)),
                       template_var 7),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 8, template_var 11),
                               template_var 9),
                             template_var 8),
                           template_var 6),
                         template_var 4),
                       template_var 3))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_hole 2,
                             template_app
                              (template_app
                                (template_hole 13, template_var 11),
                               template_var 8)),
                           template_var 10),
                         template_app (template_hole 10, template_var 9)),
                       template_app (template_hole 4, template_var 8)),
                     template_var 7),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 8, template_var 11),
                             template_var 9),
                           template_var 8),
                         template_var 6),
                       template_var 4),
                     template_var 3)))),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 7),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_app
                                (template_hole 13, template_var 11),
                               template_var 8)),
                           template_var 10),
                         template_app (template_hole 10, template_var 9)),
                       template_app (template_hole 4, template_var 8)),
                     template_var 7),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 8, template_var 11),
                             template_var 9),
                           template_var 8),
                         template_var 6),
                       template_var 4),
                     template_var 3))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_hole 0,
                           template_app
                            (template_app
                              (template_hole 13, template_var 11),
                             template_var 8)),
                         template_var 10),
                       template_app (template_hole 10, template_var 9)),
                     template_app (template_hole 4, template_var 8)),
                   template_var 7),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 8, template_var 11),
                           template_var 9),
                         template_var 8),
                       template_var 6),
                     template_var 4),
                   template_var 3))))
           ))),
    ("Encodings.guards_soundness",
     "[| ProblemIkTpartG ?wtFsym ?wtPsym ?arOf ?resOf ?parOf ?\<Phi> ?infTp
          ?tpD ?tpFD ?tpCD;
         CM.Model ?wtFsym ?wtPsym ?arOf ?resOf ?parOf ?\<Phi> ?intT ?intF
          ?intP |]
      ==> CU.Model (ProblemIkTpartG.GE_wtFsym ?wtFsym ?resOf ?tpCD)
           (ProblemIkTpartG.GE_wtPsym ?wtPsym ?tpD ?tpFD)
           (length o ProblemIkTpartG.GE_arOf ?arOf)
           (length o ProblemIkTpartG.GE_parOf ?parOf)
           (ProblemIkTpartG.gPB ?wtFsym ?arOf ?resOf ?\<Phi> ?tpD ?tpFD
             ?tpCD)
           (InfModel.intTF any)
           (InfModel.intFF (ProblemIkTpartG.GE_arOf ?arOf)
             (ProblemIkTpartG.GE_resOf ?resOf)
             (MonotProblem.intTI
               (ProblemIkTpartG.GE_wtFsym ?wtFsym ?resOf ?tpCD)
               (ProblemIkTpartG.GE_wtPsym ?wtPsym ?tpD ?tpFD)
               (ProblemIkTpartG.GE_arOf ?arOf)
               (ProblemIkTpartG.GE_resOf ?resOf)
               (ProblemIkTpartG.GE_parOf ?parOf)
               (ProblemIkTpartG.gPB ?wtFsym ?arOf ?resOf ?\<Phi> ?tpD ?tpFD
                 ?tpCD))
             (MonotProblem.intFI
               (ProblemIkTpartG.GE_wtFsym ?wtFsym ?resOf ?tpCD)
               (ProblemIkTpartG.GE_wtPsym ?wtPsym ?tpD ?tpFD)
               (ProblemIkTpartG.GE_arOf ?arOf)
               (ProblemIkTpartG.GE_resOf ?resOf)
               (ProblemIkTpartG.GE_parOf ?parOf)
               (ProblemIkTpartG.gPB ?wtFsym ?arOf ?resOf ?\<Phi> ?tpD ?tpFD
                 ?tpCD)))
           (InfModel.intPF (ProblemIkTpartG.GE_parOf ?parOf)
             (MonotProblem.intTI
               (ProblemIkTpartG.GE_wtFsym ?wtFsym ?resOf ?tpCD)
               (ProblemIkTpartG.GE_wtPsym ?wtPsym ?tpD ?tpFD)
               (ProblemIkTpartG.GE_arOf ?arOf)
               (ProblemIkTpartG.GE_resOf ?resOf)
               (ProblemIkTpartG.GE_parOf ?parOf)
               (ProblemIkTpartG.gPB ?wtFsym ?arOf ?resOf ?\<Phi> ?tpD ?tpFD
                 ?tpCD))
             (MonotProblem.intPI
               (ProblemIkTpartG.GE_wtFsym ?wtFsym ?resOf ?tpCD)
               (ProblemIkTpartG.GE_wtPsym ?wtPsym ?tpD ?tpFD)
               (ProblemIkTpartG.GE_arOf ?arOf)
               (ProblemIkTpartG.GE_resOf ?resOf)
               (ProblemIkTpartG.GE_parOf ?parOf)
               (ProblemIkTpartG.gPB ?wtFsym ?arOf ?resOf ?\<Phi> ?tpD ?tpFD
                 ?tpCD)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 18, template_var 12),
                              template_var 11),
                            template_var 10),
                          template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_hole 17, template_var 12),
                            template_var 11),
                          template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_hole 16,
                           template_app
                            (template_app
                              (template_app
                                (template_hole 15, template_var 12),
                               template_var 9),
                             template_var 3)),
                         template_app
                          (template_app
                            (template_app
                              (template_hole 14, template_var 11),
                             template_var 5),
                           template_var 4)),
                       template_app
                        (template_app (template_hole 13, template_hole 12),
                         template_app (template_hole 11, template_var 10))),
                     template_app
                      (template_app (template_hole 10, template_hole 12),
                       template_app (template_hole 9, template_var 8))),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 8, template_var 12),
                               template_var 10),
                             template_var 9),
                           template_var 7),
                         template_var 5),
                       template_var 4),
                     template_var 3)),
                 template_app (template_hole 7, template_hole 6)),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 5,
                       template_app (template_hole 11, template_var 10)),
                     template_app (template_hole 4, template_var 9)),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 3,
                               template_app
                                (template_app
                                  (template_app
                                    (template_hole 15, template_var 12),
                                   template_var 9),
                                 template_var 3)),
                             template_app
                              (template_app
                                (template_app
                                  (template_hole 14, template_var 11),
                                 template_var 5),
                               template_var 4)),
                           template_app
                            (template_hole 11, template_var 10)),
                         template_app (template_hole 4, template_var 9)),
                       template_app (template_hole 9, template_var 8)),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 8, template_var 12),
                                 template_var 10),
                               template_var 9),
                             template_var 7),
                           template_var 5),
                         template_var 4),
                       template_var 3))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_hole 2,
                             template_app
                              (template_app
                                (template_app
                                  (template_hole 15, template_var 12),
                                 template_var 9),
                               template_var 3)),
                           template_app
                            (template_app
                              (template_app
                                (template_hole 14, template_var 11),
                               template_var 5),
                             template_var 4)),
                         template_app (template_hole 11, template_var 10)),
                       template_app (template_hole 4, template_var 9)),
                     template_app (template_hole 9, template_var 8)),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 8, template_var 12),
                               template_var 10),
                             template_var 9),
                           template_var 7),
                         template_var 5),
                       template_var 4),
                     template_var 3)))),
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 9, template_var 8)),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_app
                                (template_app
                                  (template_hole 15, template_var 12),
                                 template_var 9),
                               template_var 3)),
                           template_app
                            (template_app
                              (template_app
                                (template_hole 14, template_var 11),
                               template_var 5),
                             template_var 4)),
                         template_app (template_hole 11, template_var 10)),
                       template_app (template_hole 4, template_var 9)),
                     template_app (template_hole 9, template_var 8)),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 8, template_var 12),
                               template_var 10),
                             template_var 9),
                           template_var 7),
                         template_var 5),
                       template_var 4),
                     template_var 3))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_hole 0,
                           template_app
                            (template_app
                              (template_app
                                (template_hole 15, template_var 12),
                               template_var 9),
                             template_var 3)),
                         template_app
                          (template_app
                            (template_app
                              (template_hole 14, template_var 11),
                             template_var 5),
                           template_var 4)),
                       template_app (template_hole 11, template_var 10)),
                     template_app (template_hole 4, template_var 9)),
                   template_app (template_hole 9, template_var 8)),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 8, template_var 12),
                             template_var 10),
                           template_var 9),
                         template_var 7),
                       template_var 5),
                     template_var 4),
                   template_var 3))))
           )))]:
   (string * thm * template) list
### theory "Draft.EncodingsMoreTemplates"
### 0.459s elapsed time, 0.618s cpu time, 0.061s GC time
val it = (): unit
