   [("Set_Interval.finite_atMost", "finite {..?k}",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Map.map_le_refl", "?f \<subseteq>\<^sub>m ?f",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Topological_Spaces.closed_atMost", "closed {..?a}",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Real_Vector_Spaces.closed_real_atMost", "closed {..?a}",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Map.finite_dom_map_of", "finite (dom (map_of ?l))",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("Set_Interval.finite_atLeastAtMost_int", "finite {?l..?u}",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Set_Interval.finite_greaterThanAtMost_int", "finite {?l<..?u}",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Set_Interval.finite_atLeastAtMost", "finite {?l..?u}",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Set_Interval.finite_greaterThanAtMost", "finite {?l<..?u}",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Map.finite_graph_map_of", "finite (Map.graph (map_of ?al))",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("Map.inj_on_fst_graph", "inj_on fst (Map.graph ?m)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Map.map_le_empty", "Map.empty \<subseteq>\<^sub>m ?g",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)
         )),
    ("Topological_Spaces.closed_atLeastAtMost", "closed {?a..?b}",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Real_Vector_Spaces.closed_real_atLeastAtMost", "closed {?a..?b}",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Map.finite_range_map_of", "finite (range (map_of ?xys))",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0))
         )),
    ("HOL.ASSUMPTION_cong", "ASSUMPTION ?A = ASSUMPTION ?A",
     template_equation
      (template_app (template_hole 0, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Map.map_of_Cons_code", "map_of [] ?k = None",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Map.map_le_map_add", "?f \<subseteq>\<^sub>m ?g ++ ?f",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("HOL.ASSUMPTION_I", "?A ==> ASSUMPTION ?A",
     template_implication
      ([template_predicate (template_var 0)],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("HOL.ASSUMPTION_D", "ASSUMPTION ?A ==> ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate (template_var 0))),
    ("Infinite_Set.MOST_ge_nat", "MOST n. ?m <= n",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, t_empty), template_hole 0)
         )),
    ("Order_Relation_More.aboveS_notIn", "?a ~: aboveS ?r ?a",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1))
             )
         )),
    ("Map.restrict_map_to_empty", "?m |` {} = Map.empty",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       t_empty)),
    ("Map.map_add_empty", "?m ++ Map.empty = ?m",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), t_empty),
       template_var 0)),
    ("Map.empty_map_add", "Map.empty ++ ?m = ?m",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_var 0)),
    ("Map.map_upds_Nil1", "?m([] [|->] ?bs) = ?m",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_var 0),
       template_var 1)),
    ("Map.map_upds_Nil2", "?m(?as [|->] []) = ?m",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_var 1)),
    ("Set_Interval.card_atMost", "card {..?u} = Suc ?u",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Num.BitM_inc_eq", "Num.BitM (Num.inc ?n) = num.Bit1 ?n",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Num.inc_BitM_eq", "Num.inc (Num.BitM ?n) = num.Bit0 ?n",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Set_Interval.Compl_atMost", "- {..?k} = {?k<..}",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Set_Interval.atMost_atLeast0", "{..?n} = {0..?n}",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Set_Interval.atLeast0AtMost", "{0..?n} = {..?n}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Set_Interval.lessThan_Suc_atMost", "{..<Suc ?k} = {..?k}",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Meson.skolem_COMBK_iff", "?P = Meson.skolem (Meson.COMBK ?P ?i)",
     template_equation
      (template_var 1,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Map.upd_None_map_le", "?f(?x := None) \<subseteq>\<^sub>m ?f",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0),
               template_hole 0)),
           template_var 1)
         )),
    ("Order_Relation_More.Above_Field", "Above ?r ?A <= Field ?r",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("Order_Relation_More.Under_Field", "Under ?r ?A <= Field ?r",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("Order_Relation_More.UnderS_Field", "UnderS ?r ?A <= Field ?r",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("Order_Relation_More.above_Field", "above ?r ?a <= Field ?r",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("Order_Relation_More.aboveS_Field", "aboveS ?r ?a <= Field ?r",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("Meson.not_notD", "~ ~ ?P ==> ?P",
     template_implication
      ([template_negation
         (template_negation (template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Meson.disj_FalseD1", "False | ?P ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_hole 0),
              template_var 0)
            )],
       template_predicate (template_var 0))),
    ("Meson.disj_FalseD2", "?P | False ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_hole 0)
            )],
       template_predicate (template_var 0))),
    ("Infinite_Set.MOST_neq", "MOST x. x ~= ?a",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, t_empty), template_hole 0)
         )),
    ("Infinite_Set.MOST_neq", "MOST x. ?a ~= x",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, t_empty), template_hole 0)
         )),
    ("Infinite_Set.not_INFM_eq", "~ (INFM x. x = ?a)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 2, t_empty), template_hole 0)
             )
         )),
    ("Infinite_Set.not_INFM_eq", "~ (INFM x. ?a = x)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 2, t_empty), template_hole 0)
             )
         )),
    ("Map.map_comp_empty", "?m \<circ>\<^sub>m Map.empty = Map.empty",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), t_empty),
       t_empty)),
    ("Map.restrict_map_empty", "Map.empty |` ?D = Map.empty",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       t_empty)),
    ("Map.map_comp_empty", "Map.empty \<circ>\<^sub>m ?m = Map.empty",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       t_empty)),
    ("Num.one_plus_BitM", "num.One + Num.BitM ?n = num.Bit0 ?n",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Num.BitM_plus_one", "Num.BitM ?n + num.One = num.Bit0 ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Map.fst_graph_eq_dom", "fst ` Map.graph ?m = dom ?m",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Map.snd_graph_ran", "snd ` Map.graph ?m = ran ?m",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Order_Relation_More.UnderS_disjoint", "?A Int UnderS ?r ?A = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1)),
       template_hole 0)),
    ("Map.dom_const", "dom (%x. Some (?f x)) = UNIV",
     template_equation
      (template_app (template_hole 2, t_empty), template_hole 0)),
    ("Map.finite_graph_iff_finite_dom",
     "finite (Map.graph ?m) = finite (dom ?m)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("HOL.NO_MATCH_cong", "NO_MATCH ?pat ?val = NO_MATCH ?pat ?val",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Order_Relation_More.AboveS_subset_Above",
     "AboveS ?r ?A <= Above ?r ?A",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Order_Relation_More.UnderS_subset_Under",
     "UnderS ?r ?A <= Under ?r ?A",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Order_Relation_More.aboveS_subset_above",
     "aboveS ?r ?a <= above ?r ?a",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Meson.skolem_COMBK_I", "?Q ==> Meson.skolem (Meson.COMBK ?Q ?i)",
     template_implication
      ([template_predicate (template_var 1)],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Map.map_option_o_empty", "map_option ?f o Map.empty = Map.empty",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         t_empty),
       t_empty)),
    ("Map.empty_upd_none", "Map.empty(?x := None) = Map.empty",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, t_empty), template_var 0),
         template_hole 0),
       t_empty)),
    ("Set_Interval.card_greaterThanAtMost", "card {?l<..?u} = ?u - ?l",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Map.dom_map_of_conv_image_fst", "dom (map_of ?xys) = fst ` set ?xys",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Map.dom_map_option_comp", "dom (map_option ?g o ?m) = dom ?m",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("List.atLeastAtMost_upto", "{?i..?j} = set [?i..?j]",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("List.atMost_upto", "{..?n} = set [0..<Suc ?n]",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("Set_Interval.atLeastSucAtMost_greaterThanAtMost",
     "{Suc ?l..?u} = {?l<..?u}",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Set_Interval.atLeastLessThanSuc_atLeastAtMost",
     "{?l..<Suc ?u} = {?l..?u}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("List.ListMem_iff", "ListMem ?x ?xs = (?x : set ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Map.finite_ran", "finite (dom ?p) ==> finite (ran ?p)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Meson.disj_comm", "?P | ?Q ==> ?Q | ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Infinite_Set.MOST_eq_imp", "MOST x. x = ?a --> ?P x",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, t_empty), template_hole 0)
         )),
    ("Infinite_Set.MOST_eq_imp", "MOST x. ?a = x --> ?P x",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, t_empty), template_hole 0)
         )),
    ("Set_Interval.finite_M_bounded_by_nat", "finite {k. ?P k & k < ?i}",
     template_predicate
      (
         template_app
          (template_hole 3, template_app (template_hole 2, t_empty))
         )),
    ("Map.map_upd_nonempty", "?t(?k |-> ?x) ~= Map.empty",
     template_negation
      (
         template_equation
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_app (template_hole 1, template_var 0)),
           t_empty)
         )),
    ("Topological_Spaces.LIM_Uniq", "?< L. ?f \<midarrow>?a\<rightarrow> L",
     template_predicate (template_app (template_hole 4, t_empty))),
    ("Set_Interval.card_greaterThanAtMost_int",
     "card {?l<..?u} = nat (?u - ?l)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Set_Interval.card_atLeastAtMost", "card {?l..?u} = Suc ?u - ?l",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("Order_Relation_More.above_Above_singl", "above ?r ?a = Above ?r {?a}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Order_Relation_More.aboveS_AboveS_singl",
     "aboveS ?r ?a = AboveS ?r {?a}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Order_Relation_More.under_Under_singl", "under ?r ?a = Under ?r {?a}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Order_Relation_More.underS_UnderS_singl",
     "underS ?r ?a = UnderS ?r {?a}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Map.dom_restrict", "dom (?m |` ?A) = dom ?m Int ?A",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_var 0))),
    ("Set_Interval.atMost_Int_atLeast", "{..?n} Int {?n..} = {?n}",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Set_Interval.atLeastPlusOneAtMost_greaterThanAtMost_int",
     "{?l + 1..?u} = {?l<..?u}",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Set_Interval.atLeastLessThanPlusOne_atLeastAtMost_int",
     "{?l..<?u + 1} = {?l..?u}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("List.atLeastAtMost_upt", "{?n..?m} = set [?n..<Suc ?m]",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Set_Interval.atMost_Suc", "{..Suc ?k} = insert (Suc ?k) {..?k}",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 2, template_var 0)))),
    ("Set_Interval.image_Suc_atMost", "Suc ` {..?n} = {1..Suc ?n}",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app (template_hole 3, template_var 0)))),
    ("Infinite_Set.MOST_const", "(MOST x. ?P) = (?P | finite UNIV)",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty), template_hole 3),
       template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)))),
    ("Map.dom_eq_empty_conv", "(dom ?f = {}) = (?f = Map.empty)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, t_empty))),
    ("Map.empty_eq_map_of_iff", "(Map.empty = map_of ?xys) = (?xys = [])",
     template_bimplication
      (template_equation
        (t_empty, template_app (template_hole 2, template_var 0)),
       template_equation (template_var 0, template_hole 0))),
    ("Map.map_of_eq_empty_iff", "(map_of ?xys = Map.empty) = (?xys = [])",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), t_empty),
       template_equation (template_var 0, template_hole 0))),
    ("Set_Interval.atMost_eq_iff", "({..?x} = {..?y}) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Set_Interval.atMost_subset_iff", "({..?x} <= {..?y}) = (?x <= ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Infinite_Set.MOST_eq", "(MOST x. x = ?a) = finite UNIV",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty), template_hole 2),
       template_app (template_hole 1, template_hole 0))),
    ("Infinite_Set.MOST_eq", "(MOST x. ?a = x) = finite UNIV",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty), template_hole 2),
       template_app (template_hole 1, template_hole 0))),
    ("Series.summable_LIMSEQ_zero",
     "summable ?f ==> ?f \<longlonglongrightarrow> (0::?'a)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 0),
               template_app (template_hole 2, template_hole 1)),
             template_hole 0)
           ))),
    ("Meson.imp_to_disjD", "?P --> ?Q ==> ~ ?P | ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Set_Interval.subset_eq_atLeast0_atMost_finite",
     "?N <= {0..?n} ==> finite ?N",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 2, template_hole 1),
            template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Meson.not_refl_disj_D", "?x ~= ?x | ?P ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 1),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate (template_var 0))),
    ("Map.map_of_append", "map_of (?xs @ ?ys) = map_of ?ys ++ map_of ?xs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 0)),
         template_app (template_hole 2, template_var 1)))),
    ("Map.dom_map_add", "dom (?m ++ ?n) = dom ?n Un dom ?m",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 0)),
         template_app (template_hole 2, template_var 1)))),
    ("Map.dom_map_option", "dom (%k. map_option (?f k) (?m k)) = dom ?m",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("Set_Interval.image_minus_const_AtMost",
     "(-) ?c ` {..?b} = {?c - ?b..}",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("List.greaterThanAtMost_upto", "{?i<..?j} = set [?i + 1..?j]",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)),
           template_var 0)))),
    ("Set_Interval.atMost_Suc_eq_insert_0",
     "{..Suc ?n} = insert 0 (Suc ` {..?n})",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_hole 3),
           template_app (template_hole 4, template_var 0))))),
    ("Set_Interval.atMost_nat_numeral",
     "{..numeral ?k} = insert (numeral ?k) {..pred_numeral ?k}",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 3,
           template_app (template_hole 0, template_var 0))))),
    ("List.greaterThanAtMost_upt", "{?n<..?m} = set [Suc ?n..<Suc ?m]",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Map.graph_map_comp",
     "Map.graph (?m1.0 \<circ>\<^sub>m ?m2.0) =
      Map.graph ?m2.0 O Map.graph ?m1.0",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Topological_Spaces.convergent_LIMSEQ_iff",
     "convergent ?X = ?X \<longlonglongrightarrow> lim ?X",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))),
         template_hole 0))),
    ("Infinite_Set.INFM_const", "(INFM x. ?P) = (?P & infinite UNIV)",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty), template_hole 4),
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("HOL.de_Morgan_conj", "(~ (?P & ?Q)) = (~ ?P | ~ ?Q)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("HOL.de_Morgan_disj", "(~ (?P | ?Q)) = (~ ?P & ~ ?Q)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Map.domIff", "(?a : dom ?m) = (?m ?a ~= None)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_negation
        (
           template_equation
            (template_app (template_var 0, template_var 1), template_hole 0)
           ))),
    ("Topological_Spaces.LIMSEQ_const_iff",
     "(%n. ?k) \<longlonglongrightarrow> ?l = (?k = ?l)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, t_empty),
                template_app (template_hole 2, template_var 0)),
              template_hole 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Complex.DeMoivre", "cis ?a ^ ?n = cis (real ?n * ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1)))),
    ("Set_Interval.card_le_Suc_Max",
     "finite ?S ==> card ?S <= Suc (Max ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Map.map_add_subsumed1", "?f \<subseteq>\<^sub>m ?g ==> ?f ++ ?g = ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("Map.map_add_subsumed2", "?f \<subseteq>\<^sub>m ?g ==> ?g ++ ?f = ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 0))),
    ("Map.map_le_implies_dom_le",
     "?f \<subseteq>\<^sub>m ?g ==> dom ?f <= dom ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Meson.not_impD", "~ (?P --> ?Q) ==> ?P & ~ ?Q",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app (template_hole 2, template_var 0))
           ))),
    ("Map.map_add_le_mapE",
     "?f ++ ?g \<subseteq>\<^sub>m ?h ==> ?g \<subseteq>\<^sub>m ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("Meson.make_pos_rule'", "[| ?P | ?Q; ~ ?P |] ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            ),
        template_negation (template_predicate (template_var 1))],
       template_predicate (template_var 0))),
    ("Meson.make_neg_rule'", "[| ~ ?P | ?Q; ?P |] ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 1)),
              template_var 0)
            ),
        template_predicate (template_var 1)],
       template_predicate (template_var 0))),
    ("Limits.LIMSEQ_inverse_real_of_nat_add",
     "(%n. ?r + inverse (real (Suc n))) \<longlonglongrightarrow> ?r",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 6, t_empty),
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("Map.map_add_assoc",
     "?m1.0 ++ (?m2.0 ++ ?m3.0) = ?m1.0 ++ ?m2.0 ++ ?m3.0",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Map.restrict_restrict", "?m |` ?A |` ?B = ?m |` (?A Int ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Map.restrict_complement_singleton_eq",
     "?f |` (- {?x}) = ?f(?x := None)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2))),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Set_Interval.card_atLeastAtMost_int",
     "card {?l..?u} = nat (?u - ?l + 1)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_hole 0)))),
    ("Map.ran_map_option", "ran (%x. map_option ?f (?m x)) = ?f ` ran ?m",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Set_Interval.image_int_atLeastAtMost",
     "int ` {?a..?b} = {int ?a..int ?b}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Set_Interval.atLeast0_atMost_Suc",
     "{0..Suc ?n} = insert (Suc ?n) {0..?n}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 0)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)))),
    ("Set_Interval.atLeast1_atMost_eq_remove0",
     "{Suc 0..?n} = {..?n} - {0}",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app (template_hole 5, template_hole 4)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_app (template_hole 1, template_hole 4),
           template_hole 0)))),
    ("Set_Interval.image_Suc_atLeastAtMost",
     "Suc ` {?i..?j} = {Suc ?i..Suc ?j}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("MacLaurin.eq_diff_eq'", "(?x = ?y - ?z) = (?y = ?x + ?z)",
     template_bimplication
      (template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Map.inj_on_map_add_dom",
     "inj_on (?m ++ ?m') (dom ?m') = inj_on ?m' (dom ?m')",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Infinite_Set.INFM_neq", "(INFM x. x ~= ?a) = infinite UNIV",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty), template_hole 2),
       template_app
        (template_hole 4,
         template_app (template_hole 1, template_hole 0)))),
    ("Infinite_Set.INFM_neq", "(INFM x. ?a ~= x) = infinite UNIV",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty), template_hole 2),
       template_app
        (template_hole 4,
         template_app (template_hole 1, template_hole 0)))),
    ("Fun_More.atLeastLessThan_less", "({0..<?m} < {0..<?n}) = (?m < ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Fun_More.atLeastLessThan_less_eq",
     "({0..<?m} <= {0..<?n}) = (?m <= ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Set_Interval.Inf_greaterThanAtMost", "?x < ?y ==> Inf {?x<..?y} = ?x",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1))),
    ("Conditionally_Complete_Lattices.cInf_greaterThanAtMost",
     "?y < ?x ==> Inf {?y<..?x} = ?y",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1))),
    ("Infinite_Set.ALL_MOST", "ALL x. ?P x ==> MOST x. ?P x",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0)
           ))),
    ("Meson.not_conjD", "~ (?P & ?Q) ==> ~ ?P | ~ ?Q",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 1)),
             template_app (template_hole 2, template_var 0))
           ))),
    ("Meson.not_disjD", "~ (?P | ?Q) ==> ~ ?P & ~ ?Q",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 1)),
             template_app (template_hole 2, template_var 0))
           ))),
    ("Map.graph_domD", "?x : Map.graph ?m ==> fst ?x : dom ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Map.graph_ranD", "?x : Map.graph ?m ==> snd ?x : ran ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Infinite_Set.MOST_I", "(!!x. ?P x) ==> MOST x. ?P x",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0)
           ))),
    ("Infinite_Set.INFM_EX", "INFM x. ?P x ==> EX x. ?P x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_hole 1)
            )],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Map.ranI", "?m ?a = Some ?b ==> ?b : ran ?m",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Map.domI", "?m ?a = Some ?b ==> ?a : dom ?m",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Meson.make_pos_goal", "[| ?P; ?P ==> ~ ?P |] ==> False",
     template_implication
      ([template_predicate (template_var 0),
        template_implication
         ([template_predicate (template_var 0)],
          template_negation (template_predicate (template_var 0)))],
       template_predicate (template_hole 0))),
    ("Limits.LIMSEQ_inverse_real_of_nat_add_minus",
     "(%n. ?r + - inverse (real (Suc n))) \<longlonglongrightarrow> ?r",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 7, t_empty),
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("Int.sub_BitM_One_eq",
     "neg_numeral_class.sub (Num.BitM ?n) num.One =
      2 * neg_numeral_class.sub ?n num.One",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_hole 3),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_hole 3))),
         template_app
          (template_app (template_hole 5, template_var 0),
           template_hole 3)))),
    ("Set_Interval.atLeast0_atMost_Suc_eq_insert_0",
     "{0..Suc ?n} = insert 0 (Suc ` {0..?n})",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 3),
         template_app
          (template_app (template_hole 0, template_hole 2),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 0))))),
    ("Map.graph_eq_to_snd_dom",
     "Map.graph ?m = (%x. (x, the (?m x))) ` dom ?m",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app (template_hole 3, t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("Infinite_Set.MOST_iff_cofinite",
     "(MOST x. ?P x) = finite {x. ~ ?P x}",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty), template_hole 3),
       template_app
        (template_hole 2, template_app (template_hole 1, t_empty)))),
    ("Infinite_Set.INFM_iff_infinite",
     "(INFM x. ?P x) = infinite {x. ?P x}",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty), template_hole 3),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1, template_app (template_hole 0, t_empty))))),
    ("Infinite_Set.MOST_Suc_iff", "(MOST n. ?P (Suc n)) = (MOST n. ?P n)",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_hole 0),
       template_app
        (template_app (template_hole 2, t_empty), template_hole 0))),
    ("Divides.divmod_BitM_2_eq",
     "divmod (Num.BitM ?m) (num.Bit0 num.One) = (numeral ?m - 1, 1)",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 0)),
         template_app (template_hole 5, template_hole 4)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0)),
         template_hole 0))),
    ("Order_Relation_More.Above_decr",
     "?A <= ?B ==> Above ?r ?B <= Above ?r ?A",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Order_Relation_More.AboveS_decr",
     "?A <= ?B ==> AboveS ?r ?B <= AboveS ?r ?A",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Order_Relation_More.Under_decr",
     "?A <= ?B ==> Under ?r ?B <= Under ?r ?A",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Order_Relation_More.UnderS_decr",
     "?A <= ?B ==> UnderS ?r ?B <= UnderS ?r ?A",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Order_Relation_More.above_incr2",
     "?r <= ?r' ==> above ?r ?a <= above ?r' ?a",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Order_Relation_More.aboveS_incr2",
     "?r <= ?r' ==> aboveS ?r ?a <= aboveS ?r' ?a",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Order_Relation_More.under_incr2",
     "?r <= ?r' ==> under ?r ?a <= under ?r' ?a",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Order_Relation_More.underS_incr2",
     "?r <= ?r' ==> underS ?r ?a <= underS ?r' ?a",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Map.restrict_in", "?x : ?A ==> (?m |` ?A) ?x = ?m ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1),
           template_var 2),
         template_app (template_var 0, template_var 2)))),
    ("List.min_list_Min", "?xs ~= [] ==> min_list ?xs = Min (set ?xs)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Map.restrict_out", "?x ~: ?A ==> (?m |` ?A) ?x = None",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1),
           template_var 2),
         template_hole 0))),
    ("Map.map_comp_simps",
     "?m2.0 ?k = None ==> (?m1.0 \<circ>\<^sub>m ?m2.0) ?k = None",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1), template_hole 3)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2),
           template_var 1),
         template_hole 0))),
    ("Map.graph_map_of_if_distinct_dom",
     "distinct (map fst ?al) ==> Map.graph (map_of ?al) = set ?al",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Meson.not_allD", "~ (ALL x. ?P x) ==> EX x. ~ ?P x",
     template_implication
      ([template_negation
         (template_predicate (template_app (template_hole 1, t_empty)))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Meson.not_exD", "\<nexists>x. ?P x ==> ALL x. ~ ?P x",
     template_implication
      ([template_negation
         (template_predicate (template_app (template_hole 1, t_empty)))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Order_Relation_More.under_empty",
     "?a ~: Field ?r ==> under ?r ?a = {}",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app (template_hole 3, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Meson.disj_assoc", "(?P | ?Q) | ?R ==> ?P | ?Q | ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 0,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Fun_More.atLeastLessThan_injective",
     "{0..<?m} = {0..<?n} ==> ?m = ?n",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_hole 1),
            template_var 1),
          template_app
           (template_app (template_hole 2, template_hole 1),
            template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Meson.make_neg_goal", "[| ~ ?P; ~ ?P ==> ?P |] ==> False",
     template_implication
      ([template_negation (template_predicate (template_var 0)),
        template_implication
         ([template_negation (template_predicate (template_var 0))],
          template_predicate (template_var 0))],
       template_predicate (template_hole 0))),
    ("Map.restrict_map_insert",
     "?f |` insert ?a ?A = (?f |` ?A)(?a := ?f ?a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_var 1),
         template_app (template_var 2, template_var 1)))),
    ("Map.map_add_upds",
     "?m1.0 ++ ?m2.0(?xs [|->] ?ys) = (?m1.0 ++ ?m2.0)(?xs [|->] ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("Map.map_of_eq_None_iff",
     "(map_of ?xys ?x = None) = (?x ~: fst ` set ?xys)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0)),
         template_hole 5),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 1)))))),
    ("Map.map_le_iff_map_add_commute",
     "(?f \<subseteq>\<^sub>m ?f ++ ?g) = (?f ++ ?g = ?g ++ ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("Infinite_Set.not_MOST", "(~ (MOST x. ?P x)) = (INFM x. ~ ?P x)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_hole 1)),
       template_app
        (template_app (template_hole 0, t_empty), template_hole 1))),
    ("Infinite_Set.not_INFM", "(~ (INFM x. ?P x)) = (MOST x. ~ ?P x)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_hole 1)),
       template_app
        (template_app (template_hole 0, t_empty), template_hole 1))),
    ("List.sorted_list_of_set_atMost_Suc",
     "sorted_list_of_set {..Suc ?k} = sorted_list_of_set {..?k} @ [Suc ?k]",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 0)),
           template_hole 0)))),
    ("MacLaurin.sumr_cos_zero_one",
     "(SUM m<Suc ?n. cos_coeff m * 0 ^ m) = 1",
     template_equation
      (template_app
        (template_app (template_hole 7, t_empty),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("NthRoot.LIMSEQ_root_const",
     "0 < ?c ==> (%n. root n ?c) \<longlonglongrightarrow> 1",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, t_empty),
               template_app (template_hole 2, template_hole 1)),
             template_hole 0)
           ))),
    ("Map.finite_range_map_of_map_add",
     "finite (range ?f) ==> finite (range (?f ++ map_of ?l))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 1),
                template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app (template_hole 0, template_var 0))),
               template_hole 2))
           ))),
    ("Order_Relation_More.subset_Above_Under",
     "?B <= Field ?r ==> ?B <= Above ?r (Under ?r ?B)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Order_Relation_More.subset_AboveS_UnderS",
     "?B <= Field ?r ==> ?B <= AboveS ?r (UnderS ?r ?B)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Order_Relation_More.subset_Under_Above",
     "?B <= Field ?r ==> ?B <= Under ?r (Above ?r ?B)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Order_Relation_More.subset_UnderS_AboveS",
     "?B <= Field ?r ==> ?B <= UnderS ?r (AboveS ?r ?B)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Map.domD", "?a : dom ?m ==> EX b. ?m ?a = Some b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Order_Relation_More.in_Above_under",
     "?a : Field ?r ==> ?a : Above ?r (under ?r ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Order_Relation_More.in_Under_above",
     "?a : Field ?r ==> ?a : Under ?r (above ?r ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Order_Relation_More.in_UnderS_aboveS",
     "?a : Field ?r ==> ?a : UnderS ?r (aboveS ?r ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Map.map_add_dom_app_simps",
     "?m : dom ?l2.0 ==> (?l1.0 ++ ?l2.0) ?m = ?l2.0 ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1),
           template_var 2),
         template_app (template_var 1, template_var 2)))),
    ("Infinite_Set.MOST_SucI", "MOST n. ?P n ==> MOST n. ?P (Suc n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty), template_hole 1)
           ))),
    ("Map.fun_upd_None_if_notin_dom",
     "?k ~: dom ?m ==> ?m(?k := None) = ?m",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app (template_hole 3, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1),
           template_hole 0),
         template_var 0))),
    ("Map.in_graphI", "?m ?k = Some ?v ==> (?k, ?v) : Map.graph ?m",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Infinite_Set.MOST_SucD", "MOST n. ?P (Suc n) ==> MOST n. ?P n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty), template_hole 0)
           ))),
    ("Map.in_graphD", "(?k, ?v) : Map.graph ?m ==> ?m ?k = Some ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app (template_var 0, template_var 2),
         template_app (template_hole 0, template_var 1)))),
    ("Topological_Spaces.LIM_const_eq",
     "(%x. ?k) \<midarrow>?a\<rightarrow> ?L ==> ?k = ?L",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, t_empty),
                template_app (template_hole 3, template_var 1)),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_hole 1))
            )],
       template_equation (template_var 2, template_var 1))),
    ("Fun_More.atLeastLessThan_injective2",
     "bij_betw ?f {0..<?m} {0..<?n} ==> ?m = ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 1)),
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 0))
            )],
       template_equation (template_var 1, template_var 0))),
    ("Map.graph_restrictD", "(?k, ?v) : Map.graph (?m |` ?A) ==> ?k : ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 3), template_var 0)
           ))),
    ("Meson.make_pos_rule", "[| ?P | ?Q; ?P ==> ~ ?P |] ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            ),
        template_implication
         ([template_predicate (template_var 1)],
          template_negation (template_predicate (template_var 1)))],
       template_predicate (template_var 0))),
    ("Map.map_le_antisym",
     "[| ?f \<subseteq>\<^sub>m ?g; ?g \<subseteq>\<^sub>m ?f |]
      ==> ?f = ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Map.map_le_trans",
     "[| ?m1.0 \<subseteq>\<^sub>m ?m2.0; ?m2.0 \<subseteq>\<^sub>m ?m3.0 |]
      ==> ?m1.0 \<subseteq>\<^sub>m ?m3.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Limits.LIMSEQ_inverse_real_of_nat_add_minus_mult",
     "(%n. ?r * (1 + - inverse (real (Suc n))))
      \<longlonglongrightarrow> ?r",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 9, t_empty),
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("Map.dom_map_upds",
     "dom (?m(?xs [|->] ?ys)) = set (take (length ?ys) ?xs) Un dom ?m",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 1))),
         template_app (template_hole 5, template_var 2)))),
    ("Set_Interval.image_minus_const_greaterThanAtMost",
     "(-) ?c ` {?a<..?b} = {?c - ?b..<?c - ?a}",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 1)))),
    ("Set_Interval.image_diff_atLeastAtMost",
     "(-) ?d ` {?a..?b} = {?d - ?b..?d - ?a}",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 1)))),
    ("Complex.DeMoivre2", "rcis ?r ?a ^ ?n = rcis (?r ^ ?n) (real ?n * ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1)))),
    ("Topological_Spaces.LIMSEQ_INF",
     "decseq ?X ==> ?X \<longlonglongrightarrow> Inf (range ?X)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 0),
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, t_empty),
                     template_hole 1)))),
             template_hole 0)
           ))),
    ("Topological_Spaces.LIMSEQ_SUP",
     "incseq ?X ==> ?X \<longlonglongrightarrow> Sup (range ?X)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 0),
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, t_empty),
                     template_hole 1)))),
             template_hole 0)
           ))),
    ("Meson.iff_to_disjD", "?P = ?Q ==> (~ ?P | ?Q) & (~ ?Q | ?P)",
     template_implication
      ([template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 1))
           ))),
    ("Map.map_le_upd",
     "?f \<subseteq>\<^sub>m ?g ==>
      ?f(?a := ?b) \<subseteq>\<^sub>m ?g(?a := ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Map.map_le_upds",
     "?f \<subseteq>\<^sub>m ?g ==>
      ?f(?as [|->] ?bs) \<subseteq>\<^sub>m ?g(?as [|->] ?bs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Limits.LIMSEQ_inverse_realpow_zero",
     "1 < ?x ==> (%n. inverse (?x ^ n)) \<longlonglongrightarrow> 0",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app (template_hole 2, template_hole 1)),
             template_hole 0)
           ))),
    ("Map.finite_range_updI",
     "finite (range ?f) ==> finite (range (?f(?a |-> ?b)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1),
                   template_app (template_hole 0, template_var 0))),
               template_hole 2))
           ))),
    ("GCD.Max_divisors_self_nat", "?n ~= 0 ==> Max {d. d dvd ?n} = ?n",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_var 0))),
    ("Map.ran_distinct",
     "distinct (map fst ?al) ==> ran (map_of ?al) = snd ` set ?al",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("Limits.LIMSEQ_abs_realpow_zero2",
     "\<bar>?c\<bar> < 1 ==> (^) ?c \<longlonglongrightarrow> 0",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 6, template_var 0),
          template_hole 5)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, t_empty),
               template_app (template_hole 2, template_hole 1)),
             template_hole 0)
           ))),
    ("Limits.LIMSEQ_power_zero",
     "norm ?x < 1 ==> (^) ?x \<longlonglongrightarrow> (0::?'a)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 6, template_var 0),
          template_hole 5)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, t_empty),
               template_app (template_hole 2, template_hole 1)),
             template_hole 0)
           ))),
    ("Map.map_add_dom_app_simps",
     "?m ~: dom ?l1.0 ==> (?l1.0 ++ ?l2.0) ?m = ?l2.0 ?m",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_hole 2, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2),
         template_app (template_var 0, template_var 2)))),
    ("Map.map_add_dom_app_simps",
     "?m ~: dom ?l2.0 ==> (?l1.0 ++ ?l2.0) ?m = ?l1.0 ?m",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_hole 2, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1),
           template_var 2),
         template_app (template_var 0, template_var 2)))),
    ("Map.insert_dom", "?f ?x = Some ?y ==> insert ?x (dom ?f) = dom ?f",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 2)),
         template_app (template_hole 0, template_var 2)))),
    ("Map.map_comp_simps",
     "?m2.0 ?k = Some ?k' ==> (?m1.0 \<circ>\<^sub>m ?m2.0) ?k = ?m1.0 ?k'",
     template_implication
      ([template_equation
         (template_app (template_var 3, template_var 2),
          template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3),
           template_var 2),
         template_app (template_var 0, template_var 1)))),
    ("Map.map_add_find_right",
     "?n ?k = Some ?xx ==> (?m ++ ?n) ?k = Some ?xx",
     template_implication
      ([template_equation
         (template_app (template_var 3, template_var 2),
          template_app (template_hole 1, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3),
           template_var 2),
         template_app (template_hole 1, template_var 1)))),
    ("Map.map_upd_triv", "?t ?k = Some ?x ==> ?t(?k |-> ?x) = ?t",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_app (template_hole 2, template_var 0)),
         template_var 2))),
    ("Meson.conj_exD2", "?P & (EX x. ?Q x) ==> EX x. ?P & ?Q x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app (template_hole 0, t_empty))
            )],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Meson.conj_exD1", "(EX x. ?P x) & ?Q ==> EX x. ?P x & ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1, template_app (template_hole 0, t_empty)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Meson.disj_exD2", "?P | (EX x. ?Q x) ==> EX x. ?P | ?Q x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app (template_hole 0, t_empty))
            )],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Meson.disj_exD1", "(EX x. ?P x) | ?Q ==> EX x. ?P x | ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1, template_app (template_hole 0, t_empty)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Map.map_of_SomeD", "map_of ?xs ?k = Some ?y ==> (?k, ?y) : set ?xs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 2), template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Meson.make_neg_rule", "[| ~ ?P | ?Q; ~ ?P ==> ?P |] ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 1)),
              template_var 0)
            ),
        template_implication
         ([template_negation (template_predicate (template_var 1))],
          template_predicate (template_var 1))],
       template_predicate (template_var 0))),
    ("Map.map_add_upd", "?f ++ ?g(?x |-> ?y) = (?f ++ ?g)(?x |-> ?y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2)),
           template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Map.map_of_map_restrict",
     "map_of (map (%k. (k, ?f k)) ?ks) = (Some o ?f) |` set ?ks",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Limits.LIM_zero_iff",
     "((%x. ?f x - ?l) \<longlongrightarrow> (0::?'b)) ?F =
      (?f \<longlongrightarrow> ?l) ?F",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 1, template_hole 0)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app (template_hole 1, template_var 1)),
         template_var 0))),
    ("Lattices_Big.sum_le_card_Max",
     "finite ?A ==> sum ?f ?A <= card ?A * Max (?f ` ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 4, template_var 0), template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)))))),
    ("Lattices_Big.card_Min_le_sum",
     "finite ?A ==> card ?A * Min (?f ` ?A) <= sum ?f ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1))),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Map.map_le_imp_upd_le",
     "?m1.0 \<subseteq>\<^sub>m ?m2.0 ==>
      ?m1.0(?x := None) \<subseteq>\<^sub>m ?m2.0(?x |-> ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 1),
                 template_hole 1)),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Limits.LIMSEQ_divide_realpow_zero",
     "1 < ?x ==> (%n. ?a / ?x ^ n) \<longlonglongrightarrow> 0",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app (template_hole 2, template_hole 1)),
             template_hole 0)
           ))),
    ("Set_Interval.atLeastAtMost_insertL",
     "?m <= ?n ==> insert ?m {Suc ?m..?n} = {?m..?n}",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Topological_Spaces.LIM_const_not_eq",
     "?k ~= ?L ==> ~ (%x. ?k) \<midarrow>?a\<rightarrow> ?L",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 3, t_empty),
                   template_app (template_hole 2, template_var 1)),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0))
               )
           ))),
    ("Topological_Spaces.LIM_not_zero",
     "?k ~= (0::?'aa) ==> ~ (%x. ?k) \<midarrow>?a\<rightarrow> (0::?'aa)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 3, t_empty),
                   template_app (template_hole 2, template_hole 4)),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0))
               )
           ))),
    ("GCD.Max_divisors_self_int",
     "?n ~= 0 ==> Max {d. d dvd ?n} = \<bar>?n\<bar>",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_app (template_hole 0, template_var 0)))),
    ("Meson.not_iffD", "?P ~= ?Q ==> (?P | ?Q) & (~ ?P | ~ ?Q)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 3, template_var 1)),
               template_app (template_hole 3, template_var 0)))
           ))),
    ("Limits.LIMSEQ_abs_realpow_zero",
     "\<bar>?c\<bar> < 1 ==>
      (^) \<bar>?c\<bar> \<longlonglongrightarrow> 0",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 6, template_var 0),
          template_hole 5)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, t_empty),
               template_app (template_hole 2, template_hole 1)),
             template_hole 0)
           ))),
    ("Topological_Spaces.LIMSEQ_Suc",
     "?f \<longlonglongrightarrow> ?l ==>
      (%n. ?f (Suc n)) \<longlonglongrightarrow> ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_app (template_hole 2, template_var 0)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_hole 1)
           ))),
    ("Map.map_upds_apply_nontin",
     "?x ~: set ?xs ==> (?f(?xs [|->] ?ys)) ?x = ?f ?x",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app (template_hole 2, template_var 2))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0),
           template_var 3),
         template_app (template_var 1, template_var 3)))),
    ("Map.dom_map_of_zip",
     "length ?xs = length ?ys ==> dom (map_of (zip ?xs ?ys)) = set ?xs",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_app (template_hole 0, template_var 1)))),
    ("Topological_Spaces.LIMSEQ_imp_Suc",
     "(%n. ?f (Suc n)) \<longlonglongrightarrow> ?l ==>
      ?f \<longlonglongrightarrow> ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, t_empty),
                template_app (template_hole 1, template_var 0)),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("Map.graph_restrictD",
     "(?k, ?v) : Map.graph (?m |` ?A) ==> ?m ?k = Some ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app (template_var 1, template_var 3),
         template_app (template_hole 0, template_var 2)))),
    ("Conditionally_Complete_Lattices.cInf_eq_Min",
     "[| finite ?X; ?X ~= {} |] ==> Inf ?X = Min ?X",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Conditionally_Complete_Lattices.cSup_eq_Max",
     "[| finite ?X; ?X ~= {} |] ==> Sup ?X = Max ?X",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Map.map_add_le_mapI",
     "[| ?f \<subseteq>\<^sub>m ?h; ?g \<subseteq>\<^sub>m ?h |]
      ==> ?f ++ ?g \<subseteq>\<^sub>m ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Set_Interval.sum_atLeastAtMost_code",
     "sum ?f {?a..?b} =
      fold_atLeastAtMost_nat (%a. (+) (?f a)) ?a ?b (0::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, t_empty), template_var 1),
           template_var 0),
         template_hole 0))),
    ("Set_Interval.prod_atLeastAtMost_code",
     "prod ?f {?a..?b} =
      fold_atLeastAtMost_nat (%a. (*) (?f a)) ?a ?b (1::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, t_empty), template_var 1),
           template_var 0),
         template_hole 0))),
    ("Map.map_of_map",
     "map_of (map (%(k, v). (k, ?f v)) ?xs) = map_option ?f o map_of ?xs",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5, template_app (template_hole 4, t_empty)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Set_Interval.image_minus_const_atLeastAtMost'",
     "(%t. t - ?d) ` {?a..?b} = {?a - ?d..?b - ?d}",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("Map.graph_map_upd",
     "Map.graph (?m(?k |-> ?v)) =
      insert (?k, ?v) (Map.graph (?m(?k := None)))",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1),
             template_hole 0))))),
    ("Infinite_Set.MOST_nat", "(MOST n. ?P n) = (EX m. ALL n>m. ?P n)",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty), template_hole 4),
       template_app (template_hole 3, t_empty))),
    ("Infinite_Set.MOST_nat_le", "(MOST n. ?P n) = (EX m. ALL n>=m. ?P n)",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty), template_hole 4),
       template_app (template_hole 3, t_empty))),
    ("Infinite_Set.INFM_nat", "(INFM n. ?P n) = (ALL m. EX n>m. ?P n)",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty), template_hole 4),
       template_app (template_hole 3, t_empty))),
    ("Infinite_Set.INFM_nat_le", "(INFM n. ?P n) = (ALL m. EX n>=m. ?P n)",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty), template_hole 4),
       template_app (template_hole 3, t_empty))),
    ("Map.empty_eq_map_add_iff",
     "(Map.empty = ?f ++ ?g) = (?f = Map.empty & ?g = Map.empty)",
     template_bimplication
      (template_equation
        (t_empty,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1), t_empty)),
             template_app
              (template_app (template_hole 3, template_var 0), t_empty))
           ))),
    ("Map.map_add_eq_empty_iff",
     "(?f ++ ?g = Map.empty) = (?f = Map.empty & ?g = Map.empty)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         t_empty),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1), t_empty)),
             template_app
              (template_app (template_hole 3, template_var 0), t_empty))
           ))),
    ("Map.map_add_None",
     "((?m ++ ?n) ?k = None) = (?n ?k = None & ?m ?k = None)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_var 1, template_var 0)),
                 template_hole 1)),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_var 2, template_var 0)),
               template_hole 1))
           ))),
    ("Set_Interval.fold_atLeastAtMost_nat",
     "comp_fun_commute ?f ==>
      fold_atLeastAtMost_nat ?f ?a ?b ?acc =
      Finite_Set.fold ?f ?acc {?a..?b}",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("Series.summable_LIMSEQ'",
     "summable ?f ==>
      (%n. sum ?f {..n}) \<longlonglongrightarrow> suminf ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0))),
             template_hole 0)
           ))),
    ("Series.summable_LIMSEQ",
     "summable ?f ==>
      (%n. sum ?f {..<n}) \<longlonglongrightarrow> suminf ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0))),
             template_hole 0)
           ))),
    ("Limits.LIM_zero",
     "(?f \<longlongrightarrow> ?l) ?F ==>
      ((%x. ?f x - ?l) \<longlongrightarrow> (0::?'b)) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app (template_hole 2, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_hole 0)),
             template_var 0)
           ))),
    ("Topological_Spaces.LIMSEQ_ignore_initial_segment",
     "?f \<longlonglongrightarrow> ?a ==>
      (%n. ?f (n + ?k)) \<longlonglongrightarrow> ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app (template_hole 2, template_var 1)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 1)),
             template_hole 1)
           ))),
    ("Map.map_of_eq_dom",
     "map_of ?xs = map_of ?ys ==> fst ` set ?xs = fst ` set ?ys",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("Map.ran_restrictD", "?y : ran (?m |` ?A) ==> EX x:?A. ?m x = Some ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), t_empty)
           ))),
    ("Map.weak_map_of_SomeI",
     "(?k, ?x) : set ?l ==> EX x. map_of ?l ?k = Some x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_app (template_hole 4, template_var 0))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Map.map_add_comm",
     "dom ?m1.0 Int dom ?m2.0 = {} ==> ?m1.0 ++ ?m2.0 = ?m2.0 ++ ?m1.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            template_app (template_hole 3, template_var 0)),
          template_hole 2)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Limits.LIM_zero_cancel",
     "((%x. ?f x - ?l) \<longlongrightarrow> (0::?'b)) ?F ==>
      (?f \<longlongrightarrow> ?l) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, t_empty),
                template_app (template_hole 1, template_hole 0)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_app (template_hole 1, template_var 1)),
             template_var 0)
           ))),
    ("Topological_Spaces.LIMSEQ_offset",
     "(%n. ?f (n + ?k)) \<longlonglongrightarrow> ?a ==>
      ?f \<longlonglongrightarrow> ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, t_empty),
                template_app (template_hole 1, template_var 0)),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("Map.map_upd_eqD1", "?m(?a |-> ?x) = ?n(?a |-> ?y) ==> ?x = ?y",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_var 4),
              template_var 3),
            template_app (template_hole 1, template_var 2)),
          template_app
           (template_app
             (template_app (template_hole 2, template_var 1),
              template_var 3),
            template_app (template_hole 1, template_var 0)))],
       template_equation (template_var 2, template_var 0))),
    ("Map.finite_map_freshness",
     "[| finite (dom ?f); infinite UNIV |] ==> EX x. ?f x = None",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 0))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_hole 3))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Map.map_add_map_of_foldr",
     "?m ++ map_of ?ps = foldr (%(k, v) m. m(k |-> v)) ?ps ?m",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3, template_app (template_hole 2, t_empty)),
           template_var 0),
         template_var 1))),
    ("Map.fun_upd_restrict",
     "(?m |` ?D)(?x := ?y) = (?m |` (?D - {?x}))(?x := ?y)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_hole 0)))),
           template_var 1),
         template_var 0))),
    ("Map.map_of_zip_map",
     "map_of (zip ?xs (map ?f ?xs)) =
      (%x. if x : set ?xs then Some (?f x) else None)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_var 1))),
       t_empty)),
    ("Map.map_upds_Cons",
     "?m(?a # ?as [|->] ?b # ?bs) = ?m(?a |-> ?b, ?as [|->] ?bs)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 4),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3),
               template_app (template_hole 0, template_var 1))),
           template_var 2),
         template_var 0))),
    ("Map.restrict_upd_same", "?m(?x |-> ?y) |` (- {?x}) = ?m |` (- {?x})",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1),
             template_app (template_hole 3, template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0))),
       template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0))))),
    ("Map.dom_eq_singleton_conv",
     "(dom ?f = {?x}) = (EX v. ?f = [?x |-> v])",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 1)),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_hole 5)),
       template_app (template_hole 4, t_empty))),
    ("Topological_Spaces.LIMSEQ_lessThan_iff_atMost",
     "(%n. ?f {..<n}) \<longlonglongrightarrow> ?x =
      (%n. ?f {..n}) \<longlonglongrightarrow> ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, t_empty),
           template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app
        (template_app
          (template_app (template_hole 4, t_empty),
           template_app (template_hole 2, template_var 0)),
         template_hole 1))),
    ("Map.map_of_Cons_code",
     "map_of ((?l, ?v) # ?ps) ?k =
      (if ?l = ?k then Some ?v else map_of ?ps ?k)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 0)),
               template_app (template_hole 0, template_var 2)),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0))
           ))),
    ("Map.image_map_upd", "?x ~: ?A ==> ?m(?x |-> ?y) ` ?A = ?m ` ?A",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 3),
               template_app (template_hole 0, template_var 0))),
           template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 2)))),
    ("Map.dom_minus",
     "?f ?x = None ==> dom ?f - insert ?x ?A = dom ?f - ?A",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1), template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 0)))),
    ("Map.ran_map_upd",
     "?m ?a = None ==> ran (?m(?a |-> ?b)) = insert ?b (ran ?m)",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1), template_hole 5)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 3, template_var 2))))),
    ("Set_Interval.atLeastAtMostSuc_conv",
     "?m <= Suc ?n ==> {?m..Suc ?n} = insert (Suc ?n) {?m..?n}",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Infinite_Set.MOST_INFM",
     "[| infinite UNIV; MOST x. ?P x |] ==> INFM x. ?P x",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_hole 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, t_empty), template_hole 1)
           ))),
    ("Order_Relation_More.Refl_above_in",
     "[| Refl ?r; ?a : Field ?r |] ==> ?a : above ?r ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Infinite_Set.INFM_E",
     "[| INFM x. ?P x; !!x. ?P x ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_hole 1)
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("Map.map_option_o_map_upd",
     "map_option ?f o ?m(?a |-> ?b) = (map_option ?f o ?m)(?a |-> ?f ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 3)),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 3)),
               template_var 2)),
           template_var 1),
         template_app
          (template_hole 0,
           template_app (template_var 3, template_var 0))))),
    ("Map.graph_fun_upd_None",
     "Map.graph (?m(?k := None)) = {e: Map.graph ?m. fst e ~= ?k}",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app
            (template_app (template_hole 7, template_var 1),
             template_var 0),
           template_hole 6)),
       template_app (template_hole 5, t_empty))),
    ("Fun_More.bij_betw_inv_into_twice",
     "bij_betw ?f ?A ?A' ==>
      ALL a:?A. inv_into ?A' (inv_into ?A ?f) a = ?f a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1), t_empty)
           ))),
    ("Fun_More.bij_betw_ball",
     "bij_betw ?f ?A ?B ==> (ALL b:?B. ?phi b) = (ALL a:?A. ?phi (?f a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), t_empty),
         template_app
          (template_app (template_hole 0, template_var 2), t_empty)))),
    ("Map.map_upds_list_update2_drop",
     "length ?xs <= ?i ==> ?m(?xs [|->] ?ys[?i := ?y]) = ?m(?xs [|->] ?ys)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 4),
          template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 4),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 4),
           template_var 1)))),
    ("Map.fun_upds_append2_drop",
     "length ?xs = length ?ys ==>
      ?m(?xs [|->] ?ys @ ?zs) = ?m(?xs [|->] ?ys)",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 3),
          template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 3),
           template_var 2)))),
    ("Map.fun_upds_append_drop",
     "length ?xs = length ?ys ==>
      ?m(?xs @ ?zs [|->] ?ys) = ?m(?xs [|->] ?ys)",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 3),
          template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 3),
           template_var 2)))),
    ("Map.map_of_map_keys",
     "set ?xs = dom ?m ==> map_of (map (%k. (k, the (?m k))) ?xs) = ?m",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_var 1)),
         template_var 0))),
    ("List.nth_sorted_list_of_set_greaterThanAtMost",
     "?n < ?j - ?i ==> sorted_list_of_set {?i<..?j} ! ?n = Suc (?i + ?n)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 6, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 1))),
           template_var 2),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Meson.disj_exD", "(EX x. ?P x) | (EX x. ?Q x) ==> EX x. ?P x | ?Q x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1, template_app (template_hole 0, t_empty)),
              template_app (template_hole 0, t_empty))
            )],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Real_Vector_Spaces.LIMSEQ_norm_0",
     "(!!n. norm (?f n) < 1 / real (Suc n)) ==>
      ?f \<longlonglongrightarrow> (0::?'a)",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 0),
               template_app (template_hole 2, template_hole 1)),
             template_hole 0)
           ))),
    ("Order_Relation_More.above_decr",
     "[| trans ?r; (?a, ?b) : ?r |] ==> above ?r ?b <= above ?r ?a",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              template_var 2)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Limits.LIMSEQ_realpow_zero",
     "[| 0 <= ?x; ?x < 1 |] ==> (^) ?x \<longlonglongrightarrow> 0",
     template_implication
      ([template_inequation (less_equals, template_hole 6, template_var 0),
        template_inequation (less_than, template_var 0, template_hole 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 1, template_hole 6)),
             template_hole 0)
           ))),
    ("Modules.module_hom_compose",
     "[| module_hom ?s1.0 ?s2.0 ?f; module_hom ?s2.0 ?s3.0 ?g |]
      ==> module_hom ?s1.0 ?s3.0 (?g o ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("BigO.bigo_LIMSEQ1",
     "[| ?f : O(?g); ?g \<longlonglongrightarrow> 0 |]
      ==> ?f \<longlonglongrightarrow> 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 0),
                template_app (template_hole 2, template_hole 1)),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_app (template_hole 2, template_hole 1)),
             template_hole 0)
           ))),
    ("Infinite_Set.MOST_inj",
     "[| MOST x. ?P x; inj ?f |] ==> MOST x. ?P (?f x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, t_empty), template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0)
           ))),
    ("Topological_Spaces.LIMSEQ_subseq_LIMSEQ",
     "[| ?X \<longlonglongrightarrow> ?L; strict_mono ?f |]
      ==> (?X o ?f) \<longlonglongrightarrow> ?L",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app (template_hole 3, template_var 1)),
              template_hole 2)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0)),
               template_app (template_hole 3, template_var 1)),
             template_hole 2)
           ))),
    ("Infinite_Set.INFM_inj",
     "[| INFM x. ?P (?f x); inj ?f |] ==> INFM x. ?P x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, t_empty), template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0)
           ))),
    ("Map.map_upds_fold_map_upd",
     "?m(?ks [|->] ?vs) = foldl (%m (k, v). m(k |-> v)) ?m (zip ?ks ?vs)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 4, t_empty), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("GCD.gcd_is_Max_divisors_nat",
     "0 < ?n ==> gcd ?m ?n = Max {d. d dvd ?m & d dvd ?n}",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0), template_var 1),
         template_app
          (template_hole 3, template_app (template_hole 2, t_empty))))),
    ("Map.set_map_of_compr",
     "distinct (map fst ?xs) ==> set ?xs = {(k, v). map_of ?xs k = Some v}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_var 0))
            )],
       template_equation
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty))))),
    ("Map.Some_eq_map_of_iff",
     "distinct (map fst ?xys) ==>
      (Some ?y = map_of ?xys ?x) = ((?x, ?y) : set ?xys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 1)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app (template_hole 0, template_var 2))))),
    ("Map.map_of_eq_Some_iff",
     "distinct (map fst ?xys) ==>
      (map_of ?xys ?x = Some ?y) = ((?x, ?y) : set ?xys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 2))))),
    ("List.sorted_list_of_set_greaterThanAtMost",
     "Suc ?i <= ?j ==>
      sorted_list_of_set {?i<..?j} =
      Suc ?i # sorted_list_of_set {Suc ?i<..?j}",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 4, template_var 1)),
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 4, template_var 1)),
               template_var 0)))))),
    ("Map.ran_map_add",
     "dom ?m1.0 Int dom ?m2.0 = {} ==>
      ran (?m1.0 ++ ?m2.0) = ran ?m1.0 Un ran ?m2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1)),
            template_app (template_hole 5, template_var 0)),
          template_hole 4)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("Map.graph_map_add",
     "dom ?m1.0 Int dom ?m2.0 = {} ==>
      Map.graph (?m1.0 ++ ?m2.0) = Map.graph ?m1.0 Un Map.graph ?m2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1)),
            template_app (template_hole 5, template_var 0)),
          template_hole 4)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("MacLaurin.sin_bound_lemma",
     "[| ?x = ?y; \<bar>?u\<bar> <= ?v |]
      ==> \<bar>?x + ?u - ?y\<bar> <= ?v",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_var 2)),
         template_var 0))),
    ("Map.ran_map_of_zip",
     "[| length ?xs = length ?ys; distinct ?xs |]
      ==> ran (map_of (zip ?xs ?ys)) = set ?ys",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 1),
          template_app (template_hole 6, template_var 0)),
        template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_app (template_hole 0, template_var 0)))),
    ("Map.dom_fun_upd",
     "dom (?f(?x := ?y)) =
      (if ?y = None then dom ?f - {?x} else insert ?x (dom ?f))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 3)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 7, template_var 2)),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_hole 0))),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 7, template_var 2)))
           ))),
    ("Infinite_Set.MOST_conj_distrib",
     "(MOST x. ?P x & ?Q x) = ((MOST x. ?P x) & (MOST x. ?Q x))",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_hole 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, t_empty), template_hole 0)),
         template_app
          (template_app (template_hole 2, t_empty), template_hole 0)))),
    ("Infinite_Set.INFM_disj_distrib",
     "(INFM x. ?P x | ?Q x) = ((INFM x. ?P x) | (INFM x. ?Q x))",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_hole 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, t_empty), template_hole 0)),
         template_app
          (template_app (template_hole 2, t_empty), template_hole 0)))),
    ("Infinite_Set.INFM_imp_distrib",
     "(INFM x. ?P x --> ?Q x) = ((MOST x. ?P x) --> (INFM x. ?Q x))",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty), template_hole 1),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, t_empty), template_hole 1)),
         template_app
          (template_app (template_hole 3, t_empty), template_hole 1)))),
    ("GCD.gcd_is_Max_divisors_int",
     "?n ~= 0 ==> gcd ?m ?n = Max {d. d dvd ?m & d dvd ?n}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0), template_var 1),
         template_app
          (template_hole 3, template_app (template_hole 2, t_empty))))),
    ("Map.map_of_zip_is_None",
     "length ?xs = length ?ys ==>
      (map_of (zip ?xs ?ys) ?x = None) = (?x ~: set ?xs)",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 2),
          template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 1)),
               template_var 0)),
           template_hole 3),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2)))))),
    ("Set_Interval.atLeastAtMostPlus1_int_conv",
     "?m <= 1 + ?n ==> {?m..1 + ?n} = insert (1 + ?n) {?m..?n}",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 4, template_hole 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Limits.LIM_offset_zero",
     "?f \<midarrow>?a\<rightarrow> ?L ==>
      (%h. ?f (?a + h)) \<midarrow>0::?'a\<rightarrow> ?L",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_app (template_hole 4, template_var 1)),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app (template_hole 4, template_var 1)),
             template_app
              (template_app (template_hole 3, template_hole 0),
               template_hole 2))
           ))),
    ("Limits.LIM_offset_zero_cancel",
     "(%h. ?f (?a + h)) \<midarrow>0::?'a\<rightarrow> ?L ==>
      ?f \<midarrow>?a\<rightarrow> ?L",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, t_empty),
                template_app (template_hole 3, template_var 0)),
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 2),
               template_app (template_hole 3, template_var 0)),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 0))
           ))),
    ("Fun_More.atLeastLessThan_less_eq2",
     "inj_on ?f {0..<?m} & ?f ` {0..<?m} <= {0..<?n} ==> ?m <= ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_var 1))),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_app
                     (template_app (template_hole 4, template_hole 3),
                      template_var 1))),
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_var 0)))
            )],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Map.finite_set_of_finite_maps",
     "[| finite ?A; finite ?B |] ==> finite {m. dom m = ?A & ran m <= ?B}",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 6, template_app (template_hole 5, t_empty))
           ))),
    ("Limits.LIMSEQ_incseq_SUP",
     "[| bdd_above (range ?X); incseq ?X |]
      ==> ?X \<longlonglongrightarrow> Sup (range ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 0),
                template_hole 5))
            ),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 6, t_empty),
                     template_hole 5)))),
             template_hole 0)
           ))),
    ("Limits.LIMSEQ_decseq_INF",
     "[| bdd_below (range ?X); decseq ?X |]
      ==> ?X \<longlonglongrightarrow> Inf (range ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 0),
                template_hole 5))
            ),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 6, t_empty),
                     template_hole 5)))),
             template_hole 0)
           ))),
    ("Fun_More.bij_betw_inv_into_LEFT",
     "[| bij_betw ?f ?A ?A'; ?B <= ?A |] ==> inv_into ?A ?f ` ?f ` ?B = ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 3)),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0)),
         template_var 0))),
    ("Fun_More.bij_betw_inv_into_RIGHT",
     "[| bij_betw ?f ?A ?A'; ?B' <= ?A' |]
      ==> ?f ` inv_into ?A ?f ` ?B' = ?B'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3)),
             template_var 0)),
         template_var 0))),
    ("Meson.all_forward",
     "[| ALL x. ?P' x; !!x. ?P' x ==> ?P x |] ==> ALL x. ?P x",
     template_implication
      ([template_predicate (template_app (template_hole 1, t_empty)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Meson.ex_forward",
     "[| EX x. ?P' x; !!x. ?P' x ==> ?P x |] ==> EX x. ?P x",
     template_implication
      ([template_predicate (template_app (template_hole 1, t_empty)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Map.map_of_is_SomeI",
     "[| distinct (map fst ?xys); (?x, ?y) : set ?xys |]
      ==> map_of ?xys ?x = Some ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)),
              template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Wellfounded_More.wfrec_unique_fixpoint",
     "[| wf ?r; adm_wf ?r ?H; ?f = ?H ?f |] ==> ?f = wfrec ?r ?H",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 0, template_app (template_var 1, template_var 0))],
       template_equation
        (template_var 0,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Meson.conj_forward",
     "[| ?P' & ?Q'; ?P' ==> ?P; ?Q' ==> ?Q |] ==> ?P & ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2)
            ),
        template_implication
         ([template_predicate (template_var 3)],
          template_predicate (template_var 1)),
        template_implication
         ([template_predicate (template_var 2)],
          template_predicate (template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Meson.disj_forward",
     "[| ?P' | ?Q'; ?P' ==> ?P; ?Q' ==> ?Q |] ==> ?P | ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2)
            ),
        template_implication
         ([template_predicate (template_var 3)],
          template_predicate (template_var 1)),
        template_implication
         ([template_predicate (template_var 2)],
          template_predicate (template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Meson.imp_forward",
     "[| ?P' --> ?Q'; ?P ==> ?P'; ?Q' ==> ?Q |] ==> ?P --> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2)
            ),
        template_implication
         ([template_predicate (template_var 1)],
          template_predicate (template_var 3)),
        template_implication
         ([template_predicate (template_var 2)],
          template_predicate (template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Map.fun_upd_None_restrict",
     "(?m |` ?D)(?x := None) =
      (if ?x : ?D then ?m |` (?D - {?x}) else ?m |` ?D)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 1)),
           template_var 0),
         template_hole 5),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))),
         template_app
          (template_app (template_hole 6, template_var 2),
           template_var 1)))),
    ("Map.map_comp_Some_iff",
     "((?m1.0 \<circ>\<^sub>m ?m2.0) ?k = Some ?v) =
      (EX k'. ?m2.0 ?k = Some k' & ?m1.0 k' = Some ?v)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 3),
               template_var 2),
             template_var 1)),
         template_app (template_hole 4, template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Limits.LIM_isCont_iff",
     "?f \<midarrow>?a\<rightarrow> ?f ?a =
      (%h. ?f (?a + h)) \<midarrow>0::?'a\<rightarrow> ?f ?a",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_hole 4,
             template_app (template_var 1, template_var 0))),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app
        (template_app
          (template_app (template_hole 5, t_empty),
           template_app
            (template_hole 4,
             template_app (template_var 1, template_var 0))),
         template_app
          (template_app (template_hole 3, template_hole 0),
           template_hole 2)))),
    ("Fun_More.atLeastLessThan_less_eq3",
     "(EX f. inj_on f {0..<?m} & f ` {0..<?m} <= {0..<?n}) = (?m <= ?n)",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Lattices_Big.arg_min_SOME_Min",
     "finite ?S ==>
      arg_min_on ?f ?S = (SOME y. y : ?S & ?f y = Min (?f ` ?S))",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 0), template_var 1),
         template_app (template_hole 5, t_empty)))),
    ("MacLaurin.exp_lower_Taylor_quadratic",
     "0 <= ?x ==> 1 + ?x + ?x\<^sup>2 / 2 <= exp ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 9, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 8, template_hole 7),
               template_var 0)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2)))),
             template_app
              (template_hole 1,
               template_app (template_hole 3, template_hole 2)))),
         template_app (template_hole 0, template_var 0)))),
    ("MacLaurin.fact_diff_Suc",
     "?n < Suc ?m ==> fact (Suc ?m - ?n) = (Suc ?m - ?n) * fact (?m - ?n)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 4, template_var 0)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 4, template_var 0)),
               template_var 1)),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)))))),
    ("Infinite_Set.MOST_imp_iff",
     "MOST x. ?P x ==> (MOST x. ?P x --> ?Q x) = (MOST x. ?Q x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, t_empty), template_hole 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, t_empty), template_hole 2),
         template_app
          (template_app (template_hole 3, t_empty), template_hole 2)))),
    ("Limits.LIMSEQ_linear",
     "[| ?X \<longlonglongrightarrow> ?x; 0 < ?l |]
      ==> (%n. ?X (n * ?l)) \<longlonglongrightarrow> ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_app (template_hole 4, template_var 1)),
              template_hole 3)
            ),
        template_inequation (less_than, template_hole 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app (template_hole 4, template_var 1)),
             template_hole 3)
           ))),
    ("Topological_Spaces.LIM_unique",
     "[| ?f \<midarrow>?a\<rightarrow> ?L;
         ?f \<midarrow>?a\<rightarrow> ?M |]
      ==> ?L = ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_app (template_hole 3, template_var 2)),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_hole 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_app (template_hole 3, template_var 0)),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_hole 1))
            )],
       template_equation (template_var 2, template_var 0))),
    ("Transcendental.product_atMost_eq_Un",
     "?A \<times> {..?m} =
      (SIGMA i:?A. {..?m - i}) Un (SIGMA i:?A. {?m - i<..?m})",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), t_empty),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 4, template_var 1), t_empty)),
         template_app
          (template_app (template_hole 4, template_var 1), t_empty)))),
    ("Map.fun_upd_restrict_conv",
     "?x : ?D ==> (?m |` ?D)(?x := ?y) = (?m |` (?D - {?x}))(?x := ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 2)),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_hole 0)))),
             template_var 3),
           template_var 0)))),
    ("Map.map_add_upd_left",
     "?m ~: dom ?e2.0 ==>
      ?e1.0(?m |-> ?u1.0) ++ ?e2.0 = (?e1.0 ++ ?e2.0)(?m |-> ?u1.0)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_app (template_hole 4, template_var 2))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 3),
               template_app (template_hole 0, template_var 0))),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 2)),
             template_var 3),
           template_app (template_hole 0, template_var 0))))),
    ("Map.map_of_zip_is_Some",
     "length ?xs = length ?ys ==>
      (?x : set ?xs) = (EX y. map_of (zip ?xs ?ys) ?x = Some y)",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 2),
          template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 0),
           template_app (template_hole 5, template_var 2)),
         template_app (template_hole 4, t_empty)))),
    ("Limits.LIM_offset",
     "?f \<midarrow>?a\<rightarrow> ?L ==>
      (%x. ?f (x + ?k)) \<midarrow>?a - ?k\<rightarrow> ?L",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_app (template_hole 4, template_var 2)),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app (template_hole 4, template_var 2)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_hole 2))
           ))),
    ("Countable_Set.countable_SIGMA",
     "[| countable ?I; !!i. i : ?I ==> countable (?A i) |]
      ==> countable (Sigma ?I ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1), t_empty))
           ))),
    ("Order_Relation_More.Linear_order_under_aboveS_Field",
     "[| Linear_order ?r; ?a : Field ?r |]
      ==> Field ?r = under ?r ?a Un aboveS ?r ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 5, template_var 1))
            )],
       template_equation
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Order_Relation_More.Linear_order_underS_above_Field",
     "[| Linear_order ?r; ?a : Field ?r |]
      ==> Field ?r = underS ?r ?a Un above ?r ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 5, template_var 1))
            )],
       template_equation
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Infinite_Set.MOST_conjI",
     "[| MOST x. ?P x; MOST x. ?Q x |] ==> MOST x. ?P x & ?Q x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty), template_hole 1)
           ))),
    ("Infinite_Set.MOST_rev_mp",
     "[| MOST x. ?P x; MOST x. ?P x --> ?Q x |] ==> MOST x. ?Q x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty), template_hole 1)
           ))),
    ("Infinite_Set.MOST_mono",
     "[| MOST x. ?P x; !!x. ?P x ==> ?Q x |] ==> MOST x. ?Q x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_hole 1)
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty), template_hole 1)
           ))),
    ("Infinite_Set.INFM_conjI",
     "[| INFM x. ?P x; MOST x. ?Q x |] ==> INFM x. ?P x & ?Q x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, t_empty), template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, t_empty), template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty), template_hole 2)
           ))),
    ("Infinite_Set.INFM_mono",
     "[| INFM x. ?P x; !!x. ?P x ==> ?Q x |] ==> INFM x. ?Q x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_hole 1)
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty), template_hole 1)
           ))),
    ("Map.map_of_filter_in",
     "[| map_of ?xs ?k = Some ?z; ?P ?k ?z |]
      ==> map_of (filter (%(x, y). ?P x y) ?xs) ?k = Some ?z",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_app (template_hole 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_var 0, template_var 2), template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 3)),
           template_var 2),
         template_app (template_hole 2, template_var 1)))),
    ("Order_Relation_More.aboveS_decr",
     "[| trans ?r; antisym ?r; (?a, ?b) : ?r |]
      ==> aboveS ?r ?b <= aboveS ?r ?a",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              template_var 2)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("MacLaurin.Maclaurin_sin_bound",
     "\<bar>sin ?x - (SUM m<?n. sin_coeff m * ?x ^ m)\<bar>
      <= inverse (fact ?n) * \<bar>?x\<bar> ^ ?n",
     template_inequation
      (less_equals,
       template_app
        (template_hole 9,
         template_app
          (template_app
            (template_hole 8,
             template_app (template_hole 7, template_var 1)),
           template_app
            (template_app (template_hole 6, t_empty),
             template_app (template_hole 2, template_var 0)))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 9, template_var 1)),
           template_var 0)))),
    ("Infinite_Set.MOST_finite_Ball_distrib",
     "finite ?A ==>
      (MOST y. ALL x:?A. ?P x y) = (ALL x:?A. MOST y. ?P x y)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, t_empty), template_hole 0),
         template_app
          (template_app (template_hole 1, template_var 1), t_empty)))),
    ("Infinite_Set.INFM_finite_Bex_distrib",
     "finite ?A ==> (INFM y. EX x:?A. ?P x y) = (EX x:?A. INFM y. ?P x y)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, t_empty), template_hole 0),
         template_app
          (template_app (template_hole 1, template_var 1), t_empty)))),
    ("Meson.ext_cong_neq",
     "?F ?g ~= ?F ?h ==> ?F ?g ~= ?F ?h & (EX x. ?g x ~= ?h x)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_var 2, template_var 1),
              template_app (template_var 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_var 2, template_var 1)),
                   template_app (template_var 2, template_var 0)))),
             template_app (template_hole 1, t_empty))
           ))),
    ("Map.map_of_inject_set",
     "[| distinct (map fst ?xs); distinct (map fst ?ys) |]
      ==> (map_of ?xs = map_of ?ys) = (set ?xs = set ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 0))
            )],
       template_bimplication
        (template_equation
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 2, template_var 0)),
         template_equation
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Order_Relation_More.Under_Above_Galois",
     "[| ?B <= Field ?r; ?C <= Field ?r |]
      ==> (?B <= Above ?r ?C) = (?C <= Under ?r ?B)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 3, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("Order_Relation_More.UnderS_AboveS_Galois",
     "[| ?B <= Field ?r; ?C <= Field ?r |]
      ==> (?B <= AboveS ?r ?C) = (?C <= UnderS ?r ?B)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 3, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("Order_Relation_More.Refl_above_Above",
     "[| Refl ?r; ?A ~= {} |] ==> Above ?r ?A = \<Inter> (above ?r ` ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))))),
    ("Order_Relation_More.Refl_aboveS_AboveS",
     "[| Refl ?r; ?A ~= {} |] ==> AboveS ?r ?A = \<Inter> (aboveS ?r ` ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))))),
    ("Order_Relation_More.Refl_under_Under",
     "[| Refl ?r; ?A ~= {} |] ==> Under ?r ?A = \<Inter> (under ?r ` ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))))),
    ("Order_Relation_More.Refl_underS_UnderS",
     "[| Refl ?r; ?A ~= {} |] ==> UnderS ?r ?A = \<Inter> (underS ?r ` ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))))),
    ("Order_Relation_More.Refl_above_aboveS",
     "[| Refl ?r; ?a : Field ?r |] ==> above ?r ?a = aboveS ?r ?a Un {?a}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 7, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Order_Relation_More.above_Above_trans",
     "[| trans ?r; ?a : above ?r ?b; ?b : Above ?r ?C |]
      ==> ?a : Above ?r ?C",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Order_Relation_More.under_Under_trans",
     "[| trans ?r; ?a : under ?r ?b; ?b : Under ?r ?C |]
      ==> ?a : Under ?r ?C",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Order_Relation_More.under_trans",
     "[| trans ?r; ?a : under ?r ?b; ?b : under ?r ?c |]
      ==> ?a : under ?r ?c",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Order_Relation_More.above_trans",
     "[| trans ?r; ?b : above ?r ?a; ?c : above ?r ?b |]
      ==> ?c : above ?r ?a",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1))
           ))),
    ("Meson.imp_forward2",
     "[| ?P' --> ?Q'; ?P ==> ?P'; [| ?P'; ?Q' |] ==> ?Q |] ==> ?P --> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2)
            ),
        template_implication
         ([template_predicate (template_var 1)],
          template_predicate (template_var 3)),
        template_implication
         ([template_predicate (template_var 3)],
          template_implication
           ([template_predicate (template_var 2)],
            template_predicate (template_var 0)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Map.restrict_fun_upd",
     "?m(?x := ?y) |` ?D =
      (if ?x : ?D then (?m |` (?D - {?x}))(?x := ?y) else ?m |` ?D)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0)),
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 6, template_var 3),
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_hole 0)))),
               template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 6, template_var 3),
           template_var 0)))),
    ("Map.map_comp_None_iff",
     "((?m1.0 \<circ>\<^sub>m ?m2.0) ?k = None) =
      (?m2.0 ?k = None | (EX k'. ?m2.0 ?k = Some k' & ?m1.0 k' = None))",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1),
           template_var 0),
         template_hole 6),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_var 1, template_var 0)),
                 template_hole 3)),
             template_app (template_hole 2, t_empty))
           ))),
    ("Map.map_add_Some_iff",
     "((?m ++ ?n) ?k = Some ?x) =
      (?n ?k = Some ?x | ?n ?k = None & ?m ?k = Some ?x)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2),
           template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_var 2, template_var 1)),
                 template_app (template_hole 3, template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_var 2, template_var 1)),
                   template_hole 0)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_var 3, template_var 1)),
                 template_app (template_hole 3, template_var 0))))
           ))),
    ("MacLaurin.sin_expansion_lemma",
     "sin (?x + real (Suc ?m) * pi / 2) = cos (?x + real ?m * pi / 2)",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_app (template_hole 9, template_var 1),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_var 0))),
                 template_hole 4)),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))))),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 9, template_var 1),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_var 0)),
                 template_hole 4)),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))))))),
    ("Limits.LIM_offset_zero_iff",
     "NO_MATCH (0::?'c) ?a ==>
      ?f \<midarrow>?a\<rightarrow> ?L =
      (%h. ?f (?a + h)) \<midarrow>0::?'a\<rightarrow> ?L",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 1),
             template_app (template_hole 4, template_var 0)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_hole 2)),
         template_app
          (template_app
            (template_app (template_hole 5, t_empty),
             template_app (template_hole 4, template_var 0)),
           template_app
            (template_app (template_hole 3, template_hole 0),
             template_hole 2))))),
    ("Map.map_upds_twist",
     "?a ~: set ?as ==>
      ?m(?a |-> ?b, ?as [|->] ?bs) = ?m(?as [|->] ?bs, ?a |-> ?b)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_app (template_hole 4, template_var 3))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 4),
                 template_app (template_hole 0, template_var 1))),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 3),
                 template_var 0)),
             template_var 4),
           template_app (template_hole 0, template_var 1))))),
    ("Limits.LIMSEQ_inverse_zero",
     "(!!r. EX N. ALL n>=N. r < ?X n) ==>
      (%n. inverse (?X n)) \<longlonglongrightarrow> 0",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, t_empty),
               template_app (template_hole 2, template_hole 1)),
             template_hole 0)
           ))),
    ("Fun_More.bij_betw_diff_singl",
     "[| bij_betw ?f ?A ?A'; ?a : ?A |]
      ==> bij_betw ?f (?A - {?a}) (?A' - {?f ?a})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, template_var 3),
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 3))),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_var 3, template_var 0)),
                 template_hole 0)))
           ))),
    ("Topological_Spaces.LIMSEQ_le_const",
     "[| ?X \<longlonglongrightarrow> ?x; EX N. ALL n>=N. ?a <= ?X n |]
      ==> ?a <= ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_app (template_hole 6, template_var 1)),
              template_hole 5)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation (less_equals, template_var 0, template_var 1))),
    ("Topological_Spaces.LIMSEQ_le_const2",
     "[| ?X \<longlonglongrightarrow> ?x; EX N. ALL n>=N. ?X n <= ?a |]
      ==> ?x <= ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_app (template_hole 6, template_var 1)),
              template_hole 5)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Wellfounded_More.adm_wf_unique_fixpoint",
     "[| wf ?r; adm_wf ?r ?H; ?f = ?H ?f; ?g = ?H ?g |] ==> ?f = ?g",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_var 1, template_app (template_var 2, template_var 1)),
        template_equation
         (template_var 0, template_app (template_var 2, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("MacLaurin.cos_expansion_lemma",
     "cos (?x + real (Suc ?m) * pi / 2) = - sin (?x + real ?m * pi / 2)",
     template_equation
      (template_app
        (template_hole 11,
         template_app
          (template_app (template_hole 10, template_var 1),
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_var 0))),
                 template_hole 5)),
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2))))),
       template_app
        (template_hole 1,
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 10, template_var 1),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_var 0)),
                   template_hole 5)),
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)))))))),
    ("Map.map_add_SomeD",
     "(?m ++ ?n) ?k = Some ?x ==>
      ?n ?k = Some ?x | ?n ?k = None & ?m ?k = Some ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_var 2, template_var 1)),
                 template_app (template_hole 3, template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_var 2, template_var 1)),
                   template_hole 0)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_var 3, template_var 1)),
                 template_app (template_hole 3, template_var 0))))
           ))),
    ("Fun_More.bij_betw_inv_into_LEFT_RIGHT",
     "[| bij_betw ?f ?A ?A'; ?B <= ?A; ?f ` ?B = ?B' |]
      ==> inv_into ?A ?f ` ?B' = ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 3),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 4)),
           template_var 0),
         template_var 1))),
    ("Fun_More.bij_betw_inv_into_RIGHT_LEFT",
     "[| bij_betw ?f ?A ?A'; ?B' <= ?A'; inv_into ?A ?f ` ?B' = ?B |]
      ==> ?f ` ?B = ?B'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 4)),
            template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 4), template_var 0),
         template_var 1))),
    ("Map.eq_key_imp_eq_value",
     "[| distinct (map fst ?xs); (?k, ?v1.0) : set ?xs;
         (?k, ?v2.0) : set ?xs |]
      ==> ?v1.0 = ?v2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app (template_hole 1, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 0)),
              template_app (template_hole 1, template_var 3))
            )],
       template_equation (template_var 1, template_var 0))),
    ("Map.dom_override_on",
     "dom (override_on ?f ?g ?A) =
      dom ?f - {a. a : ?A - dom ?g} Un {a. a : ?A Int dom ?g}",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 6, template_var 2)),
             template_app (template_hole 2, t_empty))),
         template_app (template_hole 2, t_empty)))),
    ("Map.dom_if",
     "dom (%x. if ?P x then ?f x else ?g x) =
      dom ?f Int {x. ?P x} Un dom ?g Int {x. ~ ?P x}",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 5, template_var 1)),
             template_app (template_hole 1, t_empty))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 5, template_var 0)),
           template_app (template_hole 1, t_empty))))),
    ("Map.map_of_mapk_SomeI",
     "[| inj ?f; map_of ?t ?k = Some ?x |]
      ==> map_of (map (%(k, y). (?f k, y)) ?t) (?f ?k) = Some ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_hole 7)
            ),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2, template_app (template_hole 1, t_empty)),
               template_var 2)),
           template_app (template_var 3, template_var 1)),
         template_app (template_hole 4, template_var 0)))),
    ("Real_Vector_Spaces.metric_LIMSEQ_D",
     "[| ?X \<longlonglongrightarrow> ?L; 0 < ?r |]
      ==> EX no. ALL n>=no. dist (?X n) ?L < ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 2),
                template_app (template_hole 8, template_var 1)),
              template_hole 7)
            ),
        template_inequation (less_than, template_hole 5, template_var 0)],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Meson.disj_forward2",
     "[| ?P' | ?Q'; ?P' ==> ?P; [| ?Q'; ?P ==> False |] ==> ?Q |]
      ==> ?P | ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            ),
        template_implication
         ([template_predicate (template_var 3)],
          template_predicate (template_var 1)),
        template_implication
         ([template_predicate (template_var 2)],
          template_implication
           ([template_implication
              ([template_predicate (template_var 1)],
               template_predicate (template_hole 0))],
            template_predicate (template_var 0)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("Limits.LIMSEQ_iff",
     "?X \<longlonglongrightarrow> ?L =
      (ALL r>0. EX no. ALL n>=no. norm (?X n - ?L) < r)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 11, template_var 1),
           template_app (template_hole 10, template_var 0)),
         template_hole 9),
       template_app (template_hole 8, t_empty))),
    ("Map.map_upds_append1",
     "length ?xs < length ?ys ==>
      ?m(?xs @ [?x] [|->] ?ys) = ?m(?xs [|->] ?ys, ?x |->
      ?ys ! length ?xs)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 9, template_var 3),
          template_app (template_hole 8, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, template_var 1),
             template_app
              (template_app (template_hole 5, template_var 3),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_hole 3))),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 6, template_var 1),
                   template_var 3),
                 template_var 2)),
             template_var 0),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_app (template_hole 9, template_var 3))))))),
    ("Deriv.DERIV_atLeastAtMost_imp_continuous_on",
     "(!!x. [| ?a <= x; x <= ?b |]
            ==> EX y. (?f has_field_derivative y) (at x)) ==>
      continuous_on {?a..?b} ?f",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("Limits.LIMSEQ_D",
     "[| ?X \<longlonglongrightarrow> ?L; 0 < ?r |]
      ==> EX no. ALL n>=no. norm (?X n - ?L) < ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 2),
                template_app (template_hole 9, template_var 1)),
              template_hole 8)
            ),
        template_inequation (less_than, template_hole 6, template_var 0)],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Limits.LIM_less_bound",
     "[| ?b < ?x; ALL x':{?b<..<?x}. 0 <= ?f x'; isCont ?f ?x |]
      ==> 0 <= ?f ?x",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_hole 0)),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_hole 3,
         template_app (template_var 0, template_var 1)))),
    ("BigO.bigo_LIMSEQ2",
     "[| ?f : ?g +o O(?h); ?h \<longlonglongrightarrow> 0;
         ?f \<longlonglongrightarrow> ?a |]
      ==> ?g \<longlonglongrightarrow> ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_app (template_hole 4, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_app (template_hole 2, template_hole 1)),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app (template_hole 2, template_var 0)),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_app (template_hole 2, template_var 0)),
             template_hole 0)
           ))),
    ("Order_Relation_More.above_AboveS_trans",
     "[| trans ?r; antisym ?r; ?a : above ?r ?b; ?b : AboveS ?r ?C |]
      ==> ?a : AboveS ?r ?C",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Order_Relation_More.aboveS_Above_trans",
     "[| trans ?r; antisym ?r; ?a : aboveS ?r ?b; ?b : Above ?r ?C |]
      ==> ?a : AboveS ?r ?C",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Order_Relation_More.aboveS_AboveS_trans",
     "[| trans ?r; antisym ?r; ?a : aboveS ?r ?b; ?b : AboveS ?r ?C |]
      ==> ?a : AboveS ?r ?C",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Order_Relation_More.under_UnderS_trans",
     "[| trans ?r; antisym ?r; ?a : under ?r ?b; ?b : UnderS ?r ?C |]
      ==> ?a : UnderS ?r ?C",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Order_Relation_More.under_underS_trans",
     "[| trans ?r; antisym ?r; ?a : under ?r ?b; ?b : underS ?r ?c |]
      ==> ?a : underS ?r ?c",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Order_Relation_More.underS_Under_trans",
     "[| trans ?r; antisym ?r; ?a : underS ?r ?b; ?b : Under ?r ?C |]
      ==> ?a : UnderS ?r ?C",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Order_Relation_More.underS_UnderS_trans",
     "[| trans ?r; antisym ?r; ?a : underS ?r ?b; ?b : UnderS ?r ?C |]
      ==> ?a : UnderS ?r ?C",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Order_Relation_More.underS_under_trans",
     "[| trans ?r; antisym ?r; ?a : underS ?r ?b; ?b : under ?r ?c |]
      ==> ?a : underS ?r ?c",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0))
           ))),
    ("Order_Relation_More.underS_underS_trans",
     "[| trans ?r; antisym ?r; ?a : underS ?r ?b; ?b : underS ?r ?c |]
      ==> ?a : underS ?r ?c",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate (template_app (template_hole 2, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Order_Relation_More.above_aboveS_trans",
     "[| trans ?r; antisym ?r; ?b : above ?r ?a; ?c : aboveS ?r ?b |]
      ==> ?c : aboveS ?r ?a",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1))
           ))),
    ("Order_Relation_More.aboveS_above_trans",
     "[| trans ?r; antisym ?r; ?b : aboveS ?r ?a; ?c : above ?r ?b |]
      ==> ?c : aboveS ?r ?a",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1))
           ))),
    ("Order_Relation_More.aboveS_aboveS_trans",
     "[| trans ?r; antisym ?r; ?b : aboveS ?r ?a; ?c : aboveS ?r ?b |]
      ==> ?c : aboveS ?r ?a",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate (template_app (template_hole 2, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1))
           ))),
    ("Map.map_upd_Some_unfold",
     "((?m(?a |-> ?b)) ?x = Some ?y) =
      (?x = ?a & ?b = ?y | ?x ~= ?a & ?m ?x = Some ?y)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_var 4),
               template_var 3),
             template_app (template_hole 5, template_var 2)),
           template_var 1),
         template_app (template_hole 5, template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 3)),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 3))),
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_var 4, template_var 1)),
                 template_app (template_hole 5, template_var 0))))
           ))),
    ("Real_Vector_Spaces.metric_LIMSEQ_I",
     "(!!r. 0 < r ==> EX no. ALL n>=no. dist (?X n) ?L < r) ==>
      ?X \<longlonglongrightarrow> ?L",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("List.sorted_find_Min",
     "[| sorted ?xs; EX x:set ?xs. ?P x |]
      ==> find ?P ?xs = Some (Min {x: set ?xs. ?P x})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_hole 9),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 0), template_var 1),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3, template_app (template_hole 2, t_empty)))))),
    ("Map.map_upd_upds_conv_if",
     "?f(?x |-> ?y, ?xs [|->] ?ys) =
      (if ?x : set (take (length ?ys) ?xs) then ?f(?xs [|->] ?ys)
       else ?f(?xs [|->] ?ys, ?x |-> ?y))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app (template_hole 6, template_var 4),
                 template_var 3),
               template_app (template_hole 5, template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 0)),
                   template_var 1)))),
           template_app
            (template_app
              (template_app (template_hole 7, template_var 4),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app (template_hole 7, template_var 4),
                   template_var 1),
                 template_var 0)),
             template_var 3),
           template_app (template_hole 5, template_var 2))))),
    ("Topological_Spaces.LIM_equal",
     "ALL x. x ~= ?a --> ?f x = ?g x ==>
      ?f \<midarrow>?a\<rightarrow> ?l = ?g \<midarrow>?a\<rightarrow> ?l",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_hole 0)),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_hole 0))))),
    ("Limits.LIMSEQ_I",
     "(!!r. 0 < r ==> EX no. ALL n>=no. norm (?X n - ?L) < r) ==>
      ?X \<longlonglongrightarrow> ?L",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("MacLaurin.Maclaurin_zero",
     "[| ?x = 0; ?n ~= 0 |]
      ==> (SUM m<?n. ?diff m (0::?'a) / fact m * ?x ^ m) =
          ?diff 0 (0::?'a)",
     template_implication
      ([template_equation (template_var 2, template_hole 10),
        template_negation
         (template_equation (template_var 1, template_hole 7))],
       template_equation
        (template_app
          (template_app (template_hole 6, t_empty),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_var 0, template_hole 7),
           template_hole 3)))),
    ("Map.restrict_map_upds",
     "[| length ?xs = length ?ys; set ?xs <= ?D |]
      ==> ?m(?xs [|->] ?ys) |` ?D = (?m |` (?D - set ?xs))(?xs [|->] ?ys)",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 3),
          template_app (template_hole 6, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 3),
          template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 3),
               template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_app (template_hole 4, template_var 3)))),
             template_var 3),
           template_var 2)))),
    ("GCD.Gcd_eq_Max",
     "[| finite ?M; ?M ~= {}; 0 ~: ?M |]
      ==> Gcd ?M = Max (INT m:?M. {d. d dvd m})",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 9)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_var 0)
                )
            )],
       template_equation
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty),
               template_var 0)))))),
    ("Order_Relation_More.under_incl_iff",
     "[| trans ?r; Refl ?r; ?a : Field ?r |]
      ==> (under ?r ?a <= under ?r ?b) = ((?a, ?b) : ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 2)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 6, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2)))),
    ("Topological_Spaces.tendsto_within_open_NO_MATCH",
     "[| ?a : ?S; NO_MATCH UNIV ?S; open ?S |]
      ==> (?f \<longlongrightarrow> ?l) (at ?a within ?S) =
          ?f \<midarrow>?a\<rightarrow> ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 2)
            ),
        template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_hole 0))))),
    ("Map.map_of_zip_nth",
     "[| length ?xs = length ?ys; distinct ?xs; ?i < length ?ys |]
      ==> map_of (zip ?xs ?ys) (?xs ! ?i) = Some (?ys ! ?i)",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 2),
          template_app (template_hole 8, template_var 1)),
        template_predicate (template_app (template_hole 7, template_var 2)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Real_Vector_Spaces.LIMSEQ_iff_nz",
     "?X \<longlonglongrightarrow> ?L =
      (ALL r>0. EX no>0. ALL n>=no. dist (?X n) ?L < r)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 13, template_var 1),
           template_app (template_hole 12, template_var 0)),
         template_hole 11),
       template_app (template_hole 10, t_empty))),
    ("MacLaurin.Maclaurin_exp_le",
     "EX t. \<bar>t\<bar> <= \<bar>?x\<bar> &
            exp ?x =
            (SUM m<?n. ?x ^ m / fact m) + exp t / fact ?n * ?x ^ ?n",
     template_predicate (template_app (template_hole 12, t_empty))),
    ("Map.map_of_eqI",
     "[| set (map fst ?xs) = set (map fst ?ys);
         ALL k:set (map fst ?xs). map_of ?xs k = map_of ?ys k |]
      ==> map_of ?xs = map_of ?ys",
     template_implication
      ([template_equation
         (template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 1)),
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 0))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_var 1))),
              t_empty)
            )],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)))),
    ("Topological_Spaces.LIMSEQ_SEQ_conv",
     "(ALL S.
          (ALL n. S n ~= ?a) & S \<longlonglongrightarrow> ?a -->
          (%n. ?X (S n)) \<longlonglongrightarrow> ?L) =
      ?X \<midarrow>?a\<rightarrow> ?L",
     template_equation
      (template_app (template_hole 13, t_empty),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_hole 0)))),
    ("MacLaurin.Maclaurin_lemma",
     "0 < ?h ==>
      EX B. ?f ?h =
            (SUM m<?n. ?j m / fact m * ?h ^ m) + B * (?h ^ ?n / fact ?n)",
     template_implication
      ([template_inequation (less_than, template_hole 9, template_var 3)],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("Topological_Spaces.LIMSEQ_le",
     "[| ?X \<longlonglongrightarrow> ?x; ?Y \<longlonglongrightarrow> ?y;
         EX N. ALL n>=N. ?X n <= ?Y n |]
      ==> ?x <= ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_app (template_hole 6, template_var 2)),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 1),
                template_app (template_hole 6, template_var 0)),
              template_hole 5)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Map.map_of_zip_inject",
     "[| length ?ys = length ?xs; length ?zs = length ?xs; distinct ?xs;
         map_of (zip ?xs ?ys) = map_of (zip ?xs ?zs) |]
      ==> ?ys = ?zs",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 2),
          template_app (template_hole 5, template_var 1)),
        template_equation
         (template_app (template_hole 6, template_var 0),
          template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_equation
         (template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 2)),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)))],
       template_equation (template_var 2, template_var 0))),
    ("Deriv.DERIV_LIM_iff",
     "(%h. (?f (?a + h) - ?f ?a) / h) \<midarrow>0::?'a\<rightarrow> ?D =
      (%x. (?f x - ?f ?a) / (x - ?a)) \<midarrow>?a\<rightarrow> ?D",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, t_empty),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)),
       template_app
        (template_app
          (template_app (template_hole 7, t_empty),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_hole 0)))),
    ("Topological_Spaces.LIMSEQ_SEQ_conv1",
     "?f \<midarrow>?a\<rightarrow> ?l ==>
      ALL S.
         (ALL n. S n ~= ?a) & S \<longlonglongrightarrow> ?a -->
         (%n. ?f (S n)) \<longlonglongrightarrow> ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 2),
                template_app (template_hole 12, template_var 1)),
              template_app
               (template_app (template_hole 11, template_var 0),
                template_hole 10))
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Topological_Spaces.LIMSEQ_SEQ_conv2",
     "ALL S.
         (ALL n. S n ~= ?a) & S \<longlonglongrightarrow> ?a -->
         (%n. ?f (S n)) \<longlonglongrightarrow> ?l ==>
      ?f \<midarrow>?a\<rightarrow> ?l",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 3, template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_hole 0))
           ))),
    ("Real_Vector_Spaces.metric_LIM_imp_LIM",
     "[| ?f \<midarrow>?a\<rightarrow> ?l;
         !!x. x ~= ?a ==> dist (?g x) ?m <= dist (?f x) ?l |]
      ==> ?g \<midarrow>?a\<rightarrow> ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 4),
                template_app (template_hole 10, template_var 3)),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_hole 8))
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0)),
             template_app
              (template_app (template_hole 9, template_var 2),
               template_hole 8))
           ))),
    ("Fun_More.notIn_Un_bij_betw2",
     "[| ?b ~: ?A; ?b' ~: ?A'; bij_betw ?f ?A ?A' |]
      ==> bij_betw ?f (?A Un {?b}) (?A' Un {?b'}) = (?f ?b = ?b')",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 3)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_var 1)
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 0),
                template_var 3),
              template_var 1)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 8, template_var 0),
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_app
                     (template_app (template_hole 5, template_var 4),
                      template_hole 4))),
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_hole 1)))
              )],
         template_equation
          (template_app (template_var 0, template_var 4),
           template_var 2)))),
    ("MacLaurin.Maclaurin_sin_expansion",
     "EX t. sin ?x =
            (SUM m<?n. sin_coeff m * ?x ^ m) +
            sin (t + 1 / 2 * real ?n * pi) / fact ?n * ?x ^ ?n",
     template_predicate (template_app (template_hole 16, t_empty))),
    ("Set_Interval.bounded_Max_nat",
     "[| ?P ?x; !!x. ?P x ==> x <= ?M;
         !!m. [| ?P m; !!x. ?P x ==> x <= m |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_var 3, template_var 2)),
        template_predicate (template_app (template_hole 1, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Limits.LIM_imp_LIM",
     "[| ?f \<midarrow>?a\<rightarrow> ?l;
         !!x. x ~= ?a ==> norm (?g x - ?m) <= norm (?f x - ?l) |]
      ==> ?g \<midarrow>?a\<rightarrow> ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 4),
                template_app (template_hole 12, template_var 3)),
              template_app
               (template_app (template_hole 11, template_var 2),
                template_hole 10))
            ),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0)),
             template_app
              (template_app (template_hole 11, template_var 2),
               template_hole 10))
           ))),
    ("Limits.LIM_at_top_divide",
     "[| (?f \<longlongrightarrow> ?a) ?F; 0 < ?a;
         (?g \<longlongrightarrow> 0) ?F;
         \<forall>\<^sub>F x in ?F. 0 < ?g x |]
      ==> LIM x ?F. ?f x / ?g x :> at_top",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_app (template_hole 5, template_var 2)),
              template_var 1)
            ),
        template_inequation (less_than, template_hole 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 0),
                template_app (template_hole 5, template_hole 3)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, t_empty), template_hole 0),
             template_var 1)
           ))),
    ("Limits.LIM_fun_gt_zero",
     "[| ?f \<midarrow>?c\<rightarrow> ?l; 0 < ?l |]
      ==> EX r>0. ALL x. x ~= ?c & \<bar>?c - x\<bar> < r --> 0 < ?f x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 2),
                template_app (template_hole 12, template_var 1)),
              template_app
               (template_app (template_hole 11, template_var 0),
                template_hole 10))
            ),
        template_inequation (less_than, template_hole 8, template_var 1)],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Limits.LIM_fun_less_zero",
     "[| ?f \<midarrow>?c\<rightarrow> ?l; ?l < 0 |]
      ==> EX r>0. ALL x. x ~= ?c & \<bar>?c - x\<bar> < r --> ?f x < 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 2),
                template_app (template_hole 12, template_var 1)),
              template_app
               (template_app (template_hole 11, template_var 0),
                template_hole 10))
            ),
        template_inequation (less_than, template_var 1, template_hole 8)],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("MacLaurin.mod_exhaust_less_4",
     "?m mod 4 = 0 | ?m mod 4 = 1 | ?m mod 4 = 2 | ?m mod 4 = 3",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 0),
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 4,
                       template_app (template_hole 4, template_hole 3))))),
               template_hole 2)),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 0),
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 4,
                         template_app
                          (template_hole 4, template_hole 3))))),
                 template_hole 1)),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_var 0),
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 4,
                           template_app
                            (template_hole 4, template_hole 3))))),
                   template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_hole 3)))),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 0),
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 4,
                         template_app
                          (template_hole 4, template_hole 3))))),
                 template_app
                  (template_hole 5,
                   template_app (template_hole 0, template_hole 3))))))
         )),
    ("Modules.module_hom_iff",
     "module_hom ?s1.0 ?s2.0 ?f =
      (module ?s1.0 &
       module ?s2.0 &
       (ALL x y. ?f (x + y) = ?f x + ?f y) &
       (ALL c x. ?f (?s1.0 c x) = ?s2.0 c (?f x)))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 8, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 2)),
         template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 5, template_var 1)),
           template_app
            (template_app
              (template_hole 7, template_app (template_hole 4, t_empty)),
             template_app (template_hole 0, t_empty)))))),
    ("Real_Vector_Spaces.metric_LIM_D",
     "[| ?f \<midarrow>?a\<rightarrow> ?L; 0 < ?r |]
      ==> EX s>0. ALL x. x ~= ?a & dist x ?a < s --> dist (?f x) ?L < ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 3),
                template_app (template_hole 12, template_var 2)),
              template_app
               (template_app (template_hole 11, template_var 1),
                template_hole 10))
            ),
        template_inequation (less_than, template_hole 8, template_var 0)],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Limits.LIM_fun_not_zero",
     "[| ?f \<midarrow>?c\<rightarrow> ?l; ?l ~= 0 |]
      ==> EX r>0. ALL x. x ~= ?c & \<bar>?c - x\<bar> < r --> ?f x ~= 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 2),
                template_app (template_hole 12, template_var 1)),
              template_app
               (template_app (template_hole 11, template_var 0),
                template_hole 10))
            ),
        template_negation
         (template_equation (template_var 1, template_hole 7))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Topological_Spaces.LIM_cong",
     "[| ?a = ?b; !!x. x ~= ?b ==> ?f x = ?g x; ?l = ?m |]
      ==> ?f \<midarrow>?a\<rightarrow> ?l =
          ?g \<midarrow>?b\<rightarrow> ?m",
     template_implication
      ([template_equation (template_var 5, template_var 4),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_equation (template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_app (template_hole 2, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 5),
             template_hole 0)),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 4),
             template_hole 0))))),
    ("Topological_Spaces.LIM_compose_eventually",
     "[| ?f \<midarrow>?a\<rightarrow> ?b; ?g \<midarrow>?b\<rightarrow> ?c;
         \<forall>\<^sub>F x in at ?a. ?f x ~= ?b |]
      ==> (%x. ?g (?f x)) \<midarrow>?a\<rightarrow> ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 4),
                template_app (template_hole 10, template_var 3)),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_hole 8))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 1),
                template_app (template_hole 6, template_var 0)),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_hole 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, t_empty),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_hole 8))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, t_empty),
               template_app (template_hole 6, template_var 0)),
             template_app
              (template_app (template_hole 9, template_var 2),
               template_hole 8))
           ))),
    ("Real_Vector_Spaces.increasing_LIMSEQ",
     "[| !!n. ?f n <= ?f (Suc n); !!n. ?f n <= ?l;
         !!e. 0 < e ==> EX n. ?l <= ?f n + e |]
      ==> ?f \<longlonglongrightarrow> ?l",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("Limits.LIM_eq",
     "?f \<midarrow>?a\<rightarrow> ?L =
      (ALL r>0.
          EX s>0.
             ALL x. x ~= ?a & norm (x - ?a) < s --> norm (?f x - ?L) < r)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 16, template_var 2),
           template_app (template_hole 15, template_var 1)),
         template_app
          (template_app (template_hole 14, template_var 0),
           template_hole 13)),
       template_app (template_hole 12, t_empty))),
    ("Real_Vector_Spaces.metric_LIM_I",
     "(!!r. 0 < r ==>
            EX s>0.
               ALL x. x ~= ?a & dist x ?a < s --> dist (?f x) ?L < r) ==>
      ?f \<midarrow>?a\<rightarrow> ?L",
     template_implication
      ([template_predicate (template_app (template_hole 15, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_hole 0))
           ))),
    ("Limits.LIM_D",
     "[| ?f \<midarrow>?a\<rightarrow> ?L; 0 < ?r |]
      ==> EX s>0.
             ALL x. x ~= ?a & norm (x - ?a) < s --> norm (?f x - ?L) < ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 3),
                template_app (template_hole 14, template_var 2)),
              template_app
               (template_app (template_hole 13, template_var 1),
                template_hole 12))
            ),
        template_inequation (less_than, template_hole 10, template_var 0)],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("MacLaurin.Maclaurin_cos_expansion",
     "EX t. \<bar>t\<bar> <= \<bar>?x\<bar> &
            cos ?x =
            (SUM m<?n. cos_coeff m * ?x ^ m) +
            cos (t + 1 / 2 * real ?n * pi) / fact ?n * ?x ^ ?n",
     template_predicate (template_app (template_hole 19, t_empty))),
    ("MacLaurin.Maclaurin_sin_expansion2",
     "EX t. \<bar>t\<bar> <= \<bar>?x\<bar> &
            sin ?x =
            (SUM m<?n. sin_coeff m * ?x ^ m) +
            sin (t + 1 / 2 * real ?n * pi) / fact ?n * ?x ^ ?n",
     template_predicate (template_app (template_hole 19, t_empty))),
    ("Map.finite_Map_induct",
     "[| finite (dom ?m); ?P Map.empty;
         !!k v m.
            [| finite (dom m); k ~: dom m; ?P m |] ==> ?P (m(k |-> v)) |]
      ==> ?P ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 1))
            ),
        template_predicate (template_app (template_var 0, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("GCD.Lcm_eq_Max_nat",
     "[| finite ?M; ?M ~= {}; 0 ~: ?M;
         !!m n. [| m : ?M; n : ?M |] ==> lcm m n : ?M |]
      ==> Lcm ?M = Max ?M",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 7)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 0)
                )
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Limits.LIM_I",
     "(!!r. 0 < r ==>
            EX s>0.
               ALL x.
                  x ~= ?a & norm (x - ?a) < s --> norm (?f x - ?L) < r) ==>
      ?f \<midarrow>?a\<rightarrow> ?L",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_hole 0))
           ))),
    ("Real_Vector_Spaces.metric_LIM_equal2",
     "[| ?g \<midarrow>?a\<rightarrow> ?l; 0 < ?R;
         !!x. [| x ~= ?a; dist x ?a < ?R |] ==> ?f x = ?g x |]
      ==> ?f \<midarrow>?a\<rightarrow> ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 4),
                template_app (template_hole 9, template_var 3)),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_hole 7))
            ),
        template_inequation (less_than, template_hole 5, template_var 1),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 10, template_var 0),
               template_app (template_hole 9, template_var 3)),
             template_app
              (template_app (template_hole 8, template_var 2),
               template_hole 7))
           ))),
    ("Limits.LIM_equal2",
     "[| 0 < ?R; !!x. [| x ~= ?a; norm (x - ?a) < ?R |] ==> ?f x = ?g x;
         ?g \<midarrow>?a\<rightarrow> ?l |]
      ==> ?f \<midarrow>?a\<rightarrow> ?l",
     template_implication
      ([template_inequation (less_than, template_hole 10, template_var 4),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_app (template_hole 2, template_var 0)),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_hole 0))
           ))),
    ("Limits.real_LIM_sandwich_zero",
     "[| ?f \<midarrow>?a\<rightarrow> 0; !!x. x ~= ?a ==> 0 <= ?g x;
         !!x. x ~= ?a ==> ?g x <= ?f x |]
      ==> ?g \<midarrow>?a\<rightarrow> 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 2),
                template_app (template_hole 7, template_hole 6)),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_hole 4))
            ),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 8, template_var 0),
               template_app (template_hole 7, template_hole 6)),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_hole 4))
           ))),
    ("MacLaurin.Maclaurin_exp_lt",
     "[| ?x ~= 0; 0 < ?n |]
      ==> EX t. 0 < \<bar>t\<bar> &
                \<bar>t\<bar> < \<bar>?x\<bar> &
                exp ?x =
                (SUM m<?n. ?x ^ m / fact m) + exp t / fact ?n * ?x ^ ?n",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 14)),
        template_inequation (less_than, template_hole 12, template_var 0)],
       template_predicate (template_app (template_hole 11, t_empty)))),
    ("Deriv.MVT2",
     "[| ?a < ?b;
         !!x. [| ?a <= x; x <= ?b |]
              ==> (?f has_real_derivative ?f' x) (at x) |]
      ==> EX z>?a. z < ?b & ?f ?b - ?f ?a = (?b - ?a) * ?f' z",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("MacLaurin.Maclaurin_sin_expansion4",
     "0 < ?x ==>
      EX t>0.
         t <= ?x &
         sin ?x =
         (SUM m<?n. sin_coeff m * ?x ^ m) +
         sin (t + 1 / 2 * real ?n * pi) / fact ?n * ?x ^ ?n",
     template_implication
      ([template_inequation (less_than, template_hole 19, template_var 1)],
       template_predicate (template_app (template_hole 18, t_empty)))),
    ("Map.map_of_zip_upd",
     "[| length ?ys = length ?xs; length ?zs = length ?xs; ?x ~: set ?xs;
         map_of (zip ?xs ?ys)(?x |-> ?y) = map_of (zip ?xs ?zs)(?x |->
         ?z) |]
      ==> map_of (zip ?xs ?ys) = map_of (zip ?xs ?zs)",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 5),
          template_app (template_hole 8, template_var 4)),
        template_equation
         (template_app (template_hole 9, template_var 3),
          template_app (template_hole 8, template_var 4)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_app (template_hole 5, template_var 4))
                )
            ),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 5))),
              template_var 2),
            template_app (template_hole 0, template_var 1)),
          template_app
           (template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3))),
              template_var 2),
            template_app (template_hole 0, template_var 0)))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 4),
             template_var 5)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 4),
             template_var 3))))),
    ("MacLaurin.Maclaurin_sin_expansion3",
     "[| 0 < ?n; 0 < ?x |]
      ==> EX t>0.
             t < ?x &
             sin ?x =
             (SUM m<?n. sin_coeff m * ?x ^ m) +
             sin (t + 1 / 2 * real ?n * pi) / fact ?n * ?x ^ ?n",
     template_implication
      ([template_inequation (less_than, template_hole 20, template_var 1),
        template_inequation (less_than, template_hole 18, template_var 0)],
       template_predicate (template_app (template_hole 17, t_empty)))),
    ("MacLaurin.Maclaurin_minus_cos_expansion",
     "[| 0 < ?n; ?x < 0 |]
      ==> EX t>?x.
             t < 0 &
             cos ?x =
             (SUM m<?n. cos_coeff m * ?x ^ m) +
             cos (t + 1 / 2 * real ?n * pi) / fact ?n * ?x ^ ?n",
     template_implication
      ([template_inequation (less_than, template_hole 20, template_var 1),
        template_inequation (less_than, template_var 0, template_hole 18)],
       template_predicate (template_app (template_hole 17, t_empty)))),
    ("MacLaurin.Maclaurin_cos_expansion2",
     "[| 0 < ?x; 0 < ?n |]
      ==> EX t>0.
             t < ?x &
             cos ?x =
             (SUM m<?n. cos_coeff m * ?x ^ m) +
             cos (t + 1 / 2 * real ?n * pi) / fact ?n * ?x ^ ?n",
     template_implication
      ([template_inequation (less_than, template_hole 20, template_var 1),
        template_inequation (less_than, template_hole 18, template_var 0)],
       template_predicate (template_app (template_hole 17, t_empty)))),
    ("Real_Vector_Spaces.metric_isCont_LIM_compose2",
     "[| isCont ?f ?a; ?g \<midarrow>?f ?a\<rightarrow> ?l;
         EX d>0. ALL x. x ~= ?a & dist x ?a < d --> ?f x ~= ?f ?a |]
      ==> (%x. ?g (?f x)) \<midarrow>?a\<rightarrow> ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app (template_hole 16, template_var 3),
                  template_hole 15)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 1),
                template_app (template_hole 13, template_var 0)),
              template_app
               (template_app
                 (template_hole 12,
                  template_app (template_var 2, template_var 3)),
                template_hole 11))
            ),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, t_empty),
               template_app (template_hole 13, template_var 0)),
             template_app
              (template_app (template_hole 16, template_var 3),
               template_hole 15))
           ))),
    ("Real_Vector_Spaces.metric_LIM_compose2",
     "[| ?f \<midarrow>?a\<rightarrow> ?b; ?g \<midarrow>?b\<rightarrow> ?c;
         EX d>0. ALL x. x ~= ?a & dist x ?a < d --> ?f x ~= ?b |]
      ==> (%x. ?g (?f x)) \<midarrow>?a\<rightarrow> ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 18, template_var 4),
                template_app (template_hole 17, template_var 3)),
              template_app
               (template_app (template_hole 16, template_var 2),
                template_hole 15))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 1),
                template_app (template_hole 13, template_var 0)),
              template_app
               (template_app (template_hole 12, template_var 3),
                template_hole 11))
            ),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, t_empty),
               template_app (template_hole 13, template_var 0)),
             template_app
              (template_app (template_hole 16, template_var 2),
               template_hole 15))
           ))),
    ("Limits.isCont_LIM_compose2",
     "[| isCont ?f ?a; ?g \<midarrow>?f ?a\<rightarrow> ?l;
         EX d>0. ALL x. x ~= ?a & norm (x - ?a) < d --> ?f x ~= ?f ?a |]
      ==> (%x. ?g (?f x)) \<midarrow>?a\<rightarrow> ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_app (template_hole 17, template_var 3),
                  template_hole 16)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 1),
                template_app (template_hole 14, template_var 0)),
              template_app
               (template_app
                 (template_hole 13,
                  template_app (template_var 2, template_var 3)),
                template_hole 12))
            ),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, t_empty),
               template_app (template_hole 14, template_var 0)),
             template_app
              (template_app (template_hole 17, template_var 3),
               template_hole 16))
           ))),
    ("Limits.LIM_compose2",
     "[| ?f \<midarrow>?a\<rightarrow> ?b; ?g \<midarrow>?b\<rightarrow> ?c;
         EX d>0. ALL x. x ~= ?a & norm (x - ?a) < d --> ?f x ~= ?b |]
      ==> (%x. ?g (?f x)) \<midarrow>?a\<rightarrow> ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 19, template_var 4),
                template_app (template_hole 18, template_var 3)),
              template_app
               (template_app (template_hole 17, template_var 2),
                template_hole 16))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 1),
                template_app (template_hole 14, template_var 0)),
              template_app
               (template_app (template_hole 13, template_var 3),
                template_hole 12))
            ),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, t_empty),
               template_app (template_hole 14, template_var 0)),
             template_app
              (template_app (template_hole 17, template_var 2),
               template_hole 16))
           ))),
    ("MacLaurin.Maclaurin_all_le_objl",
     "?diff 0 = ?f &
      (ALL m x. (?diff m has_real_derivative ?diff (Suc m) x) (at x)) -->
      (EX t. \<bar>t\<bar> <= \<bar>?x\<bar> &
             ?f ?x =
             (SUM m<?n. ?diff m 0 / fact m * ?x ^ m) +
             ?diff ?n t / fact ?n * ?x ^ ?n)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 21,
             template_app
              (template_app
                (template_hole 20,
                 template_app
                  (template_app
                    (template_hole 19,
                     template_app (template_var 3, template_hole 18)),
                   template_var 2)),
               template_app (template_hole 17, t_empty))),
           template_app (template_hole 11, t_empty))
         )),
    ("MacLaurin.Maclaurin_all_le",
     "[| ?diff 0 = ?f;
         ALL m x. (?diff m has_real_derivative ?diff (Suc m) x) (at x) |]
      ==> EX t. \<bar>t\<bar> <= \<bar>?x\<bar> &
                ?f ?x =
                (SUM m<?n. ?diff m 0 / fact m * ?x ^ m) +
                ?diff ?n t / fact ?n * ?x ^ ?n",
     template_implication
      ([template_equation
         (template_app (template_var 3, template_hole 19), template_var 2),
        template_predicate (template_app (template_hole 18, t_empty))],
       template_predicate (template_app (template_hole 12, t_empty)))),
    ("Deriv.MVT",
     "[| ?a < ?b; continuous_on {?a..?b} ?f;
         !!x. [| ?a < x; x < ?b |] ==> ?f differentiable at x |]
      ==> EX l z.
             ?a < z &
             z < ?b &
             (?f has_real_derivative l) (at z) &
             ?f ?b - ?f ?a = (?b - ?a) * l",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("MacLaurin.Maclaurin_bi_le",
     "[| ?diff 0 = ?f;
         ALL m t.
            m < ?n & \<bar>t\<bar> <= \<bar>?x\<bar> -->
            (?diff m has_real_derivative ?diff (Suc m) t) (at t) |]
      ==> EX t. \<bar>t\<bar> <= \<bar>?x\<bar> &
                ?f ?x =
                (SUM m<?n. ?diff m 0 / fact m * ?x ^ m) +
                ?diff ?n t / fact ?n * ?x ^ ?n",
     template_implication
      ([template_equation
         (template_app (template_var 3, template_hole 21), template_var 2),
        template_predicate (template_app (template_hole 20, t_empty))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("MacLaurin.Maclaurin_all_lt",
     "[| ?diff 0 = ?f; 0 < ?n; ?x ~= 0;
         ALL m x. (?diff m has_real_derivative ?diff (Suc m) x) (at x) |]
      ==> EX t. 0 < \<bar>t\<bar> &
                \<bar>t\<bar> < \<bar>?x\<bar> &
                ?f ?x =
                (SUM m<?n. ?diff m 0 / fact m * ?x ^ m) +
                ?diff ?n t / fact ?n * ?x ^ ?n",
     template_implication
      ([template_equation
         (template_app (template_var 3, template_hole 21), template_var 2),
        template_inequation (less_than, template_hole 21, template_var 1),
        template_negation
         (template_equation (template_var 0, template_hole 17)),
        template_predicate (template_app (template_hole 16, t_empty))],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("MacLaurin.Maclaurin2",
     "[| 0 < ?h; ?diff 0 = ?f;
         ALL m t.
            m < ?n & 0 <= t & t <= ?h -->
            (?diff m has_real_derivative ?diff (Suc m) t) (at t) |]
      ==> EX t>0.
             t <= ?h &
             ?f ?h =
             (SUM m<?n. ?diff m 0 / fact m * ?h ^ m) +
             ?diff ?n t / fact ?n * ?h ^ ?n",
     template_implication
      ([template_inequation (less_than, template_hole 21, template_var 3),
        template_equation
         (template_app (template_var 2, template_hole 19), template_var 1),
        template_predicate (template_app (template_hole 18, t_empty))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("MacLaurin.Maclaurin",
     "[| 0 < ?h; 0 < ?n; ?diff 0 = ?f;
         ALL m t.
            m < ?n & 0 <= t & t <= ?h -->
            (?diff m has_real_derivative ?diff (Suc m) t) (at t) |]
      ==> EX t>0.
             t < ?h &
             ?f ?h =
             (SUM m<?n. ?diff m 0 / fact m * ?h ^ m) +
             ?diff ?n t / fact ?n * ?h ^ ?n",
     template_implication
      ([template_inequation (less_than, template_hole 21, template_var 3),
        template_inequation (less_than, template_hole 19, template_var 2),
        template_equation
         (template_app (template_var 1, template_hole 19), template_var 0),
        template_predicate (template_app (template_hole 17, t_empty))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("MacLaurin.Maclaurin_minus",
     "[| ?h < 0; 0 < ?n; ?diff 0 = ?f;
         ALL m t.
            m < ?n & ?h <= t & t <= 0 -->
            (?diff m has_real_derivative ?diff (Suc m) t) (at t) |]
      ==> EX t>?h.
             t < 0 &
             ?f ?h =
             (SUM m<?n. ?diff m 0 / fact m * ?h ^ m) +
             ?diff ?n t / fact ?n * ?h ^ ?n",
     template_implication
      ([template_inequation (less_than, template_var 3, template_hole 21),
        template_inequation (less_than, template_hole 19, template_var 2),
        template_equation
         (template_app (template_var 1, template_hole 19), template_var 0),
        template_predicate (template_app (template_hole 17, t_empty))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("MacLaurin.Taylor_down",
     "[| 0 < ?n; ?diff 0 = ?f;
         ALL m t.
            m < ?n & ?a <= t & t <= ?b -->
            (?diff m has_real_derivative ?diff (Suc m) t) (at t);
         ?a < ?c; ?c <= ?b |]
      ==> EX t>?a.
             t < ?c &
             ?f ?a =
             (SUM m<?n. ?diff m ?c / fact m * (?a - ?c) ^ m) +
             ?diff ?n t / fact ?n * (?a - ?c) ^ ?n",
     template_implication
      ([template_inequation (less_than, template_hole 21, template_var 5),
        template_equation
         (template_app (template_var 4, template_hole 21), template_var 3),
        template_predicate (template_app (template_hole 19, t_empty)),
        template_inequation (less_than, template_var 2, template_var 0),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("MacLaurin.Taylor_up",
     "[| 0 < ?n; ?diff 0 = ?f;
         ALL m t.
            m < ?n & ?a <= t & t <= ?b -->
            (?diff m has_real_derivative ?diff (Suc m) t) (at t);
         ?a <= ?c; ?c < ?b |]
      ==> EX t>?c.
             t < ?b &
             ?f ?b =
             (SUM m<?n. ?diff m ?c / fact m * (?b - ?c) ^ m) +
             ?diff ?n t / fact ?n * (?b - ?c) ^ ?n",
     template_implication
      ([template_inequation (less_than, template_hole 21, template_var 5),
        template_equation
         (template_app (template_var 4, template_hole 21), template_var 3),
        template_predicate (template_app (template_hole 19, t_empty)),
        template_inequation (less_equals, template_var 2, template_var 0),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Deriv.GMVT'",
     "[| ?a < ?b; !!z. [| ?a <= z; z <= ?b |] ==> isCont ?f z;
         !!z. [| ?a <= z; z <= ?b |] ==> isCont ?g z;
         !!z. [| ?a < z; z < ?b |]
              ==> (?g has_real_derivative ?g' z) (at z);
         !!z. [| ?a < z; z < ?b |]
              ==> (?f has_real_derivative ?f' z) (at z) |]
      ==> EX c>?a.
             c < ?b & (?f ?b - ?f ?a) * ?g' c = (?g ?b - ?g ?a) * ?f' c",
     template_implication
      ([template_inequation (less_than, template_var 5, template_var 4),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Deriv.GMVT",
     "[| ?a < ?b; ALL x. ?a <= x & x <= ?b --> isCont ?f x;
         ALL x. ?a < x & x < ?b --> ?f differentiable at x;
         ALL x. ?a <= x & x <= ?b --> isCont ?g x;
         ALL x. ?a < x & x < ?b --> ?g differentiable at x |]
      ==> EX g'c f'c c.
             (?g has_real_derivative g'c) (at c) &
             (?f has_real_derivative f'c) (at c) &
             ?a < c &
             c < ?b & (?f ?b - ?f ?a) * g'c = (?g ?b - ?g ?a) * f'c",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("MacLaurin.Taylor",
     "[| 0 < ?n; ?diff 0 = ?f;
         ALL m t.
            m < ?n & ?a <= t & t <= ?b -->
            (?diff m has_real_derivative ?diff (Suc m) t) (at t);
         ?a <= ?c; ?c <= ?b; ?a <= ?x; ?x <= ?b; ?x ~= ?c |]
      ==> EX t. (if ?x < ?c then ?x < t & t < ?c else ?c < t & t < ?x) &
                ?f ?x =
                (SUM m<?n. ?diff m ?c / fact m * (?x - ?c) ^ m) +
                ?diff ?n t / fact ?n * (?x - ?c) ^ ?n",
     template_implication
      ([template_inequation (less_than, template_hole 23, template_var 6),
        template_equation
         (template_app (template_var 5, template_hole 23), template_var 4),
        template_predicate (template_app (template_hole 21, t_empty)),
        template_inequation (less_equals, template_var 3, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_inequation (less_equals, template_var 3, template_var 0),
        template_inequation (less_equals, template_var 0, template_var 2),
        template_negation
         (template_equation (template_var 0, template_var 1))],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("MacLaurin.Maclaurin_lemma2",
     "[| ALL m t.
            m < ?n & 0 <= t & t <= ?h -->
            (?diff m has_real_derivative ?diff (Suc m) t) (at t);
         ?n = Suc ?k |]
      ==> ALL m t.
             m < ?n & 0 <= t & t <= ?h -->
             ((%t. ?diff m t -
                   ((SUM p<?n - m. ?diff (m + p) 0 / fact p * t ^ p) +
                    ?B *
                    (t ^ (?n - m) / fact (?n - m)))) has_real_derivative
              ?diff (Suc m) t -
              ((SUM p<?n - Suc m. ?diff (Suc m + p) 0 / fact p * t ^ p) +
               ?B * (t ^ (?n - Suc m) / fact (?n - Suc m))))
              (at t)",
     template_implication
      ([template_predicate (template_app (template_hole 21, t_empty)),
        template_equation
         (template_var 4, template_app (template_hole 13, template_var 1))],
       template_predicate (template_app (template_hole 21, t_empty))))]
