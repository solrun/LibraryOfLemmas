Loading theory "HOL-Cardinals.Fun_More" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding")
Loading theory "HOL-Cardinals.Order_Relation_More" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding" via "HOL-Cardinals.Wellorder_Relation" via "HOL-Cardinals.Wellfounded_More")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.PreliminariesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Cardinals.Order_Union" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Cardinals.Fun_More"
### 0.106s elapsed time, 0.449s cpu time, 0.056s GC time
Loading theory "HOL-Library.Infinite_Set" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries" via "HOL-Library.Countable_Set_Type" via "HOL-Library.Countable_Set")
### theory "HOL-Cardinals.Order_Union"
### 0.130s elapsed time, 0.541s cpu time, 0.056s GC time
Loading theory "HOL-Cardinals.Wellorder_Extension" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries" via "HOL-Cardinals.Cardinals")
### theory "HOL-Library.Function_Algebras"
### 0.136s elapsed time, 0.565s cpu time, 0.056s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.PreliminariesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
### theory "HOL-Cardinals.Wellorder_Extension"
### 0.068s elapsed time, 0.273s cpu time, 0.000s GC time
Loading theory "HOL-Library.Old_Datatype" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries" via "HOL-Library.Countable_Set_Type" via "HOL-Library.Countable_Set" via "HOL-Library.Countable")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Cardinals.Order_Relation_More"
### 0.310s elapsed time, 1.239s cpu time, 0.159s GC time
Loading theory "HOL-Cardinals.Wellfounded_More" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding" via "HOL-Cardinals.Wellorder_Relation")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Cardinals.Wellfounded_More"
### 0.044s elapsed time, 0.176s cpu time, 0.000s GC time
Loading theory "HOL-Cardinals.Wellorder_Relation" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding")
consts
  enumerate :: "'a set => nat => 'a"
locale wo_rel
  fixes r :: "('a * 'a) set"
  assumes "wo_rel r"
### theory "HOL-Library.Nat_Bijection"
### 0.321s elapsed time, 1.261s cpu time, 0.165s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.PreliminariesMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Infinite_Set"
### 0.356s elapsed time, 1.401s cpu time, 0.165s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.PreliminariesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
### theory "HOL-Cardinals.Wellorder_Relation"
### 0.139s elapsed time, 0.545s cpu time, 0.062s GC time
Loading theory "HOL-Cardinals.Wellorder_Embedding" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions")
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
signature OLD_DATATYPE =
  sig
    val check_specs: spec list -> theory -> spec list * Proof.context
    type config = {quiet: bool, strict: bool}
    val default_config: config
    type descr =
       (int * (string * dtyp list * (string * dtyp list) list)) list
    val distinct_lemma: thm
    datatype dtyp
    = DtRec of int | DtTFree of string * sort | DtType of string * dtyp list
    type info =
       {case_cong: thm,
        case_cong_weak: thm,
        case_name: string,
        case_rewrites: thm list,
        descr: descr,
        distinct: thm list,
        exhaust: thm,
        index: int,
        induct: thm,
        inducts: thm list,
        inject: thm list,
        nchotomy: thm,
        rec_names: string list,
        rec_rewrites: thm list, split: thm, split_asm: thm}
    val read_specs: spec_cmd list -> theory -> spec list * Proof.context
    type spec =
       (binding * (string * sort) list * mixfix) *
       (binding * typ list * mixfix) list
    type spec_cmd =
       (binding * (string * string option) list * mixfix) *
       (binding * string list * mixfix) list
  end
structure Old_Datatype: OLD_DATATYPE
### theory "HOL-Library.Old_Datatype"
### 0.400s elapsed time, 1.563s cpu time, 0.230s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.PreliminariesMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Set_Algebras"
### 0.183s elapsed time, 0.721s cpu time, 0.066s GC time
Loading theory "HOL-Library.Countable" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries" via "HOL-Library.Countable_Set_Type" via "HOL-Library.Countable_Set")
### theory "HOL-Cardinals.Wellorder_Embedding"
### 0.156s elapsed time, 0.602s cpu time, 0.066s GC time
Loading theory "HOL-Cardinals.Wellorder_Constructions" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
locale wo_rel
  fixes r :: "('a * 'a) set"
  assumes "wo_rel r"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
### Additional type variable(s) in locale specification "countable": 'a
consts
  cycle :: "'a list => 'a stream"
class countable = type +
  assumes "ex_inj": "EX to_nat. inj to_nat"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Proofs for inductive predicate(s) "finite_item"
### theory "HOL-Cardinals.Wellorder_Constructions"
### 0.691s elapsed time, 2.608s cpu time, 0.648s GC time
Loading theory "HOL-Cardinals.Cardinal_Order_Relation" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Cardinal_Arithmetic")
Found termination order: "size <*mlex*> {}"
  Proving monotonicity ...
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.958s elapsed time, 3.650s cpu time, 0.794s GC time
Loading theory "HOL-Cardinals.Ordinal_Arithmetic" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries" via "HOL-Cardinals.Cardinals")
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
val old_countable_datatype_tac = fn: Proof.context -> int -> tactic
Found termination order: "size <*mlex*> {}"
### ML warning (line 93 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 139 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 143 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 145 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 156 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
signature BNF_LFP_COUNTABLE =
  sig
    val countable_datatype_tac: Proof.context -> tactic
    val derive_encode_injectives_thms:
       Proof.context -> string list -> thm list
  end
structure BNF_LFP_Countable: BNF_LFP_COUNTABLE
val countable_datatype_tac = fn: Proof.context -> thm -> thm Seq.seq
val countable_tac = fn: Proof.context -> int -> tactic
Found termination order: "size <*mlex*> {}"
locale wo_rel
  fixes r :: "('a * 'a) set"
  assumes "wo_rel r"
Found termination order: "size <*mlex*> {}"
locale wo_rel2
  fixes r :: "('a * 'a) set"
    and s :: "('b * 'b) set"
  assumes "wo_rel2 r s"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Countable"
### 1.188s elapsed time, 4.555s cpu time, 0.947s GC time
Loading theory "HOL-Library.Countable_Set" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries" via "HOL-Library.Countable_Set_Type")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Cardinals.Cardinal_Order_Relation"
### 1.026s elapsed time, 3.859s cpu time, 1.428s GC time
Loading theory "HOL-Cardinals.Cardinal_Arithmetic" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries" via "HOL-Cardinals.Cardinals")
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Cardinals.Ordinal_Arithmetic"
### 1.124s elapsed time, 4.253s cpu time, 1.445s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.PreliminariesMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Cardinals.Cardinal_Arithmetic"
### 0.220s elapsed time, 0.868s cpu time, 0.098s GC time
Loading theory "HOL-Cardinals.Cardinals" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries")
### theory "HOL-Library.Countable_Set"
### 0.794s elapsed time, 2.958s cpu time, 1.227s GC time
Loading theory "HOL-Library.Countable_Set_Type" (required by "Draft.PreliminariesMoreTemplates" via "Draft.Preliminaries")
Found termination order: "size <*mlex*> {}"
instantiation
  cset :: (type) {minus,bounded_lattice_bot,distrib_lattice}
  inf_cset == inf :: 'a cset => 'a cset => 'a cset
  bot_cset == bot :: 'a cset
  sup_cset == sup :: 'a cset => 'a cset => 'a cset
  less_eq_cset == less_eq :: 'a cset => 'a cset => bool
  less_cset == less :: 'a cset => 'a cset => bool
  minus_cset == minus :: 'a cset => 'a cset => 'a cset
### theory "HOL-Cardinals.Cardinals"
### 0.285s elapsed time, 1.131s cpu time, 0.149s GC time
### theory "HOL-Library.Tree"
### 2.363s elapsed time, 8.986s cpu time, 2.322s GC time
Loading theory "Draft.Templates" (required by "Draft.PreliminariesMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.064s elapsed time, 0.208s cpu time, 0.000s GC time
### theory "HOL-Library.BigO"
### 0.783s elapsed time, 2.448s cpu time, 0.286s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.PreliminariesMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.850s elapsed time, 2.167s cpu time, 1.109s GC time
### theory "HOL-Library.Countable_Set_Type"
### 1.646s elapsed time, 4.416s cpu time, 1.395s GC time
Loading theory "Draft.Preliminaries" (required by "Draft.PreliminariesMoreTemplates")
Found termination order: "(%p. length (snd3 p)) <*mlex*> {}"
### theory "Draft.Preliminaries"
### 0.828s elapsed time, 0.941s cpu time, 0.139s GC time
Loading theory "Draft.PreliminariesMoreTemplates"
val templateLemmas =
   [("Preliminaries.hd_singl", "hd (singl ?a) = ?a",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Preliminaries.length_singl", "length (singl ?a) = Suc 0",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Preliminaries.set_list_set", "set (list (set ?xl)) = set ?xl",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_hole 0,
           template_app (template_hole 1, template_var 0))),
       template_app (template_hole 1, template_var 0))),
    ("Preliminaries.distinct_list", "finite ?A ==> distinct (list ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Preliminaries.list_all2_NilL", "list_all2 ?R [] ?ys = (?ys = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_hole 2),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Preliminaries.list_all2_NilR", "list_all2 ?R ?xs [] = (?xs = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Preliminaries.list_Singl", "list {?b} = [?b]",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Preliminaries.singl_inj", "(singl ?a = singl ?b) = (?a = ?b)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Preliminaries.set_list", "finite ?A ==> set (list ?A) = ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Preliminaries.infinite_part1", "infinite ?V ==> infinite (part1 ?V)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Preliminaries.infinite_part2", "infinite ?V ==> infinite (part2 ?V)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Preliminaries.part1_su", "infinite ?V ==> part1 ?V <= ?V",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_var 0))),
    ("Preliminaries.part2_su", "infinite ?V ==> part2 ?V <= ?V",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_var 0))),
    ("Preliminaries.part12", "infinite ?V ==> part12_pred ?V (part12 ?V)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Preliminaries.pick", "?x : ?X ==> pick ?X : ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 0)
           ))),
    ("Preliminaries.length_list",
     "finite ?A ==> length (list ?A) = card ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Preliminaries.part12_pred",
     "infinite ?V ==> EX V1_V2. part12_pred ?V V1_V2",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 0))
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Preliminaries.list_all2_mono",
     "?phi <= ?chi ==> list_all2 ?phi <= list_all2 ?chi",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Preliminaries.list_all_mono",
     "?phi <= ?chi ==> list_all ?phi <= list_all ?chi",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Preliminaries.pick_NE", "?X ~= {} ==> pick ?X : ?X",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 0)
           ))),
    ("Preliminaries.set_incl_pred", "(?A <= ?B) = (ALL a. ?A a --> ?B a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Preliminaries.list_all2_list_all_2",
     "list_all2 ?f ?xs ?xs = list_all (%x. ?f x x) ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_var 0),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Preliminaries.list_all_map",
     "list_all ?\<phi> (map ?f ?al) = list_all (?\<phi> o ?f) ?al",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Preliminaries.part1_Int_part2",
     "infinite ?V ==> part1 ?V Int part2 ?V = {}",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Preliminaries.part1_Un_part2",
     "infinite ?V ==> part1 ?V Un part2 ?V = ?V",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Preliminaries.set_size_list",
     "?x : set ?xs ==> ?f ?x <= size_list ?f ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            )],
       template_inequation
        (less_equals, template_app (template_var 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Preliminaries.singl_hd",
     "length ?al = Suc 0 ==> singl (hd ?al) = ?al",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0),
          template_app (template_hole 4, template_hole 3))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Preliminaries.length_Suc_0",
     "(length ?al = Suc 0) = (EX a. ?al = [a])",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 0)),
         template_app (template_hole 5, template_hole 4)),
       template_app (template_hole 3, t_empty))),
    ("Preliminaries.list_all2_o",
     "list_all2 (?P o ?f) ?al ?bl = list_all2 ?P (map ?f ?al) ?bl",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Preliminaries.distinct_set_list",
     "finite ?A ==> distinct (list ?A) & set (list ?A) = ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_hole 0,
                   template_app (template_hole 2, template_var 0))),
               template_var 0))
           ))),
    ("Preliminaries.list_all2_Nil_iff",
     "list_all2 ?R ?xs ?ys ==> (?xs = []) = (?ys = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_bimplication
        (template_equation (template_var 1, template_hole 2),
         template_equation (template_var 0, template_hole 0)))),
    ("Preliminaries.list_all_list",
     "finite ?A ==> list_all ?\<phi> (list ?A) = (ALL a:?A. ?\<phi> a)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)))),
    ("Preliminaries.list_ex_list",
     "finite ?A ==> list_ex ?\<phi> (list ?A) = (EX a:?A. ?\<phi> a)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)))),
    ("Preliminaries.nth_size_list",
     "?i < length ?xs ==> ?f (?xs ! ?i) <= size_list ?f ?xs",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 3, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_var 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Preliminaries.set_incl_pred2",
     "(?A <= ?B) = (ALL a1 a2. ?A a1 a2 --> ?B a1 a2)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Preliminaries.list_all2_list_all",
     "list_all2 (%x. ?f) ?xs ?ys =
      (length ?xs = length ?ys & list_all ?f ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, t_empty), template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Preliminaries.sappend_NE", "(?A @@ ?B ~= {}) = (?A ~= {} & ?B ~= {})",
     template_bimplication
      (template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0),
             template_hole 1)
           ),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_hole 1))),
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 1)))
           ))),
    ("Preliminaries.distinct_set_eq_Singl",
     "distinct ?al ==> (set ?al = {?a}) = (?al = [?a])",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_bimplication
        (template_equation
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_hole 3)),
         template_equation
          (template_var 1,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Preliminaries.countable_infinite",
     "[| countable ?A; infinite ?B |] ==> |?A| \<le>o |?B|",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_app (template_hole 1, template_var 0))),
             template_hole 0)
           ))),
    ("Preliminaries.list_all2_list_allR",
     "list_all2 (%x y. ?f x) ?xs ?ys =
      (length ?xs = length ?ys & list_all ?f ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, t_empty), template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("Preliminaries.list_all2_map_map",
     "list_all2 ?\<phi> (map ?f ?Tl) (map ?g ?Tl) =
      list_all (%T. ?\<phi> (?f T) (?g T)) ?Tl",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 1))),
    ("Preliminaries.list_all_mp",
     "[| list_all (%a. ?\<phi> a --> ?\<psi> a) ?al; list_all ?\<phi> ?al |]
      ==> list_all ?\<psi> ?al",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, t_empty), template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("Preliminaries.set_incl_pred3",
     "(?A <= ?B) = (ALL a1 a2 a3. ?A a1 a2 a3 --> ?B a1 a2 a3)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app (template_hole 3, t_empty))),
    ("Preliminaries.length_map2",
     "length ?ys = length ?xs ==> length (map2 ?f ?xs ?ys) = length ?xs",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2),
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 1, t_empty)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))),
         template_app (template_hole 4, template_var 1)))),
    ("Preliminaries.ex_list_all2",
     "(!!x. x : set ?xs ==> EX y. ?f x y) ==> EX ys. list_all2 ?f ?xs ys",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Preliminaries.set_incl_pred4",
     "(?A <= ?B) = (ALL a1 a2 a3 a4. ?A a1 a2 a3 a4 --> ?B a1 a2 a3 a4)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Preliminaries.set_lupd",
     "?a : set ?al | ?F1.0 ?a = ?F2.0 ?a ==>
      lupd ?al ?bl ?F1.0 ?a = lupd ?al ?bl ?F2.0 ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_app (template_hole 2, template_var 3))),
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_var 2, template_var 4)),
                template_app (template_var 1, template_var 4)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0),
             template_var 2),
           template_var 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0),
             template_var 1),
           template_var 4)))),
    ("Preliminaries.list_eq_iff",
     "(?xs = ?ys) =
      (length ?xs = length ?ys & (ALL i<length ?xs. ?xs ! i = ?ys ! i))",
     template_bimplication
      (template_equation (template_var 1, template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 1)),
                 template_app (template_hole 5, template_var 0))),
             template_app (template_hole 4, t_empty))
           ))),
    ("Preliminaries.list_all2_length",
     "list_all2 ?P ?xs ?ys =
      (length ?xs = length ?ys &
       (ALL i<length ?xs. ?P (?xs ! i) (?ys ! i)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_var 1)),
                 template_app (template_hole 5, template_var 0))),
             template_app (template_hole 4, t_empty))
           ))),
    ("Preliminaries.list_all2_ConsR",
     "list_all2 ?R ?xs (?y # ?ys') ==>
      EX x xs'. ?xs = x # xs' & ?R x ?y & list_all2 ?R xs' ?ys'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Preliminaries.list_all2_ConsL",
     "list_all2 ?R (?x # ?xs') ?ys ==>
      EX y ys'. ?ys = y # ys' & ?R ?x y & list_all2 ?R ?xs' ys'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Preliminaries.nth_map2",
     "[| length ?bl = length ?al; ?i < length ?al |]
      ==> map2 ?f ?al ?bl ! ?i = ?f (?al ! ?i) (?bl ! ?i)",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 3),
          template_app (template_hole 8, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 8, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4, template_app (template_hole 3, t_empty)),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 3))),
           template_var 1),
         template_app
          (template_app
            (template_var 0,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1))))),
    ("Preliminaries.lupd_map",
     "[| length ?al = length ?bl;
         ?a1.0 : set ?al | ?G ?a1.0 = ?F (?H ?a1.0) |]
      ==> lupd ?al (map ?F ?bl) ?G ?a1.0 = ?F (lupd ?al ?bl ?H ?a1.0)",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 5),
          template_app (template_hole 7, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_app (template_hole 4, template_var 5))),
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_var 2, template_var 3)),
                template_app
                 (template_var 1,
                  template_app (template_var 0, template_var 3))))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 5),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 4)),
             template_var 2),
           template_var 3),
         template_app
          (template_var 1,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 4),
               template_var 0),
             template_var 3))))),
    ("Preliminaries.list_all2_elimR2",
     "[| list_all2 ?R ?xs (?y # ?ys');
         !!x xs'.
            [| ?xs = x # xs'; ?R x ?y; list_all2 ?R xs' ?ys' |] ==> ?phi |]
      ==> ?phi",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Preliminaries.list_all2_elimL2",
     "[| list_all2 ?R (?x # ?xs') ?ys;
         !!y ys'.
            [| ?ys = y # ys'; ?R ?x y; list_all2 ?R ?xs' ys' |] ==> ?phi |]
      ==> ?phi",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Preliminaries.list_all2_elimL",
     "[| ?xs = ?x # ?xs'; list_all2 ?R ?xs ?ys;
         !!y ys'.
            [| ?ys = y # ys'; ?R ?x y; list_all2 ?R ?xs' ys' |] ==> ?phi |]
      ==> ?phi",
     template_implication
      ([template_equation
         (template_var 5,
          template_app
           (template_app (template_hole 5, template_var 4),
            template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 5),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Preliminaries.list_all2_elimR",
     "[| ?ys = ?y # ?ys'; list_all2 ?R ?xs ?ys;
         !!x xs'.
            [| ?xs = x # xs'; ?R x ?y; list_all2 ?R xs' ?ys' |] ==> ?phi |]
      ==> ?phi",
     template_implication
      ([template_equation
         (template_var 5,
          template_app
           (template_app (template_hole 5, template_var 4),
            template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 5)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Preliminaries.listAll2_map2I",
     "[| length ?xs = length ?ys;
         !!i. i < length ?xs ==> ?R (?xs ! i) (?f (?xs ! i) (?ys ! i)) |]
      ==> list_all2 ?R ?xs (map2 ?f ?xs ?ys)",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 3),
          template_app (template_hole 8, template_var 2)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_var 3),
             template_app
              (template_app
                (template_hole 2, template_app (template_hole 1, t_empty)),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)))
           ))),
    ("Preliminaries.list_insert",
     "[| finite ?A; ?b ~: ?A |]
      ==> EX al1 al2.
             ?A = set (al1 @ al2) &
             distinct (al1 @ [?b] @ al2) &
             list (insert ?b ?A) = al1 @ [?b] @ al2",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 0),
                  template_var 1)
                )
            )],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Preliminaries.list_all2_cong",
     "[| ?xs1.0 = ?ys1.0; ?xs2.0 = ?ys2.0;
         !!i. i < length ?xs2.0 ==>
              ?R (?xs1.0 ! i) (?xs2.0 ! i) =
              ?R' (?ys1.0 ! i) (?ys2.0 ! i) |]
      ==> list_all2 ?R ?xs1.0 ?xs2.0 = list_all2 ?R' ?ys1.0 ?ys2.0",
     template_implication
      ([template_equation (template_var 5, template_var 4),
        template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 5),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 4),
           template_var 2))))]:
   (string * thm * template) list
### theory "Draft.PreliminariesMoreTemplates"
### 0.389s elapsed time, 0.584s cpu time, 0.080s GC time
val it = (): unit
