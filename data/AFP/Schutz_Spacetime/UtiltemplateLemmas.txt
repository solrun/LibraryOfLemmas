   [("Util.set_le_two", "card {?a, ?b} <= 2",
     template_inequation
      (less_equals,
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_hole 3))),
       template_app
        (template_hole 2,
         template_app (template_hole 1, template_hole 0)))),
    ("Util.set_le_three", "card {?a, ?b, ?c} <= 3",
     template_inequation
      (less_equals,
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 3)))),
       template_app
        (template_hole 2,
         template_app (template_hole 1, template_hole 0)))),
    ("Util.card_Collect_nat", "?i < ?j ==> card {?i..?j} = ?j - ?i + 1",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_hole 0)))),
    ("Util.card_subset",
     "[| card ?Y = ?n; ?Y <= ?X |] ==> ?n <= card ?X | infinite ?X",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2), template_var 1),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app (template_hole 5, template_var 0))),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Util.card_subset_finite",
     "[| finite ?X; card ?Y = ?n; ?Y <= ?X |] ==> ?n <= card ?X",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_equation
         (template_app (template_hole 2, template_var 1), template_var 0),
        template_inequation (less_equals, template_var 1, template_var 2)],
       template_inequation
        (less_equals, template_var 0,
         template_app (template_hole 2, template_var 2)))),
    ("Util.less_3_cases",
     "?n < 3 ==> ?n = 0 | ?n = Suc 0 | ?n = Suc (Suc 0)",
     template_implication
      ([template_inequation
         (less_than, template_var 0,
          template_app
           (template_hole 6,
            template_app (template_hole 5, template_hole 4)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app (template_hole 0, template_hole 1))),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app
                  (template_hole 0,
                   template_app (template_hole 0, template_hole 1)))))
           ))),
    ("Util.is_free_nat",
     "[| ?m < ?n; ?n < ?c; 3 <= ?c |]
      ==> EX k. k < ?m | ?m < k & k < ?n | ?n < k & k < ?c",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0),
        template_inequation
         (less_equals,
          template_app
           (template_hole 5,
            template_app (template_hole 4, template_hole 3)),
          template_var 0)],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Util.three_subset",
     "[| ?x ~= ?y; ?x ~= ?z; ?y ~= ?z; {?x, ?y, ?z} <= ?X |]
      ==> 3 <= card ?X | infinite ?X",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2)),
        template_negation
         (template_equation (template_var 3, template_var 1)),
        template_negation
         (template_equation (template_var 2, template_var 1)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 8, template_var 3),
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 8, template_var 1),
                template_hole 7))),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_hole 2))),
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_hole 11,
               template_app (template_hole 0, template_var 0)))
           )))]
