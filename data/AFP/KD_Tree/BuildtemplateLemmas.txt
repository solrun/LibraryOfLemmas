   [("Build.calc_spread_spec", "calc_spread ?k ?ps = spread ?k (set ?ps)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Build.build_psimp_1", "?ps = [?p] ==> build ?k ?ps = kdt.Leaf ?p",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_hole 3))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 2),
         template_app (template_hole 0, template_var 1)))),
    ("Build.widest_spread_spec",
     "(?k, ?s) = widest_spread ?ks ?ps ==>
      widest_spread_axis ?k (set ?ks) (set ?ps)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Build.build_termination",
     "ALL k. distinct (map (%p. p $ k) ?ps) ==> build_dom (?ks, ?ps)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Build.complete_if_balanced_size_2powh",
     "[| balanced ?kdt; KD_Tree.size_kdt ?kdt = 2 ^ ?h |]
      ==> KD_Tree.complete ?kdt",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_equation
         (template_app (template_hole 5, template_var 1),
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_hole 1))),
            template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Build.length_xs_gt_1",
     "1 < length ?xs ==> EX x y ys. ?xs = x # y # ys",
     template_implication
      ([template_inequation
         (less_than, template_hole 5,
          template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Build.sum_length_partition_by_median",
     "(?l, ?m, ?r) = partition_by_median ?k ?ps ==>
      length ?ps = length ?l + length ?r",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 4),
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 4)),
           template_app (template_hole 1, template_var 2))))),
    ("Build.set_partition_by_median",
     "(?l, ?m, ?r) = partition_by_median ?k ?ps ==>
      set ?ps = set ?l Un set ?r",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 4),
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 4)),
           template_app (template_hole 1, template_var 2))))),
    ("Build.filter_partition_by_median",
     "(?l, ?m, ?r) = partition_by_median ?k ?ps ==>
      ALL p:set ?l. p $ ?k <= ?m",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 4),
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 4)),
             t_empty)
           ))),
    ("Build.widest_spread_calc_spread",
     "[| ?ks ~= []; (?k, ?s) = widest_spread ?ks ?ps |]
      ==> ?s = calc_spread ?k ?ps",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 5)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 0))],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Build.filter_partition_by_median",
     "(?l, ?m, ?r) = partition_by_median ?k ?ps ==>
      ALL p:set ?r. ~ p $ ?k <= ?m",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_var 4),
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 2)),
             t_empty)
           ))),
    ("Build.balanced_build",
     "[| 0 < length ?ps; ALL k. distinct (map (%p. p $ k) ?ps) |]
      ==> balanced (build ?ks ?ps)",
     template_implication
      ([template_inequation
         (less_than, template_hole 7,
          template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Build.widest_spread_axis_Un",
     "[| widest_spread_axis ?k ?K ?P; spread ?k ?P <= spread ?k' ?P |]
      ==> widest_spread_axis ?k' (?K Un {?k'}) ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 3), template_var 1),
          template_app
           (template_app (template_hole 3, template_var 0),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 0),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0))),
             template_var 1)
           ))),
    ("Build.widest_spread_axis_Un",
     "[| widest_spread_axis ?k ?K ?P; spread ?k' ?P <= spread ?k ?P |]
      ==> widest_spread_axis ?k (?K Un {?k'}) ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 0), template_var 1),
          template_app
           (template_app (template_hole 3, template_var 3),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 3),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0))),
             template_var 1)
           ))),
    ("Build.size_build",
     "[| 0 < length ?ps; ALL k. distinct (map (%p. p $ k) ?ps) |]
      ==> KD_Tree.size_kdt (build ?ks ?ps) = length ?ps",
     template_implication
      ([template_inequation
         (less_than, template_hole 8,
          template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app (template_hole 7, template_var 1)))),
    ("Build.set_build",
     "[| 0 < length ?ps; ALL k. distinct (map (%p. p $ k) ?ps) |]
      ==> set ?ps = set_kdt (build ?ks ?ps)",
     template_implication
      ([template_inequation
         (less_than, template_hole 9,
          template_app (template_hole 8, template_var 1)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Build.complete_build",
     "[| length ?ps = 2 ^ ?h; ALL k. distinct (map (%p. p $ k) ?ps) |]
      ==> KD_Tree.complete (build ?k ?ps)",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 2),
          template_app
           (template_app
             (template_hole 9,
              template_app
               (template_hole 8,
                template_app (template_hole 7, template_hole 6))),
            template_var 1)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("Build.length_filter_sort_nth",
     "[| distinct ?xs; ?n < length ?xs |]
      ==> length (filter (%x. x <= sort ?xs ! ?n) ?xs) = ?n + 1",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 5, t_empty), template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Build.height_build",
     "[| length ?ps = 2 ^ ?h; ALL k. distinct (map (%p. p $ k) ?ps) |]
      ==> ?h = KD_Tree.height (build ?k ?ps)",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 2),
          template_app
           (template_app
             (template_hole 9,
              template_app
               (template_hole 8,
                template_app (template_hole 7, template_hole 6))),
            template_var 1)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_var 1,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Build.invar_build",
     "[| 0 < length ?ps; ALL k. distinct (map (%p. p $ k) ?ps);
         set ?ks = UNIV |]
      ==> invar (build ?ks ?ps)",
     template_implication
      ([template_inequation
         (less_than, template_hole 10,
          template_app (template_hole 9, template_var 1)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_equation
         (template_app (template_hole 3, template_var 0), template_hole 2)],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Build.length_filter_mset_sorted_nth",
     "[| distinct ?xs; ?n < length ?xs; sorted ?xs |]
      ==> {#x :# mset ?xs. x <= ?xs ! ?n#} = mset (take (?n + 1) ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, t_empty),
           template_app (template_hole 3, template_var 1)),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)),
             template_var 1))))),
    ("Build.length_partition_by_median",
     "[| 1 < length ?ps; ALL k. distinct (map (%p. p $ k) ?ps);
         (?l, ?m, ?r) = partition_by_median ?k ?ps |]
      ==> 0 < length ?r",
     template_implication
      ([template_inequation
         (less_than, template_hole 10,
          template_app (template_hole 9, template_var 4)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 3),
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_var 4))],
       template_inequation
        (less_than, template_hole 0,
         template_app (template_hole 9, template_var 1)))),
    ("Build.length_partition_by_median",
     "[| 0 < length ?ps; ALL k. distinct (map (%p. p $ k) ?ps);
         (?l, ?m, ?r) = partition_by_median ?k ?ps |]
      ==> 0 < length ?l",
     template_implication
      ([template_inequation
         (less_than, template_hole 9,
          template_app (template_hole 8, template_var 4)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 3),
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)),
          template_app
           (template_app (template_hole 0, template_var 0),
            template_var 4))],
       template_inequation
        (less_than, template_hole 9,
         template_app (template_hole 8, template_var 3)))),
    ("Build.length_partition_by_median",
     "[| 1 < length ?ps; ALL k. distinct (map (%p. p $ k) ?ps);
         (?l, ?m, ?r) = partition_by_median ?k ?ps |]
      ==> length ?l < length ?ps",
     template_implication
      ([template_inequation
         (less_than, template_hole 9,
          template_app (template_hole 8, template_var 4)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 3),
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)),
          template_app
           (template_app (template_hole 0, template_var 0),
            template_var 4))],
       template_inequation
        (less_than, template_app (template_hole 8, template_var 3),
         template_app (template_hole 8, template_var 4)))),
    ("Build.length_partition_by_median",
     "[| 0 < length ?ps; ALL k. distinct (map (%p. p $ k) ?ps);
         (?l, ?m, ?r) = partition_by_median ?k ?ps |]
      ==> length ?r < length ?ps",
     template_implication
      ([template_inequation
         (less_than, template_hole 9,
          template_app (template_hole 8, template_var 4)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 3),
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)),
          template_app
           (template_app (template_hole 0, template_var 0),
            template_var 4))],
       template_inequation
        (less_than, template_app (template_hole 8, template_var 1),
         template_app (template_hole 8, template_var 4)))),
    ("Build.length_partition_by_median",
     "[| 0 < length ?ps; ALL k. distinct (map (%p. p $ k) ?ps);
         (?l, ?m, ?r) = partition_by_median ?k ?ps |]
      ==> length ?r <= length ?l",
     template_implication
      ([template_inequation
         (less_than, template_hole 10,
          template_app (template_hole 9, template_var 4)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 3),
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_var 4))],
       template_inequation
        (less_equals, template_app (template_hole 9, template_var 1),
         template_app (template_hole 9, template_var 3)))),
    ("Build.length_partition_by_median",
     "[| 0 < length ?ps; ALL k. distinct (map (%p. p $ k) ?ps);
         (?l, ?m, ?r) = partition_by_median ?k ?ps |]
      ==> length ?l - length ?r <= 1",
     template_implication
      ([template_inequation
         (less_than, template_hole 12,
          template_app (template_hole 11, template_var 4)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 3),
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)),
          template_app
           (template_app (template_hole 3, template_var 0),
            template_var 4))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 11, template_var 3)),
           template_app (template_hole 11, template_var 1)),
         template_hole 0))),
    ("Build.length_filter_le_axis_median",
     "[| 0 < length ?ps; ALL k. distinct (map (%p. p $ k) ?ps) |]
      ==> length (filter (%p. p $ ?k <= axis_median ?k ?ps) ?ps) =
          (length ?ps - 1) div 2 + 1",
     template_implication
      ([template_inequation
         (less_than, template_hole 16,
          template_app (template_hole 15, template_var 1)),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_equation
        (template_app
          (template_hole 15,
           template_app
            (template_app (template_hole 9, t_empty), template_var 1)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 15, template_var 1)),
                   template_hole 3)),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0)))),
           template_hole 3)))),
    ("Build.length_l_partition_by_median",
     "[| 0 < length ?ps; ALL k. distinct (map (%p. p $ k) ?ps);
         (?l, ?m, ?r) = partition_by_median ?k ?ps |]
      ==> length ?l = (length ?ps - 1) div 2 + 1",
     template_implication
      ([template_inequation
         (less_than, template_hole 17,
          template_app (template_hole 16, template_var 4)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 10, template_var 3),
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 1)),
          template_app
           (template_app (template_hole 8, template_var 0),
            template_var 4))],
       template_equation
        (template_app (template_hole 16, template_var 3),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 16, template_var 4)),
                   template_hole 3)),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0)))),
           template_hole 3)))),
    ("Build.build_domintros3",
     "[| (?k, ?s) = widest_spread ?ks (?x # ?y # ?zs);
         (?l, ?m, ?r) = partition_by_median ?k (?x # ?y # ?zs);
         build_dom (?ks, ?l); build_dom (?ks, ?r) |]
      ==> build_dom (?ks, ?x # ?y # ?zs)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 9, template_var 8), template_var 7),
          template_app
           (template_app (template_hole 8, template_var 6),
            template_app
             (template_app (template_hole 7, template_var 5),
              template_app
               (template_app (template_hole 7, template_var 4),
                template_var 3)))),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 2),
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)),
          template_app
           (template_app (template_hole 3, template_var 8),
            template_app
             (template_app (template_hole 7, template_var 5),
              template_app
               (template_app (template_hole 7, template_var 4),
                template_var 3)))),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_app
               (template_app (template_hole 0, template_var 6),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_app
               (template_app (template_hole 0, template_var 6),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 6),
               template_app
                (template_app (template_hole 7, template_var 5),
                 template_app
                  (template_app (template_hole 7, template_var 4),
                   template_var 3))))
           ))),
    ("Build.build_psimp_3",
     "[| 1 < length ?ps; (?k, ?s) = widest_spread ?ks ?ps;
         (?l, ?m, ?r) = partition_by_median ?k ?ps; build_dom (?ks, ?l);
         build_dom (?ks, ?r) |]
      ==> build ?ks ?ps = kdt.Node ?k ?m (build ?ks ?l) (build ?ks ?r)",
     template_implication
      ([template_inequation
         (less_than, template_hole 14,
          template_app (template_hole 13, template_var 6)),
        template_equation
         (template_app
           (template_app (template_hole 11, template_var 5),
            template_var 4),
          template_app
           (template_app (template_hole 10, template_var 3),
            template_var 6)),
        template_equation
         (template_app
           (template_app (template_hole 8, template_var 2),
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)),
          template_app
           (template_app (template_hole 6, template_var 5),
            template_var 6)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 6),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 1),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0))))),
    ("Build.build_psimp_2",
     "[| (?k, ?s) = widest_spread ?ks (?x # ?y # ?zs);
         (?l, ?m, ?r) = partition_by_median ?k (?x # ?y # ?zs);
         build_dom (?ks, ?l); build_dom (?ks, ?r) |]
      ==> build ?ks (?x # ?y # ?zs) =
          kdt.Node ?k ?m (build ?ks ?l) (build ?ks ?r)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 12, template_var 8),
            template_var 7),
          template_app
           (template_app (template_hole 11, template_var 6),
            template_app
             (template_app (template_hole 10, template_var 5),
              template_app
               (template_app (template_hole 10, template_var 4),
                template_var 3)))),
        template_equation
         (template_app
           (template_app (template_hole 8, template_var 2),
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)),
          template_app
           (template_app (template_hole 6, template_var 8),
            template_app
             (template_app (template_hole 10, template_var 5),
              template_app
               (template_app (template_hole 10, template_var 4),
                template_var 3)))),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_app
               (template_app (template_hole 3, template_var 6),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_app
               (template_app (template_hole 3, template_var 6),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 6),
           template_app
            (template_app (template_hole 10, template_var 5),
             template_app
              (template_app (template_hole 10, template_var 4),
               template_var 3))),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 8),
               template_var 1),
             template_app
              (template_app (template_hole 1, template_var 6),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 6),
             template_var 0)))))]
