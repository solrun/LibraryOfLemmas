   [("EFSM.choice_alt", "choice ?t ?t' = choice_alt ?t ?t'",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("EFSM.choice_symmetry", "choice ?x ?y = choice ?y ?x",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("EFSM.trace_equivalent_symmetric",
     "trace_equivalent ?e1.0 ?e2.0 = trace_equivalent ?e2.0 ?e1.0",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("EFSM.random_member_singleton", "random_member {|?a|} = Some ?a",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("EFSM.random_member_None", "(random_member ?ss = None) = (?ss = {||})",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("EFSM.random_member_nonempty",
     "(?s ~= {||}) = (random_member ?s ~= None)",
     template_bimplication
      (template_negation
        (template_equation (template_var 0, template_hole 3)),
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("EFSM.visits_empty", "visits ?s ?e ?s' ?r [] = (?s = ?s')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 3, template_var 1))),
    ("EFSM.visits_base", "visits ?target ?e ?s ?r [] = (?s = ?target)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 1, template_var 3))),
    ("EFSM.accepts_trace_prim",
     "accepts_trace ?e ?s ?r ?l = accepts_trace_prim ?e ?s ?r ?l",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("EFSM.recognises_prim",
     "recognises_execution ?e ?s ?r ?t = recognises_prim ?e ?s ?r ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("EFSM.ffilter_fBall", "fBall ?xs ?P = (ffilter ?P ?xs = ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1), t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("EFSM.obtainable_empty_efsm",
     "obtainable ?s ?c {||} = (?s = 0 & ?c = <>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0),
              template_hole 5)
            )],
       template_dunno)),
    ("EFSM.empty_ffilter", "(ffilter ?P ?xs = {||}) = (ALL x:?xs. ~ ?P x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 0), t_empty))),
    ("EFSM.obtains_base",
     "obtains ?s ?r ?e ?s' ?r' [] = (?s = ?s' & ?r = ?r')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0),
              template_hole 3)
            )],
       template_dunno)),
    ("EFSM.size_le_1", "(size ?f <= 1) = (?f = {||} | (EX e. ?f = {|e|}))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)),
              template_hole 5)
            )],
       template_dunno)),
    ("EFSM.S_ffUnion",
     "S ?e = ffUnion ((%((s, s'), uu_). {|s, s'|}) |`| ?e)",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3, template_app (template_hole 2, t_empty))),
           template_var 0)))),
    ("EFSM.step_None",
     "(step ?e ?s ?r ?l ?i = None) =
      (possible_steps ?e ?s ?r ?l ?i = {||})",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0),
         template_hole 3),
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0),
         template_hole 0))),
    ("EFSM.in_outgoing",
     "(((?s1.0, ?s2.0), ?t) |\<in>| outgoing_transitions ?e ?s) =
      (((?s1.0, ?s2.0), ?t) |\<in>| ?e & ?s1.0 = ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 4),
                      template_var 3)),
                  template_var 2)),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("EFSM.in_possible_steps",
     "(((?s, ?s'), ?t) |\<in>| ?e &
       Label ?t = ?l & can_take_transition ?t ?i ?r) =
      ((?s', ?t) |\<in>| possible_steps ?e ?s ?r ?l ?i)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 6),
                     template_var 5)),
                 template_var 4)),
             template_var 3)),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 4)),
               template_var 2)),
           template_app
            (template_app
              (template_app (template_hole 3, template_var 4),
               template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 5),
             template_var 4)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 6),
               template_var 0),
             template_var 2),
           template_var 1)))),
    ("EFSM.recognises_step_equiv",
     "recognises_execution ?e ?s ?r ((?l, ?i) # ?t) =
      (EX (s', T):possible_steps ?e ?s ?r ?l ?i.
          recognises_execution ?e s' (evaluate_updates T ?i ?r) ?t)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 8, template_var 5),
             template_var 4),
           template_var 3),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)),
         template_app (template_hole 3, t_empty)))),
    ("EFSM.possible_steps_empty",
     "(possible_steps ?e ?s ?r ?l ?i = {||}) =
      (ALL ((origin, dest), t):fset ?e.
          origin ~= ?s | Label t ~= ?l | ~ can_take_transition t ?i ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 11, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 10),
       template_app
        (template_app
          (template_hole 9, template_app (template_hole 8, template_var 4)),
         template_app
          (template_hole 7, template_app (template_hole 6, t_empty))))),
    ("EFSM.visits_step",
     "visits ?target ?e ?s ?r (?h # ?t) =
      (EX (s', T):possible_steps ?e ?s ?r (fst ?h) (snd ?h).
          visits ?target ?e s' (evaluate_updates T (snd ?h) ?r) ?t)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 9, template_var 5),
               template_var 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app (template_hole 8, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 6, template_var 4),
                   template_var 3),
                 template_var 2),
               template_app (template_hole 5, template_var 1)),
             template_app (template_hole 4, template_var 1))),
         template_app (template_hole 3, t_empty)))),
    ("EFSM.obtains_step",
     "obtains ?s ?r ?e ?s' ?r' ((?l, ?i) # ?t) =
      (EX (s'', T):possible_steps ?e ?s' ?r' ?l ?i.
          obtains ?s ?r ?e s'' (evaluate_updates T ?i ?r') ?t)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 8, template_var 7),
                 template_var 6),
               template_var 5),
             template_var 4),
           template_var 3),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)),
         template_app (template_hole 3, t_empty)))),
    ("EFSM.replace_finsert",
     "replace (finsert ((?aaa, ?baa), ?b) ?e1.0) ?old ?new =
      (if ((?aaa, ?baa), ?b) = ?old
       then finsert ?new (replace ?e1.0 ?old ?new)
       else finsert ((?aaa, ?baa), ?b) (replace ?e1.0 ?old ?new))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app
                         (template_hole 3,
                          template_app
                           (template_app (template_hole 2, template_var 5),
                            template_var 4)),
                        template_var 3)),
                    template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("EFSM.possible_steps_alt_atom",
     "(possible_steps ?e ?s ?r ?l ?i = {|?dt|}) =
      (ffilter
        (%((origin, dest), t).
            origin = ?s & Label t = ?l & can_take_transition t ?i ?r)
        ?e =
       {|((?s, fst ?dt), snd ?dt)|})",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 17, template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_app
          (template_app (template_hole 16, template_var 0),
           template_hole 15)),
       template_equation
        (template_app
          (template_app
            (template_hole 13,
             template_app
              (template_hole 12, template_app (template_hole 11, t_empty))),
           template_var 5),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 4),
                   template_app (template_hole 2, template_var 0))),
               template_app (template_hole 1, template_var 0))),
           template_hole 0)))),
    ("EFSM.possible_steps_alt3",
     "(possible_steps ?e ?s ?r ?l ?i = {|(?d, ?t)|}) =
      (ffilter
        (%((origin, dest), t).
            origin = ?s & Label t = ?l & can_take_transition t ?i ?r)
        ?e =
       {|((?s, ?d), ?t)|})",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 16, template_var 6),
                 template_var 5),
               template_var 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_app (template_hole 14, template_var 1),
               template_var 0)),
           template_hole 13)),
       template_equation
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_hole 10, template_app (template_hole 9, t_empty))),
           template_var 6),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 1)),
               template_var 0)),
           template_hole 0)))),
    ("EFSM.trace_reject",
     "(~ recognises_execution ?e ?s ?r ((?l, ?i) # ?t)) =
      (possible_steps ?e ?s ?r ?l ?i = {||} |
       (ALL (s', T):possible_steps ?e ?s ?r ?l ?i.
           ~ recognises_execution ?e s' (evaluate_updates T ?i ?r) ?t))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 12,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 11, template_var 5),
                    template_var 4),
                  template_var 3),
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 9, template_var 2),
                      template_var 1)),
                  template_var 0)))
            )],
       template_dunno)),
    ("EFSM.accepts_trace_step",
     "accepts_trace ?e ?s ?r ((?l, ?i, ?p) # ?t) =
      (EX (s', T):possible_steps ?e ?s ?r ?l ?i.
          evaluate_outputs T ?i ?r = map Some ?p &
          accepts_trace ?e s' (evaluate_updates T ?i ?r) ?t)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 15, template_var 6),
             template_var 5),
           template_var 4),
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app (template_hole 13, template_var 3),
               template_app
                (template_app (template_hole 12, template_var 2),
                 template_var 1))),
           template_var 0)),
       template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 10, template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2)),
         template_app (template_hole 9, t_empty)))),
    ("EFSM.split_label",
     "ffilter
       (%((origin, dest), t).
           origin = ?s & Label t = ?l & can_take_transition t ?i ?r)
       ?e =
      ffilter
       (%((origin, dest), t). origin = ?s & can_take_transition t ?i ?r)
       (ffilter (%((origin, dest), t). Label t = ?l) ?e)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6, template_app (template_hole 5, t_empty))),
         template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6, template_app (template_hole 5, t_empty))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6, template_app (template_hole 5, t_empty))),
           template_var 0)))),
    ("EFSM.split_origin",
     "ffilter
       (%((origin, dest), t).
           origin = ?s & Label t = ?l & can_take_transition t ?i ?r)
       ?e =
      ffilter
       (%((origin, dest), t). Label t = ?l & can_take_transition t ?i ?r)
       (ffilter (%((origin, dest), t). origin = ?s) ?e)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6, template_app (template_hole 5, t_empty))),
         template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6, template_app (template_hole 5, t_empty))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6, template_app (template_hole 5, t_empty))),
           template_var 0)))),
    ("EFSM.rejects_trace_step",
     "rejects_trace ?e ?s ?r ((?l, ?i, ?p) # ?t) =
      (ALL (s', T):possible_steps ?e ?s ?r ?l ?i.
          evaluate_outputs T ?i ?r ~= map Some ?p |
          rejects_trace ?e s' (evaluate_updates T ?i ?r) ?t)",
     template_equation
      (template_app
        (template_hole 16,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 15, template_var 6),
               template_var 5),
             template_var 4),
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 13, template_var 3),
                 template_app
                  (template_app (template_hole 12, template_var 2),
                   template_var 1))),
             template_var 0))),
       template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 10, template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2)),
         template_app (template_hole 9, t_empty)))),
    ("EFSM.step_Some",
     "(step ?e ?s ?r ?l ?i = Some (?t, ?s', ?p, ?r')) =
      (random_member (possible_steps ?e ?s ?r ?l ?i) = Some (?s', ?t) &
       evaluate_outputs ?t ?i ?r = ?p & evaluate_updates ?t ?i ?r = ?r')",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 17, template_var 8),
                 template_var 7),
               template_var 6),
             template_var 5),
           template_var 4),
         template_app
          (template_hole 16,
           template_app
            (template_app (template_hole 15, template_var 3),
             template_app
              (template_app (template_hole 14, template_var 2),
               template_app
                (template_app (template_hole 13, template_var 1),
                 template_var 0))))),
       template_dunno)),
    ("EFSM.possible_steps_alt",
     "(possible_steps ?e ?s ?r ?l ?i = {|(?d, ?t)|}) =
      (ffilter
        (%((origin, dest), t).
            origin = ?s &
            Label t = ?l &
            length ?i = Arity t & apply_guards (Guards t) (join_ir ?i ?r))
        ?e =
       {|((?s, ?d), ?t)|})",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 20, template_var 6),
                 template_var 5),
               template_var 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app
            (template_hole 19,
             template_app
              (template_app (template_hole 18, template_var 1),
               template_var 0)),
           template_hole 17)),
       template_equation
        (template_app
          (template_app
            (template_hole 15,
             template_app
              (template_hole 14, template_app (template_hole 13, t_empty))),
           template_var 6),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 1)),
               template_var 0)),
           template_hole 0)))),
    ("EFSM.possible_steps_finsert",
     "possible_steps (finsert ((?s, ?s'), ?t) ?e) ?ss ?r ?l ?i =
      (if ?s = ?ss &
          Label ?t = ?l &
          length ?i = Arity ?t & apply_guards (Guards ?t) (join_ir ?i ?r)
       then finsert (?s', ?t) (possible_steps ?e ?s ?r ?l ?i)
       else possible_steps ?e ?ss ?r ?l ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_hole 15,
                      template_app
                       (template_app
                         (template_hole 14,
                          template_app
                           (template_app
                             (template_hole 13,
                              template_app
                               (template_app
                                 (template_hole 12, template_var 7),
                                template_var 6)),
                            template_var 5)),
                        template_var 4)),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("EFSM.fmember_possible_steps",
     "((?s', ?t) |\<in>| possible_steps ?e ?s ?r ?l ?i) =
      (((?s, ?s'), ?t)
       : {((origin, dest), t).
          ((origin, dest), t) : fset ?e &
          origin = ?s &
          Label t = ?l &
          length ?i = Arity t & apply_guards (Guards t) (join_ir ?i ?r)})",
     template_equation
      (template_app
        (template_app
          (template_hole 18,
           template_app
            (template_app (template_hole 17, template_var 6),
             template_var 5)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 16, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 15,
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 13, template_var 3),
                 template_var 6)),
             template_var 5)),
         template_app
          (template_hole 12,
           template_app
            (template_hole 11,
             template_app (template_hole 10, t_empty)))))),
    ("EFSM.possible_steps_alt2",
     "(possible_steps ?e ?s ?r ?l ?i = {|(?d, ?t)|}) =
      (ffilter
        (%((origin, dest), t).
            Label t = ?l &
            length ?i = Arity t & apply_guards (Guards t) (join_ir ?i ?r))
        (ffilter (%((origin, dest), t). origin = ?s) ?e) =
       {|((?s, ?d), ?t)|})",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 20, template_var 6),
                 template_var 5),
               template_var 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app
            (template_hole 19,
             template_app
              (template_app (template_hole 18, template_var 1),
               template_var 0)),
           template_hole 17)),
       template_equation
        (template_app
          (template_app
            (template_hole 15,
             template_app
              (template_hole 14, template_app (template_hole 13, t_empty))),
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_hole 14,
                 template_app (template_hole 13, t_empty))),
             template_var 6)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 1)),
               template_var 0)),
           template_hole 0)))),
    ("EFSM.possible_steps_singleton",
     "(possible_steps ?e ?s ?r ?l ?i = {|(?d, ?t)|}) =
      ({((origin, dest), t).
        ((origin, dest), t) : fset ?e &
        origin = ?s &
        Label t = ?l &
        length ?i = Arity t & apply_guards (Guards t) (join_ir ?i ?r)} =
       {((?s, ?d), ?t)})",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 22, template_var 6),
                 template_var 5),
               template_var 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app
            (template_hole 21,
             template_app
              (template_app (template_hole 20, template_var 1),
               template_var 0)),
           template_hole 19)),
       template_equation
        (template_app
          (template_hole 17,
           template_app
            (template_hole 16, template_app (template_hole 15, t_empty))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 11, template_var 5),
                   template_var 1)),
               template_var 0)),
           template_hole 0)))),
    ("EFSM.deterministic_alt_aux",
     "(size (possible_steps ?e ?s ?r ?l ?i) <= 1) =
      (possible_steps ?e ?s ?r ?l ?i = {||} |
       (EX s' t.
           ffilter
            (%((origin, dest), t).
                origin = ?s &
                Label t = ?l &
                length ?i = Arity t &
                apply_guards (Guards t) (join_ir ?i ?r))
            ?e =
           {|((?s, s'), t)|}))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 25,
                template_app
                 (template_hole 24,
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 23, template_var 4),
                          template_var 3),
                        template_var 2),
                      template_var 1),
                    template_var 0))),
              template_hole 22)
            )],
       template_dunno)),
    ("EFSM.deterministic_alt",
     "deterministic ?e =
      (ALL s r l i.
          possible_steps ?e s r l i = {||} |
          (EX s' t.
              ffilter
               (%((origin, dest), t).
                   origin = s &
                   Label t = l &
                   length i = Arity t &
                   apply_guards (Guards t) (join_ir i r))
               ?e =
              {|((s, s'), t)|}))",
     template_equation
      (template_app (template_hole 27, template_var 0),
       template_app (template_hole 26, t_empty))),
    ("EFSM.ffilter_split",
     "ffilter
       (%((origin, dest), t).
           origin = ?s &
           Label t = ?l &
           length ?i = Arity t & apply_guards (Guards t) (join_ir ?i ?r))
       ?e =
      ffilter
       (%((origin, dest), t).
           Label t = ?l &
           length ?i = Arity t & apply_guards (Guards t) (join_ir ?i ?r))
       (ffilter (%((origin, dest), t). origin = ?s) ?e)",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app
            (template_hole 11, template_app (template_hole 10, t_empty))),
         template_var 0),
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_hole 11, template_app (template_hole 10, t_empty))),
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_hole 11, template_app (template_hole 10, t_empty))),
           template_var 0)))),
    ("EFSM.ex_comm4",
     "(EX c1 s a b.
          (a, b) : fset (possible_steps ?e ?s' ?r ?l ?i) &
          obtains s c1 ?e a (evaluate_updates b ?i ?r) ?t) =
      (EX a b s c1.
          (a, b) : fset (possible_steps ?e ?s' ?r ?l ?i) &
          obtains s c1 ?e a (evaluate_updates b ?i ?r) ?t)",
     template_equation
      (template_app (template_hole 11, t_empty),
       template_app (template_hole 10, t_empty))),
    ("EFSM.execution_simulation_step",
     "execution_simulation ?f ?e1.0 ?s1.0 ?r1.0 ?e2.0 ?s2.0 ?r2.0
       ((?l, ?i) # ?es) =
      (?s2.0 = ?f ?s1.0 &
       (ALL (s1', t1):possible_steps ?e1.0 ?s1.0 ?r1.0 ?l ?i.
           EX (s2', t2):possible_steps ?e2.0 ?s2.0 ?r2.0 ?l ?i.
              evaluate_outputs t1 ?i ?r1.0 = evaluate_outputs t2 ?i ?r2.0 &
              execution_simulation ?f ?e1.0 s1'
               (evaluate_updates t1 ?i ?r1.0) ?e2.0 s2'
               (evaluate_updates t2 ?i ?r2.0) ?es))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 14, template_var 9),
                          template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 12, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_dunno)),
    ("EFSM.trace_simulation_step",
     "trace_simulation ?f ?e1.0 ?s1.0 ?r1.0 ?e2.0 ?s2.0 ?r2.0
       ((?l, ?i, ?o) # ?es) =
      (?s2.0 = ?f ?s1.0 &
       (ALL (s1', t1)
            :ffilter
              (%(s1', t1). evaluate_outputs t1 ?i ?r1.0 = map Some ?o)
              (possible_steps ?e1.0 ?s1.0 ?r1.0 ?l ?i).
           EX (s2', t2):possible_steps ?e2.0 ?s2.0 ?r2.0 ?l ?i.
              evaluate_outputs t2 ?i ?r2.0 = map Some ?o &
              trace_simulation ?f ?e1.0 s1' (evaluate_updates t1 ?i ?r1.0)
               ?e2.0 s2' (evaluate_updates t2 ?i ?r2.0) ?es))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 18, template_var 10),
                          template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_app
               (template_app
                 (template_hole 17,
                  template_app
                   (template_app (template_hole 16, template_var 3),
                    template_app
                     (template_app (template_hole 15, template_var 2),
                      template_var 1))),
                template_var 0))
            )],
       template_dunno)),
    ("EFSM.executionally_equivalent_step",
     "executionally_equivalent ?e1.0 ?s1.0 ?r1.0 ?e2.0 ?s2.0 ?r2.0
       ((?l, ?i) # ?es) =
      ((ALL (s1', t1):possible_steps ?e1.0 ?s1.0 ?r1.0 ?l ?i.
           EX (s2', t2):possible_steps ?e2.0 ?s2.0 ?r2.0 ?l ?i.
              evaluate_outputs t1 ?i ?r1.0 = evaluate_outputs t2 ?i ?r2.0 &
              executionally_equivalent ?e1.0 s1'
               (evaluate_updates t1 ?i ?r1.0) ?e2.0 s2'
               (evaluate_updates t2 ?i ?r2.0) ?es) &
       (ALL (s2', t2):possible_steps ?e2.0 ?s2.0 ?r2.0 ?l ?i.
           EX (s1', t1):possible_steps ?e1.0 ?s1.0 ?r1.0 ?l ?i.
              evaluate_outputs t1 ?i ?r1.0 = evaluate_outputs t2 ?i ?r2.0 &
              executionally_equivalent ?e1.0 s1'
               (evaluate_updates t1 ?i ?r1.0) ?e2.0 s2'
               (evaluate_updates t2 ?i ?r2.0) ?es))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 13, template_var 8),
                   template_var 7),
                 template_var 6),
               template_var 5),
             template_var 4),
           template_var 3),
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app (template_hole 11, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 2),
                 template_var 1)),
             template_app (template_hole 7, t_empty))),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 8, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1)),
           template_app (template_hole 7, t_empty)))))]
