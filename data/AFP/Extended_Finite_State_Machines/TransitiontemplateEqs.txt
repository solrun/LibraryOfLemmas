   [("Transition.apply_outputs_empty", "apply_outputs [] ?s = []",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Transition.apply_outputs_preserves_length",
     "length (apply_outputs ?p ?s) = length ?p",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("Transition.apply_outputs",
     "apply_outputs ?p ?s = map (%p. aval p ?s) ?p",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, t_empty), template_var 1))),
    ("Transition.can_take",
     "can_take_transition ?t ?i ?r = can_take (Arity ?t) (Guards ?t) ?i ?r",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0))),
    ("Transition.can_take",
     "can_take ?a ?g ?i ?r =
      (length ?i = ?a & apply_guards ?g (join_ir ?i ?r))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("Transition.apply_outputs",
     "input2state ?n =
      fold (%(k, v) f. f(k $:= Some v)) (enumerate 0 ?n) (K$ None)",
     template_equation
      (template_app (template_hole 8, template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 7, template_app (template_hole 6, t_empty)),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_app (template_hole 1, template_hole 0)))),
    ("Transition.update_twice",
     "apply_updates [(?r, ?a), (?r, ?b)] ?s ?regs = ?regs
      (?r $:= aval ?b ?s)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 4),
                   template_var 3)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 4),
                     template_var 2)),
                 template_hole 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 4),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1))))]
