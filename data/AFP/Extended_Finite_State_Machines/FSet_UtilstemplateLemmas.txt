   [("FSet_Utils.singleton_singleton", "fis_singleton {|?a|}",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("FSet_Utils.ffilter_empty", "ffilter ?f {||} = {||}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("FSet_Utils.fprod_empty_l", "{||} |\<times>| ?a = {||}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("FSet_Utils.fprod_empty_r", "?a |\<times>| {||} = {||}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("FSet_Utils.exists_fset_of_list", "EX l. ?f = fset_of_list l",
     template_predicate (template_app (template_hole 2, t_empty))),
    ("FSet_Utils.ffold_empty", "ffold ?f ?b {||} = ?b",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_var 0)),
    ("FSet_Utils.fset_of_list_remdups",
     "fset_of_list (remdups ?l) = fset_of_list ?l",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("FSet_Utils.fMin_Min", "fMin (fset_of_list ?l) = Min (set ?l)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("FSet_Utils.size_fset_of_list",
     "size (fset_of_list ?l) = length (remdups ?l)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("FSet_Utils.size_ffilter", "size (ffilter ?P ?f) <= size ?f",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("FSet_Utils.size_fimage", "size (?f |`| ?s) <= size ?s",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("FSet_Utils.fset_of_list_empty",
     "(fset_of_list ?l = {||}) = (?l = [])",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("FSet_Utils.fset_of_list_sort",
     "fset_of_list ?l = fset_of_list (sort ?l)",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("FSet_Utils.fis_singleton_fthe_elem",
     "fis_singleton ?A = (?A = {|fthe_elem ?A|})",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)))),
    ("FSet_Utils.fset_equiv", "(?f1.0 = ?f2.0) = (fset ?f1.0 = fset ?f2.0)",
     template_bimplication
      (template_equation (template_var 1, template_var 0),
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("FSet_Utils.sorted_list_of_fset_sort",
     "sorted_list_of_fset (fset_of_list ?l) = sort (remdups ?l)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("FSet_Utils.fmember_implies_member", "?e |\<in>| ?f ==> ?e : fset ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("FSet_Utils.ffold_ord_fold_sorted",
     "ffold_ord ?f ?s ?b = fold ?f (sorted_list_of_fset ?s) ?b",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("FSet_Utils.fis_singleton_alt",
     "fis_singleton ?f = (EX e. ?f = {|e|})",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app (template_hole 3, t_empty))),
    ("FSet_Utils.size_fsubset",
     "?x2.0 |\<subset>| ?x1.0 ==> size ?x2.0 < size ?x1.0",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("FSet_Utils.ffilter_eq_iff", "(?f = ?g) = (ALL x. ?f x = ?g x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app (template_hole 1, t_empty))),
    ("FSet_Utils.fset_both_sides",
     "(Abs_fset ?s = ?f) = (fset (Abs_fset ?s) = fset ?f)",
     template_bimplication
      (template_equation
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_equation
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("FSet_Utils.sorted_list_of_fset_Cons",
     "EX h t. sorted_list_of_fset (finsert ?s ?ss) = h # t",
     template_predicate (template_app (template_hole 5, t_empty))),
    ("FSet_Utils.hd_sort_remdups", "hd (sort (remdups ?l)) = hd (sort ?l)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)))),
    ("FSet_Utils.size_fsingleton", "(size ?f = 1) = (EX e. ?f = {|e|})",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_hole 4),
       template_app (template_hole 3, t_empty))),
    ("FSet_Utils.fold_union_ffUnion",
     "fold (|\<union>|) ?l {||} = ffUnion (fset_of_list ?l)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, t_empty), template_var 0),
         template_hole 2),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("FSet_Utils.hd_sorted_list_of_fset",
     "?s ~= {||} ==> hd (sorted_list_of_fset ?s) = fMin ?s",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("FSet_Utils.ffilter_size_le",
     "size ?s <= ?n ==> size (ffilter ?f ?s) <= ?n",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 1, template_var 2),
          template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_var 1))),
    ("FSet_Utils.fimage_size_le",
     "size ?s <= ?n ==> size (?f |`| ?s) <= ?n",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 2),
          template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_var 1))),
    ("FSet_Utils.fBall_ffilter", "fBall ?X ?f ==> ffilter ?f ?X = ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1), t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("FSet_Utils.exists_sorted_distinct_fset_of_list",
     "EX l. sorted l & distinct l & ?f = fset_of_list l",
     template_predicate (template_app (template_hole 6, t_empty))),
    ("FSet_Utils.set_membership_eq",
     "(?A = ?B) = ((%x. x : ?A) = (%x. x : ?B))",
     template_bimplication
      (template_equation (template_var 1, template_var 0),
       template_equation (t_empty, t_empty))),
    ("FSet_Utils.fset_eq_alt",
     "(?x = ?y) = (?x |\<subseteq>| ?y & size ?x = size ?y)",
     template_bimplication
      (template_equation (template_var 1, template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("FSet_Utils.finsert_equiv",
     "(finsert ?e ?f = ?f') = (insert ?e (fset ?f) = fset ?f')",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("FSet_Utils.fprod_singletons",
     "{|?a|} |\<times>| {|?b|} = {|(?a, ?b)|}",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_hole 5)),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_hole 3)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("FSet_Utils.ffilter_singleton", "?f ?e ==> ffilter ?f {|?e|} = {|?e|}",
     template_implication
      ([template_predicate (template_app (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("FSet_Utils.filter_elements",
     "(?x |\<in>| Abs_fset (Set.filter ?f (fset ?s))) =
      (?x : Set.filter ?f (fset ?s))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_var 0)))),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0))))),
    ("FSet_Utils.filter_filter",
     "ffilter ?P (ffilter ?Q ?xs) = ffilter (%x. ?Q x & ?P x) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, t_empty), template_var 0))),
    ("FSet_Utils.size_ffilter_card",
     "size (ffilter ?f ?s) = card {e: fset ?s. ?f e}",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty)))),
    ("FSet_Utils.fprod_equiv",
     "(fset (?f |\<times>| ?f') = ?s) = (fset ?f \<times> fset ?f' = ?s)",
     template_bimplication
      (template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           t_empty),
         template_var 0))),
    ("FSet_Utils.fminus_filter_singleton",
     "fset_of_list ?l |-| {|?x|} = fset_of_list (filter (%e. e ~= ?x) ?l)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_hole 3)),
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 2, t_empty), template_var 1)))),
    ("FSet_Utils.fsubset_strict",
     "?x2.0 |\<subset>| ?x1.0 ==>
      EX e. e |\<in>| ?x1.0 & e |\<notin>| ?x2.0",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("FSet_Utils.hd_sort_Min", "?l ~= [] ==> hd (sort ?l) = Min (set ?l)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("FSet_Utils.size_le_1",
     "(size ?f <= 1) = (?f = {||} | (EX e. ?f = {|e|}))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)),
              template_hole 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 2)),
             template_app (template_hole 1, t_empty))
           ))),
    ("FSet_Utils.fsubset",
     "?x2.0 |\<subset>| ?x1.0 ==>
      \<nexists>e. e |\<in>| ?x2.0 & e |\<notin>| ?x1.0",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_negation
        (template_predicate (template_app (template_hole 2, t_empty))))),
    ("FSet_Utils.fprod_subseteq",
     "?x |\<subseteq>| ?x' & ?y |\<subseteq>| ?y' ==>
      ?x |\<times>| ?y |\<subseteq>| ?x' |\<times>| ?y'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("FSet_Utils.ffilter_finsert",
     "ffilter ?f (finsert ?a ?s) =
      (if ?f ?a then finsert ?a (ffilter ?f ?s) else ffilter ?f ?s)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_var 2, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("FSet_Utils.arg_cong_ffilter",
     "ALL e:?f. ?p e = ?p' e ==> ffilter ?p ?f = ffilter ?p' ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2), t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("FSet_Utils.fprod_member",
     "[| ?x |\<in>| ?xs; ?y |\<in>| ?ys |]
      ==> (?x, ?y) |\<in>| ?xs |\<times>| ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("FSet_Utils.fBall_ffilter2",
     "[| ?X = ?Y; fBall ?X ?f |] ==> ffilter ?f ?X = ?Y",
     template_implication
      ([template_equation (template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2), t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_var 1))),
    ("FSet_Utils.sorted_hd_Min",
     "[| sorted ?l; ?l ~= [] |] ==> hd ?l = Min (set ?l)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("FSet_Utils.Abs_ffilter",
     "(ffilter ?f ?s = ?s') = ({e: fset ?s. ?f e} = fset ?s')",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_var 0),
       template_equation
        (template_app (template_hole 3, t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("FSet_Utils.card_minus_fMin",
     "?s ~= {||} ==> card (fset ?s - {fMin ?s}) < card (fset ?s)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 7))],
       template_inequation
        (less_than,
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_hole 0))),
         template_app
          (template_hole 5,
           template_app (template_hole 3, template_var 0))))),
    ("FSet_Utils.sorted_distinct_ffold_ord",
     "[| sorted ?l; distinct ?l |]
      ==> ffold_ord ?f (fset_of_list ?l) ?b = fold ?f ?l ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 2)
            ),
        template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_var 2)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("FSet_Utils.ffilter_mono",
     "[| ffilter ?X ?xs = ?f; ALL x:?xs. ?X x = ?Y x |]
      ==> ffilter ?Y ?xs = ?f",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2), t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_var 2),
         template_var 1))),
    ("FSet_Utils.fimage_fprod",
     "(?a, ?b) |\<in>| ?A |\<times>| ?B ==>
      ?f ?a ?b |\<in>| (%(x, y). ?f x y) |`| (?A |\<times>| ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_var 0, template_var 4),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 1, template_app (template_hole 0, t_empty)),
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1)))
           ))),
    ("FSet_Utils.list_eq_hd_tl",
     "[| ?l ~= []; hd ?l = ?h; tl ?l = ?t |] ==> ?l = ?h # ?t",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_equation
         (template_app (template_hole 2, template_var 2), template_var 1),
        template_equation
         (template_app (template_hole 1, template_var 2), template_var 0)],
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("FSet_Utils.size_gt_1",
     "1 < size ?f ==>
      EX e1 e2 f'. e1 ~= e2 & ?f = finsert e1 (finsert e2 f')",
     template_implication
      ([template_inequation
         (less_than, template_hole 8,
          template_app (template_hole 7, template_var 0))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("FSet_Utils.ffold_ord_cons",
     "[| sorted (?h # ?t); distinct (?h # ?t) |]
      ==> ffold_ord ?f (fset_of_list (?h # ?t)) ?b =
          ffold_ord ?f (fset_of_list ?t) (?f ?h ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 2))),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 2)),
           template_app
            (template_app (template_var 1, template_var 3),
             template_var 0))))),
    ("FSet_Utils.fprod_finsert",
     "finsert ?a ?as |\<times>| finsert ?b ?bs =
      finsert (?a, ?b)
       (Pair ?a |`| ?bs |\<union>| (%a. (a, ?b)) |`| ?as |\<union>|
        ?as |\<times>| ?bs)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, t_empty),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, t_empty), template_var 2))),
           template_app
            (template_app (template_hole 7, template_var 2),
             template_var 0))))),
    ("FSet_Utils.size_fsubset_elem",
     "[| EX e. e |\<in>| ?x1.0 & e |\<notin>| ?x2.0;
         \<nexists>e. e |\<in>| ?x2.0 & e |\<notin>| ?x1.0 |]
      ==> size ?x2.0 < size ?x1.0",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_negation
         (template_predicate (template_app (template_hole 5, t_empty)))],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1))))]
