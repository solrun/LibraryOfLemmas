   [("GExp.finite_enumerate_regs", "finite (GExp.enumerate_regs ?g)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("GExp.apply_guards_empty", "apply_guards [] ?s",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("GExp.length_padding", "length (padding ?n) = ?n",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("GExp.max_input_Bc", "GExp.max_input (Bc ?x) = None",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("GExp.length_take_or_pad", "length (take_or_pad ?a ?n) = ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("GExp.max_reg_gNot", "GExp.max_reg (gNot ?x) = GExp.max_reg ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("GExp.enumerate_gexp_inputs_list",
     "EX l. enumerate_gexp_inputs ?g = set l",
     template_predicate (template_app (template_hole 3, t_empty))),
    ("GExp.rev_apply_guards",
     "apply_guards (rev ?G) ?s = apply_guards ?G ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("GExp.gexp_max_input_In",
     "GExp.max_input (In ?v ?l) = AExp.max_input (V ?v)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 1)))),
    ("GExp.gval_gNot", "gval (gNot ?x) ?s = \<not>? gval ?x ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("GExp.max_input_Eq",
     "GExp.max_input (Eq ?a1.0 ?a2.0) =
      max (AExp.max_input ?a1.0) (AExp.max_input ?a2.0)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("GExp.max_input_Gt",
     "GExp.max_input (Gt ?a1.0 ?a2.0) =
      max (AExp.max_input ?a1.0) (AExp.max_input ?a2.0)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("GExp.gexp_max_input_Nor",
     "GExp.max_input (Nor ?g1.0 ?g2.0) =
      max (GExp.max_input ?g1.0) (GExp.max_input ?g2.0)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("GExp.max_input_list_cons",
     "max_input_list (?a # ?G) =
      max (GExp.max_input ?a) (max_input_list ?G)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("GExp.max_reg_Eq",
     "GExp.max_reg (Eq ?a ?b) = max (AExp.max_reg ?a) (AExp.max_reg ?b)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("GExp.max_reg_Gt",
     "GExp.max_reg (Gt ?a ?b) = max (AExp.max_reg ?a) (AExp.max_reg ?b)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("GExp.max_reg_Nor",
     "GExp.max_reg (Nor ?a ?b) = max (GExp.max_reg ?a) (GExp.max_reg ?b)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("GExp.max_reg_list_append",
     "max_reg_list (?as @ ?bs) = max (max_reg_list ?as) (max_reg_list ?bs)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("GExp.max_reg_list_cons",
     "max_reg_list (?a # ?G) = max (GExp.max_reg ?a) (max_reg_list ?G)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("GExp.fold_maybe_or_invalid_base",
     "fold (\<or>?) ?l invalid = invalid",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, t_empty), template_var 0),
         template_hole 0),
       template_hole 0)),
    ("GExp.possible_to_be_in", "?s ~= [] ==> satisfiable (In ?v ?s)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("GExp.apply_guards_condense",
     "EX g. apply_guards ?G ?s = (gval g ?s = true)",
     template_predicate (template_app (template_hole 5, t_empty))),
    ("GExp.fold_maybe_or_true_base_never_false",
     "fold (\<or>?) ?l true ~= false",
     template_negation
      (
         template_equation
          (template_app
            (template_app
              (template_app (template_hole 3, t_empty), template_var 0),
             template_hole 1),
           template_hole 0)
         )),
    ("GExp.apply_guards_singleton",
     "apply_guards [?g] ?s = (gval ?g ?s = true)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_hole 3)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("GExp.gAnd_commute", "gval (gAnd ?a ?b) ?s = gval (gAnd ?b ?a) ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_var 0))),
    ("GExp.gOr_commute", "gval (gOr ?a ?b) ?s = gval (gOr ?b ?a) ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_var 0))),
    ("GExp.apply_guards_false_condense",
     "EX g. (~ apply_guards ?G ?s) = (gval g ?s = false)",
     template_predicate (template_app (template_hole 6, t_empty))),
    ("GExp.nor_equiv", "gval (gNot (gOr ?a ?b)) ?s = gval (Nor ?a ?b) ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("GExp.apply_guards_fold",
     "apply_guards ?G ?s = (gval (fold gAnd ?G (Bc True)) ?s = true)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_var 1),
               template_app (template_hole 2, template_hole 1))),
           template_var 0),
         template_hole 0))),
    ("GExp.apply_guards_foldr",
     "apply_guards ?G ?s = (gval (foldr gAnd ?G (Bc True)) ?s = true)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_var 1),
               template_app (template_hole 2, template_hole 1))),
           template_var 0),
         template_hole 0))),
    ("GExp.apply_guards_append",
     "apply_guards (?a @ ?a') ?s =
      (apply_guards ?a ?s & apply_guards ?a' ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("GExp.fold_apply_guards",
     "(gval (fold gAnd ?G (Bc True)) ?s = true) = apply_guards ?G ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_var 1),
                 template_app (template_hole 3, template_hole 2))),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("GExp.foldr_apply_guards",
     "(gval (foldr gAnd ?G (Bc True)) ?s = true) = apply_guards ?G ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_var 1),
                 template_app (template_hole 3, template_hole 2))),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("GExp.gval_Lt",
     "gval (Lt ?a1.0 ?a2.0) ?s = value_gt (aval ?a2.0 ?s) (aval ?a1.0 ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("GExp.gval_gAnd",
     "gval (gAnd ?g1.0 ?g2.0) ?s = gval ?g1.0 ?s \<and>? gval ?g2.0 ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("GExp.gval_gOr", "gval (gOr ?x ?y) ?r = gval ?x ?r \<or>? gval ?y ?r",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("GExp.gval_fold_gOr_foldr",
     "gval (fold gOr ?l ?g) ?s = gval (foldr gOr ?l ?g) ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 1),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("GExp.max_reg_list_append_singleton",
     "max_reg_list (?as @ [?bs]) =
      max (max_reg_list ?as) (max_reg_list [?bs])",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 4, template_var 1)),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))))),
    ("GExp.gval_Ge",
     "gval (Ge ?a1.0 ?a2.0) ?s =
      \<not>? value_gt (aval ?a2.0 ?s) (aval ?a1.0 ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("GExp.gval_Le",
     "gval (Le ?a1.0 ?a2.0) ?s =
      \<not>? value_gt (aval ?a1.0 ?s) (aval ?a2.0 ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("GExp.gval_Ne",
     "gval (Ne ?a1.0 ?a2.0) ?s =
      \<not>? value_eq (aval ?a1.0 ?s) (aval ?a2.0 ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("GExp.gval_fold_gOr_rev",
     "gval (fold gOr (rev ?l) ?g) ?s = gval (fold gOr ?l ?g) ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("GExp.apply_guards_subset",
     "set ?g' <= set ?g ==> apply_guards ?g ?c --> apply_guards ?g' ?c",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 2),
          template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("GExp.apply_guards_cons",
     "apply_guards (?a # ?G) ?c = (gval ?a ?c = true & apply_guards ?G ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 0)),
                 template_hole 0)),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0))
           ))),
    ("GExp.not_restricted_cons",
     "not_restricted ?v (?g # ?gs) =
      (~ gexp_constrains ?g (V ?v) & not_restricted ?v ?gs)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 2)))),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_var 0)))),
    ("GExp.gval_fold_equiv_gval_foldr",
     "gval (fold gAnd ?G (Bc True)) ?s = gval (foldr gAnd ?G (Bc True)) ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1),
             template_app (template_hole 2, template_hole 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 3),
               template_var 1),
             template_app (template_hole 2, template_hole 1))),
         template_var 0))),
    ("GExp.gval_foldr_equiv_gval_fold",
     "gval (foldr gAnd ?G (Bc True)) ?s = gval (fold gAnd ?G (Bc True)) ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1),
             template_app (template_hole 2, template_hole 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 3),
               template_var 1),
             template_app (template_hole 2, template_hole 1))),
         template_var 0))),
    ("GExp.apply_guards_rearrange",
     "?x : set ?G ==> apply_guards ?G ?s = apply_guards (?x # ?G) ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("GExp.gval_fold_equiv_fold_rev",
     "gval (fold gAnd ?G (Bc True)) ?s =
      gval (fold gAnd (rev ?G) (Bc True)) ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1),
             template_app (template_hole 2, template_hole 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 2, template_hole 1))),
         template_var 0))),
    ("GExp.gval_fold_rev_equiv_fold",
     "gval (fold gAnd (rev ?G) (Bc True)) ?s =
      gval (fold gAnd ?G (Bc True)) ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_app (template_hole 2, template_var 1)),
             template_app (template_hole 1, template_hole 0))),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1),
             template_app (template_hole 1, template_hole 0))),
         template_var 0))),
    ("GExp.apply_guards_subset_append",
     "set ?G <= set ?G' ==>
      apply_guards (?G @ ?G') ?s = apply_guards ?G' ?s",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 2),
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("GExp.gval_fold_In",
     "?l ~= [] ==> gval (In ?v ?l) ?s = gval (fold_In ?v ?l) ?s",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_var 0)))),
    ("GExp.fold_maybe_or_rev",
     "fold (\<or>?) ?l ?b = fold (\<or>?) (rev ?l) ?b",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, t_empty), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, t_empty),
           template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("GExp.apply_guards_double_cons",
     "apply_guards (?y # ?x # ?G) ?s =
      (gval (gAnd ?y ?x) ?s = true & apply_guards ?G ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 3),
                         template_var 2)),
                     template_var 0)),
                 template_hole 0)),
             template_app
              (template_app (template_hole 6, template_var 1),
               template_var 0))
           ))),
    ("GExp.gval_gAnd_True",
     "(gval (gAnd ?g1.0 ?g2.0) ?s = true) =
      (gval ?g1.0 ?s = true & gval ?g2.0 ?s = true)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_var 0)),
                 template_hole 1)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0)),
               template_hole 1))
           ))),
    ("GExp.gval_foldr_true",
     "(gval (foldr gAnd ?G (Bc True)) ?s = true) =
      (ALL g:set ?G. gval g ?s = true)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_var 1),
                 template_app (template_hole 4, template_hole 3))),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         t_empty))),
    ("GExp.gval_fold_gOr",
     "gval (fold gOr (?a # ?l) ?g) ?s =
      gval ?a ?s \<or>? gval (fold gOr ?l ?g) ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 2),
               template_var 1)),
           template_var 0)))),
    ("GExp.fold_Eq_true",
     "ALL v.
         fold (\<or>?) (map (%x. if v = x then true else false) ?vs) true =
         true",
     template_predicate (template_app (template_hole 8, t_empty))),
    ("GExp.gval_foldr_gOr_false",
     "(gval (fold gOr ?l ?g) ?s = false) =
      (ALL g':set (?g # ?l). gval g' ?s = false)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_var 2),
                 template_var 1)),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))),
         t_empty))),
    ("GExp.gval_foldr_gOr_invalid",
     "(gval (fold gOr ?l ?g) ?s = invalid) =
      (EX g':set (?g # ?l). gval g' ?s = invalid)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_var 2),
                 template_var 1)),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))),
         t_empty))),
    ("GExp.gval_take",
     "GExp.max_input ?g < Some ?a ==>
      gval ?g (join_ir ?i ?r) = gval ?g (join_ir (take ?a ?i) ?r)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 5, template_var 3),
          template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0))))),
    ("GExp.must_have_one_false",
     "gval (fold gAnd ?G (Bc True)) ?s = false ==>
      EX g:set ?G. gval g ?s = false",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 1),
                template_app (template_hole 4, template_hole 3))),
            template_var 0),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             t_empty)
           ))),
    ("GExp.fold_invalid_means_one_invalid",
     "gval (fold gAnd ?G (Bc True)) ?s = invalid ==>
      EX g:set ?G. gval g ?s = invalid",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 1),
                template_app (template_hole 4, template_hole 3))),
            template_var 0),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             t_empty)
           ))),
    ("GExp.gval_fold_not_invalid_all_valid_contra",
     "EX g:set ?G. gval g ?s = invalid ==>
      gval (fold gAnd ?G (Bc True)) ?s = invalid",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1),
               template_app (template_hole 1, template_hole 0))),
           template_var 0),
         template_hole 4))),
    ("GExp.gval_In_cons",
     "gval (In ?v (?a # ?as)) ?s =
      gval (Eq (V ?v) (L ?a)) ?s \<or>? gval (In ?v ?as) ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 3),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 3)),
                 template_app (template_hole 0, template_var 2))),
             template_var 0)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 3),
               template_var 1)),
           template_var 0)))),
    ("GExp.gval_fold_gOr_map",
     "gval (fold gOr ?l (Bc False)) ?s =
      fold (\<or>?) (map (%g. gval g ?s) ?l) false",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_hole 6),
               template_var 1),
             template_app (template_hole 5, template_hole 4))),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_app (template_hole 1, t_empty), template_var 1)),
         template_hole 0))),
    ("GExp.gval_fold_cons",
     "gval (fold gAnd (?g # ?gs) (Bc True)) ?s =
      gval ?g ?s \<and>? gval (fold gAnd ?gs (Bc True)) ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1)),
             template_app (template_hole 2, template_hole 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_var 1),
               template_app (template_hole 2, template_hole 1))),
           template_var 0)))),
    ("GExp.fold_maybe_or_cons",
     "fold (\<or>?) (?a # ?l) ?b = ?a \<or>? fold (\<or>?) ?l ?b",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 2, t_empty), template_var 1),
           template_var 0)))),
    ("GExp.gval_fold_rev_false",
     "gval (fold gAnd (rev ?G) (Bc True)) ?s = false ==>
      gval (fold gAnd ?G (Bc True)) ?s = false",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_app (template_hole 3, template_var 1)),
                template_app (template_hole 2, template_hole 1))),
            template_var 0),
          template_hole 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_var 1),
               template_app (template_hole 2, template_hole 1))),
           template_var 0),
         template_hole 0))),
    ("GExp.gval_fold_rev_invalid",
     "gval (fold gAnd (rev ?G) (Bc True)) ?s = invalid ==>
      gval (fold gAnd ?G (Bc True)) ?s = invalid",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_app (template_hole 3, template_var 1)),
                template_app (template_hole 2, template_hole 1))),
            template_var 0),
          template_hole 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_var 1),
               template_app (template_hole 2, template_hole 1))),
           template_var 0),
         template_hole 0))),
    ("GExp.gval_fold_rev_true",
     "gval (fold gAnd (rev ?G) (Bc True)) ?s = true ==>
      gval (fold gAnd ?G (Bc True)) ?s = true",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_app (template_hole 3, template_var 1)),
                template_app (template_hole 2, template_hole 1))),
            template_var 0),
          template_hole 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_var 1),
               template_app (template_hole 2, template_hole 1))),
           template_var 0),
         template_hole 0))),
    ("GExp.gval_fold_not_invalid_all_valid",
     "gval (fold gAnd ?G (Bc True)) ?s ~= invalid ==>
      ALL g:set ?G. gval g ?s ~= invalid",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app
                     (template_app (template_hole 6, template_hole 5),
                      template_var 1),
                    template_app (template_hole 4, template_hole 3))),
                template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             t_empty)
           ))),
    ("GExp.must_have_one_false_contra",
     "ALL g:set ?G. gval g ?s ~= false ==>
      gval (fold gAnd ?G (Bc True)) ?s ~= false",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 1)),
              t_empty)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_var 1),
                   template_app (template_hole 1, template_hole 0))),
               template_var 0),
             template_hole 4)
           ))),
    ("GExp.all_valid_fold",
     "ALL g:set ?G. gval g ?s ~= invalid ==>
      gval (fold gAnd ?G (Bc True)) ?s ~= invalid",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 1)),
              t_empty)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_var 1),
                   template_app (template_hole 1, template_hole 0))),
               template_var 0),
             template_hole 4)
           ))),
    ("GExp.gval_fold_gAnd_append_singleton",
     "gval (fold gAnd (?a @ [?G]) (Bc True)) ?s =
      gval (fold gAnd ?a (Bc True)) ?s \<and>? gval ?G ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_hole 6),
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_hole 3))),
             template_app (template_hole 2, template_hole 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_var 2),
                 template_app (template_hole 2, template_hole 1))),
             template_var 0)),
         template_app
          (template_app (template_hole 8, template_var 1),
           template_var 0)))),
    ("GExp.fold_true_invalid_fold_rev_false_invalid",
     "fold (\<or>?) ?l true = invalid ==>
      fold (\<or>?) (rev ?l) false = invalid",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, t_empty), template_var 0),
            template_hole 3),
          template_hole 2)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, t_empty),
             template_app (template_hole 1, template_var 0)),
           template_hole 0),
         template_hole 2))),
    ("GExp.restricted_once_cons",
     "restricted_once ?v (?g # ?gs) =
      (gexp_constrains ?g (V ?v) & not_restricted ?v ?gs |
       ~ gexp_constrains ?g (V ?v) & restricted_once ?v ?gs)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 2),
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app (template_hole 2, template_var 2))),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app (template_hole 2, template_var 2)))),
           template_app
            (template_app (template_hole 7, template_var 2),
             template_var 0))))),
    ("GExp.x_in_set_fold_eq",
     "?x : set ?ll ==>
      fold (\<or>?) (map (%xa. if ?x = xa then true else false) ?ll) false =
      true",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app (template_hole 8, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, t_empty),
             template_app
              (template_app (template_hole 4, t_empty), template_var 0)),
           template_hole 0),
         template_hole 1))),
    ("GExp.fold_true_fold_false_not_invalid",
     "fold (\<or>?) ?l true = true ==>
      fold (\<or>?) (rev ?l) false ~= invalid",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 6, t_empty), template_var 0),
            template_hole 4),
          template_hole 4)],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 6, t_empty),
                 template_app (template_hole 2, template_var 0)),
               template_hole 1),
             template_hole 0)
           ))),
    ("GExp.gval_In_fold",
     "gval (In ?v ?l) ?s =
      (if ?s ?v = None then invalid
       else gval (fold gOr (map (%x. Eq (V ?v) (L x)) ?l) (Bc False)) ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app (template_var 0, template_var 2)),
                   template_hole 9)),
               template_hole 8),
             template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app
                    (template_app (template_hole 7, template_hole 6),
                     template_app
                      (template_app (template_hole 5, t_empty),
                       template_var 1)),
                   template_app (template_hole 1, template_hole 0))),
               template_var 0))
           ))),
    ("GExp.all_gval_not_false",
     "(ALL g:set ?G. gval g ?s ~= false) =
      (ALL g:set ?G. gval g ?s = true) |
      (EX g:set ?G. gval g ?s = invalid)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_var 1)),
                   t_empty)),
               template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 7, template_var 1)),
                 t_empty))),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 7, template_var 1)),
             t_empty))
         )),
    ("GExp.x_not_in_set_fold_eq",
     "?s ?v ~: Some ` set ?ll ==>
      false =
      fold (\<or>?) (map (%x. if ?s ?v = Some x then true else false) ?ll)
       false",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_var 2, template_var 1)),
                  template_app
                   (template_app (template_hole 10, template_hole 9),
                    template_app (template_hole 8, template_var 0)))
                )
            )],
       template_equation
        (template_hole 6,
         template_app
          (template_app
            (template_app (template_hole 5, t_empty),
             template_app
              (template_app (template_hole 3, t_empty), template_var 0)),
           template_hole 6)))),
    ("GExp.apply_guards_reg_some_superset",
     "[| ALL a. ?r $ a ~= None --> ?r $ a = ?r' $ a;
         apply_guards ?G (join_ir ?i ?r) |]
      ==> apply_guards ?G (join_ir ?i ?r')",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app
               (template_app (template_hole 0, template_var 0),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("GExp.one_false_all_valid_false",
     "[| EX g:set ?G. gval g ?s = false;
         ALL g:set ?G. gval g ?s ~= invalid |]
      ==> gval (fold gAnd ?G (Bc True)) ?s = false",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 1)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 10, template_var 1)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1),
               template_app (template_hole 1, template_hole 0))),
           template_var 0),
         template_hole 7))),
    ("GExp.gval_foldr_gOr_true",
     "(gval (fold gOr ?l ?g) ?s = true) =
      ((EX g':set (?g # ?l). gval g' ?s = true) &
       (ALL g':set (?g # ?l). gval g' ?s ~= invalid))",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_var 2),
                 template_var 1)),
             template_var 0)),
         template_hole 7),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 2))),
             t_empty)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 2))),
           t_empty)))),
    ("GExp.gval_unfold_first",
     "gval (fold gOr (map (%x. Eq (V ?v) (L x)) ?ls) (Eq (V ?v) (L ?l)))
       ?s =
      gval (fold gOr (map (%x. Eq (V ?v) (L x)) (?l # ?ls)) (Bc False)) ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_hole 7),
               template_app
                (template_app (template_hole 6, t_empty), template_var 2)),
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 3)),
               template_app (template_hole 3, template_var 1)))),
         template_var 0),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_hole 7),
               template_app
                (template_app (template_hole 6, t_empty),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 2))),
             template_app (template_hole 1, template_hole 0))),
         template_var 0))),
    ("GExp.gval_reg_some_superset",
     "[| ALL a. ?r $ a ~= None --> ?r $ a = ?r' $ a; ?x ~= invalid;
         gval ?a (join_ir ?i ?r) = ?x |]
      ==> gval ?a (join_ir ?i ?r') = ?x",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_negation
         (template_equation (template_var 2, template_hole 2)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 1),
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 4)),
          template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3)),
         template_var 2))),
    ("GExp.gval_fold_take",
     "[| max_input_list ?G < Some ?a; ?a <= length ?i;
         max_input_list ?G <= Some (length ?i) |]
      ==> gval (fold gAnd ?G (Bc True)) (join_ir ?i ?r) =
          gval (fold gAnd ?G (Bc True)) (join_ir (take ?a ?i) ?r)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 12, template_var 3),
          template_app (template_hole 11, template_var 2)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 9, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 12, template_var 3),
          template_app
           (template_hole 11,
            template_app (template_hole 9, template_var 1)))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_var 3),
               template_app (template_hole 3, template_hole 2))),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_var 3),
               template_app (template_hole 3, template_hole 2))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)))))]
