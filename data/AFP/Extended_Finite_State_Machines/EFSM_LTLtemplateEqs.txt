   [("EFSM_LTL.shd_state_is_none",
     "state_eq None (make_full_observation ?e None ?r ?p ?t)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_hole 0),
                 template_var 2),
               template_var 1),
             template_var 0))),
       template_hole 0)),
    ("EFSM_LTL.join_iro_R", "join_iro ?i ?r ?p (Rg ?n) = ?r $ ?n",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 0))),
    ("EFSM_LTL.alw_ev", "alw ?f = (%xs. ~ ev (%s. ~ ?f s) xs)",
     template_equation
      (template_app (template_hole 2, template_var 0), t_empty)),
    ("EFSM_LTL.smap_statename_None",
     "smap statename (make_full_observation ?e None ?r ?p ?i) =
      sconst None",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_hole 2),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_hole 2))),
    ("EFSM_LTL.state_eq_holds",
     "state_eq ?s = holds (%x. statename x = ?s)",
     template_equation (t_empty, template_app (template_hole 0, t_empty))),
    ("EFSM_LTL.snth_sconst", "(ALL i. ?s !! i = ?h) = (?s = sconst ?h)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("EFSM_LTL.alw_sconst", "alw (%xs. shd xs = ?h) ?t = (?t = sconst ?h)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, t_empty), template_var 0)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 1)))),
    ("EFSM_LTL.alw_state_eq_smap",
     "alw (state_eq ?s) ?ss = alw (%ss. shd ss = ?s) (smap statename ?ss)",
     template_equation
      (template_app
        (template_app (template_hole 6, t_empty), template_var 0),
       template_app
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app (template_hole 0, template_hole 4),
           template_var 0)))),
    ("EFSM_LTL.watch_label",
     "label_eq ?l (watch ?e ?t) = (fst (shd ?t) = String.implode ?l)",
     template_bimplication
      (template_equation
        (template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 6, template_var 2),
                       template_app (template_hole 5, template_hole 4)),
                     template_hole 3),
                   template_hole 2),
                 template_var 1)))),
         template_app (template_hole 1, template_var 0)),
       template_equation
        (template_app
          (template_hole 9, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("EFSM_LTL.unfold_observe_none",
     "make_full_observation ?e None ?d ?p ?t =
      (| statename = None, datastate = ?d, action = shd ?t,
         output = ?p |) ##
      make_full_observation ?e None ?d [] (stl ?t)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 7, template_var 3),
               template_hole 6),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_hole 6),
                   template_var 2),
                 template_app (template_hole 3, template_var 0)),
               template_var 1),
             template_hole 2)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_var 3),
                 template_hole 6),
               template_var 2),
             template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("EFSM_LTL.action_components",
     "(label_eq ?l ?s & input_eq ?i ?s) =
      (action (shd ?s) = (String.implode ?l, ?i))",
     template_bimplication
      (template_dunno,
       template_equation
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 2)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 4, template_var 1)),
           template_var 0)))),
    ("EFSM_LTL.ltl_step_alt",
     "ltl_step ?e (Some ?s) ?r ?t =
      (let possibilities = possible_steps ?e ?s ?r (fst ?t) (snd ?t)
       in if possibilities = {||} then (None, [], ?r)
          else let (s', t') = SOME x. x |\<in>| possibilities
               in (Some s', evaluate_outputs t' (snd ?t) ?r,
                   evaluate_updates t' (snd ?t) ?r))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 21, template_var 3),
             template_app (template_hole 20, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 19,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 18, template_var 3),
                   template_var 2),
                 template_var 1),
               template_app (template_hole 17, template_var 0)),
             template_app (template_hole 16, template_var 0))),
         t_empty)))]
