Loading theory "Draft.Instantiate_Existentials" (required by "Draft.GraphsTemplates" via "Draft.Graphs" via "Draft.More_List")
Loading theory "Draft.Basic" (required by "Draft.GraphsTemplates" via "Draft.Graphs" via "Draft.Stream_More" via "Draft.Sequence_LTL" via "Draft.Sequence")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.GraphsTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Templates" (required by "Draft.GraphsTemplates" via "Draft.ExtrEqs")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
val inst_existentials_tac = fn: Proof.context -> term list -> int -> tactic
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
### theory "Draft.Instantiate_Existentials"
### 0.047s elapsed time, 0.222s cpu time, 0.000s GC time
Loading theory "Draft.More_List" (required by "Draft.GraphsTemplates" via "Draft.Graphs")
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
consts
  alternate :: "('a => 'a) => ('a => 'a) => nat => 'a => 'a"
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "Draft.Basic"
### 0.076s elapsed time, 0.337s cpu time, 0.000s GC time
Loading theory "Draft.Sequence" (required by "Draft.GraphsTemplates" via "Draft.Graphs" via "Draft.Stream_More" via "Draft.Sequence_LTL")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.089s elapsed time, 0.391s cpu time, 0.000s GC time
### theory "HOL-Library.Function_Algebras"
### 0.153s elapsed time, 0.565s cpu time, 0.049s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.GraphsTemplates" via "Draft.ExtrEqs")
### theory "Draft.More_List"
### 0.107s elapsed time, 0.349s cpu time, 0.049s GC time
Found termination order: "(%p. length (fst (snd p))) <*mlex*> {}"
consts
  sscan :: "('a => 'b => 'b) => 'a stream => 'b => 'b stream"
Proofs for coinductive predicate(s) "sdistinct"
  Proving monotonicity ...
Proofs for coinductive predicate(s) "sascending"
  Proving monotonicity ...
Proofs for coinductive predicate(s) "sdescending"
  Proving monotonicity ...
### theory "Draft.Sequence"
### 0.527s elapsed time, 1.156s cpu time, 0.134s GC time
Loading theory "Draft.Sequence_LTL" (required by "Draft.GraphsTemplates" via "Draft.Graphs" via "Draft.Stream_More")
### theory "HOL-Library.BigO"
### 0.631s elapsed time, 1.340s cpu time, 0.174s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.GraphsTemplates")
### theory "Draft.Sequence_LTL"
### 0.381s elapsed time, 0.805s cpu time, 0.089s GC time
Loading theory "Draft.Stream_More" (required by "Draft.GraphsTemplates" via "Draft.Graphs")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.510s elapsed time, 1.052s cpu time, 0.094s GC time
ev ?\<phi> ?xs ==> ?\<phi> (sdrop (wait ?\<phi> ?xs) ?xs)
### theory "Draft.Stream_More"
### 0.511s elapsed time, 0.892s cpu time, 0.149s GC time
Loading theory "Draft.Graphs" (required by "Draft.GraphsTemplates")
locale Graph_Defs
  fixes E :: "'a => 'a => bool"
Proofs for inductive predicate(s) "steps"
  Proving monotonicity ...
Proofs for coinductive predicate(s) "run"
  Proving monotonicity ...
locale Graph_Start_Defs
  fixes E :: "'a => 'a => bool"
    and s\<^sub>0 :: "'a"
locale Subgraph_Defs
  fixes E :: "'a => 'a => bool"
    and E' :: "'a => 'a => bool"
locale Subgraph_Start_Defs
  fixes E :: "'a => 'a => bool"
    and s\<^sub>0 :: "'a"
    and E' :: "'a => 'a => bool"
locale Subgraph
  fixes E :: "'a => 'a => bool"
    and E' :: "'a => 'a => bool"
  assumes "Subgraph E E'"
locale Subgraph_Start
  fixes E :: "'a => 'a => bool"
    and s\<^sub>0 :: "'a"
    and E' :: "'a => 'a => bool"
  assumes "Subgraph_Start E E'"
locale Subgraph_Node_Defs
  fixes E :: "'a => 'a => bool"
    and V :: "'a => bool"
locale Subgraph_Node_Defs_Notation
  fixes E :: "'a => 'a => bool"
    and V :: "'a => bool"
locale Graph_Start_Defs
  fixes E :: "'a => 'a => bool"
    and s\<^sub>0 :: "'a"
bundle graph_automation
bundle graph_automation_aggressive
bundle subgraph_automation
locale Graph_Invariant
  fixes E :: "'a => 'a => bool"
    and P :: "'a => bool"
  assumes "Graph_Invariant E P"
locale Graph_Invariants
  fixes E :: "'a => 'a => bool"
    and P :: "'a => bool"
    and Q :: "'a => bool"
  assumes "Graph_Invariants E P Q"
locale Graph_Invariant_Start
  fixes E :: "'a => 'a => bool"
    and s\<^sub>0 :: "'a"
    and P :: "'a => bool"
  assumes "Graph_Invariant_Start E s\<^sub>0 P"
locale Graph_Invariant_Strong
  fixes E :: "'a => 'a => bool"
    and P :: "'a => bool"
  assumes "Graph_Invariant_Strong E P"
locale Simulation_Defs
  fixes A :: "'a => 'a => bool"
    and B :: "'b => 'b => bool"
    and sim :: "'a => 'b => bool"  (infixr \<open>\<sim>\<close> 60)
locale Simulation
  fixes A :: "'a => 'a => bool"
    and B :: "'b => 'b => bool"
    and sim :: "'a => 'b => bool"  (infixr \<open>\<sim>\<close> 60)
  assumes "Simulation A B (\<sim>)"
locale Simulation_Invariant
  fixes A :: "'a => 'a => bool"
    and B :: "'b => 'b => bool"
    and sim :: "'a => 'b => bool"  (infixr \<open>\<sim>\<close> 60)
    and PA :: "'a => bool"
    and PB :: "'b => bool"
  assumes "Simulation_Invariant A B (\<sim>) PA PB"
locale Simulation_Invariants
  fixes A :: "'a => 'a => bool"
    and B :: "'b => 'b => bool"
    and sim :: "'a => 'b => bool"  (infixr \<open>\<sim>\<close> 60)
    and PA :: "'a => bool"
    and QA :: "'a => bool"
    and PB :: "'b => bool"
    and QB :: "'b => bool"
  assumes "Simulation_Invariants A B (\<sim>) PA QA PB QB"
locale Bisimulation
  fixes A :: "'a => 'a => bool"
    and B :: "'b => 'b => bool"
    and sim :: "'a => 'b => bool"  (infixr \<open>\<sim>\<close> 60)
  assumes "Bisimulation A B (\<sim>)"
locale Bisimulation_Invariant
  fixes A :: "'a => 'a => bool"
    and B :: "'b => 'b => bool"
    and sim :: "'a => 'b => bool"  (infixr \<open>\<sim>\<close> 60)
    and PA :: "'a => bool"
    and PB :: "'b => bool"
  assumes "Bisimulation_Invariant A B (\<sim>) PA PB"
locale Bisimulation_Invariants
  fixes A :: "'a => 'a => bool"
    and B :: "'b => 'b => bool"
    and sim :: "'a => 'b => bool"  (infixr \<open>\<sim>\<close> 60)
    and PA :: "'a => bool"
    and QA :: "'a => bool"
    and PB :: "'b => bool"
    and QB :: "'b => bool"
  assumes "Bisimulation_Invariants A B (\<sim>) PA QA PB QB"
### theory "Draft.Graphs"
### 4.477s elapsed time, 5.127s cpu time, 1.009s GC time
Loading theory "Draft.GraphsTemplates"
val templateLemmas =
   [("Graphs.Bisimulation_Invariant_Bisimulation_Invariants",
     "Bisimulation_Invariant ?A ?B ?sim ?PA ?PB ==>
      Bisimulation_Invariants ?A ?B ?sim ?PA ?PA ?PB ?PB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 1),
               template_var 0),
             template_var 0)
           ))),
    ("Graphs.Bisimulation_Invariant_sim_replace",
     "[| Bisimulation_Invariant ?A ?B ?sim ?PA ?PB;
         !!a b. [| ?PA a; ?PB b |] ==> ?sim a b = ?sim' a b |]
      ==> Bisimulation_Invariant ?A ?B ?sim' ?PA ?PB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 5),
                   template_var 4),
                 template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("Graphs.Bisimulation_Invariant_composition",
     "[| Bisimulation_Invariant ?A ?B ?sim1.0 ?PA ?PB;
         Bisimulation_Invariant ?B ?C ?sim2.0 ?PB ?PC |]
      ==> Bisimulation_Invariant ?A ?C
           (%a c. EX b. ?PB b & ?sim1.0 a b & ?sim2.0 b c) ?PA ?PC",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 6),
                    template_var 2),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 7),
                   template_var 2),
                 t_empty),
               template_var 4),
             template_var 0)
           ))),
    ("Graphs.Bisimulation_Invariant_Invariants_composition",
     "[| Bisimulation_Invariant ?A ?B ?sim1.0 ?PA ?PB;
         Bisimulation_Invariants ?B ?C ?sim2.0 ?PB ?QB ?PC ?QC |]
      ==> Bisimulation_Invariants ?A ?C
           (%a c. EX b. ?PB b & ?sim1.0 a b & ?sim2.0 b c) ?PA ?PA ?PC ?QC",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 9),
                    template_var 8),
                  template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 8),
                        template_var 4),
                      template_var 3),
                    template_var 5),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 9),
                       template_var 4),
                     t_empty),
                   template_var 6),
                 template_var 6),
               template_var 1),
             template_var 0)
           ))),
    ("Graphs.Bisimulation_Invariants_composition",
     "[| Bisimulation_Invariants ?A ?B ?sim1.0 ?PA ?QA ?PB ?QB;
         Bisimulation_Invariants ?B ?C ?sim2.0 ?PB ?QB ?PC ?QC |]
      ==> Bisimulation_Invariants ?A ?C
           (%a c. EX b. ?PB b & ?sim1.0 a b & ?sim2.0 b c) ?PA ?QA ?PC ?QC",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 9),
                        template_var 3),
                      template_var 2),
                    template_var 5),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 10),
                       template_var 3),
                     t_empty),
                   template_var 7),
                 template_var 6),
               template_var 1),
             template_var 0)
           ))),
    ("Graphs.Bisimulation_Invariant_strengthen_post",
     "[| Bisimulation_Invariant ?A ?B ?sim ?PA ?PB;
         !!a b. [| ?PA' a; ?PA b; ?A a b |] ==> ?PA' b;
         !!a. ?PA' a ==> ?PA a |]
      ==> Bisimulation_Invariant ?A ?B ?sim ?PA' ?PB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 0, t_empty)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 0),
             template_var 1)
           ))),
    ("Graphs.Bisimulation_Invariant_strengthen_post'",
     "[| Bisimulation_Invariant ?A ?B ?sim ?PA ?PB;
         !!a b. [| ?PB' a; ?PB b; ?B a b |] ==> ?PB' b;
         !!a. ?PB' a ==> ?PB a |]
      ==> Bisimulation_Invariant ?A ?B ?sim ?PA ?PB'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 0, t_empty)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Graphs.Simulation_Invariant_strengthen_post",
     "[| Simulation_Invariant ?A ?B ?sim ?PA ?PB;
         !!a b. [| ?PA a; ?PA b; ?A a b |] ==> ?PA' b;
         !!a. ?PA' a ==> ?PA a |]
      ==> Simulation_Invariant ?A ?B ?sim ?PA' ?PB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 0, t_empty)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 0),
             template_var 1)
           ))),
    ("Graphs.Simulation_Invariant_strengthen_post'",
     "[| Simulation_Invariant ?A ?B ?sim ?PA ?PB;
         !!a b. [| ?PB a; ?PB b; ?B a b |] ==> ?PB' b;
         !!a. ?PB' a ==> ?PB a |]
      ==> Simulation_Invariant ?A ?B ?sim ?PA ?PB'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 0, t_empty)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Graphs.Simulation_Invariants_strengthen_post",
     "[| Simulation_Invariants ?A ?B ?sim ?PA ?QA ?PB ?QB;
         !!a b. [| ?PA a; ?QA b; ?A a b |] ==> ?QA' b;
         !!a. ?QA' a ==> ?QA a |]
      ==> Simulation_Invariants ?A ?B ?sim ?PA ?QA' ?PB ?QB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 0, t_empty)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("Graphs.Simulation_Invariants_strengthen_post'",
     "[| Simulation_Invariants ?A ?B ?sim ?PA ?QA ?PB ?QB;
         !!a b. [| ?PB a; ?QB b; ?B a b |] ==> ?QB' b;
         !!a. ?QB' a ==> ?QB a |]
      ==> Simulation_Invariants ?A ?B ?sim ?PA ?QA ?PB ?QB'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 0, t_empty)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Graphs.Bisimulation_Invariants_filter",
     "[| Bisimulation_Invariants ?A ?B ?sim ?PA ?QA ?PB ?QB;
         !!a b. [| ?QA a; ?QB b |] ==> ?FA a = ?FB b;
         !!a b. (?A a b & ?FA b) = ?A' a b;
         !!a b. (?B a b & ?FB b) = ?B' a b |]
      ==> Bisimulation_Invariants ?A' ?B' ?sim ?PA ?QA ?PB ?QB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 1),
                       template_var 0),
                     template_var 8),
                   template_var 7),
                 template_var 6),
               template_var 5),
             template_var 4)
           ))),
    ("Graphs.Bisimulation_Invariant_filter",
     "[| Bisimulation_Invariant ?A ?B ?sim ?PA ?PB;
         !!a b. [| ?sim a b; ?PA a; ?PB b |] ==> ?FA a = ?FB b;
         !!a b. (?A a b & ?FA b) = ?A' a b;
         !!a b. (?B a b & ?FB b) = ?B' a b |]
      ==> Bisimulation_Invariant ?A' ?B' ?sim ?PA ?PB",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 8),
                    template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 0),
                 template_var 6),
               template_var 5),
             template_var 4)
           )))]:
   (string * thm * template) list
### theory "Draft.GraphsTemplates"
### 0.384s elapsed time, 0.532s cpu time, 0.058s GC time
val it = (): unit
