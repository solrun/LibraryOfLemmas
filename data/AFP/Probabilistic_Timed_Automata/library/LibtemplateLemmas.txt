   [("Lib.alw_True", "alw (%x. True) ?\<omega>",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)
         )),
    ("Lib.pred_stream_sconst", "pred_stream ((=) ?x) (sconst ?x)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))
         )),
    ("Lib.pred_stream_iff", "pred_stream ?P ?s = Ball (sset ?s) ?P",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("Lib.pred_stream_stl",
     "pred_stream ?\<phi> ?xs --> pred_stream ?\<phi> (stl ?xs)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0)))
         )),
    ("Lib.measurable_pred_stream",
     "Measurable.pred (stream_space (count_space UNIV)) (pred_stream ?P)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 0)),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2))),
             template_app (template_hole 1, template_hole 0)))
         )),
    ("Lib.frac_le_self", "(0::?'a) <= ?x ==> frac ?x <= ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_var 0))),
    ("Lib.stream_all2_refl",
     "stream_all2 ?P ?x ?x = pred_stream (%x. ?P x x) ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_var 0),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Lib.sset_sdrop", "?x : sset (sdrop ?i ?xs) ==> ?x : sset ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Lib.measure_pmf_eq_1_iff",
     "(emeasure (measure_pmf ?\<mu>) {?x} = 1) = (?\<mu> = return_pmf ?x)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1)),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_hole 3)),
         template_hole 2),
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Lib.HLD_mono",
     "[| HLD ?R ?\<omega>; ?R <= ?S |] ==> HLD ?S ?\<omega>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), template_var 1)
           ))),
    ("Lib.alw_Stream", "alw ?P (?x ## ?s) = (?P (?x ## ?s) & alw ?P ?s)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_var 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Lib.alw_HLD_smap",
     "alw (HLD ?S) ?\<omega> ==> alw (HLD (?f ` ?S)) (smap ?f ?\<omega>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 2))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Lib.prop_nth_stl",
     "ALL i. ?P (?xs !! i) ==> ALL i. ?P (stl ?xs !! i)",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Lib.ev_sdropD",
     "[| ev ?P ?xs; !!i. ?P (sdrop i ?xs) ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Lib.alw_conjI",
     "[| alw ?P ?xs; alw ?Q ?xs |] ==> alw (%xs. ?P xs & ?Q xs) ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 1)
           ))),
    ("Lib.measurable_eq_stream_space",
     "?f : ?M \<rightarrow>\<^sub>M stream_space (count_space UNIV) ==>
      Measurable.pred ?M (%x. ?f x = ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_app (template_hole 8, template_var 1),
                template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_hole 5))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 1, template_hole 0)))
           ))),
    ("Lib.measurable_alw_stream",
     "Measurable.pred (stream_space (count_space UNIV)) ?P ==>
      Measurable.pred (stream_space (count_space UNIV)) (alw ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_hole 3))),
                template_app (template_hole 2, template_hole 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 0, template_var 0)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_hole 3))),
               template_app (template_hole 2, template_hole 1)))
           ))),
    ("Lib.frac_le_1I",
     "[| (0::?'a) <= ?x; ?x <= (1::?'a); ?x <= ?y |] ==> frac ?x <= ?y",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_hole 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("Lib.AE_conj",
     "almost_everywhere ?M ?Q ==>
      almost_everywhere ?M ?P = (AE x in ?M. ?P x & ?Q x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app (template_hole 2, template_var 1)),
         template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 2, template_var 1))))),
    ("Lib.prop_nth_sdrop",
     "ALL i>=?j. ?P (?\<omega> !! i) ==>
      ALL i. ?P (sdrop ?j ?\<omega> !! i)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Lib.frac_le_1I'",
     "[| (0::?'a) <= ?x; ?x <= ?y; ?y < (1::?'a) |] ==> frac ?x <= frac ?y",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_inequation (less_than, template_var 0, template_hole 1)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Lib.alw_disjoint_ccontr",
     "[| alw (HLD ?S) ?\<omega>; ev (alw (HLD ?R)) ?\<omega>;
         ?R Int ?S = {} |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 0))),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 0), template_var 2),
          template_hole 1)],
       template_predicate (template_hole 0))),
    ("Lib.collect_pair_finite'",
     "finite {(x, y). ?P x y} ==> finite {(x, y). ?P x y & ?R x y}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_hole 2, template_app (template_hole 1, t_empty)))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2, template_app (template_hole 1, t_empty)))
           ))),
    ("Lib.prop_nth_sdrop_pair",
     "ALL i. ?P (?\<omega> !! i) (?\<omega>' !! i) ==>
      ALL i. ?P (sdrop ?j ?\<omega> !! i) (sdrop ?j ?\<omega>' !! i)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Lib.ev_neq_start_implies_ev_neq",
     "ev (Not o HLD {?y}) (?y ## ?xs) ==>
      ev (%xs. shd xs ~= shd (stl xs)) (?y ## ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 1),
                      template_hole 4)))),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 9, t_empty),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))
           ))),
    ("Lib.holds_untilD",
     "[| (holds ?P until holds ?Q) ?xs; ALL i<=?j. ~ ?Q (?xs !! i) |]
      ==> ?P (?xs !! ?j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 3)),
                template_app (template_hole 5, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_var 3,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Lib.finite_imageI'",
     "finite {(x, y). ?P x y} ==> finite {?f x y |x y. ?P x y}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_hole 7, template_app (template_hole 6, t_empty)))
            )],
       template_predicate
        (
           template_app
            (template_hole 5, template_app (template_hole 4, t_empty))
           ))),
    ("Lib.collect_pair_finite''",
     "finite {(x, y). ?P x & ?Q y} ==>
      finite {(x, y). ?P x & ?Q y & ?R x y}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_hole 2, template_app (template_hole 1, t_empty)))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2, template_app (template_hole 1, t_empty)))
           ))),
    ("Lib.alw_ev_cong",
     "[| alw ?P ?xs; !!x. ?P x ==> ?S x = ?R x |]
      ==> alw (ev ?S) ?xs = alw (ev ?R) ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 0, template_var 1)),
           template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 0, template_var 0)),
           template_var 2)))),
    ("Lib.list_hd_lastD",
     "[| 1 < length ?xs; !!x y ys. ?xs = x # ys @ [y] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation
         (less_than, template_hole 7,
          template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Lib.nat_eventually_critical",
     "[| ?P ?i; ~ ?P ?j; ?i < ?j |] ==> EX k>=?i. ?P k & ~ ?P (Suc k)",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1)),
        template_negation
         (
            template_predicate
             (template_app (template_var 2, template_var 0))
            ),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Lib.collect_pair_finite",
     "[| finite {x. ?P x}; finite {x. ?Q x} |]
      ==> finite {(x, y). ?P x & ?Q y & ?R x y}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7, template_app (template_hole 6, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_hole 5, template_app (template_hole 4, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2, template_app (template_hole 1, t_empty)))
           ))),
    ("Lib.pmf_map_pmf_cong",
     "(!!x. x : set_pmf ?\<mu> ==> (?f x = ?y1.0) = (?g x = ?y2.0)) ==>
      pmf (map_pmf ?f ?\<mu>) ?y1.0 = pmf (map_pmf ?g ?\<mu>) ?y2.0",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 4)),
           template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 4)),
           template_var 0)))),
    ("Lib.finite_imageI''",
     "finite (?A \<times> ?B) ==>
      finite {?f x y |x y. x : ?A & y : ?B & ?R x y}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_var 3), t_empty))
            )],
       template_predicate
        (
           template_app
            (template_hole 7, template_app (template_hole 6, t_empty))
           ))),
    ("Lib.AE_all_imp_countable",
     "countable {x. ?Q x} ==>
      (AE x in ?M. ALL y. ?Q y --> ?P x y) =
      (ALL y. ?Q y --> (AE x in ?M. ?P x y))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6, template_app (template_hole 5, t_empty))
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 0, template_var 0)),
         template_app (template_hole 2, t_empty)))),
    ("Lib.alw_ev_HLD_cong",
     "[| alw (HLD ?P) ?xs; !!x. x : ?P ==> (x : ?S) = (x : ?R) |]
      ==> infs ?S ?xs = infs ?R ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 3)),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 0,
               template_app (template_hole 4, template_var 1))),
           template_var 2),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 0,
               template_app (template_hole 4, template_var 0))),
           template_var 2)))),
    ("Lib.nat_eventually_critical_path",
     "[| ?P ?i; ~ ?P ?j; ?i < ?j |]
      ==> EX k>?i. k <= ?j & ~ ?P k & (ALL m>=?i. m < k --> ?P m)",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1)),
        template_negation
         (
            template_predicate
             (template_app (template_var 2, template_var 0))
            ),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Lib.SUP_eq_and_INF_eq",
     "[| !!i. i : ?A ==> EX j:?B. ?f i = ?g j;
         !!j. j : ?B ==> EX i:?A. ?g j = ?f i |]
      ==> \<Squnion> (?f ` ?A) = \<Squnion> (?g ` ?B) &
          \<Sqinter> (?f ` ?A) = \<Sqinter> (?g ` ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_var 3))),
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 2)))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 3))),
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 2))))
           )))]
