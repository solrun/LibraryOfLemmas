   [("Finiteness.select_finite", "finite ?S ==> finite (select ?f ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Finiteness.R", "[| finite ?A; ?A = ?B |] ==> finite ?B",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("Finiteness.inj_finite_single", "inj ?f ==> finite {y. ?x = ?f y}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_hole 2, template_app (template_hole 1, t_empty))
           ))),
    ("Finiteness.inj_finite_single'", "inj ?f ==> finite {z. ?f z = ?x}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_hole 2, template_app (template_hole 1, t_empty))
           ))),
    ("Finiteness.finite_ex_and1",
     "finite {b. EX a. ?P a b} ==> finite {b. EX a. ?P a b & ?Q a b}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3, template_app (template_hole 2, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_hole 3, template_app (template_hole 2, t_empty))
           ))),
    ("Finiteness.finite_ex_and2",
     "finite {b. EX a. ?Q a b} ==> finite {b. EX a. ?P a b & ?Q a b}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3, template_app (template_hole 2, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_hole 3, template_app (template_hole 2, t_empty))
           ))),
    ("Finiteness.collect_pair_finite'",
     "finite {(x, y). ?P x y} ==> finite {(x, y). ?P x y & ?R x y}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_hole 2, template_app (template_hole 1, t_empty)))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2, template_app (template_hole 1, t_empty)))
           ))),
    ("Finiteness.finite_imageI'",
     "finite {(x, y). ?P x y} ==> finite {?f x y |x y. ?P x y}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_hole 7, template_app (template_hole 6, t_empty)))
            )],
       template_predicate
        (
           template_app
            (template_hole 5, template_app (template_hole 4, t_empty))
           ))),
    ("Finiteness.collect_pair_finite''",
     "finite {(x, y). ?P x & ?Q y} ==>
      finite {(x, y). ?P x & ?Q y & ?R x y}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_hole 2, template_app (template_hole 1, t_empty)))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2, template_app (template_hole 1, t_empty)))
           ))),
    ("Finiteness.collect_pair_finite",
     "[| finite {x. ?P x}; finite {x. ?Q x} |]
      ==> finite {(x, y). ?P x & ?Q y & ?R x y}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7, template_app (template_hole 6, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_hole 5, template_app (template_hole 4, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2, template_app (template_hole 1, t_empty)))
           ))),
    ("Finiteness.pairwise_finiteI",
     "[| finite {b. EX a. ?P a b}; finite {a. EX b. ?P a b} |]
      ==> finite {(a, b). ?P a b}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8, template_app (template_hole 7, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_hole 5, template_app (template_hole 4, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1, template_app (template_hole 0, t_empty)))
           ))),
    ("Finiteness.finite_imageI''",
     "finite (?A \<times> ?B) ==>
      finite {?f x y |x y. x : ?A & y : ?B & ?R x y}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_var 3), t_empty))
            )],
       template_predicate
        (
           template_app
            (template_hole 7, template_app (template_hole 6, t_empty))
           ))),
    ("Finiteness.pairwise_finiteI3",
     "[| finite {b. EX a c. ?P a b c}; finite {a. EX b c. ?P a b c};
         finite {c. EX a b. ?P a b c} |]
      ==> finite {(a, b, c). ?P a b c}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 12, template_app (template_hole 11, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_hole 8, template_app (template_hole 7, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_hole 5, template_app (template_hole 4, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2, template_app (template_hole 1, t_empty)))
           ))),
    ("Finiteness.finite_set_of_finite_funs2",
     "[| finite ?A; finite ?B; finite ?C |]
      ==> finite
           {f. ALL x y.
                  (x : ?A & y : ?B --> f x y : ?C) &
                  (x ~: ?A --> f x y = ?d) & (y ~: ?B --> f x y = ?d)}",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 3)),
        template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_predicate
         (template_app (template_hole 11, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 10, template_app (template_hole 9, t_empty))
           ))),
    ("Finiteness.pairwise_finiteI4",
     "[| finite {b. EX a c d. ?P a b c d}; finite {a. EX b c d. ?P a b c d};
         finite {c. EX a b d. ?P a b c d};
         finite {d. EX a b c. ?P a b c d} |]
      ==> finite {(a, b, c, d). ?P a b c d}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 16, template_app (template_hole 15, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_hole 11, template_app (template_hole 10, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_hole 8, template_app (template_hole 7, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_hole 6, template_app (template_hole 5, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_hole 3, template_app (template_hole 2, t_empty)))
           )))]
