   [("Basic.finite_subset", "[| ?A <= ?B; finite ?B |] ==> finite ?A",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Basic.infinite_subset", "[| infinite ?A; ?A <= ?B |] ==> infinite ?B",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 1))
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_negation
        (
           template_predicate
            (template_app (template_hole 1, template_var 0))
           ))),
    ("Basic.alternate_Suc",
     "alternate ?f ?g (Suc ?k) =
      (if even ?k then ?f else ?g) o alternate ?f ?g ?k",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_var 2), template_var 1),
         template_app (template_hole 6, template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_hole 0))),
                   template_var 0)),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Basic.finite_set_of_finite_maps'",
     "[| finite ?A; finite ?B |] ==> finite {m. dom m <= ?A & ran m <= ?B}",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 6, template_app (template_hole 5, t_empty))
           ))),
    ("Basic.GreatestI",
     "[| ?P ?k; !!k. ?P k ==> k <= ?l |] ==> ?P (GREATEST k. ?P k)",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_var 2, template_app (template_hole 0, t_empty))
           ))),
    ("Basic.alternate_antimono",
     "[| !!x. ?f x <= x; !!x. ?g x <= x |] ==> decseq (alternate ?f ?g)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Basic.Greatest_le",
     "[| ?P ?k; !!k. ?P k ==> k <= ?l |] ==> ?k <= (GREATEST k. ?P k)",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_inequation
        (less_equals, template_var 1,
         template_app (template_hole 0, t_empty)))),
    ("Basic.Greatest_not_less",
     "[| (GREATEST k. ?P k) < ?k; !!k. ?P k ==> k <= ?l |] ==> ~ ?P ?k",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 3, t_empty),
          template_var 1),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_negation
        (
           template_predicate
            (template_app (template_var 2, template_var 1))
           ))),
    ("Basic.infinite_psubset_coinduct",
     "[| ?R ?A; !!A. ?R A ==> EX B<A. ?R B |] ==> infinite ?A",
     template_implication
      ([template_predicate (template_app (template_var 1, template_var 0)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           )))]
