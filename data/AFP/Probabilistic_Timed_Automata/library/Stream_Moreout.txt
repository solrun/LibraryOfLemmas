Loading theory "Draft.Basic" (required by "Draft.Stream_MoreTemplates" via "Draft.Stream_More" via "Draft.Sequence_LTL" via "Draft.Sequence")
Loading theory "Draft.Instantiate_Existentials" (required by "Draft.Stream_MoreTemplates" via "Draft.Stream_More")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Stream_MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Templates" (required by "Draft.Stream_MoreTemplates" via "Draft.ExtrEqs")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
val inst_existentials_tac = fn: Proof.context -> term list -> int -> tactic
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
### theory "Draft.Instantiate_Existentials"
### 0.047s elapsed time, 0.218s cpu time, 0.000s GC time
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
consts
  alternate :: "('a => 'a) => ('a => 'a) => nat => 'a => 'a"
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "Draft.Basic"
### 0.076s elapsed time, 0.302s cpu time, 0.000s GC time
Loading theory "Draft.Sequence" (required by "Draft.Stream_MoreTemplates" via "Draft.Stream_More" via "Draft.Sequence_LTL")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.078s elapsed time, 0.308s cpu time, 0.000s GC time
### theory "HOL-Library.Function_Algebras"
### 0.145s elapsed time, 0.450s cpu time, 0.042s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Stream_MoreTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. length (fst (snd p))) <*mlex*> {}"
consts
  sscan :: "('a => 'b => 'b) => 'a stream => 'b => 'b stream"
Proofs for coinductive predicate(s) "sdistinct"
  Proving monotonicity ...
Proofs for coinductive predicate(s) "sascending"
  Proving monotonicity ...
Proofs for coinductive predicate(s) "sdescending"
  Proving monotonicity ...
### theory "Draft.Sequence"
### 0.505s elapsed time, 1.041s cpu time, 0.112s GC time
Loading theory "Draft.Sequence_LTL" (required by "Draft.Stream_MoreTemplates" via "Draft.Stream_More")
### theory "HOL-Library.BigO"
### 0.621s elapsed time, 1.302s cpu time, 0.156s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Stream_MoreTemplates")
### theory "Draft.Sequence_LTL"
### 0.377s elapsed time, 0.791s cpu time, 0.087s GC time
Loading theory "Draft.Stream_More" (required by "Draft.Stream_MoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.498s elapsed time, 1.026s cpu time, 0.089s GC time
ev ?\<phi> ?xs ==> ?\<phi> (sdrop (wait ?\<phi> ?xs) ?xs)
### theory "Draft.Stream_More"
### 0.461s elapsed time, 0.802s cpu time, 0.089s GC time
Loading theory "Draft.Stream_MoreTemplates"
val templateLemmas =
   [("Stream_More.alw_holds_pred_stream_iff",
     "alw (holds ?P) ?xs = pred_stream ?P ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Stream_More.wait_LEAST",
     "wait (holds ?P) ?xs = (LEAST n. ?P (?xs !! n))",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Stream_More.alw_holds_sset",
     "alw (holds ?P) ?xs = (ALL x:sset ?xs. ?P x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("Stream_More.nxt_holds_iff_snth",
     "(nxt ^^ ?y) (holds ?P) ?xs = ?P (?xs !! ?y)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_hole 2),
           template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_var 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Stream_More.pred_stream_sfilter",
     "alw (ev (holds ?P)) ?xs ==> pred_stream ?P (sfilter ?P ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Stream_More.sset_sfilter",
     "alw (ev (holds ?P)) ?xs ==> sset (sfilter ?P ?xs) <= sset ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 1))),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Stream_More.sfilter_SCons_decomp'",
     "[| sfilter ?P ?xs = ?x ## ?zs; ev (holds ?P) ?xs |] ==> ?P ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 3)),
              template_var 2)
            )],
       template_predicate (template_app (template_var 3, template_var 1)))),
    ("Stream_More.alw_ev_HLD_cycle",
     "[| stream_all2 (:) ?xs (cycle ?as); ?a : set ?as |] ==> infs ?a ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_hole 6),
                template_var 2),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))),
             template_var 2)
           ))),
    ("Stream_More.sfilter_shd_LEAST",
     "ev (holds ?P) ?xs ==>
      shd (sfilter ?P ?xs) = ?xs !! (LEAST n. ?P (?xs !! n))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, t_empty))))),
    ("Stream_More.alw_wait_holds_cong",
     "alw (holds ?P) ?xs ==>
      wait (holds (%x. ?P x & ?Q x)) ?xs = wait (holds ?Q) ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 2)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1, template_app (template_hole 3, t_empty)),
           template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 0)),
           template_var 1)))),
    ("Stream_More.list_all_stake_least",
     "EX n. ?P (?xs !! n) ==>
      list_all (Not o ?P) (stake (LEAST n. ?P (?xs !! n)) ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 1, template_app (template_hole 0, t_empty)),
               template_var 0))
           ))),
    ("Stream_More.alw_ev_mono",
     "[| alw (ev ?\<phi>) ?xs; !!xs. ?\<phi> xs ==> ?\<psi> xs |]
      ==> alw (ev ?\<psi>) ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_var 1)
           ))),
    ("Stream_More.alw_ev_holds_mp",
     "[| alw (holds ?P) ?xs; ev (holds ?Q) ?xs |]
      ==> ev (holds (%x. ?P x & ?Q x)) ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 2, template_var 0)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1, template_app (template_hole 2, t_empty)),
             template_var 1)
           ))),
    ("Stream_More.alw_ev_sfilter_mono",
     "[| alw (ev (holds ?P)) ?xs; !!x. ?P x ==> ?Q x |]
      ==> pred_stream ?Q (sfilter ?P ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 2))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("Stream_More.alw_ev_conjI",
     "[| alw (holds ?P) ?xs; alw (ev (holds ?Q)) ?xs |]
      ==> alw (ev (holds (%x. ?P x & ?Q x))) ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_hole 1,
                  template_app (template_hole 2, template_var 0))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 1, template_app (template_hole 2, t_empty))),
             template_var 1)
           ))),
    ("Stream_More.alw_nxt_holds_cong",
     "alw (holds ?P) ?xs ==>
      (nxt ^^ ?n) (holds (%x. ?P x & ?Q x)) ?xs =
      (nxt ^^ ?n) (holds ?Q) ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 3)),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1),
             template_app (template_hole 4, t_empty)),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1),
             template_app (template_hole 4, template_var 0)),
           template_var 2)))),
    ("Stream_More.stream_all2_weaken",
     "[| stream_all2 ?P ?xs ?ys; !!x y. ?P x y ==> ?Q x y |]
      ==> stream_all2 ?Q ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("Stream_More.stream_all2_SCons2",
     "stream_all2 ?P ?xs (?y ## ?ys) =
      (EX z zs. ?xs = z ## zs & ?P z ?y & stream_all2 ?P zs ?ys)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Stream_More.stream_all2_SCons1",
     "stream_all2 ?P (?x ## ?xs) ?ys =
      (EX z zs. ?ys = z ## zs & ?P ?x z & stream_all2 ?P ?xs zs)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 3),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Stream_More.alw_sfilter",
     "[| alw (holds ?P) ?xs; alw (ev (holds ?Q)) ?xs |]
      ==> sfilter (%x. ?P x & ?Q x) ?xs = sfilter ?Q ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_hole 3,
                  template_app (template_hole 4, template_var 0))),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, t_empty), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("Stream_More.sfilter_SCons_decomp'",
     "[| sfilter ?P ?xs = ?x ## ?zs; ev (holds ?P) ?xs |]
      ==> list_all (Not o ?P) (stake (wait (holds ?P) ?xs) ?xs)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 8, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 7, template_var 1),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 3)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_hole 5, template_var 3)),
                   template_var 2)),
               template_var 2))
           ))),
    ("Stream_More.stream_all2_shift2",
     "stream_all2 ?P ?ys (?xs1.0 @- ?xs2.0) =
      (EX ys1 ys2.
          ?ys = ys1 @- ys2 &
          list_all2 ?P ys1 ?xs1.0 & stream_all2 ?P ys2 ?xs2.0)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Stream_More.stream_all2_shift1",
     "stream_all2 ?P (?xs1.0 @- ?xs2.0) ?ys =
      (EX ys1 ys2.
          ?ys = ys1 @- ys2 &
          list_all2 ?P ?xs1.0 ys1 & stream_all2 ?P ?xs2.0 ys2)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_var 3),
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 5, t_empty))),
    ("Stream_More.alw_stream_all2_mono",
     "[| stream_all2 ?P ?xs ?ys; alw ?Q ?xs;
         !!xs ys. [| stream_all2 ?P xs ys; ?Q xs |] ==> ?R ys |]
      ==> alw ?R ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("Stream_More.sfilter_SCons_decomp'",
     "[| sfilter ?P ?xs = ?x ## ?zs; ev (holds ?P) ?xs |]
      ==> EX zs'.
             ?xs = stake (wait (holds ?P) ?xs) ?xs @- ?x ## zs' &
             sfilter ?P zs' = ?zs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 8, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 7, template_var 1),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 3)),
              template_var 2)
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Stream_More.alw_ev_lockstep",
     "[| alw (ev (holds ?P)) ?xs; stream_all2 ?Q ?xs ?as;
         !!x a. [| ?P x; ?Q x a |] ==> ?R a |]
      ==> alw (ev (holds ?R)) ?as",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 4))),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 3),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))),
             template_var 1)
           ))),
    ("Stream_More.stream_all2_combine",
     "[| stream_all2 ?P ?xs ?ys; stream_all2 ?Q ?ys ?zs;
         !!x y z. ?P x y & ?Q y z ==> ?R x z |]
      ==> stream_all2 ?R ?xs ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 3),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 4),
             template_var 1)
           ))),
    ("Stream_More.stream_all2_bisim",
     "[| stream_all2 (:) ?xs ?as; stream_all2 (:) ?ys ?as; sset ?as <= ?S |]
      ==> stream_all2 (%x y. EX a. x : a & y : a & a : ?S) ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_hole 6),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_hole 6),
                template_var 1),
              template_var 2)
            ),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 2),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty), template_var 3),
             template_var 1)
           ))),
    ("Stream_More.sfilter_shift_decomp",
     "[| sfilter ?P ?xs = ?ys @- ?zs; alw (ev (holds ?P)) ?xs |]
      ==> EX ys' zs'.
             ?xs = ys' @- zs' & filter ?P ys' = ?ys & sfilter ?P zs' = ?zs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 9, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 8, template_var 1),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 3))),
              template_var 2)
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Stream_More.sfilter_SCons_decomp",
     "[| sfilter ?P ?xs = ?x ## ?zs; ev (holds ?P) ?xs |]
      ==> EX ys' zs'.
             ?xs = ys' @- ?x ## zs' &
             list_all (Not o ?P) ys' & ?P ?x & sfilter ?P zs' = ?zs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 10, template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 9, template_var 1),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 3)),
              template_var 2)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Stream_More.finite_sset_sfilter_decomp",
     "[| finite (sset (sfilter ?P ?xs)); alw (ev (holds ?P)) ?xs;
         !!x ws ys zs.
            [| ?xs = ws @- x ## ys @- x ## zs; ?P x |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 11,
              template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 2))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.Stream_MoreTemplates"
### 0.359s elapsed time, 0.489s cpu time, 0.067s GC time
val it = (): unit
