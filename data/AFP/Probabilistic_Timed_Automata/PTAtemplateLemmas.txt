   [("PTA.valid_abstractionD",
     "PTA.valid_abstraction ?A ?X ?k ==> finite ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("PTA.valid_abstractionD",
     "PTA.valid_abstraction ?A ?X ?k ==> PTA.collect_clkvt ?A <= ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 2),
         template_var 1))),
    ("PTA.valid_abstractionD",
     "PTA.valid_abstraction ?A ?X ?k ==>
      ALL (x, m):PTA.clkp_set ?A. m <= ?k x & x : ?X & m : \<nat>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 2)),
             template_app (template_hole 5, t_empty))
           ))),
    ("PTA.guard_continuous",
     "[| ?u \<turnstile> ?g; ?u \<oplus> ?t \<turnstile> ?g;
         (0::?'t) <= ?t'; ?t' <= ?t |]
      ==> ?u \<oplus> ?t' \<turnstile> ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 1)),
              template_var 2)
            ),
        template_inequation (less_equals, template_hole 0, template_var 0),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 0)),
             template_var 2)
           ))),
    ("PTA.valid_abstractionI",
     "[| ALL (x, m):PTA.clkp_set ?A. m <= ?k x & x : ?X & m : \<nat>;
         PTA.collect_clkvt ?A <= ?X; finite ?X |]
      ==> PTA.valid_abstraction ?A ?X ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 2)),
              template_app (template_hole 9, t_empty))
            ),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 2),
          template_var 0),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("PTA.upper_right_eq",
     "[| finite ?X; Regions.valid_region ?X ?k ?I ?r |]
      ==> (ALL x:?X. Regions.isGreater (?I x)) =
          (ALL t>=0.
              ALL u:Regions.region ?X ?I ?r.
                 u \<oplus> t : Regions.region ?X ?I ?r)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 9, template_var 3), t_empty),
         template_app (template_hole 7, t_empty)))),
    ("PTA.region_continuous",
     "[| Regions.valid_region ?X ?k ?I ?r; 0 <= ?t1.0; ?t1.0 <= ?t2.0;
         ?u : Regions.region ?X ?I ?r;
         ?u \<oplus> ?t2.0 : Regions.region ?X ?I ?r |]
      ==> ?u \<oplus> ?t1.0 : Regions.region ?X ?I ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_inequation (less_equals, template_hole 3, template_var 2),
        template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 6),
                  template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 0, template_var 0),
                  template_var 1)),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 6),
                  template_var 4),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 6),
                 template_var 4),
               template_var 3))
           ))),
    ("PTA.bounded_region",
     "[| finite ?X; Regions.valid_region ?X ?k ?I ?r;
         ~ (ALL t>=0.
               ALL u:Regions.region ?X ?I ?r.
                  u \<oplus> t : Regions.region ?X ?I ?r);
         ?u : Regions.region ?X ?I ?r |]
      ==> ?u \<oplus> 1 ~: Regions.region ?X ?I ?r",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_negation
         (template_predicate (template_app (template_hole 8, t_empty))),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 2),
                template_var 1))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_hole 0)),
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_var 4),
                     template_var 2),
                   template_var 1))
               )
           ))),
    ("PTA.T_eq_rel_half",
     "[| !!s t. ?R s t = (s : ?S & ?f s = t);
         ?A : sets (stream_space (count_space UNIV));
         ?B : sets (stream_space (count_space UNIV));
         PTA.rel_set_strong (stream_all2 ?R) ?A ?B;
         rel_fun ?R (rel_pmf ?R) ?K ?L; ?R ?x ?y |]
      ==> emeasure (MC_syntax.T ?K ?x) ?A =
          emeasure (MC_syntax.T ?L ?y) ?B",
     template_implication
      ([template_predicate (template_app (template_hole 25, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 5),
              template_app
               (template_hole 17,
                template_app
                 (template_hole 16,
                  template_app (template_hole 15, template_hole 14))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 4),
              template_app
               (template_hole 12,
                template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_hole 9))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 8)),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 8),
                  template_app (template_hole 5, template_var 8)),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 8, template_var 1), template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1)),
           template_var 5),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 4))))]
