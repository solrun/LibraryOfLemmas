   [("Cayley_Hamilton.degree_C", "degree (C ?a) = 0",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Cayley_Hamilton.zero_smult", "(0::?'a) *\<^sub>S ?M = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Cayley_Hamilton.coeff_C_0", "coeff (C ?x) 0 = ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_var 0)),
    ("Cayley_Hamilton.degree_charpoly", "degree (charpoly ?A) = CARD(?'n)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Cayley_Hamilton.smult_one", "?x *\<^sub>S 1 = diag ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Cayley_Hamilton.Cayley_Hamilton", "poly_mat (charpoly ?A) ?A = 0",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_var 0),
       template_hole 0)),
    ("Cayley_Hamilton.degree_le_max_perm_degree",
     "degree (Square_Matrix.det ?A) <= max_perm_degree ?A",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Cayley_Hamilton.coeff_X_mult_0", "coeff (X * ?p) 0 = (0::?'a)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Cayley_Hamilton.coeff_mult_X_0", "coeff (?p * X) 0 = (0::?'a)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2)),
         template_hole 1),
       template_hole 0)),
    ("Cayley_Hamilton.coeff_pow_X_eq", "coeff (X ^ ?i) ?i = (1::?'a)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_var 0),
       template_hole 0)),
    ("Cayley_Hamilton.C_minus", "C (- ?a) = - C ?a",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Cayley_Hamilton.coeff_charpoly",
     "lead_coeff (charpoly ?A) = (1::?'a)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 2, template_var 0))),
       template_hole 0)),
    ("Cayley_Hamilton.map_sq_matrix_mult_eq_smult",
     "map_sq_matrix ((*) ?a) ?M = ?a *\<^sub>S ?M",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Cayley_Hamilton.degree_le_max_degree",
     "degree (to_fun ?A ?i ?j) <= max_degree ?A",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 0, template_var 2))),
    ("Cayley_Hamilton.sign_permut",
     "degree (of_int (sign ?p) * ?q) = degree ?q",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1))),
           template_var 0)),
       template_app (template_hole 3, template_var 0))),
    ("Cayley_Hamilton.coeff_X",
     "coeff X ?i = (if ?i = 1 then 1::?'a else (0::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_hole 2)),
               template_hole 1),
             template_hole 0)
           ))),
    ("Cayley_Hamilton.coeff_X_mult",
     "coeff (X * ?p) (Suc ?i) = coeff ?p ?i",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 3, template_var 1), template_var 0))),
    ("Cayley_Hamilton.coeff_mult_X",
     "coeff (?p * X) (Suc ?i) = coeff ?p ?i",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 3, template_var 1), template_var 0))),
    ("Cayley_Hamilton.C_diff", "C (?a - ?b) = C ?a - C ?b",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Cayley_Hamilton.C_add", "C (?a + ?b) = C ?a + C ?b",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Cayley_Hamilton.C_mult", "C (?a * ?b) = C ?b * C ?a",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 0)),
         template_app (template_hole 2, template_var 1)))),
    ("Cayley_Hamilton.coeff_C_eq",
     "coeff (C ?x) ?n = (if ?n = 0 then ?x else (0::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 1)),
               template_var 1),
             template_hole 0)
           ))),
    ("Cayley_Hamilton.smult_smult",
     "?a *\<^sub>S ?b *\<^sub>S ?M = (?a * ?b) *\<^sub>S ?M",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Cayley_Hamilton.coeff_C_gt0", "0 < ?n ==> coeff (C ?x) ?n = (0::?'a)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_hole 0))),
    ("Cayley_Hamilton.coeff_mult_C",
     "coeff (?a * C ?x) ?n = coeff ?a ?n * ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Cayley_Hamilton.coeff_C_mult",
     "coeff (C ?x * ?a) ?n = ?x * coeff ?a ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("Cayley_Hamilton.coeff_pow_X",
     "coeff (X ^ ?i) ?n = (if ?i = ?n then 1::?'a else (0::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0)),
               template_hole 1),
             template_hole 0)
           ))),
    ("Cayley_Hamilton.diag_coeff",
     "diag (coeff ?x ?i) = map_sq_matrix (%x. coeff x ?i) (diag ?x)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, t_empty),
         template_app (template_hole 0, template_var 1)))),
    ("Cayley_Hamilton.max_degree_adjugate",
     "max_degree (adjugate (\<^bold>X - \<^bold>C ?A)) = CARD(?'n) - 1",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 8,
               template_app (template_hole 7, template_hole 6)),
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_hole 0))),
    ("Cayley_Hamilton.map_sq_matrix",
     "?c *\<^sub>S map_sq_matrix ?f ?A = map_sq_matrix (%x. ?c * ?f x) ?A",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, t_empty), template_var 0))),
    ("Cayley_Hamilton.degree_prod_le",
     "degree (prod ?f ?S) <= (SUM i:?S. degree (?f i))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Cayley_Hamilton.degree_diff_cancel",
     "degree ?q < degree ?p ==> degree (?p - ?q) = degree ?p",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Cayley_Hamilton.map_sq_matrix_if_distrib",
     "map_sq_matrix (%x. if ?P then ?f x else ?g x) =
      (if ?P then map_sq_matrix ?f else map_sq_matrix ?g)",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2),
           template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Cayley_Hamilton.poly_as_sum_of_monoms",
     "(SUM i<=degree ?p. X ^ i * C (coeff ?p i)) = ?p",
     template_equation
      (template_app
        (template_app (template_hole 7, t_empty),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_var 0)),
    ("Cayley_Hamilton.coeff_smult_1",
     "coeff ?p ?i *\<^sub>S ?m =
      ?m * map_sq_matrix (%p. coeff p ?i) (?p *\<^sub>S 1)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0))))),
    ("Cayley_Hamilton.degree_sum_le_Max",
     "finite ?F ==> degree (sum ?f ?F) <= (MAX x\<in>?F. degree (?f x))",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 1))))),
    ("Cayley_Hamilton.degree_prod_le_max_perm_degree",
     "?j permutes UNIV ==>
      degree (PROD i:UNIV. to_fun ?A i (?j i)) <= max_perm_degree ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_hole 5)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_hole 5)),
         template_app (template_hole 0, template_var 0)))),
    ("Cayley_Hamilton.poly_as_sum_of_monoms'",
     "degree ?p <= ?n ==> (SUM i<=?n. X ^ i * C (coeff ?p i)) = ?p",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 8, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 6, t_empty),
           template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("Cayley_Hamilton.coeff_mult_prod_sum",
     "coeff (prod ?f ?S) (SUM i:?S. degree (?f i)) =
      (PROD i:?S. lead_coeff (?f i))",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, t_empty), template_var 0)),
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Cayley_Hamilton.sum_telescope_Ico",
     "?a <= ?b ==> (SUM i = ?a..<?b. ?f i - ?f (Suc i)) = ?f ?a - ?f ?b",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_var 0, template_var 2)),
           template_app (template_var 0, template_var 1))))),
    ("Cayley_Hamilton.degree_sum_le",
     "(!!x. x : ?A ==> degree (?f x) <= ?n) ==> degree (sum ?f ?A) <= ?n",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 2)),
         template_var 0))),
    ("Cayley_Hamilton.degree_sum_less",
     "[| 0 < ?n; !!x. x : ?A ==> degree (?f x) < ?n |]
      ==> degree (sum ?f ?A) < ?n",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_than,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 1)),
         template_var 2))),
    ("Cayley_Hamilton.coeff_mult_sum",
     "[| degree ?p <= ?m; degree ?q <= ?n |]
      ==> coeff (?p * ?q) (?m + ?n) = coeff ?p ?m * coeff ?q ?n",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 5, template_var 3),
          template_var 2),
        template_inequation
         (less_equals, template_app (template_hole 5, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))))),
    ("Cayley_Hamilton.map_sq_matrix",
     "(!!a b. ?f (a - b) = ?f a - ?f b) ==>
      map_sq_matrix ?f (?A - ?B) =
      map_sq_matrix ?f ?A - map_sq_matrix ?f ?B",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Cayley_Hamilton.map_sq_matrix",
     "(!!a b. ?f (a + b) = ?f a + ?f b) ==>
      map_sq_matrix ?f (?A + ?B) =
      map_sq_matrix ?f ?A + map_sq_matrix ?f ?B",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Cayley_Hamilton.map_sq_matrix",
     "[| ?f (0::?'b) = (0::?'a); !!a b. ?f (a + b) = ?f a + ?f b |]
      ==> map_sq_matrix ?f (sum ?A ?I) =
          (SUM i:?I. map_sq_matrix ?f (?A i))",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_hole 8), template_hole 7),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, t_empty), template_var 0)),
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Cayley_Hamilton.degree_sum_unique'",
     "[| finite ?I; ?i ~: ?I;
         !!j. j : ?I ==> degree (?p j) < degree (?p ?i) |]
      ==> degree (sum ?p (insert ?i ?I)) = degree (?p ?i)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 2)
                )
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, t_empty),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))),
         template_app
          (template_hole 3,
           template_app (template_var 0, template_var 1))))),
    ("Cayley_Hamilton.degree_sum_unique",
     "[| finite ?I; ?i : ?I;
         !!j. [| j : ?I; j ~= ?i |] ==> degree (?p j) < degree (?p ?i) |]
      ==> degree (sum ?p ?I) = degree (?p ?i)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, t_empty), template_var 2)),
         template_app
          (template_hole 2,
           template_app (template_var 0, template_var 1))))),
    ("Cayley_Hamilton.max_perm_degree_eqI",
     "[| !!p. p permutes UNIV ==>
              (SUM i:UNIV. degree (to_fun ?A i (p i))) <= ?x;
         EX p. p permutes UNIV &
               (SUM i:UNIV. degree (to_fun ?A i (p i))) = ?x |]
      ==> max_perm_degree ?A = ?x",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Cayley_Hamilton.degree_det",
     "(!!j. [| j permutes UNIV; j ~= id |]
            ==> degree (PROD i:UNIV. to_fun ?A i (j i))
                < degree (PROD i:UNIV. to_fun ?A i i)) ==>
      degree (Square_Matrix.det ?A) = degree (PROD i:UNIV. to_fun ?A i i)",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty))],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 0, template_var 0)),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, t_empty), template_hole 9))))),
    ("Cayley_Hamilton.coeff_sum_unique",
     "[| finite ?I; ?i : ?I;
         !!j. [| j : ?I; j ~= ?i |] ==> degree (?p j) < degree (?p ?i) |]
      ==> coeff (sum ?p ?I) (degree (?p ?i)) = lead_coeff (?p ?i)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, t_empty), template_var 2)),
           template_app
            (template_hole 3,
             template_app (template_var 0, template_var 1))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_var 0, template_var 1)),
           template_app
            (template_hole 3,
             template_app (template_var 0, template_var 1))))))]
