Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.GenClockMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.GenClockMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.GenClockMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.GenClockMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.144s elapsed time, 0.588s cpu time, 0.041s GC time
Loading theory "Draft.GenClock" (required by "Draft.GenClockMoreTemplates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.204s elapsed time, 0.829s cpu time, 0.041s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.GenClockMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.334s elapsed time, 1.330s cpu time, 0.132s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.GenClockMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.GenClock"
### 0.398s elapsed time, 1.558s cpu time, 0.189s GC time
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.009s elapsed time, 3.380s cpu time, 0.879s GC time
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.052s elapsed time, 3.250s cpu time, 0.827s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.958s elapsed time, 5.219s cpu time, 1.007s GC time
Loading theory "Draft.Templates" (required by "Draft.GenClockMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.047s elapsed time, 0.061s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.GenClockMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.448s elapsed time, 0.494s cpu time, 0.056s GC time
Loading theory "Draft.GenClockMoreTemplates"
val templateLemmas =
   [("GenClock.IC_rate1", "rho_bound1 (%p. IC p ?i)",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("GenClock.IC_rate2", "rho_bound2 (%p. IC p ?i)",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("GenClock.okClocks_sym", "okClocks ?p ?q ?i ==> okClocks ?q ?p ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0)
           ))),
    ("GenClock.rte",
     "correct ?p (te ?p (?i + 1)) ==> te ?p ?i <= te ?p (?i + 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_hole 1)))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))))),
    ("GenClock.four_one",
     "[| \<beta> <= rmin; \<mu> <= ?\<delta>S;
         \<gamma>1 ?\<delta>S <= ?\<delta>S |]
      ==> okmaxsync ?i ?\<delta>S",
     template_implication
      ([template_inequation (less_equals, template_hole 4, template_hole 3),
        template_inequation (less_equals, template_hole 2, template_var 1),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 1),
          template_var 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("GenClock.rts1d",
     "correct ?p (te ?p (?i + 1)) ==> rmin <= te ?p (?i + 1) - te ?p ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_hole 3)))
            )],
       template_inequation
        (less_equals, template_hole 1,
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_hole 3))),
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0))))),
    ("GenClock.rts0d",
     "correct ?p (te ?p (?i + 1)) ==> te ?p (?i + 1) - te ?p ?i <= rmax",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_hole 3)))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_hole 3))),
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("GenClock.event_bound",
     "[| 0 <= ?t; correct ?p ?t; correct ?q ?t |]
      ==> EX i. ?t < max (te ?p i) (te ?q i)",
     template_implication
      ([template_inequation (less_equals, template_hole 5, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 2)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("GenClock.ICp_Suc",
     "correct ?p (te ?p (?i + 1)) ==>
      IC ?p (?i + 1) (te ?p (?i + 1)) = cfn ?p (\<theta> ?p (?i + 1))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_hole 4)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 5, template_var 0),
               template_hole 4)),
           template_app
            (template_app (template_hole 6, template_var 1),
             template_app
              (template_app (template_hole 5, template_var 0),
               template_hole 4))),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app
              (template_app (template_hole 5, template_var 0),
               template_hole 4)))))),
    ("GenClock.beta_bound2",
     "[| correct ?p (te ?p (?i + 1)); correct ?q (te ?q ?i) |]
      ==> te ?p (?i + 1) - te ?q ?i <= rmax + \<beta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 2),
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_hole 5)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app
               (template_app (template_hole 7, template_var 0),
                template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 7, template_var 2),
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_hole 5))),
           template_app
            (template_app (template_hole 7, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)))),
    ("GenClock.beta_bound1",
     "[| correct ?p (te ?p (?i + 1)); correct ?q (te ?p (?i + 1)) |]
      ==> 0 <= te ?p (?i + 1) - te ?q ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_hole 3)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_hole 3)))
            )],
       template_inequation
        (less_equals, template_hole 1,
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 5, template_var 2),
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_hole 3))),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_var 1))))),
    ("GenClock.four_two",
     "[| \<beta> <= rmin; \<mu> <= ?\<delta>S;
         \<gamma>1 ?\<delta>S <= ?\<delta>S;
         \<gamma>2 ?\<delta>S <= \<delta>;
         \<gamma>3 ?\<delta>S <= \<delta> |]
      ==> okClocks ?p ?q ?i",
     template_implication
      ([template_inequation (less_equals, template_hole 7, template_hole 6),
        template_inequation (less_equals, template_hole 5, template_var 3),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 3),
          template_var 3),
        template_inequation
         (less_equals, template_app (template_hole 3, template_var 3),
          template_hole 2),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 3),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("GenClock.VC_cfn",
     "[| correct ?p (te ?p (?i + 1)); te ?p (?i + 1) < te ?p (?i + 2) |]
      ==> VC ?p (te ?p (?i + 1)) = cfn ?p (\<theta> ?p (?i + 1))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app
               (template_app (template_hole 10, template_var 1),
                template_app
                 (template_app (template_hole 9, template_var 0),
                  template_hole 8)))
            ),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 10, template_var 1),
            template_app
             (template_app (template_hole 9, template_var 0),
              template_hole 8)),
          template_app
           (template_app (template_hole 10, template_var 1),
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_hole 4)))))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 10, template_var 1),
             template_app
              (template_app (template_hole 9, template_var 0),
               template_hole 8))),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app
              (template_app (template_hole 9, template_var 0),
               template_hole 8)))))),
    ("GenClock.IC_bd",
     "[| ?s <= ?t; correct ?p ?t; correct ?q ?t |]
      ==> \<bar>IC ?p ?i ?t - IC ?q ?j ?t\<bar>
          <= \<bar>IC ?p ?i ?s - IC ?q ?j ?s\<bar> +
             2 * \<rho> * (?t - ?s)",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 4)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_app (template_hole 6, template_var 3),
                   template_var 1),
                 template_var 4)),
             template_app
              (template_app
                (template_app (template_hole 6, template_var 2),
                 template_var 0),
               template_var 4))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_app (template_hole 6, template_var 3),
                       template_var 1),
                     template_var 5)),
                 template_app
                  (template_app
                    (template_app (template_hole 6, template_var 2),
                     template_var 0),
                   template_var 5)))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1))),
                 template_hole 0)),
             template_app
              (template_app (template_hole 7, template_var 4),
               template_var 5)))))),
    ("GenClock.agreement",
     "[| \<beta> <= rmin; \<mu> <= ?\<delta>S;
         \<gamma>1 ?\<delta>S <= ?\<delta>S;
         \<gamma>2 ?\<delta>S <= \<delta>; \<gamma>3 ?\<delta>S <= \<delta>;
         0 <= ?t; correct ?p ?t & correct ?q ?t |]
      ==> \<bar>VC ?p ?t - VC ?q ?t\<bar> <= \<delta>",
     template_implication
      ([template_inequation
         (less_equals, template_hole 12, template_hole 11),
        template_inequation (less_equals, template_hole 10, template_var 3),
        template_inequation
         (less_equals, template_app (template_hole 9, template_var 3),
          template_var 3),
        template_inequation
         (less_equals, template_app (template_hole 8, template_var 3),
          template_hole 7),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 3),
          template_hole 7),
        template_inequation (less_equals, template_hole 5, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 2)),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_var 2))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))),
         template_hole 7))),
    ("GenClock.bounded_drift",
     "[| ?s <= ?t; rho_bound1 ?C; rho_bound2 ?C; rho_bound1 ?D;
         rho_bound2 ?D; correct ?p ?t; correct ?q ?t |]
      ==> \<bar>?C ?p ?t - ?D ?q ?t\<bar>
          <= \<bar>?C ?p ?s - ?D ?q ?s\<bar> + 2 * \<rho> * (?t - ?s)",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4),
        template_predicate
         (template_app (template_hole 10, template_var 3)),
        template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_var 4)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_var 3, template_var 1),
                 template_var 4)),
             template_app
              (template_app (template_var 2, template_var 0),
               template_var 4))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_var 3, template_var 1),
                     template_var 5)),
                 template_app
                  (template_app (template_var 2, template_var 0),
                   template_var 5)))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1))),
                 template_hole 0)),
             template_app
              (template_app (template_hole 6, template_var 4),
               template_var 5)))))),
    ("GenClock.IC_trans_inv",
     "[| te ?q (?i + 1) <= te ?p (?i + 1); correct ?p (te ?p (?i + 1));
         correct ?q (te ?p (?i + 1)) |]
      ==> IC ?q (?i + 1) (te ?p (?i + 1)) =
          cfn ?q
           (%n. \<theta> ?q (?i + 1) n +
                (PC ?q (te ?p (?i + 1)) - PC ?q (te ?q (?i + 1))))",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 10, template_var 2),
            template_app
             (template_app (template_hole 9, template_var 1),
              template_hole 8)),
          template_app
           (template_app (template_hole 10, template_var 0),
            template_app
             (template_app (template_hole 9, template_var 1),
              template_hole 8))),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app (template_hole 10, template_var 0),
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_hole 8)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 10, template_var 0),
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_hole 8)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app (template_hole 9, template_var 1),
               template_hole 8)),
           template_app
            (template_app (template_hole 10, template_var 0),
             template_app
              (template_app (template_hole 9, template_var 1),
               template_hole 8))),
         template_app
          (template_app (template_hole 4, template_var 2), t_empty)))),
    ("GenClock.bd",
     "[| ?s <= ?t; rho_bound1 ?C; rho_bound2 ?D;
         ?D ?q ?t - ?D ?q ?s <= ?C ?p ?t - ?C ?p ?s; correct ?p ?t;
         correct ?q ?t |]
      ==> \<bar>?C ?p ?t - ?D ?q ?t\<bar>
          <= \<bar>?C ?p ?s - ?D ?q ?s\<bar> + 2 * \<rho> * (?t - ?s)",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4),
        template_predicate
         (template_app (template_hole 10, template_var 3)),
        template_predicate (template_app (template_hole 9, template_var 2)),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_var 2, template_var 1),
                template_var 4)),
            template_app
             (template_app (template_var 2, template_var 1),
              template_var 5)),
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_var 3, template_var 0),
                template_var 4)),
            template_app
             (template_app (template_var 3, template_var 0),
              template_var 5))),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 4)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_var 3, template_var 0),
                 template_var 4)),
             template_app
              (template_app (template_var 2, template_var 1),
               template_var 4))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_var 3, template_var 0),
                     template_var 5)),
                 template_app
                  (template_app (template_var 2, template_var 1),
                   template_var 5)))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1))),
                 template_hole 0)),
             template_app
              (template_app (template_hole 8, template_var 4),
               template_var 5)))))),
    ("GenClock.beta_rho",
     "[| te ?q (?i + 1) <= te ?p (?i + 1); correct ?p (te ?p (?i + 1));
         correct ?q (te ?p (?i + 1)); correct ?l (te ?p (?i + 1)) |]
      ==> \<bar>PC ?l (te ?p (?i + 1)) - PC ?l (te ?q (?i + 1)) -
                (te ?p (?i + 1) - te ?q (?i + 1))\<bar>
          <= \<beta> * \<rho>",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 9, template_var 3),
            template_app
             (template_app (template_hole 8, template_var 2),
              template_hole 7)),
          template_app
           (template_app (template_hole 9, template_var 1),
            template_app
             (template_app (template_hole 8, template_var 2),
              template_hole 7))),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 9, template_var 1),
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_hole 7)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_app (template_hole 9, template_var 1),
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_hole 7)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app (template_hole 9, template_var 1),
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_hole 7)))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_app
                      (template_app (template_hole 9, template_var 1),
                       template_app
                        (template_app (template_hole 8, template_var 2),
                         template_hole 7)))),
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_app
                    (template_app (template_hole 9, template_var 3),
                     template_app
                      (template_app (template_hole 8, template_var 2),
                       template_hole 7))))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 9, template_var 1),
                   template_app
                    (template_app (template_hole 8, template_var 2),
                     template_hole 7))),
               template_app
                (template_app (template_hole 9, template_var 3),
                 template_app
                  (template_app (template_hole 8, template_var 2),
                   template_hole 7))))),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)))),
    ("GenClock.four_one_ind_half",
     "[| \<beta> <= rmin; \<mu> <= ?\<delta>S;
         \<gamma>1 ?\<delta>S <= ?\<delta>S; okmaxsync ?i ?\<delta>S;
         te ?q (?i + 1) <= te ?p (?i + 1); correct ?p (te ?p (?i + 1));
         correct ?q (te ?p (?i + 1)) |]
      ==> \<bar>IC ?p (?i + 1) (te ?p (?i + 1)) -
                IC ?q (?i + 1) (te ?p (?i + 1))\<bar>
          <= ?\<delta>S",
     template_implication
      ([template_inequation
         (less_equals, template_hole 11, template_hole 10),
        template_inequation (less_equals, template_hole 9, template_var 3),
        template_inequation
         (less_equals, template_app (template_hole 8, template_var 3),
          template_var 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 3)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 6, template_var 1),
            template_app
             (template_app (template_hole 5, template_var 2),
              template_hole 4)),
          template_app
           (template_app (template_hole 6, template_var 0),
            template_app
             (template_app (template_hole 5, template_var 2),
              template_hole 4))),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 6, template_var 0),
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_hole 4)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 6, template_var 0),
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_hole 4)))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_hole 4)),
                 template_app
                  (template_app (template_hole 6, template_var 0),
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_hole 4)))),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_hole 4)),
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_hole 4))))),
         template_var 3))),
    ("GenClock.pe_cond1",
     "[| te ?q (?i + 1) <= te ?p (?i + 1); correct ?p (te ?p (?i + 1));
         correct ?q (te ?p (?i + 1)); correct ?l (te ?p (?i + 1)) |]
      ==> \<bar>\<theta> ?q (?i + 1) ?l +
                (PC ?q (te ?p (?i + 1)) - PC ?q (te ?q (?i + 1))) -
                \<theta> ?p (?i + 1) ?l\<bar>
          <= 2 * \<rho> * \<beta> + 2 * \<Lambda>",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 15, template_var 3),
            template_app
             (template_app (template_hole 14, template_var 2),
              template_hole 13)),
          template_app
           (template_app (template_hole 15, template_var 1),
            template_app
             (template_app (template_hole 14, template_var 2),
              template_hole 13))),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_app
               (template_app (template_hole 15, template_var 1),
                template_app
                 (template_app (template_hole 14, template_var 2),
                  template_hole 13)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 3),
              template_app
               (template_app (template_hole 15, template_var 1),
                template_app
                 (template_app (template_hole 14, template_var 2),
                  template_hole 13)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 0),
              template_app
               (template_app (template_hole 15, template_var 1),
                template_app
                 (template_app (template_hole 14, template_var 2),
                  template_hole 13)))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_app (template_hole 8, template_var 3),
                       template_app
                        (template_app (template_hole 14, template_var 2),
                         template_hole 13)),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_app (template_hole 7, template_var 3),
                       template_app
                        (template_app (template_hole 15, template_var 1),
                         template_app
                          (template_app (template_hole 14, template_var 2),
                           template_hole 13)))),
                   template_app
                    (template_app (template_hole 7, template_var 3),
                     template_app
                      (template_app (template_hole 15, template_var 3),
                       template_app
                        (template_app (template_hole 14, template_var 2),
                         template_hole 13)))))),
             template_app
              (template_app
                (template_app (template_hole 8, template_var 1),
                 template_app
                  (template_app (template_hole 14, template_var 2),
                   template_hole 13)),
               template_var 0))),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_hole 5,
                       template_app (template_hole 4, template_hole 3))),
                   template_hole 2)),
               template_hole 1)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_hole 3))),
             template_hole 0))))),
    ("GenClock.theta_bound",
     "[| correct ?l (te ?p (?i + 1)); correct ?m (te ?p (?i + 1));
         correct ?p (te ?p (?i + 1));
         \<bar>IC ?l ?i (max (te ?l ?i) (te ?m ?i)) -
               IC ?m ?i (max (te ?l ?i) (te ?m ?i))\<bar>
         <= ?\<delta>S |]
      ==> \<bar>\<theta> ?p (?i + 1) ?l - \<theta> ?p (?i + 1) ?m\<bar>
          <= 2 * \<Lambda> + ?\<delta>S + 2 * \<rho> * (rmax + \<beta>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 4),
              template_app
               (template_app (template_hole 17, template_var 3),
                template_app
                 (template_app (template_hole 16, template_var 2),
                  template_hole 15)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 1),
              template_app
               (template_app (template_hole 17, template_var 3),
                template_app
                 (template_app (template_hole 16, template_var 2),
                  template_hole 15)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 3),
              template_app
               (template_app (template_hole 17, template_var 3),
                template_app
                 (template_app (template_hole 16, template_var 2),
                  template_hole 15)))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 13,
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_app (template_hole 11, template_var 4),
                    template_var 2),
                  template_app
                   (template_app
                     (template_hole 10,
                      template_app
                       (template_app (template_hole 17, template_var 4),
                        template_var 2)),
                    template_app
                     (template_app (template_hole 17, template_var 1),
                      template_var 2)))),
              template_app
               (template_app
                 (template_app (template_hole 11, template_var 1),
                  template_var 2),
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 17, template_var 4),
                      template_var 2)),
                  template_app
                   (template_app (template_hole 17, template_var 1),
                    template_var 2))))),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 13,
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_app (template_hole 9, template_var 3),
                   template_app
                    (template_app (template_hole 16, template_var 2),
                     template_hole 15)),
                 template_var 4)),
             template_app
              (template_app
                (template_app (template_hole 9, template_var 3),
                 template_app
                  (template_app (template_hole 16, template_var 2),
                   template_hole 15)),
               template_var 1))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_hole 4))),
                   template_hole 3)),
               template_var 0)),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_hole 2)),
             template_app
              (template_app (template_hole 8, template_hole 1),
               template_hole 0)))))),
    ("GenClock.pe_cond2",
     "[| te ?m ?i <= te ?l ?i; correct ?k (te ?k (?i + 1));
         correct ?l (te ?k (?i + 1)); correct ?m (te ?k (?i + 1));
         \<bar>IC ?l ?i (te ?l ?i) - IC ?m ?i (te ?l ?i)\<bar>
         <= ?\<delta>S |]
      ==> \<bar>\<theta> ?k (?i + 1) ?l - \<theta> ?k (?i + 1) ?m\<bar>
          <= 2 * \<Lambda> + ?\<delta>S + 2 * \<rho> * (rmax + \<beta>)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 16, template_var 4),
            template_var 3),
          template_app
           (template_app (template_hole 16, template_var 2),
            template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_app
               (template_app (template_hole 16, template_var 1),
                template_app
                 (template_app (template_hole 14, template_var 3),
                  template_hole 13)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2),
              template_app
               (template_app (template_hole 16, template_var 1),
                template_app
                 (template_app (template_hole 14, template_var 3),
                  template_hole 13)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 4),
              template_app
               (template_app (template_hole 16, template_var 1),
                template_app
                 (template_app (template_hole 14, template_var 3),
                  template_hole 13)))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 12,
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_app (template_hole 10, template_var 2),
                    template_var 3),
                  template_app
                   (template_app (template_hole 16, template_var 2),
                    template_var 3))),
              template_app
               (template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 3),
                template_app
                 (template_app (template_hole 16, template_var 2),
                  template_var 3)))),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_app (template_hole 9, template_var 1),
                   template_app
                    (template_app (template_hole 14, template_var 3),
                     template_hole 13)),
                 template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 9, template_var 1),
                 template_app
                  (template_app (template_hole 14, template_var 3),
                   template_hole 13)),
               template_var 4))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_hole 4))),
                   template_hole 3)),
               template_var 0)),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_hole 2)),
             template_app
              (template_app (template_hole 8, template_hole 1),
               template_hole 0)))))),
    ("GenClock.four_two_ind",
     "[| \<beta> <= rmin; \<mu> <= ?\<delta>S;
         \<gamma>1 ?\<delta>S <= ?\<delta>S;
         \<gamma>2 ?\<delta>S <= \<delta>; \<gamma>3 ?\<delta>S <= \<delta>;
         te ?q (?i + 1) <= te ?p (?i + 1); okClocks ?p ?q ?i; 0 <= ?t;
         ?t < max (te ?p (?i + 1)) (te ?q (?i + 1));
         max (te ?p ?i) (te ?q ?i) <= ?t;
         max (te ?p ?i) (te ?q ?i) < max (te ?p (?i + 1)) (te ?q (?i + 1));
         correct ?p ?t; correct ?q ?t |]
      ==> \<bar>VC ?p ?t - VC ?q ?t\<bar> <= \<delta>",
     template_implication
      ([template_inequation
         (less_equals, template_hole 17, template_hole 16),
        template_inequation (less_equals, template_hole 15, template_var 4),
        template_inequation
         (less_equals, template_app (template_hole 14, template_var 4),
          template_var 4),
        template_inequation
         (less_equals, template_app (template_hole 13, template_var 4),
          template_hole 12),
        template_inequation
         (less_equals, template_app (template_hole 11, template_var 4),
          template_hole 12),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 10, template_var 3),
            template_app
             (template_app (template_hole 9, template_var 2),
              template_hole 8)),
          template_app
           (template_app (template_hole 10, template_var 1),
            template_app
             (template_app (template_hole 9, template_var 2),
              template_hole 8))),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 1),
                template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_hole 6, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 10, template_var 1),
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_hole 8))),
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_hole 8)))),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 10, template_var 1),
                template_var 2)),
            template_app
             (template_app (template_hole 10, template_var 3),
              template_var 2)),
          template_var 0),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 10, template_var 1),
                template_var 2)),
            template_app
             (template_app (template_hole 10, template_var 3),
              template_var 2)),
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 10, template_var 1),
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_hole 8))),
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_hole 8)))),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))),
         template_hole 12)))]:
   (string * thm * template) list
### theory "Draft.GenClockMoreTemplates"
### 0.275s elapsed time, 0.370s cpu time, 0.000s GC time
val it = (): unit
