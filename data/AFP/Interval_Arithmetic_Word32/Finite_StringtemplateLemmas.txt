   [("Finite_String.lleq_refl", "lleq_charlist ?x ?x",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Finite_String.fin_string_nil",
     "List.member (fin_string_upto ?n) fin_string_empty",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("Finite_String.lleq_dichotomy",
     "lleq_charlist ?x ?y | lleq_charlist ?y ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("Finite_String.distinct_upto",
     "?i <= MAX_STR ==> distinct (fin_string_upto ?i)",
     template_implication
      ([template_inequation (less_equals, template_var 0, template_hole 2)],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Finite_String.mem_appL",
     "List.member ?L1.0 ?x ==> List.member (?L1.0 @ ?L2.0) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Finite_String.mem_appR",
     "List.member ?L2.0 ?x ==> List.member (?L1.0 @ ?L2.0) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_var 1)
           ))),
    ("Finite_String.fin_string_upto_length",
     "List.member (fin_string_upto ?n) ?L ==> ilength ?L <= ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_var 1))),
    ("Finite_String.lleq_less",
     "less_charlist ?x ?y = (lleq_charlist ?x ?y & ~ lleq_charlist ?y ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("Finite_String.mem_app_or",
     "List.member (?L1.0 @ ?L2.0) ?x = List.member ?L1.0 ?x |
      List.member ?L2.0 ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 1)),
                   template_var 0)),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0))),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))
         )),
    ("Finite_String.lleq_antisym",
     "[| lleq_charlist ?x ?y; lleq_charlist ?y ?x |] ==> ?x = ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Finite_String.lleq_trans",
     "[| lleq_charlist ?x ?y; lleq_charlist ?y ?z |]
      ==> lleq_charlist ?x ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Finite_String.setE", "[| ?y : set ?L; ?P ?y |] ==> list_ex ?P ?L",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate (template_app (template_var 0, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Finite_String.member_concat",
     "List.member (concat ?LL) ?x =
      (EX L. List.member ?LL L & List.member L ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Finite_String.setA", "(!!y. y : set ?L ==> ?P y) ==> list_all ?P ?L",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Finite_String.fin_string_length",
     "[| length ?L <= ?k; length ?L <= MAX_STR |]
      ==> List.member (fin_string_upto ?k) (Abs_fin_string ?L)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_var 0),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_hole 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Finite_String.card_prod_finite",
     "[| 1 <= card ?C; 0 <= card ?S |] ==> card ?S <= card ?C * card ?S",
     template_implication
      ([template_inequation
         (less_equals, template_hole 4,
          template_app (template_hole 3, template_var 1)),
        template_inequation
         (less_equals, template_hole 2,
          template_app (template_hole 1, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 1)),
           template_app (template_hole 1, template_var 0))))),
    ("Finite_String.lleq_head",
     "[| !!z. lleq_charlist ?L2.0 z ==> lleq_charlist ?L1.0 z;
         lleq_charlist ?L1.0 ?L2.0; lleq_charlist (?x # ?L2.0) ?w |]
      ==> lleq_charlist (?x # ?L1.0) ?w",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_var 0)
           ))),
    ("Finite_String.ilength_induct",
     "[| ?P fin_string_empty 0;
         !!k x xs.
            ?P xs k ==>
            ?P (Abs_fin_string (x # Rep_fin_string xs)) (Suc k) |]
      ==> ?P ?L (ilength ?L)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 1, template_hole 9),
              template_hole 8)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 1, template_var 0),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Finite_String.length_induct",
     "[| length ?L <= MAX_STR; ?P [] 0;
         !!k x xs. ?P xs k ==> ?P (x # xs) (Suc k) |]
      ==> ?P ?L (length ?L)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 8, template_var 1),
          template_hole 7),
        template_predicate
         (
            template_app
             (template_app (template_var 0, template_hole 6),
              template_hole 5)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 0, template_var 1),
             template_app (template_hole 8, template_var 1))
           ))),
    ("Finite_String.list_induct2'",
     "[| ?P [] []; !!x xs. ?P (x # xs) []; !!y ys. ?P [] (y # ys);
         !!x xs y ys. ?P xs ys ==> ?P (x # xs) (y # ys) |]
      ==> ?P ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 2, template_hole 7),
              template_hole 6)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 2, template_var 1), template_var 0)
           )))]
