   [("Fair_Stream.sset_flat_stl", "sset (flat (stl ?s)) <= sset (flat ?s)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)))),
    ("Fair_Stream.fair_stream", "surj ?f ==> fair (fair_stream ?f)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 0),
            template_hole 3),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Fair_Stream.all_ex_fair_nats", "EX n>=?m. fair_nats !! n = ?x",
     template_predicate (template_app (template_hole 5, t_empty))),
    ("Fair_Stream.upt_lists_snth",
     "?x <= ?n ==> ?x : set (upt_lists !! ?n)",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)))
           ))),
    ("Fair_Stream.fair_surj", "surj ?f ==> fair (smap ?f fair_nats)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 0),
            template_hole 4),
          template_hole 3)],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Fair_Stream.all_ex_upt_lists", "EX n>=?m. ?x : set (upt_lists !! n)",
     template_predicate (template_app (template_hole 6, t_empty))),
    ("Fair_Stream.UNIV_stream", "surj ?f ==> sset (fair_stream ?f) = UNIV",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 0),
            template_hole 3),
          template_hole 2)],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_hole 2))),
    ("Fair_Stream.flat_snth_nth",
     "[| ?x = ?s !! ?n ! ?m; ?m < length (?s !! ?n);
         ALL xs:sset ?s. xs ~= [] |]
      ==> EX n'>=?n. ?x = flat ?s !! n'",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 13,
              template_app
               (template_app (template_hole 12, template_var 2),
                template_var 1)),
            template_var 0)),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_hole 10,
            template_app
             (template_app (template_hole 12, template_var 2),
              template_var 1))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 2)),
              t_empty)
            )],
       template_predicate (template_app (template_hole 4, t_empty))))]
