   [("Assertion_Algebra.assert_Sup",
     "{\<cdot> \<Squnion> ?A } = \<Squnion> (assert ` ?A)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_hole 3),
           template_var 0)))),
    ("Assertion_Algebra.assert_Inf",
     "{\<cdot> \<Sqinter> ?A } =
      \<Sqinter> (assert ` ?A) \<sqinter> (1::?'a)",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 5),
               template_var 0))),
         template_hole 0))),
    ("Assertion_Algebra.assert_Sup_less",
     "{\<cdot> Sup_less ?p ?w } = Sup_less (assert o ?p) ?w",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_hole 3),
             template_var 1)),
         template_var 0))),
    ("Assertion_Algebra.assert_Sup_range",
     "{\<cdot> \<Squnion> range ?p } = \<Squnion> range (assert o ?p)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_hole 3))),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_hole 6),
               template_var 0)),
           template_hole 3))))]
