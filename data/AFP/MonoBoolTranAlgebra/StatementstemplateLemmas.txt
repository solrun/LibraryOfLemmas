   [("Statements.wp_mono", "mono (wp ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Statements.while_false", "(While bot do ?x) = (1::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Statements.dual_assume", "[\<cdot> ?p ] ^ o = {\<cdot> ?p }",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Statements.hoare_wp", "hoare (wp ?x ?q) ?x ?q",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 1),
           template_var 0)
         )),
    ("Statements.assert_neg", "{\<cdot> - ?p } = neg_assert {\<cdot> ?p }",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Statements.grd_comp", "[\<cdot> grd ?x ] * ?x = ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))),
         template_var 0),
       template_var 0)),
    ("Statements.assumption_conjuncive", "[\<cdot> ?p ] : conjunctive",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 1),
             template_hole 0))
         )),
    ("Statements.assumption_disjuncive", "[\<cdot> ?p ] : disjunctive",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 1),
             template_hole 0))
         )),
    ("Statements.assert_assume",
     "{\<cdot> ?p } * [\<cdot> ?p ] = {\<cdot> ?p }",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Statements.wp_assert", "wp {\<cdot> ?p } ?q = inf ?p ?q",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Statements.assume_prop",
     "sup ([\<cdot> ?p ] * bot) (1::?'a) = [\<cdot> ?p ]",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_hole 1)),
         template_hole 0),
       template_app (template_hole 2, template_var 0))),
    ("Statements.wp_assume", "wp [\<cdot> ?p ] ?q = sup (- ?p) ?q",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Statements.assert_inf",
     "{\<cdot> inf ?p ?q } = inf {\<cdot> ?p } {\<cdot> ?q }",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Statements.assert_sup",
     "{\<cdot> sup ?p ?q } = sup {\<cdot> ?p } {\<cdot> ?q }",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Statements.wp_choice", "wp (inf ?x ?y) = inf (wp ?x) (wp ?y)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Statements.wp_comp", "wp (?x * ?y) ?p = wp ?x (wp ?y ?p)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Statements.wp_fun_mono2", "?x <= ?y ==> wp ?x ?p <= wp ?y ?p",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Statements.wp_mono2", "?p <= ?q ==> wp ?x ?p <= wp ?x ?q",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Statements.while_dual_star",
     "(While ?p do ?x) =
      ({\<cdot> ?p } * ?x) ^ \<otimes> * {\<cdot> - ?p }",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 1, template_var 1)),
               template_var 0))),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 1))))),
    ("Statements.Assertion_wp",
     "{\<cdot> wp ?x ?p } = inf (?x * {\<cdot> ?p } * top) (1::?'a)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app (template_hole 5, template_var 0))),
             template_hole 1)),
         template_hole 0))),
    ("Statements.hoare_refinement",
     "hoare ?p ?S ?q = ({\<cdot> ?p } * post {\<cdot> ?q } <= ?S)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 0)))),
         template_var 1))),
    ("Statements.hoare_Sup",
     "hoare (Sup ?P) ?x ?q = (ALL p:?P. hoare p ?x ?q)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Statements.hoare_comp_wp",
     "hoare ?p (?x * ?y) ?q = hoare ?p ?x (wp ?y ?q)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Statements.wp_omega_fix",
     "wp (?x ^ \<omega>) ?p = inf (wp ?x (wp (?x ^ \<omega>) ?p)) ?p",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_var 0))),
         template_var 0))),
    ("Statements.if_assertion",
     "(If ?p then ?x else ?y) =
      sup ({\<cdot> ?p } * ?x) ({\<cdot> - ?p } * ?y)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2))),
           template_var 0)))),
    ("Statements.wp_omega_least",
     "inf (wp ?x ?r) ?p <= ?r ==> wp (?x ^ \<omega>) ?p <= ?r",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1)),
            template_var 0),
          template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0),
         template_var 1))),
    ("Statements.hoare_choice",
     "hoare ?p (inf ?x ?y) ?q = (hoare ?p ?x ?q & hoare ?p ?y ?q)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1),
           template_var 0)))),
    ("Statements.while_pres_disj",
     "?x : disjunctive ==> (While ?p do ?x) : disjunctive",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_hole 2),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 2),
               template_hole 1))
           ))),
    ("Statements.while_pres_conj",
     "?x : conjunctive ==> (While ?p do ?x) : conjunctive",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_hole 2),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 2),
               template_hole 1))
           ))),
    ("Statements.hoare_comp",
     "hoare ?p (?x * ?y) ?q = (EX r. hoare ?p ?x r & hoare r ?y ?q)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Statements.assert_commute",
     "?y : conjunctive ==> ?y * {\<cdot> ?p } = {\<cdot> wp ?y ?p } * ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_hole 4),
                template_hole 3))
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))),
           template_var 1)))),
    ("Statements.if_Assertion_assumption",
     "sup ({\<cdot> ?p } * ?x) ({\<cdot> - ?p } * ?y) =
      inf ([\<cdot> ?p ] * ?x) ([\<cdot> - ?p ] * ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 2)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 2))),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 0, template_var 2)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 2))),
           template_var 0)))),
    ("Statements.hoare_if",
     "hoare ?p (If ?b then ?x else ?y) ?q =
      (hoare (inf ?p ?b) ?x ?q & hoare (inf ?p (- ?b)) ?y ?q)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 4),
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 3)),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_app (template_hole 0, template_var 3))),
             template_var 1),
           template_var 0)))),
    ("Statements.inf_pres_conj",
     "[| ?x : conjunctive; ?y : conjunctive |] ==> inf ?x ?y : conjunctive",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_hole 1),
                template_hole 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_hole 1),
                template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_hole 1),
               template_hole 0))
           ))),
    ("Statements.sup_pres_disj",
     "[| ?x : disjunctive; ?y : disjunctive |] ==> sup ?x ?y : disjunctive",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_hole 1),
                template_hole 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_hole 1),
                template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_hole 1),
               template_hole 0))
           ))),
    ("Statements.if_pres_conj",
     "[| ?x : conjunctive; ?y : conjunctive |]
      ==> (If ?p then ?x else ?y) : conjunctive",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_hole 2),
                template_hole 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_hole 2),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 2),
               template_hole 1))
           ))),
    ("Statements.if_pres_disj",
     "[| ?x : disjunctive; ?y : disjunctive |]
      ==> (If ?p then ?x else ?y) : disjunctive",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_hole 2),
                template_hole 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_hole 2),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 2),
               template_hole 1))
           ))),
    ("Statements.hoare_while_complete_mbt",
     "ALL w. hoare (inf (?p w) ?b) ?x (Sup_less ?p w) ==>
      hoare (Sup (range ?p)) (While ?b do ?x)
       (inf (Sup (range ?p)) (- ?b))",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_hole 2))),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_hole 2))),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Statements.hoare_fixpoint_complete_mbt",
     "[| ?F ?x = ?x;
         !!w f. hoare (Sup_less ?p w) f ?q ==> hoare (?p w) (?F f) ?q |]
      ==> hoare (Sup (range ?p)) ?x ?q",
     template_implication
      ([template_equation
         (template_app (template_var 3, template_var 2), template_var 2),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_hole 0))),
               template_var 2),
             template_var 0)
           ))),
    ("Statements.hoare_fixpoint_mbt",
     "[| ?F ?x = ?x;
         !!w f.
            (!!v. v < w ==> hoare (?p v) f ?q) ==> hoare (?p w) (?F f) ?q |]
      ==> hoare (?p ?u) ?x ?q",
     template_implication
      ([template_equation
         (template_app (template_var 4, template_var 3), template_var 3),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app (template_var 2, template_var 0)),
               template_var 3),
             template_var 1)
           ))),
    ("Statements.hoare_while_mbt",
     "[| ALL w r. (ALL v<w. ?p v <= r) --> hoare (inf (?p w) ?b) ?x r;
         ALL u. ?p u <= ?q |]
      ==> hoare (?p ?w) (While ?b do ?x) (inf ?q (- ?b))",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_var 4, template_var 0)),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 0, template_var 3)))
           )))]
