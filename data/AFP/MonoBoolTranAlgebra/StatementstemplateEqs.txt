   [("Statements.while_false", "(While bot do ?x) = (1::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Statements.dual_assume", "[\<cdot> ?p ] ^ o = {\<cdot> ?p }",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Statements.assert_neg", "{\<cdot> - ?p } = neg_assert {\<cdot> ?p }",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Statements.grd_comp", "[\<cdot> grd ?x ] * ?x = ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))),
         template_var 0),
       template_var 0)),
    ("Statements.assert_assume",
     "{\<cdot> ?p } * [\<cdot> ?p ] = {\<cdot> ?p }",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Statements.wp_assert", "wp {\<cdot> ?p } ?q = inf ?p ?q",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Statements.assume_prop",
     "sup ([\<cdot> ?p ] * bot) (1::?'a) = [\<cdot> ?p ]",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_hole 1)),
         template_hole 0),
       template_app (template_hole 2, template_var 0))),
    ("Statements.wp_assume", "wp [\<cdot> ?p ] ?q = sup (- ?p) ?q",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Statements.assert_inf",
     "{\<cdot> inf ?p ?q } = inf {\<cdot> ?p } {\<cdot> ?q }",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Statements.assert_sup",
     "{\<cdot> sup ?p ?q } = sup {\<cdot> ?p } {\<cdot> ?q }",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Statements.wp_choice", "wp (inf ?x ?y) = inf (wp ?x) (wp ?y)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Statements.wp_comp", "wp (?x * ?y) ?p = wp ?x (wp ?y ?p)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Statements.while_dual_star",
     "(While ?p do ?x) =
      ({\<cdot> ?p } * ?x) ^ \<otimes> * {\<cdot> - ?p }",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 1, template_var 1)),
               template_var 0))),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 1))))),
    ("Statements.Assertion_wp",
     "{\<cdot> wp ?x ?p } = inf (?x * {\<cdot> ?p } * top) (1::?'a)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app (template_hole 5, template_var 0))),
             template_hole 1)),
         template_hole 0))),
    ("Statements.hoare_refinement",
     "hoare ?p ?S ?q = ({\<cdot> ?p } * post {\<cdot> ?q } <= ?S)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 0)))),
         template_var 1))),
    ("Statements.hoare_Sup",
     "hoare (Sup ?P) ?x ?q = (ALL p:?P. hoare p ?x ?q)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Statements.hoare_comp_wp",
     "hoare ?p (?x * ?y) ?q = hoare ?p ?x (wp ?y ?q)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Statements.wp_omega_fix",
     "wp (?x ^ \<omega>) ?p = inf (wp ?x (wp (?x ^ \<omega>) ?p)) ?p",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_var 0))),
         template_var 0))),
    ("Statements.if_assertion",
     "(If ?p then ?x else ?y) =
      sup ({\<cdot> ?p } * ?x) ({\<cdot> - ?p } * ?y)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2))),
           template_var 0)))),
    ("Statements.hoare_choice",
     "hoare ?p (inf ?x ?y) ?q = (hoare ?p ?x ?q & hoare ?p ?y ?q)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1),
           template_var 0)))),
    ("Statements.hoare_comp",
     "hoare ?p (?x * ?y) ?q = (EX r. hoare ?p ?x r & hoare r ?y ?q)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Statements.if_Assertion_assumption",
     "sup ({\<cdot> ?p } * ?x) ({\<cdot> - ?p } * ?y) =
      inf ([\<cdot> ?p ] * ?x) ([\<cdot> - ?p ] * ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 2)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 2))),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 0, template_var 2)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 2))),
           template_var 0)))),
    ("Statements.hoare_if",
     "hoare ?p (If ?b then ?x else ?y) ?q =
      (hoare (inf ?p ?b) ?x ?q & hoare (inf ?p (- ?b)) ?y ?q)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 4),
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 3)),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_app (template_hole 0, template_var 3))),
             template_var 1),
           template_var 0))))]
