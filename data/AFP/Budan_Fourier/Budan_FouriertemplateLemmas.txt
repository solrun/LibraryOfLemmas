   [("Budan_Fourier.changes_poly_pos_inf_pders",
     "changes_poly_pos_inf (pders ?p) = 0",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Budan_Fourier.changes_poly_neg_inf_pders",
     "changes_poly_neg_inf (pders ?p) = int (degree ?p)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Budan_Fourier.changes_poly_at_pders_0",
     "changes_poly_at (pders ?p) 0 = changes (coeffs ?p)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Budan_Fourier.all_roots_real_mult",
     "all_roots_real (?p * ?q) = (all_roots_real ?p & all_roots_real ?q)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Budan_Fourier.all_roots_real_degree",
     "all_roots_real ?p ==> proots_count ?p UNIV = degree ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Budan_Fourier.pders_coeffs_sgn_eq",
     "map (%p. sgn (poly p 0)) (pders ?p) = map sgn (coeffs ?p)",
     template_equation
      (template_app
        (template_app (template_hole 6, t_empty),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 5),
         template_app (template_hole 0, template_var 0)))),
    ("Budan_Fourier.all_roots_real_const_iff",
     "all_roots_real ?p ==> (degree ?p ~= 0) = (EX x. poly ?p x = 0)",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 0)),
             template_hole 4)),
         template_app (template_hole 3, t_empty)))),
    ("Budan_Fourier.set_pders_nzero",
     "[| ?p ~= 0; ?q : set (pders ?p) |] ==> ?q ~= 0",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 1)))
            )],
       template_negation
        (template_equation (template_var 0, template_hole 3)))),
    ("Budan_Fourier.all_real_roots_mobius",
     "[| all_roots_real ?p; ?a < ?b |]
      ==> all_roots_real (fcompose ?p [:?a, ?b:] [:1, 1:])",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_hole 1))),
               template_app
                (template_app (template_hole 2, template_hole 0),
                 template_app
                  (template_app (template_hole 2, template_hole 0),
                   template_hole 1))))
           ))),
    ("Budan_Fourier.descartes_sign_real",
     "[| ?p ~= 0; all_roots_real ?p |]
      ==> int (proots_count ?p {x. 0 < x}) = changes (coeffs ?p)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 9)),
        template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 0),
             template_app (template_hole 4, t_empty))),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Budan_Fourier.budan_fourier_real",
     "[| ?p ~= 0; all_roots_real ?p |]
      ==> int (proots_count ?p {x. ?b < x}) = changes_gt_der ?b ?p",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7)),
        template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app (template_hole 2, t_empty))),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Budan_Fourier.budan_fourier_real",
     "[| ?p ~= 0; all_roots_real ?p |]
      ==> int (proots_count ?p {x. x <= ?a}) = changes_le_der ?a ?p",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7)),
        template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app (template_hole 2, t_empty))),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Budan_Fourier.budan_fourier_real",
     "[| ?p ~= 0; all_roots_real ?p; ?a < ?b |]
      ==> int (proots_count ?p {x. ?a < x & x <= ?b}) =
          changes_itv_der ?a ?b ?p",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 9)),
        template_predicate (template_app (template_hole 8, template_var 2)),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app (template_hole 3, t_empty))),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2)))),
    ("Budan_Fourier.descartes_sign",
     "?p ~= 0 ==>
      int (proots_count ?p {x. 0 < x}) <= changes (coeffs ?p) &
      even (changes (coeffs ?p) - int (proots_count ?p {x. 0 < x}))",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 14))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app
                  (template_hole 12,
                   template_app
                    (template_hole 11,
                     template_app
                      (template_app (template_hole 10, template_var 0),
                       template_app (template_hole 9, t_empty)))),
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0)))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_var 0))),
                 template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 10, template_var 0),
                     template_app (template_hole 9, t_empty))))))
           ))),
    ("Budan_Fourier.budan_fourier_gt",
     "?p ~= 0 ==>
      int (proots_count ?p {x. ?a < x}) <= changes_gt_der ?a ?p &
      even (changes_gt_der ?a ?p - int (proots_count ?p {x. ?a < x}))",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 12))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 8, template_var 1),
                       template_app (template_hole 7, t_empty)))),
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_var 1)),
                 template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_var 1),
                     template_app (template_hole 7, t_empty))))))
           ))),
    ("Budan_Fourier.budan_fourier_le",
     "?p ~= 0 ==>
      int (proots_count ?p {x. x <= ?b}) <= changes_le_der ?b ?p &
      even (changes_le_der ?b ?p - int (proots_count ?p {x. x <= ?b}))",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 12))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 8, template_var 1),
                       template_app (template_hole 7, t_empty)))),
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_var 1)),
                 template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_var 1),
                     template_app (template_hole 7, t_empty))))))
           ))),
    ("Budan_Fourier.sign_r_pos_nzero_right",
     "[| ALL x. ?c < x & x <= ?d --> poly ?p x ~= 0; ?c < ?d |]
      ==> if sign_r_pos ?p ?c then 0 < poly ?p ?d else poly ?p ?d < 0",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_inequation (less_than, template_var 2, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2)),
               template_app
                (template_app (template_hole 7, template_hole 2),
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 1)),
               template_hole 2))
           ))),
    ("Budan_Fourier.sign_r_pos_at_left",
     "?p ~= 0 ==>
      if even (order ?c ?p) = sign_r_pos ?p ?c
      then \<forall>\<^sub>F x in at_left ?c. 0 < poly ?p x
      else \<forall>\<^sub>F x in at_left ?c. poly ?p x < 0",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 14))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app
                    (template_hole 12,
                     template_app
                      (template_app
                        (template_hole 11,
                         template_app
                          (template_hole 10,
                           template_app
                            (template_hole 9, template_hole 8))),
                       template_app
                        (template_app (template_hole 7, template_var 0),
                         template_var 1))),
                   template_app
                    (template_app (template_hole 6, template_var 1),
                     template_var 0))),
               template_app
                (template_app (template_hole 5, t_empty),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_app (template_hole 0, template_var 0)))),
             template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("Budan_Fourier.budan_fourier_aux_right",
     "[| ?c < ?d2.0; ?p ~= 0;
         ALL x.
            ?c < x & x <= ?d2.0 --> (ALL q:set (pders ?p). poly q x ~= 0) |]
      ==> changes_itv_der ?c ?d2.0 ?p = 0",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_negation
         (template_equation (template_var 0, template_hole 13)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0),
         template_hole 0))),
    ("Budan_Fourier.budan_fourier_aux_left",
     "[| ?d1.0 < ?c; ?p ~= 0;
         ALL x.
            ?d1.0 < x & x < ?c --> (ALL q:set (pders ?p). poly q x ~= 0) |]
      ==> int (order ?c ?p) <= changes_itv_der ?d1.0 ?c ?p",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_negation
         (template_equation (template_var 0, template_hole 13)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Budan_Fourier.sign_r_pos_nzero_left",
     "[| ALL x. ?d <= x & x < ?c --> poly ?p x ~= 0; ?d < ?c |]
      ==> if even (order ?c ?p) = sign_r_pos ?p ?c then 0 < poly ?p ?d
          else poly ?p ?d < 0",
     template_implication
      ([template_predicate (template_app (template_hole 16, t_empty)),
        template_inequation (less_than, template_var 2, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_hole 4,
                           template_app
                            (template_hole 3, template_hole 2))),
                       template_app
                        (template_app (template_hole 1, template_var 1),
                         template_var 0))),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1))),
               template_app
                (template_app (template_hole 12, template_hole 8),
                 template_app
                  (template_app (template_hole 9, template_var 0),
                   template_var 2))),
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 9, template_var 0),
                   template_var 2)),
               template_hole 8))
           ))),
    ("Budan_Fourier.budan_fourier_aux_left",
     "[| ?d1.0 < ?c; ?p ~= 0;
         ALL x.
            ?d1.0 < x & x < ?c --> (ALL q:set (pders ?p). poly q x ~= 0) |]
      ==> even (changes_itv_der ?d1.0 ?c ?p - int (order ?c ?p))",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_negation
         (template_equation (template_var 0, template_hole 17)),
        template_predicate (template_app (template_hole 16, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app (template_hole 5, template_hole 4))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 1),
                   template_var 0)),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))))
           ))),
    ("Budan_Fourier.budan_fourier_interval",
     "[| ?a < ?b; ?p ~= 0 |]
      ==> int (proots_count ?p {x. ?a < x & x <= ?b})
          <= changes_itv_der ?a ?b ?p &
          even
           (changes_itv_der ?a ?b ?p -
            int (proots_count ?p {x. ?a < x & x <= ?b}))",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_negation
         (template_equation (template_var 0, template_hole 12))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 8, template_var 0),
                       template_app (template_hole 7, t_empty)))),
                 template_app
                  (template_app
                    (template_app (template_hole 5, template_var 2),
                     template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_app (template_hole 5, template_var 2),
                       template_var 1),
                     template_var 0)),
                 template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_var 0),
                     template_app (template_hole 7, t_empty))))))
           ))),
    ("Budan_Fourier.budan_fourier_aux_left'",
     "[| ?d1.0 < ?c; ?p ~= 0;
         ALL x.
            ?d1.0 <= x & x < ?c --> (ALL q:set (pders ?p). poly q x ~= 0) |]
      ==> int (order ?c ?p) <= changes_itv_der ?d1.0 ?c ?p &
          even (changes_itv_der ?d1.0 ?c ?p - int (order ?c ?p))",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_negation
         (template_equation (template_var 0, template_hole 19)),
        template_predicate (template_app (template_hole 18, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_var 1),
                       template_var 0))),
                 template_app
                  (template_app
                    (template_app (template_hole 5, template_var 2),
                     template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_app (template_hole 5, template_var 2),
                       template_var 1),
                     template_var 0)),
                 template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 1),
                     template_var 0)))))
           )))]
