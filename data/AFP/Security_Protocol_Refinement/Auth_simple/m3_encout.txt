Loading theory "Draft.Agents" (required by "Draft.m3_encMoreTemplates" via "Draft.m3_enc" via "Draft.m2_confid_chan" via "Draft.m1_auth" via "Draft.Runs" via "Draft.Atoms" via "Draft.Keys")
Loading theory "Draft.Infra" (required by "Draft.m3_encMoreTemplates" via "Draft.m3_enc" via "Draft.m2_confid_chan" via "Draft.m1_auth" via "Draft.a0i_agree" via "Draft.a0n_agree" via "Draft.Refinement")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.m3_encMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.m3_encMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "Draft.Infra"
### 0.065s elapsed time, 0.296s cpu time, 0.000s GC time
Loading theory "Draft.Refinement" (required by "Draft.m3_encMoreTemplates" via "Draft.m3_enc" via "Draft.m2_confid_chan" via "Draft.m1_auth" via "Draft.a0i_agree" via "Draft.a0n_agree")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.121s elapsed time, 0.502s cpu time, 0.041s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.m3_encMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
Proofs for inductive predicate(s) "reachp"
  Proving monotonicity ...
specification
  Server_not_bad: Server ~: bad
### theory "HOL-Library.Nat_Bijection"
### 0.320s elapsed time, 1.284s cpu time, 0.105s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.m3_encMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.204s elapsed time, 0.802s cpu time, 0.065s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.m3_encMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Proofs for inductive predicate(s) "behp"
  Proving monotonicity ...
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Agents"
### 0.551s elapsed time, 2.199s cpu time, 0.183s GC time
Loading theory "Draft.Keys" (required by "Draft.m3_encMoreTemplates" via "Draft.m3_enc" via "Draft.m2_confid_chan" via "Draft.m1_auth" via "Draft.Runs" via "Draft.Atoms")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
Proofs for inductive predicate(s) "seq_liftp"
consts
  sdrop :: "nat => 'a stream => 'a stream"
  Proving monotonicity ...
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Refinement"
### 1.143s elapsed time, 4.343s cpu time, 0.842s GC time
Loading theory "Draft.a0n_agree" (required by "Draft.m3_encMoreTemplates" via "Draft.m3_enc" via "Draft.m2_confid_chan" via "Draft.m1_auth" via "Draft.a0i_agree")
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "{}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.079s elapsed time, 4.106s cpu time, 0.807s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.m3_encMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.Keys"
### 0.874s elapsed time, 3.286s cpu time, 0.730s GC time
Loading theory "Draft.Atoms" (required by "Draft.m3_encMoreTemplates" via "Draft.m3_enc" via "Draft.m2_confid_chan" via "Draft.m1_auth" via "Draft.Runs")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Atoms"
### 0.303s elapsed time, 1.207s cpu time, 0.075s GC time
Loading theory "Draft.Channels" (required by "Draft.m3_encMoreTemplates" via "Draft.m3_enc" via "Draft.m2_confid_chan")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.865s elapsed time, 3.409s cpu time, 0.327s GC time
Loading theory "Draft.Runs" (required by "Draft.m3_encMoreTemplates" via "Draft.m3_enc" via "Draft.m2_confid_chan" via "Draft.m1_auth")
Found termination order: "size <*mlex*> {}"
### theory "Draft.a0n_agree"
### 1.112s elapsed time, 4.388s cpu time, 0.398s GC time
Loading theory "Draft.Message" (required by "Draft.m3_encMoreTemplates" via "Draft.m3_enc")
### theory "HOL-Library.Tree"
### 2.159s elapsed time, 8.365s cpu time, 1.197s GC time
Loading theory "Draft.a0i_agree" (required by "Draft.m3_encMoreTemplates" via "Draft.m3_enc" via "Draft.m2_confid_chan" via "Draft.m1_auth")
Proofs for inductive predicate(s) "atomsp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "extrp"
  Proving monotonicity ...
### theory "Draft.a0i_agree"
### 0.144s elapsed time, 0.563s cpu time, 0.084s GC time
Loading theory "Draft.Templates" (required by "Draft.m3_encMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
### theory "Draft.Runs"
### 0.429s elapsed time, 1.679s cpu time, 0.195s GC time
Loading theory "Draft.m1_auth" (required by "Draft.m3_encMoreTemplates" via "Draft.m3_enc" via "Draft.m2_confid_chan")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.082s elapsed time, 0.316s cpu time, 0.049s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.m3_encMoreTemplates")
Proofs for inductive predicate(s) "fakep"
  Proving monotonicity ...
Proofs for inductive predicate(s) "partsp"
  Proving monotonicity ...
### theory "Draft.Channels"
### 1.184s elapsed time, 4.651s cpu time, 0.505s GC time
Proofs for inductive predicate(s) "analzp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "synthp"
  Proving monotonicity ...
Found termination order: "{}"
### theory "Draft.m1_auth"
### 0.655s elapsed time, 2.204s cpu time, 0.191s GC time
Loading theory "Draft.m2_confid_chan" (required by "Draft.m3_encMoreTemplates" via "Draft.m3_enc")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.664s elapsed time, 2.224s cpu time, 0.191s GC time
### theory "Draft.Message"
### 1.055s elapsed time, 3.751s cpu time, 0.386s GC time
### theory "Draft.m2_confid_chan"
### 0.344s elapsed time, 0.427s cpu time, 0.038s GC time
Loading theory "Draft.m3_enc" (required by "Draft.m3_encMoreTemplates")
Proofs for inductive predicate(s) "abs_msgp"
  Proving monotonicity ...
### theory "Draft.m3_enc"
### 0.381s elapsed time, 0.411s cpu time, 0.042s GC time
Loading theory "Draft.m3_encMoreTemplates"
val templateLemmas =
   [("m3_enc.abs_msg_Un", "abs_msg (?G Un ?H) = abs_msg ?G Un abs_msg ?H",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("m3_enc.abs_msgp_abs_msg_eq",
     "abs_msgp (%x. x : ?H) = (%x. x : abs_msg ?H)",
     template_equation (template_app (template_hole 3, t_empty), t_empty)),
    ("m3_enc.analz_Inj_IK", "?X : IK ?s ==> ?X : analz (IK ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 0)))
           ))),
    ("m3_enc.parts_Inj_IK", "?X : IK ?s ==> ?X : parts (IK ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 0)))
           ))),
    ("m3_enc.abs_msg_insert_mono",
     "?m : abs_msg ?H ==> ?m : abs_msg (insert ?m' ?H)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("m3_enc.R23_presI", "runs ?s = runs ?t ==> (?s, ?t) : R23_pres",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("m3_enc.R23_msgsI",
     "abs_msg (parts (IK ?t)) <= chan ?s ==> (?s, ?t) : R23_msgs",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 6,
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 1))),
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_hole 0)
           ))),
    ("m3_enc.PO_m3_step3_refines_m2_step3",
     "{R23} m2_step3 ?Ra ?A ?B ?Na ?Nb, m3_step3 ?Ra ?A ?B ?Na ?Nb {> R23}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m3_enc.abs_msg_mono",
     "[| ?m : abs_msg ?G; ?G <= ?H |] ==> ?m : abs_msg ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 0))
           ))),
    ("m3_enc.R23_presE",
     "[| (?s, ?t) : R23_pres; runs ?s = runs ?t ==> PROP ?W |] ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_hole 3)
            ),
        template_implication
         ([template_equation
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 1))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m3_enc.parts_insertD",
     "?c : parts (insert ?X ?H) ==> ?c : parts {?X} Un parts ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_hole 0))),
               template_app (template_hole 3, template_var 0)))
           ))),
    ("m3_enc.PO_m3_step1_refines_m2_step1",
     "{R23 Int
       UNIV \<times>
       m3_inv1_keys} m2_step1 ?Ra ?A ?B
                      ?Na, m3_step1 ?Ra ?A ?B ?Na {> R23}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     t_empty))),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 5)
         )),
    ("m3_enc.R23_msgsE",
     "[| (?s, ?t) : R23_msgs;
         abs_msg (parts (IK ?t)) <= chan ?s ==> PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1)),
              template_hole 5)
            ),
        template_implication
         ([template_inequation
            (less_equals,
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1))),
             template_app (template_hole 0, template_var 2))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m3_enc.m3_inv1_keysD",
     "[| Key (priK ?A) : parts (IK ?x); ?x : m3_inv1_keys |] ==> ?A : bad",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 1)))),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)
           ))),
    ("m3_enc.R23_msgsE'",
     "[| (?s, ?t) : R23_msgs; ?c : abs_msg (parts (IK ?t)) |]
      ==> ?c : chan ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1)),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 1))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app (template_hole 0, template_var 2))
           ))),
    ("m3_enc.PO_m3_step2_refines_m2_step2",
     "{R23 Int
       UNIV \<times>
       m3_inv1_keys} m2_step2 ?Rb ?A ?B ?Na
                      ?Nb, m3_step2 ?Rb ?A ?B ?Na ?Nb {> R23}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     t_empty))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 5)
         )),
    ("m3_enc.abs_msg_parts_subset_fake",
     "(?s, ?t) : R23_msgs ==>
      abs_msg (parts (IK ?t)) <= fake ik0 (- dom (runs ?s)) (chan ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 1),
                  template_var 0)),
              template_hole 10)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 0))),
         template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)))),
           template_app (template_hole 0, template_var 1))))),
    ("m3_enc.m3_inv1_keysI",
     "(!!A. Key (priK A) : parts (IK ?x) ==> A : bad) ==>
      ?x : m3_inv1_keys",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m3_enc.R23_nonI",
     "(!!N. Nonce N : analz (IK ?t) ==> aNon N : extr ik0 (chan ?s)) ==>
      (?s, ?t) : R23_non",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_hole 0)
           ))),
    ("m3_enc.m3_inv1_keysE",
     "[| ?x : m3_inv1_keys;
         (!!A. Key (priK A) : parts (IK ?x) ==> A : bad) ==> PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_hole 9)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 8, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m3_enc.R23_nonE",
     "[| (?s, ?t) : R23_non;
         (!!N. Nonce N : analz (IK ?t) ==> aNon N : extr ik0 (chan ?s)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 2),
                  template_var 1)),
              template_hole 10)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 9, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m3_enc.abs_msg_DY_subset_fake",
     "[| (?s, ?t) : R23_msgs; (?s, ?t) : R23_non; ?t : m3_inv1_keys |]
      ==> abs_msg (synth (analz (IK ?t)))
          <= fake ik0 (dom (runs ?s)) (chan ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 1),
                  template_var 0)),
              template_hole 13)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 1),
                  template_var 0)),
              template_hole 12)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_hole 10)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 0)))),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1))),
           template_app (template_hole 0, template_var 1)))))]:
   (string * thm * template) list
### theory "Draft.m3_encMoreTemplates"
### 0.443s elapsed time, 0.591s cpu time, 0.038s GC time
val it = (): unit
