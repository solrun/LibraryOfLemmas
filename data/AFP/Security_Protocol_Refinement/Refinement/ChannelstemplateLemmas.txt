   [("Channels.ik0_aAgt", "aAgt ?A : ik0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("Channels.ik0_aNum", "aNum ?T : ik0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("Channels.ik0_aNon", "aNon ?N ~: ik0",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_hole 0)
             )
         )),
    ("Channels.extr_empty", "extr ?T {} = ?T",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Channels.fake_expanding", "?H <= fake ?T ?U ?H",
     template_inequation
      (less_equals, template_var 2,
       template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 2))),
    ("Channels.ik0_aKey_corr", "(aKey ?K : ik0) = (?K : corrKey)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Channels.atoms_fake", "atoms (fake ?T ?U ?H) = ?T Un atoms ?H",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app (template_hole 2, template_var 0)))),
    ("Channels.keys_for_monotone",
     "?G <= ?H ==> keys_for ?G <= keys_for ?H",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Channels.atoms_monotone", "?G <= ?H ==> atoms ?G <= atoms ?H",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Channels.atomsp_atoms_eq", "atomsp (%x. x : ?H) = (%x. x : atoms ?H)",
     template_equation (template_app (template_hole 3, t_empty), t_empty)),
    ("Channels.keys_for_insert_StatCh",
     "keys_for (insert (StatCh ?c ?A ?B ?M) ?H) = keys_for ?H",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("Channels.keys_for_insert_DynCh",
     "keys_for (insert (DynCh ?c ?K ?M) ?H) = insert ?K (keys_for ?H)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app (template_hole 3, template_var 0)))),
    ("Channels.extr_monotone_param",
     "?T <= ?U ==> extr ?T ?H <= extr ?U ?H",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Channels.extr_monotone", "?G <= ?H ==> extr ?T ?G <= extr ?T ?H",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Channels.keys_forI", "DynCh ?c ?K ?M : ?H ==> ?K : keys_for ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app (template_hole 2, template_var 3),
                    template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Channels.extr_into_atoms",
     "?At : extr ?T ?H ==> ?At : ?T Un atoms ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Channels.atoms_insert_DynCh",
     "atoms (insert (DynCh ?c ?K (Msg ?M)) ?H) = set ?M Un atoms ?H",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2),
               template_app (template_hole 2, template_var 1))),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 5, template_var 0)))),
    ("Channels.fake_monotone_param1",
     "?T <= ?T' ==> fake ?T ?U ?H <= fake ?T' ?U ?H",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Channels.fake_monotone",
     "?G <= ?H ==> fake ?T ?U ?G <= fake ?T ?U ?H",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2)))),
    ("Channels.extr_insert",
     "?At : extr ?T ?H ==> ?At : extr ?T (insert ?C ?H)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Channels.atoms_insert_StatCh",
     "atoms (insert (StatCh ?c ?A ?B (Msg ?M)) ?H) = set ?M Un atoms ?H",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 4),
                   template_var 3),
                 template_var 2),
               template_app (template_hole 2, template_var 1))),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 5, template_var 0)))),
    ("Channels.extr_fake",
     "?T' <= ?T ==> extr ?T (fake ?T' ?U ?H) = extr ?T ?H",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Channels.keys_for_mono",
     "[| ?c : keys_for ?G; ?G <= ?H |] ==> ?c : keys_for ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Channels.atoms_mono",
     "[| ?c : atoms ?G; ?G <= ?H |] ==> ?c : atoms ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Channels.extrp_extr_eq",
     "extrp (%x. x : ?T) (%x. x : ?H) = (%x. x : extr ?T ?H)",
     template_equation
      (template_app (template_app (template_hole 3, t_empty), t_empty),
       t_empty)),
    ("Channels.extr_mono",
     "[| ?c : extr ?T ?G; ?G <= ?H |] ==> ?c : extr ?T ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))
           ))),
    ("Channels.extr_mono_param",
     "[| ?c : extr ?T ?H; ?T <= ?U |] ==> ?c : extr ?U ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1))
           ))),
    ("Channels.fakep_fake_eq",
     "fakep (%x. x : ?T) ?U (%x. x : ?H) = (%x. x : fake ?T ?U ?H)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, t_empty), template_var 1),
         t_empty),
       t_empty)),
    ("Channels.fake_mono",
     "[| ?c : fake ?T ?U ?G; ?G <= ?H |] ==> ?c : fake ?T ?U ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 0))
           ))),
    ("Channels.fake_mono_param1",
     "[| ?c : fake ?T ?U ?H; ?T <= ?T' |] ==> ?c : fake ?T' ?U ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("Channels.extr_insert_unused_key_param",
     "?K ~: keys_for ?H ==>
      extr (insert (aKey ?K) ?T) ?H = insert (aKey ?K) (extr ?T ?H)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app (template_hole 4, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_var 0)),
           template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1))))),
    ("Channels.rkeys_sesK", "sesK (?R $ ?i) : rkeys ?U ==> ?R : ?U",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_var 1))),
              template_app
               (template_app (template_hole 5, template_hole 7),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, t_empty)),
                  template_app
                   (template_app (template_hole 2, template_var 0),
                    t_empty))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Channels.extr_insert_non_key_param",
     "?At : range aNon Un range aAgt Un range aNum ==>
      extr (insert ?At ?T) ?H = insert ?At (extr ?T ?H)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_app
                     (template_hole 12,
                      template_app
                       (template_app (template_hole 11, template_hole 10),
                        template_hole 9)),
                    template_app
                     (template_app (template_hole 8, template_hole 7),
                      template_hole 6))),
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_hole 3)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Channels.extr_insert_DynCh",
     "extr ?T (insert (DynCh ?c ?K (Msg ?M)) ?H) =
      (if confid ~: ?c | aKey ?K : extr ?T ?H then extr (set ?M Un ?T) ?H
       else extr ?T ?H)",
     template_equation
      (template_app
        (template_app (template_hole 12, template_var 4),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_app (template_hole 10, template_var 3),
                 template_var 2),
               template_app (template_hole 9, template_var 1))),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_var 3))),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)),
                 template_app
                  (template_app (template_hole 12, template_var 4),
                   template_var 0)))),
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)),
                 template_var 4)),
             template_var 0)),
         template_app
          (template_app (template_hole 12, template_var 4),
           template_var 0)))),
    ("Channels.extr_insert_StatCh",
     "extr ?T (insert (StatCh ?c ?A ?B (Msg ?M)) ?H) =
      (if confid ~: ?c | ?A : bad | ?B : bad then extr (set ?M Un ?T) ?H
       else extr ?T ?H)",
     template_equation
      (template_app
        (template_app (template_hole 12, template_var 5),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 10, template_var 4),
                   template_var 3),
                 template_var 2),
               template_app (template_hole 9, template_var 1))),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_var 4))),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_hole 2)),
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_hole 2)))),
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)),
                 template_var 5)),
             template_var 0)),
         template_app
          (template_app (template_hole 12, template_var 5),
           template_var 0)))),
    ("Channels.fake_intros",
     "[| set ?M <= extr ?T ?H; auth ~: ?c | ?A : bad | ?B : bad |]
      ==> StatCh ?c ?A ?B (Msg ?M) : fake ?T ?U ?H",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 11, template_var 6),
          template_app
           (template_app (template_hole 10, template_var 5),
            template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_var 3))),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_hole 4)),
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_hole 4)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_app (template_hole 1, template_var 6))),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 0),
               template_var 4))
           ))),
    ("Channels.fake_intros",
     "[| set ?M <= extr ?T ?H;
         auth ~: ?c & ?K : rkeys ?U | aKey ?K : extr ?T ?H |]
      ==> DynCh ?c ?K (Msg ?M) : fake ?T ?U ?H",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 20, template_var 5),
          template_app
           (template_app (template_hole 19, template_var 4),
            template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_app
                   (template_hole 17,
                    template_app
                     (template_hole 16,
                      template_app
                       (template_app (template_hole 15, template_hole 14),
                        template_var 2))),
                  template_app
                   (template_app (template_hole 13, template_var 1),
                    template_app
                     (template_app (template_hole 12, template_hole 11),
                      template_app
                       (template_app
                         (template_hole 10,
                          template_app (template_hole 9, t_empty)),
                        template_app
                         (template_app (template_hole 7, template_var 0),
                          t_empty)))))),
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 1)),
                template_app
                 (template_app (template_hole 19, template_var 4),
                  template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1),
                 template_app (template_hole 1, template_var 5))),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0),
               template_var 3))
           )))]
