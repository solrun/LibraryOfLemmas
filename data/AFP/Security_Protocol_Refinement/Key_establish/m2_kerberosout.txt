Loading theory "Draft.Agents" (required by "Draft.m2_kerberosMoreTemplates" via "Draft.m2_kerberos" via "Draft.m1_kerberos" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.Runs" via "Draft.Atoms" via "Draft.Keys")
Loading theory "Draft.Infra" (required by "Draft.m2_kerberosMoreTemplates" via "Draft.m2_kerberos" via "Draft.m1_kerberos" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.s0g_secrecy" via "Draft.Refinement")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.m2_kerberosMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.m2_kerberosMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "Draft.Infra"
### 0.065s elapsed time, 0.297s cpu time, 0.000s GC time
Loading theory "Draft.Refinement" (required by "Draft.m2_kerberosMoreTemplates" via "Draft.m2_kerberos" via "Draft.m1_kerberos" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.s0g_secrecy")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.115s elapsed time, 0.484s cpu time, 0.036s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.m2_kerberosMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
Proofs for inductive predicate(s) "reachp"
specification
  Server_not_bad: Server ~: bad
  Proving monotonicity ...
### theory "HOL-Library.Nat_Bijection"
### 0.318s elapsed time, 1.278s cpu time, 0.106s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.m2_kerberosMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.204s elapsed time, 0.803s cpu time, 0.070s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.m2_kerberosMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Proofs for inductive predicate(s) "behp"
  Proving monotonicity ...
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Agents"
### 0.560s elapsed time, 2.231s cpu time, 0.186s GC time
Loading theory "Draft.Keys" (required by "Draft.m2_kerberosMoreTemplates" via "Draft.m2_kerberos" via "Draft.m1_kerberos" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.Runs" via "Draft.Atoms")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  left :: "'a tree => 'a tree"
consts
  snth :: "'a stream => nat => 'a"
consts
  right :: "'a tree => 'a tree"
Proofs for inductive predicate(s) "seq_liftp"
  Proving monotonicity ...
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
### theory "Draft.Refinement"
### 1.126s elapsed time, 4.298s cpu time, 0.795s GC time
Loading theory "Draft.a0n_agree" (required by "Draft.m2_kerberosMoreTemplates" via "Draft.m2_kerberos" via "Draft.m1_kerberos" via "Draft.m1_keydist_iirn" via "Draft.a0i_agree")
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "{}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Keys"
### 0.882s elapsed time, 3.339s cpu time, 0.718s GC time
Loading theory "Draft.Atoms" (required by "Draft.m2_kerberosMoreTemplates" via "Draft.m2_kerberos" via "Draft.m1_kerberos" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.Runs")
### theory "HOL-Library.Stream"
### 1.115s elapsed time, 4.258s cpu time, 0.798s GC time
Loading theory "Draft.s0g_secrecy" (required by "Draft.m2_kerberosMoreTemplates" via "Draft.m2_kerberos" via "Draft.m1_kerberos" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Atoms"
### 0.311s elapsed time, 1.217s cpu time, 0.140s GC time
Loading theory "Draft.Channels" (required by "Draft.m2_kerberosMoreTemplates" via "Draft.m2_kerberos")
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.s0g_secrecy"
### 0.609s elapsed time, 2.406s cpu time, 0.267s GC time
Loading theory "Draft.Runs" (required by "Draft.m2_kerberosMoreTemplates" via "Draft.m2_kerberos" via "Draft.m1_kerberos" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist")
Found termination order: "size <*mlex*> {}"
### theory "Draft.a0n_agree"
### 1.088s elapsed time, 4.292s cpu time, 0.402s GC time
Loading theory "Draft.a0i_agree" (required by "Draft.m2_kerberosMoreTemplates" via "Draft.m2_kerberos" via "Draft.m1_kerberos" via "Draft.m1_keydist_iirn")
### theory "Draft.a0i_agree"
### 0.116s elapsed time, 0.446s cpu time, 0.049s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.m2_kerberosMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
### theory "Draft.Runs"
### 0.404s elapsed time, 1.596s cpu time, 0.111s GC time
Loading theory "Draft.m1_keydist" (required by "Draft.m2_kerberosMoreTemplates" via "Draft.m2_kerberos" via "Draft.m1_kerberos" via "Draft.m1_keydist_iirn")
### theory "HOL-Library.Tree"
### 2.197s elapsed time, 8.511s cpu time, 1.242s GC time
Loading theory "Draft.Templates" (required by "Draft.m2_kerberosMoreTemplates" via "Draft.ExtrEqs")
Proofs for inductive predicate(s) "atomsp"
  Proving monotonicity ...
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.067s elapsed time, 0.271s cpu time, 0.000s GC time
Proofs for inductive predicate(s) "extrp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "fakep"
  Proving monotonicity ...
Proofs for inductive predicate(s) "knCp"
  Proving monotonicity ...
### theory "Draft.Channels"
### 1.121s elapsed time, 4.167s cpu time, 0.344s GC time
Proofs for inductive predicate(s) "azCp"
  Proving monotonicity ...
### theory "HOL-Library.BigO"
### 0.750s elapsed time, 2.170s cpu time, 0.201s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.m2_kerberosMoreTemplates")
### theory "Draft.m1_keydist"
### 0.753s elapsed time, 2.096s cpu time, 0.201s GC time
Loading theory "Draft.m1_keydist_iirn" (required by "Draft.m2_kerberosMoreTemplates" via "Draft.m2_kerberos" via "Draft.m1_kerberos")
Found termination order: "{}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.536s elapsed time, 1.164s cpu time, 0.098s GC time
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.m1_keydist_iirn"
### 0.920s elapsed time, 1.588s cpu time, 0.152s GC time
Loading theory "Draft.m1_kerberos" (required by "Draft.m2_kerberosMoreTemplates" via "Draft.m2_kerberos")
overloading
  is_len' \<equiv> is_len :: nat
  rs_len' \<equiv> rs_len :: nat
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.m1_kerberos"
### 0.918s elapsed time, 1.077s cpu time, 0.120s GC time
Loading theory "Draft.m2_kerberos" (required by "Draft.m2_kerberosMoreTemplates")
### theory "Draft.m2_kerberos"
### 0.592s elapsed time, 0.643s cpu time, 0.072s GC time
Loading theory "Draft.m2_kerberosMoreTemplates"
val templateLemmas =
   [("m2_kerberos.PO_m2_purge_refines_m1_purge",
     "{R12} m1_purge ?A, m2_purge ?A {> R12}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0)),
           template_hole 2)
         )),
    ("m2_kerberos.PO_m2_tick_refines_m1_tick",
     "{R12} m1_tick ?T, m2_tick ?T {> R12}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0)),
           template_hole 2)
         )),
    ("m2_kerberos.m2_inv5_ikk_sv_derived",
     "?s : m2_inv3_extrKey ==> ?s : m2_inv5_ikk_sv",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 0)
           ))),
    ("m2_kerberos.PO_m2_step2_refines_m1_step2",
     "{R12} m1_step2 ?Rb ?A ?B, m2_step2 ?Rb ?A ?B {> R12}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m2_kerberos.insert_commute_aKey",
     "insert (aKey ?K) (insert ?y ?A) = insert ?y (insert (aKey ?K) ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("m2_kerberos.PO_m2_step1_refines_m1_step1",
     "{R12} m1_step1 ?Ra ?A ?B ?Na, m2_step1 ?Ra ?A ?B ?Na {> R12}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m2_kerberos.PO_m2_leak_refines_leak",
     "{R12} m1_leak ?Rs ?A ?B ?Na ?Ts, m2_leak ?Rs ?A ?B ?Na ?Ts {> R12}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m2_kerberos.PO_m2_step3_refines_m1_step3",
     "{R12} m1_step3 ?Rs ?A ?B ?Kab ?Na
             ?Ts, m2_step3 ?Rs ?A ?B ?Kab ?Na ?Ts {> R12}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 5),
                         template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m2_kerberos.m2_inv2_keys_forD",
     "[| sesK (?R $ sk) : keys_for (chan ?x); ?x : m2_inv2_keys_for |]
      ==> ?R : dom (runs ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_var 1),
                    template_hole 7))),
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m2_kerberos.m2_inv2_keys_forI",
     "(!!R. sesK (R $ sk) : keys_for (chan ?x) ==> R : dom (runs ?x)) ==>
      ?x : m2_inv2_keys_for",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_kerberos.PO_m2_step4_refines_m1_step4",
     "{R12 Int
       UNIV \<times>
       (m2_inv4_M2a Int
        m2_inv3_extrKey)} m1_step4 ?Ra ?A ?B ?Na ?Kab ?Ts
                           ?Ta, m2_step4 ?Ra ?A ?B ?Na ?Kab ?Ts
                                 ?Ta {> R12}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     t_empty))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 1, template_var 6),
                           template_var 5),
                         template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 7)
         )),
    ("m2_kerberos.m2_inv2_keys_forE",
     "[| ?x : m2_inv2_keys_for;
         (!!R. sesK (R $ sk) : keys_for (chan ?x) ==> R : dom (runs ?x)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_hole 10)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 9, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m2_kerberos.m2_inv3a_sesK_compr_simps",
     "?x : m2_inv3a_sesK_compr ==>
      (aKey ?K : extr (insert (aKey ?Kab) ik0) (chan ?x)) =
      (?K = ?Kab | aKey ?K : extr ik0 (chan ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_hole 9)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 1)),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app (template_hole 6, template_var 0)),
                      template_hole 3)),
                  template_app (template_hole 2, template_var 2)))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_var 1)),
                 template_app
                  (template_app (template_hole 5, template_hole 3),
                   template_app (template_hole 2, template_var 2))))
             )))),
    ("m2_kerberos.m2_inv3a_sesK_comprD",
     "?x : m2_inv3a_sesK_compr ==>
      (aKey ?K : extr (aKey ` ?KK Un ik0) (chan ?x)) =
      (?K : ?KK | aKey ?K : extr ik0 (chan ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_hole 10)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app (template_hole 7, template_var 1)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 7),
                     template_var 0)),
                 template_hole 3)),
             template_app (template_hole 2, template_var 2))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 8,
               template_app (template_hole 7, template_var 1)),
             template_app
              (template_app (template_hole 6, template_hole 3),
               template_app (template_hole 2, template_var 2))))))),
    ("m2_kerberos.m2_inv3b_leakD",
     "[| (sesK (?Rs $ sk), ?A, ?B, ?Na, ?Ts) : m1_state.leak ?x;
         ?x : m2_inv3b_leak |]
      ==> ?Ts + Ls <= clk ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app
                   (template_hole 13,
                    template_app
                     (template_hole 12,
                      template_app
                       (template_app (template_hole 11, template_var 5),
                        template_hole 10))),
                  template_app
                   (template_app (template_hole 9, template_var 4),
                    template_app
                     (template_app (template_hole 8, template_var 3),
                      template_app
                       (template_app (template_hole 7, template_var 2),
                        template_var 1))))),
              template_app (template_hole 6, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_var 1), template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("m2_kerberos.PO_m2_step5_refines_m1_step5",
     "{R12 Int
       UNIV \<times>
       (m2_inv9_M3 Int m2_inv5_ikk_sv Int m2_inv4_M2b Int
        m2_inv3_extrKey Int
        m2_inv3b_leak)} m1_step5 ?Rb ?A ?B ?Kab ?Ts
                         ?Ta, m2_step5 ?Rb ?A ?B ?Kab ?Ts ?Ta {> R12}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 11, template_hole 10),
                   template_app
                    (template_app (template_hole 9, template_hole 8),
                     t_empty))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 5),
                         template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 10)
         )),
    ("m2_kerberos.m2_inv1_keysD",
     "[| aKey (sesK (?R $ sk)) : atoms (chan ?x) |
         sesK (?R $ sk) : Domain (m1_state.leak ?x);
         ?x : m2_inv1_keys |]
      ==> ?R : dom (runs ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app
                   (template_hole 14,
                    template_app
                     (template_hole 13,
                      template_app
                       (template_hole 12,
                        template_app
                         (template_app (template_hole 11, template_var 1),
                          template_hole 10)))),
                  template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 0)))),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_hole 12,
                    template_app
                     (template_app (template_hole 11, template_var 1),
                      template_hole 10))),
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 0))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m2_kerberos.PO_m2_step6_refines_m1_step6",
     "{R12 Int
       UNIV \<times>
       (m2_inv9a_init_M2a Int m2_inv8_M4 Int m2_inv5_ikk_sv Int
        m2_inv4_M2a Int
        m2_inv3b_leak)} m1_step6 ?Ra ?A ?B ?Na ?Kab ?Ts
                         ?Ta, m2_step6 ?Ra ?A ?B ?Na ?Kab ?Ts ?Ta {> R12}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 11, template_hole 10),
                   template_app
                    (template_app (template_hole 9, template_hole 8),
                     t_empty))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 1, template_var 6),
                           template_var 5),
                         template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 10)
         )),
    ("m2_kerberos.m2_inv3a_sesK_comprI",
     "(!!K KK.
          (aKey K : extr (aKey ` KK Un ik0) (chan ?x)) =
          (K : KK | aKey K : extr ik0 (chan ?x))) ==>
      ?x : m2_inv3a_sesK_compr",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_kerberos.m2_inv1_keysI",
     "(!!R. aKey (sesK (R $ sk)) : atoms (chan ?x) |
            sesK (R $ sk) : Domain (m1_state.leak ?x) ==>
            R : dom (runs ?x)) ==>
      ?x : m2_inv1_keys",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_kerberos.m2_inv3a_sesK_compr_simps",
     "?x : m2_inv3a_sesK_compr ==>
      (aKey ?K : extr (insert (aKey ?Kab) (aKey ` ?KK Un ik0)) (chan ?x)) =
      (?K = ?Kab | ?K : ?KK | aKey ?K : extr ik0 (chan ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 3),
              template_hole 12)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 2)),
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app (template_hole 9, template_var 1)),
                      template_app
                       (template_app
                         (template_hole 6,
                          template_app
                           (template_app (template_hole 5, template_hole 9),
                            template_var 0)),
                        template_hole 4))),
                  template_app (template_hole 3, template_var 3)))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app (template_hole 9, template_var 2)),
                   template_app
                    (template_app (template_hole 8, template_hole 4),
                     template_app (template_hole 3, template_var 3)))))
             )))),
    ("m2_kerberos.m2_inv1_keysE",
     "[| ?x : m2_inv1_keys;
         (!!R. aKey (sesK (R $ sk)) : atoms (chan ?x) |
               sesK (R $ sk) : Domain (m1_state.leak ?x) ==>
               R : dom (runs ?x)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_hole 15)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 14, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m2_kerberos.m2_inv3a_sesK_comprE",
     "[| ?x : m2_inv3a_sesK_compr;
         (!!K KK.
             (aKey K : extr (aKey ` KK Un ik0) (chan ?x)) =
             (K : KK | aKey K : extr ik0 (chan ?x))) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_hole 12)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 11, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m2_kerberos.m2_inv3b_leakI",
     "(!!Rs A B Na Ts.
          (sesK (Rs $ sk), A, B, Na, Ts) : m1_state.leak ?x ==>
          Ts + Ls <= clk ?x) ==>
      ?x : m2_inv3b_leak",
     template_implication
      ([template_predicate (template_app (template_hole 19, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_kerberos.m2_inv3b_leakE",
     "[| ?x : m2_inv3b_leak;
         (!!Rs A B Na Ts.
             (sesK (Rs $ sk), A, B, Na, Ts) : m1_state.leak ?x ==>
             Ts + Ls <= clk ?x) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 1),
              template_hole 17)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 16, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m2_kerberos.m2_inv34_M2b_authorized",
     "[| StatCh secure Sv ?B (Msg [aKey ?K, aAgt ?A, aNum ?T]) : chan ?s;
         ?s : m2_inv4_M2b; ?s : m2_inv3_extrKey;
         ?K ~: Domain (m1_state.leak ?s) |]
      ==> (?K, ?B) : azC (runs ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 24,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 23,
                        template_app
                         (template_app (template_hole 22, template_hole 21),
                          template_app
                           (template_app
                             (template_hole 22, template_hole 20),
                            template_hole 19))),
                      template_hole 18),
                    template_var 4),
                  template_app
                   (template_hole 17,
                    template_app
                     (template_app
                       (template_hole 16,
                        template_app (template_hole 15, template_var 3)),
                      template_app
                       (template_app
                         (template_hole 16,
                          template_app (template_hole 14, template_var 2)),
                        template_app
                         (template_app
                           (template_hole 16,
                            template_app
                             (template_hole 13, template_var 1)),
                          template_hole 12)))))),
              template_app (template_hole 11, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_hole 9)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_hole 8)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 0)))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 4)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m2_kerberos.m2_inv34_M2a_authorized",
     "[| StatCh secure Sv ?A (Msg [aKey ?K, aAgt ?B, aNum ?T, aNon ?N])
         : chan ?s;
         ?s : m2_inv4_M2a; ?s : m2_inv3_extrKey;
         ?K ~: Domain (m1_state.leak ?s) |]
      ==> (?K, ?A) : azC (runs ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 25,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 24,
                        template_app
                         (template_app (template_hole 23, template_hole 22),
                          template_app
                           (template_app
                             (template_hole 23, template_hole 21),
                            template_hole 20))),
                      template_hole 19),
                    template_var 5),
                  template_app
                   (template_hole 18,
                    template_app
                     (template_app
                       (template_hole 17,
                        template_app (template_hole 16, template_var 4)),
                      template_app
                       (template_app
                         (template_hole 17,
                          template_app (template_hole 15, template_var 3)),
                        template_app
                         (template_app
                           (template_hole 17,
                            template_app
                             (template_hole 14, template_var 2)),
                          template_app
                           (template_app
                             (template_hole 17,
                              template_app
                               (template_hole 13, template_var 1)),
                            template_hole 12))))))),
              template_app (template_hole 11, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_hole 9)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_hole 8)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 0)))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 5)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m2_kerberos.m2_inv9a_init_M2aD",
     "[| runs ?x ?Ra = Some (Init, [?A, ?B], aKey ?Kab # aNum ?Ts # ?z);
         ?x : m2_inv9a_init_M2a |]
      ==> StatCh secure Sv ?A
           (Msg [aKey ?Kab, aAgt ?B, aNum ?Ts, aNon (?Ra $ na)])
          : chan ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 25, template_var 6),
            template_var 5),
          template_app
           (template_hole 24,
            template_app
             (template_app (template_hole 23, template_hole 22),
              template_app
               (template_app
                 (template_hole 21,
                  template_app
                   (template_app (template_hole 20, template_var 4),
                    template_app
                     (template_app (template_hole 20, template_var 3),
                      template_hole 19))),
                template_app
                 (template_app
                   (template_hole 18,
                    template_app (template_hole 17, template_var 2)),
                  template_app
                   (template_app
                     (template_hole 18,
                      template_app (template_hole 16, template_var 1)),
                    template_var 0)))))),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 6),
              template_hole 14)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 12,
                       template_app
                        (template_app (template_hole 11, template_hole 10),
                         template_app
                          (template_app (template_hole 11, template_hole 9),
                           template_hole 8))),
                     template_hole 7),
                   template_var 4),
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 18,
                       template_app (template_hole 17, template_var 2)),
                     template_app
                      (template_app
                        (template_hole 18,
                         template_app (template_hole 5, template_var 3)),
                       template_app
                        (template_app
                          (template_hole 18,
                           template_app (template_hole 16, template_var 1)),
                         template_app
                          (template_app
                            (template_hole 18,
                             template_app
                              (template_hole 4,
                               template_app
                                (template_app
                                  (template_hole 3, template_var 5),
                                 template_hole 2))),
                           template_hole 1))))))),
             template_app (template_hole 0, template_var 6))
           ))),
    ("m2_kerberos.m2_inv6_ikk_initD",
     "[| runs ?x ?Ra = Some (Init, [?A, ?B], aKey ?K # aNum ?Ts # ?nl);
         ?A : good; ?B : good; aKey ?K : extr ik0 (chan ?x);
         ?x : m2_inv6_ikk_init |]
      ==> (?K, ?A, ?B, ?Ra $ na, ?Ts) : m1_state.leak ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 26, template_var 6),
            template_var 5),
          template_app
           (template_hole 25,
            template_app
             (template_app (template_hole 24, template_hole 23),
              template_app
               (template_app
                 (template_hole 22,
                  template_app
                   (template_app (template_hole 21, template_var 4),
                    template_app
                     (template_app (template_hole 21, template_var 3),
                      template_hole 20))),
                template_app
                 (template_app
                   (template_hole 19,
                    template_app (template_hole 18, template_var 2)),
                  template_app
                   (template_app
                     (template_hole 19,
                      template_app (template_hole 17, template_var 1)),
                    template_var 0)))))),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 4),
              template_app (template_hole 15, template_hole 14))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 3),
              template_app (template_hole 15, template_hole 14))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 18, template_var 2)),
              template_app
               (template_app (template_hole 12, template_hole 11),
                template_app (template_hole 10, template_var 6)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 6),
              template_hole 8)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 2),
                 template_app
                  (template_app (template_hole 5, template_var 4),
                   template_app
                    (template_app (template_hole 4, template_var 3),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 2, template_var 5),
                           template_hole 1)),
                       template_var 1))))),
             template_app (template_hole 0, template_var 6))
           ))),
    ("m2_kerberos.m2_inv7_ikk_respD",
     "[| runs ?x ?Rb = Some (Resp, [?A, ?B], aKey ?K # aNum ?Ts # ?nl);
         ?A : good; ?B : good; aKey ?K : extr ik0 (chan ?x);
         ?x : m2_inv7_ikk_resp |]
      ==> EX Na. (?K, ?A, ?B, Na, ?Ts) : m1_state.leak ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 25, template_var 6),
            template_var 5),
          template_app
           (template_hole 24,
            template_app
             (template_app (template_hole 23, template_hole 22),
              template_app
               (template_app
                 (template_hole 21,
                  template_app
                   (template_app (template_hole 20, template_var 4),
                    template_app
                     (template_app (template_hole 20, template_var 3),
                      template_hole 19))),
                template_app
                 (template_app
                   (template_hole 18,
                    template_app (template_hole 17, template_var 2)),
                  template_app
                   (template_app
                     (template_hole 18,
                      template_app (template_hole 16, template_var 1)),
                    template_var 0)))))),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 4),
              template_app (template_hole 14, template_hole 13))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 3),
              template_app (template_hole 14, template_hole 13))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 17, template_var 2)),
              template_app
               (template_app (template_hole 11, template_hole 10),
                template_app (template_hole 9, template_var 6)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 6),
              template_hole 7)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("m2_kerberos.m2_inv9a_init_M2aI",
     "(!!A B Ra Kab Ts z.
          runs ?x Ra = Some (Init, [A, B], aKey Kab # aNum Ts # z) ==>
          StatCh secure Sv A
           (Msg [aKey Kab, aAgt B, aNum Ts, aNon (Ra $ na)])
          : chan ?x) ==>
      ?x : m2_inv9a_init_M2a",
     template_implication
      ([template_predicate (template_app (template_hole 32, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_kerberos.m2_inv4_M2bD",
     "[| StatCh secure Sv ?B (Msg [aKey ?Kab, aAgt ?A, aNum ?Ts]) : chan ?x;
         ?B : good; ?x : m2_inv4_M2b |]
      ==> EX Rs Na.
             ?Kab = sesK (Rs $ sk) &
             runs ?x Rs = Some (Serv, [?A, ?B], [aNon Na, aNum ?Ts])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 34,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 33,
                        template_app
                         (template_app (template_hole 32, template_hole 31),
                          template_app
                           (template_app
                             (template_hole 32, template_hole 30),
                            template_hole 29))),
                      template_hole 28),
                    template_var 4),
                  template_app
                   (template_hole 27,
                    template_app
                     (template_app
                       (template_hole 26,
                        template_app (template_hole 25, template_var 3)),
                      template_app
                       (template_app
                         (template_hole 26,
                          template_app (template_hole 24, template_var 2)),
                        template_app
                         (template_app
                           (template_hole 26,
                            template_app
                             (template_hole 23, template_var 1)),
                          template_hole 22)))))),
              template_app (template_hole 21, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 4),
              template_app (template_hole 19, template_hole 18))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 0),
              template_hole 16)
            )],
       template_predicate (template_app (template_hole 15, t_empty)))),
    ("m2_kerberos.m2_inv5_ikk_svD",
     "[| runs ?x ?R = Some (Serv, [?A, ?B], [aNon ?Na, aNum ?Ts]);
         ?A : good; ?B : good; aKey (sesK (?R $ sk)) : extr ik0 (chan ?x);
         ?x : m2_inv5_ikk_sv |]
      ==> (sesK (?R $ sk), ?A, ?B, ?Na, ?Ts) : m1_state.leak ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 29, template_var 5),
            template_var 4),
          template_app
           (template_hole 28,
            template_app
             (template_app (template_hole 27, template_hole 26),
              template_app
               (template_app
                 (template_hole 25,
                  template_app
                   (template_app (template_hole 24, template_var 3),
                    template_app
                     (template_app (template_hole 24, template_var 2),
                      template_hole 23))),
                template_app
                 (template_app
                   (template_hole 22,
                    template_app (template_hole 21, template_var 1)),
                  template_app
                   (template_app
                     (template_hole 22,
                      template_app (template_hole 20, template_var 0)),
                    template_hole 19)))))),
        template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 3),
              template_app (template_hole 17, template_hole 16))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 2),
              template_app (template_hole 17, template_hole 16))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_hole 14,
                  template_app
                   (template_hole 13,
                    template_app
                     (template_app (template_hole 12, template_var 4),
                      template_hole 11)))),
              template_app
               (template_app (template_hole 10, template_hole 9),
                template_app (template_hole 8, template_var 5)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 5),
              template_hole 6)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 13,
                     template_app
                      (template_app (template_hole 12, template_var 4),
                       template_hole 11))),
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 0))))),
             template_app (template_hole 0, template_var 5))
           ))),
    ("m2_kerberos.m2_inv4_M2aD",
     "[| StatCh secure Sv ?A (Msg [aKey ?Kab, aAgt ?B, aNum ?Ts, aNon ?Na])
         : chan ?x;
         ?A : good; ?x : m2_inv4_M2a |]
      ==> EX Rs.
             ?Kab = sesK (Rs $ sk) &
             runs ?x Rs = Some (Serv, [?A, ?B], [aNon ?Na, aNum ?Ts])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 33,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 32,
                        template_app
                         (template_app (template_hole 31, template_hole 30),
                          template_app
                           (template_app
                             (template_hole 31, template_hole 29),
                            template_hole 28))),
                      template_hole 27),
                    template_var 5),
                  template_app
                   (template_hole 26,
                    template_app
                     (template_app
                       (template_hole 25,
                        template_app (template_hole 24, template_var 4)),
                      template_app
                       (template_app
                         (template_hole 25,
                          template_app (template_hole 23, template_var 3)),
                        template_app
                         (template_app
                           (template_hole 25,
                            template_app
                             (template_hole 22, template_var 2)),
                          template_app
                           (template_app
                             (template_hole 25,
                              template_app
                               (template_hole 21, template_var 1)),
                            template_hole 20))))))),
              template_app (template_hole 19, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 5),
              template_app (template_hole 17, template_hole 16))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 0),
              template_hole 14)
            )],
       template_predicate (template_app (template_hole 13, t_empty)))),
    ("m2_kerberos.m2_inv9a_init_M2aE",
     "[| ?x : m2_inv9a_init_M2a;
         (!!A B Ra Kab Ts z.
             runs ?x Ra = Some (Init, [A, B], aKey Kab # aNum Ts # z) ==>
             StatCh secure Sv A
              (Msg [aKey Kab, aAgt B, aNum Ts, aNon (Ra $ na)])
             : chan ?x) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 31, template_var 1),
              template_hole 30)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 29, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m2_kerberos.m2_inv4_M2bI",
     "(!!A B Kab Ts.
          [| StatCh secure Sv B (Msg [aKey Kab, aAgt A, aNum Ts]) : chan ?x;
             B : good |]
          ==> EX Rs Na.
                 Kab = sesK (Rs $ sk) &
                 runs ?x Rs = Some (Serv, [A, B], [aNon Na, aNum Ts])) ==>
      ?x : m2_inv4_M2b",
     template_implication
      ([template_predicate (template_app (template_hole 38, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_kerberos.m2_inv6_ikk_initI",
     "(!!A B Ra K Ts nl.
          [| runs ?x Ra = Some (Init, [A, B], aKey K # aNum Ts # nl);
             A : good; B : good; aKey K : extr ik0 (chan ?x) |]
          ==> (K, A, B, Ra $ na, Ts) : m1_state.leak ?x) ==>
      ?x : m2_inv6_ikk_init",
     template_implication
      ([template_predicate (template_app (template_hole 33, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_kerberos.m2_inv7_ikk_respI",
     "(!!A B Rb K Ts nl.
          [| runs ?x Rb = Some (Resp, [A, B], aKey K # aNum Ts # nl);
             A : good; B : good; aKey K : extr ik0 (chan ?x) |]
          ==> EX Na. (K, A, B, Na, Ts) : m1_state.leak ?x) ==>
      ?x : m2_inv7_ikk_resp",
     template_implication
      ([template_predicate (template_app (template_hole 32, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_kerberos.m2_inv5_ikk_svI",
     "(!!R A B Na Ts.
          [| runs ?x R = Some (Serv, [A, B], [aNon Na, aNum Ts]); A : good;
             B : good; aKey (sesK (R $ sk)) : extr ik0 (chan ?x) |]
          ==> (sesK (R $ sk), A, B, Na, Ts) : m1_state.leak ?x) ==>
      ?x : m2_inv5_ikk_sv",
     template_implication
      ([template_predicate (template_app (template_hole 35, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_kerberos.m2_inv4_M2aI",
     "(!!A B Kab Ts Na.
          [| StatCh secure Sv A (Msg [aKey Kab, aAgt B, aNum Ts, aNon Na])
             : chan ?x;
             A : good |]
          ==> EX Rs.
                 Kab = sesK (Rs $ sk) &
                 runs ?x Rs = Some (Serv, [A, B], [aNon Na, aNum Ts])) ==>
      ?x : m2_inv4_M2a",
     template_implication
      ([template_predicate (template_app (template_hole 38, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_kerberos.m2_inv4_M2bE",
     "[| ?x : m2_inv4_M2b;
         (!!A B Kab Ts.
             [| StatCh secure Sv B (Msg [aKey Kab, aAgt A, aNum Ts])
                : chan ?x;
                B : good |]
             ==> EX Rs Na.
                    Kab = sesK (Rs $ sk) &
                    runs ?x Rs =
                    Some (Serv, [A, B], [aNon Na, aNum Ts])) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 37, template_var 1),
              template_hole 36)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 35, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m2_kerberos.m2_inv6_ikk_initE",
     "[| ?x : m2_inv6_ikk_init;
         (!!A B Ra K Ts nl.
             [| runs ?x Ra = Some (Init, [A, B], aKey K # aNum Ts # nl);
                A : good; B : good; aKey K : extr ik0 (chan ?x) |]
             ==> (K, A, B, Ra $ na, Ts) : m1_state.leak ?x) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 32, template_var 1),
              template_hole 31)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 30, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m2_kerberos.m2_inv7_ikk_respE",
     "[| ?x : m2_inv7_ikk_resp;
         (!!A B Rb K Ts nl.
             [| runs ?x Rb = Some (Resp, [A, B], aKey K # aNum Ts # nl);
                A : good; B : good; aKey K : extr ik0 (chan ?x) |]
             ==> EX Na. (K, A, B, Na, Ts) : m1_state.leak ?x) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 31, template_var 1),
              template_hole 30)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 29, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m2_kerberos.m2_inv5_ikk_svE",
     "[| ?x : m2_inv5_ikk_sv;
         (!!R A B Na Ts.
             [| runs ?x R = Some (Serv, [A, B], [aNon Na, aNum Ts]);
                A : good; B : good;
                aKey (sesK (R $ sk)) : extr ik0 (chan ?x) |]
             ==> (sesK (R $ sk), A, B, Na, Ts) : m1_state.leak ?x) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 34, template_var 1),
              template_hole 33)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 32, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m2_kerberos.m2_inv4_M2aE",
     "[| ?x : m2_inv4_M2a;
         (!!A B Kab Ts Na.
             [| StatCh secure Sv A
                 (Msg [aKey Kab, aAgt B, aNum Ts, aNon Na])
                : chan ?x;
                A : good |]
             ==> EX Rs.
                    Kab = sesK (Rs $ sk) &
                    runs ?x Rs =
                    Some (Serv, [A, B], [aNon Na, aNum Ts])) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 37, template_var 1),
              template_hole 36)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 35, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m2_kerberos.m2_inv3_extrKeyD",
     "[| aKey ?K : extr ik0 (chan ?x); ?x : m2_inv3_extrKey |]
      ==> ?K : corrKey & ?K : Domain (m1_state.leak ?x) |
          (EX R A' B' Na' Ts'.
              ?K = sesK (R $ sk) &
              runs ?x R = Some (Serv, [A', B'], [aNon Na', aNum Ts']) &
              (A' : bad |
               B' : bad | (?K, A', B', Na', Ts') : m1_state.leak ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 39,
                template_app (template_hole 38, template_var 1)),
              template_app
               (template_app (template_hole 37, template_hole 36),
                template_app (template_hole 35, template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 34, template_var 0),
              template_hole 33)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 32,
               template_app
                (template_app
                  (template_hole 31,
                   template_app
                    (template_app (template_hole 30, template_var 1),
                     template_hole 29)),
                 template_app
                  (template_app (template_hole 30, template_var 1),
                   template_app
                    (template_hole 28,
                     template_app (template_hole 27, template_var 0))))),
             template_app (template_hole 26, t_empty))
           ))),
    ("m2_kerberos.m2_inv8_M4D",
     "[| StatCh secure Sv ?A (Msg [aKey ?Kab, aAgt ?B, aNum ?Ts, aNon ?N])
         : chan ?x;
         dAuth ?Kab (Msg [aNum ?Ta]) : chan ?x;
         aKey ?Kab ~: extr ik0 (chan ?x); ?x : m2_inv8_M4 |]
      ==> EX Rb.
             runs ?x Rb =
             Some (Resp, [?A, ?B], [aKey ?Kab, aNum ?Ts, aNum ?Ta])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 30,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 29,
                        template_app
                         (template_app (template_hole 28, template_hole 27),
                          template_app
                           (template_app
                             (template_hole 28, template_hole 26),
                            template_hole 25))),
                      template_hole 24),
                    template_var 6),
                  template_app
                   (template_hole 23,
                    template_app
                     (template_app
                       (template_hole 22,
                        template_app (template_hole 21, template_var 5)),
                      template_app
                       (template_app
                         (template_hole 22,
                          template_app (template_hole 20, template_var 4)),
                        template_app
                         (template_app
                           (template_hole 22,
                            template_app
                             (template_hole 19, template_var 3)),
                          template_app
                           (template_app
                             (template_hole 22,
                              template_app
                               (template_hole 18, template_var 2)),
                            template_hole 17))))))),
              template_app (template_hole 16, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 30,
                template_app
                 (template_app
                   (template_app
                     (template_hole 15,
                      template_app
                       (template_app (template_hole 28, template_hole 27),
                        template_hole 25)),
                    template_var 5),
                  template_app
                   (template_hole 23,
                    template_app
                     (template_app
                       (template_hole 22,
                        template_app (template_hole 19, template_var 0)),
                      template_hole 17)))),
              template_app (template_hole 16, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 13,
                    template_app (template_hole 21, template_var 5)),
                  template_app
                   (template_app (template_hole 12, template_hole 11),
                    template_app (template_hole 16, template_var 1)))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_hole 9)
            )],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("m2_kerberos.m2_inv4_M2a_M2b_match",
     "[| StatCh secure Sv ?A'
          (Msg [aKey ?Kab, aAgt ?B', aNum ?Ts', aNon ?N])
         : chan ?s;
         StatCh secure Sv ?B (Msg [aKey ?Kab, aAgt ?A, aNum ?Ts]) : chan ?s;
         aKey ?Kab ~: extr ik0 (chan ?s); ?s : m2_inv4_M2a;
         ?s : m2_inv4_M2b |]
      ==> ?A = ?A' & ?B = ?B' & ?Ts = ?Ts'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 24,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 23,
                        template_app
                         (template_app (template_hole 22, template_hole 21),
                          template_app
                           (template_app
                             (template_hole 22, template_hole 20),
                            template_hole 19))),
                      template_hole 18),
                    template_var 8),
                  template_app
                   (template_hole 17,
                    template_app
                     (template_app
                       (template_hole 16,
                        template_app (template_hole 15, template_var 7)),
                      template_app
                       (template_app
                         (template_hole 16,
                          template_app (template_hole 14, template_var 6)),
                        template_app
                         (template_app
                           (template_hole 16,
                            template_app
                             (template_hole 13, template_var 5)),
                          template_app
                           (template_app
                             (template_hole 16,
                              template_app
                               (template_hole 12, template_var 4)),
                            template_hole 11))))))),
              template_app (template_hole 10, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 24,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 23,
                        template_app
                         (template_app (template_hole 22, template_hole 21),
                          template_app
                           (template_app
                             (template_hole 22, template_hole 20),
                            template_hole 19))),
                      template_hole 18),
                    template_var 2),
                  template_app
                   (template_hole 17,
                    template_app
                     (template_app
                       (template_hole 16,
                        template_app (template_hole 15, template_var 7)),
                      template_app
                       (template_app
                         (template_hole 16,
                          template_app (template_hole 14, template_var 1)),
                        template_app
                         (template_app
                           (template_hole 16,
                            template_app
                             (template_hole 13, template_var 0)),
                          template_hole 11)))))),
              template_app (template_hole 10, template_var 3))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 15, template_var 7)),
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_app (template_hole 10, template_var 3)))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 8)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 6)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 5)))
           ))),
    ("m2_kerberos.m2_inv3_extrKeyI",
     "(!!K. aKey K : extr ik0 (chan ?x) ==>
            K : corrKey & K : Domain (m1_state.leak ?x) |
            (EX R A' B' Na' Ts'.
                K = sesK (R $ sk) &
                runs ?x R = Some (Serv, [A', B'], [aNon Na', aNum Ts']) &
                (A' : bad |
                 B' : bad | (K, A', B', Na', Ts') : m1_state.leak ?x))) ==>
      ?x : m2_inv3_extrKey",
     template_implication
      ([template_predicate (template_app (template_hole 41, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_kerberos.m2_inv9_M3D",
     "[| StatCh secure Sv ?B (Msg [aKey ?Kab, aAgt ?A, aNum ?Ts]) : chan ?x;
         dAuth ?Kab (Msg [aAgt ?A, aNum ?Ta]) : chan ?x;
         aKey ?Kab ~: extr ik0 (chan ?x); ?x : m2_inv9_M3 |]
      ==> EX Ra nl.
             runs ?x Ra =
             Some (Init, [?A, ?B], aKey ?Kab # aNum ?Ts # aNum ?Ta # nl)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 30,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 29,
                        template_app
                         (template_app (template_hole 28, template_hole 27),
                          template_app
                           (template_app
                             (template_hole 28, template_hole 26),
                            template_hole 25))),
                      template_hole 24),
                    template_var 5),
                  template_app
                   (template_hole 23,
                    template_app
                     (template_app
                       (template_hole 22,
                        template_app (template_hole 21, template_var 4)),
                      template_app
                       (template_app
                         (template_hole 22,
                          template_app (template_hole 20, template_var 3)),
                        template_app
                         (template_app
                           (template_hole 22,
                            template_app
                             (template_hole 19, template_var 2)),
                          template_hole 18)))))),
              template_app (template_hole 17, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 30,
                template_app
                 (template_app
                   (template_app
                     (template_hole 16,
                      template_app
                       (template_app (template_hole 28, template_hole 27),
                        template_hole 25)),
                    template_var 4),
                  template_app
                   (template_hole 23,
                    template_app
                     (template_app
                       (template_hole 22,
                        template_app (template_hole 20, template_var 3)),
                      template_app
                       (template_app
                         (template_hole 22,
                          template_app (template_hole 19, template_var 0)),
                        template_hole 18))))),
              template_app (template_hole 17, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 14,
                    template_app (template_hole 21, template_var 4)),
                  template_app
                   (template_app (template_hole 13, template_hole 12),
                    template_app (template_hole 17, template_var 1)))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_hole 10)
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("m2_kerberos.m2_inv3_extrKeyE",
     "[| ?x : m2_inv3_extrKey;
         (!!K. aKey K : extr ik0 (chan ?x) ==>
               K : corrKey & K : Domain (m1_state.leak ?x) |
               (EX R A' B' Na' Ts'.
                   K = sesK (R $ sk) &
                   runs ?x R = Some (Serv, [A', B'], [aNon Na', aNum Ts']) &
                   (A' : bad |
                    B' : bad |
                    (K, A', B', Na', Ts') : m1_state.leak ?x))) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 40, template_var 1),
              template_hole 39)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 38, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m2_kerberos.m2_inv8_M4I",
     "(!!Kab A B Ts Ta N.
          [| StatCh secure Sv A (Msg [aKey Kab, aAgt B, aNum Ts, aNon N])
             : chan ?x;
             dAuth Kab (Msg [aNum Ta]) : chan ?x;
             aKey Kab ~: extr ik0 (chan ?x) |]
          ==> EX Rb.
                 runs ?x Rb =
                 Some (Resp, [A, B], [aKey Kab, aNum Ts, aNum Ta])) ==>
      ?x : m2_inv8_M4",
     template_implication
      ([template_predicate (template_app (template_hole 35, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_kerberos.m2_inv9_M3I",
     "(!!Kab A B Ts Ta.
          [| StatCh secure Sv B (Msg [aKey Kab, aAgt A, aNum Ts]) : chan ?x;
             dAuth Kab (Msg [aAgt A, aNum Ta]) : chan ?x;
             aKey Kab ~: extr ik0 (chan ?x) |]
          ==> EX Ra nl.
                 runs ?x Ra =
                 Some (Init, [A, B], aKey Kab # aNum Ts # aNum Ta # nl)) ==>
      ?x : m2_inv9_M3",
     template_implication
      ([template_predicate (template_app (template_hole 34, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_kerberos.m2_inv8_M4E",
     "[| ?x : m2_inv8_M4;
         (!!Kab A B Ts Ta N.
             [| StatCh secure Sv A (Msg [aKey Kab, aAgt B, aNum Ts, aNon N])
                : chan ?x;
                dAuth Kab (Msg [aNum Ta]) : chan ?x;
                aKey Kab ~: extr ik0 (chan ?x) |]
             ==> EX Rb.
                    runs ?x Rb =
                    Some (Resp, [A, B], [aKey Kab, aNum Ts, aNum Ta])) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 34, template_var 1),
              template_hole 33)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 32, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m2_kerberos.m2_inv9_M3E",
     "[| ?x : m2_inv9_M3;
         (!!Kab A B Ts Ta.
             [| StatCh secure Sv B (Msg [aKey Kab, aAgt A, aNum Ts])
                : chan ?x;
                dAuth Kab (Msg [aAgt A, aNum Ta]) : chan ?x;
                aKey Kab ~: extr ik0 (chan ?x) |]
             ==> EX Ra nl.
                    runs ?x Ra =
                    Some
                     (Init, [A, B], aKey Kab # aNum Ts # aNum Ta # nl)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 33, template_var 1),
              template_hole 32)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 31, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.m2_kerberosMoreTemplates"
### 0.833s elapsed time, 1.827s cpu time, 1.174s GC time
val it = (): unit
