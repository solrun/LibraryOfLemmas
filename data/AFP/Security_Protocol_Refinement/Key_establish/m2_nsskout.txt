Loading theory "Draft.Agents" (required by "Draft.m2_nsskMoreTemplates" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.Runs" via "Draft.Atoms" via "Draft.Keys")
Loading theory "Draft.Infra" (required by "Draft.m2_nsskMoreTemplates" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.s0g_secrecy" via "Draft.Refinement")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.m2_nsskMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.m2_nsskMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "Draft.Infra"
### 0.076s elapsed time, 0.334s cpu time, 0.000s GC time
Loading theory "Draft.Refinement" (required by "Draft.m2_nsskMoreTemplates" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.s0g_secrecy")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.116s elapsed time, 0.482s cpu time, 0.034s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.m2_nsskMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
specification
  Server_not_bad: Server ~: bad
Proofs for inductive predicate(s) "reachp"
  Proving monotonicity ...
### theory "HOL-Library.Set_Algebras"
### 0.207s elapsed time, 0.809s cpu time, 0.073s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.m2_nsskMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Nat_Bijection"
### 0.328s elapsed time, 1.307s cpu time, 0.108s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.m2_nsskMoreTemplates" via "Draft.ExtrEqs")
Proofs for inductive predicate(s) "behp"
  Proving monotonicity ...
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Agents"
### 0.534s elapsed time, 2.133s cpu time, 0.175s GC time
Loading theory "Draft.Keys" (required by "Draft.m2_nsskMoreTemplates" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.Runs" via "Draft.Atoms")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Proofs for inductive predicate(s) "seq_liftp"
  Proving monotonicity ...
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "Draft.Refinement"
### 1.128s elapsed time, 4.314s cpu time, 0.807s GC time
Loading theory "Draft.a0n_agree" (required by "Draft.m2_nsskMoreTemplates" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.a0i_agree")
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "Draft.Keys"
### 0.862s elapsed time, 3.253s cpu time, 0.735s GC time
Loading theory "Draft.Atoms" (required by "Draft.m2_nsskMoreTemplates" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.Runs")
### theory "HOL-Library.Stream"
### 1.067s elapsed time, 4.072s cpu time, 0.803s GC time
Loading theory "Draft.s0g_secrecy" (required by "Draft.m2_nsskMoreTemplates" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Atoms"
### 0.291s elapsed time, 1.147s cpu time, 0.071s GC time
Loading theory "Draft.Channels" (required by "Draft.m2_nsskMoreTemplates" via "Draft.m2_nssk")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.s0g_secrecy"
### 0.605s elapsed time, 2.388s cpu time, 0.210s GC time
Loading theory "Draft.Runs" (required by "Draft.m2_nsskMoreTemplates" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
### theory "Draft.a0n_agree"
### 1.179s elapsed time, 4.636s cpu time, 0.456s GC time
Loading theory "Draft.a0i_agree" (required by "Draft.m2_nsskMoreTemplates" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn")
### theory "Draft.Runs"
### 0.411s elapsed time, 1.614s cpu time, 0.177s GC time
Loading theory "Draft.m1_keydist" (required by "Draft.m2_nsskMoreTemplates" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn")
### theory "HOL-Library.Tree"
### 2.150s elapsed time, 8.331s cpu time, 1.189s GC time
Loading theory "Draft.Templates" (required by "Draft.m2_nsskMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.a0i_agree"
### 0.125s elapsed time, 0.484s cpu time, 0.087s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.m2_nsskMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.091s elapsed time, 0.353s cpu time, 0.087s GC time
Proofs for inductive predicate(s) "atomsp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "extrp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "fakep"
  Proving monotonicity ...
Proofs for inductive predicate(s) "knCp"
  Proving monotonicity ...
### theory "Draft.Channels"
### 1.206s elapsed time, 4.454s cpu time, 0.454s GC time
Proofs for inductive predicate(s) "azCp"
  Proving monotonicity ...
### theory "Draft.m1_keydist"
### 0.763s elapsed time, 2.209s cpu time, 0.240s GC time
Loading theory "Draft.m1_keydist_iirn" (required by "Draft.m2_nsskMoreTemplates" via "Draft.m2_nssk" via "Draft.m1_nssk")
### theory "HOL-Library.BigO"
### 0.716s elapsed time, 1.905s cpu time, 0.153s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.m2_nsskMoreTemplates")
Found termination order: "{}"
Found termination order: "{}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.819s elapsed time, 2.100s cpu time, 1.007s GC time
Found termination order: "{}"
### theory "Draft.m1_keydist_iirn"
### 1.266s elapsed time, 2.694s cpu time, 1.049s GC time
Loading theory "Draft.m1_nssk" (required by "Draft.m2_nsskMoreTemplates" via "Draft.m2_nssk")
overloading
  is_len' \<equiv> is_len :: nat
  rs_len' \<equiv> rs_len :: nat
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### Ignoring duplicate safe introduction (intro!)
### finite (dom ?runz) ==> finite (ri_running ?runz ?A ?B ?Kab ?Nb)
### Ignoring duplicate rewrite rule:
### finite (dom ?runz1) ==>
### finite (ri_running ?runz1 ?A1 ?B1 ?Kab1 ?Nb1) == True
### Ignoring duplicate safe introduction (intro!)
### finite (dom ?runz) ==> finite (ri_running ?runz ?A ?B ?Kab ?Nb)
### theory "Draft.m1_nssk"
### 0.796s elapsed time, 0.912s cpu time, 0.089s GC time
Loading theory "Draft.m2_nssk" (required by "Draft.m2_nsskMoreTemplates")
### theory "Draft.m2_nssk"
### 0.941s elapsed time, 1.724s cpu time, 1.095s GC time
Loading theory "Draft.m2_nsskMoreTemplates"
val templateLemmas =
   [("m2_nssk.PO_m2_inv8_M4_step2",
     "{m2_inv8_M4} m2_step2 ?Rb ?A ?B {> m2_inv8_M4}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 1)
         )),
    ("m2_nssk.PO_m2_inv9_M5_step2",
     "{m2_inv9_M5} m2_step2 ?Rb ?A ?B {> m2_inv9_M5}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 1)
         )),
    ("m2_nssk.PO_m2_inv8_M4_step1",
     "{m2_inv8_M4} m2_step1 ?Ra ?A ?B ?Na {> m2_inv8_M4}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 1)
         )),
    ("m2_nssk.PO_m2_inv9_M5_step1",
     "{m2_inv9_M5} m2_step1 ?Ra ?A ?B ?Na {> m2_inv9_M5}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 1)
         )),
    ("m2_nssk.m2_inv5_ikk_sv_derived",
     "?s : m2_inv3_extrKey ==> ?s : m2_inv5_ikk_sv",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 0)
           ))),
    ("m2_nssk.PO_m2_inv8_M4_step4",
     "{m2_inv8_M4} m2_step4 ?Ra ?A ?B ?Na ?Kab {> m2_inv8_M4}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 1)
         )),
    ("m2_nssk.PO_m2_inv8_M4_step7",
     "{m2_inv8_M4} m2_step7 ?Rb ?A ?B ?Nb ?Kab {> m2_inv8_M4}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 1)
         )),
    ("m2_nssk.PO_m2_inv9_M5_step4",
     "{m2_inv9_M5} m2_step4 ?Ra ?A ?B ?Na ?Kab {> m2_inv9_M5}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 1)
         )),
    ("m2_nssk.PO_m2_inv9_M5_step5",
     "{m2_inv9_M5} m2_step5 ?Rb ?A ?B ?Nb ?Kab {> m2_inv9_M5}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 1)
         )),
    ("m2_nssk.PO_m2_inv9_M5_step7",
     "{m2_inv9_M5} m2_step7 ?Rb ?A ?B ?Nb ?Kab {> m2_inv9_M5}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 1)
         )),
    ("m2_nssk.PO_m2_inv8_M4_step6",
     "{m2_inv8_M4} m2_step6 ?Ra ?A ?B ?Na ?Nb ?Kab {> m2_inv8_M4}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 1)
         )),
    ("m2_nssk.PO_m2_inv8_M4_step3",
     "{m2_inv8_M4 Int
       m2_inv2_keys_for} m2_step3 ?Rs ?A ?B ?Na ?Kab {> m2_inv8_M4}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m2_nssk.PO_m2_inv8_M4_leak",
     "{m2_inv8_M4 Int
       m2_inv3a_sesK_compr} m2_leak ?Rs ?Ra ?Rb ?A ?B {> m2_inv8_M4}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m2_nssk.PO_m2_inv9_M5_step3",
     "{m2_inv9_M5 Int
       m2_inv2_keys_for} m2_step3 ?Rs ?A ?B ?Na ?Kab {> m2_inv9_M5}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m2_nssk.PO_m2_inv9_M5_leak",
     "{m2_inv9_M5 Int
       m2_inv3a_sesK_compr} m2_leak ?Rs ?Ra ?Rb ?A ?B {> m2_inv9_M5}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m2_nssk.PO_m2_step2_refines_m1_step2",
     "{R12} m1_step2 ?Rb ?A ?B, m2_step2 ?Rb ?A ?B {> R12}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m2_nssk.insert_commute_aKey",
     "insert (aKey ?K) (insert ?y ?A) = insert ?y (insert (aKey ?K) ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("m2_nssk.PO_m2_inv8_M4_step5",
     "{m2_inv8_M4 Int m2_inv4_M3 Int
       m2_inv4_M2} m2_step5 ?Rb ?A ?B ?Nb ?Kab {> m2_inv8_M4}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_hole 2)),
                 template_hole 1)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 3)
         )),
    ("m2_nssk.PO_m2_step1_refines_m1_step1",
     "{R12} m1_step1 ?Ra ?A ?B ?Na, m2_step1 ?Ra ?A ?B ?Na {> R12}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m2_nssk.PO_m2_leak_refines_leak",
     "{R12} m1_leak ?Rs ?Ra ?Rb ?A ?B, m2_leak ?Rs ?Ra ?Rb ?A ?B {> R12}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m2_nssk.PO_m2_step3_refines_m1_step3",
     "{R12} m1_step3 ?Rs ?A ?B ?Na
             ?Kab, m2_step3 ?Rs ?A ?B ?Na ?Kab {> R12}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m2_nssk.m2_inv2b_corrKey_leakedD",
     "[| ?K : corrKey; ?x : m2_inv2b_corrKey_leaked |]
      ==> ?K : Domain (m1_state.leak ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m2_nssk.m2_inv2b_corrKey_leakedI",
     "(!!K. K : corrKey ==> K : Domain (m1_state.leak ?x)) ==>
      ?x : m2_inv2b_corrKey_leaked",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_nssk.PO_m2_inv9_M5_step6",
     "{m2_inv9_M5 Int m2_inv8a_init_M2 Int m2_inv9a_resp_M3 Int
       m2_inv4_M2 Int
       m2_inv4_M3} m2_step6 ?Ra ?A ?B ?Na ?Nb ?Kab {> m2_inv9_M5}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app
                            (template_app
                              (template_hole 6, template_hole 5),
                             template_hole 4)),
                         template_hole 3)),
                     template_hole 2)),
                 template_hole 1)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 5)
         )),
    ("m2_nssk.m2_inv2_keys_forD",
     "[| sesK (?R $ sk) : keys_for (chan ?x); ?x : m2_inv2_keys_for |]
      ==> ?R : dom (runs ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_var 1),
                    template_hole 7))),
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m2_nssk.m2_inv6_ikk_init_derived",
     "[| (?s, ?t) : R12; ?s : m1_inv2i_serv; ?t : m2_inv5_ikk_sv |]
      ==> ?t : m2_inv6_ikk_init",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 0)),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 0)
           ))),
    ("m2_nssk.m2_inv7_ikk_resp_derived",
     "[| (?s, ?t) : R12; ?s : m1_inv2r_serv; ?t : m2_inv5_ikk_sv |]
      ==> ?t : m2_inv7_ikk_resp",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 0)),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 0)
           ))),
    ("m2_nssk.m2_inv2b_corrKey_leakedE",
     "[| ?x : m2_inv2b_corrKey_leaked;
         (!!K. K : corrKey ==> K : Domain (m1_state.leak ?x)) ==> PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_hole 5)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 4, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m2_nssk.m2_inv2_keys_forI",
     "(!!R. sesK (R $ sk) : keys_for (chan ?x) ==> R : dom (runs ?x)) ==>
      ?x : m2_inv2_keys_for",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_nssk.m2_inv3b_sesK_compr_non_simps",
     "?x : m2_inv3b_sesK_compr_non ==>
      (aNon ?N : extr (insert (aKey ?Kab) ik0) (chan ?x)) =
      (aNon ?N : extr ik0 (chan ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_hole 8)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_hole 1)),
             template_app (template_hole 0, template_var 2))),
         template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1)),
           template_app
            (template_app (template_hole 4, template_hole 1),
             template_app (template_hole 0, template_var 2)))))),
    ("m2_nssk.PO_m2_step4_refines_m1_step4",
     "{R12 Int
       UNIV \<times>
       (m2_inv4_M2 Int m2_inv3_extrKey Int
        m2_inv2b_corrKey_leaked)} m1_step4 ?Ra ?A ?B ?Na
                                   ?Kab, m2_step4 ?Ra ?A ?B ?Na
    ?Kab {> R12}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     t_empty))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 8)
         )),
    ("m2_nssk.PO_m2_step5_refines_m1_step5",
     "{R12 Int
       UNIV \<times>
       (m2_inv4_M3 Int m2_inv3_extrKey Int
        m2_inv2b_corrKey_leaked)} m1_step5 ?Rb ?A ?B ?Nb
                                   ?Kab, m2_step5 ?Rb ?A ?B ?Nb
    ?Kab {> R12}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     t_empty))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 8)
         )),
    ("m2_nssk.PO_m2_step7_refines_m1_step7",
     "{R12 Int
       UNIV \<times>
       (m2_inv9_M5 Int m2_inv9a_resp_M3 Int
        m2_inv7_ikk_resp)} m1_step7 ?Rb ?A ?B ?Nb
                            ?Kab, m2_step7 ?Rb ?A ?B ?Nb ?Kab {> R12}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     t_empty))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 8)
         )),
    ("m2_nssk.m2_inv3b_sesK_compr_nonD",
     "?x : m2_inv3b_sesK_compr_non ==>
      (aNon ?N : extr (aKey ` ?KK Un ik0) (chan ?x)) =
      (aNon ?N : extr ik0 (chan ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_hole 9)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 1)),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_var 0)),
                 template_hole 1)),
             template_app (template_hole 0, template_var 2))),
         template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 1)),
           template_app
            (template_app (template_hole 5, template_hole 1),
             template_app (template_hole 0, template_var 2)))))),
    ("m2_nssk.PO_m2_step6_refines_m1_step6",
     "{R12 Int
       UNIV \<times>
       (m2_inv8a_init_M2 Int m2_inv8_M4 Int
        m2_inv6_ikk_init)} m1_step6 ?Ra ?A ?B ?Na ?Nb
                            ?Kab, m2_step6 ?Ra ?A ?B ?Na ?Nb ?Kab {> R12}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     t_empty))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 5),
                         template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 8)
         )),
    ("m2_nssk.m2_inv2_keys_forE",
     "[| ?x : m2_inv2_keys_for;
         (!!R. sesK (R $ sk) : keys_for (chan ?x) ==> R : dom (runs ?x)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_hole 10)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 9, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m2_nssk.m2_inv3a_sesK_compr_simps",
     "?x : m2_inv3a_sesK_compr ==>
      (aKey ?K : extr (insert (aKey ?Kab) ik0) (chan ?x)) =
      (?K = ?Kab | aKey ?K : extr ik0 (chan ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_hole 9)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 1)),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app (template_hole 6, template_var 0)),
                      template_hole 3)),
                  template_app (template_hole 2, template_var 2)))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_var 1)),
                 template_app
                  (template_app (template_hole 5, template_hole 3),
                   template_app (template_hole 2, template_var 2))))
             )))),
    ("m2_nssk.m2_inv3b_sesK_compr_non_simps",
     "?x : m2_inv3b_sesK_compr_non ==>
      (aNon ?N : extr (insert (aKey ?Kab) (aKey ` ?KK Un ik0)) (chan ?x)) =
      (aNon ?N : extr ik0 (chan ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_hole 10)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app (template_hole 7, template_var 2)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 1)),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 4),
                       template_var 0)),
                   template_hole 1))),
             template_app (template_hole 0, template_var 3))),
         template_app
          (template_app
            (template_hole 8,
             template_app (template_hole 7, template_var 2)),
           template_app
            (template_app (template_hole 6, template_hole 1),
             template_app (template_hole 0, template_var 3)))))),
    ("m2_nssk.m2_inv3a_sesK_comprD",
     "?x : m2_inv3a_sesK_compr ==>
      (aKey ?K : extr (aKey ` ?KK Un ik0) (chan ?x)) =
      (?K : ?KK | aKey ?K : extr ik0 (chan ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_hole 10)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app (template_hole 7, template_var 1)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 7),
                     template_var 0)),
                 template_hole 3)),
             template_app (template_hole 2, template_var 2))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 8,
               template_app (template_hole 7, template_var 1)),
             template_app
              (template_app (template_hole 6, template_hole 3),
               template_app (template_hole 2, template_var 2))))))),
    ("m2_nssk.m2_inv3b_sesK_compr_nonI",
     "(!!N KK.
          (aNon N : extr (aKey ` KK Un ik0) (chan ?x)) =
          (aNon N : extr ik0 (chan ?x))) ==>
      ?x : m2_inv3b_sesK_compr_non",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_nssk.m2_inv1_keysD",
     "[| aKey (sesK (?R $ sk)) : atoms (chan ?x) |
         sesK (?R $ sk) : Domain (m1_state.leak ?x);
         ?x : m2_inv1_keys |]
      ==> ?R : dom (runs ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app
                   (template_hole 14,
                    template_app
                     (template_hole 13,
                      template_app
                       (template_hole 12,
                        template_app
                         (template_app (template_hole 11, template_var 1),
                          template_hole 10)))),
                  template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 0)))),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_hole 12,
                    template_app
                     (template_app (template_hole 11, template_var 1),
                      template_hole 10))),
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 0))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m2_nssk.m2_inv3a_sesK_comprI",
     "(!!K KK.
          (aKey K : extr (aKey ` KK Un ik0) (chan ?x)) =
          (K : KK | aKey K : extr ik0 (chan ?x))) ==>
      ?x : m2_inv3a_sesK_compr",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_nssk.m2_inv1_keysI",
     "(!!R. aKey (sesK (R $ sk)) : atoms (chan ?x) |
            sesK (R $ sk) : Domain (m1_state.leak ?x) ==>
            R : dom (runs ?x)) ==>
      ?x : m2_inv1_keys",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_nssk.m2_inv3b_sesK_compr_nonE",
     "[| ?x : m2_inv3b_sesK_compr_non;
         (!!N KK.
             (aNon N : extr (aKey ` KK Un ik0) (chan ?x)) =
             (aNon N : extr ik0 (chan ?x))) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_hole 11)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 10, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m2_nssk.m2_inv2_keys_for__extr_insert_key",
     "[| ?R ~: dom (runs ?s); ?s : m2_inv2_keys_for |]
      ==> extr (insert (aKey (sesK (?R $ sk))) ?T) (chan ?s) =
          insert (aKey (sesK (?R $ sk))) (extr ?T (chan ?s))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 12, template_var 2),
                  template_app
                   (template_hole 11,
                    template_app (template_hole 10, template_var 1)))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_hole 8)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 2),
                       template_hole 1)))),
               template_var 0)),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_hole 1)))),
           template_app
            (template_app (template_hole 6, template_var 0),
             template_app (template_hole 0, template_var 1)))))),
    ("m2_nssk.m2_inv3a_sesK_compr_simps",
     "?x : m2_inv3a_sesK_compr ==>
      (aKey ?K : extr (insert (aKey ?Kab) (aKey ` ?KK Un ik0)) (chan ?x)) =
      (?K = ?Kab | ?K : ?KK | aKey ?K : extr ik0 (chan ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 3),
              template_hole 12)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 2)),
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app (template_hole 9, template_var 1)),
                      template_app
                       (template_app
                         (template_hole 6,
                          template_app
                           (template_app (template_hole 5, template_hole 9),
                            template_var 0)),
                        template_hole 4))),
                  template_app (template_hole 3, template_var 3)))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app (template_hole 9, template_var 2)),
                   template_app
                    (template_app (template_hole 8, template_hole 4),
                     template_app (template_hole 3, template_var 3)))))
             )))),
    ("m2_nssk.m2_inv1_keysE",
     "[| ?x : m2_inv1_keys;
         (!!R. aKey (sesK (R $ sk)) : atoms (chan ?x) |
               sesK (R $ sk) : Domain (m1_state.leak ?x) ==>
               R : dom (runs ?x)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_hole 15)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 14, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m2_nssk.m2_inv3a_sesK_comprE",
     "[| ?x : m2_inv3a_sesK_compr;
         (!!K KK.
             (aKey K : extr (aKey ` KK Un ik0) (chan ?x)) =
             (K : KK | aKey K : extr ik0 (chan ?x))) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_hole 12)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 11, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m2_nssk.m2_inv9a_resp_M3D",
     "[| runs ?x ?Rb = Some (Resp, [?A, ?B], aKey ?Kab # ?al);
         ?x : m2_inv9a_resp_M3 |]
      ==> StatCh secure Sv ?B (Msg [aKey ?Kab, aAgt ?A]) : chan ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 21, template_var 5),
            template_var 4),
          template_app
           (template_hole 20,
            template_app
             (template_app (template_hole 19, template_hole 18),
              template_app
               (template_app
                 (template_hole 17,
                  template_app
                   (template_app (template_hole 16, template_var 3),
                    template_app
                     (template_app (template_hole 16, template_var 2),
                      template_hole 15))),
                template_app
                 (template_app
                   (template_hole 14,
                    template_app (template_hole 13, template_var 1)),
                  template_var 0))))),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 5),
              template_hole 11)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 8, template_hole 7),
                         template_app
                          (template_app (template_hole 8, template_hole 6),
                           template_hole 5))),
                     template_hole 4),
                   template_var 2),
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 14,
                       template_app (template_hole 13, template_var 1)),
                     template_app
                      (template_app
                        (template_hole 14,
                         template_app (template_hole 2, template_var 3)),
                       template_hole 1))))),
             template_app (template_hole 0, template_var 5))
           ))),
    ("m2_nssk.m2_inv8a_init_M2D",
     "[| runs ?x ?Ra = Some (Init, [?A, ?B], aKey ?Kab # ?al);
         ?x : m2_inv8a_init_M2 |]
      ==> StatCh secure Sv ?A (Msg [aNon (?Ra $ na), aAgt ?B, aKey ?Kab])
          : chan ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 24, template_var 5),
            template_var 4),
          template_app
           (template_hole 23,
            template_app
             (template_app (template_hole 22, template_hole 21),
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_app (template_hole 19, template_var 3),
                    template_app
                     (template_app (template_hole 19, template_var 2),
                      template_hole 18))),
                template_app
                 (template_app
                   (template_hole 17,
                    template_app (template_hole 16, template_var 1)),
                  template_var 0))))),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 5),
              template_hole 14)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 12,
                       template_app
                        (template_app (template_hole 11, template_hole 10),
                         template_app
                          (template_app (template_hole 11, template_hole 9),
                           template_hole 8))),
                     template_hole 7),
                   template_var 3),
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 17,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_app (template_hole 4, template_var 4),
                           template_hole 3))),
                     template_app
                      (template_app
                        (template_hole 17,
                         template_app (template_hole 2, template_var 2)),
                       template_app
                        (template_app
                          (template_hole 17,
                           template_app (template_hole 16, template_var 1)),
                         template_hole 1)))))),
             template_app (template_hole 0, template_var 5))
           ))),
    ("m2_nssk.m2_inv7_ikk_respD",
     "[| runs ?x ?Rb = Some (Resp, [?A, ?B], aKey ?K # ?al); ?A : good;
         ?B : good; aKey ?K : extr ik0 (chan ?x); ?x : m2_inv7_ikk_resp |]
      ==> ?K : Domain (m1_state.leak ?x)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 20, template_var 5),
            template_var 4),
          template_app
           (template_hole 19,
            template_app
             (template_app (template_hole 18, template_hole 17),
              template_app
               (template_app
                 (template_hole 16,
                  template_app
                   (template_app (template_hole 15, template_var 3),
                    template_app
                     (template_app (template_hole 15, template_var 2),
                      template_hole 14))),
                template_app
                 (template_app
                   (template_hole 13,
                    template_app (template_hole 12, template_var 1)),
                  template_var 0))))),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app (template_hole 10, template_hole 9))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app (template_hole 10, template_hole 9))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 12, template_var 1)),
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_app (template_hole 5, template_var 5)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 5),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 5)))
           ))),
    ("m2_nssk.m2_inv34_M3_authorized",
     "[| StatCh secure Sv ?B (Msg [aKey ?K, aAgt ?A]) : chan ?s;
         ?s : m2_inv4_M3; ?s : m2_inv3_extrKey;
         ?s : m2_inv2b_corrKey_leaked; ?K ~: Domain (m1_state.leak ?s) |]
      ==> (?K, ?B) : azC (runs ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 24,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 23,
                        template_app
                         (template_app (template_hole 22, template_hole 21),
                          template_app
                           (template_app
                             (template_hole 22, template_hole 20),
                            template_hole 19))),
                      template_hole 18),
                    template_var 3),
                  template_app
                   (template_hole 17,
                    template_app
                     (template_app
                       (template_hole 16,
                        template_app (template_hole 15, template_var 2)),
                      template_app
                       (template_app
                         (template_hole 16,
                          template_app (template_hole 14, template_var 1)),
                        template_hole 13))))),
              template_app (template_hole 12, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_hole 10)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_hole 9)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_hole 8)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 0)))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 3)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m2_nssk.m2_inv9a_resp_M3I",
     "(!!Rb A B Kab al.
          runs ?x Rb = Some (Resp, [A, B], aKey Kab # al) ==>
          StatCh secure Sv B (Msg [aKey Kab, aAgt A]) : chan ?x) ==>
      ?x : m2_inv9a_resp_M3",
     template_implication
      ([template_predicate (template_app (template_hole 27, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_nssk.m2_inv34_M2_authorized",
     "[| StatCh secure Sv ?A (Msg [aNon ?N, aAgt ?B, aKey ?K]) : chan ?s;
         ?s : m2_inv4_M2; ?s : m2_inv3_extrKey;
         ?s : m2_inv2b_corrKey_leaked; ?K ~: Domain (m1_state.leak ?s) |]
      ==> (?K, ?A) : azC (runs ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 25,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 24,
                        template_app
                         (template_app (template_hole 23, template_hole 22),
                          template_app
                           (template_app
                             (template_hole 23, template_hole 21),
                            template_hole 20))),
                      template_hole 19),
                    template_var 4),
                  template_app
                   (template_hole 18,
                    template_app
                     (template_app
                       (template_hole 17,
                        template_app (template_hole 16, template_var 3)),
                      template_app
                       (template_app
                         (template_hole 17,
                          template_app (template_hole 15, template_var 2)),
                        template_app
                         (template_app
                           (template_hole 17,
                            template_app
                             (template_hole 14, template_var 1)),
                          template_hole 13)))))),
              template_app (template_hole 12, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_hole 10)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_hole 9)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_hole 8)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 0)))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 4)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m2_nssk.m2_inv9a_resp_M3E",
     "[| ?x : m2_inv9a_resp_M3;
         (!!Rb A B Kab al.
             runs ?x Rb = Some (Resp, [A, B], aKey Kab # al) ==>
             StatCh secure Sv B (Msg [aKey Kab, aAgt A]) : chan ?x) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 26, template_var 1),
              template_hole 25)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 24, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m2_nssk.m2_inv6_ikk_initD",
     "[| runs ?x ?Ra = Some (Init, [?A, ?B], aKey ?K # ?al); ?A : good;
         ?B : good; aKey ?K : extr ik0 (chan ?x); ?x : m2_inv6_ikk_init |]
      ==> EX Nb'. (?K, ?Ra $ na, Nb') : m1_state.leak ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 24, template_var 5),
            template_var 4),
          template_app
           (template_hole 23,
            template_app
             (template_app (template_hole 22, template_hole 21),
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_app (template_hole 19, template_var 3),
                    template_app
                     (template_app (template_hole 19, template_var 2),
                      template_hole 18))),
                template_app
                 (template_app
                   (template_hole 17,
                    template_app (template_hole 16, template_var 1)),
                  template_var 0))))),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 3),
              template_app (template_hole 14, template_hole 13))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2),
              template_app (template_hole 14, template_hole 13))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 16, template_var 1)),
              template_app
               (template_app (template_hole 11, template_hole 10),
                template_app (template_hole 9, template_var 5)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5),
              template_hole 7)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("m2_nssk.m2_inv8a_init_M2I",
     "(!!Ra A B Kab al.
          runs ?x Ra = Some (Init, [A, B], aKey Kab # al) ==>
          StatCh secure Sv A (Msg [aNon (Ra $ na), aAgt B, aKey Kab])
          : chan ?x) ==>
      ?x : m2_inv8a_init_M2",
     template_implication
      ([template_predicate (template_app (template_hole 30, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_nssk.m2_inv7_ikk_respI",
     "(!!Rb K A B al.
          [| runs ?x Rb = Some (Resp, [A, B], aKey K # al); A : good;
             B : good; aKey K : extr ik0 (chan ?x) |]
          ==> K : Domain (m1_state.leak ?x)) ==>
      ?x : m2_inv7_ikk_resp",
     template_implication
      ([template_predicate (template_app (template_hole 26, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_nssk.m2_inv4_M3D",
     "[| StatCh secure Sv ?B (Msg [aKey ?Kab, aAgt ?A]) : chan ?x;
         ?B : good; ?x : m2_inv4_M3 |]
      ==> EX Rs Na.
             ?Kab = sesK (Rs $ sk) &
             runs ?x Rs = Some (Serv, [?A, ?B], [aNon Na])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 33,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 32,
                        template_app
                         (template_app (template_hole 31, template_hole 30),
                          template_app
                           (template_app
                             (template_hole 31, template_hole 29),
                            template_hole 28))),
                      template_hole 27),
                    template_var 3),
                  template_app
                   (template_hole 26,
                    template_app
                     (template_app
                       (template_hole 25,
                        template_app (template_hole 24, template_var 2)),
                      template_app
                       (template_app
                         (template_hole 25,
                          template_app (template_hole 23, template_var 1)),
                        template_hole 22))))),
              template_app (template_hole 21, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 3),
              template_app (template_hole 19, template_hole 18))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 0),
              template_hole 16)
            )],
       template_predicate (template_app (template_hole 15, t_empty)))),
    ("m2_nssk.m2_inv4_M2D",
     "[| StatCh secure Sv ?A (Msg [aNon ?Na, aAgt ?B, aKey ?Kab]) : chan ?x;
         ?A : good; ?x : m2_inv4_M2 |]
      ==> EX Rs.
             ?Kab = sesK (Rs $ sk) &
             runs ?x Rs = Some (Serv, [?A, ?B], [aNon ?Na])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 32,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 31,
                        template_app
                         (template_app (template_hole 30, template_hole 29),
                          template_app
                           (template_app
                             (template_hole 30, template_hole 28),
                            template_hole 27))),
                      template_hole 26),
                    template_var 4),
                  template_app
                   (template_hole 25,
                    template_app
                     (template_app
                       (template_hole 24,
                        template_app (template_hole 23, template_var 3)),
                      template_app
                       (template_app
                         (template_hole 24,
                          template_app (template_hole 22, template_var 2)),
                        template_app
                         (template_app
                           (template_hole 24,
                            template_app
                             (template_hole 21, template_var 1)),
                          template_hole 20)))))),
              template_app (template_hole 19, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 4),
              template_app (template_hole 17, template_hole 16))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 0),
              template_hole 14)
            )],
       template_predicate (template_app (template_hole 13, t_empty)))),
    ("m2_nssk.m2_inv5_ikk_svD",
     "[| runs ?x ?Rs = Some (Serv, [?A, ?B], aNon ?Na # ?al); ?A : good;
         ?B : good; aKey (sesK (?Rs $ sk)) : extr ik0 (chan ?x);
         ?x : m2_inv5_ikk_sv |]
      ==> EX Nb'. (sesK (?Rs $ sk), ?Na, Nb') : m1_state.leak ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 26, template_var 5),
            template_var 4),
          template_app
           (template_hole 25,
            template_app
             (template_app (template_hole 24, template_hole 23),
              template_app
               (template_app
                 (template_hole 22,
                  template_app
                   (template_app (template_hole 21, template_var 3),
                    template_app
                     (template_app (template_hole 21, template_var 2),
                      template_hole 20))),
                template_app
                 (template_app
                   (template_hole 19,
                    template_app (template_hole 18, template_var 1)),
                  template_var 0))))),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 3),
              template_app (template_hole 16, template_hole 15))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 2),
              template_app (template_hole 16, template_hole 15))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_hole 13,
                  template_app
                   (template_hole 12,
                    template_app
                     (template_app (template_hole 11, template_var 4),
                      template_hole 10)))),
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_app (template_hole 7, template_var 5)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 5),
              template_hole 5)
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("m2_nssk.m2_inv8a_init_M2E",
     "[| ?x : m2_inv8a_init_M2;
         (!!Ra A B Kab al.
             runs ?x Ra = Some (Init, [A, B], aKey Kab # al) ==>
             StatCh secure Sv A (Msg [aNon (Ra $ na), aAgt B, aKey Kab])
             : chan ?x) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 29, template_var 1),
              template_hole 28)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 27, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m2_nssk.m2_inv7_ikk_respE",
     "[| ?x : m2_inv7_ikk_resp;
         (!!Rb K A B al.
             [| runs ?x Rb = Some (Resp, [A, B], aKey K # al); A : good;
                B : good; aKey K : extr ik0 (chan ?x) |]
             ==> K : Domain (m1_state.leak ?x)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 25, template_var 1),
              template_hole 24)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 23, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m2_nssk.m2_inv4_M3I",
     "(!!A B Kab.
          [| StatCh secure Sv B (Msg [aKey Kab, aAgt A]) : chan ?x;
             B : good |]
          ==> EX Rs Na.
                 Kab = sesK (Rs $ sk) &
                 runs ?x Rs = Some (Serv, [A, B], [aNon Na])) ==>
      ?x : m2_inv4_M3",
     template_implication
      ([template_predicate (template_app (template_hole 36, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_nssk.m2_inv6_ikk_initI",
     "(!!Ra K A B al.
          [| runs ?x Ra = Some (Init, [A, B], aKey K # al); A : good;
             B : good; aKey K : extr ik0 (chan ?x) |]
          ==> EX Nb'. (K, Ra $ na, Nb') : m1_state.leak ?x) ==>
      ?x : m2_inv6_ikk_init",
     template_implication
      ([template_predicate (template_app (template_hole 30, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_nssk.m2_inv4_M2I",
     "(!!A B Na Kab.
          [| StatCh secure Sv A (Msg [aNon Na, aAgt B, aKey Kab]) : chan ?x;
             A : good |]
          ==> EX Rs.
                 Kab = sesK (Rs $ sk) &
                 runs ?x Rs = Some (Serv, [A, B], [aNon Na])) ==>
      ?x : m2_inv4_M2",
     template_implication
      ([template_predicate (template_app (template_hole 36, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_nssk.m2_inv4_M3E",
     "[| ?x : m2_inv4_M3;
         (!!A B Kab.
             [| StatCh secure Sv B (Msg [aKey Kab, aAgt A]) : chan ?x;
                B : good |]
             ==> EX Rs Na.
                    Kab = sesK (Rs $ sk) &
                    runs ?x Rs = Some (Serv, [A, B], [aNon Na])) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 35, template_var 1),
              template_hole 34)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 33, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m2_nssk.m2_inv5_ikk_svI",
     "(!!Rs A B Na al.
          [| runs ?x Rs = Some (Serv, [A, B], aNon Na # al); A : good;
             B : good; aKey (sesK (Rs $ sk)) : extr ik0 (chan ?x) |]
          ==> EX Nb'. (sesK (Rs $ sk), Na, Nb') : m1_state.leak ?x) ==>
      ?x : m2_inv5_ikk_sv",
     template_implication
      ([template_predicate (template_app (template_hole 32, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_nssk.m2_inv6_ikk_initE",
     "[| ?x : m2_inv6_ikk_init;
         (!!Ra K A B al.
             [| runs ?x Ra = Some (Init, [A, B], aKey K # al); A : good;
                B : good; aKey K : extr ik0 (chan ?x) |]
             ==> EX Nb'. (K, Ra $ na, Nb') : m1_state.leak ?x) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 29, template_var 1),
              template_hole 28)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 27, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m2_nssk.m2_inv3_extrKeyD",
     "[| aKey ?K : extr ik0 (chan ?x); ?K ~: corrKey;
         ?x : m2_inv3_extrKey |]
      ==> EX R A' B' Na'.
             ?K = sesK (R $ sk) &
             runs ?x R = Some (Serv, [A', B'], [aNon Na']) &
             (A' : bad |
              B' : bad | (EX Nb'. (?K, Na', Nb') : m1_state.leak ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 35,
                template_app (template_hole 34, template_var 1)),
              template_app
               (template_app (template_hole 33, template_hole 32),
                template_app (template_hole 31, template_var 0)))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 29, template_var 1),
                  template_hole 28)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 27, template_var 0),
              template_hole 26)
            )],
       template_predicate (template_app (template_hole 25, t_empty)))),
    ("m2_nssk.m2_inv4_M2_M3_unique_names",
     "[| StatCh secure Sv ?A' (Msg [aNon ?Na, aAgt ?B', aKey ?Kab])
         : chan ?s;
         StatCh secure Sv ?B (Msg [aKey ?Kab, aAgt ?A]) : chan ?s;
         aKey ?Kab ~: extr ik0 (chan ?s); ?s : m2_inv4_M2;
         ?s : m2_inv4_M3 |]
      ==> ?A = ?A' & ?B = ?B'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 21,
                        template_app
                         (template_app (template_hole 20, template_hole 19),
                          template_app
                           (template_app
                             (template_hole 20, template_hole 18),
                            template_hole 17))),
                      template_hole 16),
                    template_var 6),
                  template_app
                   (template_hole 15,
                    template_app
                     (template_app
                       (template_hole 14,
                        template_app (template_hole 13, template_var 5)),
                      template_app
                       (template_app
                         (template_hole 14,
                          template_app (template_hole 12, template_var 4)),
                        template_app
                         (template_app
                           (template_hole 14,
                            template_app
                             (template_hole 11, template_var 3)),
                          template_hole 10)))))),
              template_app (template_hole 9, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 21,
                        template_app
                         (template_app (template_hole 20, template_hole 19),
                          template_app
                           (template_app
                             (template_hole 20, template_hole 18),
                            template_hole 17))),
                      template_hole 16),
                    template_var 1),
                  template_app
                   (template_hole 15,
                    template_app
                     (template_app
                       (template_hole 14,
                        template_app (template_hole 11, template_var 3)),
                      template_app
                       (template_app
                         (template_hole 14,
                          template_app (template_hole 12, template_var 0)),
                        template_hole 10))))),
              template_app (template_hole 9, template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 11, template_var 3)),
                  template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_app (template_hole 9, template_var 2)))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 6)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 4))
           ))),
    ("m2_nssk.m2_inv3_extrKeyI",
     "(!!K. [| aKey K : extr ik0 (chan ?x); K ~: corrKey |]
            ==> EX R A' B' Na'.
                   K = sesK (R $ sk) &
                   runs ?x R = Some (Serv, [A', B'], [aNon Na']) &
                   (A' : bad |
                    B' : bad |
                    (EX Nb'. (K, Na', Nb') : m1_state.leak ?x))) ==>
      ?x : m2_inv3_extrKey",
     template_implication
      ([template_predicate (template_app (template_hole 37, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_nssk.m2_inv4_M2E",
     "[| ?x : m2_inv4_M2;
         (!!A B Na Kab.
             [| StatCh secure Sv A (Msg [aNon Na, aAgt B, aKey Kab])
                : chan ?x;
                A : good |]
             ==> EX Rs.
                    Kab = sesK (Rs $ sk) &
                    runs ?x Rs = Some (Serv, [A, B], [aNon Na])) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 35, template_var 1),
              template_hole 34)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 33, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m2_nssk.m2_inv5_ikk_svE",
     "[| ?x : m2_inv5_ikk_sv;
         (!!Rs A B Na al.
             [| runs ?x Rs = Some (Serv, [A, B], aNon Na # al); A : good;
                B : good; aKey (sesK (Rs $ sk)) : extr ik0 (chan ?x) |]
             ==> EX Nb'. (sesK (Rs $ sk), Na, Nb') : m1_state.leak ?x) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 31, template_var 1),
              template_hole 30)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 29, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m2_nssk.m2_inv9_M5D",
     "[| StatCh secure Sv ?B (Msg [aKey ?Kab, aAgt ?A]) : chan ?x;
         dAuth ?Kab (Msg [aNon ?Nb, aNon ?Nb]) : chan ?x;
         aKey ?Kab ~: extr ik0 (chan ?x); ?x : m2_inv9_M5 |]
      ==> EX Ra. runs ?x Ra = Some (Init, [?A, ?B], [aKey ?Kab, aNon ?Nb])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 29,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 28,
                        template_app
                         (template_app (template_hole 27, template_hole 26),
                          template_app
                           (template_app
                             (template_hole 27, template_hole 25),
                            template_hole 24))),
                      template_hole 23),
                    template_var 4),
                  template_app
                   (template_hole 22,
                    template_app
                     (template_app
                       (template_hole 21,
                        template_app (template_hole 20, template_var 3)),
                      template_app
                       (template_app
                         (template_hole 21,
                          template_app (template_hole 19, template_var 2)),
                        template_hole 18))))),
              template_app (template_hole 17, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 29,
                template_app
                 (template_app
                   (template_app
                     (template_hole 16,
                      template_app
                       (template_app (template_hole 27, template_hole 26),
                        template_hole 24)),
                    template_var 3),
                  template_app
                   (template_hole 22,
                    template_app
                     (template_app
                       (template_hole 21,
                        template_app (template_hole 15, template_var 0)),
                      template_app
                       (template_app
                         (template_hole 21,
                          template_app (template_hole 15, template_var 0)),
                        template_hole 18))))),
              template_app (template_hole 17, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 13,
                    template_app (template_hole 20, template_var 3)),
                  template_app
                   (template_app (template_hole 12, template_hole 11),
                    template_app (template_hole 17, template_var 1)))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_hole 9)
            )],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("m2_nssk.m2_inv3_extrKeyE",
     "[| ?x : m2_inv3_extrKey;
         (!!K. [| aKey K : extr ik0 (chan ?x); K ~: corrKey |]
               ==> EX R A' B' Na'.
                      K = sesK (R $ sk) &
                      runs ?x R = Some (Serv, [A', B'], [aNon Na']) &
                      (A' : bad |
                       B' : bad |
                       (EX Nb'. (K, Na', Nb') : m1_state.leak ?x))) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 36, template_var 1),
              template_hole 35)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 34, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m2_nssk.m2_inv8_M4D",
     "[| StatCh secure Sv ?A (Msg [aNon ?Na, aAgt ?B, aKey ?Kab]) : chan ?x;
         dAuth ?Kab (Msg [aNon ?Nb]) : chan ?x;
         aKey ?Kab ~: extr ik0 (chan ?x); ?x : m2_inv8_M4 |]
      ==> EX Rb.
             ?Nb = Rb $ nb &
             (EX al. runs ?x Rb = Some (Resp, [?A, ?B], aKey ?Kab # al))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 34,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 33,
                        template_app
                         (template_app (template_hole 32, template_hole 31),
                          template_app
                           (template_app
                             (template_hole 32, template_hole 30),
                            template_hole 29))),
                      template_hole 28),
                    template_var 5),
                  template_app
                   (template_hole 27,
                    template_app
                     (template_app
                       (template_hole 26,
                        template_app (template_hole 25, template_var 4)),
                      template_app
                       (template_app
                         (template_hole 26,
                          template_app (template_hole 24, template_var 3)),
                        template_app
                         (template_app
                           (template_hole 26,
                            template_app
                             (template_hole 23, template_var 2)),
                          template_hole 22)))))),
              template_app (template_hole 21, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 34,
                template_app
                 (template_app
                   (template_app
                     (template_hole 20,
                      template_app
                       (template_app (template_hole 32, template_hole 31),
                        template_hole 29)),
                    template_var 2),
                  template_app
                   (template_hole 27,
                    template_app
                     (template_app
                       (template_hole 26,
                        template_app (template_hole 25, template_var 0)),
                      template_hole 22)))),
              template_app (template_hole 21, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 18,
                    template_app (template_hole 23, template_var 2)),
                  template_app
                   (template_app (template_hole 17, template_hole 16),
                    template_app (template_hole 21, template_var 1)))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_hole 14)
            )],
       template_predicate (template_app (template_hole 13, t_empty)))),
    ("m2_nssk.m2_inv9_M5I",
     "(!!Kab A B Nb.
          [| StatCh secure Sv B (Msg [aKey Kab, aAgt A]) : chan ?x;
             dAuth Kab (Msg [aNon Nb, aNon Nb]) : chan ?x;
             aKey Kab ~: extr ik0 (chan ?x) |]
          ==> EX Ra.
                 runs ?x Ra = Some (Init, [A, B], [aKey Kab, aNon Nb])) ==>
      ?x : m2_inv9_M5",
     template_implication
      ([template_predicate (template_app (template_hole 33, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_nssk.m2_inv9_M5E",
     "[| ?x : m2_inv9_M5;
         (!!Kab A B Nb.
             [| StatCh secure Sv B (Msg [aKey Kab, aAgt A]) : chan ?x;
                dAuth Kab (Msg [aNon Nb, aNon Nb]) : chan ?x;
                aKey Kab ~: extr ik0 (chan ?x) |]
             ==> EX Ra.
                    runs ?x Ra =
                    Some (Init, [A, B], [aKey Kab, aNon Nb])) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 32, template_var 1),
              template_hole 31)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 30, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m2_nssk.m2_inv8_M4I",
     "(!!Kab A B Na Nb.
          [| StatCh secure Sv A (Msg [aNon Na, aAgt B, aKey Kab]) : chan ?x;
             dAuth Kab (Msg [aNon Nb]) : chan ?x;
             aKey Kab ~: extr ik0 (chan ?x) |]
          ==> EX Rb.
                 Nb = Rb $ nb &
                 (EX al.
                     runs ?x Rb = Some (Resp, [A, B], aKey Kab # al))) ==>
      ?x : m2_inv8_M4",
     template_implication
      ([template_predicate (template_app (template_hole 38, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m2_nssk.m2_inv8_M4E",
     "[| ?x : m2_inv8_M4;
         (!!Kab A B Na Nb.
             [| StatCh secure Sv A (Msg [aNon Na, aAgt B, aKey Kab])
                : chan ?x;
                dAuth Kab (Msg [aNon Nb]) : chan ?x;
                aKey Kab ~: extr ik0 (chan ?x) |]
             ==> EX Rb.
                    Nb = Rb $ nb &
                    (EX al.
                        runs ?x Rb =
                        Some (Resp, [A, B], aKey Kab # al))) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 37, template_var 1),
              template_hole 36)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 35, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.m2_nsskMoreTemplates"
### 0.547s elapsed time, 0.754s cpu time, 0.069s GC time
val it = (): unit
