Loading theory "Draft.Agents" (required by "Draft.m3_nsskMoreTemplates" via "Draft.m3_nssk" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.Runs" via "Draft.Atoms" via "Draft.Keys")
Loading theory "Draft.Infra" (required by "Draft.m3_nsskMoreTemplates" via "Draft.m3_nssk" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.s0g_secrecy" via "Draft.Refinement")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.m3_nsskMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.m3_nsskMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "Draft.Infra"
### 0.059s elapsed time, 0.273s cpu time, 0.000s GC time
Loading theory "Draft.Refinement" (required by "Draft.m3_nsskMoreTemplates" via "Draft.m3_nssk" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.s0g_secrecy")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.113s elapsed time, 0.469s cpu time, 0.031s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.m3_nsskMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
Proofs for inductive predicate(s) "reachp"
specification
  Server_not_bad: Server ~: bad
  Proving monotonicity ...
### theory "HOL-Library.Nat_Bijection"
### 0.320s elapsed time, 1.291s cpu time, 0.103s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.m3_nsskMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.207s elapsed time, 0.817s cpu time, 0.072s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.m3_nsskMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Proofs for inductive predicate(s) "behp"
  Proving monotonicity ...
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Agents"
### 0.543s elapsed time, 2.165s cpu time, 0.184s GC time
Loading theory "Draft.Keys" (required by "Draft.m3_nsskMoreTemplates" via "Draft.m3_nssk" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.Runs" via "Draft.Atoms")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  left :: "'a tree => 'a tree"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  right :: "'a tree => 'a tree"
Proofs for inductive predicate(s) "seq_liftp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Refinement"
### 1.200s elapsed time, 4.581s cpu time, 0.903s GC time
Loading theory "Draft.a0n_agree" (required by "Draft.m3_nsskMoreTemplates" via "Draft.m3_nssk" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.a0i_agree")
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.093s elapsed time, 4.167s cpu time, 0.875s GC time
Loading theory "Draft.s0g_secrecy" (required by "Draft.m3_nsskMoreTemplates" via "Draft.m3_nssk" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist")
### theory "Draft.Keys"
### 0.884s elapsed time, 3.342s cpu time, 0.794s GC time
Loading theory "Draft.Atoms" (required by "Draft.m3_nsskMoreTemplates" via "Draft.m3_nssk" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.Runs")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Atoms"
### 0.315s elapsed time, 1.243s cpu time, 0.151s GC time
Loading theory "Draft.Channels" (required by "Draft.m3_nsskMoreTemplates" via "Draft.m3_nssk" via "Draft.m2_nssk")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.s0g_secrecy"
### 0.588s elapsed time, 2.319s cpu time, 0.215s GC time
Loading theory "Draft.Runs" (required by "Draft.m3_nsskMoreTemplates" via "Draft.m3_nssk" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.a0n_agree"
### 1.112s elapsed time, 4.374s cpu time, 0.453s GC time
Loading theory "Draft.Message" (required by "Draft.m3_nsskMoreTemplates" via "Draft.m3_nssk")
Found termination order: "{}"
### theory "Draft.Runs"
### 0.407s elapsed time, 1.593s cpu time, 0.164s GC time
Loading theory "Draft.a0i_agree" (required by "Draft.m3_nsskMoreTemplates" via "Draft.m3_nssk" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn")
### theory "HOL-Library.Tree"
### 2.204s elapsed time, 8.541s cpu time, 1.347s GC time
Loading theory "Draft.m1_keydist" (required by "Draft.m3_nsskMoreTemplates" via "Draft.m3_nssk" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn")
### theory "Draft.a0i_agree"
### 0.127s elapsed time, 0.499s cpu time, 0.094s GC time
Loading theory "Draft.Templates" (required by "Draft.m3_nsskMoreTemplates" via "Draft.ExtrEqs")
Proofs for inductive predicate(s) "atomsp"
  Proving monotonicity ...
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.067s elapsed time, 0.270s cpu time, 0.000s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.m3_nsskMoreTemplates" via "Draft.ExtrEqs")
Proofs for inductive predicate(s) "extrp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "fakep"
  Proving monotonicity ...
Proofs for inductive predicate(s) "partsp"
  Proving monotonicity ...
### theory "Draft.Channels"
### 1.479s elapsed time, 5.662s cpu time, 1.337s GC time
Proofs for inductive predicate(s) "knCp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "azCp"
Proofs for inductive predicate(s) "analzp"
  Proving monotonicity ...
  Proving monotonicity ...
Proofs for inductive predicate(s) "synthp"
  Proving monotonicity ...
### theory "Draft.m1_keydist"
### 1.084s elapsed time, 3.775s cpu time, 1.140s GC time
Loading theory "Draft.m1_keydist_iirn" (required by "Draft.m3_nsskMoreTemplates" via "Draft.m3_nssk" via "Draft.m2_nssk" via "Draft.m1_nssk")
### theory "HOL-Library.BigO"
### 1.047s elapsed time, 3.571s cpu time, 1.140s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.m3_nsskMoreTemplates")
### theory "Draft.Message"
### 1.321s elapsed time, 4.616s cpu time, 1.234s GC time
Found termination order: "{}"
Found termination order: "{}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.886s elapsed time, 2.382s cpu time, 1.196s GC time
Found termination order: "{}"
### theory "Draft.m1_keydist_iirn"
### 1.339s elapsed time, 3.023s cpu time, 1.251s GC time
Loading theory "Draft.m1_nssk" (required by "Draft.m3_nsskMoreTemplates" via "Draft.m3_nssk" via "Draft.m2_nssk")
overloading
  is_len' \<equiv> is_len :: nat
  rs_len' \<equiv> rs_len :: nat
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### Ignoring duplicate safe introduction (intro!)
### finite (dom ?runz) ==> finite (ri_running ?runz ?A ?B ?Kab ?Nb)
### Ignoring duplicate rewrite rule:
### finite (dom ?runz1) ==>
### finite (ri_running ?runz1 ?A1 ?B1 ?Kab1 ?Nb1) == True
### Ignoring duplicate safe introduction (intro!)
### finite (dom ?runz) ==> finite (ri_running ?runz ?A ?B ?Kab ?Nb)
### theory "Draft.m1_nssk"
### 0.784s elapsed time, 0.926s cpu time, 0.130s GC time
Loading theory "Draft.m2_nssk" (required by "Draft.m3_nsskMoreTemplates" via "Draft.m3_nssk")
### theory "Draft.m2_nssk"
### 0.622s elapsed time, 0.682s cpu time, 0.081s GC time
Loading theory "Draft.m3_nssk" (required by "Draft.m3_nsskMoreTemplates")
overloading
  ltkeySetup' \<equiv> ltkeySetup :: (ltkey * agent) set
Proofs for inductive predicate(s) "abs_msgp"
  Proving monotonicity ...
### theory "Draft.m3_nssk"
### 0.691s elapsed time, 0.798s cpu time, 0.145s GC time
Loading theory "Draft.m3_nsskMoreTemplates"
val templateLemmas =
   [("m3_nssk.abs_msg_Un", "abs_msg (?G Un ?H) = abs_msg ?G Un abs_msg ?H",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("m3_nssk.abs_msgp_abs_msg_eq",
     "abs_msgp (%x. x : ?H) = (%x. x : abs_msg ?H)",
     template_equation (template_app (template_hole 3, t_empty), t_empty)),
    ("m3_nssk.PO_m3_step2_refines_m2_step2",
     "{R23} m2_step2 ?Rb ?A ?B, m3_step2 ?Rb ?A ?B {> R23}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m3_nssk.analz_Inj_IK", "?X : IK ?s ==> ?X : analz (IK ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 0)))
           ))),
    ("m3_nssk.parts_Inj_IK", "?X : IK ?s ==> ?X : parts (IK ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 0)))
           ))),
    ("m3_nssk.abs_msg_insert_mono",
     "?m : abs_msg ?H ==> ?m : abs_msg (insert ?m' ?H)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("m3_nssk.insert_commute_Key",
     "insert (Key ?K) (insert ?y ?A) = insert ?y (insert (Key ?K) ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("m3_nssk.PO_m3_step1_refines_m2_step1",
     "{R23} m2_step1 ?Ra ?A ?B ?Na, m3_step1 ?Ra ?A ?B ?Na {> R23}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m3_nssk.PO_m3_inv3_sesK_compr_step4",
     "{m3_inv3_sesK_compr Int m3_inv2_ticket Int
       m3_inv1_lkeysec} m3_step4 ?Ra ?A ?B ?Na ?Kab
                         ?X {> m3_inv3_sesK_compr}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_hole 2)),
                 template_hole 1)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 3)
         )),
    ("m3_nssk.R23_msgsI",
     "abs_msg (parts (IK ?t)) <= chan ?s ==> (?s, ?t) : R23_msgs",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 6,
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 1))),
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_hole 0)
           ))),
    ("m3_nssk.PO_m3_leak_refines_m2_leak",
     "{R23} m2_leak ?Rs ?Ra ?Rb ?A ?B, m3_leak ?Rs ?Ra ?Rb ?A ?B {> R23}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m3_nssk.PO_m3_step5_refines_m2_step5",
     "{R23} m2_step5 ?Rb ?A ?B ?Nb
             ?Kab, m3_step5 ?Rb ?A ?B ?Nb ?Kab {> R23}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m3_nssk.PO_m3_step7_refines_m2_step7",
     "{R23} m2_step7 ?Rb ?A ?B ?Nb
             ?Kab, m3_step7 ?Rb ?A ?B ?Nb ?Kab {> R23}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m3_nssk.abs_msg_mono",
     "[| ?m : abs_msg ?G; ?G <= ?H |] ==> ?m : abs_msg ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 0))
           ))),
    ("m3_nssk.PO_m3_step6_refines_m2_step6",
     "{R23} m2_step6 ?Ra ?A ?B ?Na ?Nb
             ?Kab, m3_step6 ?Ra ?A ?B ?Na ?Nb ?Kab {> R23}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 5),
                         template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m3_nssk.m3_inv1_lkeysec_for_analz",
     "?s : m3_inv1_lkeysec ==>
      (Key (shrK ?C) : analz (IK ?s)) = (?C : bad)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_hole 9)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 0)))),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("m3_nssk.m3_inv1_lkeysec_for_parts",
     "?s : m3_inv1_lkeysec ==>
      (Key (shrK ?C) : parts (IK ?s)) = (?C : bad)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_hole 9)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 0)))),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("m3_nssk.R23_presI",
     "runs ?s = runs ?t & m1_state.leak ?s = m1_state.leak ?t ==>
      (?s, ?t) : R23_pres",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_var 1)),
                  template_app (template_hole 6, template_var 0))),
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 1)),
                template_app (template_hole 3, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("m3_nssk.R23_msgsE",
     "[| (?s, ?t) : R23_msgs;
         abs_msg (parts (IK ?t)) <= chan ?s ==> PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1)),
              template_hole 5)
            ),
        template_implication
         ([template_inequation
            (less_equals,
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1))),
             template_app (template_hole 0, template_var 2))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m3_nssk.R23_msgsE'",
     "[| (?s, ?t) : R23_msgs; ?c : abs_msg (parts (IK ?t)) |]
      ==> ?c : chan ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1)),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 1))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app (template_hole 0, template_var 2))
           ))),
    ("m3_nssk.PO_m3_step3_refines_m2_step3",
     "{R23 Int
       m2_inv3a_sesK_compr \<times>
       (m3_inv3_sesK_compr Int
        m3_inv1_lkeysec)} m2_step3 ?Rs ?A ?B ?Na
                           ?Kab, m3_step3 ?Rs ?A ?B ?Na ?Kab {> R23}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     t_empty))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 7)
         )),
    ("m3_nssk.R23_presE",
     "[| (?s, ?t) : R23_pres;
         runs ?s = runs ?t & m1_state.leak ?s = m1_state.leak ?t ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_var 1)),
              template_hole 7)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app (template_hole 4, template_var 2)),
                     template_app (template_hole 3, template_var 1))),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 2)),
                   template_app (template_hole 0, template_var 1)))
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m3_nssk.R23_dests",
     "[| Key ?K : analz (IK ?t); (?s, ?t) : R23_keys |]
      ==> aKey ?K : extr ik0 (chan ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 2)),
              template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_var 1)),
              template_hole 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 2)),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m3_nssk.R23_dests",
     "[| Nonce ?N : analz (IK ?t); (?s, ?t) : R23_non |]
      ==> aNon ?N : extr ik0 (chan ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 2)),
              template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_var 1)),
              template_hole 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 2)),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m3_nssk.PO_m3_step4_refines_m2_step4",
     "{R23 Int
       m2_inv3b_sesK_compr_non \<times>
       (m3_inv3_sesK_compr Int m3_inv2_ticket Int
        m3_inv1_lkeysec)} m2_step4 ?Ra ?A ?B ?Na
                           ?Kab, m3_step4 ?Ra ?A ?B ?Na ?Kab ?X {> R23}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     t_empty))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 8)
         )),
    ("m3_nssk.m3_inv1_lkeysecD",
     "?x : m3_inv1_lkeysec ==>
      (Key (shrK ?C) : parts (IK ?x) --> ?C : bad) &
      (?C : bad --> Key (shrK ?C) : IK ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_hole 10)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_hole 6,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 4, template_var 0)))),
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 1)))),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 5,
                       template_app (template_hole 4, template_var 0)))),
                 template_app (template_hole 2, template_var 1))))
           ))),
    ("m3_nssk.m3_inv1_lkeysecI",
     "(!!C. (Key (shrK C) : parts (IK ?x) --> C : bad) &
            (C : bad --> Key (shrK C) : IK ?x)) ==>
      ?x : m3_inv1_lkeysec",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m3_nssk.m3_inv3_sesK_compr_simps",
     "[| ?x : m3_inv3_sesK_compr; ?Kab : range sesK |]
      ==> (Key ?K : analz (insert (Key ?Kab) (IK ?x))) =
          (?K = ?Kab | Key ?K : analz (IK ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_hole 12)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app
               (template_app (template_hole 10, template_hole 9),
                template_hole 8))
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 0)),
                template_app
                 (template_hole 4,
                  template_app
                   (template_app
                     (template_hole 3,
                      template_app (template_hole 5, template_var 1)),
                    template_app (template_hole 2, template_var 2))))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0)),
                 template_app
                  (template_hole 4,
                   template_app (template_hole 2, template_var 2))))
             )))),
    ("m3_nssk.m3_inv3_sesK_comprD",
     "[| ?x : m3_inv3_sesK_compr; ?KK <= range sesK |]
      ==> (Key ?K : analz (Key ` ?KK Un IK ?x)) =
          (?K : ?KK | Key ?K : analz (IK ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_hole 13)
            ),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 11, template_hole 10),
            template_hole 9))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 0)),
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 6),
                   template_var 1)),
               template_app (template_hole 2, template_var 2)))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 0)),
             template_app
              (template_hole 5,
               template_app (template_hole 2, template_var 2))))))),
    ("m3_nssk.m3_inv1_lkeysecE",
     "[| ?x : m3_inv1_lkeysec;
         (!!C. (Key (shrK C) : parts (IK ?x) --> C : bad) &
               (C : bad --> Key (shrK C) : IK ?x)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_hole 11)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 10, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m3_nssk.R23_dests",
     "[| Key ?K : analz (insert (Key ?Ka) (IK ?t)); (?s, ?t) : R23_keys;
         ?Ka : range sesK |]
      ==> aKey ?K : extr (insert (aKey ?Ka) ik0) (chan ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app (template_hole 16, template_var 3)),
              template_app
               (template_hole 15,
                template_app
                 (template_app
                   (template_hole 14,
                    template_app (template_hole 16, template_var 2)),
                  template_app (template_hole 13, template_var 1))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 0),
                  template_var 1)),
              template_hole 10)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_hole 6))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 3)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 4, template_var 2)),
                   template_hole 1)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m3_nssk.R23_dests",
     "[| Nonce ?N : analz (insert (Key ?K) (IK ?t)); (?s, ?t) : R23_non;
         ?K : range sesK |]
      ==> aNon ?N : extr (insert (aKey ?K) ik0) (chan ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app (template_hole 18, template_var 3)),
              template_app
               (template_hole 17,
                template_app
                 (template_app
                   (template_hole 16,
                    template_app (template_hole 15, template_var 2)),
                  template_app (template_hole 14, template_var 1))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 0),
                  template_var 1)),
              template_hole 11)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_hole 7))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 3)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 2)),
                   template_hole 1)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m3_nssk.m3_inv3_sesK_comprI",
     "(!!K KK.
          KK <= range sesK ==>
          (Key K : analz (Key ` KK Un IK ?x)) =
          (K : KK | Key K : analz (IK ?x))) ==>
      ?x : m3_inv3_sesK_compr",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m3_nssk.R23_keysD",
     "[| Key ?K : analz (Key ` ?KK Un IK ?t); (?s, ?t) : R23_keys;
         ?KK <= range sesK |]
      ==> aKey ?K : extr (aKey ` ?KK Un ik0) (chan ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app (template_hole 18, template_var 3)),
              template_app
               (template_hole 17,
                template_app
                 (template_app
                   (template_hole 16,
                    template_app
                     (template_app (template_hole 15, template_hole 18),
                      template_var 2)),
                  template_app (template_hole 14, template_var 1))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 0),
                  template_var 1)),
              template_hole 11)
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 9, template_hole 8),
            template_hole 7))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 3)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 5),
                       template_var 2)),
                   template_hole 1)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m3_nssk.R23_nonD",
     "[| Nonce ?N : analz (Key ` ?KK Un IK ?t); (?s, ?t) : R23_non;
         ?KK <= range sesK |]
      ==> aNon ?N : extr (aKey ` ?KK Un ik0) (chan ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 21,
                template_app (template_hole 20, template_var 3)),
              template_app
               (template_hole 19,
                template_app
                 (template_app
                   (template_hole 18,
                    template_app
                     (template_app (template_hole 17, template_hole 16),
                      template_var 2)),
                  template_app (template_hole 15, template_var 1))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 0),
                  template_var 1)),
              template_hole 12)
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 10, template_hole 9),
            template_hole 8))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 3)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_var 2)),
                   template_hole 1)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m3_nssk.abs_msg_DY_subset_fakeable",
     "[| (?s, ?t) : R23_msgs; (?s, ?t) : R23_keys; (?s, ?t) : R23_non;
         ?t : m3_inv1_lkeysec |]
      ==> abs_msg (synth (analz (IK ?t)))
          <= fake ik0 (dom (runs ?s)) (chan ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 1),
                  template_var 0)),
              template_hole 14)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 1),
                  template_var 0)),
              template_hole 13)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 1),
                  template_var 0)),
              template_hole 12)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_hole 10)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 0)))),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1))),
           template_app (template_hole 0, template_var 1))))),
    ("m3_nssk.R23_keysI",
     "(!!KK K.
          [| KK <= range sesK; Key K : analz (Key ` KK Un IK ?t) |]
          ==> aKey K : extr (aKey ` KK Un ik0) (chan ?s)) ==>
      (?s, ?t) : R23_keys",
     template_implication
      ([template_predicate (template_app (template_hole 22, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_hole 0)
           ))),
    ("m3_nssk.R23_nonI",
     "(!!KK N.
          [| KK <= range sesK; Nonce N : analz (Key ` KK Un IK ?t) |]
          ==> aNon N : extr (aKey ` KK Un ik0) (chan ?s)) ==>
      (?s, ?t) : R23_non",
     template_implication
      ([template_predicate (template_app (template_hole 24, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_hole 0)
           ))),
    ("m3_nssk.m3_inv3_sesK_comprE",
     "[| ?x : m3_inv3_sesK_compr;
         (!!K KK.
             KK <= range sesK ==>
             (Key K : analz (Key ` KK Un IK ?x)) =
             (K : KK | Key K : analz (IK ?x))) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_hole 15)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 14, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m3_nssk.R23_keysE",
     "[| (?s, ?t) : R23_keys;
         (!!KK K.
             [| KK <= range sesK; Key K : analz (Key ` KK Un IK ?t) |]
             ==> aKey K : extr (aKey ` KK Un ik0) (chan ?s)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 21,
                template_app
                 (template_app (template_hole 20, template_var 2),
                  template_var 1)),
              template_hole 19)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 18, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m3_nssk.R23_nonE",
     "[| (?s, ?t) : R23_non;
         (!!KK N.
             [| KK <= range sesK; Nonce N : analz (Key ` KK Un IK ?t) |]
             ==> aNon N : extr (aKey ` KK Un ik0) (chan ?s)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app
                 (template_app (template_hole 22, template_var 2),
                  template_var 1)),
              template_hole 21)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 20, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m3_nssk.m3_inv3_sesK_compr_simps",
     "[| ?x : m3_inv3_sesK_compr; ?Kab : range sesK & ?KK <= range sesK |]
      ==> (Key ?K : analz (insert (Key ?Kab) (Key ` ?KK Un IK ?x))) =
          (?K = ?Kab | ?K : ?KK | Key ?K : analz (IK ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 3),
              template_hole 16)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 2),
                  template_app
                   (template_app (template_hole 13, template_hole 12),
                    template_hole 11))),
              template_app
               (template_app (template_hole 10, template_var 1),
                template_app
                 (template_app (template_hole 13, template_hole 12),
                  template_hole 11)))
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 0)),
                template_app
                 (template_hole 6,
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app (template_hole 7, template_var 2)),
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_app (template_hole 3, template_hole 7),
                          template_var 1)),
                      template_app (template_hole 2, template_var 3)))))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 14, template_var 0),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_var 0)),
                   template_app
                    (template_hole 6,
                     template_app (template_hole 2, template_var 3)))))
             )))),
    ("m3_nssk.m3_inv2_ticketD",
     "[| Crypt (shrK ?A)
          \<lbrace>Nonce ?N, msg.Agent ?B, Key ?K, ?X\<rbrace>
         : parts (IK ?x);
         ?x : m3_inv2_ticket; ?A ~: bad |]
      ==> ?X = Crypt (shrK ?B) \<lbrace>Key ?K, msg.Agent ?A\<rbrace> &
          ?K : range sesK",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app
                 (template_app
                   (template_hole 19,
                    template_app
                     (template_hole 18,
                      template_app (template_hole 17, template_var 5))),
                  template_app
                   (template_app
                     (template_hole 16,
                      template_app (template_hole 15, template_var 4)),
                    template_app
                     (template_app
                       (template_hole 16,
                        template_app (template_hole 14, template_var 3)),
                      template_app
                       (template_app
                         (template_hole 16,
                          template_app (template_hole 13, template_var 2)),
                        template_var 1))))),
              template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_hole 9)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 5),
                  template_hole 6)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app
                  (template_app
                    (template_hole 19,
                     template_app
                      (template_hole 18,
                       template_app (template_hole 17, template_var 3))),
                   template_app
                    (template_app
                      (template_hole 16,
                       template_app (template_hole 13, template_var 2)),
                     template_app (template_hole 14, template_var 5))))),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_hole 0)))
           ))),
    ("m3_nssk.m3_inv5_ikk_respD",
     "[| runs ?x ?Rb = Some (Resp, [?A, ?B], aKey ?K # ?al); ?A : good;
         ?B : good; Key ?K : analz (IK ?x); ?x : m3_inv5_ikk_resp |]
      ==> ?K : Domain (m1_state.leak ?x)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 20, template_var 5),
            template_var 4),
          template_app
           (template_hole 19,
            template_app
             (template_app (template_hole 18, template_hole 17),
              template_app
               (template_app
                 (template_hole 16,
                  template_app
                   (template_app (template_hole 15, template_var 3),
                    template_app
                     (template_app (template_hole 15, template_var 2),
                      template_hole 14))),
                template_app
                 (template_app
                   (template_hole 13,
                    template_app (template_hole 12, template_var 1)),
                  template_var 0))))),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app (template_hole 10, template_hole 9))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app (template_hole 10, template_hole 9))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)),
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 5)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 5),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 5)))
           ))),
    ("m3_nssk.R23_dests",
     "[| Key ?K : analz (insert (Key ?Ka) (Key ` ?KK Un IK ?t));
         (?s, ?t) : R23_keys; ?Ka : range sesK; ?KK <= range sesK |]
      ==> aKey ?K : extr (insert (aKey ?Ka) (aKey ` ?KK Un ik0)) (chan ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app (template_hole 21, template_var 4)),
              template_app
               (template_hole 20,
                template_app
                 (template_app
                   (template_hole 19,
                    template_app (template_hole 21, template_var 3)),
                  template_app
                   (template_app
                     (template_hole 18,
                      template_app
                       (template_app (template_hole 17, t_empty),
                        template_var 2)),
                    template_app (template_hole 16, template_var 1)))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 0),
                  template_var 1)),
              template_hole 13)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 3),
              template_app
               (template_app (template_hole 11, t_empty), template_hole 9))
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 11, t_empty), template_hole 9))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 4)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 6, template_var 3)),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_hole 6),
                         template_var 2)),
                     template_hole 1))),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m3_nssk.R23_dests",
     "[| Nonce ?N : analz (insert (Key ?K) (Key ` ?KK Un IK ?t));
         (?s, ?t) : R23_non; ?K : range sesK; ?KK <= range sesK |]
      ==> aNon ?N : extr (insert (aKey ?K) (aKey ` ?KK Un ik0)) (chan ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 24,
                template_app (template_hole 23, template_var 4)),
              template_app
               (template_hole 22,
                template_app
                 (template_app
                   (template_hole 21,
                    template_app (template_hole 20, template_var 3)),
                  template_app
                   (template_app
                     (template_hole 19,
                      template_app
                       (template_app (template_hole 18, t_empty),
                        template_var 2)),
                    template_app (template_hole 17, template_var 1)))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 0),
                  template_var 1)),
              template_hole 14)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 3),
              template_app
               (template_app (template_hole 12, t_empty), template_hole 10))
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 12, t_empty), template_hole 10))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app (template_hole 7, template_var 4)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_var 3)),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_hole 4),
                         template_var 2)),
                     template_hole 1))),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m3_nssk.m3_inv4_ikk_initD",
     "[| runs ?x ?Ra = Some (Init, [?A, ?B], aKey ?K # ?al); ?A : good;
         ?B : good; Key ?K : analz (IK ?x); ?x : m3_inv4_ikk_init |]
      ==> EX Nb'. (?K, ?Ra $ na, Nb') : m1_state.leak ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 24, template_var 5),
            template_var 4),
          template_app
           (template_hole 23,
            template_app
             (template_app (template_hole 22, template_hole 21),
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_app (template_hole 19, template_var 3),
                    template_app
                     (template_app (template_hole 19, template_var 2),
                      template_hole 18))),
                template_app
                 (template_app
                   (template_hole 17,
                    template_app (template_hole 16, template_var 1)),
                  template_var 0))))),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 3),
              template_app (template_hole 14, template_hole 13))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2),
              template_app (template_hole 14, template_hole 13))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 1)),
              template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 5)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5),
              template_hole 7)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("m3_nssk.m3_inv2_ticketI",
     "(!!A B N K X.
          [| A ~: bad;
             Crypt (shrK A) \<lbrace>Nonce N, msg.Agent B, Key K, X\<rbrace>
             : parts (IK ?x) |]
          ==> X = Crypt (shrK B) \<lbrace>Key K, msg.Agent A\<rbrace> &
              K : range sesK) ==>
      ?x : m3_inv2_ticket",
     template_implication
      ([template_predicate (template_app (template_hole 25, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m3_nssk.m3_inv5_ikk_respI",
     "(!!Rb K A B al.
          [| runs ?x Rb = Some (Resp, [A, B], aKey K # al); A : good;
             B : good; Key K : analz (IK ?x) |]
          ==> K : Domain (m1_state.leak ?x)) ==>
      ?x : m3_inv5_ikk_resp",
     template_implication
      ([template_predicate (template_app (template_hole 26, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m3_nssk.m3_inv2_ticketE",
     "[| ?x : m3_inv2_ticket;
         (!!A B N K X.
             [| A ~: bad;
                Crypt (shrK A)
                 \<lbrace>Nonce N, msg.Agent B, Key K, X\<rbrace>
                : parts (IK ?x) |]
             ==> X = Crypt (shrK B) \<lbrace>Key K, msg.Agent A\<rbrace> &
                 K : range sesK) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 1),
              template_hole 23)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 22, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m3_nssk.m3_inv5_ikk_respE",
     "[| ?x : m3_inv5_ikk_resp;
         (!!Rb K A B al.
             [| runs ?x Rb = Some (Resp, [A, B], aKey K # al); A : good;
                B : good; Key K : analz (IK ?x) |]
             ==> K : Domain (m1_state.leak ?x)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 25, template_var 1),
              template_hole 24)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 23, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m3_nssk.m3_inv4_ikk_initI",
     "(!!Ra K A B al.
          [| runs ?x Ra = Some (Init, [A, B], aKey K # al); A : good;
             B : good; Key K : analz (IK ?x) |]
          ==> EX Nb'. (K, Ra $ na, Nb') : m1_state.leak ?x) ==>
      ?x : m3_inv4_ikk_init",
     template_implication
      ([template_predicate (template_app (template_hole 30, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m3_nssk.m3_inv4_ikk_initE",
     "[| ?x : m3_inv4_ikk_init;
         (!!Ra K A B al.
             [| runs ?x Ra = Some (Init, [A, B], aKey K # al); A : good;
                B : good; Key K : analz (IK ?x) |]
             ==> EX Nb'. (K, Ra $ na, Nb') : m1_state.leak ?x) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 29, template_var 1),
              template_hole 28)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 27, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.m3_nsskMoreTemplates"
### 0.515s elapsed time, 0.706s cpu time, 0.062s GC time
val it = (): unit
