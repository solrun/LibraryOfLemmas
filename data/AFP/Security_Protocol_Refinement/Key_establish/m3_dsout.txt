Loading theory "Draft.Agents" (required by "Draft.m3_dsMoreTemplates" via "Draft.m3_ds" via "Draft.m2_ds" via "Draft.m1_ds" via "Draft.m1_keydist_inrn" via "Draft.m1_keydist" via "Draft.Runs" via "Draft.Atoms" via "Draft.Keys")
Loading theory "Draft.Infra" (required by "Draft.m3_dsMoreTemplates" via "Draft.m3_ds" via "Draft.m2_ds" via "Draft.m1_ds" via "Draft.m1_keydist_inrn" via "Draft.m1_keydist" via "Draft.s0g_secrecy" via "Draft.Refinement")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.m3_dsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.m3_dsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "Draft.Infra"
### 0.072s elapsed time, 0.320s cpu time, 0.000s GC time
Loading theory "Draft.Refinement" (required by "Draft.m3_dsMoreTemplates" via "Draft.m3_ds" via "Draft.m2_ds" via "Draft.m1_ds" via "Draft.m1_keydist_inrn" via "Draft.m1_keydist" via "Draft.s0g_secrecy")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.133s elapsed time, 0.551s cpu time, 0.031s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.m3_dsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
specification
  Server_not_bad: Server ~: bad
Proofs for inductive predicate(s) "reachp"
  Proving monotonicity ...
### theory "HOL-Library.Nat_Bijection"
### 0.316s elapsed time, 1.263s cpu time, 0.119s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.m3_dsMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.210s elapsed time, 0.829s cpu time, 0.088s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.m3_dsMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Proofs for inductive predicate(s) "behp"
  Proving monotonicity ...
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Agents"
### 0.534s elapsed time, 2.124s cpu time, 0.202s GC time
Loading theory "Draft.Keys" (required by "Draft.m3_dsMoreTemplates" via "Draft.m3_ds" via "Draft.m2_ds" via "Draft.m1_ds" via "Draft.m1_keydist_inrn" via "Draft.m1_keydist" via "Draft.Runs" via "Draft.Atoms")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Proofs for inductive predicate(s) "seq_liftp"
  Proving monotonicity ...
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
### theory "Draft.Refinement"
### 1.138s elapsed time, 4.342s cpu time, 0.882s GC time
Loading theory "Draft.a0n_agree" (required by "Draft.m3_dsMoreTemplates" via "Draft.m3_ds" via "Draft.m2_ds" via "Draft.m1_ds" via "Draft.m1_keydist_inrn" via "Draft.a0i_agree")
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "{}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.076s elapsed time, 4.098s cpu time, 0.879s GC time
Loading theory "Draft.s0g_secrecy" (required by "Draft.m3_dsMoreTemplates" via "Draft.m3_ds" via "Draft.m2_ds" via "Draft.m1_ds" via "Draft.m1_keydist_inrn" via "Draft.m1_keydist")
Found termination order: "size <*mlex*> {}"
### theory "Draft.Keys"
### 0.882s elapsed time, 3.336s cpu time, 0.796s GC time
Loading theory "Draft.Atoms" (required by "Draft.m3_dsMoreTemplates" via "Draft.m3_ds" via "Draft.m2_ds" via "Draft.m1_ds" via "Draft.m1_keydist_inrn" via "Draft.m1_keydist" via "Draft.Runs")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Atoms"
### 0.321s elapsed time, 1.262s cpu time, 0.178s GC time
Loading theory "Draft.Channels" (required by "Draft.m3_dsMoreTemplates" via "Draft.m3_ds" via "Draft.m2_ds")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.s0g_secrecy"
### 0.597s elapsed time, 2.354s cpu time, 0.250s GC time
Loading theory "Draft.Runs" (required by "Draft.m3_dsMoreTemplates" via "Draft.m3_ds" via "Draft.m2_ds" via "Draft.m1_ds" via "Draft.m1_keydist_inrn" via "Draft.m1_keydist")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.a0n_agree"
### 1.108s elapsed time, 4.371s cpu time, 0.491s GC time
Loading theory "Draft.Message" (required by "Draft.m3_dsMoreTemplates" via "Draft.m3_ds")
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
### theory "Draft.Runs"
### 0.418s elapsed time, 1.648s cpu time, 0.221s GC time
Loading theory "Draft.a0i_agree" (required by "Draft.m3_dsMoreTemplates" via "Draft.m3_ds" via "Draft.m2_ds" via "Draft.m1_ds" via "Draft.m1_keydist_inrn")
### theory "Draft.a0i_agree"
### 0.122s elapsed time, 0.481s cpu time, 0.076s GC time
Loading theory "Draft.m1_keydist" (required by "Draft.m3_dsMoreTemplates" via "Draft.m3_ds" via "Draft.m2_ds" via "Draft.m1_ds" via "Draft.m1_keydist_inrn")
### theory "HOL-Library.Tree"
### 2.212s elapsed time, 8.569s cpu time, 1.426s GC time
Loading theory "Draft.Templates" (required by "Draft.m3_dsMoreTemplates" via "Draft.ExtrEqs")
Proofs for inductive predicate(s) "atomsp"
  Proving monotonicity ...
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.067s elapsed time, 0.270s cpu time, 0.000s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.m3_dsMoreTemplates" via "Draft.ExtrEqs")
Proofs for inductive predicate(s) "extrp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "fakep"
  Proving monotonicity ...
Proofs for inductive predicate(s) "partsp"
  Proving monotonicity ...
### theory "Draft.Channels"
### 1.175s elapsed time, 4.627s cpu time, 0.499s GC time
Proofs for inductive predicate(s) "knCp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "analzp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "azCp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "synthp"
  Proving monotonicity ...
### theory "Draft.m1_keydist"
### 0.841s elapsed time, 2.893s cpu time, 0.276s GC time
Loading theory "Draft.m1_keydist_inrn" (required by "Draft.m3_dsMoreTemplates" via "Draft.m3_ds" via "Draft.m2_ds" via "Draft.m1_ds")
### theory "Draft.Message"
### 1.376s elapsed time, 4.802s cpu time, 1.425s GC time
### theory "HOL-Library.BigO"
### 1.085s elapsed time, 3.662s cpu time, 1.284s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.m3_dsMoreTemplates")
Found termination order: "{}"
Found termination order: "{}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.578s elapsed time, 1.261s cpu time, 0.079s GC time
Found termination order: "{}"
### theory "Draft.m1_keydist_inrn"
### 1.217s elapsed time, 2.772s cpu time, 1.116s GC time
Loading theory "Draft.m1_ds" (required by "Draft.m3_dsMoreTemplates" via "Draft.m3_ds" via "Draft.m2_ds")
overloading
  is_len' \<equiv> is_len :: nat
  rs_len' \<equiv> rs_len :: nat
### theory "Draft.m1_ds"
### 0.252s elapsed time, 0.276s cpu time, 0.031s GC time
Loading theory "Draft.m2_ds" (required by "Draft.m3_dsMoreTemplates" via "Draft.m3_ds")
### theory "Draft.m2_ds"
### 0.451s elapsed time, 0.487s cpu time, 0.049s GC time
Loading theory "Draft.m3_ds" (required by "Draft.m3_dsMoreTemplates")
overloading
  ltkeySetup' \<equiv> ltkeySetup :: (ltkey * agent) set
Proofs for inductive predicate(s) "abs_msgp"
  Proving monotonicity ...
### theory "Draft.m3_ds"
### 0.864s elapsed time, 1.601s cpu time, 1.029s GC time
Loading theory "Draft.m3_dsMoreTemplates"
val templateLemmas =
   [("m3_ds.PO_m3_leak_refines_m2_leak",
     "{R23} m2_leak ?Rs, m3_leak ?Rs {> R23}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0)),
           template_hole 2)
         )),
    ("m3_ds.PO_m3_tick_refines_m2_tick",
     "{R23} m2_tick ?T, m3_tick ?T {> R23}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0)),
           template_hole 2)
         )),
    ("m3_ds.abs_msg_Un", "abs_msg (?G Un ?H) = abs_msg ?G Un abs_msg ?H",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("m3_ds.abs_msgp_abs_msg_eq",
     "abs_msgp (%x. x : ?H) = (%x. x : abs_msg ?H)",
     template_equation (template_app (template_hole 3, t_empty), t_empty)),
    ("m3_ds.PO_m3_step1_refines_m2_step1",
     "{R23} m2_step1 ?Ra ?A ?B, m3_step1 ?Ra ?A ?B {> R23}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m3_ds.PO_m3_step2_refines_m2_step2",
     "{R23} m2_step2 ?Rb ?A ?B, m3_step2 ?Rb ?A ?B {> R23}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m3_ds.analz_Inj_IK", "?X : IK ?s ==> ?X : analz (IK ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 0)))
           ))),
    ("m3_ds.parts_Inj_IK", "?X : IK ?s ==> ?X : parts (IK ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 0)))
           ))),
    ("m3_ds.abs_msg_insert_mono",
     "?m : abs_msg ?H ==> ?m : abs_msg (insert ?m' ?H)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("m3_ds.insert_commute_Key",
     "insert (Key ?K) (insert ?y ?A) = insert ?y (insert (Key ?K) ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("m3_ds.PO_m3_inv3_sesK_compr_step4",
     "{m3_inv3_sesK_compr Int m3_inv2_ticket Int
       m3_inv1_lkeysec} m3_step4 ?Ra ?A ?B ?Kab ?Ts
                         ?X {> m3_inv3_sesK_compr}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_hole 2)),
                 template_hole 1)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 3)
         )),
    ("m3_ds.R23_msgsI",
     "abs_msg (parts (IK ?t)) <= chan ?s ==> (?s, ?t) : R23_msgs",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 6,
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 1))),
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_hole 0)
           ))),
    ("m3_ds.PO_m3_step5_refines_m2_step5",
     "{R23} m2_step5 ?Rb ?A ?B ?Kab
             ?Ts, m3_step5 ?Rb ?A ?B ?Kab ?Ts {> R23}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m3_ds.abs_msg_mono",
     "[| ?m : abs_msg ?G; ?G <= ?H |] ==> ?m : abs_msg ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 0))
           ))),
    ("m3_ds.m3_inv1_lkeysec_for_analz",
     "?s : m3_inv1_lkeysec ==>
      (Key (shrK ?C) : analz (IK ?s)) = (?C : bad)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_hole 9)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 0)))),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("m3_ds.m3_inv1_lkeysec_for_parts",
     "?s : m3_inv1_lkeysec ==>
      (Key (shrK ?C) : parts (IK ?s)) = (?C : bad)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_hole 9)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 0)))),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("m3_ds.R23_msgsE",
     "[| (?s, ?t) : R23_msgs;
         abs_msg (parts (IK ?t)) <= chan ?s ==> PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1)),
              template_hole 5)
            ),
        template_implication
         ([template_inequation
            (less_equals,
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1))),
             template_app (template_hole 0, template_var 2))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m3_ds.PO_m3_step3_refines_m2_step3",
     "{R23 Int
       m2_inv3a_sesK_compr \<times>
       (m3_inv3_sesK_compr Int
        m3_inv1_lkeysec)} m2_step3 ?Rs ?A ?B ?Kab
                           ?Ts, m3_step3 ?Rs ?A ?B ?Kab ?Ts {> R23}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     t_empty))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 7)
         )),
    ("m3_ds.R23_keys_dests",
     "[| Key ?K : analz (IK ?t); (?s, ?t) : R23_keys |]
      ==> aKey ?K : extr ik0 (chan ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 2)),
              template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_var 1)),
              template_hole 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 2)),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m3_ds.R23_presI",
     "runs ?s = runs ?t & clk ?s = clk ?t & leak ?s = leak ?t ==>
      (?s, ?t) : R23_pres",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 10, template_var 1)),
                  template_app (template_hole 9, template_var 0))),
              template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_app
                     (template_hole 8,
                      template_app (template_hole 7, template_var 1)),
                    template_app (template_hole 6, template_var 0))),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 1)),
                  template_app (template_hole 3, template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("m3_ds.PO_m3_step4_refines_m2_step4",
     "{R23 Int
       UNIV \<times>
       (m3_inv3_sesK_compr Int m3_inv2_ticket Int
        m3_inv1_lkeysec)} m2_step4 ?Ra ?A ?B ?Kab
                           ?Ts, m3_step4 ?Ra ?A ?B ?Kab ?Ts ?X {> R23}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     t_empty))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 8)
         )),
    ("m3_ds.R23_presE",
     "[| (?s, ?t) : R23_pres;
         runs ?s = runs ?t & clk ?s = clk ?t & leak ?s = leak ?t ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 2),
                  template_var 1)),
              template_hole 10)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_var 2)),
                     template_app (template_hole 6, template_var 1))),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app (template_hole 4, template_var 2)),
                       template_app (template_hole 3, template_var 1))),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_var 2)),
                     template_app (template_hole 0, template_var 1))))
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m3_ds.m3_inv1_lkeysecD",
     "?x : m3_inv1_lkeysec ==>
      (Key (shrK ?C) : parts (IK ?x) --> ?C : bad) &
      (?C : bad --> Key (shrK ?C) : IK ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_hole 10)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_hole 6,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 4, template_var 0)))),
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 1)))),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 5,
                       template_app (template_hole 4, template_var 0)))),
                 template_app (template_hole 2, template_var 1))))
           ))),
    ("m3_ds.m3_inv1_lkeysecI",
     "(!!C. (Key (shrK C) : parts (IK ?x) --> C : bad) &
            (C : bad --> Key (shrK C) : IK ?x)) ==>
      ?x : m3_inv1_lkeysec",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m3_ds.m3_inv3_sesK_compr_simps",
     "[| ?x : m3_inv3_sesK_compr; ?Kab : range sesK |]
      ==> (Key ?K : analz (insert (Key ?Kab) (IK ?x))) =
          (?K = ?Kab | Key ?K : analz (IK ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_hole 12)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app
               (template_app (template_hole 10, template_hole 9),
                template_hole 8))
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 0)),
                template_app
                 (template_hole 4,
                  template_app
                   (template_app
                     (template_hole 3,
                      template_app (template_hole 5, template_var 1)),
                    template_app (template_hole 2, template_var 2))))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0)),
                 template_app
                  (template_hole 4,
                   template_app (template_hole 2, template_var 2))))
             )))),
    ("m3_ds.m3_inv3_sesK_comprD",
     "[| ?x : m3_inv3_sesK_compr; ?KK <= range sesK |]
      ==> (Key ?K : analz (Key ` ?KK Un IK ?x)) =
          (?K : ?KK | Key ?K : analz (IK ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_hole 13)
            ),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 11, template_hole 10),
            template_hole 9))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 0)),
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 6),
                   template_var 1)),
               template_app (template_hole 2, template_var 2)))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 0)),
             template_app
              (template_hole 5,
               template_app (template_hole 2, template_var 2))))))),
    ("m3_ds.m3_inv1_lkeysecE",
     "[| ?x : m3_inv1_lkeysec;
         (!!C. (Key (shrK C) : parts (IK ?x) --> C : bad) &
               (C : bad --> Key (shrK C) : IK ?x)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_hole 11)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 10, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m3_ds.R23_keys_dests",
     "[| Key ?K : analz (insert (Key ?K') (IK ?t)); (?s, ?t) : R23_keys;
         ?K' : range sesK |]
      ==> aKey ?K : extr (insert (aKey ?K') ik0) (chan ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app (template_hole 16, template_var 3)),
              template_app
               (template_hole 15,
                template_app
                 (template_app
                   (template_hole 14,
                    template_app (template_hole 16, template_var 2)),
                  template_app (template_hole 13, template_var 1))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 0),
                  template_var 1)),
              template_hole 10)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_hole 6))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 3)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 4, template_var 2)),
                   template_hole 1)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m3_ds.m3_inv3_sesK_comprI",
     "(!!K KK.
          KK <= range sesK ==>
          (Key K : analz (Key ` KK Un IK ?x)) =
          (K : KK | Key K : analz (IK ?x))) ==>
      ?x : m3_inv3_sesK_compr",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m3_ds.R23_keys_dest",
     "[| Key ?K : analz (Key ` ?KK Un IK ?t); (?s, ?t) : R23_keys;
         ?KK <= range sesK |]
      ==> aKey ?K : extr (aKey ` ?KK Un ik0) (chan ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app (template_hole 18, template_var 3)),
              template_app
               (template_hole 17,
                template_app
                 (template_app
                   (template_hole 16,
                    template_app
                     (template_app (template_hole 15, template_hole 18),
                      template_var 2)),
                  template_app (template_hole 14, template_var 1))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 0),
                  template_var 1)),
              template_hole 11)
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 9, template_hole 8),
            template_hole 7))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 3)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 5),
                       template_var 2)),
                   template_hole 1)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m3_ds.abs_msg_DY_subset_fakeable",
     "[| (?s, ?t) : R23_msgs; (?s, ?t) : R23_keys; (?s, ?t) : ?R23_non;
         ?t : m3_inv1_lkeysec |]
      ==> abs_msg (synth (analz (IK ?t)))
          <= fake ik0 (dom (runs ?s)) (chan ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 2),
                  template_var 1)),
              template_hole 13)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 2),
                  template_var 1)),
              template_hole 12)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_hole 10)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 1)))),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2))),
           template_app (template_hole 0, template_var 2))))),
    ("m3_ds.R23_keysI",
     "(!!KK K.
          [| KK <= range sesK; Key K : analz (Key ` KK Un IK ?t) |]
          ==> aKey K : extr (aKey ` KK Un ik0) (chan ?s)) ==>
      (?s, ?t) : R23_keys",
     template_implication
      ([template_predicate (template_app (template_hole 22, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_hole 0)
           ))),
    ("m3_ds.m3_inv3_sesK_comprE",
     "[| ?x : m3_inv3_sesK_compr;
         (!!K KK.
             KK <= range sesK ==>
             (Key K : analz (Key ` KK Un IK ?x)) =
             (K : KK | Key K : analz (IK ?x))) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_hole 15)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 14, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m3_ds.R23_keysE",
     "[| (?s, ?t) : R23_keys;
         (!!KK K.
             [| KK <= range sesK; Key K : analz (Key ` KK Un IK ?t) |]
             ==> aKey K : extr (aKey ` KK Un ik0) (chan ?s)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 21,
                template_app
                 (template_app (template_hole 20, template_var 2),
                  template_var 1)),
              template_hole 19)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 18, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m3_ds.m3_inv3_sesK_compr_simps",
     "[| ?x : m3_inv3_sesK_compr; ?Kab : range sesK & ?KK <= range sesK |]
      ==> (Key ?K : analz (insert (Key ?Kab) (Key ` ?KK Un IK ?x))) =
          (?K = ?Kab | ?K : ?KK | Key ?K : analz (IK ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 3),
              template_hole 16)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 2),
                  template_app
                   (template_app (template_hole 13, template_hole 12),
                    template_hole 11))),
              template_app
               (template_app (template_hole 10, template_var 1),
                template_app
                 (template_app (template_hole 13, template_hole 12),
                  template_hole 11)))
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 0)),
                template_app
                 (template_hole 6,
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app (template_hole 7, template_var 2)),
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_app (template_hole 3, template_hole 7),
                          template_var 1)),
                      template_app (template_hole 2, template_var 3)))))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 14, template_var 0),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_var 0)),
                   template_app
                    (template_hole 6,
                     template_app (template_hole 2, template_var 3)))))
             )))),
    ("m3_ds.m3_inv2_ticketD",
     "[| Crypt (shrK ?A)
          \<lbrace>Key ?K, msg.Agent ?B, Number ?T, ?X\<rbrace>
         : parts (IK ?x);
         ?x : m3_inv2_ticket; ?A ~: bad |]
      ==> ?X =
          Crypt (shrK ?B)
           \<lbrace>Key ?K, msg.Agent ?A, Number ?T\<rbrace> &
          ?K : range sesK",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app
                 (template_app
                   (template_hole 19,
                    template_app
                     (template_hole 18,
                      template_app (template_hole 17, template_var 5))),
                  template_app
                   (template_app
                     (template_hole 16,
                      template_app (template_hole 15, template_var 4)),
                    template_app
                     (template_app
                       (template_hole 16,
                        template_app (template_hole 14, template_var 3)),
                      template_app
                       (template_app
                         (template_hole 16,
                          template_app (template_hole 13, template_var 2)),
                        template_var 1))))),
              template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_hole 9)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 5),
                  template_hole 6)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app
                  (template_app
                    (template_hole 19,
                     template_app
                      (template_hole 18,
                       template_app (template_hole 17, template_var 3))),
                   template_app
                    (template_app
                      (template_hole 16,
                       template_app (template_hole 15, template_var 4)),
                     template_app
                      (template_app
                        (template_hole 16,
                         template_app (template_hole 14, template_var 5)),
                       template_app (template_hole 13, template_var 2)))))),
             template_app
              (template_app (template_hole 3, template_var 4),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_hole 0)))
           ))),
    ("m3_ds.R23_keys_dests",
     "[| Key ?K : analz (insert (Key ?K') (Key ` ?KK Un IK ?t));
         (?s, ?t) : R23_keys; ?K' : range sesK; ?KK <= range sesK |]
      ==> aKey ?K : extr (insert (aKey ?K') (aKey ` ?KK Un ik0)) (chan ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app (template_hole 21, template_var 4)),
              template_app
               (template_hole 20,
                template_app
                 (template_app
                   (template_hole 19,
                    template_app (template_hole 21, template_var 3)),
                  template_app
                   (template_app
                     (template_hole 18,
                      template_app
                       (template_app (template_hole 17, t_empty),
                        template_var 2)),
                    template_app (template_hole 16, template_var 1)))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 0),
                  template_var 1)),
              template_hole 13)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 3),
              template_app
               (template_app (template_hole 11, t_empty), template_hole 9))
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 11, t_empty), template_hole 9))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 4)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 6, template_var 3)),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_hole 6),
                         template_var 2)),
                     template_hole 1))),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m3_ds.m3_inv2_ticketI",
     "(!!A B T K X.
          [| A ~: bad;
             Crypt (shrK A)
              \<lbrace>Key K, msg.Agent B, Number T, X\<rbrace>
             : parts (IK ?x) |]
          ==> X =
              Crypt (shrK B)
               \<lbrace>Key K, msg.Agent A, Number T\<rbrace> &
              K : range sesK) ==>
      ?x : m3_inv2_ticket",
     template_implication
      ([template_predicate (template_app (template_hole 25, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m3_ds.m3_inv2_ticketE",
     "[| ?x : m3_inv2_ticket;
         (!!A B T K X.
             [| A ~: bad;
                Crypt (shrK A)
                 \<lbrace>Key K, msg.Agent B, Number T, X\<rbrace>
                : parts (IK ?x) |]
             ==> X =
                 Crypt (shrK B)
                  \<lbrace>Key K, msg.Agent A, Number T\<rbrace> &
                 K : range sesK) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 1),
              template_hole 23)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 22, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.m3_dsMoreTemplates"
### 0.567s elapsed time, 0.757s cpu time, 0.074s GC time
val it = (): unit
