Loading theory "Draft.Agents" (required by "Draft.m3_nssk_parMoreTemplates" via "Draft.m3_nssk_par" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.Runs" via "Draft.Atoms" via "Draft.Keys")
Loading theory "Draft.Infra" (required by "Draft.m3_nssk_parMoreTemplates" via "Draft.m3_nssk_par" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.s0g_secrecy" via "Draft.Refinement")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.m3_nssk_parMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.m3_nssk_parMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "Draft.Infra"
### 0.073s elapsed time, 0.326s cpu time, 0.000s GC time
Loading theory "Draft.Refinement" (required by "Draft.m3_nssk_parMoreTemplates" via "Draft.m3_nssk_par" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.s0g_secrecy")
### theory "HOL-Library.Function_Algebras"
### 0.120s elapsed time, 0.494s cpu time, 0.045s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.m3_nssk_parMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
Proofs for inductive predicate(s) "reachp"
  Proving monotonicity ...
specification
  Server_not_bad: Server ~: bad
### theory "HOL-Library.Set_Algebras"
### 0.211s elapsed time, 0.840s cpu time, 0.085s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.m3_nssk_parMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Proofs for inductive predicate(s) "behp"
  Proving monotonicity ...
### theory "HOL-Library.Nat_Bijection"
### 0.368s elapsed time, 1.476s cpu time, 0.130s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.m3_nssk_parMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Agents"
### 0.563s elapsed time, 2.253s cpu time, 0.211s GC time
Loading theory "Draft.Keys" (required by "Draft.m3_nssk_parMoreTemplates" via "Draft.m3_nssk_par" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.Runs" via "Draft.Atoms")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "seq_liftp"
consts
  snth :: "'a stream => nat => 'a"
  Proving monotonicity ...
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Refinement"
### 1.121s elapsed time, 4.276s cpu time, 0.865s GC time
Loading theory "Draft.a0n_agree" (required by "Draft.m3_nssk_parMoreTemplates" via "Draft.m3_nssk_par" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.a0i_agree")
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "{}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "Draft.Keys"
### 0.878s elapsed time, 3.321s cpu time, 0.783s GC time
Loading theory "Draft.Atoms" (required by "Draft.m3_nssk_parMoreTemplates" via "Draft.m3_nssk_par" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.Runs")
### theory "HOL-Library.Stream"
### 1.074s elapsed time, 4.086s cpu time, 0.864s GC time
Loading theory "Draft.Message" (required by "Draft.m3_nssk_parMoreTemplates" via "Draft.m3_nssk_par")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Atoms"
### 0.324s elapsed time, 1.276s cpu time, 0.188s GC time
Loading theory "Draft.Channels" (required by "Draft.m3_nssk_parMoreTemplates" via "Draft.m3_nssk_par" via "Draft.m2_nssk")
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Proofs for inductive predicate(s) "partsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Proofs for inductive predicate(s) "analzp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "synthp"
  Proving monotonicity ...
### theory "Draft.a0n_agree"
### 1.128s elapsed time, 4.448s cpu time, 0.562s GC time
Loading theory "Draft.Runs" (required by "Draft.m3_nssk_parMoreTemplates" via "Draft.m3_nssk_par" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.203s elapsed time, 8.536s cpu time, 1.411s GC time
Loading theory "Draft.a0i_agree" (required by "Draft.m3_nssk_parMoreTemplates" via "Draft.m3_nssk_par" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn")
### theory "Draft.Message"
### 1.113s elapsed time, 4.377s cpu time, 0.547s GC time
Loading theory "Draft.s0g_secrecy" (required by "Draft.m3_nssk_parMoreTemplates" via "Draft.m3_nssk_par" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist")
Proofs for inductive predicate(s) "atomsp"
  Proving monotonicity ...
### theory "Draft.a0i_agree"
### 0.122s elapsed time, 0.483s cpu time, 0.076s GC time
Loading theory "Draft.Templates" (required by "Draft.m3_nssk_parMoreTemplates" via "Draft.ExtrEqs")
Proofs for inductive predicate(s) "extrp"
  Proving monotonicity ...
Found termination order: "{}"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.067s elapsed time, 0.271s cpu time, 0.000s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.m3_nssk_parMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.Runs"
### 0.403s elapsed time, 1.579s cpu time, 0.145s GC time
Proofs for inductive predicate(s) "fakep"
  Proving monotonicity ...
### theory "Draft.Channels"
### 1.178s elapsed time, 4.456s cpu time, 0.485s GC time
### theory "Draft.s0g_secrecy"
### 0.548s elapsed time, 1.685s cpu time, 0.172s GC time
Loading theory "Draft.m1_keydist" (required by "Draft.m3_nssk_parMoreTemplates" via "Draft.m3_nssk_par" via "Draft.m2_nssk" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn")
### theory "HOL-Library.BigO"
### 0.702s elapsed time, 1.710s cpu time, 0.195s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.m3_nssk_parMoreTemplates")
Proofs for inductive predicate(s) "knCp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "azCp"
  Proving monotonicity ...
### theory "Draft.m1_keydist"
### 0.642s elapsed time, 1.337s cpu time, 0.132s GC time
Loading theory "Draft.m1_keydist_iirn" (required by "Draft.m3_nssk_parMoreTemplates" via "Draft.m3_nssk_par" via "Draft.m2_nssk" via "Draft.m1_nssk")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.526s elapsed time, 1.085s cpu time, 0.080s GC time
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.m1_keydist_iirn"
### 0.860s elapsed time, 1.215s cpu time, 0.134s GC time
Loading theory "Draft.m1_nssk" (required by "Draft.m3_nssk_parMoreTemplates" via "Draft.m3_nssk_par" via "Draft.m2_nssk")
overloading
  is_len' \<equiv> is_len :: nat
  rs_len' \<equiv> rs_len :: nat
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### Ignoring duplicate safe introduction (intro!)
### finite (dom ?runz) ==> finite (ri_running ?runz ?A ?B ?Kab ?Nb)
### Ignoring duplicate rewrite rule:
### finite (dom ?runz1) ==>
### finite (ri_running ?runz1 ?A1 ?B1 ?Kab1 ?Nb1) == True
### Ignoring duplicate safe introduction (intro!)
### finite (dom ?runz) ==> finite (ri_running ?runz ?A ?B ?Kab ?Nb)
### theory "Draft.m1_nssk"
### 0.777s elapsed time, 0.885s cpu time, 0.087s GC time
Loading theory "Draft.m2_nssk" (required by "Draft.m3_nssk_parMoreTemplates" via "Draft.m3_nssk_par")
### theory "Draft.m2_nssk"
### 0.619s elapsed time, 0.668s cpu time, 0.069s GC time
Loading theory "Draft.m3_nssk_par" (required by "Draft.m3_nssk_parMoreTemplates")
overloading
  ltkeySetup' \<equiv> ltkeySetup :: (ltkey * agent) set
Proofs for inductive predicate(s) "abs_msgp"
  Proving monotonicity ...
### theory "Draft.m3_nssk_par"
### 0.633s elapsed time, 0.688s cpu time, 0.078s GC time
Loading theory "Draft.m3_nssk_parMoreTemplates"
val templateLemmas =
   [("m3_nssk_par.abs_msg_Un",
     "abs_msg (?G Un ?H) = abs_msg ?G Un abs_msg ?H",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("m3_nssk_par.abs_msgp_abs_msg_eq",
     "abs_msgp (%x. x : ?H) = (%x. x : abs_msg ?H)",
     template_equation (template_app (template_hole 3, t_empty), t_empty)),
    ("m3_nssk_par.PO_m3_step2_refines_m2_step2",
     "{R23} m2_step2 ?Rb ?A ?B, m3_step2 ?Rb ?A ?B {> R23}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m3_nssk_par.analz_Inj_IK", "?X : IK ?s ==> ?X : analz (IK ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 0)))
           ))),
    ("m3_nssk_par.parts_Inj_IK", "?X : IK ?s ==> ?X : parts (IK ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 0)))
           ))),
    ("m3_nssk_par.abs_msg_insert_mono",
     "?m : abs_msg ?H ==> ?m : abs_msg (insert ?m' ?H)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("m3_nssk_par.insert_commute_Key",
     "insert (Key ?K) (insert ?y ?A) = insert ?y (insert (Key ?K) ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("m3_nssk_par.PO_m3_step1_refines_m2_step1",
     "{R23} m2_step1 ?Ra ?A ?B ?Na, m3_step1 ?Ra ?A ?B ?Na {> R23}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m3_nssk_par.R23_msgsI",
     "abs_msg (parts (IK ?t)) <= chan ?s ==> (?s, ?t) : R23_msgs",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 6,
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 1))),
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_hole 0)
           ))),
    ("m3_nssk_par.PO_m3_leak_refines_m2_leak",
     "{R23} m2_leak ?Rs ?Ra ?Rb ?A ?B, m3_leak ?Rs ?Ra ?Rb ?A ?B {> R23}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m3_nssk_par.PO_m3_step4_refines_m2_step4",
     "{R23} m2_step4 ?Ra ?A ?B ?Na
             ?Kab, m3_step4 ?Ra ?A ?B ?Na ?Kab {> R23}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m3_nssk_par.PO_m3_step5_refines_m2_step5",
     "{R23} m2_step5 ?Rb ?A ?B ?Nb
             ?Kab, m3_step5 ?Rb ?A ?B ?Nb ?Kab {> R23}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m3_nssk_par.PO_m3_step7_refines_m2_step7",
     "{R23} m2_step7 ?Rb ?A ?B ?Nb
             ?Kab, m3_step7 ?Rb ?A ?B ?Nb ?Kab {> R23}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m3_nssk_par.abs_msg_mono",
     "[| ?m : abs_msg ?G; ?G <= ?H |] ==> ?m : abs_msg ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 0))
           ))),
    ("m3_nssk_par.PO_m3_step6_refines_m2_step6",
     "{R23} m2_step6 ?Ra ?A ?B ?Na ?Nb
             ?Kab, m3_step6 ?Ra ?A ?B ?Na ?Nb ?Kab {> R23}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 5),
                         template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m3_nssk_par.m3_inv1_lkeysec_for_analz",
     "?s : m3_inv1_lkeysec ==>
      (Key (shrK ?C) : analz (IK ?s)) = (?C : bad)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_hole 9)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 0)))),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("m3_nssk_par.m3_inv1_lkeysec_for_parts",
     "?s : m3_inv1_lkeysec ==>
      (Key (shrK ?C) : parts (IK ?s)) = (?C : bad)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_hole 9)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 0)))),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("m3_nssk_par.R23_presI",
     "runs ?s = runs ?t & m1_state.leak ?s = m1_state.leak ?t ==>
      (?s, ?t) : R23_pres",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_var 1)),
                  template_app (template_hole 6, template_var 0))),
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 1)),
                template_app (template_hole 3, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("m3_nssk_par.R23_msgsE",
     "[| (?s, ?t) : R23_msgs;
         abs_msg (parts (IK ?t)) <= chan ?s ==> PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1)),
              template_hole 5)
            ),
        template_implication
         ([template_inequation
            (less_equals,
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1))),
             template_app (template_hole 0, template_var 2))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m3_nssk_par.R23_keys_simps",
     "(?s, ?t) : R23_keys ==>
      (Key ?K : analz (IK ?t)) = (aKey ?K : extr ik0 (chan ?s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 2),
                  template_var 1)),
              template_hole 10)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app (template_hole 7, template_var 0)),
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1))),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 2)))))),
    ("m3_nssk_par.PO_m3_step3_refines_m2_step3",
     "{R23 Int
       m2_inv3a_sesK_compr \<times>
       (m3_inv7a_sesK_compr Int
        m3_inv1_lkeysec)} m2_step3 ?Rs ?A ?B ?Na
                           ?Kab, m3_step3 ?Rs ?A ?B ?Na ?Kab {> R23}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     t_empty))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 7)
         )),
    ("m3_nssk_par.R23_presE",
     "[| (?s, ?t) : R23_pres;
         runs ?s = runs ?t & m1_state.leak ?s = m1_state.leak ?t ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_var 1)),
              template_hole 7)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app (template_hole 4, template_var 2)),
                     template_app (template_hole 3, template_var 1))),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 2)),
                   template_app (template_hole 0, template_var 1)))
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m3_nssk_par.R23_non_dests",
     "[| Nonce ?N : analz (IK ?t); (?s, ?t) : R23_non |]
      ==> aNon ?N : extr ik0 (chan ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 2)),
              template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_var 1)),
              template_hole 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 2)),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m3_nssk_par.m3_inv1_lkeysecD",
     "?x : m3_inv1_lkeysec ==>
      (Key (shrK ?C) : parts (IK ?x) --> ?C : bad) &
      (?C : bad --> Key (shrK ?C) : IK ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_hole 10)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_hole 6,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 4, template_var 0)))),
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 1)))),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 5,
                       template_app (template_hole 4, template_var 0)))),
                 template_app (template_hole 2, template_var 1))))
           ))),
    ("m3_nssk_par.m3_inv1_lkeysecI",
     "(!!C. (Key (shrK C) : parts (IK ?x) --> C : bad) &
            (C : bad --> Key (shrK C) : IK ?x)) ==>
      ?x : m3_inv1_lkeysec",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m3_nssk_par.m3_inv7a_sesK_compr_simps",
     "[| ?x : m3_inv7a_sesK_compr; ?Kab : range sesK |]
      ==> (Key ?K : analz (insert (Key ?Kab) (IK ?x))) =
          (?K = ?Kab | Key ?K : analz (IK ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_hole 12)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app
               (template_app (template_hole 10, template_hole 9),
                template_hole 8))
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 0)),
                template_app
                 (template_hole 4,
                  template_app
                   (template_app
                     (template_hole 3,
                      template_app (template_hole 5, template_var 1)),
                    template_app (template_hole 2, template_var 2))))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0)),
                 template_app
                  (template_hole 4,
                   template_app (template_hole 2, template_var 2))))
             )))),
    ("m3_nssk_par.m3_inv7a_sesK_comprD",
     "[| ?x : m3_inv7a_sesK_compr; ?KK <= range sesK |]
      ==> (Key ?K : analz (Key ` ?KK Un IK ?x)) =
          (?K : ?KK | Key ?K : analz (IK ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_hole 13)
            ),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 11, template_hole 10),
            template_hole 9))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 0)),
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 6),
                   template_var 1)),
               template_app (template_hole 2, template_var 2)))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 0)),
             template_app
              (template_hole 5,
               template_app (template_hole 2, template_var 2))))))),
    ("m3_nssk_par.R23_keys_simps",
     "[| (?s, ?t) : R23_keys; ?K' : range sesK |]
      ==> (Key ?K : analz (insert (Key ?K') (IK ?t))) =
          (aKey ?K : extr (insert (aKey ?K') ik0) (chan ?s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_app (template_hole 17, template_var 3),
                  template_var 2)),
              template_hole 16)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_app
               (template_app (template_hole 14, template_hole 13),
                template_hole 12))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app (template_hole 9, template_var 0)),
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 9, template_var 1)),
               template_app (template_hole 6, template_var 2)))),
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 4, template_var 1)),
                 template_hole 1)),
             template_app (template_hole 0, template_var 3)))))),
    ("m3_nssk_par.m3_inv1_lkeysecE",
     "[| ?x : m3_inv1_lkeysec;
         (!!C. (Key (shrK C) : parts (IK ?x) --> C : bad) &
               (C : bad --> Key (shrK C) : IK ?x)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_hole 11)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 10, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m3_nssk_par.R23_non_dests",
     "[| Nonce ?N : analz (insert (Key ?K) (IK ?t)); (?s, ?t) : R23_non;
         ?K : range sesK |]
      ==> aNon ?N : extr (insert (aKey ?K) ik0) (chan ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app (template_hole 18, template_var 3)),
              template_app
               (template_hole 17,
                template_app
                 (template_app
                   (template_hole 16,
                    template_app (template_hole 15, template_var 2)),
                  template_app (template_hole 14, template_var 1))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 0),
                  template_var 1)),
              template_hole 11)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_hole 7))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 3)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 2)),
                   template_hole 1)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m3_nssk_par.R23_keysD",
     "[| (?s, ?t) : R23_keys; ?KK <= range sesK |]
      ==> (Key ?K : analz (Key ` ?KK Un IK ?t)) =
          (aKey ?K : extr (aKey ` ?KK Un ik0) (chan ?s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app
                 (template_app (template_hole 19, template_var 3),
                  template_var 2)),
              template_hole 18)
            ),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 16, template_hole 15),
            template_hole 14))],
       template_equation
        (template_app
          (template_app
            (template_hole 12,
             template_app (template_hole 11, template_var 0)),
           template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_hole 11),
                   template_var 1)),
               template_app (template_hole 7, template_var 2)))),
         template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 0)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_hole 5),
                     template_var 1)),
                 template_hole 1)),
             template_app (template_hole 0, template_var 3)))))),
    ("m3_nssk_par.m3_inv7a_sesK_comprI",
     "(!!K KK.
          KK <= range sesK ==>
          (Key K : analz (Key ` KK Un IK ?x)) =
          (K : KK | Key K : analz (IK ?x))) ==>
      ?x : m3_inv7a_sesK_compr",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m3_nssk_par.R23_nonD",
     "[| Nonce ?N : analz (Key ` ?KK Un IK ?t); (?s, ?t) : R23_non;
         ?KK <= range sesK |]
      ==> aNon ?N : extr (aKey ` ?KK Un ik0) (chan ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 21,
                template_app (template_hole 20, template_var 3)),
              template_app
               (template_hole 19,
                template_app
                 (template_app
                   (template_hole 18,
                    template_app
                     (template_app (template_hole 17, template_hole 16),
                      template_var 2)),
                  template_app (template_hole 15, template_var 1))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 0),
                  template_var 1)),
              template_hole 12)
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 10, template_hole 9),
            template_hole 8))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 3)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_var 2)),
                   template_hole 1)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m3_nssk_par.abs_msg_DY_subset_fakeable",
     "[| (?s, ?t) : R23_msgs; (?s, ?t) : R23_keys; (?s, ?t) : R23_non;
         ?t : m3_inv1_lkeysec |]
      ==> abs_msg (synth (analz (IK ?t)))
          <= fake ik0 (dom (runs ?s)) (chan ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 1),
                  template_var 0)),
              template_hole 14)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 1),
                  template_var 0)),
              template_hole 13)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 1),
                  template_var 0)),
              template_hole 12)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_hole 10)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 0)))),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1))),
           template_app (template_hole 0, template_var 1))))),
    ("m3_nssk_par.R23_keysI",
     "(!!KK K.
          KK <= range sesK ==>
          (Key K : analz (Key ` KK Un IK ?t)) =
          (aKey K : extr (aKey ` KK Un ik0) (chan ?s))) ==>
      (?s, ?t) : R23_keys",
     template_implication
      ([template_predicate (template_app (template_hole 23, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_hole 0)
           ))),
    ("m3_nssk_par.R23_nonI",
     "(!!KK N.
          [| KK <= range sesK; Nonce N : analz (Key ` KK Un IK ?t) |]
          ==> aNon N : extr (aKey ` KK Un ik0) (chan ?s)) ==>
      (?s, ?t) : R23_non",
     template_implication
      ([template_predicate (template_app (template_hole 24, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_hole 0)
           ))),
    ("m3_nssk_par.m3_inv7a_sesK_comprE",
     "[| ?x : m3_inv7a_sesK_compr;
         (!!K KK.
             KK <= range sesK ==>
             (Key K : analz (Key ` KK Un IK ?x)) =
             (K : KK | Key K : analz (IK ?x))) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_hole 15)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 14, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m3_nssk_par.R23_keysE",
     "[| (?s, ?t) : R23_keys;
         (!!KK K.
             KK <= range sesK ==>
             (Key K : analz (Key ` KK Un IK ?t)) =
             (aKey K : extr (aKey ` KK Un ik0) (chan ?s))) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_app (template_hole 21, template_var 2),
                  template_var 1)),
              template_hole 20)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 19, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m3_nssk_par.R23_nonE",
     "[| (?s, ?t) : R23_non;
         (!!KK N.
             [| KK <= range sesK; Nonce N : analz (Key ` KK Un IK ?t) |]
             ==> aNon N : extr (aKey ` KK Un ik0) (chan ?s)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app
                 (template_app (template_hole 22, template_var 2),
                  template_var 1)),
              template_hole 21)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 20, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m3_nssk_par.m3_inv7a_sesK_compr_simps",
     "[| ?x : m3_inv7a_sesK_compr; ?Kab : range sesK & ?KK <= range sesK |]
      ==> (Key ?K : analz (insert (Key ?Kab) (Key ` ?KK Un IK ?x))) =
          (?K = ?Kab | ?K : ?KK | Key ?K : analz (IK ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 3),
              template_hole 16)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 2),
                  template_app
                   (template_app (template_hole 13, template_hole 12),
                    template_hole 11))),
              template_app
               (template_app (template_hole 10, template_var 1),
                template_app
                 (template_app (template_hole 13, template_hole 12),
                  template_hole 11)))
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 0)),
                template_app
                 (template_hole 6,
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app (template_hole 7, template_var 2)),
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_app (template_hole 3, template_hole 7),
                          template_var 1)),
                      template_app (template_hole 2, template_var 3)))))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 14, template_var 0),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_var 0)),
                   template_app
                    (template_hole 6,
                     template_app (template_hole 2, template_var 3)))))
             )))),
    ("m3_nssk_par.R23_keys_simps",
     "[| (?s, ?t) : R23_keys; ?K' : range sesK; ?KK <= range sesK |]
      ==> (Key ?K : analz (insert (Key ?K') (Key ` ?KK Un IK ?t))) =
          (aKey ?K
           : extr (insert (aKey ?K') (aKey ` ?KK Un ik0)) (chan ?s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app
                 (template_app (template_hole 22, template_var 4),
                  template_var 3)),
              template_hole 21)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 2),
              template_app
               (template_app (template_hole 19, template_hole 18),
                template_hole 17))
            ),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 19, template_hole 18),
            template_hole 17))],
       template_equation
        (template_app
          (template_app
            (template_hole 14,
             template_app (template_hole 13, template_var 0)),
           template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 11,
                 template_app (template_hole 13, template_var 2)),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_hole 13),
                     template_var 1)),
                 template_app (template_hole 8, template_var 3))))),
         template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 0)),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 6, template_var 2)),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 6),
                       template_var 1)),
                   template_hole 1))),
             template_app (template_hole 0, template_var 4)))))),
    ("m3_nssk_par.m3_inv5_ikk_respD",
     "[| runs ?x ?Rb = Some (Resp, [?A, ?B], aKey ?K # ?al); ?A : good;
         ?B : good; Key ?K : analz (IK ?x); ?x : m3_inv5_ikk_resp |]
      ==> ?K : Domain (m1_state.leak ?x)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 20, template_var 5),
            template_var 4),
          template_app
           (template_hole 19,
            template_app
             (template_app (template_hole 18, template_hole 17),
              template_app
               (template_app
                 (template_hole 16,
                  template_app
                   (template_app (template_hole 15, template_var 3),
                    template_app
                     (template_app (template_hole 15, template_var 2),
                      template_hole 14))),
                template_app
                 (template_app
                   (template_hole 13,
                    template_app (template_hole 12, template_var 1)),
                  template_var 0))))),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app (template_hole 10, template_hole 9))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app (template_hole 10, template_hole 9))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)),
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 5)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 5),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 5)))
           ))),
    ("m3_nssk_par.R23_non_dests",
     "[| Nonce ?N : analz (insert (Key ?K) (Key ` ?KK Un IK ?t));
         (?s, ?t) : R23_non; ?K : range sesK; ?KK <= range sesK |]
      ==> aNon ?N : extr (insert (aKey ?K) (aKey ` ?KK Un ik0)) (chan ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 24,
                template_app (template_hole 23, template_var 4)),
              template_app
               (template_hole 22,
                template_app
                 (template_app
                   (template_hole 21,
                    template_app (template_hole 20, template_var 3)),
                  template_app
                   (template_app
                     (template_hole 19,
                      template_app
                       (template_app (template_hole 18, t_empty),
                        template_var 2)),
                    template_app (template_hole 17, template_var 1)))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 0),
                  template_var 1)),
              template_hole 14)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 3),
              template_app
               (template_app (template_hole 12, t_empty), template_hole 10))
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 12, t_empty), template_hole 10))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app (template_hole 7, template_var 4)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_var 3)),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_hole 4),
                         template_var 2)),
                     template_hole 1))),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m3_nssk_par.m3_inv4_ikk_initD",
     "[| runs ?x ?Ra = Some (Init, [?A, ?B], aKey ?K # ?al); ?A : good;
         ?B : good; Key ?K : analz (IK ?x); ?x : m3_inv4_ikk_init |]
      ==> EX Nb'. (?K, ?Ra $ na, Nb') : m1_state.leak ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 24, template_var 5),
            template_var 4),
          template_app
           (template_hole 23,
            template_app
             (template_app (template_hole 22, template_hole 21),
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_app (template_hole 19, template_var 3),
                    template_app
                     (template_app (template_hole 19, template_var 2),
                      template_hole 18))),
                template_app
                 (template_app
                   (template_hole 17,
                    template_app (template_hole 16, template_var 1)),
                  template_var 0))))),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 3),
              template_app (template_hole 14, template_hole 13))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2),
              template_app (template_hole 14, template_hole 13))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 1)),
              template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 5)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5),
              template_hole 7)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("m3_nssk_par.m3_inv5_ikk_respI",
     "(!!Rb K A B al.
          [| runs ?x Rb = Some (Resp, [A, B], aKey K # al); A : good;
             B : good; Key K : analz (IK ?x) |]
          ==> K : Domain (m1_state.leak ?x)) ==>
      ?x : m3_inv5_ikk_resp",
     template_implication
      ([template_predicate (template_app (template_hole 26, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m3_nssk_par.m3_inv5_ikk_respE",
     "[| ?x : m3_inv5_ikk_resp;
         (!!Rb K A B al.
             [| runs ?x Rb = Some (Resp, [A, B], aKey K # al); A : good;
                B : good; Key K : analz (IK ?x) |]
             ==> K : Domain (m1_state.leak ?x)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 25, template_var 1),
              template_hole 24)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 23, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m3_nssk_par.m3_inv4_ikk_initI",
     "(!!Ra K A B al.
          [| runs ?x Ra = Some (Init, [A, B], aKey K # al); A : good;
             B : good; Key K : analz (IK ?x) |]
          ==> EX Nb'. (K, Ra $ na, Nb') : m1_state.leak ?x) ==>
      ?x : m3_inv4_ikk_init",
     template_implication
      ([template_predicate (template_app (template_hole 30, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m3_nssk_par.m3_inv4_ikk_initE",
     "[| ?x : m3_inv4_ikk_init;
         (!!Ra K A B al.
             [| runs ?x Ra = Some (Init, [A, B], aKey K # al); A : good;
                B : good; Key K : analz (IK ?x) |]
             ==> EX Nb'. (K, Ra $ na, Nb') : m1_state.leak ?x) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 29, template_var 1),
              template_hole 28)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 27, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.m3_nssk_parMoreTemplates"
### 0.496s elapsed time, 0.677s cpu time, 0.070s GC time
val it = (): unit
