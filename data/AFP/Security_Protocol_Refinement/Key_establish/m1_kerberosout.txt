Loading theory "Draft.Infra" (required by "Draft.m1_kerberosMoreTemplates" via "Draft.m1_kerberos" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.s0g_secrecy" via "Draft.Refinement")
Loading theory "Draft.Agents" (required by "Draft.m1_kerberosMoreTemplates" via "Draft.m1_kerberos" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.Runs" via "Draft.Atoms" via "Draft.Keys")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.m1_kerberosMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.m1_kerberosMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "Draft.Infra"
### 0.060s elapsed time, 0.267s cpu time, 0.000s GC time
Loading theory "Draft.Refinement" (required by "Draft.m1_kerberosMoreTemplates" via "Draft.m1_kerberos" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.s0g_secrecy")
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.123s elapsed time, 0.500s cpu time, 0.030s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.m1_kerberosMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
Proofs for inductive predicate(s) "reachp"
  Proving monotonicity ...
specification
  Server_not_bad: Server ~: bad
### theory "HOL-Library.Nat_Bijection"
### 0.307s elapsed time, 1.233s cpu time, 0.100s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.m1_kerberosMoreTemplates" via "Draft.ExtrEqs")
Proofs for inductive predicate(s) "behp"
### theory "HOL-Library.Set_Algebras"
### 0.205s elapsed time, 0.814s cpu time, 0.070s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.m1_kerberosMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
  Proving monotonicity ...
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Agents"
### 0.540s elapsed time, 2.153s cpu time, 0.173s GC time
Loading theory "Draft.Keys" (required by "Draft.m1_kerberosMoreTemplates" via "Draft.m1_kerberos" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.Runs" via "Draft.Atoms")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Proofs for inductive predicate(s) "seq_liftp"
  Proving monotonicity ...
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Refinement"
### 1.126s elapsed time, 4.287s cpu time, 0.835s GC time
Loading theory "Draft.a0n_agree" (required by "Draft.m1_kerberosMoreTemplates" via "Draft.m1_kerberos" via "Draft.m1_keydist_iirn" via "Draft.a0i_agree")
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "{}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.082s elapsed time, 4.128s cpu time, 0.824s GC time
Loading theory "Draft.s0g_secrecy" (required by "Draft.m1_kerberosMoreTemplates" via "Draft.m1_kerberos" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist")
### theory "Draft.Keys"
### 0.874s elapsed time, 3.303s cpu time, 0.751s GC time
Loading theory "Draft.Atoms" (required by "Draft.m1_kerberosMoreTemplates" via "Draft.m1_kerberos" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.Runs")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Atoms"
### 0.314s elapsed time, 1.229s cpu time, 0.161s GC time
Loading theory "Draft.Runs" (required by "Draft.m1_kerberosMoreTemplates" via "Draft.m1_kerberos" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.s0g_secrecy"
### 0.590s elapsed time, 2.331s cpu time, 0.228s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.m1_kerberosMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "{}"
### theory "Draft.Runs"
### 0.401s elapsed time, 1.579s cpu time, 0.133s GC time
Loading theory "Draft.m1_keydist" (required by "Draft.m1_kerberosMoreTemplates" via "Draft.m1_kerberos" via "Draft.m1_keydist_iirn")
### theory "Draft.a0n_agree"
### 1.104s elapsed time, 4.352s cpu time, 0.435s GC time
Loading theory "Draft.a0i_agree" (required by "Draft.m1_kerberosMoreTemplates" via "Draft.m1_kerberos" via "Draft.m1_keydist_iirn")
Found termination order: "size <*mlex*> {}"
### theory "Draft.a0i_agree"
### 0.119s elapsed time, 0.459s cpu time, 0.047s GC time
### theory "HOL-Library.Tree"
### 2.176s elapsed time, 8.364s cpu time, 1.216s GC time
Loading theory "Draft.Templates" (required by "Draft.m1_kerberosMoreTemplates" via "Draft.ExtrEqs")
Proofs for inductive predicate(s) "knCp"
  Proving monotonicity ...
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.082s elapsed time, 0.259s cpu time, 0.064s GC time
Proofs for inductive predicate(s) "azCp"
  Proving monotonicity ...
### theory "HOL-Library.BigO"
### 0.803s elapsed time, 2.645s cpu time, 0.273s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.m1_kerberosMoreTemplates")
### theory "Draft.m1_keydist"
### 0.773s elapsed time, 2.322s cpu time, 0.207s GC time
Loading theory "Draft.m1_keydist_iirn" (required by "Draft.m1_kerberosMoreTemplates" via "Draft.m1_kerberos")
Found termination order: "{}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.536s elapsed time, 1.115s cpu time, 0.101s GC time
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.m1_keydist_iirn"
### 0.892s elapsed time, 1.474s cpu time, 0.128s GC time
Loading theory "Draft.m1_kerberos" (required by "Draft.m1_kerberosMoreTemplates")
overloading
  is_len' \<equiv> is_len :: nat
  rs_len' \<equiv> rs_len :: nat
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.m1_kerberos"
### 0.901s elapsed time, 1.045s cpu time, 0.099s GC time
Loading theory "Draft.m1_kerberosMoreTemplates"
val templateLemmas =
   [("m1_kerberos.PO_m1_purge_refines_ir_a0ii_skip",
     "{R_a0iim1_ir} Id, m1_purge ?A {> R_a0iim1_ir}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app (template_hole 0, template_var 0)),
           template_hole 2)
         )),
    ("m1_kerberos.PO_m1_tick_refines_ir_a0ii_skip",
     "{R_a0iim1_ir} Id, m1_tick ?T {> R_a0iim1_ir}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app (template_hole 0, template_var 0)),
           template_hole 2)
         )),
    ("m1_kerberos.PO_m1_purge_refines_a0_ri_skip",
     "{R_a0iim1_ri} Id, m1_purge ?A {> R_a0iim1_ri}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app (template_hole 0, template_var 0)),
           template_hole 2)
         )),
    ("m1_kerberos.PO_m1_tick_refines_a0_ri_skip",
     "{R_a0iim1_ri} Id, m1_tick ?T {> R_a0iim1_ri}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app (template_hole 0, template_var 0)),
           template_hole 2)
         )),
    ("m1_kerberos.PO_m1_purge_refines_m1a_skip",
     "{R1a1} Id, m1_purge ?A {> R1a1}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app (template_hole 0, template_var 0)),
           template_hole 2)
         )),
    ("m1_kerberos.PO_m1_tick_refines_m1a_skip",
     "{R1a1} Id, m1_tick ?T {> R1a1}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app (template_hole 0, template_var 0)),
           template_hole 2)
         )),
    ("m1_kerberos.knC_runs1a1", "knC (runs1a1 ?runz) = knC ?runz",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("m1_kerberos.PO_m1_step2_refines_ir_a0ii_skip",
     "{R_a0iim1_ir} Id, m1_step2 ?Rb ?A ?B {> R_a0iim1_ir}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_kerberos.PO_m1_step2_refines_a0_ri_skip",
     "{R_a0iim1_ri} Id, m1_step2 ?Rb ?A ?B {> R_a0iim1_ri}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_kerberos.PO_m1_step1_refines_ir_a0ii_skip",
     "{R_a0iim1_ir} Id, m1_step1 ?Ra ?A ?B ?Na {> R_a0iim1_ir}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_kerberos.PO_m1_step1_refines_a0_ri_skip",
     "{R_a0iim1_ri} Id, m1_step1 ?Ra ?A ?B ?Na {> R_a0iim1_ri}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_kerberos.m1_inv0_finD",
     "?x : m1_inv0_fin ==> finite (dom (runs ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m1_kerberos.m1_inv0_finI",
     "finite (dom (runs ?x)) ==> ?x : m1_inv0_fin",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m1_kerberos.PO_m1_leak_refines_ir_a0ii_skip",
     "{R_a0iim1_ir} Id, m1_leak ?Rs ?A ?B ?Na ?Ts {> R_a0iim1_ir}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_kerberos.PO_m1_leak_refines_a0_ri_skip",
     "{R_a0iim1_ri} Id, m1_leak ?Rs ?A ?B ?Na ?Ts {> R_a0iim1_ri}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_kerberos.PO_m1_step3_refines_ir_a0ii_skip",
     "{R_a0iim1_ir} Id, m1_step3 ?Rs ?A ?B ?Kab ?Na ?Ts {> R_a0iim1_ir}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_kerberos.PO_m1_step3_refines_a0_ri_skip",
     "{R_a0iim1_ri} Id, m1_step3 ?Rs ?A ?B ?Kab ?Na ?Ts {> R_a0iim1_ri}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_kerberos.PO_m1_leak_refines_m1a_leak",
     "{R1a1} m1a_leak ?Rs, m1_leak ?Rs ?A ?B ?Na ?Ts {> R1a1}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 4)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_kerberos.PO_m1_step2_refines_m1a_step2",
     "{R1a1} m1a_step2 ?Rb ?A ?B, m1_step2 ?Rb ?A ?B {> R1a1}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_kerberos.ir_runs2sigs_empty",
     "?runz = Map.empty ==> ir_runs2sigs ?runz = (%s. 0)",
     template_implication
      ([template_equation (template_var 0, t_empty)],
       template_equation
        (template_app (template_hole 1, template_var 0), t_empty))),
    ("m1_kerberos.ri_runs2sigs_empty",
     "?runz = Map.empty ==> ri_runs2sigs ?runz = (%s. 0)",
     template_implication
      ([template_equation (template_var 0, t_empty)],
       template_equation
        (template_app (template_hole 1, template_var 0), t_empty))),
    ("m1_kerberos.PO_m1_step4_refines_ir_a0ii_skip",
     "{R_a0iim1_ir} Id, m1_step4 ?Ra ?A ?B ?Na ?Kab ?Ts
                         ?Ta {> R_a0iim1_ir}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_kerberos.PO_m1_step6_refines_a0_ri_skip",
     "{R_a0iim1_ri} Id, m1_step6 ?Ra ?A ?B ?Na ?Kab ?Ts
                         ?Ta {> R_a0iim1_ri}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_kerberos.PO_m1_step6_refines_m1a_skip",
     "{R1a1} Id, m1_step6 ?Ra ?A ?B ?Na ?Kab ?Ts ?Ta {> R1a1}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_kerberos.PO_m1_step1_refines_m1a_step1",
     "{R1a1} m1a_step1 ?Ra ?A ?B ?Na, m1_step1 ?Ra ?A ?B ?Na {> R1a1}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_kerberos.m1_inv0_finE",
     "[| ?x : m1_inv0_fin; finite (dom (runs ?x)) ==> PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)))
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m1_kerberos.PO_m1_step5_refines_m1a_step5",
     "{R1a1} m1a_step5 ?Rb ?A ?B ?Kab
              [aNum ?Ts], m1_step5 ?Rb ?A ?B ?Kab ?Ts ?Ta {> R1a1}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 1)),
                   template_hole 1))),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 5)
         )),
    ("m1_kerberos.m1_secrecyI",
     "knC (runs ?x)
      <= azC (runs ?x) Un Domain (m1_state.leak ?x) \<times> UNIV ==>
      ?x : m1_secrecy",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_var 0)),
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_hole 6,
                template_app (template_hole 8, template_var 0))),
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 0))),
              t_empty)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m1_kerberos.PO_m1_inv4_rfresh_step5",
     "{m1_inv4_rfresh Int m1_inv3r_init Int m1_inv2r_serv Int
       m1_inv1r_cache Int
       m1_secrecy Int
       m1_inv1_ifresh} m1_step5 ?Rb ?A ?B ?Kab ?Ts ?Ta {> m1_inv4_rfresh}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_app
                              (template_hole 7,
                               template_app
                                (template_app
                                  (template_hole 7, template_hole 6),
                                 template_hole 5)),
                             template_hole 4)),
                         template_hole 3)),
                     template_hole 2)),
                 template_hole 1)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 6)
         )),
    ("m1_kerberos.PO_m1_step3_refines_m1a_step3",
     "{R1a1} m1a_step3 ?Rs ?A ?B ?Kab ?Na
              [aNum ?Ts], m1_step3 ?Rs ?A ?B ?Kab ?Na ?Ts {> R1a1}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 4, template_var 5),
                         template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0)),
                   template_hole 1))),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 5)
         )),
    ("m1_kerberos.PO_m1_step4_refines_m1a_step4",
     "{R1a1} m1a_step4 ?Ra ?A ?B ?Na ?Kab
              [aNum ?Ts], m1_step4 ?Ra ?A ?B ?Na ?Kab ?Ts ?Ta {> R1a1}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 4, template_var 6),
                         template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 1)),
                   template_hole 1))),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 5)
         )),
    ("m1_kerberos.m1_secrecyE",
     "[| ?x : m1_secrecy;
         knC (runs ?x)
         <= azC (runs ?x) Un Domain (m1_state.leak ?x) \<times> UNIV ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_hole 9)
            ),
        template_implication
         ([template_inequation
            (less_equals,
             template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 1)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 6, template_var 1))),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 1))),
                 t_empty)))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m1_kerberos.ri_runs2sigs_upd_init_none",
     "?Na ~: dom ?runz ==>
      ri_runs2sigs (?runz(?Na |-> (Init, [?A, ?B], []))) =
      ri_runs2sigs ?runz",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_app (template_hole 10, template_var 2))
                )
            )],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 2),
               template_var 3),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_app
                        (template_app (template_hole 2, template_var 0),
                         template_hole 1))),
                   template_hole 0))))),
         template_app (template_hole 8, template_var 2)))),
    ("m1_kerberos.ir_runs2sigs_upd_init_none",
     "?Ra ~: dom ?runz ==>
      ir_runs2sigs (?runz(?Ra |-> (Init, [?A, ?B], []))) =
      ir_runs2sigs ?runz",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_app (template_hole 10, template_var 2))
                )
            )],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 2),
               template_var 3),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_app
                        (template_app (template_hole 2, template_var 0),
                         template_hole 1))),
                   template_hole 0))))),
         template_app (template_hole 8, template_var 2)))),
    ("m1_kerberos.ir_runs2sigs_upd_resp_none",
     "?Rb ~: dom ?runz ==>
      ir_runs2sigs (?runz(?Rb |-> (Resp, [?A, ?B], []))) =
      ir_runs2sigs ?runz",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_app (template_hole 10, template_var 2))
                )
            )],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 2),
               template_var 3),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_app
                        (template_app (template_hole 2, template_var 0),
                         template_hole 1))),
                   template_hole 0))))),
         template_app (template_hole 8, template_var 2)))),
    ("m1_kerberos.ri_runs2sigs_upd_resp_none",
     "?Rb ~: dom ?runz ==>
      ri_runs2sigs (?runz(?Rb |-> (Resp, [?A, ?B], []))) =
      ri_runs2sigs ?runz",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_app (template_hole 10, template_var 2))
                )
            )],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 2),
               template_var 3),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_app
                        (template_app (template_hole 2, template_var 0),
                         template_hole 1))),
                   template_hole 0))))),
         template_app (template_hole 8, template_var 2)))),
    ("m1_kerberos.PO_m1_step5_refines_ir_a0ii_running",
     "{R_a0iim1_ir Int
       UNIV \<times>
       m1_inv0_fin} a0i_running [?A, ?B]
                     (?Kab, ?Ts,
                      ?Ta), m1_step5 ?Rb ?A ?B ?Kab ?Ts
                             ?Ta {> R_a0iim1_ir}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_app
                    (template_app (template_hole 8, template_hole 7),
                     t_empty))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 5),
                     template_app
                      (template_app (template_hole 4, template_var 4),
                       template_hole 3))),
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1)))),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1)),
           template_hole 9)
         )),
    ("m1_kerberos.PO_m1_step6_refines_ir_a0ii_commit",
     "{R_a0iim1_ir Int
       UNIV \<times>
       m1_inv0_fin} a0n_commit [?A, ?B]
                     (?Kab, ?Ts,
                      ?Ta), m1_step6 ?Ra ?A ?B ?Na ?Kab ?Ts
                             ?Ta {> R_a0iim1_ir}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_app
                    (template_app (template_hole 8, template_hole 7),
                     t_empty))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 6),
                     template_app
                      (template_app (template_hole 4, template_var 5),
                       template_hole 3))),
                 template_app
                  (template_app (template_hole 2, template_var 4),
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2)))),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 6),
                       template_var 5),
                     template_var 0),
                   template_var 4),
                 template_var 3),
               template_var 2)),
           template_hole 9)
         )),
    ("m1_kerberos.PO_m1_step4_refines_a0_ri_running",
     "{R_a0iim1_ri Int
       UNIV \<times>
       m1_inv0_fin} a0i_running [?B, ?A]
                     (?Kab, ?Ts,
                      ?Ta), m1_step4 ?Ra ?A ?B ?Na ?Kab ?Ts
                             ?Ta {> R_a0iim1_ri}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_app
                    (template_app (template_hole 8, template_hole 7),
                     t_empty))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 6),
                     template_app
                      (template_app (template_hole 4, template_var 5),
                       template_hole 3))),
                 template_app
                  (template_app (template_hole 2, template_var 4),
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2)))),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 5),
                       template_var 6),
                     template_var 0),
                   template_var 4),
                 template_var 3),
               template_var 2)),
           template_hole 9)
         )),
    ("m1_kerberos.PO_m1_step5_refines_a0_ri_commit",
     "{R_a0iim1_ri Int
       UNIV \<times>
       (m1_inv1r_cache Int
        m1_inv0_fin)} a0i_commit [?B, ?A]
                       (?Kab, ?Ts,
                        ?Ta), m1_step5 ?Rb ?A ?B ?Kab ?Ts
                               ?Ta {> R_a0iim1_ri}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app (template_hole 12, template_hole 11),
                   template_app
                    (template_app (template_hole 10, template_hole 9),
                     t_empty))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 5),
                     template_app
                      (template_app (template_hole 4, template_var 4),
                       template_hole 3))),
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1)))),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 4),
                     template_var 5),
                   template_var 3),
                 template_var 2),
               template_var 1)),
           template_hole 11)
         )),
    ("m1_kerberos.ri_runs2sigs_upd_serv",
     "?Rs ~: dom ?runz ==>
      ri_runs2sigs (?runz(?Rs |-> (Serv, [?A, ?B], [aNon ?Na, aNum ?Ts]))) =
      ri_runs2sigs ?runz",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 14, template_var 5),
                  template_app (template_hole 13, template_var 4))
                )
            )],
       template_equation
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_app (template_hole 10, template_var 4),
               template_var 5),
             template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_hole 7),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 3),
                       template_app
                        (template_app (template_hole 5, template_var 2),
                         template_hole 4))),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 1)),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app (template_hole 1, template_var 0)),
                       template_hole 0))))))),
         template_app (template_hole 11, template_var 4)))),
    ("m1_kerberos.finite_ri_running",
     "finite (dom ?runz) ==> finite (ri_running ?runz ?A ?B ?Kab ?Ts ?Ta)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 5))
            )],
       template_predicate
        (
           template_app
            (template_hole 13, template_app (template_hole 11, t_empty))
           ))),
    ("m1_kerberos.finite_ri_commit",
     "finite (dom ?runz) ==> finite (ir_running ?runz ?A ?B ?Kab ?Ts ?Ta)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 5))
            )],
       template_predicate
        (
           template_app
            (template_hole 13, template_app (template_hole 11, t_empty))
           ))),
    ("m1_kerberos.ir_runs2sigs_upd_serv",
     "?Rs ~: dom (runs ?y) ==>
      ir_runs2sigs
       (runs ?y(?Rs |-> (Serv, [?A, ?B], [aNon ?Na, aNum ?Ts]))) =
      ir_runs2sigs (runs ?y)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 15, template_var 5),
                  template_app
                   (template_hole 14,
                    template_app (template_hole 13, template_var 4)))
                )
            )],
       template_equation
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app (template_hole 13, template_var 4)),
               template_var 5),
             template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_hole 7),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 3),
                       template_app
                        (template_app (template_hole 5, template_var 2),
                         template_hole 4))),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 1)),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app (template_hole 1, template_var 0)),
                       template_hole 0))))))),
         template_app
          (template_hole 11,
           template_app (template_hole 13, template_var 4))))),
    ("m1_kerberos.ir_commit_finite",
     "finite (dom ?runz) ==> finite (ir_commit ?runz ?A ?B ?Kab ?Ts ?Ta)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 14,
              template_app (template_hole 13, template_var 5))
            )],
       template_predicate
        (
           template_app
            (template_hole 14, template_app (template_hole 12, t_empty))
           ))),
    ("m1_kerberos.ir_runs2sigs_upd_init_some",
     "?runz ?Ra = Some (Init, [?A, ?B], []) ==>
      ir_runs2sigs
       (?runz(?Ra |-> (Init, [?A, ?B], [aKey ?Kab, aNum ?Ts, aNum ?Ta]))) =
      ir_runs2sigs ?runz",
     template_implication
      ([template_equation
         (template_app (template_var 6, template_var 5),
          template_app
           (template_hole 12,
            template_app
             (template_app (template_hole 11, template_hole 10),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_var 4),
                    template_app
                     (template_app (template_hole 8, template_var 3),
                      template_hole 7))),
                template_hole 6))))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 6),
               template_var 5),
             template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 11, template_hole 10),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 8, template_var 4),
                       template_app
                        (template_app (template_hole 8, template_var 3),
                         template_hole 7))),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_var 2)),
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app (template_hole 0, template_var 1)),
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app (template_hole 0, template_var 0)),
                         template_hole 6)))))))),
         template_app (template_hole 4, template_var 6)))),
    ("m1_kerberos.m1_inv1r_cacheD",
     "[| runs ?x ?Rb =
         Some (Resp, [?A, ?B], aKey ?Kab # aNum ?Ts # aNum ?Ta # ?nl);
         clk ?x < ?Ta + La; ?x : m1_inv1r_cache |]
      ==> (?B, ?Kab, ?Ta) : cache ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 19, template_var 7),
            template_var 6),
          template_app
           (template_hole 18,
            template_app
             (template_app (template_hole 17, template_hole 16),
              template_app
               (template_app
                 (template_hole 15,
                  template_app
                   (template_app (template_hole 14, template_var 5),
                    template_app
                     (template_app (template_hole 14, template_var 4),
                      template_hole 13))),
                template_app
                 (template_app
                   (template_hole 12,
                    template_app (template_hole 11, template_var 3)),
                  template_app
                   (template_app
                     (template_hole 12,
                      template_app (template_hole 10, template_var 2)),
                    template_app
                     (template_app
                       (template_hole 12,
                        template_app (template_hole 10, template_var 1)),
                      template_var 0))))))),
        template_inequation
         (less_than, template_app (template_hole 8, template_var 7),
          template_app
           (template_app (template_hole 7, template_var 1),
            template_hole 6)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 7),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 4),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1))),
             template_app (template_hole 0, template_var 7))
           ))),
    ("m1_kerberos.ri_runs2sigs_upd_init_some2",
     "?runz ?Ra = Some (Init, [?A, ?B], [aKey ?Kab, aNum ?Ts, aNum ?Ta]) ==>
      ri_runs2sigs
       (?runz(?Ra |->
        (Init, [?A, ?B], [aKey ?Kab, aNum ?Ts, aNum ?Ta, END]))) =
      ri_runs2sigs ?runz",
     template_implication
      ([template_equation
         (template_app (template_var 6, template_var 5),
          template_app
           (template_hole 13,
            template_app
             (template_app (template_hole 12, template_hole 11),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_var 4),
                    template_app
                     (template_app (template_hole 9, template_var 3),
                      template_hole 8))),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 2)),
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app (template_hole 5, template_var 1)),
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app (template_hole 5, template_var 0)),
                      template_hole 4)))))))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 6),
               template_var 5),
             template_app
              (template_hole 13,
               template_app
                (template_app (template_hole 12, template_hole 11),
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_app (template_hole 9, template_var 4),
                       template_app
                        (template_app (template_hole 9, template_var 3),
                         template_hole 8))),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 2)),
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app (template_hole 5, template_var 1)),
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app (template_hole 5, template_var 0)),
                         template_app
                          (template_app (template_hole 7, template_hole 0),
                           template_hole 4))))))))),
         template_app (template_hole 2, template_var 6)))),
    ("m1_kerberos.m1_inv1r_cacheI",
     "(!!Rb A B Kab Ts Ta nl.
          [| runs ?x Rb =
             Some (Resp, [A, B], aKey Kab # aNum Ts # aNum Ta # nl);
             clk ?x < Ta + La |]
          ==> (B, Kab, Ta) : cache ?x) ==>
      ?x : m1_inv1r_cache",
     template_implication
      ([template_predicate (template_app (template_hole 26, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m1_kerberos.m1_inv1r_cacheE",
     "[| ?x : m1_inv1r_cache;
         (!!Rb A B Kab Ts Ta nl.
             [| runs ?x Rb =
                Some (Resp, [A, B], aKey Kab # aNum Ts # aNum Ta # nl);
                clk ?x < Ta + La |]
             ==> (B, Kab, Ta) : cache ?x) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 25, template_var 1),
              template_hole 24)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 23, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m1_kerberos.m1_inv2i_servD",
     "[| runs ?x ?Ra = Some (Init, [?A, ?B], aKey ?Kab # aNum ?Ts # ?nla);
         ?x : m1_inv2i_serv; ?A ~: bad |]
      ==> EX Rs.
             ?Kab = sesK (Rs $ sk) &
             runs ?x Rs =
             Some (Serv, [?A, ?B], [aNon (?Ra $ na), aNum ?Ts])",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 24, template_var 6),
            template_var 5),
          template_app
           (template_hole 23,
            template_app
             (template_app (template_hole 22, template_hole 21),
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_app (template_hole 19, template_var 4),
                    template_app
                     (template_app (template_hole 19, template_var 3),
                      template_hole 18))),
                template_app
                 (template_app
                   (template_hole 17,
                    template_app (template_hole 16, template_var 2)),
                  template_app
                   (template_app
                     (template_hole 17,
                      template_app (template_hole 15, template_var 1)),
                    template_var 0)))))),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 6),
              template_hole 13)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 4),
                  template_hole 10)
                )
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("m1_kerberos.m1_inv2r_servD",
     "[| runs ?x ?Rb = Some (Resp, [?A, ?B], aKey ?Kab # aNum ?Ts # ?nlb);
         ?x : m1_inv2r_serv; ?B ~: bad |]
      ==> EX Rs Na.
             ?Kab = sesK (Rs $ sk) &
             runs ?x Rs = Some (Serv, [?A, ?B], [aNon Na, aNum ?Ts])",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 24, template_var 6),
            template_var 5),
          template_app
           (template_hole 23,
            template_app
             (template_app (template_hole 22, template_hole 21),
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_app (template_hole 19, template_var 4),
                    template_app
                     (template_app (template_hole 19, template_var 3),
                      template_hole 18))),
                template_app
                 (template_app
                   (template_hole 17,
                    template_app (template_hole 16, template_var 2)),
                  template_app
                   (template_app
                     (template_hole 17,
                      template_app (template_hole 15, template_var 1)),
                    template_var 0)))))),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 6),
              template_hole 13)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_hole 10)
                )
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("m1_kerberos.m1_inv1_ifreshD",
     "[| runs ?x ?Ra = Some (Init, [?A, ?B], aKey ?Kab # ?nl);
         runs ?x ?Ra' = Some (Init, [?A', ?B'], aKey ?Kab # ?nl');
         ?A ~: bad; ?B ~: bad; ?Kab ~: Domain (m1_state.leak ?x);
         ?x : m1_inv1_ifresh |]
      ==> ?Ra = ?Ra'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 17, template_var 9),
            template_var 8),
          template_app
           (template_hole 16,
            template_app
             (template_app (template_hole 15, template_hole 14),
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 12, template_var 7),
                    template_app
                     (template_app (template_hole 12, template_var 6),
                      template_hole 11))),
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 5)),
                  template_var 4))))),
        template_equation
         (template_app
           (template_app (template_hole 17, template_var 9),
            template_var 3),
          template_app
           (template_hole 16,
            template_app
             (template_app (template_hole 15, template_hole 14),
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 12, template_var 2),
                    template_app
                     (template_app (template_hole 12, template_var 1),
                      template_hole 11))),
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 5)),
                  template_var 0))))),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 7),
                  template_hole 6)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 6),
                  template_hole 6)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 5),
                  template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 9)))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 9),
              template_hole 1)
            )],
       template_equation (template_var 8, template_var 3))),
    ("m1_kerberos.m1_inv2r_servI",
     "(!!A B Rb Kab Ts nlb.
          [| B ~: bad;
             runs ?x Rb = Some (Resp, [A, B], aKey Kab # aNum Ts # nlb) |]
          ==> EX Rs Na.
                 Kab = sesK (Rs $ sk) &
                 runs ?x Rs = Some (Serv, [A, B], [aNon Na, aNum Ts])) ==>
      ?x : m1_inv2r_serv",
     template_implication
      ([template_predicate (template_app (template_hole 31, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m1_kerberos.m1_inv2i_servI",
     "(!!A B Ra Kab Ts nla.
          [| A ~: bad;
             runs ?x Ra = Some (Init, [A, B], aKey Kab # aNum Ts # nla) |]
          ==> EX Rs.
                 Kab = sesK (Rs $ sk) &
                 runs ?x Rs =
                 Some (Serv, [A, B], [aNon (Ra $ na), aNum Ts])) ==>
      ?x : m1_inv2i_serv",
     template_implication
      ([template_predicate (template_app (template_hole 31, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m1_kerberos.m1_inv3r_initD",
     "[| runs ?x ?Rb =
         Some (Resp, [?A, ?B], aKey ?Kab # aNum ?Ts # aNum ?Ta # ?nlb);
         ?x : m1_inv3r_init; ?B ~: bad; ?A ~: bad;
         ?Kab ~: Domain (m1_state.leak ?x) |]
      ==> EX Ra nla.
             runs ?x Ra =
             Some (Init, [?A, ?B], aKey ?Kab # aNum ?Ts # aNum ?Ta # nla)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 20, template_var 7),
            template_var 6),
          template_app
           (template_hole 19,
            template_app
             (template_app (template_hole 18, template_hole 17),
              template_app
               (template_app
                 (template_hole 16,
                  template_app
                   (template_app (template_hole 15, template_var 5),
                    template_app
                     (template_app (template_hole 15, template_var 4),
                      template_hole 14))),
                template_app
                 (template_app
                   (template_hole 13,
                    template_app (template_hole 12, template_var 3)),
                  template_app
                   (template_app
                     (template_hole 13,
                      template_app (template_hole 11, template_var 2)),
                    template_app
                     (template_app
                       (template_hole 13,
                        template_app (template_hole 11, template_var 1)),
                      template_var 0))))))),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 7),
              template_hole 9)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 4),
                  template_hole 6)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 5),
                  template_hole 6)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 7)))
                )
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("m1_kerberos.m1_inv4_rfreshD",
     "[| runs ?x ?Rb1.0 =
         Some (Resp, [?A1.0, ?B1.0], [aKey ?Kab, aNum ?Ts1.0, aNum ?Ta1.0]);
         runs ?x ?Rb2.0 =
         Some (Resp, [?A2.0, ?B2.0], [aKey ?Kab, aNum ?Ts2.0, aNum ?Ta2.0]);
         ?B1.0 ~: bad; ?A1.0 ~: bad; ?Kab ~: Domain (m1_state.leak ?x);
         ?x : m1_inv4_rfresh |]
      ==> ?Rb1.0 = ?Rb2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 19, template_var 11),
            template_var 10),
          template_app
           (template_hole 18,
            template_app
             (template_app (template_hole 17, template_hole 16),
              template_app
               (template_app
                 (template_hole 15,
                  template_app
                   (template_app (template_hole 14, template_var 9),
                    template_app
                     (template_app (template_hole 14, template_var 8),
                      template_hole 13))),
                template_app
                 (template_app
                   (template_hole 12,
                    template_app (template_hole 11, template_var 7)),
                  template_app
                   (template_app
                     (template_hole 12,
                      template_app (template_hole 10, template_var 6)),
                    template_app
                     (template_app
                       (template_hole 12,
                        template_app (template_hole 10, template_var 5)),
                      template_hole 9))))))),
        template_equation
         (template_app
           (template_app (template_hole 19, template_var 11),
            template_var 4),
          template_app
           (template_hole 18,
            template_app
             (template_app (template_hole 17, template_hole 16),
              template_app
               (template_app
                 (template_hole 15,
                  template_app
                   (template_app (template_hole 14, template_var 3),
                    template_app
                     (template_app (template_hole 14, template_var 2),
                      template_hole 13))),
                template_app
                 (template_app
                   (template_hole 12,
                    template_app (template_hole 11, template_var 7)),
                  template_app
                   (template_app
                     (template_hole 12,
                      template_app (template_hole 10, template_var 1)),
                    template_app
                     (template_app
                       (template_hole 12,
                        template_app (template_hole 10, template_var 0)),
                      template_hole 9))))))),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 8),
                  template_hole 6)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 9),
                  template_hole 6)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 7),
                  template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 11)))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 11),
              template_hole 1)
            )],
       template_equation (template_var 10, template_var 4))),
    ("m1_kerberos.m1_inv2i_servE",
     "[| ?x : m1_inv2i_serv;
         (!!A B Ra Kab Ts nla.
             [| A ~: bad;
                runs ?x Ra =
                Some (Init, [A, B], aKey Kab # aNum Ts # nla) |]
             ==> EX Rs.
                    Kab = sesK (Rs $ sk) &
                    runs ?x Rs =
                    Some (Serv, [A, B], [aNon (Ra $ na), aNum Ts])) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 30, template_var 1),
              template_hole 29)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 28, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m1_kerberos.m1_inv2r_servE",
     "[| ?x : m1_inv2r_serv;
         (!!A B Rb Kab Ts nlb.
             [| B ~: bad;
                runs ?x Rb =
                Some (Resp, [A, B], aKey Kab # aNum Ts # nlb) |]
             ==> EX Rs Na.
                    Kab = sesK (Rs $ sk) &
                    runs ?x Rs =
                    Some (Serv, [A, B], [aNon Na, aNum Ts])) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 30, template_var 1),
              template_hole 29)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 28, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m1_kerberos.m1_inv1_ifreshI",
     "(!!A A' B B' Ra Ra' Kab nl nl'.
          [| runs ?x Ra = Some (Init, [A, B], aKey Kab # nl);
             runs ?x Ra' = Some (Init, [A', B'], aKey Kab # nl'); A ~: bad;
             B ~: bad; Kab ~: Domain (m1_state.leak ?x) |]
          ==> Ra = Ra') ==>
      ?x : m1_inv1_ifresh",
     template_implication
      ([template_predicate (template_app (template_hole 23, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m1_kerberos.ri_runs2sigs_upd_init_some",
     "[| ?runz ?Ra = Some (Init, [?A, ?B], []); finite (dom ?runz) |]
      ==> ri_runs2sigs
           (?runz(?Ra |->
            (Init, [?A, ?B], [aKey ?Kab, aNum ?Ts, aNum ?Ta]))) =
          (ri_runs2sigs ?runz)
          (Running [?B, ?A] (?Kab, ?Ts, ?Ta) :=
             Suc (card (ri_running ?runz ?A ?B ?Kab ?Ts ?Ta)))",
     template_implication
      ([template_equation
         (template_app (template_var 6, template_var 5),
          template_app
           (template_hole 22,
            template_app
             (template_app (template_hole 21, template_hole 20),
              template_app
               (template_app
                 (template_hole 19,
                  template_app
                   (template_app (template_hole 18, template_var 4),
                    template_app
                     (template_app (template_hole 18, template_var 3),
                      template_hole 17))),
                template_hole 16)))),
        template_predicate
         (
            template_app
             (template_hole 15,
              template_app (template_hole 14, template_var 6))
            )],
       template_equation
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_app (template_hole 11, template_var 6),
               template_var 5),
             template_app
              (template_hole 22,
               template_app
                (template_app (template_hole 21, template_hole 20),
                 template_app
                  (template_app
                    (template_hole 19,
                     template_app
                      (template_app (template_hole 18, template_var 4),
                       template_app
                        (template_app (template_hole 18, template_var 3),
                         template_hole 17))),
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app (template_hole 9, template_var 2)),
                     template_app
                      (template_app
                        (template_hole 10,
                         template_app (template_hole 8, template_var 1)),
                       template_app
                        (template_app
                          (template_hole 10,
                           template_app (template_hole 8, template_var 0)),
                         template_hole 16)))))))),
         template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 12, template_var 6)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 18, template_var 3),
                   template_app
                    (template_app (template_hole 18, template_var 4),
                     template_hole 17))),
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 0)))),
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, t_empty))))))),
    ("m1_kerberos.ir_runs2sigs_upd_resp_some",
     "[| ?runz ?Rb = Some (Resp, [?A, ?B], []); finite (dom ?runz) |]
      ==> ir_runs2sigs
           (?runz(?Rb |->
            (Resp, [?A, ?B], [aKey ?Kab, aNum ?Ts, aNum ?Ta]))) =
          (ir_runs2sigs ?runz)
          (Running [?A, ?B] (?Kab, ?Ts, ?Ta) :=
             Suc (card (ir_running ?runz ?A ?B ?Kab ?Ts ?Ta)))",
     template_implication
      ([template_equation
         (template_app (template_var 6, template_var 5),
          template_app
           (template_hole 22,
            template_app
             (template_app (template_hole 21, template_hole 20),
              template_app
               (template_app
                 (template_hole 19,
                  template_app
                   (template_app (template_hole 18, template_var 4),
                    template_app
                     (template_app (template_hole 18, template_var 3),
                      template_hole 17))),
                template_hole 16)))),
        template_predicate
         (
            template_app
             (template_hole 15,
              template_app (template_hole 14, template_var 6))
            )],
       template_equation
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_app (template_hole 11, template_var 6),
               template_var 5),
             template_app
              (template_hole 22,
               template_app
                (template_app (template_hole 21, template_hole 20),
                 template_app
                  (template_app
                    (template_hole 19,
                     template_app
                      (template_app (template_hole 18, template_var 4),
                       template_app
                        (template_app (template_hole 18, template_var 3),
                         template_hole 17))),
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app (template_hole 9, template_var 2)),
                     template_app
                      (template_app
                        (template_hole 10,
                         template_app (template_hole 8, template_var 1)),
                       template_app
                        (template_app
                          (template_hole 10,
                           template_app (template_hole 8, template_var 0)),
                         template_hole 16)))))))),
         template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 12, template_var 6)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 18, template_var 4),
                   template_app
                    (template_app (template_hole 18, template_var 3),
                     template_hole 17))),
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 0)))),
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, t_empty))))))),
    ("m1_kerberos.ri_runs2sigs_upd_resp_some",
     "[| ?runz ?Rb = Some (Resp, [?A, ?B], []); finite (dom ?runz) |]
      ==> ri_runs2sigs
           (?runz(?Rb |->
            (Resp, [?A, ?B], [aKey ?Kab, aNum ?Ts, aNum ?Ta]))) =
          (ri_runs2sigs ?runz)
          (Commit [?B, ?A] (?Kab, ?Ts, ?Ta) :=
             Suc (card (ir_running ?runz ?A ?B ?Kab ?Ts ?Ta)))",
     template_implication
      ([template_equation
         (template_app (template_var 6, template_var 5),
          template_app
           (template_hole 22,
            template_app
             (template_app (template_hole 21, template_hole 20),
              template_app
               (template_app
                 (template_hole 19,
                  template_app
                   (template_app (template_hole 18, template_var 4),
                    template_app
                     (template_app (template_hole 18, template_var 3),
                      template_hole 17))),
                template_hole 16)))),
        template_predicate
         (
            template_app
             (template_hole 15,
              template_app (template_hole 14, template_var 6))
            )],
       template_equation
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_app (template_hole 11, template_var 6),
               template_var 5),
             template_app
              (template_hole 22,
               template_app
                (template_app (template_hole 21, template_hole 20),
                 template_app
                  (template_app
                    (template_hole 19,
                     template_app
                      (template_app (template_hole 18, template_var 4),
                       template_app
                        (template_app (template_hole 18, template_var 3),
                         template_hole 17))),
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app (template_hole 9, template_var 2)),
                     template_app
                      (template_app
                        (template_hole 10,
                         template_app (template_hole 8, template_var 1)),
                       template_app
                        (template_app
                          (template_hole 10,
                           template_app (template_hole 8, template_var 0)),
                         template_hole 16)))))))),
         template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 12, template_var 6)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 18, template_var 3),
                   template_app
                    (template_app (template_hole 18, template_var 4),
                     template_hole 17))),
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 0)))),
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, t_empty))))))),
    ("m1_kerberos.m1_inv1_ifreshE",
     "[| ?x : m1_inv1_ifresh;
         (!!A A' B B' Ra Ra' Kab nl nl'.
             [| runs ?x Ra = Some (Init, [A, B], aKey Kab # nl);
                runs ?x Ra' = Some (Init, [A', B'], aKey Kab # nl');
                A ~: bad; B ~: bad; Kab ~: Domain (m1_state.leak ?x) |]
             ==> Ra = Ra') ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 1),
              template_hole 21)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 20, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m1_kerberos.ir_runs2sigs_upd_resp_some_raw",
     "[| ?runz ?Rb = Some (Resp, [?A, ?B], []); finite (dom ?runz) |]
      ==> ir_runs2sigs
           (?runz(?Rb |->
            (Resp, [?A, ?B], [aKey ?Kab, aNum ?Ts, aNum ?Ta])))
           ?s =
          ((ir_runs2sigs ?runz)
           (Running [?A, ?B] (?Kab, ?Ts, ?Ta) :=
              Suc (card (ir_running ?runz ?A ?B ?Kab ?Ts ?Ta))))
           ?s",
     template_implication
      ([template_equation
         (template_app (template_var 7, template_var 6),
          template_app
           (template_hole 22,
            template_app
             (template_app (template_hole 21, template_hole 20),
              template_app
               (template_app
                 (template_hole 19,
                  template_app
                   (template_app (template_hole 18, template_var 5),
                    template_app
                     (template_app (template_hole 18, template_var 4),
                      template_hole 17))),
                template_hole 16)))),
        template_predicate
         (
            template_app
             (template_hole 15,
              template_app (template_hole 14, template_var 7))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 11, template_var 7),
                 template_var 6),
               template_app
                (template_hole 22,
                 template_app
                  (template_app (template_hole 21, template_hole 20),
                   template_app
                    (template_app
                      (template_hole 19,
                       template_app
                        (template_app (template_hole 18, template_var 5),
                         template_app
                          (template_app (template_hole 18, template_var 4),
                           template_hole 17))),
                     template_app
                      (template_app
                        (template_hole 10,
                         template_app (template_hole 9, template_var 3)),
                       template_app
                        (template_app
                          (template_hole 10,
                           template_app (template_hole 8, template_var 2)),
                         template_app
                          (template_app
                            (template_hole 10,
                             template_app
                              (template_hole 8, template_var 1)),
                           template_hole 16)))))))),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 12, template_var 7)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 18, template_var 5),
                     template_app
                      (template_app (template_hole 18, template_var 4),
                       template_hole 17))),
                 template_app
                  (template_app (template_hole 5, template_var 3),
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 1)))),
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, t_empty)))),
           template_var 0)))),
    ("m1_kerberos.m1_inv3r_initI",
     "(!!A B Rb Kab Ts Ta nlb.
          [| B ~: bad; A ~: bad; Kab ~: Domain (m1_state.leak ?x);
             runs ?x Rb =
             Some (Resp, [A, B], aKey Kab # aNum Ts # aNum Ta # nlb) |]
          ==> EX Ra nla.
                 runs ?x Ra =
                 Some
                  (Init, [A, B], aKey Kab # aNum Ts # aNum Ta # nla)) ==>
      ?x : m1_inv3r_init",
     template_implication
      ([template_predicate (template_app (template_hole 27, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m1_kerberos.m1_inv3r_initE",
     "[| ?x : m1_inv3r_init;
         (!!A B Rb Kab Ts Ta nlb.
             [| B ~: bad; A ~: bad; Kab ~: Domain (m1_state.leak ?x);
                runs ?x Rb =
                Some (Resp, [A, B], aKey Kab # aNum Ts # aNum Ta # nlb) |]
             ==> EX Ra nla.
                    runs ?x Ra =
                    Some
                     (Init, [A, B], aKey Kab # aNum Ts # aNum Ta # nla)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 26, template_var 1),
              template_hole 25)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 24, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m1_kerberos.ir_runs2sigs_upd_init_some2",
     "[| ?runz ?Na = Some (Init, [?A, ?B], [aKey ?Kab, aNum ?Ts, aNum ?Ta]);
         finite (dom ?runz) |]
      ==> ir_runs2sigs
           (?runz(?Na |->
            (Init, [?A, ?B], [aKey ?Kab, aNum ?Ts, aNum ?Ta, END]))) =
          (ir_runs2sigs ?runz)
          (Commit [?A, ?B] (?Kab, ?Ts, ?Ta) :=
             Suc (card (ir_commit ?runz ?A ?B ?Kab ?Ts ?Ta)))",
     template_implication
      ([template_equation
         (template_app (template_var 6, template_var 5),
          template_app
           (template_hole 23,
            template_app
             (template_app (template_hole 22, template_hole 21),
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_app (template_hole 19, template_var 4),
                    template_app
                     (template_app (template_hole 19, template_var 3),
                      template_hole 18))),
                template_app
                 (template_app
                   (template_hole 17,
                    template_app (template_hole 16, template_var 2)),
                  template_app
                   (template_app
                     (template_hole 17,
                      template_app (template_hole 15, template_var 1)),
                    template_app
                     (template_app
                       (template_hole 17,
                        template_app (template_hole 15, template_var 0)),
                      template_hole 14))))))),
        template_predicate
         (
            template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 6))
            )],
       template_equation
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_app (template_hole 9, template_var 6),
               template_var 5),
             template_app
              (template_hole 23,
               template_app
                (template_app (template_hole 22, template_hole 21),
                 template_app
                  (template_app
                    (template_hole 20,
                     template_app
                      (template_app (template_hole 19, template_var 4),
                       template_app
                        (template_app (template_hole 19, template_var 3),
                         template_hole 18))),
                   template_app
                    (template_app
                      (template_hole 17,
                       template_app (template_hole 16, template_var 2)),
                     template_app
                      (template_app
                        (template_hole 17,
                         template_app (template_hole 15, template_var 1)),
                       template_app
                        (template_app
                          (template_hole 17,
                           template_app (template_hole 15, template_var 0)),
                         template_app
                          (template_app (template_hole 17, template_hole 8),
                           template_hole 14))))))))),
         template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 10, template_var 6)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 19, template_var 4),
                   template_app
                    (template_app (template_hole 19, template_var 3),
                     template_hole 18))),
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 0)))),
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, t_empty))))))),
    ("m1_kerberos.m1_inv4_rfreshI",
     "(!!Rb1 Rb2 A1 A2 B1 B2 Kab Ts1 Ts2 Ta1 Ta2.
          [| runs ?x Rb1 =
             Some (Resp, [A1, B1], [aKey Kab, aNum Ts1, aNum Ta1]);
             runs ?x Rb2 =
             Some (Resp, [A2, B2], [aKey Kab, aNum Ts2, aNum Ta2]);
             B1 ~: bad; A1 ~: bad; Kab ~: Domain (m1_state.leak ?x) |]
          ==> Rb1 = Rb2) ==>
      ?x : m1_inv4_rfresh",
     template_implication
      ([template_predicate (template_app (template_hole 25, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m1_kerberos.ir_runs2sigs_upd_init_some2_raw",
     "[| ?runz ?Ra = Some (Init, [?A, ?B], [aKey ?Kab, aNum ?Ts, aNum ?Ta]);
         finite (dom ?runz) |]
      ==> ir_runs2sigs
           (?runz(?Ra |->
            (Init, [?A, ?B], [aKey ?Kab, aNum ?Ts, aNum ?Ta, END])))
           ?s =
          ((ir_runs2sigs ?runz)
           (Commit [?A, ?B] (?Kab, ?Ts, ?Ta) :=
              Suc (card (ir_commit ?runz ?A ?B ?Kab ?Ts ?Ta))))
           ?s",
     template_implication
      ([template_equation
         (template_app (template_var 7, template_var 6),
          template_app
           (template_hole 23,
            template_app
             (template_app (template_hole 22, template_hole 21),
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_app (template_hole 19, template_var 5),
                    template_app
                     (template_app (template_hole 19, template_var 4),
                      template_hole 18))),
                template_app
                 (template_app
                   (template_hole 17,
                    template_app (template_hole 16, template_var 3)),
                  template_app
                   (template_app
                     (template_hole 17,
                      template_app (template_hole 15, template_var 2)),
                    template_app
                     (template_app
                       (template_hole 17,
                        template_app (template_hole 15, template_var 1)),
                      template_hole 14))))))),
        template_predicate
         (
            template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 7))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app
                (template_app (template_hole 9, template_var 7),
                 template_var 6),
               template_app
                (template_hole 23,
                 template_app
                  (template_app (template_hole 22, template_hole 21),
                   template_app
                    (template_app
                      (template_hole 20,
                       template_app
                        (template_app (template_hole 19, template_var 5),
                         template_app
                          (template_app (template_hole 19, template_var 4),
                           template_hole 18))),
                     template_app
                      (template_app
                        (template_hole 17,
                         template_app (template_hole 16, template_var 3)),
                       template_app
                        (template_app
                          (template_hole 17,
                           template_app (template_hole 15, template_var 2)),
                         template_app
                          (template_app
                            (template_hole 17,
                             template_app
                              (template_hole 15, template_var 1)),
                           template_app
                            (template_app
                              (template_hole 17, template_hole 8),
                             template_hole 14))))))))),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 10, template_var 7)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 19, template_var 5),
                     template_app
                      (template_app (template_hole 19, template_var 4),
                       template_hole 18))),
                 template_app
                  (template_app (template_hole 5, template_var 3),
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 1)))),
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, t_empty)))),
           template_var 0)))),
    ("m1_kerberos.m1_inv4_rfreshE",
     "[| ?x : m1_inv4_rfresh;
         (!!Rb1 Rb2 A1 A2 B1 B2 Kab Ts1 Ts2 Ta1 Ta2.
             [| runs ?x Rb1 =
                Some (Resp, [A1, B1], [aKey Kab, aNum Ts1, aNum Ta1]);
                runs ?x Rb2 =
                Some (Resp, [A2, B2], [aKey Kab, aNum Ts2, aNum Ta2]);
                B1 ~: bad; A1 ~: bad; Kab ~: Domain (m1_state.leak ?x) |]
             ==> Rb1 = Rb2) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 1),
              template_hole 23)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 22, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.m1_kerberosMoreTemplates"
### 0.468s elapsed time, 0.618s cpu time, 0.035s GC time
val it = (): unit
