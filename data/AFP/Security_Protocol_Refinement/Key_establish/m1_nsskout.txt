Loading theory "Draft.Agents" (required by "Draft.m1_nsskMoreTemplates" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.Runs" via "Draft.Atoms" via "Draft.Keys")
Loading theory "Draft.Infra" (required by "Draft.m1_nsskMoreTemplates" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.s0g_secrecy" via "Draft.Refinement")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.m1_nsskMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.m1_nsskMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "Draft.Infra"
### 0.057s elapsed time, 0.256s cpu time, 0.000s GC time
Loading theory "Draft.Refinement" (required by "Draft.m1_nsskMoreTemplates" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.s0g_secrecy")
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.147s elapsed time, 0.598s cpu time, 0.036s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.m1_nsskMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
Proofs for inductive predicate(s) "reachp"
specification
  Server_not_bad: Server ~: bad
  Proving monotonicity ...
Proofs for inductive predicate(s) "behp"
  Proving monotonicity ...
### theory "HOL-Library.Nat_Bijection"
### 0.357s elapsed time, 1.427s cpu time, 0.117s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.m1_nsskMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.216s elapsed time, 0.852s cpu time, 0.081s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.m1_nsskMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Agents"
### 0.531s elapsed time, 2.118s cpu time, 0.205s GC time
Loading theory "Draft.Keys" (required by "Draft.m1_nsskMoreTemplates" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.Runs" via "Draft.Atoms")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "seq_liftp"
consts
  snth :: "'a stream => nat => 'a"
  Proving monotonicity ...
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
### theory "Draft.Refinement"
### 1.151s elapsed time, 4.383s cpu time, 0.917s GC time
Loading theory "Draft.a0n_agree" (required by "Draft.m1_nsskMoreTemplates" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.a0i_agree")
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
### theory "Draft.Keys"
### 0.876s elapsed time, 3.311s cpu time, 0.799s GC time
Loading theory "Draft.Atoms" (required by "Draft.m1_nsskMoreTemplates" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist" via "Draft.Runs")
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.085s elapsed time, 4.134s cpu time, 0.887s GC time
Loading theory "Draft.s0g_secrecy" (required by "Draft.m1_nsskMoreTemplates" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Atoms"
### 0.297s elapsed time, 1.174s cpu time, 0.087s GC time
Loading theory "Draft.Runs" (required by "Draft.m1_nsskMoreTemplates" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn" via "Draft.m1_keydist")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.s0g_secrecy"
### 0.591s elapsed time, 2.325s cpu time, 0.243s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.m1_nsskMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.Runs"
### 0.427s elapsed time, 1.680s cpu time, 0.227s GC time
Loading theory "Draft.m1_keydist" (required by "Draft.m1_nsskMoreTemplates" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn")
### theory "Draft.a0n_agree"
### 1.114s elapsed time, 4.390s cpu time, 0.461s GC time
Loading theory "Draft.a0i_agree" (required by "Draft.m1_nsskMoreTemplates" via "Draft.m1_nssk" via "Draft.m1_keydist_iirn")
Found termination order: "size <*mlex*> {}"
### theory "Draft.a0i_agree"
### 0.116s elapsed time, 0.455s cpu time, 0.047s GC time
Proofs for inductive predicate(s) "knCp"
  Proving monotonicity ...
### theory "HOL-Library.Tree"
### 2.173s elapsed time, 8.351s cpu time, 1.307s GC time
Loading theory "Draft.Templates" (required by "Draft.m1_nsskMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.079s elapsed time, 0.243s cpu time, 0.056s GC time
Proofs for inductive predicate(s) "azCp"
  Proving monotonicity ...
### theory "HOL-Library.BigO"
### 0.796s elapsed time, 2.582s cpu time, 0.283s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.m1_nsskMoreTemplates")
### theory "Draft.m1_keydist"
### 0.771s elapsed time, 2.377s cpu time, 0.211s GC time
Loading theory "Draft.m1_keydist_iirn" (required by "Draft.m1_nsskMoreTemplates" via "Draft.m1_nssk")
Found termination order: "{}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.534s elapsed time, 1.149s cpu time, 0.100s GC time
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.m1_keydist_iirn"
### 0.892s elapsed time, 1.500s cpu time, 0.128s GC time
Loading theory "Draft.m1_nssk" (required by "Draft.m1_nsskMoreTemplates")
overloading
  is_len' \<equiv> is_len :: nat
  rs_len' \<equiv> rs_len :: nat
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### Ignoring duplicate safe introduction (intro!)
### finite (dom ?runz) ==> finite (ri_running ?runz ?A ?B ?Kab ?Nb)
### Ignoring duplicate rewrite rule:
### finite (dom ?runz1) ==>
### finite (ri_running ?runz1 ?A1 ?B1 ?Kab1 ?Nb1) == True
### Ignoring duplicate safe introduction (intro!)
### finite (dom ?runz) ==> finite (ri_running ?runz ?A ?B ?Kab ?Nb)
### theory "Draft.m1_nssk"
### 0.766s elapsed time, 0.874s cpu time, 0.069s GC time
Loading theory "Draft.m1_nsskMoreTemplates"
val templateLemmas =
   [("m1_nssk.knC_runs1a1", "knC (runs1a1 ?runz) = knC ?runz",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("m1_nssk.PO_m1_step2_refines_ir_a0i_skip",
     "{R_a0im1_ir} Id, m1_step2 ?Rb ?A ?B {> R_a0im1_ir}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_nssk.PO_m1_step2_refines_ri_a0i_skip",
     "{R_a0im1_ri} Id, m1_step2 ?Rb ?A ?B {> R_a0im1_ri}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_nssk.PO_m1_step1_refines_ir_a0i_skip",
     "{R_a0im1_ir} Id, m1_step1 ?Ra ?A ?B ?Na {> R_a0im1_ir}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_nssk.PO_m1_step1_refines_ri_a0i_skip",
     "{R_a0im1_ri} Id, m1_step1 ?Ra ?A ?B ?Na {> R_a0im1_ri}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_nssk.m1_inv0_finD", "?x : m1a_inv0_fin ==> finite (dom (runs ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("m1_nssk.m1_inv0_finI", "finite (dom (runs ?x)) ==> ?x : m1a_inv0_fin",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m1_nssk.PO_m1_step3_refines_ir_a0i_skip",
     "{R_a0im1_ir} Id, m1_step3 ?Rs ?A ?B ?Na ?Kab {> R_a0im1_ir}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_nssk.PO_m1_step4_refines_ir_a0i_skip",
     "{R_a0im1_ir} Id, m1_step4 ?Ra ?A ?B ?Na ?Kab {> R_a0im1_ir}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_nssk.PO_m1_step7_refines_ir_a0i_skip",
     "{R_a0im1_ir} Id, m1_step7 ?Rb ?A ?B ?Nb ?Kab {> R_a0im1_ir}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_nssk.PO_m1_step3_refines_ri_a0i_skip",
     "{R_a0im1_ri} Id, m1_step3 ?Rs ?A ?B ?Na ?Kab {> R_a0im1_ri}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_nssk.PO_m1_step4_refines_ri_a0i_skip",
     "{R_a0im1_ri} Id, m1_step4 ?Ra ?A ?B ?Nb ?Kab {> R_a0im1_ri}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_nssk.PO_m1_step5_refines_ri_a0i_skip",
     "{R_a0im1_ri} Id, m1_step5 ?Rb ?A ?B ?Nb ?Kab {> R_a0im1_ri}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_nssk.PO_m1_step7_refines_m1a_skip",
     "{R1a1} Id, m1_step7 ?Rb ?A ?B ?Nb ?Kab {> R1a1}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_nssk.PO_m1_step6_refines_m1a_skip",
     "{R1a1} Id, m1_step6 ?Ra ?A ?B ?Na ?Nb ?Kab {> R1a1}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_nssk.PO_m1_leak_refines_m1a_leak",
     "{R1a1} m1a_leak ?Rs, m1_leak ?Rs ?Ra ?Rb ?A ?B {> R1a1}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 4)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_nssk.PO_m1_step2_refines_m1a_step2",
     "{R1a1} m1a_step2 ?Rb ?A ?B, m1_step2 ?Rb ?A ?B {> R1a1}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_nssk.ir_runs2sigs_empty",
     "?runz = Map.empty ==> ir_runs2sigs ?runz = (%s. 0)",
     template_implication
      ([template_equation (template_var 0, t_empty)],
       template_equation
        (template_app (template_hole 1, template_var 0), t_empty))),
    ("m1_nssk.ri_runs2sigs_empty",
     "?runz = Map.empty ==> ri_runs2sigs ?runz = (%s. 0)",
     template_implication
      ([template_equation (template_var 0, t_empty)],
       template_equation
        (template_app (template_hole 1, template_var 0), t_empty))),
    ("m1_nssk.PO_m1_step1_refines_m1a_step1",
     "{R1a1} m1a_step1 ?Ra ?A ?B ?Na, m1_step1 ?Ra ?A ?B ?Na {> R1a1}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("m1_nssk.m1_inv0_finE",
     "[| ?x : m1a_inv0_fin; finite (dom (runs ?x)) ==> PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)))
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m1_nssk.PO_m1_step5_refines_m1a_step5",
     "{R1a1} m1a_step5 ?Rb ?A ?B ?Kab
              [], m1_step5 ?Rb ?A ?B ?Nb ?Kab {> R1a1}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_hole 1)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 0),
               template_var 1)),
           template_hole 3)
         )),
    ("m1_nssk.PO_m1_step3_refines_m1a_step3",
     "{R1a1} m1a_step3 ?Rs ?A ?B ?Kab ?Na
              [], m1_step3 ?Rs ?A ?B ?Na ?Kab {> R1a1}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 2, template_var 4),
                         template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 0),
                 template_hole 1)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 0),
               template_var 1)),
           template_hole 3)
         )),
    ("m1_nssk.PO_m1_step4_refines_m1a_step4",
     "{R1a1} m1a_step4 ?Ra ?A ?B ?Na ?Kab
              [], m1_step4 ?Ra ?A ?B ?Na ?Kab {> R1a1}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 2, template_var 4),
                         template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 0),
                 template_hole 1)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 3)
         )),
    ("m1_nssk.PO_m1_step5_refines_ir_a0i_running",
     "{R_a0im1_ir} a0i_running [?A, ?B]
                    (?Kab,
                     ?Nb), m1_step5 ?Rb ?A ?B ?Nb ?Kab {> R_a0im1_ir}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 4),
                     template_app
                      (template_app (template_hole 3, template_var 3),
                       template_hole 2))),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1))),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 4),
                   template_var 3),
                 template_var 1),
               template_var 2)),
           template_hole 5)
         )),
    ("m1_nssk.PO_m1_leak_refines_ir_a0i_corrupt",
     "{R_a0im1_ir} a0i_corrupt
                    ({sesK (?Rs $ sk)} \<times>
                     UNIV), m1_leak ?Rs ?Ra ?Rb ?A ?B {> R_a0im1_ir}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 10, template_hole 9),
               template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_app (template_hole 4, template_var 4),
                             template_hole 3))),
                       template_hole 2)),
                   t_empty))),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 9)
         )),
    ("m1_nssk.PO_m1_leak_refines_ri_a0i_corrupt",
     "{R_a0im1_ri} a0i_corrupt
                    ({sesK (?Rs $ sk)} \<times>
                     UNIV), m1_leak ?Rs ?Ra ?Rb ?A ?B {> R_a0im1_ri}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 10, template_hole 9),
               template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_app (template_hole 4, template_var 4),
                             template_hole 3))),
                       template_hole 2)),
                   t_empty))),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 9)
         )),
    ("m1_nssk.m1_secrecyI",
     "knC (runs ?x)
      <= azC (runs ?x) Un Domain (m1_state.leak ?x) \<times> UNIV ==>
      ?x : m1_secrecy",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_var 0)),
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_hole 6,
                template_app (template_hole 8, template_var 0))),
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 0))),
              t_empty)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m1_nssk.PO_m1_step7_refines_ri_a0i_commit",
     "{R_a0im1_ri Int
       UNIV \<times>
       m1_inv0_fin} a0i_commit [?B, ?A]
                     (?Kab,
                      ?Nb), m1_step7 ?Rb ?A ?B ?Nb ?Kab {> R_a0im1_ri}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     t_empty))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 4),
                     template_app
                      (template_app (template_hole 3, template_var 3),
                       template_hole 2))),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1))),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 3),
                   template_var 4),
                 template_var 1),
               template_var 2)),
           template_hole 8)
         )),
    ("m1_nssk.m1_secrecyE",
     "[| ?x : m1_secrecy;
         knC (runs ?x)
         <= azC (runs ?x) Un Domain (m1_state.leak ?x) \<times> UNIV ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_hole 9)
            ),
        template_implication
         ([template_inequation
            (less_equals,
             template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 1)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 6, template_var 1))),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 1))),
                 t_empty)))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m1_nssk.PO_m1_step6_refines_ri_a0i_running",
     "{R_a0im1_ri Int
       UNIV \<times>
       m1_inv0_fin} a0i_running [?B, ?A]
                     (?Kab,
                      ?Nb), m1_step6 ?Ra ?A ?B ?Na ?Nb ?Kab {> R_a0im1_ri}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     t_empty))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 5),
                     template_app
                      (template_app (template_hole 3, template_var 4),
                       template_hole 2))),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2))),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 4),
                     template_var 5),
                   template_var 0),
                 template_var 2),
               template_var 3)),
           template_hole 8)
         )),
    ("m1_nssk.ri_runs2sigs_upd_init_none",
     "?Na ~: dom ?runz ==>
      ri_runs2sigs (?runz(?Na |-> (Init, [?A, ?B], []))) =
      ri_runs2sigs ?runz",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_app (template_hole 10, template_var 2))
                )
            )],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 2),
               template_var 3),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_app
                        (template_app (template_hole 2, template_var 0),
                         template_hole 1))),
                   template_hole 0))))),
         template_app (template_hole 8, template_var 2)))),
    ("m1_nssk.ir_runs2sigs_upd_init_none",
     "?Ra ~: dom ?runz ==>
      ir_runs2sigs (?runz(?Ra |-> (Init, [?A, ?B], []))) =
      ir_runs2sigs ?runz",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_app (template_hole 10, template_var 2))
                )
            )],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 2),
               template_var 3),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_app
                        (template_app (template_hole 2, template_var 0),
                         template_hole 1))),
                   template_hole 0))))),
         template_app (template_hole 8, template_var 2)))),
    ("m1_nssk.ir_runs2sigs_upd_resp_none",
     "?Rb ~: dom ?runz ==>
      ir_runs2sigs (?runz(?Rb |-> (Resp, [?A, ?B], []))) =
      ir_runs2sigs ?runz",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_app (template_hole 10, template_var 2))
                )
            )],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 2),
               template_var 3),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_app
                        (template_app (template_hole 2, template_var 0),
                         template_hole 1))),
                   template_hole 0))))),
         template_app (template_hole 8, template_var 2)))),
    ("m1_nssk.ri_runs2sigs_upd_resp_none",
     "?Rb ~: dom ?runz ==>
      ri_runs2sigs (?runz(?Rb |-> (Resp, [?A, ?B], []))) =
      ri_runs2sigs ?runz",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_app (template_hole 10, template_var 2))
                )
            )],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 2),
               template_var 3),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_app
                        (template_app (template_hole 2, template_var 0),
                         template_hole 1))),
                   template_hole 0))))),
         template_app (template_hole 8, template_var 2)))),
    ("m1_nssk.ir_runs2sigs_upd_serv_none",
     "?Rs ~: dom ?runz ==>
      ir_runs2sigs (?runz(?Rs |-> (Serv, [?A, ?B], ?nl))) =
      ir_runs2sigs ?runz",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 4),
                  template_app (template_hole 9, template_var 3))
                )
            )],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 6, template_var 3),
               template_var 4),
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_app
                        (template_app (template_hole 1, template_var 1),
                         template_hole 0))),
                   template_var 0))))),
         template_app (template_hole 7, template_var 3)))),
    ("m1_nssk.ri_runs2sigs_upd_serv_none",
     "?Rs ~: dom ?runz ==>
      ri_runs2sigs (?runz(?Rs |-> (Serv, [?A, ?B], ?nl))) =
      ri_runs2sigs ?runz",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 4),
                  template_app (template_hole 9, template_var 3))
                )
            )],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 6, template_var 3),
               template_var 4),
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_app
                        (template_app (template_hole 1, template_var 1),
                         template_hole 0))),
                   template_var 0))))),
         template_app (template_hole 7, template_var 3)))),
    ("m1_nssk.PO_m1_step6_refines_ir_a0i_commit",
     "{R_a0im1_ir Int
       UNIV \<times>
       (m1_inv2i_serv Int
        m1_inv0_fin)} a0i_commit [?A, ?B]
                       (?Kab,
                        ?Nb), m1_step6 ?Ra ?A ?B ?Na ?Nb
                               ?Kab {> R_a0im1_ir}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 11, template_hole 10),
                   template_app
                    (template_app (template_hole 9, template_hole 8),
                     t_empty))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 5),
                     template_app
                      (template_app (template_hole 3, template_var 4),
                       template_hole 2))),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2))),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 5),
                     template_var 4),
                   template_var 0),
                 template_var 2),
               template_var 3)),
           template_hole 10)
         )),
    ("m1_nssk.finite_ir_commit",
     "finite (dom ?runz) ==> finite (ri_running ?runz ?A ?B ?Kab ?Nb)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 4))
            )],
       template_predicate
        (
           template_app
            (template_hole 13, template_app (template_hole 11, t_empty))
           ))),
    ("m1_nssk.ir_runs2sigs_upd_init_some",
     "?runz ?Ra = Some (Init, [?A, ?B], []) ==>
      ir_runs2sigs (?runz(?Ra |-> (Init, [?A, ?B], [aKey ?Kab]))) =
      ir_runs2sigs ?runz",
     template_implication
      ([template_equation
         (template_app (template_var 4, template_var 3),
          template_app
           (template_hole 11,
            template_app
             (template_app (template_hole 10, template_hole 9),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 2),
                    template_app
                     (template_app (template_hole 7, template_var 1),
                      template_hole 6))),
                template_hole 5))))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_var 3),
             template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_hole 9),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_var 2),
                       template_app
                        (template_app (template_hole 7, template_var 1),
                         template_hole 6))),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 0)),
                     template_hole 5)))))),
         template_app (template_hole 3, template_var 4)))),
    ("m1_nssk.ri_runs2sigs_upd_init_some",
     "?runz ?Ra = Some (Init, [?A, ?B], []) ==>
      ri_runs2sigs (?runz(?Ra |-> (Init, [?A, ?B], [aKey ?Kab]))) =
      ri_runs2sigs ?runz",
     template_implication
      ([template_equation
         (template_app (template_var 4, template_var 3),
          template_app
           (template_hole 11,
            template_app
             (template_app (template_hole 10, template_hole 9),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 2),
                    template_app
                     (template_app (template_hole 7, template_var 1),
                      template_hole 6))),
                template_hole 5))))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_var 3),
             template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_hole 9),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_var 2),
                       template_app
                        (template_app (template_hole 7, template_var 1),
                         template_hole 6))),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 0)),
                     template_hole 5)))))),
         template_app (template_hole 3, template_var 4)))),
    ("m1_nssk.ri_runs2sigs_upd_resp_some",
     "?runz ?Rb = Some (Resp, [?A, ?B], []) ==>
      ri_runs2sigs (?runz(?Rb |-> (Resp, [?A, ?B], [aKey ?K]))) =
      ri_runs2sigs ?runz",
     template_implication
      ([template_equation
         (template_app (template_var 4, template_var 3),
          template_app
           (template_hole 11,
            template_app
             (template_app (template_hole 10, template_hole 9),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 2),
                    template_app
                     (template_app (template_hole 7, template_var 1),
                      template_hole 6))),
                template_hole 5))))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_var 3),
             template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_hole 9),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_var 2),
                       template_app
                        (template_app (template_hole 7, template_var 1),
                         template_hole 6))),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 0)),
                     template_hole 5)))))),
         template_app (template_hole 3, template_var 4)))),
    ("m1_nssk.ir_runs2sigs_upd_resp_some",
     "?runz ?Rb = Some (Resp, [?A, ?B], [aKey ?K]) ==>
      ir_runs2sigs (?runz(?Rb |-> (Resp, [?A, ?B], [aKey ?K, END]))) =
      ir_runs2sigs ?runz",
     template_implication
      ([template_equation
         (template_app (template_var 4, template_var 3),
          template_app
           (template_hole 12,
            template_app
             (template_app (template_hole 11, template_hole 10),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_var 2),
                    template_app
                     (template_app (template_hole 8, template_var 1),
                      template_hole 7))),
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 0)),
                  template_hole 4)))))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3),
             template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 11, template_hole 10),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 8, template_var 2),
                       template_app
                        (template_app (template_hole 8, template_var 1),
                         template_hole 7))),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_var 0)),
                     template_app
                      (template_app (template_hole 6, template_hole 0),
                       template_hole 4))))))),
         template_app (template_hole 2, template_var 4)))),
    ("m1_nssk.ir_runs2sigs_upd_resp",
     "?runz ?Rb = Some (Resp, [?A, ?B], []) ==>
      ir_runs2sigs (?runz(?Rb |-> (Resp, [?A, ?B], [aKey ?Kab]))) =
      (ir_runs2sigs ?runz)(Running [?A, ?B] (?Kab, ?Rb $ nb) := 1)",
     template_implication
      ([template_equation
         (template_app (template_var 4, template_var 3),
          template_app
           (template_hole 17,
            template_app
             (template_app (template_hole 16, template_hole 15),
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 13, template_var 2),
                    template_app
                     (template_app (template_hole 13, template_var 1),
                      template_hole 12))),
                template_hole 11))))],
       template_equation
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 4),
               template_var 3),
             template_app
              (template_hole 17,
               template_app
                (template_app (template_hole 16, template_hole 15),
                 template_app
                  (template_app
                    (template_hole 14,
                     template_app
                      (template_app (template_hole 13, template_var 2),
                       template_app
                        (template_app (template_hole 13, template_var 1),
                         template_hole 12))),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 0)),
                     template_hole 11)))))),
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 9, template_var 4)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 13, template_var 2),
                   template_app
                    (template_app (template_hole 13, template_var 1),
                     template_hole 12))),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_hole 1)))),
           template_hole 0)))),
    ("m1_nssk.ri_runs2sigs_upd_resp_some2",
     "?runz ?Rb = Some (Resp, [?A, ?B], [aKey ?Kab]) ==>
      ri_runs2sigs (?runz(?Rb |-> (Resp, [?A, ?B], [aKey ?Kab, END]))) =
      (ri_runs2sigs ?runz)(Commit [?B, ?A] (?Kab, ?Rb $ nb) := 1)",
     template_implication
      ([template_equation
         (template_app (template_var 4, template_var 3),
          template_app
           (template_hole 18,
            template_app
             (template_app (template_hole 17, template_hole 16),
              template_app
               (template_app
                 (template_hole 15,
                  template_app
                   (template_app (template_hole 14, template_var 2),
                    template_app
                     (template_app (template_hole 14, template_var 1),
                      template_hole 13))),
                template_app
                 (template_app
                   (template_hole 12,
                    template_app (template_hole 11, template_var 0)),
                  template_hole 10)))))],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 4),
               template_var 3),
             template_app
              (template_hole 18,
               template_app
                (template_app (template_hole 17, template_hole 16),
                 template_app
                  (template_app
                    (template_hole 15,
                     template_app
                      (template_app (template_hole 14, template_var 2),
                       template_app
                        (template_app (template_hole 14, template_var 1),
                         template_hole 13))),
                   template_app
                    (template_app
                      (template_hole 12,
                       template_app (template_hole 11, template_var 0)),
                     template_app
                      (template_app (template_hole 12, template_hole 6),
                       template_hole 10))))))),
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 8, template_var 4)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 14, template_var 1),
                   template_app
                    (template_app (template_hole 14, template_var 2),
                     template_hole 13))),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_hole 1)))),
           template_hole 0)))),
    ("m1_nssk.m1_inv2i_serv_lemma",
     "[| runs ?t ?Ra = Some (Init, [?A, ?B], [aKey ?Kab, aNon ?Nb]);
         runs ?t ?Ra' = Some (Init, [?A, ?B], [aKey ?Kab]); ?A ~: bad;
         ?t : m1_inv2i_serv |]
      ==> ?P",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 15, template_var 7),
            template_var 6),
          template_app
           (template_hole 14,
            template_app
             (template_app (template_hole 13, template_hole 12),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 5),
                    template_app
                     (template_app (template_hole 10, template_var 4),
                      template_hole 9))),
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_var 3)),
                  template_app
                   (template_app
                     (template_hole 8,
                      template_app (template_hole 6, template_var 2)),
                    template_hole 5)))))),
        template_equation
         (template_app
           (template_app (template_hole 15, template_var 7),
            template_var 1),
          template_app
           (template_hole 14,
            template_app
             (template_app (template_hole 13, template_hole 12),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 5),
                    template_app
                     (template_app (template_hole 10, template_var 4),
                      template_hole 9))),
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_var 3)),
                  template_hole 5))))),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 5),
                  template_hole 2)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 7),
              template_hole 0)
            )],
       template_predicate (template_var 0))),
    ("m1_nssk.m1_inv2r_servD",
     "[| runs ?x ?Rb = Some (Resp, [?A, ?B], aKey ?Kab # ?nlb);
         ?x : m1_inv2r_serv; ?B ~: bad |]
      ==> EX Rs Na.
             ?Kab = sesK (Rs $ sk) &
             runs ?x Rs = Some (Serv, [?A, ?B], [aNon Na])",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 23, template_var 5),
            template_var 4),
          template_app
           (template_hole 22,
            template_app
             (template_app (template_hole 21, template_hole 20),
              template_app
               (template_app
                 (template_hole 19,
                  template_app
                   (template_app (template_hole 18, template_var 3),
                    template_app
                     (template_app (template_hole 18, template_var 2),
                      template_hole 17))),
                template_app
                 (template_app
                   (template_hole 16,
                    template_app (template_hole 15, template_var 1)),
                  template_var 0))))),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 5),
              template_hole 13)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 2),
                  template_hole 10)
                )
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("m1_nssk.m1_inv2i_servD",
     "[| runs ?x ?Ra = Some (Init, [?A, ?B], aKey ?Kab # ?nla);
         ?Na = ?Ra $ na; ?x : m1_inv2i_serv; ?A ~: bad |]
      ==> EX Rs.
             ?Kab = sesK (Rs $ sk) &
             runs ?x Rs = Some (Serv, [?A, ?B], [aNon ?Na])",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 24, template_var 6),
            template_var 5),
          template_app
           (template_hole 23,
            template_app
             (template_app (template_hole 22, template_hole 21),
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_app (template_hole 19, template_var 4),
                    template_app
                     (template_app (template_hole 19, template_var 3),
                      template_hole 18))),
                template_app
                 (template_app
                   (template_hole 17,
                    template_app (template_hole 16, template_var 2)),
                  template_var 1))))),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 14, template_var 5),
            template_hole 13)),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 6),
              template_hole 11)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_hole 8)
                )
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("m1_nssk.m1_inv3_ifreshD",
     "[| runs ?x ?Ra = Some (Init, [?A, ?B], aKey ?Kab # ?nl);
         runs ?x ?Ra' = Some (Init, [?A', ?B'], aKey ?Kab # ?nl');
         ?A ~: bad; ?B ~: bad; ?Kab ~: Domain (m1_state.leak ?x);
         ?x : m1_inv3_ifresh |]
      ==> ?Ra = ?Ra'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 17, template_var 9),
            template_var 8),
          template_app
           (template_hole 16,
            template_app
             (template_app (template_hole 15, template_hole 14),
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 12, template_var 7),
                    template_app
                     (template_app (template_hole 12, template_var 6),
                      template_hole 11))),
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 5)),
                  template_var 4))))),
        template_equation
         (template_app
           (template_app (template_hole 17, template_var 9),
            template_var 3),
          template_app
           (template_hole 16,
            template_app
             (template_app (template_hole 15, template_hole 14),
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 12, template_var 2),
                    template_app
                     (template_app (template_hole 12, template_var 1),
                      template_hole 11))),
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 5)),
                  template_var 0))))),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 7),
                  template_hole 6)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 6),
                  template_hole 6)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 5),
                  template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 9)))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 9),
              template_hole 1)
            )],
       template_equation (template_var 8, template_var 3))),
    ("m1_nssk.m1_inv2r_servI",
     "(!!A B Rb Kab nlb.
          [| B ~: bad; runs ?x Rb = Some (Resp, [A, B], aKey Kab # nlb) |]
          ==> EX Rs Na.
                 Kab = sesK (Rs $ sk) &
                 runs ?x Rs = Some (Serv, [A, B], [aNon Na])) ==>
      ?x : m1_inv2r_serv",
     template_implication
      ([template_predicate (template_app (template_hole 29, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m1_nssk.m1_inv4_rfreshD",
     "[| runs ?x ?Rb = Some (Resp, [?A, ?B], [aKey ?Kab, END]);
         runs ?x ?Rb' = Some (Resp, [?A', ?B'], [aKey ?Kab, END]);
         ?B ~: bad; ?A ~: bad; ?Kab ~: Domain (m1_state.leak ?x);
         ?x : m1_inv4_rfresh |]
      ==> ?Rb = ?Rb'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 19, template_var 7),
            template_var 6),
          template_app
           (template_hole 18,
            template_app
             (template_app (template_hole 17, template_hole 16),
              template_app
               (template_app
                 (template_hole 15,
                  template_app
                   (template_app (template_hole 14, template_var 5),
                    template_app
                     (template_app (template_hole 14, template_var 4),
                      template_hole 13))),
                template_app
                 (template_app
                   (template_hole 12,
                    template_app (template_hole 11, template_var 3)),
                  template_app
                   (template_app (template_hole 12, template_hole 10),
                    template_hole 9)))))),
        template_equation
         (template_app
           (template_app (template_hole 19, template_var 7),
            template_var 2),
          template_app
           (template_hole 18,
            template_app
             (template_app (template_hole 17, template_hole 16),
              template_app
               (template_app
                 (template_hole 15,
                  template_app
                   (template_app (template_hole 14, template_var 1),
                    template_app
                     (template_app (template_hole 14, template_var 0),
                      template_hole 13))),
                template_app
                 (template_app
                   (template_hole 12,
                    template_app (template_hole 11, template_var 3)),
                  template_app
                   (template_app (template_hole 12, template_hole 10),
                    template_hole 9)))))),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 4),
                  template_hole 6)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 5),
                  template_hole 6)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 7)))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 7),
              template_hole 1)
            )],
       template_equation (template_var 6, template_var 2))),
    ("m1_nssk.m1_inv2r_servE",
     "[| ?x : m1_inv2r_serv;
         (!!A B Rb Kab nlb.
             [| B ~: bad;
                runs ?x Rb = Some (Resp, [A, B], aKey Kab # nlb) |]
             ==> EX Rs Na.
                    Kab = sesK (Rs $ sk) &
                    runs ?x Rs = Some (Serv, [A, B], [aNon Na])) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 28, template_var 1),
              template_hole 27)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 26, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m1_nssk.m1_inv3r_initD",
     "[| runs ?x ?Rb = Some (Resp, [?A, ?B], [aKey ?Kab, END]);
         ?x : m1_inv3r_init; ?B ~: bad; ?A ~: bad;
         ?Kab ~: Domain (m1_state.leak ?x) |]
      ==> EX Ra nla.
             runs ?x Ra =
             Some (Init, [?A, ?B], aKey ?Kab # aNon (?Rb $ nb) # nla)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 24, template_var 4),
            template_var 3),
          template_app
           (template_hole 23,
            template_app
             (template_app (template_hole 22, template_hole 21),
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_app (template_hole 19, template_var 2),
                    template_app
                     (template_app (template_hole 19, template_var 1),
                      template_hole 18))),
                template_app
                 (template_app
                   (template_hole 17,
                    template_app (template_hole 16, template_var 0)),
                  template_app
                   (template_app (template_hole 17, template_hole 15),
                    template_hole 14)))))),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 4),
              template_hole 12)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_hole 9)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_hole 9)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 0),
                  template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 4)))
                )
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("m1_nssk.m1_inv2i_servI",
     "(!!A B Ra Na Kab nla.
          [| A ~: bad; runs ?x Ra = Some (Init, [A, B], aKey Kab # nla);
             Na = Ra $ na |]
          ==> EX Rs.
                 Kab = sesK (Rs $ sk) &
                 runs ?x Rs = Some (Serv, [A, B], [aNon Na])) ==>
      ?x : m1_inv2i_serv",
     template_implication
      ([template_predicate (template_app (template_hole 31, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m1_nssk.m1_inv2i_servE",
     "[| ?x : m1_inv2i_serv;
         (!!A B Ra Na Kab nla.
             [| A ~: bad; runs ?x Ra = Some (Init, [A, B], aKey Kab # nla);
                Na = Ra $ na |]
             ==> EX Rs.
                    Kab = sesK (Rs $ sk) &
                    runs ?x Rs = Some (Serv, [A, B], [aNon Na])) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 30, template_var 1),
              template_hole 29)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 28, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m1_nssk.ir_runs2sigs_upd_init",
     "[| ?runz ?Ra = Some (Init, [?A, ?B], [aKey ?Kab]);
         finite (dom ?runz) |]
      ==> ir_runs2sigs
           (?runz(?Ra |-> (Init, [?A, ?B], [aKey ?Kab, aNon ?Nb]))) =
          (ir_runs2sigs ?runz)
          (Commit [?A, ?B] (?Kab, ?Nb) :=
             Suc (card (ri_running ?runz ?A ?B ?Kab ?Nb)))",
     template_implication
      ([template_equation
         (template_app (template_var 5, template_var 4),
          template_app
           (template_hole 20,
            template_app
             (template_app (template_hole 19, template_hole 18),
              template_app
               (template_app
                 (template_hole 17,
                  template_app
                   (template_app (template_hole 16, template_var 3),
                    template_app
                     (template_app (template_hole 16, template_var 2),
                      template_hole 15))),
                template_app
                 (template_app
                   (template_hole 14,
                    template_app (template_hole 13, template_var 1)),
                  template_hole 12))))),
        template_predicate
         (
            template_app
             (template_hole 11,
              template_app (template_hole 10, template_var 5))
            )],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 5),
               template_var 4),
             template_app
              (template_hole 20,
               template_app
                (template_app (template_hole 19, template_hole 18),
                 template_app
                  (template_app
                    (template_hole 17,
                     template_app
                      (template_app (template_hole 16, template_var 3),
                       template_app
                        (template_app (template_hole 16, template_var 2),
                         template_hole 15))),
                   template_app
                    (template_app
                      (template_hole 14,
                       template_app (template_hole 13, template_var 1)),
                     template_app
                      (template_app
                        (template_hole 14,
                         template_app (template_hole 6, template_var 0)),
                       template_hole 12))))))),
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 8, template_var 5)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 16, template_var 3),
                   template_app
                    (template_app (template_hole 16, template_var 2),
                     template_hole 15))),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0))),
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, t_empty))))))),
    ("m1_nssk.ri_runs2sigs_upd_init",
     "[| ?runz ?Ra = Some (Init, [?A, ?B], [aKey ?Kab]);
         finite (dom ?runz) |]
      ==> ri_runs2sigs
           (?runz(?Ra |-> (Init, [?A, ?B], [aKey ?Kab, aNon ?Nb]))) =
          (ri_runs2sigs ?runz)
          (Running [?B, ?A] (?Kab, ?Nb) :=
             Suc (card (ri_running ?runz ?A ?B ?Kab ?Nb)))",
     template_implication
      ([template_equation
         (template_app (template_var 5, template_var 4),
          template_app
           (template_hole 20,
            template_app
             (template_app (template_hole 19, template_hole 18),
              template_app
               (template_app
                 (template_hole 17,
                  template_app
                   (template_app (template_hole 16, template_var 3),
                    template_app
                     (template_app (template_hole 16, template_var 2),
                      template_hole 15))),
                template_app
                 (template_app
                   (template_hole 14,
                    template_app (template_hole 13, template_var 1)),
                  template_hole 12))))),
        template_predicate
         (
            template_app
             (template_hole 11,
              template_app (template_hole 10, template_var 5))
            )],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 5),
               template_var 4),
             template_app
              (template_hole 20,
               template_app
                (template_app (template_hole 19, template_hole 18),
                 template_app
                  (template_app
                    (template_hole 17,
                     template_app
                      (template_app (template_hole 16, template_var 3),
                       template_app
                        (template_app (template_hole 16, template_var 2),
                         template_hole 15))),
                   template_app
                    (template_app
                      (template_hole 14,
                       template_app (template_hole 13, template_var 1)),
                     template_app
                      (template_app
                        (template_hole 14,
                         template_app (template_hole 6, template_var 0)),
                       template_hole 12))))))),
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 8, template_var 5)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 16, template_var 2),
                   template_app
                    (template_app (template_hole 16, template_var 3),
                     template_hole 15))),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0))),
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, t_empty))))))),
    ("m1_nssk.m1_inv3r_initI",
     "(!!A B Rb Kab.
          [| B ~: bad; A ~: bad; Kab ~: Domain (m1_state.leak ?x);
             runs ?x Rb = Some (Resp, [A, B], [aKey Kab, END]) |]
          ==> EX Ra nla.
                 runs ?x Ra =
                 Some (Init, [A, B], aKey Kab # aNon (Rb $ nb) # nla)) ==>
      ?x : m1_inv3r_init",
     template_implication
      ([template_predicate (template_app (template_hole 29, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m1_nssk.m1_inv3_ifreshI",
     "(!!A A' B B' Ra Ra' Kab nl nl'.
          [| runs ?x Ra = Some (Init, [A, B], aKey Kab # nl);
             runs ?x Ra' = Some (Init, [A', B'], aKey Kab # nl'); A ~: bad;
             B ~: bad; Kab ~: Domain (m1_state.leak ?x) |]
          ==> Ra = Ra') ==>
      ?x : m1_inv3_ifresh",
     template_implication
      ([template_predicate (template_app (template_hole 23, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m1_nssk.m1_inv4_rfreshI",
     "(!!Rb Rb' A A' B B' Kab.
          [| runs ?x Rb = Some (Resp, [A, B], [aKey Kab, END]);
             runs ?x Rb' = Some (Resp, [A', B'], [aKey Kab, END]); B ~: bad;
             A ~: bad; Kab ~: Domain (m1_state.leak ?x) |]
          ==> Rb = Rb') ==>
      ?x : m1_inv4_rfresh",
     template_implication
      ([template_predicate (template_app (template_hole 24, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("m1_nssk.m1_inv3r_initE",
     "[| ?x : m1_inv3r_init;
         (!!A B Rb Kab.
             [| B ~: bad; A ~: bad; Kab ~: Domain (m1_state.leak ?x);
                runs ?x Rb = Some (Resp, [A, B], [aKey Kab, END]) |]
             ==> EX Ra nla.
                    runs ?x Ra =
                    Some
                     (Init, [A, B], aKey Kab # aNon (Rb $ nb) # nla)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 28, template_var 1),
              template_hole 27)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 26, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m1_nssk.m1_inv3_ifreshE",
     "[| ?x : m1_inv3_ifresh;
         (!!A A' B B' Ra Ra' Kab nl nl'.
             [| runs ?x Ra = Some (Init, [A, B], aKey Kab # nl);
                runs ?x Ra' = Some (Init, [A', B'], aKey Kab # nl');
                A ~: bad; B ~: bad; Kab ~: Domain (m1_state.leak ?x) |]
             ==> Ra = Ra') ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 1),
              template_hole 21)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 20, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("m1_nssk.m1_inv4_rfreshE",
     "[| ?x : m1_inv4_rfresh;
         (!!Rb Rb' A A' B B' Kab.
             [| runs ?x Rb = Some (Resp, [A, B], [aKey Kab, END]);
                runs ?x Rb' = Some (Resp, [A', B'], [aKey Kab, END]);
                B ~: bad; A ~: bad; Kab ~: Domain (m1_state.leak ?x) |]
             ==> Rb = Rb') ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 23, template_var 1),
              template_hole 22)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 21, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.m1_nsskMoreTemplates"
### 0.456s elapsed time, 0.633s cpu time, 0.066s GC time
val it = (): unit
