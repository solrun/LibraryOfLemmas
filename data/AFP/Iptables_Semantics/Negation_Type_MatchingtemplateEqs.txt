   [("Negation_Type_Matching.negation_type_to_match_expr_simps",
     "negation_type_to_match_expr (Pos ?e) = Match ?e",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Negation_Type_Matching.negation_type_to_match_expr_simps",
     "negation_type_to_match_expr (Neg ?e) = MatchNot (Match ?e)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Negation_Type_Matching.alist_and_negation_type_to_match_expr",
     "alist_and (?n # ?es) =
      MatchAnd (negation_type_to_match_expr ?n) (alist_and ?es)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Negation_Type_Matching.nt_match_list_matches",
     "nt_match_list ?\<gamma> ?a ?p ?l =
      matches ?\<gamma> (alist_and ?l) ?a ?p",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_app (template_hole 0, template_var 0)),
           template_var 2),
         template_var 1))),
    ("Negation_Type_Matching.alist_and'",
     "matches (?\<gamma>, ?\<alpha>) (alist_and' ?as) =
      matches (?\<gamma>, ?\<alpha>) (alist_and ?as)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Negation_Type_Matching.matches_alist_and_alist_and'",
     "matches ?\<gamma> (alist_and' ?ls) ?a ?p =
      matches ?\<gamma> (alist_and ?ls) ?a ?p",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0))),
    ("Negation_Type_Matching.alist_and_append",
     "matches ?\<gamma> (alist_and (?l1.0 @ ?l2.0)) ?a ?p =
      matches ?\<gamma> (MatchAnd (alist_and ?l1.0) (alist_and ?l2.0)) ?a
       ?p",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 2, template_var 3)),
               template_app (template_hole 2, template_var 2))),
           template_var 1),
         template_var 0))),
    ("Negation_Type_Matching.alist_and'_append",
     "matches ?\<gamma> (alist_and' (?l1.0 @ ?l2.0)) ?a ?p =
      matches ?\<gamma> (MatchAnd (alist_and' ?l1.0) (alist_and' ?l2.0)) ?a
       ?p",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 2, template_var 3)),
               template_app (template_hole 2, template_var 2))),
           template_var 1),
         template_var 0))),
    ("Negation_Type_Matching.alist_and_negation_type_to_match_expr_f_matches",
     "matches ?\<gamma> (alist_and (NegPos_map ?C ?spts)) ?a ?p =
      (ALL m:set ?spts.
          matches ?\<gamma> (negation_type_to_match_expr_f ?C m) ?a ?p)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 4),
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         t_empty))),
    ("Negation_Type_Matching.nt_match_list_simp",
     "nt_match_list ?\<gamma> ?a ?p ?ms =
      ((ALL m:set (getPos ?ms). matches ?\<gamma> (Match m) ?a ?p) &
       (ALL m:set (getNeg ?ms).
           matches ?\<gamma> (MatchNot (Match m)) ?a ?p))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 8, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 0))),
             t_empty)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app (template_hole 1, template_var 0))),
           t_empty)))),
    ("Negation_Type_Matching.matches_alist_and",
     "matches ?\<gamma> (alist_and ?l) ?a ?p =
      ((ALL m:set (getPos ?l). matches ?\<gamma> (Match m) ?a ?p) &
       (ALL m:set (getNeg ?l).
           matches ?\<gamma> (MatchNot (Match m)) ?a ?p))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 8, template_var 3),
             template_app (template_hole 7, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 2))),
             t_empty)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 1, template_var 2))),
           t_empty)))),
    ("Negation_Type_Matching.alist_and_NegPos_map_getNeg_getPos_matches",
     "((ALL m:set (getNeg ?spts).
           matches ?\<gamma> (MatchNot (Match (?C m))) ?a ?p) &
       (ALL m:set (getPos ?spts). matches ?\<gamma> (Match (?C m)) ?a ?p)) =
      matches ?\<gamma> (alist_and (NegPos_map ?C ?spts)) ?a ?p",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 4))),
             t_empty)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app (template_hole 2, template_var 4))),
           t_empty)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 3),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 4))),
           template_var 1),
         template_var 0)))]
