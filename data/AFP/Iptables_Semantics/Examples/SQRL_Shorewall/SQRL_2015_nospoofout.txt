Loading theory "HOL-Library.Function_Algebras" (required by "Draft.SQRL_2015_nospoofTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.SQRL_2015_nospoofTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.SQRL_2015_nospoofTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.SQRL_2015_nospoofTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.138s elapsed time, 0.567s cpu time, 0.045s GC time
Loading theory "Draft.SQRL_2015_nospoof" (required by "Draft.SQRL_2015_nospoofTemplates")
### theory "HOL-Library.Set_Algebras"
### 0.206s elapsed time, 0.838s cpu time, 0.045s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.SQRL_2015_nospoofTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
loading file /home/solrun/ResearchIdeas/templateAnalysis/afp-2022-06-07/thys/Iptables_Semantics/Examples/SQRL_Shorewall/2015_aug_iptables-save-spoofing-protection
Loaded 15 lines of the raw table
Parsed 3 chain declarations
Parsed 12 rules
unfolding (this may take a while) ...
### theory "HOL-Library.Nat_Bijection"
### 0.336s elapsed time, 1.336s cpu time, 0.122s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.SQRL_2015_nospoofTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.BigO"
### 0.736s elapsed time, 2.865s cpu time, 0.252s GC time
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.928s elapsed time, 3.369s cpu time, 0.648s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.906s elapsed time, 6.065s cpu time, 0.921s GC time
Loading theory "Draft.Templates" (required by "Draft.SQRL_2015_nospoofTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.055s elapsed time, 0.130s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.SQRL_2015_nospoofTemplates")
Simplified term (1.778 seconds)
checked sanity with sanity_wf_ruleset (0.179 seconds)
WARNING: the chain `PREROUTING' is not a built-in chain of the filter table
Defining constant `raw_fw1_def'
Defining constant `raw_fw1_PREROUTING_default_policy_def'
Defining constant `raw_fw1_OUTPUT_default_policy_def'
raw_fw1_PREROUTING_default_policy == action.Accept
loading file /home/solrun/ResearchIdeas/templateAnalysis/afp-2022-06-07/thys/Iptables_Semantics/Examples/SQRL_Shorewall/2015_aug_iptables-save-spoofing-protection
raw_fw1 ==
[(''OUTPUT'', []),
 (''PREROUTING'',
  [Rule (Match (IIface (Iface ''lup''))) (Call ''lupSpoofProtect''),
   Rule
    (MatchAnd (MatchNot (Match (Src (IpAddrNetmask 168635016 29))))
      (Match (IIface (Iface ''ldit''))))
    action.Drop,
   Rule
    (MatchAnd (MatchNot (Match (Src (IpAddrNetmask 168635008 29))))
      (Match (IIface (Iface ''lmd''))))
    action.Drop,
   Rule
    (MatchAnd (MatchNot (Match (Src (IpAddrNetmask 168635024 28))))
      (Match (IIface (Iface ''loben''))))
    action.Drop,
   Rule
    (MatchAnd (MatchNot (Match (Src (IpAddrNetmask 168635056 28))))
      (Match (IIface (Iface ''wg''))))
    action.Drop,
   Rule
    (MatchAnd (MatchNot (Match (Src (IpAddrNetmask 168635040 28))))
      (Match (IIface (Iface ''wt''))))
    action.Drop]),
 (''lupSpoofProtect'',
  [Rule (Match (Src (IpAddrNetmask 3232235520 16))) action.Drop,
   Rule (Match (Src (IpAddrNetmask 167772160 8))) action.Drop,
   Rule (Match (Src (IpAddrNetmask 2886729728 12))) action.Drop,
   Rule (Match (Dst (IpAddrNetmask 3232235520 16))) action.Drop,
   Rule (Match (Dst (IpAddrNetmask 167772160 8))) action.Drop,
   Rule (Match (Dst (IpAddrNetmask 2886729728 12))) action.Drop])]
Loaded 60 lines of the filter table
Parsed 7 chain declarations
Parsed 53 rules
unfolding (this may take a while) ...
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.546s elapsed time, 1.289s cpu time, 0.077s GC time
Simplified term (1.705 seconds)
checked sanity with sanity_wf_ruleset (0.280 seconds)
Defining constant `filter_fw1_def'
Defining constant `filter_fw1_INPUT_default_policy_def'
Defining constant `filter_fw1_FORWARD_default_policy_def'
Defining constant `filter_fw1_OUTPUT_default_policy_def'
### theory "Draft.SQRL_2015_nospoof"
### 4.366s elapsed time, 11.138s cpu time, 1.185s GC time
Loading theory "Draft.SQRL_2015_nospoofTemplates"
filter_fw1 ==
[(''BasicSvc'',
  [Rule
    (MatchAnd (Match (Prot (Proto 17)))
      (MatchAnd (Match (Src_Ports (L4Ports 17 [(67, 68)])))
        (Match (Dst_Ports (L4Ports 17 [(67, 68)])))))
    action.Accept,
   Rule
    (MatchAnd (Match (Prot (Proto 17)))
      (Match (Dst_Ports (L4Ports 17 [(53, 53)]))))
    action.Accept,
   Rule
    (MatchAnd (Match (Prot (Proto 6)))
      (Match (Dst_Ports (L4Ports 6 [(15678, 15678)]))))
    action.Accept]),
 (''FORWARD'',
  [Rule
    (MatchAnd (Match (IIface (Iface ''lup'')))
      (Match (CT_State {CT_Related, CT_Established})))
    action.Accept,
   Rule (Match (IIface (Iface ''lmd''))) (Call ''FromInternalF''),
   Rule (Match (IIface (Iface ''ldit''))) (Call ''FromInternalF''),
   Rule (Match (IIface (Iface ''loben''))) (Call ''FromInternalF''),
   Rule (Match (IIface (Iface ''wt''))) (Call ''FromInternalF''),
   Rule
    (MatchAnd (Match (IIface (Iface ''vshit'')))
      (Match (OIface (Iface ''lup''))))
    action.Accept,
   Rule
    (MatchAnd (Match (IIface (Iface ''wg'')))
      (Match (OIface (Iface ''lup''))))
    action.Accept,
   Rule
    (MatchAnd (Match (IIface (Iface ''lua'')))
      (Match (OIface (Iface ''lup''))))
    action.Accept,
   Rule
    (MatchAnd (Match (IIface (Iface ''vocb'')))
      (MatchAnd (Match (OIface (Iface ''lup'')))
        (MatchAnd (Match (Prot (Proto 17)))
          (MatchAnd (Match (Dst_Ports (L4Ports 17 [(53, 53)])))
            (Match (Extra ''-m comment --comment DNS''))))))
    action.Accept,
   Rule
    (MatchAnd (Match (IIface (Iface ''vocb'')))
      (MatchAnd (Match (OIface (Iface ''lup'')))
        (MatchAnd (Match (Prot (Proto 6)))
          (MatchAnd (Match (Dst_Ports (L4Ports 6 [(53, 53)])))
            (Match (Extra ''-m comment --comment DNS''))))))
    action.Accept,
   Rule
    (MatchAnd (Match (Dst (IpAddrNetmask 2208288718 32)))
      (MatchAnd (Match (IIface (Iface ''vocb'')))
        (MatchAnd (Match (OIface (Iface ''lup'')))
          (MatchAnd (Match (Prot (Proto 17)))
            (Match (Dst_Ports (L4Ports 17 [(1194, 1194)])))))))
    action.Accept,
   Rule
    (MatchAnd (Match (Dst (IpAddrNetmask 2208288718 32)))
      (MatchAnd (Match (IIface (Iface ''vocb'')))
        (MatchAnd (Match (OIface (Iface ''lup'')))
          (MatchAnd (Match (Prot (Proto 6)))
            (Match (Dst_Ports (L4Ports 6 [(80, 80)])))))))
    action.Accept,
   Rule
    (MatchAnd (Match (Dst (IpAddrNetmask 2370568708 32)))
      (MatchAnd (Match (IIface (Iface ''vocb'')))
        (MatchAnd (Match (OIface (Iface ''lup'')))
          (Match (Prot (Proto 6))))))
    action.Accept]),
 (''FromInternalF'',
  [Rule (Match (OIface (Iface ''lmd''))) action.Accept,
   Rule (Match (OIface (Iface ''ldit''))) action.Accept,
   Rule (Match (OIface (Iface ''loben''))) action.Accept,
   Rule (Match (OIface (Iface ''wt''))) action.Accept,
   Rule (Match (OIface (Iface ''lup''))) action.Accept]),
 (''INPUT'',
  [Rule (Match (IIface (Iface ''lo''))) action.Accept,
   Rule (Match (Prot (Proto 1))) action.Accept,
   Rule (Match (IIface (Iface ''lmd''))) action.Accept,
   Rule (Match (IIface (Iface ''ldit''))) action.Accept,
   Rule (Match (IIface (Iface ''loben''))) action.Accept,
   Rule (Match (IIface (Iface ''wt''))) action.Accept,
   Rule (Match (IIface (Iface ''vpriv''))) action.Accept,
   Rule (Match (CT_State {CT_Related, CT_Established})) action.Accept,
   Rule
    (MatchAnd (Match (Prot (Proto 6)))
      (Match (Dst_Ports (L4Ports 6 [(22, 22)]))))
    (Call ''SSHLimit''),
   Rule
    (MatchAnd (Match (Prot (Proto 17)))
      (MatchAnd (Match (Src_Ports (L4Ports 17 [(53, 53)])))
        (Match (CT_State {CT_Related, CT_Established}))))
    action.Accept,
   Rule
    (MatchAnd (Match (Prot (Proto 17)))
      (MatchAnd (Match (Src_Ports (L4Ports 17 [(4242, 4242)])))
        (Match (CT_State {CT_Related, CT_Established}))))
    action.Accept,
   Rule (Match (IIface (Iface ''vshit''))) (Call ''BasicSvc''),
   Rule (Match (IIface (Iface ''wg''))) (Call ''BasicSvc''),
   Rule (Match (IIface (Iface ''lua''))) (Call ''BasicSvc''),
   Rule
    (MatchAnd (Match (IIface (Iface ''vocb'')))
      (MatchAnd (Match (Prot (Proto 17)))
        (MatchAnd (Match (Src_Ports (L4Ports 17 [(67, 68)])))
          (Match (Dst_Ports (L4Ports 17 [(67, 68)]))))))
    action.Accept,
   Rule (Match (IIface (Iface ''lup''))) Log,
   Rule
    (MatchAnd (Match (IIface (Iface ''lup'')))
      (MatchAnd (Match (Prot (Proto 17)))
        (MatchAnd (Match (Src_Ports (L4Ports 17 [(67, 68)])))
          (Match (Dst_Ports (L4Ports 17 [(67, 68)]))))))
    action.Accept,
   Rule (Match (IIface (Iface ''lmd''))) (Call ''PError''),
   Rule (Match (IIface (Iface ''ldit''))) (Call ''PError''),
   Rule (Match (IIface (Iface ''loben''))) (Call ''PError''),
   Rule (Match (IIface (Iface ''wt''))) (Call ''PError''),
   Rule (Match (IIface (Iface ''vshit''))) (Call ''PError''),
   Rule (Match (IIface (Iface ''wg''))) (Call ''PError''),
   Rule (Match (IIface (Iface ''lua''))) (Call ''PError''),
   Rule (Match (IIface (Iface ''vocb''))) (Call ''PError'')]),
 (''OUTPUT'', []),
 (''PError'',
  [Rule (Match (Prot (Proto 6))) Reject,
   Rule (Match (Prot (Proto 17))) Reject, Rule MatchAny Reject]),
 (''SSHLimit'',
  [Rule (Match (CT_State {CT_Related, CT_Established})) action.Accept,
   Rule
    (Match
      (Extra
        ''-m recent --set --name SSHA --mask 255.255.255.255 --rsource''))
    Empty,
   Rule
    (Match
      (Extra
        ''-m recent --update --seconds 60 --hitcount 2 --name SSHA --mask 255.255.255.255 --rsource''))
    Log,
   Rule MatchAny action.Accept])]
"[''distinct: passed'', ''ipassmt_sanity_nowildcards: passed'',
  ''ipassmt_sanity_defined (interfaces defined in the ruleset are also in ipassmt): passed'',
  ''ipassmt_sanity_disjoint (no zone-spanning interfaces): fail: [(ldit,lo), (ldit,vpriv), (ldit,vshit), (ldit,vocb), (ldit,lua), (lmd,lo), (lmd,vpriv), (lmd,vshit), (lmd,vocb), (lmd,lua), (loben,lo), (loben,vpriv), (loben,vshit), (loben,vocb), (loben,lua), (wg,lo), (wg,vpriv), (wg,vshit), (wg,vocb), (wg,lua), (wt,lo), (wt,vpriv), (wt,vshit), (wt,vocb), (wt,lua), (lup,lo), (lup,vpriv), (lup,vshit), (lup,vocb), (lup,lua), (lo,ldit), (lo,lmd), (lo,loben), (lo,wg), (lo,wt), (lo,lup), (lo,vpriv), (lo,vshit), (lo,vocb), (lo,lua), (vpriv,ldit), (vpriv,lmd), (vpriv,loben), (vpriv,wg), (vpriv,wt), (vpriv,lup), (vpriv,lo), (vpriv,vshit), (vpriv,vocb), (vpriv,lua), (vshit,ldit), (vshit,lmd), (vshit,loben), (vshit,wg), (vshit,wt), (vshit,lup), (vshit,lo), (vshit,vpriv), (vshit,vocb), (vshit,lua), (vocb,ldit), (vocb,lmd), (vocb,loben), (vocb,wg), (vocb,wt), (vocb,lup), (vocb,lo), (vocb,vpriv), (vocb,vshit), (vocb,lua), (lua,ldit), (lua,lmd), (lua,loben), (lua,wg), (lua,wt), (lua,lup), (lua,lo), (lua,vpriv), (lua,vshit), (lua,vocb)]'',
  ''ipassmt_sanity_disjoint excluding UNIV interfaces: passed'',
  ''ipassmt_sanity_complete: passed'',
  ''ipassmt_sanity_complete excluding UNIV interfaces: the following is not covered: {10.0.0.0 .. 10.13.42.127} u {10.13.42.192 .. 10.255.255.255} u {172.16.0.0 .. 172.31.255.255} u {192.168.0.0 .. 192.168.255.255}'']"
  :: "char list list"
"[(''OUTPUT'', []),
  (''PREROUTING'',
   [''-i lup -j lupSpoofProtect (call)'',
    ''! -s 10.13.42.136/29 -i ldit -j DROP'',
    ''! -s 10.13.42.128/29 -i lmd -j DROP'',
    ''! -s 10.13.42.144/28 -i loben -j DROP'',
    ''! -s 10.13.42.176/28 -i wg -j DROP'',
    ''! -s 10.13.42.160/28 -i wt -j DROP'']),
  (''lupSpoofProtect'',
   [''-s 192.168.0.0/16 -j DROP'', ''-s 10.0.0.0/8 -j DROP'',
    ''-s 172.16.0.0/12 -j DROP'', ''-d 192.168.0.0/16 -j DROP'',
    ''-d 10.0.0.0/8 -j DROP'', ''-d 172.16.0.0/12 -j DROP''])]"
  :: "(char list * char list list) list"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.SQRL_2015_nospoofTemplates"
### 2.518s elapsed time, 9.592s cpu time, 2.132s GC time
"[Iface ''ldit'', Iface ''lmd'', Iface ''lo'', Iface ''loben'',
  Iface ''lua'', Iface ''lup'', Iface ''vocb'', Iface ''vpriv'',
  Iface ''vshit'', Iface ''wg'', Iface ''wt'']"
  :: "iface list"
"[''DROP     all  --  192.168.0.0/16            0.0.0.0/0 in: lup   '',
  ''DROP     all  --  10.0.0.0/8            0.0.0.0/0 in: lup   '',
  ''DROP     all  --  172.16.0.0/12            0.0.0.0/0 in: lup   '',
  ''DROP     all  --  0.0.0.0/0            192.168.0.0/16 in: lup   '',
  ''DROP     all  --  0.0.0.0/0            10.0.0.0/8 in: lup   '',
  ''DROP     all  --  0.0.0.0/0            172.16.0.0/12 in: lup   '',
  ''DROP     all  --  0.0.0.0/5            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  8.0.0.0/7            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  10.0.0.0/13            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  10.8.0.0/14            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  10.12.0.0/16            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  10.13.0.0/19            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  10.13.32.0/21            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  10.13.40.0/23            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  10.13.42.0/25            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  10.13.42.128/29            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  10.13.42.144/28            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  10.13.42.160/27            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  10.13.42.192/26            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  10.13.43.0/24            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  10.13.44.0/22            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  10.13.48.0/20            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  10.13.64.0/18            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  10.13.128.0/17            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  10.14.0.0/15            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  10.16.0.0/12            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  10.32.0.0/11            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  10.64.0.0/10            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  10.128.0.0/9            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  11.0.0.0/8            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  12.0.0.0/6            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  16.0.0.0/4            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  32.0.0.0/3            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  64.0.0.0/2            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  128.0.0.0/1            0.0.0.0/0 in: ldit   '',
  ''DROP     all  --  0.0.0.0/5            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  8.0.0.0/7            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  10.0.0.0/13            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  10.8.0.0/14            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  10.12.0.0/16            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  10.13.0.0/19            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  10.13.32.0/21            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  10.13.40.0/23            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  10.13.42.0/25            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  10.13.42.136/29            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  10.13.42.144/28            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  10.13.42.160/27            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  10.13.42.192/26            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  10.13.43.0/24            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  10.13.44.0/22            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  10.13.48.0/20            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  10.13.64.0/18            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  10.13.128.0/17            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  10.14.0.0/15            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  10.16.0.0/12            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  10.32.0.0/11            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  10.64.0.0/10            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  10.128.0.0/9            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  11.0.0.0/8            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  12.0.0.0/6            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  16.0.0.0/4            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  32.0.0.0/3            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  64.0.0.0/2            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  128.0.0.0/1            0.0.0.0/0 in: lmd   '',
  ''DROP     all  --  0.0.0.0/5            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  8.0.0.0/7            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  10.0.0.0/13            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  10.8.0.0/14            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  10.12.0.0/16            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  10.13.0.0/19            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  10.13.32.0/21            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  10.13.40.0/23            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  10.13.42.0/25            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  10.13.42.128/28            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  10.13.42.160/27            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  10.13.42.192/26            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  10.13.43.0/24            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  10.13.44.0/22            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  10.13.48.0/20            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  10.13.64.0/18            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  10.13.128.0/17            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  10.14.0.0/15            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  10.16.0.0/12            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  10.32.0.0/11            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  10.64.0.0/10            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  10.128.0.0/9            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  11.0.0.0/8            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  12.0.0.0/6            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  16.0.0.0/4            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  32.0.0.0/3            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  64.0.0.0/2            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  128.0.0.0/1            0.0.0.0/0 in: loben   '',
  ''DROP     all  --  0.0.0.0/5            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  8.0.0.0/7            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  10.0.0.0/13            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  10.8.0.0/14            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  10.12.0.0/16            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  10.13.0.0/19            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  10.13.32.0/21            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  10.13.40.0/23            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  10.13.42.0/25            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  10.13.42.128/27            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  10.13.42.160/28            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  10.13.42.192/26            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  10.13.43.0/24            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  10.13.44.0/22            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  10.13.48.0/20            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  10.13.64.0/18            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  10.13.128.0/17            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  10.14.0.0/15            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  10.16.0.0/12            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  10.32.0.0/11            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  10.64.0.0/10            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  10.128.0.0/9            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  11.0.0.0/8            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  12.0.0.0/6            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  16.0.0.0/4            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  32.0.0.0/3            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  64.0.0.0/2            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  128.0.0.0/1            0.0.0.0/0 in: wg   '',
  ''DROP     all  --  0.0.0.0/5            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  8.0.0.0/7            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  10.0.0.0/13            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  10.8.0.0/14            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  10.12.0.0/16            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  10.13.0.0/19            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  10.13.32.0/21            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  10.13.40.0/23            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  10.13.42.0/25            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  10.13.42.128/27            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  10.13.42.176/28            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  10.13.42.192/26            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  10.13.43.0/24            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  10.13.44.0/22            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  10.13.48.0/20            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  10.13.64.0/18            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  10.13.128.0/17            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  10.14.0.0/15            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  10.16.0.0/12            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  10.32.0.0/11            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  10.64.0.0/10            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  10.128.0.0/9            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  11.0.0.0/8            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  12.0.0.0/6            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  16.0.0.0/4            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  32.0.0.0/3            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  64.0.0.0/2            0.0.0.0/0 in: wt   '',
  ''DROP     all  --  128.0.0.0/1            0.0.0.0/0 in: wt   '',
  ''ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0    '']"
  :: "char list list"
val it = (): unit
