Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Analyze_Ringofsaturn_comTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Analyze_Ringofsaturn_comTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Analyze_Ringofsaturn_comTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.Analyze_Ringofsaturn_comTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.141s elapsed time, 0.572s cpu time, 0.042s GC time
Loading theory "Draft.Analyze_Ringofsaturn_com" (required by "Draft.Analyze_Ringofsaturn_comTemplates")
loading file /home/solrun/ResearchIdeas/templateAnalysis/afp-2022-06-07/thys/Iptables_Semantics/Examples/Ringofsaturn_com/iptables-save
Loaded 46 lines of the filter table
Parsed 5 chain declarations
Parsed 41 rules
unfolding (this may take a while) ...
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.227s elapsed time, 0.917s cpu time, 0.042s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Analyze_Ringofsaturn_comTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.332s elapsed time, 1.316s cpu time, 0.117s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Analyze_Ringofsaturn_comTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
### theory "HOL-Library.BigO"
### 0.783s elapsed time, 3.058s cpu time, 0.264s GC time
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.057s elapsed time, 3.819s cpu time, 0.689s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.010s elapsed time, 6.462s cpu time, 0.965s GC time
Loading theory "Draft.Templates" (required by "Draft.Analyze_Ringofsaturn_comTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.054s elapsed time, 0.127s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Analyze_Ringofsaturn_comTemplates")
Simplified term (2.221 seconds)
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.533s elapsed time, 1.090s cpu time, 0.059s GC time
checked sanity with sanity_wf_ruleset (0.266 seconds)
Defining constant `saturn_fw_def'
Defining constant `saturn_fw_INPUT_default_policy_def'
Defining constant `saturn_fw_FORWARD_default_policy_def'
Defining constant `saturn_fw_OUTPUT_default_policy_def'
saturn_fw ==
[(''DUMP'',
  [Rule (Match (Prot (Proto 6))) Log, Rule (Match (Prot (Proto 17))) Log,
   Rule (Match (Prot (Proto 6))) Reject,
   Rule (Match (Prot (Proto 17))) Reject, Rule MatchAny action.Drop]),
 (''FORWARD'', []),
 (''INPUT'',
  [Rule MatchAny (Call ''STATEFUL''),
   Rule (Match (IIface (Iface ''lo''))) action.Accept,
   Rule
    (MatchAnd (Match (Src (IpAddrNetmask 0 8)))
      (Match (IIface (Iface ''eth0''))))
    (Call ''DUMP''),
   Rule
    (MatchAnd (Match (Src (IpAddrNetmask 167772160 8)))
      (Match (IIface (Iface ''eth0''))))
    (Call ''DUMP''),
   Rule
    (MatchAnd (Match (Src (IpAddrNetmask 2130706432 8)))
      (Match (IIface (Iface ''eth0''))))
    (Call ''DUMP''),
   Rule
    (MatchAnd (Match (Src (IpAddrNetmask 2851995648 16)))
      (Match (IIface (Iface ''eth0''))))
    (Call ''DUMP''),
   Rule
    (MatchAnd (Match (Src (IpAddrNetmask 2886729728 12)))
      (Match (IIface (Iface ''eth0''))))
    (Call ''DUMP''),
   Rule
    (MatchAnd (Match (Src (IpAddrNetmask 3758096384 3)))
      (Match (IIface (Iface ''eth0''))))
    (Call ''DUMP''),
   Rule
    (MatchAnd (Match (Src (IpAddrNetmask 4026531840 8)))
      (Match (IIface (Iface ''eth0''))))
    (Call ''DUMP''),
   Rule
    (MatchAnd (Match (Src (IpAddrNetmask 2689990656 16)))
      (Match (IIface (Iface ''eth1''))))
    action.Accept,
   Rule (Match (IIface (Iface ''eth1''))) action.Drop,
   Rule
    (MatchAnd (Match (IIface (Iface ''eth0'')))
      (MatchAnd (Match (Prot (Proto 1)))
        (Match (Extra ''-m icmp --icmp-type 3''))))
    action.Accept,
   Rule
    (MatchAnd (Match (IIface (Iface ''eth0'')))
      (MatchAnd (Match (Prot (Proto 1)))
        (Match (Extra ''-m icmp --icmp-type 11''))))
    action.Accept,
   Rule
    (MatchAnd (Match (IIface (Iface ''eth0'')))
      (MatchAnd (Match (Prot (Proto 1)))
        (Match (Extra ''-m icmp --icmp-type 0''))))
    action.Accept,
   Rule
    (MatchAnd (Match (IIface (Iface ''eth0'')))
      (MatchAnd (Match (Prot (Proto 1)))
        (Match (Extra ''-m icmp --icmp-type 8''))))
    action.Accept,
   Rule
    (MatchAnd (Match (Prot (Proto 6)))
      (Match (Dst_Ports (L4Ports 6 [(111, 111)]))))
    action.Drop,
   Rule
    (MatchAnd (Match (IIface (Iface ''eth0'')))
      (MatchAnd (Match (Prot (Proto 6)))
        (Match (Dst_Ports (L4Ports 6 [(113, 113)])))))
    Reject,
   Rule
    (MatchAnd (Match (IIface (Iface ''eth0'')))
      (MatchAnd (Match (Prot (Proto 6)))
        (Match (Dst_Ports (L4Ports 6 [(4, 4)])))))
    action.Accept,
   Rule
    (MatchAnd (Match (IIface (Iface ''eth0'')))
      (MatchAnd (Match (Prot (Proto 6)))
        (Match (Dst_Ports (L4Ports 6 [(20, 20)])))))
    action.Accept,
   Rule
    (MatchAnd (Match (IIface (Iface ''eth0'')))
      (MatchAnd (Match (Prot (Proto 6)))
        (Match (Dst_Ports (L4Ports 6 [(21, 21)])))))
    action.Accept,
   Rule
    (MatchAnd (Match (IIface (Iface ''eth0'')))
      (MatchAnd (Match (Prot (Proto 17)))
        (Match (Dst_Ports (L4Ports 17 [(20, 20)])))))
    action.Accept,
   Rule
    (MatchAnd (Match (IIface (Iface ''eth0'')))
      (MatchAnd (Match (Prot (Proto 17)))
        (Match (Dst_Ports (L4Ports 17 [(21, 21)])))))
    action.Accept,
   Rule
    (MatchAnd (Match (IIface (Iface ''eth0'')))
      (MatchAnd (Match (Prot (Proto 6)))
        (Match (Dst_Ports (L4Ports 6 [(22, 22)])))))
    action.Accept,
   Rule
    (MatchAnd (Match (IIface (Iface ''eth0'')))
      (MatchAnd (Match (Prot (Proto 17)))
        (Match (Dst_Ports (L4Ports 17 [(22, 22)])))))
    action.Accept,
   Rule
    (MatchAnd (Match (IIface (Iface ''eth0'')))
      (MatchAnd (Match (Prot (Proto 6)))
        (Match (Dst_Ports (L4Ports 6 [(80, 80)])))))
    action.Accept,
   Rule
    (MatchAnd (Match (IIface (Iface ''eth0'')))
      (MatchAnd (Match (Prot (Proto 17)))
        (Match (Dst_Ports (L4Ports 17 [(80, 80)])))))
    action.Accept,
   Rule
    (MatchAnd (Match (IIface (Iface ''eth0'')))
      (MatchAnd (Match (Prot (Proto 6)))
        (Match (Dst_Ports (L4Ports 6 [(443, 443)])))))
    action.Accept,
   Rule
    (MatchAnd (Match (IIface (Iface ''eth0'')))
      (MatchAnd (Match (Prot (Proto 17)))
        (Match (Dst_Ports (L4Ports 17 [(443, 443)])))))
    action.Accept,
   Rule
    (MatchAnd (Match (IIface (Iface ''eth0'')))
      (MatchAnd (Match (Prot (Proto 17)))
        (Match (Dst_Ports (L4Ports 17 [(520, 520)])))))
    Reject,
   Rule
    (MatchAnd (Match (IIface (Iface ''eth0'')))
      (MatchAnd (Match (Prot (Proto 6)))
        (Match (Dst_Ports (L4Ports 6 [(137, 139)])))))
    Reject,
   Rule
    (MatchAnd (Match (IIface (Iface ''eth0'')))
      (MatchAnd (Match (Prot (Proto 17)))
        (Match (Dst_Ports (L4Ports 17 [(137, 139)])))))
    Reject,
   Rule MatchAny (Call ''DUMP'')]),
 (''OUTPUT'', [Rule (Match (OIface (Iface ''lo''))) action.Accept]),
 (''STATEFUL'',
  [Rule (Match (CT_State {CT_Related, CT_Established})) action.Accept,
   Rule (Match (CT_State {CT_New})) action.Accept,
   Rule MatchAny (Call ''DUMP'')])]
### theory "Draft.Analyze_Ringofsaturn_com"
### 3.042s elapsed time, 8.451s cpu time, 1.017s GC time
Loading theory "Draft.Analyze_Ringofsaturn_comTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.Analyze_Ringofsaturn_comTemplates"
### 2.377s elapsed time, 9.204s cpu time, 1.548s GC time
"[Rule (Match (CT_State {CT_Related, CT_Established})) action.Accept,
  Rule (Match (CT_State {CT_New})) action.Accept,
  Rule (Match (Prot (Proto 6))) action.Drop,
  Rule (Match (Prot (Proto 17))) action.Drop, Rule MatchAny action.Drop,
  Rule (Match (IIface (Iface ''lo''))) action.Accept,
  Rule
   ((Match (Src (IpAddrNetmask 0 8)) MATCHAND
     Match (IIface (Iface ''eth0''))) MATCHAND
    Match (Prot (Proto 6)))
   action.Drop,
  Rule
   ((Match (Src (IpAddrNetmask 0 8)) MATCHAND
     Match (IIface (Iface ''eth0''))) MATCHAND
    Match (Prot (Proto 17)))
   action.Drop,
  Rule
   (Match (Src (IpAddrNetmask 0 8)) MATCHAND
    Match (IIface (Iface ''eth0'')))
   action.Drop,
  Rule
   ((Match (Src (IpAddrNetmask 167772160 8)) MATCHAND
     Match (IIface (Iface ''eth0''))) MATCHAND
    Match (Prot (Proto 6)))
   action.Drop,
  Rule
   ((Match (Src (IpAddrNetmask 167772160 8)) MATCHAND
     Match (IIface (Iface ''eth0''))) MATCHAND
    Match (Prot (Proto 17)))
   action.Drop,
  Rule
   (Match (Src (IpAddrNetmask 167772160 8)) MATCHAND
    Match (IIface (Iface ''eth0'')))
   action.Drop,
  Rule
   ((Match (Src (IpAddrNetmask 2130706432 8)) MATCHAND
     Match (IIface (Iface ''eth0''))) MATCHAND
    Match (Prot (Proto 6)))
   action.Drop,
  Rule
   ((Match (Src (IpAddrNetmask 2130706432 8)) MATCHAND
     Match (IIface (Iface ''eth0''))) MATCHAND
    Match (Prot (Proto 17)))
   action.Drop,
  Rule
   (Match (Src (IpAddrNetmask 2130706432 8)) MATCHAND
    Match (IIface (Iface ''eth0'')))
   action.Drop,
  Rule
   ((Match (Src (IpAddrNetmask 2851995648 16)) MATCHAND
     Match (IIface (Iface ''eth0''))) MATCHAND
    Match (Prot (Proto 6)))
   action.Drop,
  Rule
   ((Match (Src (IpAddrNetmask 2851995648 16)) MATCHAND
     Match (IIface (Iface ''eth0''))) MATCHAND
    Match (Prot (Proto 17)))
   action.Drop,
  Rule
   (Match (Src (IpAddrNetmask 2851995648 16)) MATCHAND
    Match (IIface (Iface ''eth0'')))
   action.Drop,
  Rule
   ((Match (Src (IpAddrNetmask 2886729728 12)) MATCHAND
     Match (IIface (Iface ''eth0''))) MATCHAND
    Match (Prot (Proto 6)))
   action.Drop,
  Rule
   ((Match (Src (IpAddrNetmask 2886729728 12)) MATCHAND
     Match (IIface (Iface ''eth0''))) MATCHAND
    Match (Prot (Proto 17)))
   action.Drop,
  Rule
   (Match (Src (IpAddrNetmask 2886729728 12)) MATCHAND
    Match (IIface (Iface ''eth0'')))
   action.Drop,
  Rule
   ((Match (Src (IpAddrNetmask 3758096384 3)) MATCHAND
     Match (IIface (Iface ''eth0''))) MATCHAND
    Match (Prot (Proto 6)))
   action.Drop,
  Rule
   ((Match (Src (IpAddrNetmask 3758096384 3)) MATCHAND
     Match (IIface (Iface ''eth0''))) MATCHAND
    Match (Prot (Proto 17)))
   action.Drop,
  Rule
   (Match (Src (IpAddrNetmask 3758096384 3)) MATCHAND
    Match (IIface (Iface ''eth0'')))
   action.Drop,
  Rule
   ((Match (Src (IpAddrNetmask 4026531840 8)) MATCHAND
     Match (IIface (Iface ''eth0''))) MATCHAND
    Match (Prot (Proto 6)))
   action.Drop,
  Rule
   ((Match (Src (IpAddrNetmask 4026531840 8)) MATCHAND
     Match (IIface (Iface ''eth0''))) MATCHAND
    Match (Prot (Proto 17)))
   action.Drop,
  Rule
   (Match (Src (IpAddrNetmask 4026531840 8)) MATCHAND
    Match (IIface (Iface ''eth0'')))
   action.Drop,
  Rule
   (Match (Src (IpAddrNetmask 2689990656 16)) MATCHAND
    Match (IIface (Iface ''eth1'')))
   action.Accept,
  Rule (Match (IIface (Iface ''eth1''))) action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 1)) MATCHAND Match (Extra ''-m icmp --icmp-type 3''))
   action.Accept,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 1)) MATCHAND
    Match (Extra ''-m icmp --icmp-type 11''))
   action.Accept,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 1)) MATCHAND Match (Extra ''-m icmp --icmp-type 0''))
   action.Accept,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 1)) MATCHAND Match (Extra ''-m icmp --icmp-type 8''))
   action.Accept,
  Rule
   (Match (Prot (Proto 6)) MATCHAND
    Match (Dst_Ports (L4Ports 6 [(111, 111)])))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 6)) MATCHAND
    Match (Dst_Ports (L4Ports 6 [(113, 113)])))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 6)) MATCHAND Match (Dst_Ports (L4Ports 6 [(4, 4)])))
   action.Accept,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 6)) MATCHAND
    Match (Dst_Ports (L4Ports 6 [(20, 20)])))
   action.Accept,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 6)) MATCHAND
    Match (Dst_Ports (L4Ports 6 [(21, 21)])))
   action.Accept,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 17)) MATCHAND
    Match (Dst_Ports (L4Ports 17 [(20, 20)])))
   action.Accept,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 17)) MATCHAND
    Match (Dst_Ports (L4Ports 17 [(21, 21)])))
   action.Accept,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 6)) MATCHAND
    Match (Dst_Ports (L4Ports 6 [(22, 22)])))
   action.Accept,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 17)) MATCHAND
    Match (Dst_Ports (L4Ports 17 [(22, 22)])))
   action.Accept,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 6)) MATCHAND
    Match (Dst_Ports (L4Ports 6 [(80, 80)])))
   action.Accept,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 17)) MATCHAND
    Match (Dst_Ports (L4Ports 17 [(80, 80)])))
   action.Accept,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 6)) MATCHAND
    Match (Dst_Ports (L4Ports 6 [(443, 443)])))
   action.Accept,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 17)) MATCHAND
    Match (Dst_Ports (L4Ports 17 [(443, 443)])))
   action.Accept,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 17)) MATCHAND
    Match (Dst_Ports (L4Ports 17 [(520, 520)])))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 6)) MATCHAND
    Match (Dst_Ports (L4Ports 6 [(137, 139)])))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 17)) MATCHAND
    Match (Dst_Ports (L4Ports 17 [(137, 139)])))
   action.Drop,
  Rule (Match (Prot (Proto 6))) action.Drop,
  Rule (Match (Prot (Proto 17))) action.Drop, Rule MatchAny action.Drop,
  Rule MatchAny action.Accept]"
  :: "32 common_primitive rule list"
"[Rule (Match (CT_State {CT_Related, CT_Established})) action.Accept,
  Rule (Match (CT_State {CT_New})) action.Accept,
  Rule (Match (Prot (Proto 6))) action.Drop,
  Rule (Match (Prot (Proto 17))) action.Drop, Rule MatchAny action.Drop]"
  :: "32 common_primitive rule list"
"[(0, Rule (Match (IIface (Iface ''lo''))) action.Accept),
  (1, Rule
       (Match (IIface (Iface ''eth0'')) MATCHAND
        Match (Prot (Proto 6)) MATCHAND Match (Src (IpAddrNetmask 0 8)))
       action.Drop),
  (2, Rule
       (Match (IIface (Iface ''eth0'')) MATCHAND
        Match (Prot (Proto 17)) MATCHAND Match (Src (IpAddrNetmask 0 8)))
       action.Drop),
  (3, Rule
       (Match (IIface (Iface ''eth0'')) MATCHAND
        Match (Src (IpAddrNetmask 0 8)))
       action.Drop),
  (4, Rule
       (Match (IIface (Iface ''eth0'')) MATCHAND
        Match (Prot (Proto 6)) MATCHAND
        Match (Src (IpAddrNetmask 167772160 8)))
       action.Drop),
  (5, Rule
       (Match (IIface (Iface ''eth0'')) MATCHAND
        Match (Prot (Proto 17)) MATCHAND
        Match (Src (IpAddrNetmask 167772160 8)))
       action.Drop),
  (6, Rule
       (Match (IIface (Iface ''eth0'')) MATCHAND
        Match (Src (IpAddrNetmask 167772160 8)))
       action.Drop),
  (7, Rule
       (Match (IIface (Iface ''eth0'')) MATCHAND
        Match (Prot (Proto 6)) MATCHAND
        Match (Src (IpAddrNetmask 2130706432 8)))
       action.Drop),
  (8, Rule
       (Match (IIface (Iface ''eth0'')) MATCHAND
        Match (Prot (Proto 17)) MATCHAND
        Match (Src (IpAddrNetmask 2130706432 8)))
       action.Drop),
  (9, Rule
       (Match (IIface (Iface ''eth0'')) MATCHAND
        Match (Src (IpAddrNetmask 2130706432 8)))
       action.Drop),
  (10,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Prot (Proto 6)) MATCHAND
     Match (Src (IpAddrNetmask 2851995648 16)))
    action.Drop),
  (11,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Prot (Proto 17)) MATCHAND
     Match (Src (IpAddrNetmask 2851995648 16)))
    action.Drop),
  (12,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Src (IpAddrNetmask 2851995648 16)))
    action.Drop),
  (13,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Prot (Proto 6)) MATCHAND
     Match (Src (IpAddrNetmask 2886729728 12)))
    action.Drop),
  (14,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Prot (Proto 17)) MATCHAND
     Match (Src (IpAddrNetmask 2886729728 12)))
    action.Drop),
  (15,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Src (IpAddrNetmask 2886729728 12)))
    action.Drop),
  (16,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Prot (Proto 6)) MATCHAND
     Match (Src (IpAddrNetmask 3758096384 3)))
    action.Drop),
  (17,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Prot (Proto 17)) MATCHAND
     Match (Src (IpAddrNetmask 3758096384 3)))
    action.Drop),
  (18,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Src (IpAddrNetmask 3758096384 3)))
    action.Drop),
  (19,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Prot (Proto 6)) MATCHAND
     Match (Src (IpAddrNetmask 4026531840 8)))
    action.Drop),
  (20,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Prot (Proto 17)) MATCHAND
     Match (Src (IpAddrNetmask 4026531840 8)))
    action.Drop),
  (21,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Src (IpAddrNetmask 4026531840 8)))
    action.Drop),
  (22,
   Rule
    (Match (IIface (Iface ''eth1'')) MATCHAND
     Match (Src (IpAddrNetmask 2689990656 16)))
    action.Accept),
  (23, Rule (Match (IIface (Iface ''eth1''))) action.Drop),
  (24,
   Rule (Match (IIface (Iface ''eth0'')) MATCHAND Match (Prot (Proto 1)))
    action.Accept),
  (25,
   Rule
    (Match (Prot (Proto 6)) MATCHAND
     Match (Dst_Ports (L4Ports 6 [(111, 111)])))
    action.Drop),
  (26,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Prot (Proto 6)) MATCHAND
     Match (Dst_Ports (L4Ports 6 [(113, 113)])))
    action.Drop),
  (27,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Prot (Proto 6)) MATCHAND Match (Dst_Ports (L4Ports 6 [(4, 4)])))
    action.Accept),
  (28,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Prot (Proto 6)) MATCHAND
     Match (Dst_Ports (L4Ports 6 [(20, 20)])))
    action.Accept),
  (29,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Prot (Proto 6)) MATCHAND
     Match (Dst_Ports (L4Ports 6 [(21, 21)])))
    action.Accept),
  (30,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Prot (Proto 17)) MATCHAND
     Match (Dst_Ports (L4Ports 17 [(20, 20)])))
    action.Accept),
  (31,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Prot (Proto 17)) MATCHAND
     Match (Dst_Ports (L4Ports 17 [(21, 21)])))
    action.Accept),
  (32,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Prot (Proto 6)) MATCHAND
     Match (Dst_Ports (L4Ports 6 [(22, 22)])))
    action.Accept),
  (33,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Prot (Proto 17)) MATCHAND
     Match (Dst_Ports (L4Ports 17 [(22, 22)])))
    action.Accept),
  (34,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Prot (Proto 6)) MATCHAND
     Match (Dst_Ports (L4Ports 6 [(80, 80)])))
    action.Accept),
  (35,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Prot (Proto 17)) MATCHAND
     Match (Dst_Ports (L4Ports 17 [(80, 80)])))
    action.Accept),
  (36,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Prot (Proto 6)) MATCHAND
     Match (Dst_Ports (L4Ports 6 [(443, 443)])))
    action.Accept),
  (37,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Prot (Proto 17)) MATCHAND
     Match (Dst_Ports (L4Ports 17 [(443, 443)])))
    action.Accept),
  (38,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Prot (Proto 17)) MATCHAND
     Match (Dst_Ports (L4Ports 17 [(520, 520)])))
    action.Drop),
  (39,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Prot (Proto 6)) MATCHAND
     Match (Dst_Ports (L4Ports 6 [(137, 139)])))
    action.Drop),
  (40,
   Rule
    (Match (IIface (Iface ''eth0'')) MATCHAND
     Match (Prot (Proto 17)) MATCHAND
     Match (Dst_Ports (L4Ports 17 [(137, 139)])))
    action.Drop),
  (41, Rule (Match (Prot (Proto 6))) action.Drop),
  (42, Rule (Match (Prot (Proto 17))) action.Drop),
  (43, Rule MatchAny action.Drop)]"
  :: "(int * 32 common_primitive rule) list"
"[''ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0 in: lo   '',
  ''DROP     tcp  --  0.0.0.0/8            0.0.0.0/0 in: eth0   '',
  ''DROP     udp  --  0.0.0.0/8            0.0.0.0/0 in: eth0   '',
  ''DROP     all  --  0.0.0.0/8            0.0.0.0/0 in: eth0   '',
  ''DROP     tcp  --  10.0.0.0/8            0.0.0.0/0 in: eth0   '',
  ''DROP     udp  --  10.0.0.0/8            0.0.0.0/0 in: eth0   '',
  ''DROP     all  --  10.0.0.0/8            0.0.0.0/0 in: eth0   '',
  ''DROP     tcp  --  127.0.0.0/8            0.0.0.0/0 in: eth0   '',
  ''DROP     udp  --  127.0.0.0/8            0.0.0.0/0 in: eth0   '',
  ''DROP     all  --  127.0.0.0/8            0.0.0.0/0 in: eth0   '',
  ''DROP     tcp  --  169.254.0.0/16            0.0.0.0/0 in: eth0   '',
  ''DROP     udp  --  169.254.0.0/16            0.0.0.0/0 in: eth0   '',
  ''DROP     all  --  169.254.0.0/16            0.0.0.0/0 in: eth0   '',
  ''DROP     tcp  --  172.16.0.0/12            0.0.0.0/0 in: eth0   '',
  ''DROP     udp  --  172.16.0.0/12            0.0.0.0/0 in: eth0   '',
  ''DROP     all  --  172.16.0.0/12            0.0.0.0/0 in: eth0   '',
  ''DROP     tcp  --  224.0.0.0/3            0.0.0.0/0 in: eth0   '',
  ''DROP     udp  --  224.0.0.0/3            0.0.0.0/0 in: eth0   '',
  ''DROP     all  --  224.0.0.0/3            0.0.0.0/0 in: eth0   '',
  ''DROP     tcp  --  240.0.0.0/8            0.0.0.0/0 in: eth0   '',
  ''DROP     udp  --  240.0.0.0/8            0.0.0.0/0 in: eth0   '',
  ''DROP     all  --  240.0.0.0/8            0.0.0.0/0 in: eth0   '',
  ''ACCEPT     all  --  160.86.0.0/16            0.0.0.0/0 in: eth1   '',
  ''DROP     all  --  0.0.0.0/0            0.0.0.0/0 in: eth1   '',
  ''ACCEPT     icmp  --  0.0.0.0/0            0.0.0.0/0 in: eth0   '',
  ''DROP     tcp  --  0.0.0.0/0            0.0.0.0/0    dports: 111'',
  ''DROP     tcp  --  0.0.0.0/0            0.0.0.0/0 in: eth0   dports: 113'',
  ''ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0 in: eth0   dports: 4'',
  ''ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0 in: eth0   dports: 20'',
  ''ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0 in: eth0   dports: 21'',
  ''ACCEPT     udp  --  0.0.0.0/0            0.0.0.0/0 in: eth0   dports: 20'',
  ''ACCEPT     udp  --  0.0.0.0/0            0.0.0.0/0 in: eth0   dports: 21'',
  ''ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0 in: eth0   dports: 22'',
  ''ACCEPT     udp  --  0.0.0.0/0            0.0.0.0/0 in: eth0   dports: 22'',
  ''ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0 in: eth0   dports: 80'',
  ''ACCEPT     udp  --  0.0.0.0/0            0.0.0.0/0 in: eth0   dports: 80'',
  ''ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0 in: eth0   dports: 443'',
  ''ACCEPT     udp  --  0.0.0.0/0            0.0.0.0/0 in: eth0   dports: 443'',
  ''DROP     udp  --  0.0.0.0/0            0.0.0.0/0 in: eth0   dports: 520'',
  ''DROP     tcp  --  0.0.0.0/0            0.0.0.0/0 in: eth0   dports: 137:139'',
  ''DROP     udp  --  0.0.0.0/0            0.0.0.0/0 in: eth0   dports: 137:139'',
  ''DROP     tcp  --  0.0.0.0/0            0.0.0.0/0    '',
  ''DROP     udp  --  0.0.0.0/0            0.0.0.0/0    '',
  ''DROP     all  --  0.0.0.0/0            0.0.0.0/0    '']"
  :: "char list list"
"[Rule (Match (IIface (Iface ''lo''))) action.Accept,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 6)) MATCHAND Match (Src (IpAddrNetmask 0 8)))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 17)) MATCHAND Match (Src (IpAddrNetmask 0 8)))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Src (IpAddrNetmask 0 8)))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 6)) MATCHAND Match (Src (IpAddrNetmask 167772160 8)))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 17)) MATCHAND
    Match (Src (IpAddrNetmask 167772160 8)))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Src (IpAddrNetmask 167772160 8)))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 6)) MATCHAND
    Match (Src (IpAddrNetmask 2130706432 8)))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 17)) MATCHAND
    Match (Src (IpAddrNetmask 2130706432 8)))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Src (IpAddrNetmask 2130706432 8)))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 6)) MATCHAND
    Match (Src (IpAddrNetmask 2851995648 16)))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 17)) MATCHAND
    Match (Src (IpAddrNetmask 2851995648 16)))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Src (IpAddrNetmask 2851995648 16)))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 6)) MATCHAND
    Match (Src (IpAddrNetmask 2886729728 12)))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 17)) MATCHAND
    Match (Src (IpAddrNetmask 2886729728 12)))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Src (IpAddrNetmask 2886729728 12)))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 6)) MATCHAND
    Match (Src (IpAddrNetmask 3758096384 3)))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 17)) MATCHAND
    Match (Src (IpAddrNetmask 3758096384 3)))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Src (IpAddrNetmask 3758096384 3)))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 6)) MATCHAND
    Match (Src (IpAddrNetmask 4026531840 8)))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 17)) MATCHAND
    Match (Src (IpAddrNetmask 4026531840 8)))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Src (IpAddrNetmask 4026531840 8)))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth1'')) MATCHAND
    Match (Src (IpAddrNetmask 2689990656 16)))
   action.Accept,
  Rule (Match (IIface (Iface ''eth1''))) action.Drop,
  Rule
   (Match (Prot (Proto 6)) MATCHAND
    Match (Dst_Ports (L4Ports 6 [(111, 111)])))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 6)) MATCHAND
    Match (Dst_Ports (L4Ports 6 [(113, 113)])))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 6)) MATCHAND Match (Dst_Ports (L4Ports 6 [(4, 4)])))
   action.Accept,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 6)) MATCHAND
    Match (Dst_Ports (L4Ports 6 [(20, 20)])))
   action.Accept,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 6)) MATCHAND
    Match (Dst_Ports (L4Ports 6 [(21, 21)])))
   action.Accept,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 17)) MATCHAND
    Match (Dst_Ports (L4Ports 17 [(20, 20)])))
   action.Accept,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 17)) MATCHAND
    Match (Dst_Ports (L4Ports 17 [(21, 21)])))
   action.Accept,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 6)) MATCHAND
    Match (Dst_Ports (L4Ports 6 [(22, 22)])))
   action.Accept,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 17)) MATCHAND
    Match (Dst_Ports (L4Ports 17 [(22, 22)])))
   action.Accept,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 6)) MATCHAND
    Match (Dst_Ports (L4Ports 6 [(80, 80)])))
   action.Accept,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 17)) MATCHAND
    Match (Dst_Ports (L4Ports 17 [(80, 80)])))
   action.Accept,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 6)) MATCHAND
    Match (Dst_Ports (L4Ports 6 [(443, 443)])))
   action.Accept,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 17)) MATCHAND
    Match (Dst_Ports (L4Ports 17 [(443, 443)])))
   action.Accept,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 17)) MATCHAND
    Match (Dst_Ports (L4Ports 17 [(520, 520)])))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 6)) MATCHAND
    Match (Dst_Ports (L4Ports 6 [(137, 139)])))
   action.Drop,
  Rule
   (Match (IIface (Iface ''eth0'')) MATCHAND
    Match (Prot (Proto 17)) MATCHAND
    Match (Dst_Ports (L4Ports 17 [(137, 139)])))
   action.Drop,
  Rule (Match (Prot (Proto 6))) action.Drop,
  Rule (Match (Prot (Proto 17))) action.Drop, Rule MatchAny action.Drop]"
  :: "32 common_primitive rule list"
val it = (): unit
