   [("Normalized_Matches.normalize_match_empty_iff_matcheq_matchNone",
     "(normalize_match ?m = []) = matcheq_matchNone ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Normalized_Matches.normalized_nnf_match_normalize_match",
     "ALL m':set (normalize_match ?m). normalized_nnf_match m'",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0))),
           t_empty)
         )),
    ("Normalized_Matches.simple_ruleset_normalize_rules_dnf",
     "simple_ruleset ?rs ==> simple_ruleset (normalize_rules_dnf ?rs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Normalized_Matches.good_ruleset_normalize_rules_dnf",
     "good_ruleset ?rs ==> good_ruleset (normalize_rules_dnf ?rs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Normalized_Matches.normalized_nnf_match_MatchNot_D",
     "normalized_nnf_match (MatchNot ?m) ==> normalized_nnf_match ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("Normalized_Matches.normalize_rules_dnf_normalized_nnf_match",
     "ALL x:set (normalize_rules_dnf ?rs).
         normalized_nnf_match (get_match x)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0))),
           t_empty)
         )),
    ("Normalized_Matches.normalize_match_not_matcheq_matchNone",
     "ALL m':set (normalize_match ?m). ~ matcheq_matchNone m'",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0))),
           t_empty)
         )),
    ("Normalized_Matches.simple_ruleset_normalize_rules",
     "simple_ruleset ?rs ==> simple_ruleset (normalize_rules ?f ?rs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Normalized_Matches.good_ruleset_normalize_rules",
     "good_ruleset ?rs ==> good_ruleset (normalize_rules ?f ?rs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Normalized_Matches.normalize_rules_dnf_append",
     "normalize_rules_dnf (?rs1.0 @ ?rs2.0) =
      normalize_rules_dnf ?rs1.0 @ normalize_rules_dnf ?rs2.0",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Normalized_Matches.normalize_match_already_normalized",
     "normalized_nnf_match ?m ==> normalize_match ?m = [?m]",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Normalized_Matches.wf_ruleset_normalize_rules_dnf",
     "wf_ruleset ?\<gamma> ?p ?rs ==>
      wf_ruleset ?\<gamma> ?p (normalize_rules_dnf ?rs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Normalized_Matches.matches_to_match_list_normalize",
     "matches ?\<gamma> ?m ?a ?p =
      match_list ?\<gamma> (normalize_match ?m) ?a ?p",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0))),
    ("Normalized_Matches.normalize_match_empty",
     "normalize_match ?m = [] ==> ~ matches ?\<gamma> ?m ?a ?p",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 3), template_hole 2)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 3),
                   template_var 1),
                 template_var 0)
               )
           ))),
    ("Normalized_Matches.match_list_normalize_match",
     "match_list ?\<gamma> [?m] ?a ?p =
      match_list ?\<gamma> (normalize_match ?m) ?a ?p",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 1)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0))),
    ("Normalized_Matches.normalize_rules_fst",
     "normalize_rules ?f (?r # ?rs) =
      normalize_rules ?f [?r] @ normalize_rules ?f ?rs",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 0))),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Normalized_Matches.normalize_rules_singleton",
     "normalize_rules ?f [Rule ?m ?a] = map (%m. Rule m ?a) (?f ?m)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, t_empty),
         template_app (template_var 2, template_var 1)))),
    ("Normalized_Matches.good_ruleset_normalize_match",
     "good_ruleset [Rule ?m ?a] ==>
      good_ruleset (map (%m. Rule m ?a) (normalize_match ?m))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_var 0)),
                template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 1, t_empty),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Normalized_Matches.normalize_rules_concat_map",
     "normalize_rules ?f ?rs =
      concat
       (map (%r. map (%m. Rule m (get_action r)) (?f (get_match r))) ?rs)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty), template_var 0)))),
    ("Normalized_Matches.normalize_rules_dnf_correct",
     "wf_ruleset ?\<gamma> ?p ?rs ==>
      approximating_bigstep_fun ?\<gamma> ?p (normalize_rules_dnf ?rs) ?s =
      approximating_bigstep_fun ?\<gamma> ?p ?rs ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_app (template_hole 0, template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Normalized_Matches.in_normalized_matches",
     "?ls : set (normalize_match ?m) & matches ?\<gamma> ?ls ?a ?p ==>
      matches ?\<gamma> ?m ?a ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 3)))),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 0, template_var 2),
                    template_var 4),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3),
               template_var 1),
             template_var 0)
           ))),
    ("Normalized_Matches.wf_ruleset_normalize_match",
     "wf_ruleset ?\<gamma> ?p [Rule ?m ?a] ==>
      wf_ruleset ?\<gamma> ?p (map (%m. Rule m ?a) (normalize_match ?m))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_var 0)),
                template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 1, t_empty),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Normalized_Matches.normalize_match_wf_ruleset",
     "wf_ruleset ?\<gamma> ?p (map (%m. Rule m ?a) (normalize_match ?m)) ==>
      wf_ruleset ?\<gamma> ?p [Rule ?m ?a]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 4, t_empty),
                template_app (template_hole 2, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 3),
               template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 1)),
               template_hole 0))
           ))),
    ("Normalized_Matches.normalize_match_correct",
     "approximating_bigstep_fun ?\<gamma> ?p
       (map (%m. Rule m ?a) (normalize_match ?m)) ?s =
      approximating_bigstep_fun ?\<gamma> ?p [Rule ?m ?a] ?s",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 4),
             template_var 3),
           template_app
            (template_app (template_hole 4, t_empty),
             template_app (template_hole 2, template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 4),
             template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 2)),
             template_hole 0)),
         template_var 0))),
    ("Normalized_Matches.optimize_matches_normalized_nnf_match",
     "[| ALL r:set ?rs. normalized_nnf_match (get_match r);
         ALL m. normalized_nnf_match m --> normalized_nnf_match (?f m) |]
      ==> ALL r:set (optimize_matches ?f ?rs).
             normalized_nnf_match (get_match r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              t_empty)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))),
             t_empty)
           ))),
    ("Normalized_Matches.normalize_rules_preserves",
     "[| ALL r:set ?rs. ?P (get_match r);
         ALL m. ?P m --> (ALL m':set (?f m). ?P m') |]
      ==> ALL r:set (normalize_rules ?f ?rs). ?P (get_match r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 2)),
              t_empty)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2))),
             t_empty)
           ))),
    ("Normalized_Matches.normalize_rules_property",
     "[| ALL r:set ?rs. ?P (get_match r);
         ALL m. ?P m --> (ALL m':set (?f m). ?Q m') |]
      ==> ALL r:set (normalize_rules ?f ?rs). ?Q (get_match r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 3)),
              t_empty)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 3))),
             t_empty)
           ))),
    ("Normalized_Matches.normalize_rules_match_list_semantics",
     "[| ALL m a.
            match_list ?\<gamma> (?f m) a ?p = matches ?\<gamma> m a ?p;
         simple_ruleset ?rs |]
      ==> approximating_bigstep_fun ?\<gamma> ?p (normalize_rules ?f ?rs)
           ?s =
          approximating_bigstep_fun ?\<gamma> ?p ?rs ?s",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Normalized_Matches.optimize_matches_option_normalized_nnf_match",
     "[| !!r. r : set ?rs ==> normalized_nnf_match (get_match r);
         !!m m'.
            [| normalized_nnf_match m; ?f m = Some m' |]
            ==> normalized_nnf_match m' |]
      ==> ALL r:set (optimize_matches_option ?f ?rs).
             normalized_nnf_match (get_match r)",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))),
             t_empty)
           ))),
    ("Normalized_Matches.normalize_rules_match_list_semantics_3",
     "[| ALL m a.
            ?P m -->
            match_list ?\<gamma> (?f m) a ?p = matches ?\<gamma> m a ?p;
         simple_ruleset ?rs; ALL r:set ?rs. ?P (get_match r) |]
      ==> approximating_bigstep_fun ?\<gamma> ?p (normalize_rules ?f ?rs)
           ?s =
          approximating_bigstep_fun ?\<gamma> ?p ?rs ?s",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2),
             template_var 1),
           template_var 0))))]
