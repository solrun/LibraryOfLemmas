   [("Matching_Ternary.bunch_of_lemmata_about_matches",
     "matches ?\<gamma> MatchAny ?a ?p",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_hole 0),
             template_var 1),
           template_var 0)
         )),
    ("Matching_Ternary.map_match_tac__does_not_use_TernaryOr",
     "~ ??.Matching_Ternary.ternary_has_or (map_match_tac ?\<beta> ?p ?m)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0))
             )
         )),
    ("Matching_Ternary.remove_unknowns_generic_simps2",
     "remove_unknowns_generic ?uu ?uv MatchAny = MatchAny",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_hole 0)),
    ("Matching_Ternary.opt_MatchAny_match_expr_correct",
     "matches ?\<gamma> (opt_MatchAny_match_expr ?m) =
      matches ?\<gamma> ?m",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Matching_Ternary.bunch_of_lemmata_about_matches",
     "matches ?\<gamma> (MatchNot MatchAny) ?a ?p = False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_app (template_hole 2, template_hole 1)),
           template_var 1),
         template_var 0),
       template_hole 0)),
    ("Matching_Ternary.remove_unknowns_generic_simps2",
     "remove_unknowns_generic ?uw ?ux (MatchNot MatchAny) =
      MatchNot MatchAny",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app (template_hole 1, template_hole 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Matching_Ternary.matcheq_matchNone_not_matches",
     "matcheq_matchNone ?m ==> ~ matches ?\<gamma> ?m ?a ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 3))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 3),
                   template_var 1),
                 template_var 0)
               )
           ))),
    ("Matching_Ternary.remove_unknowns_generic",
     "matches ?\<gamma> (remove_unknowns_generic ?\<gamma> ?a ?m) ?a =
      matches ?\<gamma> ?m ?a",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)),
         template_var 1),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_var 1))),
    ("Matching_Ternary.matches_not_idem",
     "matches ?\<gamma> (MatchNot (MatchNot ?m)) ?a ?p =
      matches ?\<gamma> ?m ?a ?p",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_hole 0,
               template_app (template_hole 0, template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Matching_Ternary.no_primitives_no_unknown",
     "~ has_primitive ?m ==>
      ternary_ternary_eval (map_match_tac ?\<beta> ?p ?m) ~=
      TernaryUnknown",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 2))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0),
                 template_var 2)),
             template_hole 0)
           ))),
    ("Matching_Ternary.matcheq_matchAny",
     "~ has_primitive ?m ==>
      matcheq_matchAny ?m = matches ?\<gamma> ?m ?a ?p",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 3))
            )],
       template_equation
        (template_app (template_hole 1, template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3),
             template_var 1),
           template_var 0)))),
    ("Matching_Ternary.matcheq_matchNone",
     "~ has_primitive ?m ==>
      matcheq_matchNone ?m = (~ matches ?\<gamma> ?m ?a ?p)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 3))
            )],
       template_equation
        (template_app (template_hole 1, template_var 3),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3),
               template_var 1),
             template_var 0))))),
    ("Matching_Ternary.matches_and_comm",
     "matches ?\<gamma> (MatchAnd ?m ?m') ?a ?p =
      matches ?\<gamma> (MatchAnd ?m' ?m) ?a ?p",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3)),
           template_var 1),
         template_var 0))),
    ("Matching_Ternary.remove_unknowns_generic_simps2",
     "remove_unknowns_generic (?\<beta>, ?\<alpha>) ?a
       (MatchNot (MatchNot ?m)) =
      remove_unknowns_generic (?\<beta>, ?\<alpha>) ?a ?m",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_app
          (template_hole 0,
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("Matching_Ternary.matches_tuple",
     "matches (?\<beta>, ?\<alpha>) ?m ?a ?p =
      ternary_to_bool_unknown_match_tac ?\<alpha> ?a ?p
       (ternary_ternary_eval (map_match_tac ?\<beta> ?p ?m))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 3)),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0),
             template_var 2))))),
    ("Matching_Ternary.match_raw_ternary",
     "matches (?\<beta>, ?\<alpha>) (Match ?expr) ?a ?p =
      (case ?\<beta> ?expr ?p of TernaryTrue => True | TernaryFalse => False
       | TernaryUnknown => ?\<alpha> ?a ?p)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_var 3)),
             template_app (template_hole 3, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0),
           template_app
            (template_app (template_var 3, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_var 4, template_var 2),
           template_var 0)))),
    ("Matching_Ternary.no_primitives_matchNot",
     "~ has_primitive ?m ==>
      matches ?\<gamma> (MatchNot ?m) ?a ?p =
      (~ matches ?\<gamma> ?m ?a ?p)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 3))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 3)),
             template_var 1),
           template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 3),
               template_var 1),
             template_var 0))))),
    ("Matching_Ternary.matches_dest",
     "[| matches ?\<gamma> (MatchAnd ?m ?m') ?a ?p;
         ~ matches ?\<gamma> ?m ?a ?p |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_app
                   (template_app (template_hole 2, template_var 3),
                    template_var 2)),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 4),
                      template_var 3),
                    template_var 1),
                  template_var 0)
                )
            )],
       template_predicate (template_hole 0))),
    ("Matching_Ternary.matches_dest",
     "[| matches ?\<gamma> (MatchAnd ?m ?m') ?a ?p;
         ~ matches ?\<gamma> ?m' ?a ?p |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_app
                   (template_app (template_hole 2, template_var 3),
                    template_var 2)),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 4),
                      template_var 2),
                    template_var 1),
                  template_var 0)
                )
            )],
       template_predicate (template_hole 0))),
    ("Matching_Ternary.matches_case",
     "matches ?\<gamma> ?m ?a ?p =
      (case ternary_eval (map_match_tac (fst ?\<gamma>) ?p ?m) of
       None => snd ?\<gamma> ?a ?p | Some b => b)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 1),
               template_var 0)),
           t_empty),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 3)),
               template_var 0),
             template_var 2))))),
    ("Matching_Ternary.MatchOr",
     "matches ?\<gamma> (MatchOr ?m1.0 ?m2.0) ?a ?p =
      (matches ?\<gamma> ?m1.0 ?a ?p | matches ?\<gamma> ?m2.0 ?a ?p)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Matching_Ternary.bunch_of_lemmata_about_matches",
     "matches ?\<gamma> (MatchAnd ?m1.0 ?m2.0) ?a ?p =
      (matches ?\<gamma> ?m1.0 ?a ?p & matches ?\<gamma> ?m2.0 ?a ?p)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Matching_Ternary.matches_case_tuple",
     "matches (?\<beta>, ?\<alpha>) ?m ?a ?p =
      (case ternary_eval (map_match_tac ?\<beta> ?p ?m) of
       None => ?\<alpha> ?a ?p | Some b => b)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 3)),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_var 3, template_var 1),
               template_var 0)),
           t_empty),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0),
             template_var 2))))),
    ("Matching_Ternary.matches_case_ternaryvalue_tuple",
     "matches (?\<beta>, ?\<alpha>) ?m ?a ?p =
      (case ternary_ternary_eval (map_match_tac ?\<beta> ?p ?m) of
       TernaryTrue => True | TernaryFalse => False
       | TernaryUnknown => ?\<alpha> ?a ?p)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 4),
                 template_var 3)),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_hole 2),
           template_app
            (template_app (template_var 3, template_var 1),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0),
             template_var 2))))),
    ("Matching_Ternary.match_raw_bool",
     "matches (?\<beta>, ?\<alpha>) (Match ?expr) ?a ?p =
      (case ternary_to_bool (?\<beta> ?expr ?p) of None => ?\<alpha> ?a ?p
       | Some r => r)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 3)),
             template_app (template_hole 2, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_var 3, template_var 1),
               template_var 0)),
           t_empty),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_var 4, template_var 2),
             template_var 0))))),
    ("Matching_Ternary.matches_simp3",
     "[| matches ?\<gamma> (MatchNot ?m) ?a ?p;
         matches ?\<gamma> ?m ?a ?p |]
      ==> snd ?\<gamma> ?a ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_app (template_hole 1, template_var 2)),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 0)
           ))),
    ("Matching_Ternary.matches_simps",
     "matches ?\<gamma> ?m ?a ?p ==>
      matches ?\<gamma> (MatchAnd ?m ?m') ?a ?p =
      matches ?\<gamma> ?m' ?a ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_var 0),
             template_var 2),
           template_var 1)))),
    ("Matching_Ternary.matches_simps",
     "matches ?\<gamma> ?m ?a ?p ==>
      matches ?\<gamma> (MatchAnd ?m' ?m) ?a ?p =
      matches ?\<gamma> ?m' ?a ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3)),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_var 0),
             template_var 2),
           template_var 1)))),
    ("Matching_Ternary.packet_independent_unknown_match",
     "[| ?a = Accept | ?a = Drop; packet_independent_\<alpha> ?\<alpha> |]
      ==> (~ unknown_not_match_any ?\<alpha> ?a) =
          unknown_match_all ?\<alpha> ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_hole 6)),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_hole 5))
            ),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Matching_Ternary.MatchOr_MatchNot",
     "matches ?\<gamma> (MatchNot (MatchOr ?m1.0 ?m2.0)) ?a ?p =
      (matches ?\<gamma> (MatchNot ?m1.0) ?a ?p &
       matches ?\<gamma> (MatchNot ?m2.0) ?a ?p)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 4),
                 template_app (template_hole 2, template_var 3)),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 4),
               template_app (template_hole 2, template_var 2)),
             template_var 1),
           template_var 0)))),
    ("Matching_Ternary.matches_DeMorgan",
     "matches ?\<gamma> (MatchNot (MatchAnd ?m1.0 ?m2.0)) ?a ?p =
      (matches ?\<gamma> (MatchNot ?m1.0) ?a ?p |
       matches ?\<gamma> (MatchNot ?m2.0) ?a ?p)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 4),
                 template_app (template_hole 2, template_var 3)),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 4),
               template_app (template_hole 2, template_var 2)),
             template_var 1),
           template_var 0)))),
    ("Matching_Ternary.remove_unknowns_generic_simps2",
     "remove_unknowns_generic (?\<beta>, ?\<alpha>) ?a
       (MatchAnd ?m1.0 ?m2.0) =
      MatchAnd (remove_unknowns_generic (?\<beta>, ?\<alpha>) ?a ?m1.0)
       (remove_unknowns_generic (?\<beta>, ?\<alpha>) ?a ?m2.0)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 3)),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3)),
             template_var 2),
           template_var 0)))),
    ("Matching_Ternary.matches_MatchNot_no_unknowns",
     "~ has_unknowns ?\<beta> ?m ==>
      matches (?\<beta>, ?\<alpha>) (MatchNot ?m) ?a ?p =
      (~ matches (?\<beta>, ?\<alpha>) ?m ?a ?p)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 2)),
               template_app (template_hole 0, template_var 3)),
             template_var 1),
           template_var 0),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 2)),
                 template_var 3),
               template_var 1),
             template_var 0))))),
    ("Matching_Ternary.wf_unknown_match_tacD_False2",
     "[| wf_unknown_match_tac ?\<alpha>;
         matches (?\<beta>, ?\<alpha>) ?m Reject ?p;
         ~ matches (?\<beta>, ?\<alpha>) ?m Drop ?p |]
      ==> False",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 2),
                      template_var 3)),
                  template_var 1),
                template_hole 3),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 5,
                        template_app
                         (template_app (template_hole 4, template_var 2),
                          template_var 3)),
                      template_var 1),
                    template_hole 1),
                  template_var 0)
                )
            )],
       template_predicate (template_hole 0))),
    ("Matching_Ternary.wf_unknown_match_tacD_False1",
     "[| wf_unknown_match_tac ?\<alpha>;
         ~ matches (?\<beta>, ?\<alpha>) ?m Reject ?p;
         matches (?\<beta>, ?\<alpha>) ?m Drop ?p |]
      ==> False",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_app (template_hole 3, template_var 2),
                          template_var 3)),
                      template_var 1),
                    template_hole 2),
                  template_var 0)
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 2),
                      template_var 3)),
                  template_var 1),
                template_hole 1),
              template_var 0)
            )],
       template_predicate (template_hole 0))),
    ("Matching_Ternary.remove_unknowns_generic_specification",
     "[| ?a = Accept | ?a = Drop; packet_independent_\<alpha> ?\<alpha>;
         packet_independent_\<beta>_unknown ?\<beta> |]
      ==> ~ has_unknowns ?\<beta>
             (remove_unknowns_generic (?\<beta>, ?\<alpha>) ?a ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_hole 7)),
              template_app
               (template_app (template_hole 8, template_var 3),
                template_hole 6))
            ),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 2)),
                     template_var 3),
                   template_var 0))
               )
           ))),
    ("Matching_Ternary.MatchNot_ternary_ternary_eval",
     "ternary_ternary_eval (map_match_tac ?\<beta> ?p ?m') =
      ternary_ternary_eval (map_match_tac ?\<beta> ?p ?m) ==>
      matches (?\<beta>, ?\<alpha>) (MatchNot ?m') ?a ?p =
      matches (?\<beta>, ?\<alpha>) (MatchNot ?m) ?a ?p",
     template_implication
      ([template_equation
         (template_app
           (template_hole 5,
            template_app
             (template_app
               (template_app (template_hole 4, template_var 5),
                template_var 4),
              template_var 3)),
          template_app
           (template_hole 5,
            template_app
             (template_app
               (template_app (template_hole 4, template_var 5),
                template_var 4),
              template_var 2)))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 1)),
               template_app (template_hole 0, template_var 3)),
             template_var 0),
           template_var 4),
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 1)),
               template_app (template_hole 0, template_var 2)),
             template_var 0),
           template_var 4)))),
    ("Matching_Ternary.matches_iff_apply_f",
     "ternary_ternary_eval (map_match_tac ?\<beta> ?p (?f ?m)) =
      ternary_ternary_eval (map_match_tac ?\<beta> ?p ?m) ==>
      matches (?\<beta>, ?\<alpha>) (?f ?m) ?a ?p =
      matches (?\<beta>, ?\<alpha>) ?m ?a ?p",
     template_implication
      ([template_equation
         (template_app
           (template_hole 4,
            template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_var 4),
              template_app (template_var 3, template_var 2))),
          template_app
           (template_hole 4,
            template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_var 4),
              template_var 2)))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 1)),
               template_app (template_var 3, template_var 2)),
             template_var 0),
           template_var 4),
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 1)),
               template_var 2),
             template_var 0),
           template_var 4)))),
    ("Matching_Ternary.matches_iff_apply_f_generic",
     "ternary_ternary_eval
       (map_match_tac ?\<beta> ?p (?f (?\<beta>, ?\<alpha>) ?a ?m)) =
      ternary_ternary_eval (map_match_tac ?\<beta> ?p ?m) ==>
      matches (?\<beta>, ?\<alpha>) (?f (?\<beta>, ?\<alpha>) ?a ?m) ?a ?p =
      matches (?\<beta>, ?\<alpha>) ?m ?a ?p",
     template_implication
      ([template_equation
         (template_app
           (template_hole 4,
            template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_var 4),
              template_app
               (template_app
                 (template_app
                   (template_var 3,
                    template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 2)),
                  template_var 1),
                template_var 0))),
          template_app
           (template_hole 4,
            template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_var 4),
              template_var 0)))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 2)),
               template_app
                (template_app
                  (template_app
                    (template_var 3,
                     template_app
                      (template_app (template_hole 2, template_var 5),
                       template_var 2)),
                   template_var 1),
                 template_var 0)),
             template_var 1),
           template_var 4),
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 2)),
               template_var 0),
             template_var 1),
           template_var 4)))),
    ("Matching_Ternary.remove_unknowns_generic_simps2",
     "remove_unknowns_generic (?\<beta>, ?\<alpha>) ?a (Match ?A) =
      (if ALL p.
             ternary_ternary_eval (map_match_tac ?\<beta> p (Match ?A)) =
             TernaryUnknown
       then if ALL p. ?\<alpha> ?a p then MatchAny
            else if ALL p. ~ ?\<alpha> ?a p then MatchNot MatchAny
                 else Match ?A
       else Match ?A)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 10, template_var 3),
               template_var 2)),
           template_var 1),
         template_app (template_hole 9, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 8, template_app (template_hole 7, t_empty)),
           template_app
            (template_app
              (template_app
                (template_hole 8, template_app (template_hole 7, t_empty)),
               template_hole 2),
             template_app
              (template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 7, t_empty)),
                 template_app (template_hole 0, template_hole 2)),
               template_app (template_hole 9, template_var 0)))),
         template_app (template_hole 9, template_var 0)))),
    ("Matching_Ternary.matches_casesE",
     "[| matches (?\<beta>, ?\<alpha>) ?m ?a ?p;
         [| ternary_ternary_eval (map_match_tac ?\<beta> ?p ?m) =
            TernaryUnknown;
            ?\<alpha> ?a ?p |]
         ==> ?P;
         ternary_ternary_eval (map_match_tac ?\<beta> ?p ?m) =
         TernaryTrue ==>
         ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 1),
                 template_var 3)),
             template_hole 1)],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_var 4, template_var 2),
                   template_var 1)
                 )],
            template_predicate (template_var 0))),
        template_implication
         ([template_equation
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 1),
                 template_var 3)),
             template_hole 0)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Matching_Ternary.remove_unknowns_generic_simps2",
     "remove_unknowns_generic (?\<beta>, ?\<alpha>) ?a
       (MatchNot (Match ?A)) =
      (if ALL p.
             ternary_ternary_eval (map_match_tac ?\<beta> p (Match ?A)) =
             TernaryUnknown
       then if ALL p. ?\<alpha> ?a p then MatchAny
            else if ALL p. ~ ?\<alpha> ?a p then MatchNot MatchAny
                 else MatchNot (Match ?A)
       else MatchNot (Match ?A))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 10, template_var 3),
               template_var 2)),
           template_var 1),
         template_app
          (template_hole 9,
           template_app (template_hole 8, template_var 0))),
       template_app
        (template_app
          (template_app
            (template_hole 7, template_app (template_hole 6, t_empty)),
           template_app
            (template_app
              (template_app
                (template_hole 7, template_app (template_hole 6, t_empty)),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, t_empty)),
                 template_app (template_hole 9, template_hole 1)),
               template_app
                (template_hole 9,
                 template_app (template_hole 8, template_var 0))))),
         template_app
          (template_hole 9,
           template_app (template_hole 8, template_var 0))))),
    ("Matching_Ternary.matches_induction_case_MatchNot",
     "[| ?\<alpha> Drop ~= ?\<alpha> Accept;
         packet_independent_\<alpha> ?\<alpha>;
         ALL a.
            matches (?\<beta>, ?\<alpha>) ?m' a ?p =
            matches (?\<beta>, ?\<alpha>) ?m a ?p |]
      ==> matches (?\<beta>, ?\<alpha>) (MatchNot ?m') ?a ?p =
          matches (?\<beta>, ?\<alpha>) (MatchNot ?m) ?a ?p",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_var 5, template_hole 7),
              template_app (template_var 5, template_hole 6))
            ),
        template_predicate (template_app (template_hole 5, template_var 5)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 5)),
               template_app (template_hole 0, template_var 3)),
             template_var 0),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 5)),
               template_app (template_hole 0, template_var 1)),
             template_var 0),
           template_var 2)))),
    ("Matching_Ternary.remove_unknowns_generic_simps2",
     "remove_unknowns_generic (?\<beta>, ?\<alpha>) ?a
       (MatchNot (MatchAnd ?m1.0 ?m2.0)) =
      (if remove_unknowns_generic (?\<beta>, ?\<alpha>) ?a
           (MatchNot ?m1.0) =
          MatchAny |
          remove_unknowns_generic (?\<beta>, ?\<alpha>) ?a
           (MatchNot ?m2.0) =
          MatchAny
       then MatchAny
       else if remove_unknowns_generic (?\<beta>, ?\<alpha>) ?a
                (MatchNot ?m1.0) =
               MatchNot MatchAny
            then remove_unknowns_generic (?\<beta>, ?\<alpha>) ?a
                  (MatchNot ?m2.0)
            else if remove_unknowns_generic (?\<beta>, ?\<alpha>) ?a
                     (MatchNot ?m2.0) =
                    MatchNot MatchAny
                 then remove_unknowns_generic (?\<beta>, ?\<alpha>) ?a
                       (MatchNot ?m1.0)
                 else MatchNot
                       (MatchAnd
                         (MatchNot
                           (remove_unknowns_generic (?\<beta>, ?\<alpha>) ?a
                             (MatchNot ?m1.0)))
                         (MatchNot
                           (remove_unknowns_generic (?\<beta>, ?\<alpha>) ?a
                             (MatchNot ?m2.0)))))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 4),
                    template_var 3)),
                template_var 2),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app
                            (template_app
                              (template_hole 6,
                               template_app
                                (template_app
                                  (template_hole 5, template_var 4),
                                 template_var 3)),
                             template_var 2),
                           template_app (template_hole 4, template_var 1))),
                       template_hole 0)),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_app
                                (template_hole 5, template_var 4),
                               template_var 3)),
                           template_var 2),
                         template_app (template_hole 4, template_var 0))),
                     template_hole 0))),
               template_hole 0),
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_app
                                (template_hole 5, template_var 4),
                               template_var 3)),
                           template_var 2),
                         template_app (template_hole 4, template_var 1))),
                     template_app (template_hole 4, template_hole 0))),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 5, template_var 4),
                         template_var 3)),
                     template_var 2),
                   template_app (template_hole 4, template_var 0))),
               template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app
                            (template_app
                              (template_hole 6,
                               template_app
                                (template_app
                                  (template_hole 5, template_var 4),
                                 template_var 3)),
                             template_var 2),
                           template_app (template_hole 4, template_var 0))),
                       template_app (template_hole 4, template_hole 0))),
                   template_app
                    (template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_app (template_hole 5, template_var 4),
                           template_var 3)),
                       template_var 2),
                     template_app (template_hole 4, template_var 1))),
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_hole 4,
                         template_app
                          (template_app
                            (template_app
                              (template_hole 6,
                               template_app
                                (template_app
                                  (template_hole 5, template_var 4),
                                 template_var 3)),
                             template_var 2),
                           template_app
                            (template_hole 4, template_var 1)))),
                     template_app
                      (template_hole 4,
                       template_app
                        (template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_app
                                (template_hole 5, template_var 4),
                               template_var 3)),
                           template_var 2),
                         template_app
                          (template_hole 4, template_var 0))))))))
           )))]
