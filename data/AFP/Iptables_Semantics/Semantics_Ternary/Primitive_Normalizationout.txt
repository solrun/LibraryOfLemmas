Loading theory "Draft.List_Misc" (required by "Draft.Primitive_NormalizationTemplates" via "Draft.Primitive_Normalization" via "Draft.Negation_Type_Matching" via "Draft.Normalized_Matches" via "Draft.Fixed_Action" via "Draft.Semantics_Ternary")
Loading theory "Draft.Negation_Type" (required by "Draft.Primitive_NormalizationTemplates" via "Draft.Primitive_Normalization" via "Draft.Negation_Type_Matching")
Loading theory "Draft.Datatype_Selectors" (required by "Draft.Primitive_NormalizationTemplates" via "Draft.Primitive_Normalization" via "Draft.Negation_Type_Matching")
Loading theory "Draft.Repeat_Stabilize" (required by "Draft.Primitive_NormalizationTemplates" via "Draft.Primitive_Normalization" via "Draft.Negation_Type_Matching" via "Draft.Matching_Ternary" via "Draft.Firewall_Common")
### theory "Draft.List_Misc"
### 0.040s elapsed time, 0.196s cpu time, 0.000s GC time
Loading theory "Draft.Ternary" (required by "Draft.Primitive_NormalizationTemplates" via "Draft.Primitive_Normalization" via "Draft.Negation_Type_Matching" via "Draft.Matching_Ternary")
Found termination order: "{}"
### theory "Draft.Datatype_Selectors"
### 0.127s elapsed time, 0.515s cpu time, 0.039s GC time
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Primitive_NormalizationTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "Draft.Repeat_Stabilize"
### 0.150s elapsed time, 0.610s cpu time, 0.039s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Primitive_NormalizationTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.103s elapsed time, 0.417s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Primitive_NormalizationTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.220s elapsed time, 0.842s cpu time, 0.140s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Primitive_NormalizationTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Nat_Bijection"
### 0.329s elapsed time, 1.276s cpu time, 0.140s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Primitive_NormalizationTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "{}"
### theory "Draft.Negation_Type"
### 0.823s elapsed time, 3.235s cpu time, 0.332s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Primitive_NormalizationTemplates" via "Draft.ExtrEqs")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  left :: "'a tree => 'a tree"
consts
  snth :: "'a stream => nat => 'a"
consts
  right :: "'a tree => 'a tree"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
consts
  flat :: "'a list stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "{}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.013s elapsed time, 3.855s cpu time, 0.753s GC time
Loading theory "Draft.Firewall_Common" (required by "Draft.Primitive_NormalizationTemplates" via "Draft.Primitive_Normalization" via "Draft.Negation_Type_Matching" via "Draft.Matching_Ternary")
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "NegationNormalForm"
  Proving monotonicity ...
### theory "HOL-Library.BigO"
### 0.945s elapsed time, 3.599s cpu time, 0.681s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Ternary"
### 1.906s elapsed time, 7.190s cpu time, 1.075s GC time
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.044s elapsed time, 6.777s cpu time, 1.052s GC time
Loading theory "Draft.Templates" (required by "Draft.Primitive_NormalizationTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.059s elapsed time, 0.142s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Primitive_NormalizationTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.807s elapsed time, 1.961s cpu time, 0.845s GC time
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
### theory "Draft.Firewall_Common"
### 8.238s elapsed time, 14.114s cpu time, 3.545s GC time
Loading theory "Draft.Matching_Ternary" (required by "Draft.Primitive_NormalizationTemplates" via "Draft.Primitive_Normalization" via "Draft.Negation_Type_Matching")
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
~ has_primitive ?m ==>
ternary_ternary_eval (map_match_tac ?\<beta> ?p ?m) ~= TernaryUnknown
### theory "Draft.Matching_Ternary"
### 1.164s elapsed time, 1.398s cpu time, 0.202s GC time
Loading theory "Draft.Semantics_Ternary" (required by "Draft.Primitive_NormalizationTemplates" via "Draft.Primitive_Normalization" via "Draft.Negation_Type_Matching" via "Draft.Normalized_Matches" via "Draft.Fixed_Action")
Proofs for inductive predicate(s) "approximating_bigstep"
  Proving monotonicity ...
[| \<gamma>,p\<turnstile> \<langle>rs, s\<rangle> \<Rightarrow>\<^sub>\<alpha> t;
   !!t. P [] t t;
   !!m. matches \<gamma> m Accept p ==>
        P [Rule m Accept] Undecided (Decision FinalAllow);
   !!m. matches \<gamma> m Drop p ==>
        P [Rule m Drop] Undecided (Decision FinalDeny);
   !!m. matches \<gamma> m Reject p ==>
        P [Rule m Reject] Undecided (Decision FinalDeny);
   !!m. matches \<gamma> m Log p ==> P [Rule m Log] Undecided Undecided;
   !!m. matches \<gamma> m Empty p ==> P [Rule m Empty] Undecided Undecided;
   !!m a. ~ matches \<gamma> m a p ==> P [Rule m a] Undecided Undecided;
   !!rs X. P rs (Decision X) (Decision X);
   !!rs\<^sub>1 t rs\<^sub>2 t'.
      [| \<gamma>,p\<turnstile> \<langle>rs\<^sub>1, Undecided\<rangle> \<Rightarrow>\<^sub>\<alpha> t;
         P rs\<^sub>1 Undecided t;
         \<gamma>,p\<turnstile> \<langle>rs\<^sub>2, t\<rangle> \<Rightarrow>\<^sub>\<alpha> t';
         P rs\<^sub>2 t t' |]
      ==> P (rs\<^sub>1 @ rs\<^sub>2) Undecided t' |]
==> P rs s t
Found termination order:
  "(%p. size_list size (fst (snd (snd p)))) <*mlex*> {}"
### theory "Draft.Semantics_Ternary"
### 0.549s elapsed time, 0.631s cpu time, 0.105s GC time
Loading theory "Draft.Fixed_Action" (required by "Draft.Primitive_NormalizationTemplates" via "Draft.Primitive_Normalization" via "Draft.Negation_Type_Matching" via "Draft.Normalized_Matches")
0 < length (filter (%x. x = m) m2) ==>
approximating_bigstep_fun ?\<gamma> ?p (?r # ?rs) Undecided =
approximating_bigstep_fun ?\<gamma> ?p
 (replicate (length (filter (%x. x = m) m2)) ?r @ ?rs) Undecided
Found termination order: "(%p. size_list size (fst (snd p))) <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
### theory "Draft.Fixed_Action"
### 0.250s elapsed time, 0.254s cpu time, 0.000s GC time
Loading theory "Draft.Normalized_Matches" (required by "Draft.Primitive_NormalizationTemplates" via "Draft.Primitive_Normalization" via "Draft.Negation_Type_Matching")
Found termination order: "size <*mlex*> {}"
matches ?\<gamma> ?m ?a ?p = match_list ?\<gamma> (normalize_match ?m) ?a ?p
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Normalized_Matches"
### 0.796s elapsed time, 1.866s cpu time, 1.466s GC time
Loading theory "Draft.Negation_Type_Matching" (required by "Draft.Primitive_NormalizationTemplates" via "Draft.Primitive_Normalization")
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order:
  "(%p. size_list size (snd (snd (snd p)))) <*mlex*> {}"
### theory "Draft.Negation_Type_Matching"
### 0.723s elapsed time, 0.787s cpu time, 0.062s GC time
Loading theory "Draft.Primitive_Normalization" (required by "Draft.Primitive_NormalizationTemplates")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
match_list \<gamma> (map (Match o C) (f ml)) a p =
match_list \<gamma> [alist_and (NegPos_map C ml)] a p ==>
approximating_bigstep_fun \<gamma> p
 (map (%m. Rule m a) (map (Match o C) (f ml))) ?s =
approximating_bigstep_fun \<gamma> p
 (map (%m. Rule m a) [alist_and (NegPos_map C ml)]) ?s
[| normalized_nnf_match ?m;
   normalized_n_primitive (?disc2.0, ?sel2.0) ?P ?m;
   wf_disc_sel (?disc1.0, ?sel1.0) ?C; ALL a. ~ ?disc2.0 (?C a) |]
==> ALL mn:set (normalize_primitive_extract (?disc1.0, ?sel1.0) ?C ?f ?m).
       normalized_n_primitive (?disc2.0, ?sel2.0) ?P mn
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
### theory "Draft.Primitive_Normalization"
### 1.487s elapsed time, 1.715s cpu time, 0.256s GC time
Loading theory "Draft.Primitive_NormalizationTemplates"
val templateLemmas =
   [("Primitive_Normalization.normalized_nnf_match_opt_MatchAny_match_expr",
     "normalized_nnf_match ?m ==>
      normalized_nnf_match (opt_MatchAny_match_expr ?m)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Primitive_Normalization.has_disc_negated_has_disc",
     "has_disc_negated ?disc ?neg ?m ==> has_disc ?disc ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Primitive_Normalization.has_disc_negated_MatchNot",
     "has_disc_negated ?disc True ?m =
      has_disc_negated ?disc False (MatchNot ?m)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 1), template_hole 2),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 1), template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Primitive_Normalization.has_disc_negated_MatchNot",
     "has_disc_negated ?disc True (MatchNot ?m) =
      has_disc_negated ?disc False ?m",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 1), template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 1), template_hole 0),
         template_var 0))),
    ("Primitive_Normalization.not_has_disc_opt_MatchAny_match_expr",
     "~ has_disc ?disc ?m ==>
      ~ has_disc ?disc (opt_MatchAny_match_expr ?m)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Primitive_Normalization.normalized_n_primitive_opt_MatchAny_match_expr",
     "normalized_n_primitive ?disc_sel ?f ?m ==>
      normalized_n_primitive ?disc_sel ?f (opt_MatchAny_match_expr ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Primitive_Normalization.has_disc_alist_and",
     "has_disc ?disc (alist_and ?as) =
      (EX a:set ?as. has_disc ?disc (negation_type_to_match_expr a))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         t_empty))),
    ("Primitive_Normalization.has_disc_alist_and'",
     "has_disc ?disc (alist_and' ?as) =
      (EX a:set ?as. has_disc ?disc (negation_type_to_match_expr a))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         t_empty))),
    ("Primitive_Normalization.remove_unknowns_generic_not_has_disc",
     "~ has_disc ?C ?m ==>
      ~ has_disc ?C (remove_unknowns_generic ?\<gamma> ?a ?m)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0),
                   template_var 2))
               )
           ))),
    ("Primitive_Normalization.remove_unknowns_generic_normalized_n_primitive",
     "normalized_n_primitive ?disc_sel ?f ?m ==>
      normalized_n_primitive ?disc_sel ?f
       (remove_unknowns_generic ?\<gamma> ?a ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("Primitive_Normalization.not_has_disc_negated_opt_MatchAny_match_expr",
     "~ has_disc_negated ?disc ?neg ?m ==>
      ~ has_disc_negated ?disc ?neg (opt_MatchAny_match_expr ?m)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1),
                  template_var 0)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Primitive_Normalization.has_disc_negated_positiv_has_disc",
     "(has_disc_negated ?disc ?neg ?m |
       has_disc_negated ?disc (~ ?neg) ?m) =
      has_disc ?disc ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 0))),
    ("Primitive_Normalization.has_disc_negated_alist_and",
     "has_disc_negated ?disc ?neg (alist_and ?as) =
      (EX a:set ?as.
          has_disc_negated ?disc ?neg (negation_type_to_match_expr a))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         t_empty))),
    ("Primitive_Normalization.has_disc_negated_alist_and'",
     "has_disc_negated ?disc ?neg (alist_and' ?as) =
      (EX a:set ?as.
          has_disc_negated ?disc ?neg (negation_type_to_match_expr a))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         t_empty))),
    ("Primitive_Normalization.normalized_n_primitive_alist_and",
     "normalized_n_primitive ?disc_sel ?P (alist_and ?as) =
      (ALL a:set ?as.
          normalized_n_primitive ?disc_sel ?P
           (negation_type_to_match_expr a))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         t_empty))),
    ("Primitive_Normalization.normalized_n_primitive_alist_and'",
     "normalized_n_primitive ?disc_sel ?P (alist_and' ?as) =
      (ALL a:set ?as.
          normalized_n_primitive ?disc_sel ?P
           (negation_type_to_match_expr a))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         t_empty))),
    ("Primitive_Normalization.normalize_match_preserves_normalized_n_primitive",
     "normalized_n_primitive ?disc_sel ?f ?rst ==>
      ALL m:set (normalize_match ?rst).
         normalized_n_primitive ?disc_sel ?f m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))),
             t_empty)
           ))),
    ("Primitive_Normalization.remove_unknowns_generic_not_has_disc_negated",
     "~ has_disc_negated ?C ?neg ?m ==>
      ~ has_disc_negated ?C ?neg (remove_unknowns_generic ?\<gamma> ?a ?m)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 3),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0),
                   template_var 2))
               )
           ))),
    ("Primitive_Normalization.normalize_match_preserves_disc_negated",
     "EX m_DNF:set (normalize_match ?m).
         has_disc_negated ?disc ?neg m_DNF ==>
      has_disc_negated ?disc ?neg ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 2))),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2)
           ))),
    ("Primitive_Normalization.has_disc_alist_and'_append",
     "has_disc ?disc' (alist_and' (?ls1.0 @ ?ls2.0)) =
      (has_disc ?disc' (alist_and' ?ls1.0) |
       has_disc ?disc' (alist_and' ?ls2.0))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app (template_hole 2, template_var 0))))),
    ("Primitive_Normalization.normalized_n_primitive_false_eq_notdisc",
     "normalized_nnf_match ?m ==>
      normalized_n_primitive (?disc, ?sel) (%_. False) ?m =
      (~ has_disc ?disc ?m)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)),
             t_empty),
           template_var 2),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("Primitive_Normalization.normalized_n_primitive_if_no_primitive",
     "[| normalized_nnf_match ?m; ~ has_disc ?disc ?m |]
      ==> normalized_n_primitive (?disc, ?sel) ?f ?m",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 3)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_var 0),
             template_var 3)
           ))),
    ("Primitive_Normalization.i_m_giving_this_a_funny_name_so_i_can_thank_my_future_me_when_sledgehammer_will_find_this_one_day",
     "~ has_disc_negated ?disc ?neg ?m ==>
      ALL m_DNF:set (normalize_match ?m).
         ~ has_disc_negated ?disc ?neg m_DNF",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1),
                  template_var 0)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))),
             t_empty)
           ))),
    ("Primitive_Normalization.match_list_to_match_expr_not_has_disc",
     "ALL a. ~ ?disc (?X a) ==>
      ~ has_disc ?disc (match_list_to_match_expr (map (Match o ?X) ?ls))",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_hole 0),
                         template_var 1)),
                     template_var 0)))
               )
           ))),
    ("Primitive_Normalization.normalize_match_preserves_nodisc",
     "[| ~ has_disc ?disc ?m; ?m' : set (normalize_match ?m) |]
      ==> ~ has_disc ?disc ?m'",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 1)))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 0)
               )
           ))),
    ("Primitive_Normalization.has_disc_negated_alist_and'_append",
     "has_disc_negated ?disc' ?neg (alist_and' (?ls1.0 @ ?ls2.0)) =
      (has_disc_negated ?disc' ?neg (alist_and' ?ls1.0) |
       has_disc_negated ?disc' ?neg (alist_and' ?ls2.0))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 3), template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2),
           template_app (template_hole 2, template_var 0))))),
    ("Primitive_Normalization.has_disc_negated_disj_split",
     "has_disc_negated (%a. ?P a | ?Q a) ?neg ?m =
      (has_disc_negated ?P ?neg ?m | has_disc_negated ?Q ?neg ?m)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, t_empty), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Primitive_Normalization.not_has_disc_NegPos_map",
     "ALL a. ~ ?disc (?C a) ==>
      ALL a:set (NegPos_map ?C ?ls).
         ~ has_disc ?disc (negation_type_to_match_expr a)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0))),
             t_empty)
           ))),
    ("Primitive_Normalization.not_has_disc_normalize_match",
     "[| ~ has_disc_negated ?disc ?neg ?m; ?m' : set (normalize_match ?m) |]
      ==> ~ has_disc_negated ?disc ?neg ?m'",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2),
                  template_var 1)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 1)))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 2),
                 template_var 0)
               )
           ))),
    ("Primitive_Normalization.not_has_disc_negated_NegPos_map",
     "ALL a. ~ ?disc (?C a) ==>
      ALL a:set (NegPos_map ?C ?ls).
         ~ has_disc_negated ?disc False (negation_type_to_match_expr a)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0))),
             t_empty)
           ))),
    ("Primitive_Normalization.normalized_n_primitive_imp_not_disc_negated",
     "[| wf_disc_sel (?disc, ?sel) ?C;
         normalized_n_primitive (?disc, ?sel) ?f ?m |]
      ==> ~ has_disc_negated ?disc False ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 4, template_var 4),
                    template_var 3)),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_hole 0),
                 template_var 0)
               )
           ))),
    ("Primitive_Normalization.has_disc_negated_primitive_extractor",
     "normalized_nnf_match ?m ==>
      has_disc_negated ?disc False ?m =
      (EX a. Neg a : set (fst (primitive_extractor (?disc, ?sel) ?m)))",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 8, template_var 1),
             template_hole 7),
           template_var 2),
         template_app (template_hole 6, t_empty)))),
    ("Primitive_Normalization.compress_normalize_primitive_nnf",
     "[| wf_disc_sel ?disc_sel ?C; normalized_nnf_match ?m;
         compress_normalize_primitive ?disc_sel ?C ?f ?m = Some ?m' |]
      ==> normalized_nnf_match ?m'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 3, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 1, template_var 4),
                template_var 3),
              template_var 1),
            template_var 2),
          template_app (template_hole 0, template_var 0))],
       template_predicate
        (template_app (template_hole 3, template_var 0)))),
    ("Primitive_Normalization.normalize_primitive_extract_preserves_nnf_normalized",
     "[| normalized_nnf_match ?m; wf_disc_sel (?disc, ?sel) ?C |]
      ==> ALL mn:set (normalize_primitive_extract (?disc, ?sel) ?C ?f ?m).
             normalized_nnf_match mn",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_hole 0,
                         template_app
                          (template_app (template_hole 3, template_var 3),
                           template_var 2)),
                       template_var 1),
                     template_var 0),
                   template_var 4))),
             t_empty)
           ))),
    ("Primitive_Normalization.normalized_n_primitive_impossible_map",
     "ALL a. ~ ?disc (?C a) ==>
      ALL m:set (map (Match o (?C o ?x)) ?ls).
         normalized_n_primitive (?disc, ?sel) ?f m",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_app
                        (template_app (template_hole 2, template_var 4),
                         template_var 3))),
                   template_var 2))),
             t_empty)
           ))),
    ("Primitive_Normalization.primitive_extractor_correct",
     "[| normalized_nnf_match ?m; wf_disc_sel (?disc, ?sel) ?C;
         primitive_extractor (?disc, ?sel) ?m = (?as, ?ms) |]
      ==> normalized_nnf_match ?ms",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3)),
            template_var 5),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_predicate
        (template_app (template_hole 5, template_var 0)))),
    ("Primitive_Normalization.normalized_n_primitive_alist_and'_append",
     "normalized_n_primitive (?disc, ?sel) ?f
       (alist_and' (?ls1.0 @ ?ls2.0)) =
      (normalized_n_primitive (?disc, ?sel) ?f (alist_and' ?ls1.0) &
       normalized_n_primitive (?disc, ?sel) ?f (alist_and' ?ls2.0))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 4),
               template_var 3)),
           template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 4),
                   template_var 3)),
               template_var 2),
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 3)),
             template_var 2),
           template_app (template_hole 2, template_var 0))))),
    ("Primitive_Normalization.normalize_rules_primitive_extract_preserves_nnf_normalized",
     "[| ALL r:set ?rs. normalized_nnf_match (get_match r);
         wf_disc_sel ?disc_sel ?C |]
      ==> ALL r:set (normalize_rules
                      (normalize_primitive_extract ?disc_sel ?C ?f) ?rs).
             normalized_nnf_match (get_match r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 3)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_app (template_hole 0, template_var 2),
                         template_var 1),
                       template_var 0)),
                   template_var 3))),
             t_empty)
           ))),
    ("Primitive_Normalization.primitive_extractor_correct",
     "[| normalized_nnf_match ?m; wf_disc_sel (?disc, ?sel) ?C;
         primitive_extractor (?disc, ?sel) ?m = (?as, ?ms) |]
      ==> ~ has_disc ?disc ?ms",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3)),
            template_var 5),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0)
               )
           ))),
    ("Primitive_Normalization.primitive_extractor_correct",
     "[| normalized_nnf_match ?m; wf_disc_sel (?disc, ?sel) ?C;
         primitive_extractor (?disc, ?sel) ?m = (?as, ?ms);
         has_disc ?disc ?m |]
      ==> ?as ~= []",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 7, template_var 4),
                template_var 3)),
            template_var 5),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 5)
            )],
       template_negation
        (template_equation (template_var 1, template_hole 0)))),
    ("Primitive_Normalization.primitive_extractor_correct",
     "[| normalized_nnf_match ?m; wf_disc_sel (?disc, ?sel) ?C;
         primitive_extractor (?disc, ?sel) ?m = (?as, ?ms) |]
      ==> (~ has_disc_negated ?disc False ?m) = (getNeg ?as = [])",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 10, template_var 4),
                template_var 3)),
            template_var 5),
          template_app
           (template_app (template_hole 7, template_var 1),
            template_var 0))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_app (template_hole 4, template_var 4),
                    template_hole 3),
                  template_var 5))
              )],
         template_equation
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Primitive_Normalization.primitive_extractor_correct",
     "[| normalized_nnf_match ?m; wf_disc_sel (?disc, ?sel) ?C;
         primitive_extractor (?disc, ?sel) ?m = (?as, ?ms) |]
      ==> ALL disc2. ~ has_disc disc2 ?m --> ~ has_disc disc2 ?ms",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 7, template_var 4),
                template_var 3)),
            template_var 5),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Primitive_Normalization.primitive_extractor_correct",
     "[| normalized_nnf_match ?m; wf_disc_sel (?disc, ?sel) ?C;
         primitive_extractor (?disc, ?sel) ?m = (?as, ?ms) |]
      ==> (~ has_disc ?disc ?m) = (?as = [] & ?ms = ?m)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 10, template_var 4),
                template_var 3)),
            template_var 5),
          template_app
           (template_app (template_hole 7, template_var 1),
            template_var 0))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 5))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_hole 1)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 5))
             )))),
    ("Primitive_Normalization.primitive_extractor_correct",
     "[| normalized_nnf_match ?m; wf_disc_sel (?disc, ?sel) ?C;
         primitive_extractor (?disc, ?sel) ?m = (?as, ?ms) |]
      ==> ALL disc2.
             ~ has_disc_negated disc2 ?neg ?m -->
             ~ has_disc_negated disc2 ?neg ?ms",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 5),
                  template_var 4)),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 7, template_var 5),
                template_var 4)),
            template_var 6),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Primitive_Normalization.primitive_extractor_reassemble_not_has_disc",
     "[| wf_disc_sel (?disc, ?sel) ?C; normalized_nnf_match ?m;
         ~ has_disc ?disc' ?m;
         primitive_extractor (?disc, ?sel) ?m = (?as, ?ms) |]
      ==> ~ has_disc ?disc' (alist_and' (NegPos_map ?C ?as))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 6),
                  template_var 5)),
              template_var 4)
            ),
        template_predicate (template_app (template_hole 7, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 3)
                )
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 8, template_var 6),
                template_var 5)),
            template_var 3),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 1)))
               )
           ))),
    ("Primitive_Normalization.primitive_extractor_reassemble_not_has_disc_negated",
     "[| wf_disc_sel (?disc, ?sel) ?C; normalized_nnf_match ?m;
         ~ has_disc_negated ?disc' ?neg ?m;
         primitive_extractor (?disc, ?sel) ?m = (?as, ?ms) |]
      ==> ~ has_disc_negated ?disc' ?neg (alist_and' (NegPos_map ?C ?as))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 7),
                  template_var 6)),
              template_var 5)
            ),
        template_predicate (template_app (template_hole 7, template_var 4)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 5, template_var 3),
                    template_var 2),
                  template_var 4)
                )
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 8, template_var 7),
                template_var 6)),
            template_var 4),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 3),
                   template_var 2),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 1)))
               )
           ))),
    ("Primitive_Normalization.primitive_extractor_fst_simp2",
     "fst (case primitive_extractor (?disc, ?sel) ?m1.0 of
           (a1', ms1') =>
             case primitive_extractor (?disc, ?sel) ?m2.0 of
             (a2', ms2') => (a1' @ a2', ?m' ms1' ms2')) =
      fst (primitive_extractor (?disc, ?sel) ?m1.0) @
      fst (primitive_extractor (?disc, ?sel) ?m2.0)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)),
             template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2)),
               template_var 0))),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)),
             template_var 1))))),
    ("Primitive_Normalization.normalize_primitive_extract_normalizes_n_primitive",
     "[| normalized_nnf_match ?m; wf_disc_sel (?disc, ?sel) ?C;
         ALL as. ALL a':set (?f as). ?P a' |]
      ==> ALL m':set (normalize_primitive_extract (?disc, ?sel) ?C ?f ?m).
             normalized_n_primitive (?disc, ?sel) ?P m'",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 7, template_var 4),
                           template_var 3)),
                       template_var 2),
                     template_var 1),
                   template_var 5))),
             t_empty)
           ))),
    ("Primitive_Normalization.normalized_n_primitive_MatchAnd_combine_map",
     "[| normalized_n_primitive ?disc_sel ?f ?rst;
         ALL m':(%spt. Match (?C spt)) ` set ?pts.
            normalized_n_primitive ?disc_sel ?f m';
         ?m' : (%spt. MatchAnd (Match (?C spt)) ?rst) ` set ?pts |]
      ==> normalized_n_primitive ?disc_sel ?f ?m'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, t_empty),
                  template_app (template_hole 2, template_var 1))),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app
               (template_app (template_hole 4, t_empty),
                template_app (template_hole 2, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, template_var 5),
               template_var 4),
             template_var 0)
           ))),
    ("Primitive_Normalization.primitive_extractor_correct",
     "[| normalized_nnf_match ?m; wf_disc_sel (?disc, ?sel) ?C;
         primitive_extractor (?disc, ?sel) ?m = (?as, ?ms) |]
      ==> ALL disc2 sel2.
             normalized_n_primitive (disc2, sel2) ?P ?m -->
             normalized_n_primitive (disc2, sel2) ?P ?ms",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 5),
                  template_var 4)),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 8, template_var 5),
                template_var 4)),
            template_var 6),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_var 1))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Primitive_Normalization.primitive_extractor_reassemble_normalized_n_primitive",
     "[| wf_disc_sel (?disc, ?sel) ?C; normalized_nnf_match ?m;
         normalized_n_primitive (?disc1.0, ?sel1.0) ?f ?m;
         primitive_extractor (?disc, ?sel) ?m = (?as, ?ms) |]
      ==> normalized_n_primitive (?disc1.0, ?sel1.0) ?f
           (alist_and' (NegPos_map ?C ?as))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 8),
                  template_var 7)),
              template_var 6)
            ),
        template_predicate (template_app (template_hole 7, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 5)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 8, template_var 8),
                template_var 7)),
            template_var 5),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 4),
                   template_var 3)),
               template_var 2),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 6),
                 template_var 1)))
           ))),
    ("Primitive_Normalization.primitive_extractor_correct",
     "[| normalized_nnf_match ?m; wf_disc_sel (?disc, ?sel) ?C;
         primitive_extractor (?disc, ?sel) ?m = (?as, ?ms) |]
      ==> (matches ?\<gamma> (alist_and (NegPos_map ?C ?as)) ?a ?p &
           matches ?\<gamma> ?ms ?a ?p) =
          matches ?\<gamma> ?m ?a ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 8)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 7),
                  template_var 6)),
              template_var 5)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 8, template_var 7),
                template_var 6)),
            template_var 8),
          template_app
           (template_app (template_hole 5, template_var 4),
            template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 2),
                   template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4))),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 8),
             template_var 1),
           template_var 0)))),
    ("Primitive_Normalization.normalize_primitive_extract_preserves_unrelated_normalized_n_primitive",
     "[| normalized_nnf_match ?m;
         normalized_n_primitive (?disc2.0, ?sel2.0) ?P ?m;
         wf_disc_sel (?disc1.0, ?sel1.0) ?C; ALL a. ~ ?disc2.0 (?C a) |]
      ==> ALL mn:set (normalize_primitive_extract (?disc1.0, ?sel1.0) ?C ?f
                       ?m).
             normalized_n_primitive (?disc2.0, ?sel2.0) ?P mn",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_hole 0,
                         template_app
                          (template_app (template_hole 5, template_var 3),
                           template_var 2)),
                       template_var 1),
                     template_var 0),
                   template_var 7))),
             t_empty)
           ))),
    ("Primitive_Normalization.compress_normalize_primitive_hasdisc",
     "[| ~ has_disc ?disc2.0 ?m; wf_disc_sel (?disc, ?sel) ?C;
         ALL a. ~ ?disc2.0 (?C a); normalized_nnf_match ?m;
         compress_normalize_primitive (?disc, ?sel) ?C ?f ?m = Some ?m' |]
      ==> normalized_nnf_match ?m' & ~ has_disc ?disc2.0 ?m'",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 6),
                  template_var 5)
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 4, template_var 5)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 6, template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1),
            template_var 5),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 4, template_var 0)),
             template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 6),
                 template_var 0)))
           ))),
    ("Primitive_Normalization.compress_normalize_primitive_hasdisc_negated",
     "[| ~ has_disc_negated ?disc2.0 ?neg ?m; wf_disc_sel (?disc, ?sel) ?C;
         ALL a. ~ ?disc2.0 (?C a); normalized_nnf_match ?m;
         compress_normalize_primitive (?disc, ?sel) ?C ?f ?m = Some ?m' |]
      ==> normalized_nnf_match ?m' & ~ has_disc_negated ?disc2.0 ?neg ?m'",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 8, template_var 7),
                    template_var 6),
                  template_var 5)
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 4, template_var 5)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 6, template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1),
            template_var 5),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 4, template_var 0)),
             template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_app (template_hole 8, template_var 7),
                   template_var 6),
                 template_var 0)))
           ))),
    ("Primitive_Normalization.normalize_primitive_extract",
     "[| normalized_nnf_match ?m; wf_disc_sel ?disc_sel ?C;
         ALL ml.
            match_list ?\<gamma> (map (Match o ?C) (?f ml)) ?a ?p =
            matches ?\<gamma> (alist_and (NegPos_map ?C ml)) ?a ?p |]
      ==> match_list ?\<gamma>
           (normalize_primitive_extract ?disc_sel ?C ?f ?m) ?a ?p =
          matches ?\<gamma> ?m ?a ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 6)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 5),
              template_var 4)
            ),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 7, template_var 3),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4),
                   template_var 2),
                 template_var 6)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 6),
             template_var 1),
           template_var 0)))),
    ("Primitive_Normalization.compress_normalize_primitive_None",
     "[| normalized_nnf_match ?m; wf_disc_sel (?disc, ?sel) ?C;
         compress_normalize_primitive (?disc, ?sel) ?C ?f ?m = None;
         !!as. ?f as = None ==>
               ~ matches ?\<gamma> (alist_and (NegPos_map ?C as)) ?a ?p |]
      ==> ~ matches ?\<gamma> ?m ?a ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 6),
                  template_var 5)),
              template_var 4)
            ),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 10, template_var 6),
                    template_var 5)),
                template_var 4),
              template_var 3),
            template_var 7),
          template_hole 7),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 7),
                   template_var 1),
                 template_var 0)
               )
           ))),
    ("Primitive_Normalization.compress_normalize_primitve_preserves_normalized_n_primitive",
     "[| normalized_n_primitive (?disc2.0, ?sel2.0) ?P ?m;
         wf_disc_sel (?disc, ?sel) ?C; ALL a. ~ ?disc2.0 (?C a);
         normalized_nnf_match ?m;
         compress_normalize_primitive (?disc, ?sel) ?C ?f ?m = Some ?m' |]
      ==> normalized_nnf_match ?m' &
          normalized_n_primitive (?disc2.0, ?sel2.0) ?P ?m'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_var 8),
                    template_var 7)),
                template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 4, template_var 5)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 7, template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1),
            template_var 5),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 4, template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_var 8),
                     template_var 7)),
                 template_var 6),
               template_var 0))
           ))),
    ("Primitive_Normalization.compress_normalize_primitive_not_introduces_C",
     "[| ~ has_disc ?disc ?m; wf_disc_sel (?disc, ?sel) ?C';
         normalized_nnf_match ?m;
         compress_normalize_primitive (?disc, ?sel) ?C ?f ?m = Some ?m';
         !!as_pos as_neg.
            ?f [] = Some (as_pos, as_neg) ==> as_pos = [] & as_neg = [] |]
      ==> ~ has_disc ?disc ?m'",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 14, template_var 6),
                  template_var 5)
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 6),
                  template_var 4)),
              template_var 3)
            ),
        template_predicate
         (template_app (template_hole 11, template_var 5)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 12, template_var 6),
                    template_var 4)),
                template_var 2),
              template_var 1),
            template_var 5),
          template_app (template_hole 8, template_var 0)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 14, template_var 6),
                 template_var 0)
               )
           ))),
    ("Primitive_Normalization.normalize_primitive_extract_semantics",
     "[| normalized_nnf_match ?m; wf_disc_sel ?disc_sel ?C;
         ALL ml.
            match_list ?\<gamma> (map (Match o ?C) (?f ml)) ?a ?p =
            matches ?\<gamma> (alist_and (NegPos_map ?C ml)) ?a ?p |]
      ==> approximating_bigstep_fun ?\<gamma> ?p
           (map (%m. Rule m ?a)
             (normalize_primitive_extract ?disc_sel ?C ?f ?m))
           ?s =
          approximating_bigstep_fun ?\<gamma> ?p [Rule ?m ?a] ?s",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 7)),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 6),
              template_var 5)
            ),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_var 4),
               template_var 1),
             template_app
              (template_app (template_hole 4, t_empty),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 6),
                     template_var 5),
                   template_var 3),
                 template_var 7))),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_var 4),
               template_var 1),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 3, template_var 7),
                   template_var 2)),
               template_hole 0)),
           template_var 0)))),
    ("Primitive_Normalization.primitive_extractor_negation_type_matching1",
     "[| wf_disc_sel (?disc, ?sel) ?C; normalized_nnf_match ?m;
         primitive_extractor (?disc, ?sel) ?m = (?as, ?rest);
         matches ?\<gamma> ?m ?a ?p |]
      ==> (ALL m:set (map ?C (getPos ?as)).
              matches ?\<gamma> (Match m) ?a ?p) &
          (ALL m:set (map ?C (getNeg ?as)).
              matches ?\<gamma> (MatchNot (Match m)) ?a ?p)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 8),
                  template_var 7)),
              template_var 6)
            ),
        template_predicate
         (template_app (template_hole 12, template_var 5)),
        template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 13, template_var 8),
                template_var 7)),
            template_var 5),
          template_app
           (template_app (template_hole 9, template_var 4),
            template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 2),
                  template_var 5),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 6),
                       template_app (template_hole 3, template_var 4)))),
                 t_empty)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 6),
                     template_app (template_hole 1, template_var 4)))),
               t_empty))
           ))),
    ("Primitive_Normalization.compress_normalize_primitive_not_introduces_C_negated",
     "[| ~ has_disc_negated ?disc False ?m; wf_disc_sel (?disc, ?sel) ?C;
         normalized_nnf_match ?m;
         compress_normalize_primitive (?disc, ?sel) ?C ?f ?m = Some ?m';
         !!as as_pos as_neg.
            [| ?f as = Some (as_pos, as_neg); getNeg as = [] |]
            ==> as_neg = [] |]
      ==> ~ has_disc_negated ?disc False ?m'",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 15, template_var 5),
                    template_hole 14),
                  template_var 4)
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 5),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (template_app (template_hole 11, template_var 4)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 12, template_var 5),
                    template_var 3)),
                template_var 2),
              template_var 1),
            template_var 4),
          template_app (template_hole 8, template_var 0)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 15, template_var 5),
                   template_hole 14),
                 template_var 0)
               )
           ))),
    ("Primitive_Normalization.primitive_extractor_matches_lastE",
     "[| wf_disc_sel (?disc, ?sel) ?C; normalized_nnf_match ?m;
         primitive_extractor (?disc, ?sel) ?m = (?as, ?ms);
         [| normalized_nnf_match ?ms; ~ has_disc ?disc ?ms;
            ALL disc2. ~ has_disc disc2 ?m --> ~ has_disc disc2 ?ms |]
         ==> matches ?\<gamma> ?ms ?a ?p |]
      ==> matches ?\<gamma> (alist_and (NegPos_map ?C ?as)) ?a ?p =
          matches ?\<gamma> ?m ?a ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 8),
                  template_var 7)),
              template_var 6)
            ),
        template_predicate
         (template_app (template_hole 11, template_var 5)),
        template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 12, template_var 8),
                template_var 7)),
            template_var 5),
          template_app
           (template_app (template_hole 8, template_var 4),
            template_var 3)),
        template_implication
         ([template_predicate
            (template_app (template_hole 11, template_var 3))],
          template_implication
           ([template_negation
              (
                 template_predicate
                  (
                     template_app
                      (template_app (template_hole 6, template_var 8),
                       template_var 3)
                     )
                 )],
            template_implication
             ([template_predicate
                (template_app (template_hole 5, t_empty))],
              template_predicate
               (
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 2),
                        template_var 3),
                      template_var 1),
                    template_var 0)
                  ))))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 6),
                   template_var 4))),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 5),
             template_var 1),
           template_var 0)))),
    ("Primitive_Normalization.primitive_extractor_matchesE",
     "[| wf_disc_sel (?disc, ?sel) ?C; normalized_nnf_match ?m;
         primitive_extractor (?disc, ?sel) ?m = (?as, ?ms);
         [| normalized_nnf_match ?ms; ~ has_disc ?disc ?ms;
            ALL disc2. ~ has_disc disc2 ?m --> ~ has_disc disc2 ?ms |]
         ==> ?matches_other = matches ?\<gamma> ?ms ?a ?p |]
      ==> (matches ?\<gamma> (alist_and (NegPos_map ?C ?as)) ?a ?p &
           ?matches_other) =
          matches ?\<gamma> ?m ?a ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 9),
                  template_var 8)),
              template_var 7)
            ),
        template_predicate
         (template_app (template_hole 12, template_var 6)),
        template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 13, template_var 9),
                template_var 8)),
            template_var 6),
          template_app
           (template_app (template_hole 9, template_var 5),
            template_var 4)),
        template_implication
         ([template_predicate
            (template_app (template_hole 12, template_var 4))],
          template_implication
           ([template_negation
              (
                 template_predicate
                  (
                     template_app
                      (template_app (template_hole 7, template_var 9),
                       template_var 4)
                     )
                 )],
            template_implication
             ([template_predicate
                (template_app (template_hole 6, t_empty))],
              template_equation
               (template_var 3,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 2),
                      template_var 4),
                    template_var 1),
                  template_var 0)))))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 7),
                       template_var 5))),
                 template_var 1),
               template_var 0)),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 6),
             template_var 1),
           template_var 0)))),
    ("Primitive_Normalization.primitive_extractor_reassemble_preserves",
     "[| wf_disc_sel (?disc, ?sel) ?C; normalized_nnf_match ?m; ?P ?m;
         ?P MatchAny; primitive_extractor (?disc, ?sel) ?m = (?as, ?ms);
         !!m1 m2. ?P (MatchAnd m1 m2) = (?P m1 & ?P m2);
         !!ls1 ls2.
            ?P (alist_and' (ls1 @ ls2)) =
            (?P (alist_and' ls1) & ?P (alist_and' ls2)) |]
      ==> ?P (alist_and' (NegPos_map ?C ?as))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 6),
                  template_var 5)),
              template_var 4)
            ),
        template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_predicate (template_app (template_var 2, template_var 3)),
        template_predicate
         (template_app (template_var 2, template_hole 11)),
        template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 13, template_var 6),
                template_var 5)),
            template_var 3),
          template_app
           (template_app (template_hole 8, template_var 1),
            template_var 0)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_var 2,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1)))
           ))),
    ("Primitive_Normalization.compress_normalize_primitive_Some",
     "[| normalized_nnf_match ?m; wf_disc_sel (?disc, ?sel) ?C;
         compress_normalize_primitive (?disc, ?sel) ?C ?f ?m = Some ?m';
         !!as as_pos as_neg.
            ?f as = Some (as_pos, as_neg) ==>
            matches ?\<gamma>
             (alist_and (NegPos_map ?C (map Pos as_pos @ map Neg as_neg)))
             ?a ?p =
            matches ?\<gamma> (alist_and (NegPos_map ?C as)) ?a ?p |]
      ==> matches ?\<gamma> ?m' ?a ?p = matches ?\<gamma> ?m ?a ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 18, template_var 8)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app (template_hole 16, template_var 7),
                  template_var 6)),
              template_var 5)
            ),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 16, template_var 7),
                    template_var 6)),
                template_var 5),
              template_var 4),
            template_var 8),
          template_app (template_hole 13, template_var 3)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_var 2),
               template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_var 2),
               template_var 8),
             template_var 1),
           template_var 0)))),
    ("Primitive_Normalization.compress_normalize_primitive_monad",
     "[| !!m m' f.
            [| f : set ?fs; normalized_nnf_match m; f m = Some m' |]
            ==> matches ?\<gamma> m' ?a ?p = matches ?\<gamma> m ?a ?p;
         !!m m' f.
            [| f : set ?fs; normalized_nnf_match m; f m = Some m' |]
            ==> normalized_nnf_match m';
         normalized_nnf_match ?m;
         compress_normalize_primitive_monad ?fs ?m = Some ?m' |]
      ==> normalized_nnf_match ?m'",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 5, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 5), template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (template_app (template_hole 5, template_var 0)))),
    ("Primitive_Normalization.compress_normalize_primitive_monad_preserves",
     "[| !!m m' f.
            [| f : set ?fs; normalized_nnf_match m; f m = Some m' |]
            ==> normalized_nnf_match m';
         !!m m' f.
            [| f : set ?fs; normalized_nnf_match m; ?P m; f m = Some m' |]
            ==> ?P m';
         normalized_nnf_match ?m; ?P ?m;
         compress_normalize_primitive_monad ?fs ?m = Some ?m' |]
      ==> normalized_nnf_match ?m' & ?P ?m'",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_var 2, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 4, template_var 0)),
             template_app (template_var 2, template_var 0))
           ))),
    ("Primitive_Normalization.compress_normalize_primitive_monad",
     "[| !!m m' f.
            [| f : set ?fs; normalized_nnf_match m; f m = Some m' |]
            ==> matches ?\<gamma> m' ?a ?p = matches ?\<gamma> m ?a ?p;
         !!m m' f.
            [| f : set ?fs; normalized_nnf_match m; f m = Some m' |]
            ==> normalized_nnf_match m';
         normalized_nnf_match ?m;
         compress_normalize_primitive_monad ?fs ?m = Some ?m' |]
      ==> matches ?\<gamma> ?m' ?a ?p = matches ?\<gamma> ?m ?a ?p",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 5, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 5), template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 0),
             template_var 3),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 1),
             template_var 3),
           template_var 2)))),
    ("Primitive_Normalization.compress_normalize_primitive_monad_None",
     "[| !!m m' f.
            [| f : set ?fs; normalized_nnf_match m; f m = Some m' |]
            ==> matches ?\<gamma> m' ?a ?p = matches ?\<gamma> m ?a ?p;
         !!m f.
            [| f : set ?fs; normalized_nnf_match m; f m = None |]
            ==> ~ matches ?\<gamma> m ?a ?p;
         !!m m' f.
            [| f : set ?fs; normalized_nnf_match m; f m = Some m' |]
            ==> normalized_nnf_match m';
         normalized_nnf_match ?m;
         compress_normalize_primitive_monad ?fs ?m = None |]
      ==> ~ matches ?\<gamma> ?m ?a ?p",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 4), template_var 0),
          template_hole 2)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_var 3),
                     template_var 0),
                   template_var 2),
                 template_var 1)
               )
           )))]:
   (string * thm * template) list
### theory "Draft.Primitive_NormalizationTemplates"
### 0.497s elapsed time, 0.698s cpu time, 0.130s GC time
val it = (): unit
