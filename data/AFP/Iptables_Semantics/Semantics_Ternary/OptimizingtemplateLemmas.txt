   [("Optimizing.cut_off_after_match_any_simplers",
     "simple_ruleset ?rs ==> simple_ruleset (cut_off_after_match_any ?rs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Optimizing.cut_off_after_match_any",
     "approximating_bigstep_fun ?\<gamma> ?p (cut_off_after_match_any ?rs)
       ?s =
      approximating_bigstep_fun ?\<gamma> ?p ?rs ?s",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Optimizing.rmMatchFalse_correct",
     "approximating_bigstep_fun ?\<gamma> ?p (rmMatchFalse ?rs) ?s =
      approximating_bigstep_fun ?\<gamma> ?p ?rs ?s",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Optimizing.cut_off_after_match_any_preserve_matches",
     "ALL r:set ?rs. ?P (get_match r) ==>
      ALL r:set (cut_off_after_match_any ?rs). ?P (get_match r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 0, template_var 1))),
             t_empty)
           ))),
    ("Optimizing.rmshadow_sound",
     "[| simple_ruleset ?rs; ?p : ?P |]
      ==> approximating_bigstep_fun ?\<gamma> ?p
           (rmshadow ?\<gamma> ?rs ?P) =
          approximating_bigstep_fun ?\<gamma> ?p ?rs",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2),
           template_var 3))))]
