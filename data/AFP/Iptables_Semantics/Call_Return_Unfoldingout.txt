Loading theory "Draft.List_Misc" (required by "Draft.Call_Return_UnfoldingTemplates" via "Draft.Call_Return_Unfolding" via "Draft.Matching" via "Draft.Semantics")
Loading theory "Draft.Repeat_Stabilize" (required by "Draft.Call_Return_UnfoldingTemplates" via "Draft.Call_Return_Unfolding" via "Draft.Matching" via "Draft.Semantics" via "Draft.Firewall_Common")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Call_Return_UnfoldingTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Call_Return_UnfoldingTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "Draft.List_Misc"
### 0.044s elapsed time, 0.212s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Call_Return_UnfoldingTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "Draft.Repeat_Stabilize"
### 0.145s elapsed time, 0.588s cpu time, 0.039s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Call_Return_UnfoldingTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Function_Algebras"
### 0.153s elapsed time, 0.620s cpu time, 0.039s GC time
Loading theory "Draft.Firewall_Common" (required by "Draft.Call_Return_UnfoldingTemplates" via "Draft.Call_Return_Unfolding" via "Draft.Matching" via "Draft.Semantics")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.297s elapsed time, 1.148s cpu time, 0.126s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Call_Return_UnfoldingTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.353s elapsed time, 1.402s cpu time, 0.126s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Call_Return_UnfoldingTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.980s elapsed time, 3.676s cpu time, 0.893s GC time
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.066s elapsed time, 3.938s cpu time, 0.893s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.019s elapsed time, 6.386s cpu time, 1.272s GC time
Loading theory "Draft.Templates" (required by "Draft.Call_Return_UnfoldingTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.081s elapsed time, 0.208s cpu time, 0.082s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Call_Return_UnfoldingTemplates")
Found termination order: "size_list size <*mlex*> {}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.784s elapsed time, 1.919s cpu time, 0.792s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
### theory "Draft.Firewall_Common"
### 7.590s elapsed time, 14.718s cpu time, 2.926s GC time
Loading theory "Draft.Semantics" (required by "Draft.Call_Return_UnfoldingTemplates" via "Draft.Call_Return_Unfolding" via "Draft.Matching")
Found termination order: "(%p. size (fst (snd p))) <*mlex*> {}"
Proofs for inductive predicate(s) "iptables_bigstep"
  Proving monotonicity ...
locale iptables_bigstep_fixedbackground
  fixes \<Gamma> :: "char list => 'a rule list option"
    and \<gamma> :: "'a => 'p => bool"
Proofs for inductive predicate(s) "iptables_bigstep'"
  Proving monotonicity ...
[| wf (calls_chain \<Gamma>);
   !!x. (!!y. (y, x) : calls_chain \<Gamma> ==>
              EX t. \<Gamma>,\<gamma>,p\<turnstile> \<langle>[Rule m
                         (Call y)], Undecided\<rangle> \<Rightarrow> t) ==>
        EX t. \<Gamma>,\<gamma>,p\<turnstile> \<langle>[Rule m
                   (Call x)], Undecided\<rangle> \<Rightarrow> t |]
==> EX t. \<Gamma>,\<gamma>,p\<turnstile> \<langle>[Rule m
               (Call ?a)], Undecided\<rangle> \<Rightarrow> t
### theory "Draft.Semantics"
### 0.666s elapsed time, 0.772s cpu time, 0.135s GC time
Loading theory "Draft.Matching" (required by "Draft.Call_Return_UnfoldingTemplates" via "Draft.Call_Return_Unfolding")
### theory "Draft.Matching"
### 0.089s elapsed time, 0.089s cpu time, 0.000s GC time
Loading theory "Draft.Ruleset_Update" (required by "Draft.Call_Return_UnfoldingTemplates" via "Draft.Call_Return_Unfolding")
### theory "Draft.Ruleset_Update"
### 0.075s elapsed time, 0.075s cpu time, 0.000s GC time
Loading theory "Draft.Call_Return_Unfolding" (required by "Draft.Call_Return_UnfoldingTemplates")
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "{}"
### theory "Draft.Call_Return_Unfolding"
### 0.639s elapsed time, 0.799s cpu time, 0.146s GC time
Loading theory "Draft.Call_Return_UnfoldingTemplates"
val templateLemmas =
   [("Call_Return_Unfolding.add_match_MatchAnd_foldr_empty_rs2",
     "add_match_MatchAnd_foldr ?ms [] = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Call_Return_Unfolding.add_missing_ret_unfoldings_emptyrs2",
     "add_missing_ret_unfoldings ?rs1.0 [] = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Call_Return_Unfolding.wf_chain_process_ret",
     "wf_chain ?\<Gamma> ?rs ==> wf_chain ?\<Gamma> (process_ret ?rs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Call_Return_Unfolding.wf_chain_add_match",
     "wf_chain ?\<Gamma> ?rs ==> wf_chain ?\<Gamma> (add_match ?m ?rs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Call_Return_Unfolding.add_match_simp",
     "add_match ?m =
      map (%r. Rule (MatchAnd ?m (get_match r)) (get_action r))",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Call_Return_Unfolding.process_ret_split_obvious",
     "process_ret (?rs\<^sub>1 @ ?rs\<^sub>2) =
      process_ret ?rs\<^sub>1 @
      add_missing_ret_unfoldings ?rs\<^sub>1 (process_ret ?rs\<^sub>2)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 2, template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 2, template_var 0))))),
    ("Call_Return_Unfolding.process_call_split",
     "process_call ?\<Gamma> (?rs1.0 @ ?rs2.0) =
      process_call ?\<Gamma> ?rs1.0 @ process_call ?\<Gamma> ?rs2.0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Call_Return_Unfolding.process_ret_result_empty",
     "[] = process_ret ?rs ==> ALL r:set ?rs. get_action r = Return",
     template_implication
      ([template_equation
         (template_hole 6, template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             t_empty)
           ))),
    ("Call_Return_Unfolding.process_call_split_fst",
     "process_call ?\<Gamma> (?a # ?rs) =
      process_call ?\<Gamma> [?a] @ process_call ?\<Gamma> ?rs",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 0))),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Call_Return_Unfolding.process_ret_split_fst_Return",
     "?a = Return ==>
      process_ret (Rule ?m ?a # ?rs) =
      add_match (MatchNot ?m) (process_ret ?rs)",
     template_implication
      ([template_equation (template_var 2, template_hole 6)],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 2)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 4, template_var 0))))),
    ("Call_Return_Unfolding.iptables_bigstep_process_ret_undecided",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, Undecided\<rangle> \<Rightarrow> ?t ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>process_ret
             ?rs, Undecided\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1),
                template_hole 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_app (template_hole 0, template_var 1)),
               template_hole 1),
             template_var 0)
           ))),
    ("Call_Return_Unfolding.unfolding_complete",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>process_call ?\<Gamma>
             ?rs, ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("Call_Return_Unfolding.process_ret_split_fst_NeqReturn",
     "?a ~= Return ==>
      process_ret (Rule ?m ?a # ?rs) = Rule ?m ?a # process_ret ?rs",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_app (template_hole 2, template_var 0))))),
    ("Call_Return_Unfolding.iptables_bigstep_process_ret_DecisionD",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>process_ret
             ?rs, ?s\<rangle> \<Rightarrow> Decision ?X ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> Decision
      ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_app (template_hole 1, template_var 2)),
                template_var 1),
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Call_Return_Unfolding.process_ret_add_match_dist",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>process_ret
             (add_match ?m ?rs), ?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>add_match ?m
             (process_ret ?rs), ?s\<rangle> \<Rightarrow> ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 6),
                 template_var 5),
               template_var 4),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 6),
                 template_var 5),
               template_var 4),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_app (template_hole 1, template_var 2))),
           template_var 1),
         template_var 0))),
    ("Call_Return_Unfolding.unfolding_sound_complete",
     "wf_chain ?\<Gamma> ?rs ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>process_call ?\<Gamma>
             ?rs, ?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 5),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 3),
                 template_var 2),
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 4)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 3),
                 template_var 2),
               template_var 4),
             template_var 1),
           template_var 0)))),
    ("Call_Return_Unfolding.process_ret_add_match_dist1",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>process_ret
             (add_match ?m ?rs), ?s\<rangle> \<Rightarrow> ?t ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>add_match ?m
             (process_ret ?rs), ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_app
                   (template_hole 1,
                    template_app
                     (template_app (template_hole 0, template_var 3),
                      template_var 2))),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 6),
                     template_var 5),
                   template_var 4),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_app (template_hole 1, template_var 2))),
               template_var 1),
             template_var 0)
           ))),
    ("Call_Return_Unfolding.process_ret_add_match_dist2",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>add_match ?m
             (process_ret ?rs), ?s\<rangle> \<Rightarrow> ?t ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>process_ret
             (add_match ?m ?rs), ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_app
                   (template_app (template_hole 1, template_var 3),
                    template_app (template_hole 0, template_var 2))),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 6),
                     template_var 5),
                   template_var 4),
                 template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2))),
               template_var 1),
             template_var 0)
           ))),
    ("Call_Return_Unfolding.add_match_rot_add_missing_ret_unfoldings",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>add_match ?m
             (add_missing_ret_unfoldings ?rs1.0
               ?rs2.0), Undecided\<rangle> \<Rightarrow> Undecided =
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>add_missing_ret_unfoldings
             ?rs1.0
             (add_match ?m
               ?rs2.0), Undecided\<rangle> \<Rightarrow> Undecided",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 5),
                 template_var 4),
               template_var 3),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0))),
           template_hole 0),
         template_hole 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 5),
                 template_var 4),
               template_var 3),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0))),
           template_hole 0),
         template_hole 0))),
    ("Call_Return_Unfolding.unfolding_sound",
     "[| wf_chain ?\<Gamma> ?rs;
         ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>process_call ?\<Gamma>
                ?rs, ?s\<rangle> \<Rightarrow> ?t |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 3),
                    template_var 2),
                  template_app
                   (template_app (template_hole 0, template_var 5),
                    template_var 4)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 5),
                     template_var 3),
                   template_var 2),
                 template_var 4),
               template_var 1),
             template_var 0)
           ))),
    ("Call_Return_Unfolding.add_match_add_match_MatchAnd_foldr",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>add_match ?m
             (add_match_MatchAnd_foldr ?ms
               ?rs2.0), ?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>add_match
             (MatchAnd_foldr (?m # ?ms))
             ?rs2.0, ?s\<rangle> \<Rightarrow> ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 7),
                 template_var 6),
               template_var 5),
             template_app
              (template_app (template_hole 3, template_var 4),
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 7),
                 template_var 6),
               template_var 5),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3))),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("Call_Return_Unfolding.add_match_add_missing_ret_unfoldings_rot",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>add_match ?m
             (add_missing_ret_unfoldings ?rs1.0
               ?rs2.0), ?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>add_missing_ret_unfoldings
             (Rule (MatchNot ?m) Return # ?rs1.0)
             ?rs2.0, ?s\<rangle> \<Rightarrow> ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_var 7),
                 template_var 6),
               template_var 5),
             template_app
              (template_app (template_hole 5, template_var 4),
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_var 7),
                 template_var 6),
               template_var 5),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app (template_hole 1, template_var 4)),
                       template_hole 0)),
                   template_var 3)),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("Call_Return_Unfolding.add_missing_ret_unfoldings_alt",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>add_missing_ret_unfoldings
             ?rs1.0 ?rs2.0, ?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>add_match_MatchAnd_foldr
             (map (%r. MatchNot (get_match r))
               (filter (%r. get_action r = Return) ?rs1.0))
             ?rs2.0, ?s\<rangle> \<Rightarrow> ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 9, template_var 6),
                 template_var 5),
               template_var 4),
             template_app
              (template_app (template_hole 8, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 9, template_var 6),
                 template_var 5),
               template_var 4),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, t_empty),
                   template_app
                    (template_app (template_hole 3, t_empty),
                     template_var 3))),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("Call_Return_Unfolding.unfolding_n_sound_complete",
     "ALL rsg:ran ?\<Gamma> Un {?rs}. wf_chain ?\<Gamma> rsg ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>(process_call ?\<Gamma> ^^
             ?n)
             ?rs, ?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_var 6)),
                  template_app
                   (template_app (template_hole 6, template_var 5),
                    template_hole 5))),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 6),
                   template_var 4),
                 template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app (template_hole 0, template_var 6)),
                 template_var 5)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 6),
                   template_var 4),
                 template_var 3),
               template_var 5),
             template_var 1),
           template_var 0)))),
    ("Call_Return_Unfolding.process_ret_Undecided_sound",
     "?\<Gamma>(?chain |->
      ?rs),?\<gamma>,?p\<turnstile> \<langle>process_ret
        (add_match ?m ?rs), Undecided\<rangle> \<Rightarrow> Undecided ==>
      ?\<Gamma>(?chain |->
      ?rs),?\<gamma>,?p\<turnstile> \<langle>[Rule ?m
         (Call ?chain)], Undecided\<rangle> \<Rightarrow> Undecided",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_app
                           (template_app (template_hole 8, template_var 5),
                            template_var 4),
                          template_app (template_hole 7, template_var 3))),
                      template_var 2),
                    template_var 1),
                  template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 0),
                      template_var 3))),
                template_hole 4),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app
                          (template_app (template_hole 8, template_var 5),
                           template_var 4),
                         template_app (template_hole 7, template_var 3))),
                     template_var 2),
                   template_var 1),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 0),
                       template_app (template_hole 1, template_var 4))),
                   template_hole 0)),
               template_hole 4),
             template_hole 4)
           ))),
    ("Call_Return_Unfolding.process_ret_sound'",
     "?\<Gamma>(?chain |->
      ?rs),?\<gamma>,?p\<turnstile> \<langle>process_ret
        (add_match ?m ?rs), Undecided\<rangle> \<Rightarrow> ?t ==>
      ?\<Gamma>(?chain |->
      ?rs),?\<gamma>,?p\<turnstile> \<langle>[Rule ?m
         (Call ?chain)], Undecided\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_app
                           (template_app (template_hole 8, template_var 6),
                            template_var 5),
                          template_app (template_hole 7, template_var 4))),
                      template_var 3),
                    template_var 2),
                  template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 1),
                      template_var 4))),
                template_hole 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app
                          (template_app (template_hole 8, template_var 6),
                           template_var 5),
                         template_app (template_hole 7, template_var 4))),
                     template_var 3),
                   template_var 2),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_app (template_hole 1, template_var 5))),
                   template_hole 0)),
               template_hole 4),
             template_var 0)
           ))),
    ("Call_Return_Unfolding.process_ret_Decision_sound",
     "?\<Gamma>(?chain |->
      ?rs),?\<gamma>,?p\<turnstile> \<langle>process_ret
        (add_match ?m ?rs), Undecided\<rangle> \<Rightarrow> Decision ?X ==>
      ?\<Gamma>(?chain |->
      ?rs),?\<gamma>,?p\<turnstile> \<langle>[Rule ?m
         (Call ?chain)], Undecided\<rangle> \<Rightarrow> Decision ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 10,
                        template_app
                         (template_app
                           (template_app (template_hole 9, template_var 6),
                            template_var 5),
                          template_app (template_hole 8, template_var 4))),
                      template_var 3),
                    template_var 2),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 1),
                      template_var 4))),
                template_hole 5),
              template_app (template_hole 4, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_app
                          (template_app (template_hole 9, template_var 6),
                           template_var 5),
                         template_app (template_hole 8, template_var 4))),
                     template_var 3),
                   template_var 2),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_app (template_hole 1, template_var 5))),
                   template_hole 0)),
               template_hole 5),
             template_app (template_hole 4, template_var 0))
           ))),
    ("Call_Return_Unfolding.process_ret_cases",
     "process_ret ?rs = ?rs |
      (EX rs\<^sub>1 rs\<^sub>2 m.
          ?rs = rs\<^sub>1 @ [Rule m Return] @ rs\<^sub>2 &
          process_ret ?rs =
          rs\<^sub>1 @ process_ret ([Rule m Return] @ rs\<^sub>2))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 9,
                 template_app (template_hole 8, template_var 0)),
               template_var 0)),
           template_app (template_hole 7, t_empty))
         )),
    ("Call_Return_Unfolding.process_ret_splitcases",
     "[| process_ret ?rs = ?rs ==> ?thesis;
         !!rs\<^sub>1 rs\<^sub>2 m.
            [| ?rs = rs\<^sub>1 @ [Rule m Return] @ rs\<^sub>2;
               process_ret ?rs =
               rs\<^sub>1 @ process_ret ([Rule m Return] @ rs\<^sub>2) |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_implication
         ([template_equation
            (template_app (template_hole 7, template_var 1),
             template_var 1)],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("Call_Return_Unfolding.iptables_bigstep_process_ret_cases3",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>process_ret
                ?rs, Undecided\<rangle> \<Rightarrow> Undecided;
         ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, Undecided\<rangle> \<Rightarrow> Undecided ==>
         ?thesis;
         !!rs\<^sub>1 rs\<^sub>2 m.
            [| ?rs = rs\<^sub>1 @ [Rule m Return] @ rs\<^sub>2;
               ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>rs\<^sub>1, Undecided\<rangle> \<Rightarrow> Undecided;
               matches ?\<gamma> m ?p |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 11, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_app (template_hole 10, template_var 1)),
                template_hole 9),
              template_hole 9)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 11, template_var 4),
                         template_var 3),
                       template_var 2),
                     template_var 1),
                   template_hole 9),
                 template_hole 9)
               )],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_var 0))),
    ("Call_Return_Unfolding.repeat_stabilize_process_call",
     "[| sanity_wf_ruleset ?\<Gamma>; ?chain_name : set (map fst ?\<Gamma>);
         ?default_action = Accept | ?default_action = Drop |]
      ==> map_of
           ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>repeat_stabilize ?n
                  (process_call (map_of ?\<Gamma>))
                  [Rule MatchAny (Call ?chain_name),
                   Rule MatchAny
                    ?default_action], ?s\<rangle> \<Rightarrow> ?t =
          map_of
           ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[Rule MatchAny
                   (Call ?chain_name),
                  Rule MatchAny
                   ?default_action], ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (template_app (template_hole 18, template_var 7)),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 6),
              template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_hole 14),
                  template_var 7)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 5),
                  template_hole 11)),
              template_app
               (template_app (template_hole 12, template_var 5),
                template_hole 10))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_var 7)),
                   template_var 4),
                 template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 6, template_var 2),
                   template_app
                    (template_hole 5,
                     template_app (template_hole 7, template_var 7))),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_app (template_hole 1, template_var 6))),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_hole 2),
                         template_var 5)),
                     template_hole 0)))),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_var 7)),
                   template_var 4),
                 template_var 3),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 6))),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_var 5)),
                   template_hole 0))),
             template_var 1),
           template_var 0)))),
    ("Call_Return_Unfolding.unfold_optimize_ruleset_CHAIN",
     "[| sanity_wf_ruleset ?\<Gamma>; ?chain_name : set (map fst ?\<Gamma>);
         ?default_action = Accept | ?default_action = Drop;
         !!m. matches ?\<gamma> (?optimize m) ?p = matches ?\<gamma> m ?p;
         unfold_optimize_ruleset_CHAIN ?optimize ?chain_name ?default_action
          (map_of ?\<Gamma>) =
         Some ?rs |]
      ==> map_of
           ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t =
          map_of
           ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[Rule MatchAny
                   (Call ?chain_name),
                  Rule MatchAny
                   ?default_action], ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (template_app (template_hole 21, template_var 8)),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 7),
              template_app
               (template_hole 19,
                template_app
                 (template_app (template_hole 18, template_hole 17),
                  template_var 8)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 6),
                  template_hole 14)),
              template_app
               (template_app (template_hole 15, template_var 6),
                template_hole 13))
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_var 7),
              template_var 6),
            template_app (template_hole 7, template_var 8)),
          template_app (template_hole 6, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 7, template_var 8)),
                   template_var 5),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 7, template_var 8)),
                   template_var 5),
                 template_var 3),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 7))),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_var 6)),
                   template_hole 0))),
             template_var 1),
           template_var 0))))]:
   (string * thm * template) list
### theory "Draft.Call_Return_UnfoldingTemplates"
### 0.402s elapsed time, 0.593s cpu time, 0.117s GC time
val it = (): unit
