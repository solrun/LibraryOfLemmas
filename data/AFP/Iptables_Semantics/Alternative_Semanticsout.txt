Loading theory "Draft.List_Misc" (required by "Draft.Alternative_SemanticsTemplates" via "Draft.Alternative_Semantics" via "Draft.Semantics")
Loading theory "Draft.Repeat_Stabilize" (required by "Draft.Alternative_SemanticsTemplates" via "Draft.Alternative_Semantics" via "Draft.Semantics" via "Draft.Firewall_Common")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Alternative_SemanticsTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Alternative_SemanticsTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
### theory "Draft.List_Misc"
### 0.042s elapsed time, 0.197s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Alternative_SemanticsTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.135s elapsed time, 0.553s cpu time, 0.042s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Alternative_SemanticsTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "Draft.Repeat_Stabilize"
### 0.146s elapsed time, 0.596s cpu time, 0.042s GC time
Loading theory "Draft.Firewall_Common" (required by "Draft.Alternative_SemanticsTemplates" via "Draft.Alternative_Semantics" via "Draft.Semantics")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.209s elapsed time, 0.816s cpu time, 0.042s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Alternative_SemanticsTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.349s elapsed time, 1.387s cpu time, 0.126s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Alternative_SemanticsTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.924s elapsed time, 3.457s cpu time, 0.804s GC time
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.021s elapsed time, 3.702s cpu time, 0.817s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.951s elapsed time, 6.061s cpu time, 1.090s GC time
Loading theory "Draft.Templates" (required by "Draft.Alternative_SemanticsTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.054s elapsed time, 0.121s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Alternative_SemanticsTemplates")
Found termination order: "size_list size <*mlex*> {}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.770s elapsed time, 1.834s cpu time, 0.667s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
### theory "Draft.Firewall_Common"
### 8.088s elapsed time, 15.417s cpu time, 3.301s GC time
Loading theory "Draft.Semantics" (required by "Draft.Alternative_SemanticsTemplates" via "Draft.Alternative_Semantics")
Found termination order: "(%p. size (fst (snd p))) <*mlex*> {}"
Proofs for inductive predicate(s) "iptables_bigstep"
  Proving monotonicity ...
locale iptables_bigstep_fixedbackground
  fixes \<Gamma> :: "char list => 'a rule list option"
    and \<gamma> :: "'a => 'p => bool"
Proofs for inductive predicate(s) "iptables_bigstep'"
  Proving monotonicity ...
[| wf (calls_chain \<Gamma>);
   !!x. (!!y. (y, x) : calls_chain \<Gamma> ==>
              EX t. \<Gamma>,\<gamma>,p\<turnstile> \<langle>[Rule m
                         (Call y)], Undecided\<rangle> \<Rightarrow> t) ==>
        EX t. \<Gamma>,\<gamma>,p\<turnstile> \<langle>[Rule m
                   (Call x)], Undecided\<rangle> \<Rightarrow> t |]
==> EX t. \<Gamma>,\<gamma>,p\<turnstile> \<langle>[Rule m
               (Call ?a)], Undecided\<rangle> \<Rightarrow> t
### theory "Draft.Semantics"
### 1.060s elapsed time, 1.804s cpu time, 1.032s GC time
Loading theory "Draft.Alternative_Semantics" (required by "Draft.Alternative_SemanticsTemplates")
Proofs for inductive predicate(s) "iptables_bigstep_ns"
  Proving monotonicity ...
Proofs for inductive predicate(s) "iptables_bigstep_nz"
  Proving monotonicity ...
Proofs for inductive predicate(s) "iptables_bigstep_r"
  Proving monotonicity ...
[| infinite UNIV; finite ?A |] ==> EX a. a ~: ?A
### theory "Draft.Alternative_Semantics"
### 0.382s elapsed time, 0.383s cpu time, 0.000s GC time
Loading theory "Draft.Alternative_SemanticsTemplates"
val templateLemmas =
   [("Alternative_Semantics.partial_fun_upd",
     "(?f(?x |-> ?y)) ?x = Some ?y",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_var 1),
       template_app (template_hole 0, template_var 0))),
    ("Alternative_Semantics.nz_empty_rs_stateD",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> [] \<Rightarrow>\<^sub>z ?t ==>
      ?t = Undecided",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2),
                  template_var 1),
                template_hole 2),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Alternative_Semantics.r_skip_inv",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> [] \<Rightarrow>\<^sub>r ?t ==>
      ?t = Undecided",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2),
                  template_var 1),
                template_hole 2),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Alternative_Semantics.ex_no_call",
     "finite ?S ==> EX c. ALL rs:?S. no_call_to c rs",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Alternative_Semantics.empty_rs_stateD",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[], ?s\<rangle> \<Rightarrow>\<^sub>s ?t ==>
      ?t = ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_hole 1),
                template_var 1),
              template_var 0)
            )],
       template_equation (template_var 0, template_var 1))),
    ("Alternative_Semantics.c",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> ?rs \<Rightarrow>\<^sub>z ?t ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, Undecided\<rangle> \<Rightarrow>\<^sub>s ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_hole 0),
             template_var 0)
           ))),
    ("Alternative_Semantics.a",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow>\<^sub>s ?t ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Alternative_Semantics.empty_nz",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> ?rs \<Rightarrow>\<^sub>z ?t ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile> Rule ?m Empty #
   ?rs \<Rightarrow>\<^sub>z ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 5),
                   template_var 4),
                 template_var 3),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_hole 0)),
                 template_var 2)),
             template_var 1)
           ))),
    ("Alternative_Semantics.log_nz",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> ?rs \<Rightarrow>\<^sub>z ?t ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile> Rule ?m Log #
   ?rs \<Rightarrow>\<^sub>z ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 5),
                   template_var 4),
                 template_var 3),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_hole 0)),
                 template_var 2)),
             template_var 1)
           ))),
    ("Alternative_Semantics.r_tail",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> ?rs1.0 \<Rightarrow>\<^sub>r Decision
                                 ?X ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile> ?rs1.0 @
   ?rs2.0 \<Rightarrow>\<^sub>r Decision ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 4),
                 template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app (template_hole 1, template_var 1))
           ))),
    ("Alternative_Semantics.r_appendD",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> ?rs1.0 @
   ?rs2.0 \<Rightarrow>\<^sub>r ?t ==>
      EX s. ?\<Gamma>,?\<gamma>,?p\<turnstile> ?rs1.0 \<Rightarrow>\<^sub>r s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4),
                  template_var 3),
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Alternative_Semantics.ex_no_call'",
     "finite (dom ?\<Gamma>) ==>
      EX c. ?\<Gamma> c = None & (ALL rs:ran ?\<Gamma>. no_call_to c rs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 0))
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Alternative_Semantics.e",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> ?rs \<Rightarrow>\<^sub>z ?t;
         ?s = Undecided |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile> ?rs \<Rightarrow>\<^sub>r ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation (template_var 0, template_hole 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("Alternative_Semantics.decided_determ",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs\<^sub>1, ?s\<rangle> \<Rightarrow>\<^sub>s ?t;
         ?s = Decision ?X |]
      ==> ?t = Decision ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 2, template_app (template_hole 0, template_var 0))],
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Alternative_Semantics.decided",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs\<^sub>1, Undecided\<rangle> \<Rightarrow>\<^sub>s Decision
                             ?X ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs\<^sub>1 @
            ?rs\<^sub>2, Undecided\<rangle> \<Rightarrow>\<^sub>s Decision
                             ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_hole 2),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0)),
               template_hole 2),
             template_app (template_hole 1, template_var 1))
           ))),
    ("Alternative_Semantics.d",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow>\<^sub>s ?t;
         ?s = Undecided |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile> ?rs \<Rightarrow>\<^sub>z ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_equation (template_var 1, template_hole 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Alternative_Semantics.r_no_call",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> Rule MatchAny (Call ?c) #
      ?rs \<Rightarrow>\<^sub>r ?t;
         ?\<Gamma> ?c = None |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_var 5),
                    template_var 4),
                  template_var 3),
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_hole 4),
                      template_app (template_hole 3, template_var 2))),
                  template_var 1)),
              template_var 0)
            ),
        template_equation
         (template_app (template_var 5, template_var 2), template_hole 1)],
       template_predicate (template_hole 0))),
    ("Alternative_Semantics.b",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t;
         ?s = Undecided |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow>\<^sub>s ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_equation (template_var 1, template_hole 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Alternative_Semantics.all_chains_no_call_upd",
     "all_chains (no_call_to ?c) ?\<Gamma> ?rs ==>
      ?\<Gamma>(?c |->
      ?x),?\<gamma>,?p\<turnstile> ?rs \<Rightarrow>\<^sub>z ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile> ?rs \<Rightarrow>\<^sub>z ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 6)),
                template_var 5),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 5),
                       template_var 6),
                     template_app (template_hole 0, template_var 3))),
                 template_var 2),
               template_var 1),
             template_var 4),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 5),
                 template_var 2),
               template_var 1),
             template_var 4),
           template_var 0)))),
    ("Alternative_Semantics.all_chains_no_call_upd_r",
     "all_chains (no_call_to ?c) ?\<Gamma> ?rs ==>
      ?\<Gamma>(?c |->
      ?x),?\<gamma>,?p\<turnstile> ?rs \<Rightarrow>\<^sub>r ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile> ?rs \<Rightarrow>\<^sub>r ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 6)),
                template_var 5),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 5),
                       template_var 6),
                     template_app (template_hole 0, template_var 3))),
                 template_var 2),
               template_var 1),
             template_var 4),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 5),
                 template_var 2),
               template_var 1),
             template_var 4),
           template_var 0)))),
    ("Alternative_Semantics.all_chains_no_call_upd_orig",
     "all_chains (no_call_to ?c) ?\<Gamma> ?rs ==>
      ?\<Gamma>(?c |->
      ?x),?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 7)),
                template_var 6),
              template_var 5)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_app (template_hole 1, template_var 6),
                         template_var 7),
                       template_app (template_hole 0, template_var 4))),
                   template_var 3),
                 template_var 2),
               template_var 5),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 6),
                   template_var 3),
                 template_var 2),
               template_var 5),
             template_var 1),
           template_var 0)))),
    ("Alternative_Semantics.returning",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> ?rs\<^sub>1 \<Rightarrow>\<^sub>r Undecided;
         matches ?\<gamma> ?m' ?p |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile> ?rs\<^sub>1 @
       Rule ?m' Return # ?rs\<^sub>2 \<Rightarrow>\<^sub>r Undecided",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 1),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 6, template_var 5),
                   template_var 4),
                 template_var 3),
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_hole 0)),
                   template_var 0))),
             template_hole 5)
           ))),
    ("Alternative_Semantics.seq_ns",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs\<^sub>1, Undecided\<rangle> \<Rightarrow>\<^sub>s ?t;
         ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs\<^sub>2, ?t\<rangle> \<Rightarrow>\<^sub>s ?t' |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs\<^sub>1 @
                ?rs\<^sub>2, Undecided\<rangle> \<Rightarrow>\<^sub>s ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_hole 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 1),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 6),
                     template_var 5),
                   template_var 4),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_hole 1),
             template_var 0)
           ))),
    ("Alternative_Semantics.r_eq_orig'''",
     "[| finite (ran ?\<Gamma>); ALL r:set ?rs. get_action r ~= Return |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile> ?rs \<Rightarrow>\<^sub>r ?t =
          ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, Undecided\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 11,
              template_app (template_hole 10, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 3)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 2),
               template_var 1),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 2),
                 template_var 1),
               template_var 3),
             template_hole 0),
           template_var 0)))),
    ("Alternative_Semantics.r_call_eq",
     "[| ?\<Gamma> ?c = Some ?rs; matches ?\<gamma> ?m ?p |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile> [Rule ?m
         (Call ?c)] \<Rightarrow>\<^sub>r ?t =
          ?\<Gamma>,?\<gamma>,?p\<turnstile> ?rs \<Rightarrow>\<^sub>r ?t",
     template_implication
      ([template_equation
         (template_app (template_var 6, template_var 5),
          template_app (template_hole 7, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 6),
                 template_var 3),
               template_var 1),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_app (template_hole 1, template_var 5))),
               template_hole 0)),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 6),
                 template_var 3),
               template_var 1),
             template_var 4),
           template_var 0)))),
    ("Alternative_Semantics.no_call",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t;
         ?rs = [Rule MatchAny (Call ?c)]; ?s = Undecided;
         ?\<Gamma> ?c = None |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 11, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_app (template_hole 6, template_var 0))),
            template_hole 5)),
        template_equation (template_var 2, template_hole 3),
        template_equation
         (template_app (template_var 6, template_var 0), template_hole 1)],
       template_predicate (template_hole 0))),
    ("Alternative_Semantics.r_eq_orig'",
     "ALL rs:ran ?\<Gamma>. no_call_to ?c rs ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile> [Rule MatchAny
     (Call ?c)] \<Rightarrow>\<^sub>r ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[Rule MatchAny
              (Call ?c)], Undecided\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 4)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_var 4),
                 template_var 2),
               template_var 1),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app (template_hole 3, template_var 3))),
               template_hole 2)),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 2),
                 template_var 1),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_app (template_hole 3, template_var 3))),
                 template_hole 2)),
             template_hole 0),
           template_var 0)))),
    ("Alternative_Semantics.r_eq_orig",
     "[| all_chains (no_call_to ?c) ?\<Gamma> ?rs;
         ?\<Gamma> ?c = Some ?rs |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile> ?rs \<Rightarrow>\<^sub>r ?t =
          ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[Rule MatchAny
                  (Call ?c)], Undecided\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 11, template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_equation
         (template_app (template_var 4, template_var 5),
          template_app (template_hole 9, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_var 4),
                 template_var 2),
               template_var 1),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 6, template_var 4),
                   template_var 2),
                 template_var 1),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_app (template_hole 2, template_var 5))),
                 template_hole 1)),
             template_hole 0),
           template_var 0)))),
    ("Alternative_Semantics.updated_call",
     "[| ?\<Gamma>(?c |->
         ?rs),?\<gamma>,?p\<turnstile> ?rs \<Rightarrow>\<^sub>z ?t;
         matches ?\<gamma> ?m ?p |]
      ==> ?\<Gamma>(?c |->
          ?rs),?\<gamma>,?p\<turnstile> [Rule ?m
    (Call ?c)] \<Rightarrow>\<^sub>z ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app
                         (template_app (template_hole 6, template_var 6),
                          template_var 5),
                        template_app (template_hole 5, template_var 4))),
                    template_var 3),
                  template_var 2),
                template_var 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_app (template_hole 6, template_var 6),
                         template_var 5),
                       template_app (template_hole 5, template_var 4))),
                   template_var 3),
                 template_var 2),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_app (template_hole 1, template_var 5))),
                 template_hole 0)),
             template_var 1)
           ))),
    ("Alternative_Semantics.f",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> ?rs \<Rightarrow>\<^sub>r ?t;
         matches ?\<gamma> ?m ?p;
         all_chains (no_call_to ?c) ?\<Gamma> ?rs |]
      ==> ?\<Gamma>(?c |->
          ?rs),?\<gamma>,?p\<turnstile> [Rule ?m
    (Call ?c)] \<Rightarrow>\<^sub>z ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 10, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 5),
                template_var 1),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 0)),
                template_var 6),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_app (template_hole 5, template_var 6),
                         template_var 0),
                       template_app (template_hole 4, template_var 3))),
                   template_var 5),
                 template_var 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_app (template_hole 1, template_var 0))),
                 template_hole 0)),
             template_var 2)
           ))),
    ("Alternative_Semantics.r_seq",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> ?rs1.0 \<Rightarrow>\<^sub>r Undecided;
         ALL r:set ?rs1.0.
            ~ (get_action r = Return & matches ?\<gamma> (get_match r) ?p);
         ?\<Gamma>,?\<gamma>,?p\<turnstile> ?rs2.0 \<Rightarrow>\<^sub>r ?t |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile> ?rs1.0 @
       ?rs2.0 \<Rightarrow>\<^sub>r ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 11, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_hole 10)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 2)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 11, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 11, template_var 5),
                   template_var 4),
                 template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("Alternative_Semantics.call_eq",
     "[| ?\<Gamma> ?c = Some ?rs; matches ?\<gamma> ?m ?p;
         ALL r:set ?rs. get_action r ~= Return |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[Rule ?m
                  (Call ?c)], ?s\<rangle> \<Rightarrow> ?t =
          ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_equation
         (template_app (template_var 7, template_var 6),
          template_app (template_hole 13, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 5)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_var 7),
                   template_var 4),
                 template_var 2),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_app (template_hole 1, template_var 6))),
                 template_hole 0)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_var 7),
                   template_var 4),
                 template_var 2),
               template_var 5),
             template_var 1),
           template_var 0)))),
    ("Alternative_Semantics.iptables_bigstep_r_eq",
     "[| ALL rs:ran ?\<Gamma>. no_call_to ?c rs; ?A = Accept | ?A = Drop |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile> [Rule MatchAny (Call ?c),
        Rule MatchAny ?A] \<Rightarrow>\<^sub>r ?t =
          ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[Rule MatchAny
                  (Call ?c),
                 Rule MatchAny ?A], Undecided\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app (template_hole 14, template_var 5)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_hole 10)),
              template_app
               (template_app (template_hole 11, template_var 3),
                template_hole 9))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_var 5),
                 template_var 2),
               template_var 1),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app (template_hole 3, template_var 4))),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_var 3)),
                 template_hole 2))),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 2),
                 template_var 1),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_app (template_hole 3, template_var 4))),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_hole 4),
                       template_var 3)),
                   template_hole 2))),
             template_hole 0),
           template_var 0)))),
    ("Alternative_Semantics.upd_callD",
     "[| ?\<Gamma>(?c |->
         ?rs),?\<gamma>,?p\<turnstile> [Rule ?m
   (Call ?c)] \<Rightarrow>\<^sub>z ?t;
         matches ?\<gamma> ?m ?p |]
      ==> ?\<Gamma>(?c |->
          ?rs),?\<gamma>,?p\<turnstile> ?rs \<Rightarrow>\<^sub>z ?t |
          (EX rs\<^sub>1 rs\<^sub>2 m'.
              ?rs = rs\<^sub>1 @ Rule m' Return # rs\<^sub>2 &
              matches ?\<gamma> m' ?p &
              ?\<Gamma>(?c |->
              ?rs),?\<gamma>,?p\<turnstile> rs\<^sub>1 \<Rightarrow>\<^sub>z Undecided &
              ?t = Undecided)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_hole 16,
                      template_app
                       (template_app
                         (template_app (template_hole 15, template_var 6),
                          template_var 5),
                        template_app (template_hole 14, template_var 4))),
                    template_var 3),
                  template_var 2),
                template_app
                 (template_app
                   (template_hole 13,
                    template_app
                     (template_app (template_hole 12, template_var 1),
                      template_app (template_hole 11, template_var 5))),
                  template_hole 10)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 3),
                template_var 1),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_hole 16,
                         template_app
                          (template_app
                            (template_app
                              (template_hole 15, template_var 6),
                             template_var 5),
                           template_app
                            (template_hole 14, template_var 4))),
                       template_var 3),
                     template_var 2),
                   template_var 4),
                 template_var 0)),
             template_app (template_hole 7, t_empty))
           )))]:
   (string * thm * template) list
### theory "Draft.Alternative_SemanticsTemplates"
### 0.449s elapsed time, 0.601s cpu time, 0.081s GC time
val it = (): unit
