   [("No_Spoof_Embeddings.approximating_imp_booloan_semantics_nospoofing",
     "[| matcher_agree_on_exact_matches ?\<gamma> common_matcher;
         simple_ruleset ?rs; no_spoofing TYPE(?'pkt_ext) ?ipassmt ?rs |]
      ==> ALL iface:dom ?ipassmt.
             ALL p.
                ?\<Gamma>,?\<gamma>,p
                (| p_iiface :=
                     iface_sel
                      iface |)\<turnstile> \<langle>?rs, Undecided\<rangle> \<Rightarrow> Decision
               FinalAllow -->
                p_src p : ipcidr_union_set (set (the (?ipassmt iface)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 3),
              template_hole 18)
            ),
        template_predicate
         (template_app (template_hole 17, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 16, template_hole 15),
                template_var 1),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 14,
               template_app (template_hole 13, template_var 1)),
             t_empty)
           ))),
    ("No_Spoof_Embeddings.no_spoofing_executable_set",
     "[| matcher_agree_on_exact_matches ?\<gamma> common_matcher;
         simple_ruleset ?rs;
         ALL r:set ?rs. normalized_nnf_match (get_match r);
         ALL iface:dom ?ipassmt. no_spoofing_iface iface ?ipassmt ?rs;
         ?iface : dom ?ipassmt |]
      ==> _Collect (p_src p)
           (?\<Gamma>,?\<gamma>,p
            (| p_iiface :=
                 iface_sel
                  ?iface |)\<turnstile> \<langle>?rs, Undecided\<rangle> \<Rightarrow> Decision
            FinalAllow)
          <= ipcidr_union_set (set (the (?ipassmt ?iface)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 25, template_var 4),
              template_hole 24)
            ),
        template_predicate
         (template_app (template_hole 23, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app (template_hole 21, template_var 3)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app (template_hole 17, template_var 2)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_app (template_hole 17, template_var 2))
            )],
       template_inequation
        (less_equals, template_app (template_hole 13, t_empty),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app (template_var 2, template_var 1))))))),
    ("No_Spoof_Embeddings.no_spoofing_executable_set_preprocessed",
     "[| matcher_agree_on_exact_matches ?\<gamma> common_matcher;
         simple_ruleset ?rs;
         ALL iface:dom ?ipassmt.
            no_spoofing_iface iface ?ipassmt
             (upper_closure (packet_assume_new ?rs));
         ?iface : dom ?ipassmt |]
      ==> _Collect (p_src p)
           ((match_tcp_flags ipt_tcp_syn (p_tcp_flags p) &
             p_tag_ctstate p = CT_New) &
            ?\<Gamma>,?\<gamma>,p
            (| p_iiface :=
                 iface_sel
                  ?iface |)\<turnstile> \<langle>?rs, Undecided\<rangle> \<Rightarrow> Decision
            FinalAllow)
          <= ipcidr_union_set (set (the (?ipassmt ?iface)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 29, template_var 4),
              template_hole 28)
            ),
        template_predicate
         (template_app (template_hole 27, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 26,
                template_app (template_hole 25, template_var 2)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 21, template_var 1),
              template_app (template_hole 25, template_var 2))
            )],
       template_inequation
        (less_equals, template_app (template_hole 19, t_empty),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app (template_var 2, template_var 1)))))))]
