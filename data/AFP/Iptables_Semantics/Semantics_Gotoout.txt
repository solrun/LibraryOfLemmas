Loading theory "Draft.List_Misc" (required by "Draft.Semantics_GotoTemplates" via "Draft.Semantics_Goto")
Loading theory "Draft.Repeat_Stabilize" (required by "Draft.Semantics_GotoTemplates" via "Draft.Semantics_Goto" via "Draft.Firewall_Common")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Semantics_GotoTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Semantics_GotoTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
### theory "Draft.List_Misc"
### 0.044s elapsed time, 0.202s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Semantics_GotoTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.143s elapsed time, 0.579s cpu time, 0.039s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Semantics_GotoTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "Draft.Repeat_Stabilize"
### 0.150s elapsed time, 0.602s cpu time, 0.039s GC time
Loading theory "Draft.Firewall_Common" (required by "Draft.Semantics_GotoTemplates" via "Draft.Semantics_Goto")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.234s elapsed time, 0.912s cpu time, 0.039s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Semantics_GotoTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.363s elapsed time, 1.437s cpu time, 0.136s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Semantics_GotoTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
Found termination order: "size <*mlex*> {}"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.993s elapsed time, 3.750s cpu time, 0.912s GC time
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.096s elapsed time, 4.008s cpu time, 0.923s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.017s elapsed time, 6.384s cpu time, 1.232s GC time
Loading theory "Draft.Templates" (required by "Draft.Semantics_GotoTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.057s elapsed time, 0.133s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Semantics_GotoTemplates")
Found termination order: "size_list size <*mlex*> {}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.762s elapsed time, 1.854s cpu time, 0.712s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
### theory "Draft.Firewall_Common"
### 8.172s elapsed time, 15.877s cpu time, 3.512s GC time
Loading theory "Draft.Semantics_Goto" (required by "Draft.Semantics_GotoTemplates")
Found termination order: "(%p. size (fst (snd p))) <*mlex*> {}"
Found termination order: "(%p. size_list size (snd (snd p))) <*mlex*> {}"
Proofs for inductive predicate(s) "iptables_goto_bigstep"
  Proving monotonicity ...
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Found termination order:
  "(%p. size_list (%p. size_list size (snd p)) (snd p)) <*mlex*> {}"
Found termination order: "{}"
### theory "Draft.Semantics_Goto"
### 2.540s elapsed time, 3.083s cpu time, 0.295s GC time
Loading theory "Draft.Semantics_GotoTemplates"
val templateLemmas =
   [("Semantics_Goto.terminal_chain_no_matching_Goto",
     "Semantics_Goto.terminal_chain ?rs ==>
      Semantics_Goto.no_matching_Goto ?\<gamma> ?p ?rs",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2)
           ))),
    ("Semantics_Goto.no_matching_Goto_take",
     "Semantics_Goto.no_matching_Goto ?\<gamma> ?p ?rs ==>
      Semantics_Goto.no_matching_Goto ?\<gamma> ?p (take ?n ?rs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Semantics_Goto.no_matching_Goto_append1",
     "Semantics_Goto.no_matching_Goto ?\<gamma> ?p (?rs1.0 @ ?rs2.0) ==>
      Semantics_Goto.no_matching_Goto ?\<gamma> ?p ?rs1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("Semantics_Goto.no_matching_Goto_append2",
     "Semantics_Goto.no_matching_Goto ?\<gamma> ?p (?rs1.0 @ ?rs2.0) ==>
      Semantics_Goto.no_matching_Goto ?\<gamma> ?p ?rs2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Semantics_Goto.no_matching_Goto_tail",
     "Semantics_Goto.no_matching_Goto ?\<gamma> ?p (?r # ?rs) ==>
      Semantics_Goto.no_matching_Goto ?\<gamma> ?p ?rs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Semantics_Goto.iptables_goto_bigstep_to_undecided",
     "?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs, ?s\<rangle> \<Rightarrow> Undecided ==>
      ?s = Undecided",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("Semantics_Goto.add_match_split",
     "Semantics_Goto.add_match ?m (?rs1.0 @ ?rs2.0) =
      Semantics_Goto.add_match ?m ?rs1.0 @
      Semantics_Goto.add_match ?m ?rs2.0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Semantics_Goto.matches_add_match_MatchNot_no_matching_Goto_simp",
     "~ Semantics_Goto.matches ?\<gamma> ?m ?p ==>
      Semantics_Goto.no_matching_Goto ?\<gamma> ?p
       (Semantics_Goto.add_match ?m ?rs)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 2, template_var 3),
                    template_var 2),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Semantics_Goto.no_matching_Goto_head",
     "Semantics_Goto.no_matching_Goto ?\<gamma> ?p (?r # ?rs) ==>
      Semantics_Goto.no_matching_Goto ?\<gamma> ?p [?r]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))
           ))),
    ("Semantics_Goto.iptables_goto_bigstep_to_decision",
     "?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs, Decision
                          ?Y\<rangle> \<Rightarrow> Decision ?X ==>
      ?Y = ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_app (template_hole 1, template_var 1)),
              template_app (template_hole 1, template_var 0))
            )],
       template_equation (template_var 1, template_var 0))),
    ("Semantics_Goto.no_matching_Goto_append",
     "Semantics_Goto.no_matching_Goto ?\<gamma> ?p (?rs1.0 @ ?rs2.0) =
      (Semantics_Goto.no_matching_Goto ?\<gamma> ?p ?rs1.0 &
       Semantics_Goto.no_matching_Goto ?\<gamma> ?p ?rs2.0)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 0)))),
    ("Semantics_Goto.add_match_split_fst",
     "Semantics_Goto.add_match ?m (Rule ?m' ?a' # ?rs) =
      Rule (MatchAnd ?m ?m') ?a' # Semantics_Goto.add_match ?m ?rs",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_var 0)))),
    ("Semantics_Goto.skipD",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?r, ?s\<rangle> \<Rightarrow> ?t;
         ?r = [] |]
      ==> ?s = ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_equation (template_var 2, template_hole 1)],
       template_equation (template_var 1, template_var 0))),
    ("Semantics_Goto.matches_add_match_no_matching_Goto_simp2",
     "[| Semantics_Goto.matches ?\<gamma> ?m ?p;
         Semantics_Goto.no_matching_Goto ?\<gamma> ?p ?rs |]
      ==> Semantics_Goto.no_matching_Goto ?\<gamma> ?p
           (Semantics_Goto.add_match ?m ?rs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Semantics_Goto.matches_add_match_no_matching_Goto_simp",
     "[| Semantics_Goto.matches ?\<gamma> ?m ?p;
         Semantics_Goto.no_matching_Goto ?\<gamma> ?p
          (Semantics_Goto.add_match ?m ?rs) |]
      ==> Semantics_Goto.no_matching_Goto ?\<gamma> ?p ?rs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 1),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0)
           ))),
    ("Semantics_Goto.terminal_chain_decision",
     "[| Semantics_Goto.terminal_chain ?rs;
         ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs, Undecided\<rangle> \<Rightarrow> ?t |]
      ==> EX X. ?t = Decision X",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 3),
                      template_var 2),
                    template_var 1),
                  template_var 4),
                template_hole 3),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Semantics_Goto.decisionD",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?r, ?s\<rangle> \<Rightarrow> ?t;
         ?s = Decision ?X |]
      ==> ?t = Decision ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 2, template_app (template_hole 0, template_var 0))],
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Semantics_Goto.no_matching_Goto_Cons",
     "[| Semantics_Goto.no_matching_Goto ?\<gamma> ?p [?r];
         Semantics_Goto.no_matching_Goto ?\<gamma> ?p ?rs |]
      ==> Semantics_Goto.no_matching_Goto ?\<gamma> ?p (?r # ?rs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_hole 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))
           ))),
    ("Semantics_Goto.no_free_return",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>[Rule ?m
                         Return], Undecided\<rangle> \<Rightarrow> ?t;
         Semantics_Goto.matches ?\<gamma> ?m ?p |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 7, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_app
                   (template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        template_hole 4)),
                    template_hole 3)),
                template_hole 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 1),
              template_var 2)
            )],
       template_predicate (template_hole 0))),
    ("Semantics_Goto.not_no_matching_Goto_singleton_cases",
     "(~ Semantics_Goto.no_matching_Goto ?\<gamma> ?p [Rule ?m ?a]) =
      ((EX chain. ?a = Goto chain) &
       Semantics_Goto.matches ?\<gamma> ?m ?p)",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app
            (template_app (template_hole 8, template_var 3),
             template_var 2),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 0)),
             template_hole 5))),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 2)))),
    ("Semantics_Goto.iptables_goto_bigstep_Undecided_Undecided_deterministic",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs, Undecided\<rangle> \<Rightarrow> Undecided;
         ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs, Undecided\<rangle> \<Rightarrow> ?t |]
      ==> ?t = Undecided",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1),
                template_hole 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1),
                template_hole 1),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("Semantics_Goto.iptables_goto_bigstep_Undecided_deterministic",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs, Undecided\<rangle> \<Rightarrow> ?t;
         ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs, Undecided\<rangle> \<Rightarrow> ?t' |]
      ==> ?t' = ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_hole 1),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_hole 1),
              template_var 0)
            )],
       template_equation (template_var 0, template_var 1))),
    ("Semantics_Goto.iptables_goto_bigstep_deterministic",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t;
         ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t' |]
      ==> ?t = ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Semantics_Goto.matches_add_match_simp_helper",
     "Semantics_Goto.matches ?\<gamma> ?m ?p ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>Semantics_Goto.add_match
                     ?m ?rs, Undecided\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs, Undecided\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 5),
                template_var 4),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 5),
                 template_var 3),
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1)),
             template_hole 0),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 5),
                 template_var 3),
               template_var 1),
             template_hole 0),
           template_var 0)))),
    ("Semantics_Goto.matches_add_match_simp",
     "Semantics_Goto.matches ?\<gamma> ?m ?p ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>Semantics_Goto.add_match
                     ?m ?rs, ?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 6),
                template_var 5),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 6),
                 template_var 4),
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 2)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 6),
                 template_var 4),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Semantics_Goto.rewrite_Goto_chain_safe",
     "Semantics_Goto.rewrite_Goto_chain_safe ?\<Gamma> ?rs = Some ?rs' ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs', ?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 6), template_var 5),
          template_app (template_hole 2, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 6),
                   template_var 3),
                 template_var 2),
               template_var 4),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 6),
                   template_var 3),
                 template_var 2),
               template_var 5),
             template_var 1),
           template_var 0)))),
    ("Semantics_Goto.nomatch'",
     "(!!r. r : set ?rs ==>
            ~ Semantics_Goto.matches ?\<gamma> (get_match r) ?p) ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs, ?s\<rangle> \<Rightarrow> ?s",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 3),
                   template_var 2),
                 template_var 4),
               template_var 0),
             template_var 0)
           ))),
    ("Semantics_Goto.matches_add_match_MatchNot_simp",
     "Semantics_Goto.matches ?\<gamma> ?m ?p ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>Semantics_Goto.add_match
                     (MatchNot ?m) ?rs, ?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>[], ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 6),
                template_var 5),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 6),
                 template_var 4),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 5)),
                 template_var 2)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 6),
                 template_var 4),
               template_hole 0),
             template_var 1),
           template_var 0)))),
    ("Semantics_Goto.not_matches_add_match_simp",
     "~ Semantics_Goto.matches ?\<gamma> ?m ?p ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>Semantics_Goto.add_match
                     ?m ?rs, Undecided\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>[], Undecided\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 5, template_var 5),
                    template_var 4),
                  template_var 3)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 5),
                 template_var 3),
               template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 1)),
             template_hole 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 5),
                 template_var 3),
               template_hole 0),
             template_hole 1),
           template_var 0)))),
    ("Semantics_Goto.not_matches_add_matchNot_simp",
     "~ Semantics_Goto.matches ?\<gamma> ?m ?p ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>Semantics_Goto.add_match
                     (MatchNot ?m) ?rs, ?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 4, template_var 6),
                    template_var 5),
                  template_var 4)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 6),
                 template_var 4),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 5)),
                 template_var 2)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 6),
                 template_var 4),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Semantics_Goto.matches_MatchNot_simp",
     "Semantics_Goto.matches ?\<gamma> ?m ?p ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>[Rule
                      (MatchNot ?m)
                      ?a], Undecided\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>[], Undecided\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 5),
                template_var 4),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 5),
                 template_var 3),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 4)),
                     template_var 1)),
                 template_hole 1)),
             template_hole 0),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 5),
                 template_var 3),
               template_hole 1),
             template_hole 0),
           template_var 0)))),
    ("Semantics_Goto.deny",
     "[| Semantics_Goto.matches ?\<gamma> ?m ?p; ?a = Drop | ?a = Reject |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>[Rule ?m
                          ?a], Undecided\<rangle> \<Rightarrow> Decision
                           FinalDeny",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_hole 8)),
              template_app
               (template_app (template_hole 9, template_var 1),
                template_hole 7))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 6, template_var 0),
                     template_var 4),
                   template_var 2),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 3),
                       template_var 1)),
                   template_hole 3)),
               template_hole 2),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Semantics_Goto.matches_MatchNotAnd_simp",
     "Semantics_Goto.matches ?\<gamma> ?m ?p ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>[Rule
                      (MatchAnd (MatchNot ?m) ?m')
                      ?a], Undecided\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>[], Undecided\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 6),
                template_var 5),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 6, template_var 3),
                   template_var 6),
                 template_var 4),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app (template_hole 2, template_var 5)),
                         template_var 2)),
                     template_var 1)),
                 template_hole 1)),
             template_hole 0),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 6, template_var 3),
                   template_var 6),
                 template_var 4),
               template_hole 1),
             template_hole 0),
           template_var 0)))),
    ("Semantics_Goto.matches_rule_and_simp",
     "Semantics_Goto.matches ?\<gamma> ?m ?p ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>[Rule
                      (MatchAnd ?m ?m') ?a'], ?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>[Rule ?m'
                      ?a'], ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 7),
                template_var 6),
              template_var 5)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_var 4),
                   template_var 7),
                 template_var 5),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 6),
                         template_var 3)),
                     template_var 2)),
                 template_hole 0)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_var 4),
                   template_var 7),
                 template_var 5),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 2)),
                 template_hole 0)),
             template_var 1),
           template_var 0)))),
    ("Semantics_Goto.just_show_all_bigstep_semantics_equalities_with_start_Undecided",
     "?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs1.0, Undecided\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs2.0, Undecided\<rangle> \<Rightarrow> ?t ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs1.0, ?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs2.0, ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_hole 0),
            template_var 2),
          template_app
           (template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 1),
              template_hole 0),
            template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 0),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 1),
             template_var 0),
           template_var 2)))),
    ("Semantics_Goto.seq_cons_Goto_t",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>[Rule ?m
                         (Goto
                           ?chain)], Undecided\<rangle> \<Rightarrow> ?t;
         Semantics_Goto.matches ?\<gamma> ?m ?p |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>Rule ?m
                         (Goto ?chain) #
                        ?rs, Undecided\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 6, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app
                       (template_app (template_hole 4, template_var 3),
                        template_app (template_hole 3, template_var 2))),
                    template_hole 2)),
                template_hole 1),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 5),
                template_var 3),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 6, template_var 6),
                     template_var 5),
                   template_var 4),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 3),
                       template_app (template_hole 3, template_var 2))),
                   template_var 0)),
               template_hole 1),
             template_var 1)
           ))),
    ("Semantics_Goto.emptyD",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?r, ?s\<rangle> \<Rightarrow> ?t;
         ?r = [Rule ?m Empty]; Semantics_Goto.matches ?\<gamma> ?m ?p;
         ?s = Undecided |]
      ==> ?t = Undecided",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 8, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 0),
                template_hole 4)),
            template_hole 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 5),
                template_var 0),
              template_var 4)
            ),
        template_equation (template_var 2, template_hole 0)],
       template_equation (template_var 1, template_hole 0))),
    ("Semantics_Goto.logD",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?r, ?s\<rangle> \<Rightarrow> ?t;
         ?r = [Rule ?m Log]; Semantics_Goto.matches ?\<gamma> ?m ?p;
         ?s = Undecided |]
      ==> ?t = Undecided",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 8, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 0),
                template_hole 4)),
            template_hole 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 5),
                template_var 0),
              template_var 4)
            ),
        template_equation (template_var 2, template_hole 0)],
       template_equation (template_var 1, template_hole 0))),
    ("Semantics_Goto.acceptD",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?r, ?s\<rangle> \<Rightarrow> ?t;
         ?r = [Rule ?m Accept]; Semantics_Goto.matches ?\<gamma> ?m ?p;
         ?s = Undecided |]
      ==> ?t = Decision FinalAllow",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 10, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 0),
                template_hole 6)),
            template_hole 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 5),
                template_var 0),
              template_var 4)
            ),
        template_equation (template_var 2, template_hole 2)],
       template_equation
        (template_var 1, template_app (template_hole 1, template_hole 0)))),
    ("Semantics_Goto.dropD",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?r, ?s\<rangle> \<Rightarrow> ?t;
         ?r = [Rule ?m Drop]; Semantics_Goto.matches ?\<gamma> ?m ?p;
         ?s = Undecided |]
      ==> ?t = Decision FinalDeny",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 10, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 0),
                template_hole 6)),
            template_hole 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 5),
                template_var 0),
              template_var 4)
            ),
        template_equation (template_var 2, template_hole 2)],
       template_equation
        (template_var 1, template_app (template_hole 1, template_hole 0)))),
    ("Semantics_Goto.rejectD",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?r, ?s\<rangle> \<Rightarrow> ?t;
         ?r = [Rule ?m Reject]; Semantics_Goto.matches ?\<gamma> ?m ?p;
         ?s = Undecided |]
      ==> ?t = Decision FinalDeny",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 10, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 0),
                template_hole 6)),
            template_hole 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 5),
                template_var 0),
              template_var 4)
            ),
        template_equation (template_var 2, template_hole 2)],
       template_equation
        (template_var 1, template_app (template_hole 1, template_hole 0)))),
    ("Semantics_Goto.nomatchD",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?r, ?s\<rangle> \<Rightarrow> ?t;
         ?r = [Rule ?m ?a]; ?s = Undecided;
         ~ Semantics_Goto.matches ?\<gamma> ?m ?p |]
      ==> ?t = Undecided",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 8, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_var 4,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0)),
            template_hole 4)),
        template_equation (template_var 3, template_hole 2),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 0, template_var 6),
                    template_var 1),
                  template_var 5)
                )
            )],
       template_equation (template_var 2, template_hole 2))),
    ("Semantics_Goto.replace_Goto_with_Call_in_terminal_chain_Undecided",
     "[| ?\<Gamma> ?chain = Some ?rs; Semantics_Goto.terminal_chain ?rs |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>[Rule ?m
                          (Goto
                            ?chain)], Undecided\<rangle> \<Rightarrow> ?t =
          ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>[Rule ?m
                          (Call
                            ?chain)], Undecided\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_equation
         (template_app (template_var 6, template_var 5),
          template_app (template_hole 9, template_var 4)),
        template_predicate
         (template_app (template_hole 8, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 6, template_var 6),
                   template_var 3),
                 template_var 2),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_app (template_hole 3, template_var 5))),
                 template_hole 2)),
             template_hole 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 6, template_var 6),
                   template_var 3),
                 template_var 2),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_app (template_hole 0, template_var 5))),
                 template_hole 2)),
             template_hole 1),
           template_var 0)))),
    ("Semantics_Goto.replace_Goto_with_Call_in_terminal_chain",
     "[| ?\<Gamma> ?chain = Some ?rs; Semantics_Goto.terminal_chain ?rs |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>[Rule ?m
                          (Goto ?chain)], ?s\<rangle> \<Rightarrow> ?t =
          ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>[Rule ?m
                          (Call ?chain)], ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_equation
         (template_app (template_var 7, template_var 6),
          template_app (template_hole 8, template_var 5)),
        template_predicate
         (template_app (template_hole 7, template_var 5))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 5, template_var 7),
                   template_var 4),
                 template_var 3),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_app (template_hole 2, template_var 6))),
                 template_hole 1)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 5, template_var 7),
                   template_var 4),
                 template_var 3),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_app (template_hole 0, template_var 6))),
                 template_hole 1)),
             template_var 1),
           template_var 0)))),
    ("Semantics_Goto.seq_cons",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>[?r], Undecided\<rangle> \<Rightarrow> ?t;
         ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs, ?t\<rangle> \<Rightarrow> ?t';
         Semantics_Goto.no_matching_Goto ?\<gamma> ?p [?r] |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?r #
                        ?rs, Undecided\<rangle> \<Rightarrow> ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_hole 2)),
                template_hole 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 1),
                template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 5),
                template_var 4),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 4, template_var 6),
                     template_var 5),
                   template_var 4),
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 1)),
               template_hole 1),
             template_var 0)
           ))),
    ("Semantics_Goto.seq'_cons",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>[?r], ?s\<rangle> \<Rightarrow> ?t;
         ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs, ?t\<rangle> \<Rightarrow> ?t';
         Semantics_Goto.no_matching_Goto ?\<gamma> ?p [?r] |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?r #
                        ?rs, ?s\<rangle> \<Rightarrow> ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_app
                   (template_app (template_hole 2, template_var 4),
                    template_hole 1)),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 1),
                template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 6),
                template_var 5),
              template_app
               (template_app (template_hole 2, template_var 4),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_var 7),
                     template_var 6),
                   template_var 5),
                 template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 1)),
               template_var 3),
             template_var 0)
           ))),
    ("Semantics_Goto.terminal_chain_Goto_decision",
     "[| ?\<Gamma> ?chain = Some ?rs; Semantics_Goto.terminal_chain ?rs;
         Semantics_Goto.matches ?\<gamma> ?m ?p;
         ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>[Rule ?m
                         (Goto ?chain)], ?s\<rangle> \<Rightarrow> ?t |]
      ==> EX X. ?t = Decision X",
     template_implication
      ([template_equation
         (template_app (template_var 7, template_var 6),
          template_app (template_hole 10, template_var 5)),
        template_predicate (template_app (template_hole 9, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 7, template_var 7),
                      template_var 4),
                    template_var 2),
                  template_app
                   (template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 3),
                        template_app (template_hole 4, template_var 6))),
                    template_hole 3)),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Semantics_Goto.step_IH_cong",
     "(!!s. ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs1.0, s\<rangle> \<Rightarrow> ?t =
            ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs2.0, s\<rangle> \<Rightarrow> ?t) ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?r #
                    ?rs1.0, ?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?r #
                    ?rs2.0, ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 7),
                   template_var 6),
                 template_var 5),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 4)),
             template_var 0),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 7),
                   template_var 6),
                 template_var 5),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_var 0),
           template_var 3)))),
    ("Semantics_Goto.seq'",
     "[| ?rs = ?rs\<^sub>1 @ ?rs\<^sub>2;
         ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs\<^sub>1, ?s\<rangle> \<Rightarrow> ?t;
         ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs\<^sub>2, ?t\<rangle> \<Rightarrow> ?t';
         Semantics_Goto.no_matching_Goto ?\<gamma> ?p ?rs\<^sub>1 |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t'",
     template_implication
      ([template_equation
         (template_var 8,
          template_app
           (template_app (template_hole 2, template_var 7),
            template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 7),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 6),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 4),
                template_var 3),
              template_var 7)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 8),
               template_var 2),
             template_var 0)
           ))),
    ("Semantics_Goto.unfold_Goto_Undecided",
     "[| ?\<Gamma> ?chain = Some ?rs;
         Semantics_Goto.no_matching_Goto ?\<gamma> ?p ?rs |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>Rule ?m
                         (Goto ?chain) #
                        ?rest, Undecided\<rangle> \<Rightarrow> ?t =
          ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>Semantics_Goto.add_match
                         ?m ?rs @
                        Semantics_Goto.add_match (MatchNot ?m)
                         ?rest, Undecided\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_equation
         (template_app (template_var 7, template_var 6),
          template_app (template_hole 10, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 4),
                template_var 3),
              template_var 5)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 7, template_var 7),
                   template_var 4),
                 template_var 3),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_app (template_hole 4, template_var 6))),
                 template_var 1)),
             template_hole 3),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 7, template_var 7),
                   template_var 4),
                 template_var 3),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 5)),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 2)),
                   template_var 1))),
             template_hole 3),
           template_var 0)))),
    ("Semantics_Goto.unfold_Goto",
     "[| ?\<Gamma> ?chain = Some ?rs;
         Semantics_Goto.no_matching_Goto ?\<gamma> ?p ?rs |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>Rule ?m
                         (Goto ?chain) #
                        ?rest, ?s\<rangle> \<Rightarrow> ?t =
          ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>Semantics_Goto.add_match
                         ?m ?rs @
                        Semantics_Goto.add_match (MatchNot ?m)
                         ?rest, ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_equation
         (template_app (template_var 8, template_var 7),
          template_app (template_hole 9, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 5),
                template_var 4),
              template_var 6)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 6, template_var 8),
                   template_var 5),
                 template_var 4),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 3),
                     template_app (template_hole 3, template_var 7))),
                 template_var 2)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 6, template_var 8),
                   template_var 5),
                 template_var 4),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 6)),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 3)),
                   template_var 2))),
             template_var 1),
           template_var 0)))),
    ("Semantics_Goto.not_no_matching_Goto_cases",
     "[| ~ Semantics_Goto.no_matching_Goto ?\<gamma> ?p ?rs; ?rs ~= [] |]
      ==> EX rs1 m chain rs2.
             ?rs = rs1 @ Rule m (Goto chain) # rs2 &
             Semantics_Goto.no_matching_Goto ?\<gamma> ?p rs1 &
             Semantics_Goto.matches ?\<gamma> m ?p",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 11, template_var 2),
                    template_var 1),
                  template_var 0)
                )
            ),
        template_negation
         (template_equation (template_var 0, template_hole 9))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("Semantics_Goto.seq_cons_Goto_Undecided",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>[Rule ?m
                         (Goto
                           ?chain)], Undecided\<rangle> \<Rightarrow> Undecided;
         ~ Semantics_Goto.matches ?\<gamma> ?m ?p ==>
         ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs, Undecided\<rangle> \<Rightarrow> Undecided |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>Rule ?m
                         (Goto ?chain) #
                        ?rs, Undecided\<rangle> \<Rightarrow> Undecided",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 7, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_app
                   (template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 2),
                        template_app (template_hole 4, template_var 1))),
                    template_hole 3)),
                template_hole 2),
              template_hole 2)
            ),
        template_implication
         ([template_negation
            (
               template_predicate
                (
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 2),
                     template_var 3)
                   )
               )],
          template_predicate
           (
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 7, template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 0),
                  template_hole 2),
                template_hole 2)
              ))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 7, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 2),
                       template_app (template_hole 4, template_var 1))),
                   template_var 0)),
               template_hole 2),
             template_hole 2)
           ))),
    ("Semantics_Goto.gotoD",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?r, ?s\<rangle> \<Rightarrow> ?t;
         ?r = [Rule ?m (Goto ?chain)]; ?s = Undecided;
         Semantics_Goto.matches ?\<gamma> ?m ?p |]
      ==> EX rs.
             ?\<Gamma> ?chain = Some rs &
             ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>rs, ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 12, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_var 4,
          template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_var 1),
                template_app (template_hole 8, template_var 0))),
            template_hole 7)),
        template_equation (template_var 3, template_hole 5),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 6),
                template_var 1),
              template_var 5)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Semantics_Goto.seqE",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs\<^sub>1 @
                       ?rs\<^sub>2, ?s\<rangle> \<Rightarrow> ?t;
         !!ti. [| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs\<^sub>1, ?s\<rangle> \<Rightarrow> ti;
                  ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs\<^sub>2, ti\<rangle> \<Rightarrow> ?t;
                  Semantics_Goto.no_matching_Goto ?\<gamma> ?p
                   ?rs\<^sub>1 |]
               ==> ?thesis;
         [| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs\<^sub>1, ?s\<rangle> \<Rightarrow> ?t;
            ~ Semantics_Goto.no_matching_Goto ?\<gamma> ?p ?rs\<^sub>1 |]
         ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 4, template_var 7),
                         template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 2),
                 template_var 1)
               )],
          template_implication
           ([template_negation
              (
                 template_predicate
                  (
                     template_app
                      (template_app
                        (template_app (template_hole 1, template_var 6),
                         template_var 5),
                       template_var 4)
                     )
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Semantics_Goto.seq_split",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t;
         ?rs = ?rs\<^sub>1 @ ?rs\<^sub>2;
         !!t'. [| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs\<^sub>1, ?s\<rangle> \<Rightarrow> t';
                  ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs\<^sub>2, t'\<rangle> \<Rightarrow> ?t;
                  Semantics_Goto.no_matching_Goto ?\<gamma> ?p
                   ?rs\<^sub>1 |]
               ==> ?thesis;
         [| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs\<^sub>1, ?s\<rangle> \<Rightarrow> ?t;
            ~ Semantics_Goto.no_matching_Goto ?\<gamma> ?p ?rs\<^sub>1 |]
         ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 5, template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_equation
         (template_var 5,
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 5, template_var 8),
                         template_var 7),
                       template_var 6),
                     template_var 2),
                   template_var 4),
                 template_var 3)
               )],
          template_implication
           ([template_negation
              (
                 template_predicate
                  (
                     template_app
                      (template_app
                        (template_app (template_hole 1, template_var 7),
                         template_var 6),
                       template_var 2)
                     )
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Semantics_Goto.seqE_cons",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?r #
                       ?rs, ?s\<rangle> \<Rightarrow> ?t;
         !!ti. [| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>[?r], ?s\<rangle> \<Rightarrow> ti;
                  ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs, ti\<rangle> \<Rightarrow> ?t;
                  Semantics_Goto.no_matching_Goto ?\<gamma> ?p [?r] |]
               ==> ?thesis;
         [| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>[?r], ?s\<rangle> \<Rightarrow> ?t;
            ~ Semantics_Goto.no_matching_Goto ?\<gamma> ?p [?r] |]
         ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 5, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_app
                   (template_app (template_hole 4, template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 5, template_var 7),
                         template_var 6),
                       template_var 5),
                     template_app
                      (template_app (template_hole 4, template_var 4),
                       template_hole 2)),
                   template_var 2),
                 template_var 1)
               )],
          template_implication
           ([template_negation
              (
                 template_predicate
                  (
                     template_app
                      (template_app
                        (template_app (template_hole 1, template_var 6),
                         template_var 5),
                       template_app
                        (template_app (template_hole 4, template_var 4),
                         template_hole 2))
                     )
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Semantics_Goto.seqE_cons_Undecided",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?r #
                       ?rs, Undecided\<rangle> \<Rightarrow> ?t;
         !!ti. [| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>[?r], Undecided\<rangle> \<Rightarrow> ti;
                  ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs, ti\<rangle> \<Rightarrow> ?t;
                  Semantics_Goto.no_matching_Goto ?\<gamma> ?p [?r] |]
               ==> ?thesis;
         !!m chain rs'.
            [| ?r = Rule m (Goto chain);
               ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>[Rule m
                               (Goto
                                 chain)], Undecided\<rangle> \<Rightarrow> ?t;
               Semantics_Goto.matches ?\<gamma> m ?p;
               ?\<Gamma> chain = Some rs' |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 14, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_app
                   (template_app (template_hole 13, template_var 3),
                    template_var 2)),
                template_hole 12),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_var 0))),
    ("Semantics_Goto.callD",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?r, ?s\<rangle> \<Rightarrow> ?t;
         ?r = [Rule ?m (Call ?chain)]; ?s = Undecided;
         Semantics_Goto.matches ?\<gamma> ?m ?p;
         ?\<Gamma> ?chain = Some ?rs;
         ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t ==>
         ?thesis;
         !!rs\<^sub>1 rs\<^sub>2 m'.
            [| ?rs = rs\<^sub>1 @ Rule m' Return # rs\<^sub>2;
               Semantics_Goto.matches ?\<gamma> m' ?p;
               ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>rs\<^sub>1, ?s\<rangle> \<Rightarrow> Undecided;
               Semantics_Goto.no_matching_Goto ?\<gamma> ?p rs\<^sub>1;
               ?t = Undecided |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 15, template_var 9),
                      template_var 8),
                    template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_equation
         (template_var 6,
          template_app
           (template_app
             (template_hole 13,
              template_app
               (template_app (template_hole 12, template_var 3),
                template_app (template_hole 11, template_var 2))),
            template_hole 10)),
        template_equation (template_var 5, template_hole 8),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 8),
                template_var 3),
              template_var 7)
            ),
        template_equation
         (template_app (template_var 9, template_var 2),
          template_app (template_hole 5, template_var 1)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 15, template_var 9),
                         template_var 8),
                       template_var 7),
                     template_var 1),
                   template_var 5),
                 template_var 4)
               )],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Semantics_Goto.iptables_goto_bigstep_induct",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t;
         !!t. ?P [] t t;
         !!m a.
            [| Semantics_Goto.matches ?\<gamma> m ?p; a = Accept |]
            ==> ?P [Rule m a] Undecided (Decision FinalAllow);
         !!m a.
            [| Semantics_Goto.matches ?\<gamma> m ?p;
               a = Drop | a = Reject |]
            ==> ?P [Rule m a] Undecided (Decision FinalDeny);
         !!m a.
            [| Semantics_Goto.matches ?\<gamma> m ?p; a = Log | a = Empty |]
            ==> ?P [Rule m a] Undecided Undecided;
         !!m a.
            ~ Semantics_Goto.matches ?\<gamma> m ?p ==>
            ?P [Rule m a] Undecided Undecided;
         !!rs X. ?P rs (Decision X) (Decision X);
         !!rs rs\<^sub>1 rs\<^sub>2 t t'.
            [| rs = rs\<^sub>1 @ rs\<^sub>2;
               ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>rs\<^sub>1, Undecided\<rangle> \<Rightarrow> t;
               ?P rs\<^sub>1 Undecided t;
               ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>rs\<^sub>2, t\<rangle> \<Rightarrow> t';
               ?P rs\<^sub>2 t t';
               Semantics_Goto.no_matching_Goto ?\<gamma> ?p rs\<^sub>1 |]
            ==> ?P rs Undecided t';
         !!m a chain rs\<^sub>1 m' rs\<^sub>2.
            [| Semantics_Goto.matches ?\<gamma> m ?p; a = Call chain;
               ?\<Gamma> chain =
               Some (rs\<^sub>1 @ [Rule m' Return] @ rs\<^sub>2);
               Semantics_Goto.matches ?\<gamma> m' ?p;
               ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>rs\<^sub>1, Undecided\<rangle> \<Rightarrow> Undecided;
               Semantics_Goto.no_matching_Goto ?\<gamma> ?p rs\<^sub>1;
               ?P rs\<^sub>1 Undecided Undecided |]
            ==> ?P [Rule m a] Undecided Undecided;
         !!m a chain rs t.
            [| Semantics_Goto.matches ?\<gamma> m ?p; a = Call chain;
               ?\<Gamma> chain = Some rs;
               ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>rs, Undecided\<rangle> \<Rightarrow> t;
               ?P rs Undecided t |]
            ==> ?P [Rule m a] Undecided t;
         !!m a chain rs rest X.
            [| Semantics_Goto.matches ?\<gamma> m ?p; a = Goto chain;
               ?\<Gamma> chain = Some rs;
               ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>rs, Undecided\<rangle> \<Rightarrow> Decision
                             X;
               ?P rs Undecided (Decision X) |]
            ==> ?P (Rule m a # rest) Undecided (Decision X);
         !!m a chain rs rest.
            [| Semantics_Goto.matches ?\<gamma> m ?p; a = Goto chain;
               ?\<Gamma> chain = Some rs;
               ?\<Gamma>,?\<gamma>,?p\<turnstile>\<^sub>g \<langle>rs, Undecided\<rangle> \<Rightarrow> Undecided;
               ?P rs Undecided Undecided |]
            ==> ?P (Rule m a # rest) Undecided Undecided |]
      ==> ?P ?rs ?s ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 30, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 29, t_empty)),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_predicate (template_app (template_hole 27, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_var 0, template_var 3),
               template_var 2),
             template_var 1)
           )))]:
   (string * thm * template) list
### theory "Draft.Semantics_GotoTemplates"
### 0.441s elapsed time, 0.588s cpu time, 0.088s GC time
val it = (): unit
