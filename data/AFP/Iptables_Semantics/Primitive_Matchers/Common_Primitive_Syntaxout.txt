Loading theory "Draft.Negation_Type" (required by "Draft.Common_Primitive_SyntaxTemplates" via "Draft.Common_Primitive_Syntax" via "Draft.IpAddresses" via "Draft.WordInterval_Lists")
Loading theory "Draft.Datatype_Selectors" (required by "Draft.Common_Primitive_SyntaxTemplates" via "Draft.Common_Primitive_Syntax")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Common_Primitive_SyntaxTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Common_Primitive_SyntaxTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "{}"
### theory "Draft.Datatype_Selectors"
### 0.118s elapsed time, 0.485s cpu time, 0.050s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Common_Primitive_SyntaxTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.135s elapsed time, 0.551s cpu time, 0.050s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Common_Primitive_SyntaxTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.222s elapsed time, 0.872s cpu time, 0.097s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Common_Primitive_SyntaxTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.352s elapsed time, 1.399s cpu time, 0.147s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Common_Primitive_SyntaxTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
### theory "Draft.Negation_Type"
### 0.812s elapsed time, 3.193s cpu time, 0.356s GC time
Loading theory "Draft.Conntrack_State" (required by "Draft.Common_Primitive_SyntaxTemplates" via "Draft.Common_Primitive_Syntax" via "Draft.Tagged_Packet")
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.902s elapsed time, 3.416s cpu time, 0.751s GC time
Loading theory "Draft.L4_Protocol_Flags" (required by "Draft.Common_Primitive_SyntaxTemplates" via "Draft.Common_Primitive_Syntax")
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.001s elapsed time, 3.789s cpu time, 0.822s GC time
Loading theory "Draft.WordInterval_Lists" (required by "Draft.Common_Primitive_SyntaxTemplates" via "Draft.Common_Primitive_Syntax" via "Draft.IpAddresses")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
instantiation
  ctstate :: enum
  enum_ctstate == enum_class.enum :: ctstate list
  enum_all_ctstate == enum_class.enum_all :: (ctstate => bool) => bool
  enum_ex_ctstate == enum_class.enum_ex :: (ctstate => bool) => bool
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "{}"
### theory "Draft.WordInterval_Lists"
### 0.388s elapsed time, 1.521s cpu time, 0.107s GC time
Loading theory "Draft.IpAddresses" (required by "Draft.Common_Primitive_SyntaxTemplates" via "Draft.Common_Primitive_Syntax")
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Conntrack_State"
### 1.024s elapsed time, 3.885s cpu time, 0.773s GC time
Loading theory "Draft.Tagged_Packet" (required by "Draft.Common_Primitive_SyntaxTemplates" via "Draft.Common_Primitive_Syntax")
### theory "Draft.L4_Protocol_Flags"
### 0.581s elapsed time, 2.255s cpu time, 0.231s GC time
Loading theory "Draft.Ports" (required by "Draft.Common_Primitive_SyntaxTemplates" via "Draft.Common_Primitive_Syntax")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.968s elapsed time, 7.576s cpu time, 1.120s GC time
Loading theory "Draft.Templates" (required by "Draft.Common_Primitive_SyntaxTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list (%p. size (snd p)) <*mlex*> {}"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.082s elapsed time, 0.315s cpu time, 0.072s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Common_Primitive_SyntaxTemplates")
### theory "Draft.Tagged_Packet"
### 0.523s elapsed time, 2.040s cpu time, 0.178s GC time
"Some {CT_New}"
  :: "ctstate set option"
"False"
  :: "bool"
### theory "Draft.Ports"
### 0.937s elapsed time, 3.665s cpu time, 0.288s GC time
Found termination order: "{}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.706s elapsed time, 2.697s cpu time, 0.220s GC time
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.IpAddresses"
### 1.332s elapsed time, 4.803s cpu time, 0.437s GC time
Loading theory "Draft.Common_Primitive_Syntax" (required by "Draft.Common_Primitive_SyntaxTemplates")
"(| p_iiface = ''eth1'', p_oiface = [], p_src = 0, p_dst = 0, p_proto = 6,
    p_sport = 0, p_dport = 0, p_tcp_flags = {TCP_SYN},
    p_payload = ''arbitrary payload'', p_tag_ctstate = CT_New |)"
  :: "32 tagged_packet"
### theory "Draft.Common_Primitive_Syntax"
### 2.844s elapsed time, 3.922s cpu time, 1.281s GC time
Loading theory "Draft.Common_Primitive_SyntaxTemplates"
"(| p_iiface = ''eth0'', p_oiface = ''eth1'', p_src = 3232236077,
    p_dst = 2915201135, p_proto = 6, p_sport = 2065, p_dport = 80,
    p_tcp_flags = {TCP_ACK}, p_payload = ''GET / HTTP/1.0'',
    p_tag_ctstate = CT_Established |)"
  :: "32 tagged_packet"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.Common_Primitive_SyntaxTemplates"
### 0.899s elapsed time, 1.913s cpu time, 0.154s GC time
val it = (): unit
