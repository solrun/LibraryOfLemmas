Loading theory "Draft.List_Misc" (required by "Draft.SemanticsTemplates" via "Draft.Semantics")
Loading theory "Draft.Repeat_Stabilize" (required by "Draft.SemanticsTemplates" via "Draft.Semantics" via "Draft.Firewall_Common")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.SemanticsTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.SemanticsTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "Draft.List_Misc"
### 0.045s elapsed time, 0.213s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.SemanticsTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.125s elapsed time, 0.514s cpu time, 0.044s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.SemanticsTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.Repeat_Stabilize"
### 0.139s elapsed time, 0.561s cpu time, 0.044s GC time
Loading theory "Draft.Firewall_Common" (required by "Draft.SemanticsTemplates" via "Draft.Semantics")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.276s elapsed time, 1.058s cpu time, 0.119s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.SemanticsTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.376s elapsed time, 1.495s cpu time, 0.119s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.SemanticsTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.737s elapsed time, 2.888s cpu time, 0.277s GC time
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.087s elapsed time, 3.964s cpu time, 0.908s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.040s elapsed time, 6.454s cpu time, 1.211s GC time
Loading theory "Draft.Templates" (required by "Draft.SemanticsTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.056s elapsed time, 0.128s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.SemanticsTemplates")
Found termination order: "size_list size <*mlex*> {}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.762s elapsed time, 1.897s cpu time, 0.804s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
### theory "Draft.Firewall_Common"
### 7.714s elapsed time, 15.308s cpu time, 3.412s GC time
Loading theory "Draft.Semantics" (required by "Draft.SemanticsTemplates")
Found termination order: "(%p. size (fst (snd p))) <*mlex*> {}"
Proofs for inductive predicate(s) "iptables_bigstep"
  Proving monotonicity ...
locale iptables_bigstep_fixedbackground
  fixes \<Gamma> :: "char list => 'a rule list option"
    and \<gamma> :: "'a => 'p => bool"
Proofs for inductive predicate(s) "iptables_bigstep'"
  Proving monotonicity ...
[| wf (calls_chain \<Gamma>);
   !!x. (!!y. (y, x) : calls_chain \<Gamma> ==>
              EX t. \<Gamma>,\<gamma>,p\<turnstile> \<langle>[Rule m
                         (Call y)], Undecided\<rangle> \<Rightarrow> t) ==>
        EX t. \<Gamma>,\<gamma>,p\<turnstile> \<langle>[Rule m
                   (Call x)], Undecided\<rangle> \<Rightarrow> t |]
==> EX t. \<Gamma>,\<gamma>,p\<turnstile> \<langle>[Rule m
               (Call ?a)], Undecided\<rangle> \<Rightarrow> t
### theory "Draft.Semantics"
### 0.677s elapsed time, 0.782s cpu time, 0.133s GC time
Loading theory "Draft.SemanticsTemplates"
val templateLemmas =
   [("Semantics.called_by_chain_converse",
     "calls_chain ?\<Gamma> = (??.Semantics.called_by_chain ?\<Gamma>)^-1",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Semantics.wf_chain_fst",
     "wf_chain ?\<Gamma> (?r # ?rs) ==> wf_chain ?\<Gamma> ?rs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("Semantics.iptables_bigstep_to_undecided",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> Undecided ==>
      ?s = Undecided",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("Semantics.wf_chain_append",
     "wf_chain ?\<Gamma> (?rs1.0 @ ?rs2.0) =
      (wf_chain ?\<Gamma> ?rs1.0 & wf_chain ?\<Gamma> ?rs2.0)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Semantics.wf_called_by_chain",
     "[| finite (calls_chain ?\<Gamma>); wf (calls_chain ?\<Gamma>) |]
      ==> wf (??.Semantics.called_by_chain ?\<Gamma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 1,
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Semantics.iptables_bigstep_to_decision",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, Decision
                  ?Y\<rangle> \<Rightarrow> Decision ?X ==>
      ?Y = ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_app (template_hole 1, template_var 1)),
              template_app (template_hole 1, template_var 0))
            )],
       template_equation (template_var 1, template_var 0))),
    ("Semantics.sanity_wf_ruleset_wf_chain",
     "[| sanity_wf_ruleset ?\<Gamma>; ?rs : ran (map_of ?\<Gamma>) |]
      ==> wf_chain (map_of ?\<Gamma>) ?rs",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 1)),
             template_var 0)
           ))),
    ("Semantics.iptables_bigstep_rm_LogEmpty",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>rm_LogEmpty
             ?rs, ?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 4),
               template_var 3),
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Semantics.iptables_bigstep_rw_Reject",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>rw_Reject
             ?rs, ?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 4),
               template_var 3),
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Semantics.skipD",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?r, ?s\<rangle> \<Rightarrow> ?t;
         ?r = [] |]
      ==> ?s = ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_equation (template_var 2, template_hole 1)],
       template_equation (template_var 1, template_var 0))),
    ("Semantics.decisionD",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?r, ?s\<rangle> \<Rightarrow> ?t;
         ?s = Decision ?X |]
      ==> ?t = Decision ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 2, template_app (template_hole 0, template_var 0))],
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Semantics.no_free_return",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[Rule ?m
                 Return], Undecided\<rangle> \<Rightarrow> ?t;
         matches ?\<gamma> ?m ?p |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 7, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_app
                   (template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        template_hole 4)),
                    template_hole 3)),
                template_hole 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 1),
              template_var 2)
            )],
       template_predicate (template_hole 0))),
    ("Semantics.iptables_bigstep_deterministic",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t;
         ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t' |]
      ==> ?t = ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Semantics.nomatch'",
     "(!!r. r : set ?rs ==> ~ matches ?\<gamma> (get_match r) ?p) ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> ?s",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 3),
                   template_var 2),
                 template_var 4),
               template_var 0),
             template_var 0)
           ))),
    ("Semantics.empty_empty",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs\<^sub>1 @
            [Rule ?m Empty] @ ?rs\<^sub>2, ?s\<rangle> \<Rightarrow> ?t ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs\<^sub>1 @
            ?rs\<^sub>2, ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 5, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_app
                   (template_app (template_hole 4, template_var 4),
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_app
                           (template_hole 3,
                            template_app
                             (template_app
                               (template_hole 2, template_var 3),
                              template_hole 1)),
                          template_hole 0)),
                      template_var 2))),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 5, template_var 7),
                     template_var 6),
                   template_var 5),
                 template_app
                  (template_app (template_hole 4, template_var 4),
                   template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("Semantics.log_remove",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs\<^sub>1 @
            [Rule ?m Log] @ ?rs\<^sub>2, ?s\<rangle> \<Rightarrow> ?t ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs\<^sub>1 @
            ?rs\<^sub>2, ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 5, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_app
                   (template_app (template_hole 4, template_var 4),
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_app
                           (template_hole 3,
                            template_app
                             (template_app
                               (template_hole 2, template_var 3),
                              template_hole 1)),
                          template_hole 0)),
                      template_var 2))),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 5, template_var 7),
                     template_var 6),
                   template_var 5),
                 template_app
                  (template_app (template_hole 4, template_var 4),
                   template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("Semantics.deny",
     "[| matches ?\<gamma> ?m ?p; ?a = Drop | ?a = Reject |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[Rule ?m
                  ?a], Undecided\<rangle> \<Rightarrow> Decision FinalDeny",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_hole 8)),
              template_app
               (template_app (template_hole 9, template_var 1),
                template_hole 7))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 6, template_var 0),
                     template_var 4),
                   template_var 2),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 3),
                       template_var 1)),
                   template_hole 3)),
               template_hole 2),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Semantics.seq_cons",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[?r], Undecided\<rangle> \<Rightarrow> ?t;
         ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?t\<rangle> \<Rightarrow> ?t' |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?r #
                ?rs, Undecided\<rangle> \<Rightarrow> ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_app
                   (template_app (template_hole 2, template_var 3),
                    template_hole 1)),
                template_hole 0),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 1),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_var 6),
                     template_var 5),
                   template_var 4),
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 1)),
               template_hole 0),
             template_var 0)
           ))),
    ("Semantics.seq'_cons",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[?r], ?s\<rangle> \<Rightarrow> ?t;
         ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?t\<rangle> \<Rightarrow> ?t' |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?r #
                ?rs, ?s\<rangle> \<Rightarrow> ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_app
                   (template_app (template_hole 1, template_var 4),
                    template_hole 0)),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 1),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 7),
                     template_var 6),
                   template_var 5),
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 1)),
               template_var 3),
             template_var 0)
           ))),
    ("Semantics.seq'",
     "[| ?rs = ?rs\<^sub>1 @ ?rs\<^sub>2;
         ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs\<^sub>1, ?s\<rangle> \<Rightarrow> ?t;
         ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs\<^sub>2, ?t\<rangle> \<Rightarrow> ?t' |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t'",
     template_implication
      ([template_equation
         (template_var 8,
          template_app
           (template_app (template_hole 1, template_var 7),
            template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 0, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 7),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 0, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 6),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 8),
               template_var 2),
             template_var 0)
           ))),
    ("Semantics.seq_progress",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t;
         ?rs = ?rs\<^sub>1 @ ?rs\<^sub>2;
         ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs\<^sub>1, ?s\<rangle> \<Rightarrow> ?t' |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs\<^sub>2, ?t'\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_equation
         (template_var 5,
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 2),
                template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 8),
                     template_var 7),
                   template_var 6),
                 template_var 1),
               template_var 0),
             template_var 3)
           ))),
    ("Semantics.emptyD",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?r, ?s\<rangle> \<Rightarrow> ?t;
         ?r = [Rule ?m Empty]; matches ?\<gamma> ?m ?p; ?s = Undecided |]
      ==> ?t = Undecided",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 8, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 0),
                template_hole 4)),
            template_hole 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 5),
                template_var 0),
              template_var 4)
            ),
        template_equation (template_var 2, template_hole 0)],
       template_equation (template_var 1, template_hole 0))),
    ("Semantics.logD",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?r, ?s\<rangle> \<Rightarrow> ?t;
         ?r = [Rule ?m Log]; matches ?\<gamma> ?m ?p; ?s = Undecided |]
      ==> ?t = Undecided",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 8, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 0),
                template_hole 4)),
            template_hole 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 5),
                template_var 0),
              template_var 4)
            ),
        template_equation (template_var 2, template_hole 0)],
       template_equation (template_var 1, template_hole 0))),
    ("Semantics.sanity_wf_ruleset_start",
     "[| sanity_wf_ruleset ?\<Gamma>; ?chain_name : dom (map_of ?\<Gamma>);
         ?default_action = Accept | ?default_action = Drop |]
      ==> wf_chain (map_of ?\<Gamma>)
           [Rule MatchAny (Call ?chain_name),
            Rule MatchAny ?default_action]",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 0),
                  template_hole 7)),
              template_app
               (template_app (template_hole 8, template_var 0),
                template_hole 6))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 10, template_var 2)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 1, template_var 1))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_var 0)),
                 template_hole 0)))
           ))),
    ("Semantics.acceptD",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?r, ?s\<rangle> \<Rightarrow> ?t;
         ?r = [Rule ?m Accept]; matches ?\<gamma> ?m ?p; ?s = Undecided |]
      ==> ?t = Decision FinalAllow",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 10, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 0),
                template_hole 6)),
            template_hole 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 5),
                template_var 0),
              template_var 4)
            ),
        template_equation (template_var 2, template_hole 2)],
       template_equation
        (template_var 1, template_app (template_hole 1, template_hole 0)))),
    ("Semantics.dropD",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?r, ?s\<rangle> \<Rightarrow> ?t;
         ?r = [Rule ?m Drop]; matches ?\<gamma> ?m ?p; ?s = Undecided |]
      ==> ?t = Decision FinalDeny",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 10, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 0),
                template_hole 6)),
            template_hole 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 5),
                template_var 0),
              template_var 4)
            ),
        template_equation (template_var 2, template_hole 2)],
       template_equation
        (template_var 1, template_app (template_hole 1, template_hole 0)))),
    ("Semantics.rejectD",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?r, ?s\<rangle> \<Rightarrow> ?t;
         ?r = [Rule ?m Reject]; matches ?\<gamma> ?m ?p; ?s = Undecided |]
      ==> ?t = Decision FinalDeny",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 10, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 0),
                template_hole 6)),
            template_hole 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 5),
                template_var 0),
              template_var 4)
            ),
        template_equation (template_var 2, template_hole 2)],
       template_equation
        (template_var 1, template_app (template_hole 1, template_hole 0)))),
    ("Semantics.nomatchD",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?r, ?s\<rangle> \<Rightarrow> ?t;
         ?r = [Rule ?m ?a]; ?s = Undecided; ~ matches ?\<gamma> ?m ?p |]
      ==> ?t = Undecided",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 8, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_var 4,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0)),
            template_hole 4)),
        template_equation (template_var 3, template_hole 2),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 0, template_var 6),
                    template_var 1),
                  template_var 5)
                )
            )],
       template_equation (template_var 2, template_hole 2))),
    ("Semantics.seqE",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs\<^sub>1 @
               ?rs\<^sub>2, ?s\<rangle> \<Rightarrow> ?t;
         !!ti. [| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs\<^sub>1, ?s\<rangle> \<Rightarrow> ti;
                  ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs\<^sub>2, ti\<rangle> \<Rightarrow> ?t |]
               ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("Semantics.seqE_cons",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?r #
               ?rs, ?s\<rangle> \<Rightarrow> ?t;
         !!ti. [| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[?r], ?s\<rangle> \<Rightarrow> ti;
                  ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ti\<rangle> \<Rightarrow> ?t |]
               ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Semantics.Unknown_actions_False",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?r #
               ?rs, Undecided\<rangle> \<Rightarrow> ?t;
         ?r = Rule ?m ?a; matches ?\<gamma> ?m ?p;
         ?a = Unknown | (EX chain. ?a = Goto chain) |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 11, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_app
                   (template_app (template_hole 10, template_var 4),
                    template_var 3)),
                template_hole 9),
              template_var 2)
            ),
        template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 7, template_var 1),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 6),
                template_var 1),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_hole 3)),
              template_app (template_hole 2, t_empty))
            )],
       template_predicate (template_hole 0))),
    ("Semantics.seq_split",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t;
         ?rs = ?rs\<^sub>1 @ ?rs\<^sub>2;
         !!t'. [| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs\<^sub>1, ?s\<rangle> \<Rightarrow> t';
                  ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs\<^sub>2, t'\<rangle> \<Rightarrow> ?t |]
               ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_equation
         (template_var 5,
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 1)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("Semantics.Rule_UndecidedE",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[Rule ?m
                 ?a], Undecided\<rangle> \<Rightarrow> Undecided;
         ~ matches ?\<gamma> ?m ?p ==> ?thesis;
         ?a = Log | ?a = Empty ==> ?thesis;
         !!c. [| ?a = Call c; matches ?\<gamma> ?m ?p |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 12, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app
                       (template_app (template_hole 10, template_var 2),
                        template_var 1)),
                    template_hole 9)),
                template_hole 8),
              template_hole 8)
            ),
        template_implication
         ([template_negation
            (
               template_predicate
                (
                   template_app
                    (template_app
                      (template_app (template_hole 6, template_var 4),
                       template_var 2),
                     template_var 3)
                   )
               )],
          template_predicate (template_var 0)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_hole 3)),
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_hole 2))
               )],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Semantics.Rule_DecisionE",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[Rule ?m
                 ?a], Undecided\<rangle> \<Rightarrow> Decision ?X;
         !!chain.
            [| matches ?\<gamma> ?m ?p; ?a = Call chain |] ==> ?thesis;
         [| matches ?\<gamma> ?m ?p; ?X = FinalAllow ==> ?a = Accept;
            ?X = FinalDeny ==> ?a = Drop | ?a = Reject |]
         ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 16, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_app
                   (template_app
                     (template_hole 15,
                      template_app
                       (template_app (template_hole 14, template_var 3),
                        template_var 2)),
                    template_hole 13)),
                template_hole 12),
              template_app (template_hole 11, template_var 1))
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 9, template_var 5),
                   template_var 3),
                 template_var 4)
               )],
          template_implication
           ([template_implication
              ([template_equation (template_var 1, template_hole 5)],
               template_equation (template_var 2, template_hole 4))],
            template_implication
             ([template_implication
                ([template_equation (template_var 1, template_hole 3)],
                 template_predicate
                  (
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 8, template_var 2),
                           template_hole 1)),
                       template_app
                        (template_app (template_hole 8, template_var 2),
                         template_hole 0))
                     ))],
              template_predicate (template_var 0))))],
       template_predicate (template_var 0))),
    ("Semantics.callD",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?r, ?s\<rangle> \<Rightarrow> ?t;
         ?r = [Rule ?m (Call ?chain)]; ?s = Undecided;
         matches ?\<gamma> ?m ?p; ?\<Gamma> ?chain = Some ?rs;
         ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t ==>
         ?thesis;
         !!rs\<^sub>1 rs\<^sub>2 m'.
            [| ?rs = rs\<^sub>1 @ Rule m' Return # rs\<^sub>2;
               matches ?\<gamma> m' ?p;
               ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>rs\<^sub>1, ?s\<rangle> \<Rightarrow> Undecided;
               ?t = Undecided |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 14, template_var 9),
                      template_var 8),
                    template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_equation
         (template_var 6,
          template_app
           (template_app
             (template_hole 12,
              template_app
               (template_app (template_hole 11, template_var 3),
                template_app (template_hole 10, template_var 2))),
            template_hole 9)),
        template_equation (template_var 5, template_hole 7),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 8),
                template_var 3),
              template_var 7)
            ),
        template_equation
         (template_app (template_var 9, template_var 2),
          template_app (template_hole 4, template_var 1)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 14, template_var 9),
                         template_var 8),
                       template_var 7),
                     template_var 1),
                   template_var 5),
                 template_var 4)
               )],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Semantics.iptables_bigstep_induct",
     "[| ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t;
         !!t. ?P [] t t;
         !!m a.
            [| matches ?\<gamma> m ?p; a = Accept |]
            ==> ?P [Rule m a] Undecided (Decision FinalAllow);
         !!m a.
            [| matches ?\<gamma> m ?p; a = Drop | a = Reject |]
            ==> ?P [Rule m a] Undecided (Decision FinalDeny);
         !!m a.
            [| matches ?\<gamma> m ?p; a = Log | a = Empty |]
            ==> ?P [Rule m a] Undecided Undecided;
         !!m a.
            ~ matches ?\<gamma> m ?p ==> ?P [Rule m a] Undecided Undecided;
         !!rs X. ?P rs (Decision X) (Decision X);
         !!rs rs\<^sub>1 rs\<^sub>2 t t'.
            [| rs = rs\<^sub>1 @ rs\<^sub>2;
               ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>rs\<^sub>1, Undecided\<rangle> \<Rightarrow> t;
               ?P rs\<^sub>1 Undecided t;
               ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>rs\<^sub>2, t\<rangle> \<Rightarrow> t';
               ?P rs\<^sub>2 t t' |]
            ==> ?P rs Undecided t';
         !!m a chain rs\<^sub>1 m' rs\<^sub>2.
            [| matches ?\<gamma> m ?p; a = Call chain;
               ?\<Gamma> chain =
               Some (rs\<^sub>1 @ [Rule m' Return] @ rs\<^sub>2);
               matches ?\<gamma> m' ?p;
               ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>rs\<^sub>1, Undecided\<rangle> \<Rightarrow> Undecided;
               ?P rs\<^sub>1 Undecided Undecided |]
            ==> ?P [Rule m a] Undecided Undecided;
         !!m a chain rs t.
            [| matches ?\<gamma> m ?p; a = Call chain;
               ?\<Gamma> chain = Some rs;
               ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>rs, Undecided\<rangle> \<Rightarrow> t;
               ?P rs Undecided t |]
            ==> ?P [Rule m a] Undecided t |]
      ==> ?P ?rs ?s ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 28, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_predicate (template_app (template_hole 25, t_empty)),
        template_predicate (template_app (template_hole 25, t_empty)),
        template_predicate (template_app (template_hole 25, t_empty)),
        template_predicate (template_app (template_hole 25, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 25, t_empty)),
        template_predicate (template_app (template_hole 25, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_var 0, template_var 3),
               template_var 2),
             template_var 1)
           )))]:
   (string * thm * template) list
### theory "Draft.SemanticsTemplates"
### 0.362s elapsed time, 0.472s cpu time, 0.000s GC time
val it = (): unit
