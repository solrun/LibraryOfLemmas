   [("SimpleFw_Compliance.match_iface_simple_match_any_simps",
     "match_iface (iiface simple_match_any) (p_iiface ?p)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("SimpleFw_Compliance.match_iface_simple_match_any_simps",
     "match_iface (oiface simple_match_any) (p_oiface ?p)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("SimpleFw_Compliance.match_iface_simple_match_any_simps",
     "match_proto (proto simple_match_any) (p_proto ?p)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("SimpleFw_Compliance.match_iface_simple_match_any_simps",
     "simple_match_ip (dst simple_match_any) (p_dst ?p)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("SimpleFw_Compliance.match_iface_simple_match_any_simps",
     "simple_match_ip (src simple_match_any) (p_src ?p)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("SimpleFw_Compliance.match_iface_simple_match_any_simps",
     "simple_match_port (dports simple_match_any) (p_dport ?p)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("SimpleFw_Compliance.match_iface_simple_match_any_simps",
     "simple_match_port (sports simple_match_any) (p_sport ?p)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("SimpleFw_Compliance.simple_fw_remdups_Rev",
     "simple_fw (remdups_rev ?rs) ?p = simple_fw ?rs ?p",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("SimpleFw_Compliance.ports_to_set_singleton_simple_match_port",
     "(?p : ports_to_set [?a]) = simple_match_port ?a ?p",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("SimpleFw_Compliance.transform_simple_fw_lower",
     "simple_ruleset ?rs ==>
      check_simple_fw_preconditions
       (lower_closure
         (optimize_matches abstract_for_simple_firewall
           (lower_closure (packet_assume_new ?rs))))",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 0, template_var 0)))))
           ))),
    ("SimpleFw_Compliance.transform_simple_fw_upper",
     "simple_ruleset ?rs ==>
      check_simple_fw_preconditions
       (upper_closure
         (optimize_matches abstract_for_simple_firewall
           (upper_closure (packet_assume_new ?rs))))",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 0, template_var 0)))))
           ))),
    ("SimpleFw_Compliance.ctstate_assume_new_not_has_CT_State",
     "?r : set (ctstate_assume_new ?rs) ==>
      ~ has_disc is_CT_State (get_match ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 0)))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 1))
               )
           ))),
    ("SimpleFw_Compliance.to_simple_firewall",
     "check_simple_fw_preconditions ?rs ==>
      approximating_bigstep_fun (common_matcher, ?\<alpha>) ?p ?rs
       Undecided =
      simple_fw (to_simple_firewall ?rs) ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_var 1)),
               template_var 0),
             template_var 2),
           template_hole 2),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("SimpleFw_Compliance.simple_match_to_ipportiface_match_correct",
     "simple_match_valid ?sm ==>
      matches (common_matcher, ?\<alpha>)
       (simple_match_to_ipportiface_match ?sm) ?a ?p =
      simple_matches ?sm ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 2)),
               template_app (template_hole 1, template_var 3)),
             template_var 1),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("SimpleFw_Compliance.to_simple_firewall_simps",
     "check_simple_fw_preconditions (Rule ?m ?a # ?rs) ==>
      to_simple_firewall (Rule ?m ?a # ?rs) =
      (case common_primitive_match_to_simple_match ?m of
       None => to_simple_firewall ?rs
       | Some sm =>
           SimpleRule sm (action_to_simple_action ?a) #
           to_simple_firewall ?rs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 5, template_var 0)),
             t_empty),
           template_app (template_hole 0, template_var 2))))),
    ("SimpleFw_Compliance.transform_simple_fw_upper",
     "simple_ruleset ?rs ==>
      {p. (common_matcher,
           in_doubt_allow),p\<turnstile> \<langle>?rs, Undecided\<rangle> \<Rightarrow>\<^sub>\<alpha> Decision
                            FinalAllow &
          match_tcp_flags ipt_tcp_syn (p_tcp_flags p) &
          p_tag_ctstate p = CT_New}
      <= {p. simple_fw
              (to_simple_firewall
                (upper_closure
                  (optimize_matches abstract_for_simple_firewall
                    (upper_closure (packet_assume_new ?rs)))))
              p =
             Decision FinalAllow &
             match_tcp_flags ipt_tcp_syn (p_tcp_flags p) &
             p_tag_ctstate p = CT_New}",
     template_implication
      ([template_predicate
         (template_app (template_hole 23, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 21, t_empty),
         template_app (template_hole 21, t_empty)))),
    ("SimpleFw_Compliance.transform_simple_fw_lower",
     "simple_ruleset ?rs ==>
      {p. simple_fw
           (to_simple_firewall
             (lower_closure
               (optimize_matches abstract_for_simple_firewall
                 (lower_closure (packet_assume_new ?rs)))))
           p =
          Decision FinalAllow &
          match_tcp_flags ipt_tcp_syn (p_tcp_flags p) &
          p_tag_ctstate p = CT_New}
      <= {p. (common_matcher,
              in_doubt_deny),p\<turnstile> \<langle>?rs, Undecided\<rangle> \<Rightarrow>\<^sub>\<alpha> Decision
                              FinalAllow &
             match_tcp_flags ipt_tcp_syn (p_tcp_flags p) &
             p_tag_ctstate p = CT_New}",
     template_implication
      ([template_predicate
         (template_app (template_hole 23, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 21, t_empty),
         template_app (template_hole 21, t_empty)))),
    ("SimpleFw_Compliance.common_primitive_match_to_simple_match",
     "[| normalized_src_ports ?m; normalized_dst_ports ?m;
         normalized_src_ips ?m; normalized_dst_ips ?m; normalized_ifaces ?m;
         normalized_protocols ?m; ~ has_disc is_L4_Flags ?m;
         ~ has_disc is_CT_State ?m; ~ has_disc is_MultiportPorts ?m;
         ~ has_disc is_Extra ?m |]
      ==> (Some ?sm = common_primitive_match_to_simple_match ?m -->
           matches (common_matcher, ?\<alpha>) ?m ?a ?p =
           simple_matches ?sm ?p) &
          (common_primitive_match_to_simple_match ?m = None -->
           ~ matches (common_matcher, ?\<alpha>) ?m ?a ?p)",
     template_implication
      ([template_predicate
         (template_app (template_hole 22, template_var 4)),
        template_predicate
         (template_app (template_hole 21, template_var 4)),
        template_predicate
         (template_app (template_hole 20, template_var 4)),
        template_predicate
         (template_app (template_hole 19, template_var 4)),
        template_predicate
         (template_app (template_hole 18, template_var 4)),
        template_predicate
         (template_app (template_hole 17, template_var 4)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 15, template_hole 14),
                  template_var 4)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 15, template_hole 13),
                  template_var 4)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 15, template_hole 12),
                  template_var 4)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 15, template_hole 11),
                  template_var 4)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_var 3)),
                     template_app (template_hole 6, template_var 4))),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_hole 4,
                             template_app
                              (template_app
                                (template_hole 3, template_hole 2),
                               template_var 2)),
                           template_var 4),
                         template_var 1),
                       template_var 0)),
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 0)))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 6, template_var 4)),
                   template_hole 0)),
               template_app
                (template_hole 16,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 3, template_hole 2),
                           template_var 2)),
                       template_var 4),
                     template_var 1),
                   template_var 0))))
           ))),
    ("SimpleFw_Compliance.to_simple_firewall_without_interfaces",
     "[| simple_ruleset ?rs; ipassmt_sanity_nowildcards (map_of ?ipassmt);
         distinct (map fst ?ipassmt);
         ALL p.
            EX ips.
               map_of ?ipassmt (Iface (p_iiface p)) = Some ips &
               p_src p : ipcidr_union_set (set ips);
         !!rtbl p.
            ?rtblo = Some rtbl ==>
            output_iface (routing_table_semantics rtbl (p_dst p)) =
            p_oiface p;
         !!rtbl. ?rtblo = Some rtbl ==> correct_routing rtbl;
         !!rtbl.
            ?rtblo = Some rtbl ==>
            ipassmt_sanity_nowildcards (map_of (routing_ipassmt rtbl)) |]
      ==> ALL r:set (to_simple_firewall_without_interfaces ?ipassmt ?rtblo
                      ?rs).
             iiface (match_sel r) = ifaceAny &
             oiface (match_sel r) = ifaceAny",
     template_implication
      ([template_predicate
         (template_app (template_hole 35, template_var 2)),
        template_predicate
         (
            template_app
             (template_hole 34,
              template_app (template_hole 33, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 32,
              template_app
               (template_app (template_hole 31, template_hole 30),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 29, t_empty)),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 18, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_app (template_hole 5, template_var 1),
                     template_var 0),
                   template_var 2))),
             t_empty)
           ))),
    ("SimpleFw_Compliance.to_simple_firewall_without_interfaces",
     "[| simple_ruleset ?rs; ipassmt_sanity_nowildcards (map_of ?ipassmt);
         distinct (map fst ?ipassmt);
         ALL p.
            EX ips.
               map_of ?ipassmt (Iface (p_iiface p)) = Some ips &
               p_src p : ipcidr_union_set (set ips);
         !!rtbl p.
            ?rtblo = Some rtbl ==>
            output_iface (routing_table_semantics rtbl (p_dst p)) =
            p_oiface p;
         !!rtbl. ?rtblo = Some rtbl ==> correct_routing rtbl;
         !!rtbl.
            ?rtblo = Some rtbl ==>
            ipassmt_sanity_nowildcards (map_of (routing_ipassmt rtbl)) |]
      ==> {p. (common_matcher,
               in_doubt_allow),p\<turnstile> \<langle>?rs, Undecided\<rangle> \<Rightarrow>\<^sub>\<alpha> Decision
                                FinalAllow &
              match_tcp_flags ipt_tcp_syn (p_tcp_flags p) &
              p_tag_ctstate p = CT_New}
          <= {p. simple_fw
                  (to_simple_firewall_without_interfaces ?ipassmt ?rtblo
                    ?rs)
                  p =
                 Decision FinalAllow &
                 match_tcp_flags ipt_tcp_syn (p_tcp_flags p) &
                 p_tag_ctstate p = CT_New}",
     template_implication
      ([template_predicate
         (template_app (template_hole 45, template_var 2)),
        template_predicate
         (
            template_app
             (template_hole 44,
              template_app (template_hole 43, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 42,
              template_app
               (template_app (template_hole 41, template_hole 40),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 39, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 16, t_empty),
         template_app (template_hole 16, t_empty))))]
