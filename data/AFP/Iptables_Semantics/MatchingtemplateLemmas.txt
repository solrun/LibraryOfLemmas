   [("Matching.opt_MatchAny_match_expr_correct",
     "matches ?\<gamma> (opt_MatchAny_match_expr ?m) =
      matches ?\<gamma> ?m",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Matching.matcheq_matchNone_not_matches",
     "matcheq_matchNone ?m ==> ~ matches ?\<gamma> ?m ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 2))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2),
                 template_var 0)
               )
           ))),
    ("Matching.matcheq_matchAny",
     "~ has_primitive ?m ==> matcheq_matchAny ?m = matches ?\<gamma> ?m ?p",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Matching.add_match_split",
     "add_match ?m (?rs1.0 @ ?rs2.0) =
      add_match ?m ?rs1.0 @ add_match ?m ?rs2.0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Matching.matcheq_matchNone",
     "~ has_primitive ?m ==>
      matcheq_matchNone ?m = (~ matches ?\<gamma> ?m ?p)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0))))),
    ("Matching.add_match_split_fst'",
     "add_match ?m (?a # ?rs) = add_match ?m [?a] @ add_match ?m ?rs",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 0))),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Matching.MatchOr",
     "matches ?\<gamma> (MatchOr ?m1.0 ?m2.0) ?p =
      (matches ?\<gamma> ?m1.0 ?p | matches ?\<gamma> ?m2.0 ?p)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1),
           template_var 0)))),
    ("Matching.add_match_split_fst",
     "add_match ?m (Rule ?m' ?a' # ?rs) =
      Rule (MatchAnd ?m ?m') ?a' # add_match ?m ?rs",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_var 0)))),
    ("Matching.iptables_bigstep_add_match_notnot_simp",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>add_match
             (MatchNot (MatchNot ?m)) ?rs, ?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>add_match ?m
             ?rs, ?s\<rangle> \<Rightarrow> ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 6),
                 template_var 5),
               template_var 4),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_hole 0,
                   template_app (template_hole 0, template_var 3))),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 6),
                 template_var 5),
               template_var 4),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("Matching.add_match_distrib",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>add_match ?m1.0
             (add_match ?m2.0 ?rs), ?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>add_match ?m2.0
             (add_match ?m1.0 ?rs), ?s\<rangle> \<Rightarrow> ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 7),
                 template_var 6),
               template_var 5),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 7),
                 template_var 6),
               template_var 5),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 2))),
           template_var 1),
         template_var 0))),
    ("Matching.iptables_bigstep_add_match_and",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>add_match ?m1.0
             (add_match ?m2.0 ?rs), ?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>add_match
             (MatchAnd ?m1.0 ?m2.0) ?rs, ?s\<rangle> \<Rightarrow> ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 7),
                 template_var 6),
               template_var 5),
             template_app
              (template_app (template_hole 1, template_var 4),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 7),
                 template_var 6),
               template_var 5),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3)),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("Matching.matches_add_match_simp",
     "matches ?\<gamma> ?m ?p ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>add_match ?m
             ?rs, ?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 6),
                template_var 5),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 6),
                 template_var 4),
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 2)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 6),
                 template_var 4),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Matching.matches_add_match_MatchNot_simp",
     "matches ?\<gamma> ?m ?p ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>add_match (MatchNot ?m)
             ?rs, ?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[], ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 6),
                template_var 5),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 6),
                 template_var 4),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 5)),
                 template_var 2)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 6),
                 template_var 4),
               template_hole 0),
             template_var 1),
           template_var 0)))),
    ("Matching.not_matches_add_match_simp",
     "~ matches ?\<gamma> ?m ?p ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>add_match ?m
             ?rs, Undecided\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[], Undecided\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 5, template_var 5),
                    template_var 4),
                  template_var 3)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 5),
                 template_var 3),
               template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 1)),
             template_hole 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 5),
                 template_var 3),
               template_hole 0),
             template_hole 1),
           template_var 0)))),
    ("Matching.add_match_match_not_cases",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>add_match (MatchNot ?m)
             ?rs, Undecided\<rangle> \<Rightarrow> Undecided ==>
      matches ?\<gamma> ?m ?p |
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, Undecided\<rangle> \<Rightarrow> Undecided",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 5, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app (template_hole 3, template_var 1)),
                    template_var 0)),
                template_hole 2),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 2)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 0),
                 template_hole 2),
               template_hole 2))
           ))),
    ("Matching.not_matches_add_matchNot_simp",
     "~ matches ?\<gamma> ?m ?p ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>add_match (MatchNot ?m)
             ?rs, ?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 4, template_var 6),
                    template_var 5),
                  template_var 4)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 6),
                 template_var 4),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 5)),
                 template_var 2)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 6),
                 template_var 4),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Matching.matches_MatchNot_simp",
     "matches ?\<gamma> ?m ?p ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[Rule (MatchNot ?m)
              ?a], Undecided\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[], Undecided\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 5),
                template_var 4),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 5),
                 template_var 3),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 4)),
                     template_var 1)),
                 template_hole 1)),
             template_hole 0),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 5),
                 template_var 3),
               template_hole 1),
             template_hole 0),
           template_var 0)))),
    ("Matching.iptables_bigstep_MatchAnd_comm",
     "?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[Rule
              (MatchAnd ?m1.0 ?m2.0) ?a], ?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[Rule
              (MatchAnd ?m2.0 ?m1.0) ?a], ?s\<rangle> \<Rightarrow> ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 7),
                 template_var 6),
               template_var 5),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3)),
                   template_var 2)),
               template_hole 0)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 7),
                 template_var 6),
               template_var 5),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 4)),
                   template_var 2)),
               template_hole 0)),
           template_var 1),
         template_var 0))),
    ("Matching.matches_MatchNotAnd_simp",
     "matches ?\<gamma> ?m ?p ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[Rule
              (MatchAnd (MatchNot ?m) ?m')
              ?a], Undecided\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[], Undecided\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 6),
                template_var 5),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 6, template_var 3),
                   template_var 6),
                 template_var 4),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app (template_hole 2, template_var 5)),
                         template_var 2)),
                     template_var 1)),
                 template_hole 1)),
             template_hole 0),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 6, template_var 3),
                   template_var 6),
                 template_var 4),
               template_hole 1),
             template_hole 0),
           template_var 0)))),
    ("Matching.matches_rule_and_simp_help",
     "matches ?\<gamma> ?m ?p ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[Rule (MatchAnd ?m ?m')
              ?a'], Undecided\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[Rule ?m'
              ?a'], Undecided\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 6),
                template_var 5),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 5, template_var 3),
                   template_var 6),
                 template_var 4),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_var 5),
                         template_var 2)),
                     template_var 1)),
                 template_hole 1)),
             template_hole 0),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 5, template_var 3),
                   template_var 6),
                 template_var 4),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_var 1)),
                 template_hole 1)),
             template_hole 0),
           template_var 0)))),
    ("Matching.matches_rule_and_simp",
     "matches ?\<gamma> ?m ?p ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[Rule (MatchAnd ?m ?m')
              ?a'], ?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[Rule ?m'
              ?a'], ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 7),
                template_var 6),
              template_var 5)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_var 4),
                   template_var 7),
                 template_var 5),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 6),
                         template_var 3)),
                     template_var 2)),
                 template_hole 0)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_var 4),
                   template_var 7),
                 template_var 5),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 2)),
                 template_hole 0)),
             template_var 1),
           template_var 0)))),
    ("Matching.matches_rule_iptables_bigstep",
     "matches ?\<gamma> ?m ?p = matches ?\<gamma> ?m' ?p ==>
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[Rule ?m
              ?a], ?s\<rangle> \<Rightarrow> ?t =
      ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>[Rule ?m'
              ?a], ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_var 7),
              template_var 6),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 4, template_var 7),
              template_var 4),
            template_var 5))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 7),
                 template_var 5),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 6),
                     template_var 2)),
                 template_hole 0)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 7),
                 template_var 5),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 2)),
                 template_hole 0)),
             template_var 1),
           template_var 0)))),
    ("Matching.optimize_matches_generic",
     "[| ALL r:set ?rs. ?P (get_match r);
         !!m. ?P m ==>
              matches ?\<gamma> (?f m) ?p = matches ?\<gamma> m ?p |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>optimize_matches ?f
                 ?rs, ?s\<rangle> \<Rightarrow> ?t =
          ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 7)),
              t_empty)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 5),
                 template_var 3),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 7)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 5),
                 template_var 3),
               template_var 7),
             template_var 1),
           template_var 0)))),
    ("Matching.optimize_matches_option_generic",
     "[| ALL r:set ?rs. ?P (get_match r);
         !!m m'.
            [| ?P m; ?f m = Some m' |]
            ==> matches ?\<gamma> m' ?p = matches ?\<gamma> m ?p;
         !!m. [| ?P m; ?f m = None |] ==> ~ matches ?\<gamma> m ?p |]
      ==> ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>optimize_matches_option
                 ?f ?rs, ?s\<rangle> \<Rightarrow> ?t =
          ?\<Gamma>,?\<gamma>,?p\<turnstile> \<langle>?rs, ?s\<rangle> \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 7)),
              t_empty)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 4),
                 template_var 3),
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 7)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 4),
                 template_var 3),
               template_var 7),
             template_var 1),
           template_var 0))))]
