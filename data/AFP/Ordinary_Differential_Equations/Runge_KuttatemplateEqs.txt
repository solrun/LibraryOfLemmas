   [("Runge_Kutta.euler_increment",
     "euler_increment ?f ?h ?t ?x = ?f ?t ?x",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_var 3, template_var 1), template_var 0))),
    ("Runge_Kutta.scale_back",
     "(0::?'b, ?r *\<^sub>R ?x) = ?r *\<^sub>R (0::?'b, ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)))),
    ("Runge_Kutta.scale_back",
     "(?r, ?r *\<^sub>R ?x) = ?r *\<^sub>R (1, ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 3, template_hole 0),
           template_var 0)))),
    ("Runge_Kutta.euler_float_increment",
     "euler_increment' ?e ?f ?h ?t ?x = eucl_down ?e (?f ?t ?x)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 4),
         template_app
          (template_app (template_var 3, template_var 1),
           template_var 0)))),
    ("Runge_Kutta.bounded_uminus_image",
     "bounded ((%x. - ?f x) ` ?s) = bounded (?f ` ?s)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Runge_Kutta.convex_minus_translation_iff",
     "convex ((%x. ?f x - ?y) ` ?S) = convex (?f ` ?S)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Runge_Kutta.convex_translation_iff",
     "convex ((%x. ?y + ?f x) ` ?S) = convex (?f ` ?S)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Runge_Kutta.convex_translation_iff",
     "convex ((%x. ?f x + ?y) ` ?S) = convex (?f ` ?S)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Runge_Kutta.closed_minus_translation_iff",
     "closed ((%x. ?f x - ?y) ` ?S) = closed (?f ` ?S)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Runge_Kutta.closed_translation_iff",
     "closed ((%x. ?y + ?f x) ` ?S) = closed (?f ` ?S)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Runge_Kutta.closed_translation_iff",
     "closed ((%x. ?f x + ?y) ` ?S) = closed (?f ` ?S)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Runge_Kutta.convex_scaleR_image_iff",
     "convex ((%x. ?r *\<^sub>R ?f x) ` ?R) = (?r = 0 | convex (?f ` ?R))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, t_empty), template_var 0))
            )],
       template_dunno)),
    ("Runge_Kutta.closed_scaleR_image_iff",
     "closed ((%x. ?r *\<^sub>R ?f x) ` ?R) = (?r = 0 | closed (?f ` ?R))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, t_empty), template_var 0))
            )],
       template_dunno)),
    ("Runge_Kutta.rk2_increment",
     "rk2_increment ?p ?f ?h ?t ?x =
      (1 - 1 / (?p * 2)) *\<^sub>R ?f ?t ?x +
      (1 / (?p * 2)) *\<^sub>R
      ?f (?t + ?h * ?p) (?x + (?h * ?p) *\<^sub>R ?f ?t ?x)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 10, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app
                  (template_app (template_hole 5, template_hole 6),
                   template_app
                    (template_app (template_hole 4, template_var 4),
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_hole 1)))))),
             template_app
              (template_app (template_var 3, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 5, template_hole 6),
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))))),
           template_app
            (template_app
              (template_var 3,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 4))),
             template_app
              (template_app (template_hole 9, template_var 0),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 4)),
                 template_app
                  (template_app (template_var 3, template_var 1),
                   template_var 0)))))))),
    ("Runge_Kutta.convex_hull_minus_Collect",
     "{x - y |x y. x : convex hull ?A & y : convex hull ?B} =
      convex hull {x - y |x y. x : ?A & y : ?B}",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app (template_hole 7, t_empty))))]
