Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Vector_Derivative_OnTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Stream" (required by "Draft.Vector_Derivative_OnTemplates" via "Draft.ExtrEqs")
Loading theory "Draft.Vector_Derivative_On" (required by "Draft.Vector_Derivative_OnTemplates")
Loading theory "HOL-Library.Tree" (required by "Draft.Vector_Derivative_OnTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.132s elapsed time, 0.531s cpu time, 0.059s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Vector_Derivative_OnTemplates" via "Draft.ExtrEqs")
### theory "Draft.Vector_Derivative_On"
### 0.214s elapsed time, 0.862s cpu time, 0.059s GC time
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.778s elapsed time, 2.561s cpu time, 0.247s GC time
### theory "HOL-Library.BigO"
### 0.659s elapsed time, 2.048s cpu time, 0.189s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.748s elapsed time, 3.937s cpu time, 0.788s GC time
Loading theory "Draft.Templates" (required by "Draft.Vector_Derivative_OnTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.055s elapsed time, 0.078s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Vector_Derivative_OnTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.551s elapsed time, 0.611s cpu time, 0.068s GC time
Loading theory "Draft.Vector_Derivative_OnTemplates"
val templateLemmas =
   [("Vector_Derivative_On.has_vderiv_on_empty",
     "(?f has_vderiv_on ?f') {}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_hole 0)
         )),
    ("Vector_Derivative_On.has_vderiv_on_singleton",
     "(?y has_vderiv_on ?y') {?t0.0}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("Vector_Derivative_On.has_vderiv_on_const",
     "((%x. ?c) has_vderiv_on (%x. 0::?'a)) ?T",
     template_predicate
      (
         template_app
          (template_app (template_app (template_hole 1, t_empty), t_empty),
           template_var 0)
         )),
    ("Vector_Derivative_On.has_vderiv_on_id",
     "((%x. x) has_vderiv_on (%x. 1)) ?T",
     template_predicate
      (
         template_app
          (template_app (template_app (template_hole 1, t_empty), t_empty),
           template_var 0)
         )),
    ("Vector_Derivative_On.vderiv_on_continuous_on",
     "(?f has_vderiv_on ?f') ?S ==> continuous_on ?S ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("Vector_Derivative_On.has_vderiv_on_subset",
     "[| (?f has_vderiv_on ?f') ?S; ?T <= ?S |]
      ==> (?f has_vderiv_on ?f') ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Vector_Derivative_On.has_vderiv_on_uminus",
     "(?f has_vderiv_on ?f') ?T ==>
      ((%x. - ?f x) has_vderiv_on (%x. - ?f' x)) ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, t_empty), t_empty),
             template_var 0)
           ))),
    ("Vector_Derivative_On.has_vderiv_on_open",
     "open ?T ==>
      (?f has_vderiv_on ?f') ?T =
      (ALL t:?T. (?f has_vector_derivative ?f' t) (at t))",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0),
           template_var 2),
         template_app
          (template_app (template_hole 3, template_var 2), t_empty)))),
    ("Vector_Derivative_On.fundamental_theorem_of_calculus'",
     "[| ?a <= ?b; (?f has_vderiv_on ?f') {?a..?b} |]
      ==> (?f' has_integral ?f ?b - ?f ?a) {?a..?b}",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_var 1, template_var 2)),
                 template_app (template_var 1, template_var 3))),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2))
           ))),
    ("Vector_Derivative_On.has_vderiv_on_eq_rhs",
     "[| (?f has_vderiv_on ?g') ?T; !!x. x : ?T ==> ?g' x = ?f' x |]
      ==> (?f has_vderiv_on ?f') ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 0),
             template_var 1)
           ))),
    ("Vector_Derivative_On.has_vderiv_on_diff",
     "[| (?f has_vderiv_on ?f') ?T; (?g has_vderiv_on ?g') ?T |]
      ==> ((%x. ?f x - ?g x) has_vderiv_on (%x. ?f' x - ?g' x)) ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, t_empty), t_empty),
             template_var 2)
           ))),
    ("Vector_Derivative_On.has_vderiv_on_add",
     "[| (?f has_vderiv_on ?f') ?T; (?g has_vderiv_on ?g') ?T |]
      ==> ((%x. ?f x + ?g x) has_vderiv_on (%x. ?f' x + ?g' x)) ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, t_empty), t_empty),
             template_var 2)
           ))),
    ("Vector_Derivative_On.has_vderiv_on_compose",
     "[| (?f has_vderiv_on ?f') (?g ` ?T); (?g has_vderiv_on ?g') ?T |]
      ==> (?f o ?g has_vderiv_on (%x. ?g' x *\<^sub>R ?f' (?g x))) ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 2)),
               t_empty),
             template_var 1)
           ))),
    ("Vector_Derivative_On.has_vderiv_on_union_closed",
     "[| (?f has_vderiv_on ?g) ?s; (?f has_vderiv_on ?g) ?t; closed ?s;
         closed ?t |]
      ==> (?f has_vderiv_on ?g) (?s Un ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Vector_Derivative_On.has_vderiv_on_compose'",
     "[| (?f has_vderiv_on ?f') (?g ` ?T); (?g has_vderiv_on ?g') ?T |]
      ==> ((%x. ?f (?g x)) has_vderiv_on (%x. ?g' x *\<^sub>R ?f' (?g x)))
           ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty), t_empty),
             template_var 1)
           ))),
    ("Vector_Derivative_On.has_vderiv_on_union",
     "[| (?f has_vderiv_on ?g) (?s Un closure ?s Int closure ?t);
         (?f has_vderiv_on ?g) (?t Un closure ?s Int closure ?t) |]
      ==> (?f has_vderiv_on ?g) (?s Un ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_app
                 (template_app
                   (template_hole 1,
                    template_app (template_hole 0, template_var 1)),
                  template_app (template_hole 0, template_var 0))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_app
                 (template_app
                   (template_hole 1,
                    template_app (template_hole 0, template_var 1)),
                  template_app (template_hole 0, template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))
           ))),
    ("Vector_Derivative_On.has_vderiv_on_zero_constant",
     "[| convex ?s; (?f has_vderiv_on (%h. 0::?'a)) ?s;
         !!c. (!!x. x : ?s ==> ?f x = c) ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 1), t_empty),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Vector_Derivative_On.has_vderiv_on_mult",
     "[| (?f has_vderiv_on ?f') ?T; (?g has_vderiv_on ?g') ?T |]
      ==> ((%x. ?f x * ?g x) has_vderiv_on
           (%x. ?f x * ?g' x + ?f' x * ?g x))
           ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty), t_empty),
             template_var 2)
           ))),
    ("Vector_Derivative_On.has_vderiv_on_scaleR",
     "[| (?f has_vderiv_on ?f') ?T; (?g has_vderiv_on ?g') ?T |]
      ==> ((%x. ?f x *\<^sub>R ?g x) has_vderiv_on
           (%x. ?f x *\<^sub>R ?g' x + ?f' x *\<^sub>R ?g x))
           ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty), t_empty),
             template_var 2)
           ))),
    ("Vector_Derivative_On.bounded_vderiv_on_imp_lipschitz",
     "[| (?f has_vderiv_on ?f') ?X; convex ?X;
         !!x. x : ?X ==> norm (?f' x) <= ?C; 0 <= ?C |]
      ==> ?C-lipschitz_on ?X ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_inequation (less_equals, template_hole 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1),
             template_var 3)
           ))),
    ("Vector_Derivative_On.mvt_very_simple_closed_segmentE",
     "[| (?f has_vderiv_on ?f') (closed_segment ?a ?b);
         !!y. [| y : closed_segment ?a ?b;
                 ?f ?b - ?f ?a = (?b - ?a) * ?f' y |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_var 3),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Vector_Derivative_On.has_vderiv_on_compose2",
     "[| (?f has_vderiv_on ?f') ?S; (?g has_vderiv_on ?g') ?T;
         !!t. t : ?T ==> ?g t : ?S |]
      ==> ((%x. ?f (?g x)) has_vderiv_on (%x. ?g' x *\<^sub>R ?f' (?g x)))
           ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, t_empty), t_empty),
             template_var 0)
           ))),
    ("Vector_Derivative_On.mvt_simple_closed_segmentE",
     "[| (?f has_vderiv_on ?f') (closed_segment ?a ?b); ?a ~= ?b;
         !!y. [| y : open_segment ?a ?b;
                 ?f ?b - ?f ?a = (?b - ?a) * ?f' y |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_var 3),
              template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1))
            ),
        template_negation
         (template_equation (template_var 2, template_var 1)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Vector_Derivative_On.has_vderiv_on_cong",
     "[| !!x. x : ?S ==> ?f x = ?g x; !!x. x : ?S ==> ?f' x = ?g' x;
         ?S = ?T |]
      ==> (?f has_vderiv_on ?f') ?S = (?g has_vderiv_on ?g') ?T",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_equation (template_var 5, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 2),
           template_var 5),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0)))),
    ("Vector_Derivative_On.has_vderiv_on_ln",
     "[| !!x. x : ?T ==> 0 < ?g1 x; (?g1 has_vderiv_on ?g'1) ?T;
         !!x. x : ?T ==> ?g'1 x / ?g1 x = ?f' x |]
      ==> ((%x. ln (?g1 x)) has_vderiv_on ?f') ?T",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty), template_var 0),
             template_var 3)
           ))),
    ("Vector_Derivative_On.has_vderiv_eq",
     "[| (?f has_vderiv_on ?f') ?S; !!x. x : ?S ==> ?f x = ?g x;
         !!x. x : ?S ==> ?f' x = ?g' x; ?S = ?T |]
      ==> (?g has_vderiv_on ?g') ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_equation (template_var 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Vector_Derivative_On.differentiable_bound_general_open_segment",
     "[| continuous_on (closed_segment ?a ?b) ?f;
         continuous_on (closed_segment ?a ?b) ?g;
         (?f has_vderiv_on ?f') (open_segment ?a ?b);
         (?g has_vderiv_on ?g') (open_segment ?a ?b);
         !!x. x : open_segment ?a ?b ==> norm (?f' x) <= ?g' x |]
      ==> norm (?f ?b - ?f ?a) <= \<bar>?g ?b - ?g ?a\<bar>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 5),
                  template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 11, template_var 5),
                  template_var 4)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 3),
                template_var 1),
              template_app
               (template_app (template_hole 8, template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 0),
              template_app
               (template_app (template_hole 8, template_var 5),
                template_var 4))
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_var 3, template_var 4)),
             template_app (template_var 3, template_var 5))),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app (template_var 2, template_var 4)),
             template_app (template_var 2, template_var 5)))))),
    ("Vector_Derivative_On.has_vderiv_on_If",
     "[| ?U = ?S Un ?T;
         (?f has_vderiv_on ?f') (?S Un closure ?T Int closure ?S);
         (?g has_vderiv_on ?g') (?T Un closure ?T Int closure ?S);
         !!x. [| x : closure ?T; x : closure ?S |] ==> ?f x = ?g x;
         !!x. [| x : closure ?T; x : closure ?S |] ==> ?f' x = ?g' x |]
      ==> ((%t. if t : ?S then ?f t else ?g t) has_vderiv_on
           (%t. if t : ?S then ?f' t else ?g' t))
           ?U",
     template_implication
      ([template_equation
         (template_var 6,
          template_app
           (template_app (template_hole 7, template_var 5),
            template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 7, template_var 5),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 4)),
                  template_app (template_hole 4, template_var 5))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0),
              template_app
               (template_app (template_hole 7, template_var 4),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 4)),
                  template_app (template_hole 4, template_var 5))))
            ),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, t_empty), t_empty),
             template_var 6)
           )))]:
   (string * thm * template) list
### theory "Draft.Vector_Derivative_OnTemplates"
### 1.016s elapsed time, 1.250s cpu time, 0.097s GC time
val it = (): unit
