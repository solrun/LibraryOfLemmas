   [("Flow.blinfun_compose_1_left", "?x o\<^sub>L 1\<^sub>L = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Flow.blinfun_compose_1_right", "1\<^sub>L o\<^sub>L ?y = ?y",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Flow.dist_cancel_add1", "dist (?t0.0 + ?et) ?t0.0 = norm ?et",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_var 1),
       template_app (template_hole 0, template_var 0))),
    ("Flow.content_closed_segment_real",
     "content {?a--?b} = \<bar>?b - ?a\<bar>",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Flow.blinfun_inverse_left",
     "(?f o\<^sub>L ?f' = 1\<^sub>L) = (?f' o\<^sub>L ?f = 1\<^sub>L)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Flow.integral_const_closed_segment",
     "integral {?a--?b} (%x. ?c) = \<bar>?b - ?a\<bar> *\<^sub>R ?c",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))),
         template_var 0))),
    ("Flow.blinfun_ext",
     "(?x = ?y) = (ALL i. blinfun_apply ?x i = blinfun_apply ?y i)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty)))]
