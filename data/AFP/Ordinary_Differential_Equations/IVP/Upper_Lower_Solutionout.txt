Loading theory "HOL-Library.Stream" (required by "Draft.Upper_Lower_SolutionTemplates" via "Draft.ExtrEqs")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Upper_Lower_SolutionTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.Upper_Lower_SolutionTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Loading theory "Draft.Bounded_Linear_Operator" (required by "Draft.Upper_Lower_SolutionTemplates" via "Draft.Upper_Lower_Solution" via "Draft.Flow")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### Generation of a parametrized correspondence relation failed.
### Reason:  No relator for the type "Bounded_Linear_Function.blinfun" found.
### theory "HOL-Library.Function_Algebras"
### 0.166s elapsed time, 0.677s cpu time, 0.059s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Upper_Lower_SolutionTemplates" via "Draft.ExtrEqs")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
instantiation
  blinop :: (real_normed_vector) real_normed_vector
  uminus_blinop == uminus :: 'a blinop => 'a blinop
  zero_blinop == zero_class.zero :: 'a blinop
  minus_blinop == minus :: 'a blinop => 'a blinop => 'a blinop
  plus_blinop == plus :: 'a blinop => 'a blinop => 'a blinop
  sgn_blinop == sgn :: 'a blinop => 'a blinop
  norm_blinop == norm :: 'a blinop => real
  scaleR_blinop == scaleR :: real => 'a blinop => 'a blinop
  dist_blinop == dist :: 'a blinop => 'a blinop => real
  uniformity_blinop == uniformity :: ('a blinop * 'a blinop) filter
  open_blinop == open :: 'a blinop set => bool
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
instantiation
  blinop :: ({real_normed_vector,perfect_space}) real_normed_algebra_1
  one_blinop == one_class.one :: 'a blinop
  times_blinop == times :: 'a blinop => 'a blinop => 'a blinop
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.860s elapsed time, 3.351s cpu time, 0.315s GC time
Loading theory "Draft.Vector_Derivative_On" (required by "Draft.Upper_Lower_SolutionTemplates" via "Draft.Upper_Lower_Solution" via "Draft.Flow" via "Draft.Picard_Lindeloef_Qualitative" via "Draft.Initial_Value_Problem" via "Draft.Interval_Integral_HK")
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
### theory "Draft.Bounded_Linear_Operator"
### 1.071s elapsed time, 4.101s cpu time, 0.750s GC time
Loading theory "Draft.ODE_Auxiliarities" (required by "Draft.Upper_Lower_SolutionTemplates" via "Draft.Upper_Lower_Solution" via "Draft.Flow" via "Draft.Picard_Lindeloef_Qualitative" via "Draft.Initial_Value_Problem")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.950s elapsed time, 3.612s cpu time, 0.691s GC time
Found termination order: "size <*mlex*> {}"
### theory "Draft.Vector_Derivative_On"
### 0.327s elapsed time, 1.131s cpu time, 0.465s GC time
Loading theory "Draft.Gronwall" (required by "Draft.Upper_Lower_SolutionTemplates" via "Draft.Upper_Lower_Solution" via "Draft.Flow" via "Draft.Picard_Lindeloef_Qualitative" via "Draft.Initial_Value_Problem")
Loading theory "Draft.Interval_Integral_HK" (required by "Draft.Upper_Lower_SolutionTemplates" via "Draft.Upper_Lower_Solution" via "Draft.Flow" via "Draft.Picard_Lindeloef_Qualitative" via "Draft.Initial_Value_Problem")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Gronwall"
### 0.152s elapsed time, 0.589s cpu time, 0.051s GC time
Found termination order: "size <*mlex*> {}"
### theory "Draft.Interval_Integral_HK"
### 0.218s elapsed time, 0.790s cpu time, 0.051s GC time
Found termination order: "size <*mlex*> {}"
instantiation
  prod :: (zero_neq_one, zero_neq_one) zero_neq_one
  one_prod == one_class.one :: 'a * 'b
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
locale no_real_inner
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.ODE_Auxiliarities"
### 0.683s elapsed time, 1.907s cpu time, 0.131s GC time
Loading theory "Draft.Initial_Value_Problem" (required by "Draft.Upper_Lower_SolutionTemplates" via "Draft.Upper_Lower_Solution" via "Draft.Flow" via "Draft.Picard_Lindeloef_Qualitative")
Loading theory "Draft.Multivariate_Taylor" (required by "Draft.Upper_Lower_SolutionTemplates" via "Draft.Upper_Lower_Solution" via "Draft.Flow")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.984s elapsed time, 6.697s cpu time, 0.986s GC time
Loading theory "Draft.Templates" (required by "Draft.Upper_Lower_SolutionTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.055s elapsed time, 0.183s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Upper_Lower_SolutionTemplates")
locale second_derivative_within
  fixes f :: "'a => 'b"
    and f' :: "'a => 'a \<Rightarrow>\<^sub>L 'b"
    and f'' :: "'a \<Rightarrow>\<^sub>L 'a \<Rightarrow>\<^sub>L 'b"
    and a :: "'a"
    and G :: "'a set"
  assumes "second_derivative_within f f' f'' a G"
locale second_derivative
  fixes f :: "'a => 'b"
    and f' :: "'a => 'a \<Rightarrow>\<^sub>L 'b"
    and f'' :: "'a \<Rightarrow>\<^sub>L 'a \<Rightarrow>\<^sub>L 'b"
    and a :: "'a"
    and G :: "'a set"
  assumes "second_derivative f f' f'' a G"
locale second_derivative_within'
  fixes f :: "'a => 'b"
    and f' :: "'a => 'a => 'b"
    and f'' :: "'a => 'a => 'b"
    and a :: "'a"
    and G :: "'a set"
  assumes "second_derivative_within' f f' f'' a G"
locale second_derivative_on_open
  fixes f :: "'a => 'b"
    and f' :: "'a => 'a => 'b"
    and f'' :: "'a => 'a => 'b"
    and a :: "'a"
    and G :: "'a set"
  assumes "second_derivative_on_open f f' f'' a G"
### theory "Draft.Multivariate_Taylor"
### 0.848s elapsed time, 2.629s cpu time, 0.861s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.805s elapsed time, 2.269s cpu time, 0.786s GC time
locale continuous_rhs
  fixes T :: "'a set"
    and X :: "'b set"
    and f :: "'a => 'b => 'c"
  assumes "continuous_rhs T X f"
locale global_lipschitz
  fixes T :: "'a set"
    and X :: "'b set"
    and f :: "'a => 'b => 'c"
    and L :: "real"
  assumes "global_lipschitz T X f L"
locale closed_domain
  fixes X :: "'a set"
  assumes "closed_domain X"
locale interval
  fixes T :: "real set"
  assumes "interval T"
locale nonempty_set
  fixes T :: "'a set"
  assumes "nonempty_set T"
locale compact_interval
  fixes T :: "real set"
  assumes "compact_interval T"
locale self_mapping
  fixes T :: "real set"
    and t0 :: "real"
    and x0 :: "'a"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
  assumes "self_mapping T t0 x0 f X"
locale unique_on_closed
  fixes t0 :: "real"
    and T :: "real set"
    and x0 :: "'a"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
    and L :: "real"
  assumes "unique_on_closed t0 T x0 f X L"
### Ignoring duplicate introduction (intro)
### [| tmin <= ?t; ?t <= tmax |] ==> ?t : T
### Ignoring duplicate rewrite rule:
### [| tmin <= ?t1; ?t1 <= tmax |] ==> ?t1 : T == True
locale unique_on_bounded_closed
  fixes t0 :: "real"
    and T :: "real set"
    and x0 :: "'a"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
    and L :: "real"
  assumes "unique_on_bounded_closed t0 T x0 f X L"
locale unique_on_closed
  fixes t0 :: "real"
    and T :: "real set"
    and x0 :: "'a"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
    and L :: "real"
  assumes "unique_on_closed t0 T x0 f X L"
consts
  psolution :: "nat => real => 'a"
locale unique_on_strip
  fixes t0 :: "real"
    and T :: "real set"
    and f :: "real => 'a => 'a"
    and L :: "real"
  assumes "unique_on_strip t0 T f L"
locale solution_in_cylinder
  fixes t0 :: "real"
    and T :: "real set"
    and x0 :: "'a"
    and b :: "real"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
    and B :: "real"
  assumes "solution_in_cylinder t0 T x0 b f B"
  defines "X == cball x0 b"
locale unique_on_cylinder
  fixes t0 :: "real"
    and T :: "real set"
    and x0 :: "'a"
    and b :: "real"
    and X :: "'a set"
    and f :: "real => 'a => 'a"
    and B :: "real"
    and L :: "real"
  assumes "unique_on_cylinder t0 T x0 b f B L"
  defines "X == cball x0 b"
locale derivative_on_prod
  fixes T :: "real set"
    and X :: "'a set"
    and f :: "real => 'a => 'a"
    and f' :: "real * 'a => real * 'a => 'a"
  assumes "derivative_on_prod T X f f'"
### theory "Draft.Initial_Value_Problem"
### 1.846s elapsed time, 3.872s cpu time, 0.922s GC time
Loading theory "Draft.Picard_Lindeloef_Qualitative" (required by "Draft.Upper_Lower_SolutionTemplates" via "Draft.Upper_Lower_Solution" via "Draft.Flow")
locale ll_on_open
  fixes T :: "real set"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
  assumes "ll_on_open T f X"
locale ll_on_open_it
  fixes T :: "real set"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
    and t0 :: "real"
  assumes "ll_on_open_it T f X"
locale ll_on_open
  fixes T :: "real set"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
  assumes "ll_on_open T f X"
locale ll_on_open_it
  fixes T :: "real set"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
    and t0 :: "real"
  assumes "ll_on_open_it T f X"
### theory "Draft.Picard_Lindeloef_Qualitative"
### 0.343s elapsed time, 0.378s cpu time, 0.052s GC time
Loading theory "Draft.Flow" (required by "Draft.Upper_Lower_SolutionTemplates" via "Draft.Upper_Lower_Solution")
locale ll_on_open_it
  fixes T :: "real set"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
    and t0 :: "real"
  assumes "ll_on_open_it T f X"
[| ?A ~= {}; compact ?A; open ?B; ?A <= ?B;
   !!e. [| 0 < e; {x. infdist x ?A <= e} <= ?B |] ==> ?thesis |]
==> ?thesis
locale two_ll_on_open
  fixes F :: "real => 'a => 'a"
    and T1 :: "real set"
    and G :: "real => 'a => 'a"
    and T2 :: "real set"
    and X :: "'a set"
    and J :: "real set"
    and x0 :: "'a"
    and e :: "real"
    and K :: "real"
  assumes "two_ll_on_open F T1 G T2 X J x0 e K"
locale auto_ll_on_open
  fixes f :: "'a => 'a"
    and X :: "'a set"
  assumes "auto_ll_on_open f X"
locale compact_continuously_diff
  fixes T :: "real set"
    and X :: "'a set"
    and f :: "real => 'a => 'a"
    and f' :: "'a => 'a \<Rightarrow>\<^sub>L 'a"
  assumes "compact_continuously_diff T X f f'"
locale unique_on_compact_continuously_diff
  fixes T :: "real set"
    and t0 :: "real"
    and x0 :: "'a"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
    and f' :: "'a => 'a \<Rightarrow>\<^sub>L 'a"
  assumes "unique_on_compact_continuously_diff T t0 x0 f X f'"
locale c1_on_open
  fixes f :: "'a => 'a"
    and f' :: "'a => 'a \<Rightarrow>\<^sub>L 'a"
    and X :: "'a set"
  assumes "c1_on_open f f' X"
locale c1_on_open_euclidean
  fixes f :: "'a => 'a"
    and f' :: "'a => 'a \<Rightarrow>\<^sub>L 'a"
    and X :: "'a set"
  assumes "c1_on_open_euclidean f f' X"
### theory "Draft.Flow"
### 1.952s elapsed time, 2.033s cpu time, 0.121s GC time
Loading theory "Draft.Upper_Lower_Solution" (required by "Draft.Upper_Lower_SolutionTemplates")
locale ll_on_open_real
  fixes T :: "real set"
    and f :: "real => real => real"
    and X :: "real set"
  assumes "ll_on_open_real T f X"
### theory "Draft.Upper_Lower_Solution"
### 0.148s elapsed time, 0.148s cpu time, 0.000s GC time
Loading theory "Draft.Upper_Lower_SolutionTemplates"
val templateLemmas =
   [("Upper_Lower_Solution.filtermap_at_left_shift",
     "filtermap (%x. x - ?d) (at_left ?a) = at_left (?a - ?d)",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1))))),
    ("Upper_Lower_Solution.uniform_limit_at_within_subset",
     "[| uniform_limit ?S ?x ?l (at ?t within ?T); ?U <= ?T |]
      ==> uniform_limit ?S ?x ?l (at ?t within ?U)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 5),
               template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 3)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))
           ))),
    ("Upper_Lower_Solution.uniform_limit_ge_const",
     "[| ?I ~= bot; uniform_limit ?X ?f ?g ?I;
         \<forall>\<^sub>F i in ?I. ALL x:?X. ?h x <= ?f i x; ?x : ?X |]
      ==> ?h ?x <= ?g ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 5, template_hole 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, t_empty), template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 3)
            )],
       template_inequation
        (less_equals, template_app (template_var 1, template_var 0),
         template_app (template_var 2, template_var 0)))),
    ("Upper_Lower_Solution.uniform_limit_le_const",
     "[| ?I ~= bot; uniform_limit ?X ?f ?g ?I;
         \<forall>\<^sub>F i in ?I. ALL x:?X. ?f i x <= ?h x; ?x : ?X |]
      ==> ?g ?x <= ?h ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 5, template_hole 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, t_empty), template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 3)
            )],
       template_inequation
        (less_equals, template_app (template_var 2, template_var 0),
         template_app (template_var 1, template_var 0)))),
    ("Upper_Lower_Solution.uniform_limit_le",
     "[| ?I ~= bot; uniform_limit ?X ?f ?g ?I; uniform_limit ?X ?f' ?g' ?I;
         \<forall>\<^sub>F i in ?I. ALL x:?X. ?f i x <= ?f' i x; ?x : ?X |]
      ==> ?g ?x <= ?g' ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 6, template_hole 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 5),
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 1)),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, t_empty), template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 4)
            )],
       template_inequation
        (less_equals, template_app (template_var 3, template_var 0),
         template_app (template_var 1, template_var 0)))),
    ("Upper_Lower_Solution.IVT_min",
     "[| ?f ?a <= ?y; ?y <= ?f ?b; ?a <= ?b; continuous_on {?a..?b} ?f;
         !!x. [| ?a <= x; x <= ?b; ?f x = ?y;
                 !!x'. [| ?a <= x'; x' < x |] ==> ?f x' < ?y |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_var 4, template_var 3),
          template_var 2),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_var 4, template_var 1)),
        template_inequation (less_equals, template_var 3, template_var 1),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 1)),
              template_var 4)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Upper_Lower_Solution.strict_lower_solution",
     "[| (?y solves_ode ?f) ?T ?X; (?v has_vderiv_on ?v') ?T;
         !!t. [| t : ?T; ?t0.0 < t |] ==> ?v' t < ?f t (?v t);
         ?v ?t0.0 <= ?y ?t0.0;
         ?v ?t0.0 = ?y ?t0.0 ==> ?v' ?t0.0 < ?f ?t0.0 (?y ?t0.0);
         ?t0.0 < ?t; ?t0.0 : ?T; ?t : ?T; is_interval ?T |]
      ==> ?v ?t < ?y ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2),
              template_var 5)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_inequation
         (less_equals, template_app (template_var 3, template_var 1),
          template_app (template_var 7, template_var 1)),
        template_implication
         ([template_equation
            (template_app (template_var 3, template_var 1),
             template_app (template_var 7, template_var 1))],
          template_inequation
           (less_than, template_app (template_var 2, template_var 1),
            template_app
             (template_app (template_var 6, template_var 1),
              template_app (template_var 7, template_var 1)))),
        template_inequation (less_than, template_var 1, template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 5)
            ),
        template_predicate
         (template_app (template_hole 0, template_var 5))],
       template_inequation
        (less_than, template_app (template_var 3, template_var 0),
         template_app (template_var 7, template_var 0)))),
    ("Upper_Lower_Solution.strict_upper_solution",
     "[| (?y solves_ode ?f) ?T ?X; (?w has_vderiv_on ?w') ?T;
         !!t. [| t : ?T; ?t0.0 < t |] ==> ?f t (?w t) < ?w' t;
         ?y ?t0.0 <= ?w ?t0.0;
         ?y ?t0.0 = ?w ?t0.0 ==> ?f ?t0.0 (?y ?t0.0) < ?w' ?t0.0;
         ?t0.0 < ?t; ?t0.0 : ?T; ?t : ?T; is_interval ?T |]
      ==> ?y ?t < ?w ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2),
              template_var 5)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_inequation
         (less_equals, template_app (template_var 7, template_var 1),
          template_app (template_var 3, template_var 1)),
        template_implication
         ([template_equation
            (template_app (template_var 7, template_var 1),
             template_app (template_var 3, template_var 1))],
          template_inequation
           (less_than,
            template_app
             (template_app (template_var 6, template_var 1),
              template_app (template_var 7, template_var 1)),
            template_app (template_var 2, template_var 1))),
        template_inequation (less_than, template_var 1, template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 5)
            ),
        template_predicate
         (template_app (template_hole 0, template_var 5))],
       template_inequation
        (less_than, template_app (template_var 7, template_var 0),
         template_app (template_var 3, template_var 0)))),
    ("Upper_Lower_Solution.has_derivatives_less_lemma",
     "[| (?v has_vderiv_on ?v') ?T; (?y has_vderiv_on ?y') ?T;
         !!t. [| t : ?T; ?t0.0 < t |]
              ==> ?v' t - ?f t (?v t) < ?y' t - ?f t (?y t);
         ?v ?t0.0 <= ?y ?t0.0;
         ?v ?t0.0 = ?y ?t0.0 ==> ?v' ?t0.0 < ?y' ?t0.0; ?t0.0 < ?t;
         ?t0.0 : ?T; ?t : ?T; is_interval ?T |]
      ==> ?v ?t < ?y ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 4),
                template_var 3),
              template_var 5)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_inequation
         (less_equals, template_app (template_var 7, template_var 2),
          template_app (template_var 4, template_var 2)),
        template_implication
         ([template_equation
            (template_app (template_var 7, template_var 2),
             template_app (template_var 4, template_var 2))],
          template_inequation
           (less_than, template_app (template_var 6, template_var 2),
            template_app (template_var 3, template_var 2))),
        template_inequation (less_than, template_var 2, template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 5)
            ),
        template_predicate
         (template_app (template_hole 0, template_var 5))],
       template_inequation
        (less_than, template_app (template_var 7, template_var 0),
         template_app (template_var 4, template_var 0)))),
    ("Upper_Lower_Solution.defect_less",
     "[| (?v has_vderiv_on ?v') {?t0.0<..?t1.0};
         (?w has_vderiv_on ?w') {?t0.0<..?t1.0}; ?t0.0 < ?t1.0; 0 < ?e;
         ?t0.0 + ?e <= ?t1.0;
         !!t. [| ?t0.0 < t; t < ?t0.0 + ?e |] ==> ?v t < ?w t;
         !!t. [| ?t0.0 < t; t <= ?t1.0 |]
              ==> ?v' t - ?f t (?v t) < ?w' t - ?f t (?w t) |]
      ==> ALL t:{?t0.0<..?t1.0}. ?v t < ?w t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 7),
                template_var 6),
              template_app
               (template_app (template_hole 7, template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 7, template_var 5),
                template_var 4))
            ),
        template_inequation (less_than, template_var 5, template_var 4),
        template_inequation (less_than, template_hole 5, template_var 1),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 5), template_var 1),
          template_var 4),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 7, template_var 5),
                 template_var 4)),
             t_empty)
           ))),
    ("Upper_Lower_Solution.first_intersection_crossing_derivatives",
     "[| (?v has_vderiv_on ?v') {?t0.0<..?t1.0};
         (?w has_vderiv_on ?w') {?t0.0<..?t1.0}; ?t0.0 < ?t1.0; 0 < ?e;
         ?t0.0 + ?e <= ?t1.0;
         !!t. [| ?t0.0 < t; t < ?t0.0 + ?e |] ==> ?v t < ?w t; ?t0.0 < ?tg;
         ?tg <= ?t1.0; ?w ?tg <= ?v ?tg;
         !!x0. [| ?t0.0 < x0; x0 <= ?tg; ?w' x0 <= ?v' x0; ?v x0 = ?w x0;
                  !!t. [| ?t0.0 < t; t < x0 |] ==> ?v t < ?w t |]
               ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 8),
                template_var 7),
              template_app
               (template_app (template_hole 6, template_var 6),
                template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 4),
                template_var 3),
              template_app
               (template_app (template_hole 6, template_var 6),
                template_var 5))
            ),
        template_inequation (less_than, template_var 6, template_var 5),
        template_inequation (less_than, template_hole 4, template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 6), template_var 2),
          template_var 5),
        template_predicate (template_app (template_hole 1, t_empty)),
        template_inequation (less_than, template_var 6, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 5),
        template_inequation
         (less_equals, template_app (template_var 4, template_var 1),
          template_app (template_var 8, template_var 1)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.Upper_Lower_SolutionTemplates"
### 1.477s elapsed time, 2.467s cpu time, 1.127s GC time
val it = (): unit
