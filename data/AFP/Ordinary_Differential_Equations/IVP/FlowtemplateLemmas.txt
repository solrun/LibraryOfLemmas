   [("Flow.integrable_on_simps", "?f integrable_on {}",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Flow.integrable_on_simps", "(%x. 0::?'b) integrable_on ?S",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)
         )),
    ("Flow.blinfun_compose_1_left", "?x o\<^sub>L 1\<^sub>L = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Flow.blinfun_compose_1_right", "1\<^sub>L o\<^sub>L ?y = ?y",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Flow.integrable_on_simps", "?f integrable_on cbox ?a ?a",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 0))
         )),
    ("Flow.integrable_on_refl_ivl", "?g integrable_on {?b..?b}",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 0))
         )),
    ("Flow.integrable_on_refl_closed_segment", "?h integrable_on {?a--?a}",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 0))
         )),
    ("Flow.integrable_on_simps", "(%x. ?c) integrable_on cbox ?a ?b",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, t_empty),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Flow.integrable_on_simps", "(%x. ?c) integrable_on {?a..?b}",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, t_empty),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Flow.integrable_const_ivl_closed_segment",
     "(%x. ?c) integrable_on {?a--?b}",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, t_empty),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Flow.integrable_ident_ivl", "(%x. x) integrable_on {?a--?b}",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, t_empty),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Flow.integrable_on_simps", "(%x. x) integrable_on {?a..?b}",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, t_empty),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Flow.integrable_ident_cbox", "(%x. x) integrable_on cbox ?a ?b",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, t_empty),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Flow.dist_cancel_add1", "dist (?t0.0 + ?et) ?t0.0 = norm ?et",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_var 1),
       template_app (template_hole 0, template_var 0))),
    ("Flow.content_closed_segment_real",
     "content {?a--?b} = \<bar>?b - ?a\<bar>",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Flow.blinfun_inverse_left",
     "(?f o\<^sub>L ?f' = 1\<^sub>L) = (?f' o\<^sub>L ?f = 1\<^sub>L)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Flow.integrable_on_simps",
     "?f integrable_on ?S ==> (%x. - ?f x) integrable_on ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 0)
           ))),
    ("Flow.integrable_on_simps",
     "?f integrable_on ?S ==> (%x. ?c *\<^sub>R ?f x) integrable_on ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 1)
           ))),
    ("Flow.integrable_cmul_real",
     "?f integrable_on ?X ==> (%x. ?K * ?f x) integrable_on ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 1)
           ))),
    ("Flow.integral_const_closed_segment",
     "integral {?a--?b} (%x. ?c) = \<bar>?b - ?a\<bar> *\<^sub>R ?c",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))),
         template_var 0))),
    ("Flow.blinfun_ext",
     "(?x = ?y) = (ALL i. blinfun_apply ?x i = blinfun_apply ?y i)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Flow.integrable_on_simps",
     "?f integrable_on ?S ==> (%x. of_real ?c * ?f x) integrable_on ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty), template_var 1)
           ))),
    ("Flow.integrable_on_simps",
     "?f integrable_on ?s ==> (%x. ?f x * of_real ?c) integrable_on ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty), template_var 1)
           ))),
    ("Flow.integrable_on_simps",
     "?f integrable_on ?s ==> (%x. ?f x / of_real ?c) integrable_on ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty), template_var 1)
           ))),
    ("Flow.integrable_on_simps",
     "?c ~= 0 ==>
      ((%x. ?c * ?f x) integrable_on ?S) = (?f integrable_on ?S)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 3))],
       template_equation
        (template_app
          (template_app (template_hole 1, t_empty), template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Flow.double_nonneg_le", "[| ?a * 2 <= ?b; 0 <= ?a |] ==> ?a <= ?b",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_hole 1))),
          template_var 0),
        template_inequation (less_equals, template_hole 0, template_var 1)],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Flow.integrable_on_simps",
     "?c ~= 0 ==>
      ((%x. of_real ?c * ?f x) integrable_on ?s) = (?f integrable_on ?s)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 2, t_empty), template_var 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Flow.integrable_on_simps",
     "?c ~= 0 ==>
      ((%x. ?f x * of_real ?c) integrable_on ?s) = (?f integrable_on ?s)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 2, t_empty), template_var 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Flow.integrable_on_simps",
     "?c ~= 0 ==>
      ((%x. ?f x / of_real ?c) integrable_on ?s) = (?f integrable_on ?s)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 2, t_empty), template_var 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Flow.integrable_on_simps",
     "[| ?f integrable_on ?S; ?g integrable_on ?S |]
      ==> (%x. ?f x - ?g x) integrable_on ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 1)
           ))),
    ("Flow.integrable_on_simps",
     "[| ?f integrable_on ?S; ?g integrable_on ?S |]
      ==> (%x. ?f x + ?g x) integrable_on ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 1)
           ))),
    ("Flow.integrable_on_simps",
     "[| finite ?I; !!a. a : ?I ==> ?f a integrable_on ?S |]
      ==> (%x. SUM a:?I. ?f a x) integrable_on ?S",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 0)
           )))]
