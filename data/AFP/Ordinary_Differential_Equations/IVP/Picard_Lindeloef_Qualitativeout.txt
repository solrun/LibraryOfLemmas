Loading theory "Draft.Vector_Derivative_On" (required by "Draft.Picard_Lindeloef_QualitativeTemplates" via "Draft.Picard_Lindeloef_Qualitative" via "Draft.Initial_Value_Problem" via "Draft.Interval_Integral_HK")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Picard_Lindeloef_QualitativeTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Stream" (required by "Draft.Picard_Lindeloef_QualitativeTemplates" via "Draft.ExtrEqs")
Loading theory "HOL-Library.Tree" (required by "Draft.Picard_Lindeloef_QualitativeTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.151s elapsed time, 0.610s cpu time, 0.055s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Picard_Lindeloef_QualitativeTemplates" via "Draft.ExtrEqs")
### theory "Draft.Vector_Derivative_On"
### 0.189s elapsed time, 0.767s cpu time, 0.055s GC time
Loading theory "Draft.Gronwall" (required by "Draft.Picard_Lindeloef_QualitativeTemplates" via "Draft.Picard_Lindeloef_Qualitative" via "Draft.Initial_Value_Problem")
### theory "Draft.Gronwall"
### 0.161s elapsed time, 0.618s cpu time, 0.101s GC time
Loading theory "Draft.Interval_Integral_HK" (required by "Draft.Picard_Lindeloef_QualitativeTemplates" via "Draft.Picard_Lindeloef_Qualitative" via "Draft.Initial_Value_Problem")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
### theory "Draft.Interval_Integral_HK"
### 0.202s elapsed time, 0.787s cpu time, 0.058s GC time
Loading theory "Draft.ODE_Auxiliarities" (required by "Draft.Picard_Lindeloef_QualitativeTemplates" via "Draft.Picard_Lindeloef_Qualitative" via "Draft.Initial_Value_Problem")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.880s elapsed time, 3.431s cpu time, 0.394s GC time
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.784s elapsed time, 2.993s cpu time, 0.340s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
instantiation
  prod :: (zero_neq_one, zero_neq_one) zero_neq_one
  one_prod == one_class.one :: 'a * 'b
Found termination order: "size <*mlex*> {}"
locale no_real_inner
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "Draft.ODE_Auxiliarities"
### 0.982s elapsed time, 2.826s cpu time, 0.773s GC time
Loading theory "Draft.Initial_Value_Problem" (required by "Draft.Picard_Lindeloef_QualitativeTemplates" via "Draft.Picard_Lindeloef_Qualitative")
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.036s elapsed time, 6.078s cpu time, 1.124s GC time
Loading theory "Draft.Templates" (required by "Draft.Picard_Lindeloef_QualitativeTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.053s elapsed time, 0.125s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Picard_Lindeloef_QualitativeTemplates")
locale continuous_rhs
  fixes T :: "'a set"
    and X :: "'b set"
    and f :: "'a => 'b => 'c"
  assumes "continuous_rhs T X f"
locale global_lipschitz
  fixes T :: "'a set"
    and X :: "'b set"
    and f :: "'a => 'b => 'c"
    and L :: "real"
  assumes "global_lipschitz T X f L"
locale closed_domain
  fixes X :: "'a set"
  assumes "closed_domain X"
locale interval
  fixes T :: "real set"
  assumes "interval T"
locale nonempty_set
  fixes T :: "'a set"
  assumes "nonempty_set T"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.548s elapsed time, 1.156s cpu time, 0.135s GC time
locale compact_interval
  fixes T :: "real set"
  assumes "compact_interval T"
locale self_mapping
  fixes T :: "real set"
    and t0 :: "real"
    and x0 :: "'a"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
  assumes "self_mapping T t0 x0 f X"
locale unique_on_closed
  fixes t0 :: "real"
    and T :: "real set"
    and x0 :: "'a"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
    and L :: "real"
  assumes "unique_on_closed t0 T x0 f X L"
### Ignoring duplicate introduction (intro)
### [| tmin <= ?t; ?t <= tmax |] ==> ?t : T
### Ignoring duplicate rewrite rule:
### [| tmin <= ?t1; ?t1 <= tmax |] ==> ?t1 : T == True
locale unique_on_bounded_closed
  fixes t0 :: "real"
    and T :: "real set"
    and x0 :: "'a"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
    and L :: "real"
  assumes "unique_on_bounded_closed t0 T x0 f X L"
locale unique_on_closed
  fixes t0 :: "real"
    and T :: "real set"
    and x0 :: "'a"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
    and L :: "real"
  assumes "unique_on_closed t0 T x0 f X L"
consts
  psolution :: "nat => real => 'a"
locale unique_on_strip
  fixes t0 :: "real"
    and T :: "real set"
    and f :: "real => 'a => 'a"
    and L :: "real"
  assumes "unique_on_strip t0 T f L"
locale solution_in_cylinder
  fixes t0 :: "real"
    and T :: "real set"
    and x0 :: "'a"
    and b :: "real"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
    and B :: "real"
  assumes "solution_in_cylinder t0 T x0 b f B"
  defines "X == cball x0 b"
locale unique_on_cylinder
  fixes t0 :: "real"
    and T :: "real set"
    and x0 :: "'a"
    and b :: "real"
    and X :: "'a set"
    and f :: "real => 'a => 'a"
    and B :: "real"
    and L :: "real"
  assumes "unique_on_cylinder t0 T x0 b f B L"
  defines "X == cball x0 b"
locale derivative_on_prod
  fixes T :: "real set"
    and X :: "'a set"
    and f :: "real => 'a => 'a"
    and f' :: "real * 'a => real * 'a => 'a"
  assumes "derivative_on_prod T X f f'"
### theory "Draft.Initial_Value_Problem"
### 1.558s elapsed time, 2.799s cpu time, 0.321s GC time
Loading theory "Draft.Picard_Lindeloef_Qualitative" (required by "Draft.Picard_Lindeloef_QualitativeTemplates")
locale ll_on_open
  fixes T :: "real set"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
  assumes "ll_on_open T f X"
locale ll_on_open_it
  fixes T :: "real set"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
    and t0 :: "real"
  assumes "ll_on_open_it T f X"
locale ll_on_open
  fixes T :: "real set"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
  assumes "ll_on_open T f X"
locale ll_on_open_it
  fixes T :: "real set"
    and f :: "real => 'a => 'a"
    and X :: "'a set"
    and t0 :: "real"
  assumes "ll_on_open_it T f X"
### theory "Draft.Picard_Lindeloef_Qualitative"
### 0.344s elapsed time, 0.380s cpu time, 0.054s GC time
Loading theory "Draft.Picard_Lindeloef_QualitativeTemplates"
val templateLemmas =
   [("Picard_Lindeloef_Qualitative.le_real_sqrt_sumsq'",
     "?y <= sqrt (?x * ?x + ?y * ?y)",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 1))))),
    ("Picard_Lindeloef_Qualitative.Pair1_in_Basis",
     "?i : Basis ==> (?i, 0::?'b) : Basis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             template_hole 0)
           ))),
    ("Picard_Lindeloef_Qualitative.Pair2_in_Basis",
     "?i : Basis ==> (0::?'c, ?i) : Basis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("Picard_Lindeloef_Qualitative.cball_Pair_split_subset",
     "cball (?a, ?b) ?c <= cball ?a ?c \<times> cball ?b ?c",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         t_empty))),
    ("Picard_Lindeloef_Qualitative.cball_eq_sing'",
     "(cball ?x ?e = {?y}) = (?e = 0 & ?x = ?y)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 5, template_var 0),
           template_hole 4)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Picard_Lindeloef_Qualitative.cball_eq_closed_segment_real",
     "cball ?x ?e = (if 0 <= ?e then {?x - ?e--?x + ?e} else {})",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 0)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_hole 0))),
    ("Picard_Lindeloef_Qualitative.cball_times_subset",
     "cball ?a (?c / 2) \<times> cball ?b (?c / 2) <= cball (?a, ?b) ?c",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_app
              (template_app (template_hole 6, template_var 1),
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_hole 3))))),
         t_empty),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Picard_Lindeloef_Qualitative.eventually_in_cballs",
     "[| 0 < ?d; 0 < ?c |]
      ==> \<forall>\<^sub>F e in at_right 0.
             cball ?t0.0 (?c * e) \<times> cball ?x0.0 e
             <= cball (?t0.0, ?x0.0) ?d",
     template_implication
      ([template_inequation (less_than, template_hole 10, template_var 3),
        template_inequation (less_than, template_hole 10, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 9, t_empty),
             template_app
              (template_app (template_hole 1, template_hole 10),
               template_app (template_hole 0, template_hole 10)))
           ))),
    ("Picard_Lindeloef_Qualitative.cube_in_cball",
     "[| 0 < ?r;
         !!i. i : Basis ==>
              dist (?x \<bullet> i) (?y \<bullet> i)
              <= ?r / sqrt (real DIM(?'a)) |]
      ==> ?y : cball ?x ?r",
     template_implication
      ([template_inequation (less_than, template_hole 11, template_var 2),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 9, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("Picard_Lindeloef_Qualitative.cbox_in_cball'",
     "0 < ?r ==>
      EX b>0.
         b <= ?r &
         (EX B. B = sum ((*\<^sub>R) b) Basis &
                (ALL y:cbox (?x - B) (?x + B). y : cball ?x ?r))",
     template_implication
      ([template_inequation (less_than, template_hole 14, template_var 1)],
       template_predicate (template_app (template_hole 13, t_empty)))),
    ("Picard_Lindeloef_Qualitative.eventually_bound_pairE",
     "[| isCont ?f (?t0.0, ?x0.0);
         !!B. [| 1 <= B;
                 \<forall>\<^sub>F e in at_right 0.
                    ALL x:cball ?t0.0 e \<times> cball ?x0.0 e.
                       norm (?f x) <= B |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app
                   (template_hole 14,
                    template_app
                     (template_app (template_hole 13, template_var 3),
                      template_var 2)),
                  template_hole 12)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.Picard_Lindeloef_QualitativeTemplates"
### 1.132s elapsed time, 1.391s cpu time, 0.172s GC time
val it = (): unit
