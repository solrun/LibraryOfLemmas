   [("Picard_Lindeloef_Qualitative.le_real_sqrt_sumsq'",
     "?y <= sqrt (?x * ?x + ?y * ?y)",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 1))))),
    ("Picard_Lindeloef_Qualitative.Pair1_in_Basis",
     "?i : Basis ==> (?i, 0::?'b) : Basis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             template_hole 0)
           ))),
    ("Picard_Lindeloef_Qualitative.Pair2_in_Basis",
     "?i : Basis ==> (0::?'c, ?i) : Basis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("Picard_Lindeloef_Qualitative.cball_Pair_split_subset",
     "cball (?a, ?b) ?c <= cball ?a ?c \<times> cball ?b ?c",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         t_empty))),
    ("Picard_Lindeloef_Qualitative.cball_eq_sing'",
     "(cball ?x ?e = {?y}) = (?e = 0 & ?x = ?y)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 5, template_var 0),
           template_hole 4)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Picard_Lindeloef_Qualitative.cball_eq_closed_segment_real",
     "cball ?x ?e = (if 0 <= ?e then {?x - ?e--?x + ?e} else {})",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 0)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_hole 0))),
    ("Picard_Lindeloef_Qualitative.cball_times_subset",
     "cball ?a (?c / 2) \<times> cball ?b (?c / 2) <= cball (?a, ?b) ?c",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_app
              (template_app (template_hole 6, template_var 1),
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_hole 3))))),
         t_empty),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Picard_Lindeloef_Qualitative.eventually_in_cballs",
     "[| 0 < ?d; 0 < ?c |]
      ==> \<forall>\<^sub>F e in at_right 0.
             cball ?t0.0 (?c * e) \<times> cball ?x0.0 e
             <= cball (?t0.0, ?x0.0) ?d",
     template_implication
      ([template_inequation (less_than, template_hole 10, template_var 3),
        template_inequation (less_than, template_hole 10, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 9, t_empty),
             template_app
              (template_app (template_hole 1, template_hole 10),
               template_app (template_hole 0, template_hole 10)))
           ))),
    ("Picard_Lindeloef_Qualitative.cube_in_cball",
     "[| 0 < ?r;
         !!i. i : Basis ==>
              dist (?x \<bullet> i) (?y \<bullet> i)
              <= ?r / sqrt (real DIM(?'a)) |]
      ==> ?y : cball ?x ?r",
     template_implication
      ([template_inequation (less_than, template_hole 11, template_var 2),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 9, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("Picard_Lindeloef_Qualitative.cbox_in_cball'",
     "0 < ?r ==>
      EX b>0.
         b <= ?r &
         (EX B. B = sum ((*\<^sub>R) b) Basis &
                (ALL y:cbox (?x - B) (?x + B). y : cball ?x ?r))",
     template_implication
      ([template_inequation (less_than, template_hole 14, template_var 1)],
       template_predicate (template_app (template_hole 13, t_empty)))),
    ("Picard_Lindeloef_Qualitative.eventually_bound_pairE",
     "[| isCont ?f (?t0.0, ?x0.0);
         !!B. [| 1 <= B;
                 \<forall>\<^sub>F e in at_right 0.
                    ALL x:cball ?t0.0 e \<times> cball ?x0.0 e.
                       norm (?f x) <= B |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app
                   (template_hole 14,
                    template_app
                     (template_app (template_hole 13, template_var 3),
                      template_var 2)),
                  template_hole 12)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_var 0)))]
