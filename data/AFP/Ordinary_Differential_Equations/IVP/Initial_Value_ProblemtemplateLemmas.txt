   [("Initial_Value_Problem.is_interval_singleton", "is_interval {?t0.0}",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("Initial_Value_Problem.half_open_segment_subset",
     "{?t0.0--<?t1.0} <= {?t0.0--?t1.0}",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Initial_Value_Problem.solves_ode_continuous_on",
     "(?y solves_ode ?f) ?T ?X ==> continuous_on ?T ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 3)
           ))),
    ("Initial_Value_Problem.usolves_odeD",
     "(?y usolves_ode ?f from ?t0.0) ?T ?X ==> is_interval ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Initial_Value_Problem.clamp_le", "?x <= ?a ==> clamp ?a ?b ?x = ?a",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2),
         template_var 1))),
    ("Initial_Value_Problem.usolves_odeD",
     "(?y usolves_ode ?f from ?t0.0) ?T ?X ==> ?t0.0 : ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 1)
           ))),
    ("Initial_Value_Problem.half_open_segment_subset",
     "?x : {?t0.0--<?t1.0} ==> ?x : {?t0.0--?t1.0}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Initial_Value_Problem.closure_half_open_segment",
     "closure {?a--<?b} = (if ?a = ?b then {} else {?a--?b})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0)),
               template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Initial_Value_Problem.sum_inner_Basis_one",
     "?i : Basis ==> (SUM x:Basis. x \<bullet> ?i) = 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, t_empty), template_hole 4),
         template_hole 0))),
    ("Initial_Value_Problem.solves_ode_singleton",
     "?y ?t0.0 : ?X ==> (?y solves_ode ?f) {?t0.0} ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_var 3, template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 0),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0)),
             template_var 1)
           ))),
    ("Initial_Value_Problem.usolves_odeD",
     "(?y usolves_ode ?f from ?t0.0) ?T ?X ==> (?y solves_ode ?f) ?T ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 1),
             template_var 0)
           ))),
    ("Initial_Value_Problem.half_open_segment_real",
     "{?a--<?b} = (if ?a <= ?b then {?a..<?b} else {?b<..?a})",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Initial_Value_Problem.usolves_ode_singleton",
     "?x ?t0.0 : ?X ==> (?x usolves_ode ?f from ?t0.0) {?t0.0} ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_var 3, template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 0),
                 template_var 2),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0)),
             template_var 1)
           ))),
    ("Initial_Value_Problem.closed_segment_half_open_segment_subsetI",
     "?x : {?t0.0--<?t1.0} ==> {?t0.0--?x} <= {?t0.0--<?t1.0}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Initial_Value_Problem.closed_segment_translation_zero",
     "(?z : {?z + ?a--?z + ?b}) = ((0::?'a) : {?a--?b})",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))),
       template_app
        (template_app (template_hole 3, template_hole 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Initial_Value_Problem.solves_ode_vderivD",
     "(?y solves_ode ?f) ?T ?X ==> (?y has_vderiv_on (%t. ?f t (?y t))) ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3), t_empty),
             template_var 1)
           ))),
    ("Initial_Value_Problem.dist_component_le",
     "?i : Basis ==>
      dist (?x \<bullet> ?i) (?y \<bullet> ?i) <= dist ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_hole 4)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Initial_Value_Problem.clamp_ge",
     "[| ?a <= ?b; ?b <= ?x |] ==> clamp ?a ?b ?x = ?b",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0),
         template_var 1))),
    ("Initial_Value_Problem.solves_ode_domainD",
     "[| (?y solves_ode ?f) ?T ?X; ?t : ?T |] ==> ?y ?t : ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_var 4, template_var 0)),
             template_var 1)
           ))),
    ("Initial_Value_Problem.closed_segment_Un",
     "?b : {?a--?c} ==> {?a--?b} Un {?b--?c} = {?a--?c}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Initial_Value_Problem.islimpt_half_open_segment",
     "[| ?t0.0 ~= ?t1.0; ?s : {?t0.0--?t1.0} |]
      ==> ?s islimpt {?t0.0--<?t1.0}",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("Initial_Value_Problem.half_open_segment_closed_segmentI",
     "[| ?t : {?t0.0--?t1.0}; ?t ~= ?t1.0 |] ==> ?t : {?t0.0--<?t1.0}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            ),
        template_negation
         (template_equation (template_var 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Initial_Value_Problem.mem_half_open_segment_eventually_in_closed_segment",
     "?t : {?t0.0--<?t1'} ==>
      \<forall>\<^sub>F t1' in at ?t1' within {?t0.0--<?t1'}.
         ?t : {?t0.0--t1'}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)))
           ))),
    ("Initial_Value_Problem.solves_ode_subset_range",
     "[| (?x solves_ode ?f) ?T ?X; ?x ` ?T <= ?Y |]
      ==> (?x solves_ode ?f) ?T ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 0, template_var 4), template_var 2),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Initial_Value_Problem.closed_segment_subset_interval",
     "[| is_interval ?T; ?a : ?T; ?b : ?T |] ==> {?a--?b} <= ?T",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 2))),
    ("Initial_Value_Problem.cball_in_cbox",
     "cball ?y ?r <= cbox (?y - ?r *\<^sub>R One) (?y + ?r *\<^sub>R One)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_app (template_hole 2, t_empty),
                 template_hole 1)))),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app (template_hole 2, t_empty),
               template_hole 1)))))),
    ("Initial_Value_Problem.solves_ode_on_subset",
     "[| (?x solves_ode ?f) ?S ?Y; ?T <= ?S; ?Y <= ?X |]
      ==> (?x solves_ode ?f) ?T ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 3),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 5),
                 template_var 4),
               template_var 1),
             template_var 0)
           ))),
    ("Initial_Value_Problem.centered_cbox_in_cball",
     "cbox (- ?r *\<^sub>R One) (?r *\<^sub>R One)
      <= cball (0::?'a) (sqrt (real DIM(?'a)) * ?r)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9,
               template_app (template_hole 8, template_var 0)),
             template_app
              (template_app (template_hole 7, t_empty), template_hole 6))),
         template_app
          (template_app (template_hole 9, template_var 0),
           template_app
            (template_app (template_hole 7, t_empty), template_hole 6))),
       template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_hole 6)))),
           template_var 0)))),
    ("Initial_Value_Problem.closed_segment_closed_segment_subset",
     "[| ?s : {?a--?b}; ?a : {?c--?d}; ?b : {?c--?d} |] ==> ?s : {?c--?d}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 4),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Initial_Value_Problem.usolves_ode_subset_range",
     "[| (?x usolves_ode ?f from ?t0.0) ?T ?X; ?x ` ?T <= ?Y; ?Y <= ?X |]
      ==> (?x usolves_ode ?f from ?t0.0) ?T ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 0, template_var 5), template_var 2),
          template_var 0),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Initial_Value_Problem.solves_odeI",
     "[| (?y has_vderiv_on (%t. ?f t (?y t))) ?T;
         !!t. t : ?T ==> ?y t : ?X |]
      ==> (?y solves_ode ?f) ?T ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3), t_empty),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Initial_Value_Problem.usolves_ode_solves_odeI",
     "[| (?x usolves_ode ?f from ?tx) ?T ?X; (?y solves_ode ?f) ?T ?X;
         ?y ?tx = ?x ?tx |]
      ==> (?y usolves_ode ?f from ?tx) ?T ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 4),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app (template_var 0, template_var 3),
          template_app (template_var 5, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 0),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("Initial_Value_Problem.is_solution_ext_cont",
     "continuous_on {?t0.0--?t1.0} ?x ==>
      (ext_cont ?x (min ?t0.0 ?t1.0) (max ?t0.0 ?t1.0) solves_ode ?f)
       {?t0.0--?t1.0} ?X =
      (?x solves_ode ?f) {?t0.0--?t1.0} ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3)),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 2),
                     template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3)),
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3))),
               template_var 1),
             template_app
              (template_app (template_hole 5, template_var 4),
               template_var 3)),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_app
              (template_app (template_hole 5, template_var 4),
               template_var 3)),
           template_var 0)))),
    ("Initial_Value_Problem.solution_eq_preflect_solution",
     "?t0.0 : ?T ==>
      (?x solves_ode ?f) ?T ?X =
      ((%t. ?x (preflect ?t0.0 t)) solves_ode
       (%t x. - ?f (preflect ?t0.0 t) x))
       (preflect ?t0.0 ` ?T) ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, t_empty), t_empty),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 2, template_var 4)),
               template_var 3)),
           template_var 0)))),
    ("Initial_Value_Problem.solution_fixed_point_left",
     "[| (?x solves_ode ?f) {?t0.0--?t1.0} ?X; ?t : {?t0.0--?t1.0} |]
      ==> ?x ?t1.0 - ivl_integral ?t ?t1.0 (%t. ?f t (?x t)) = ?x ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_var 5, template_var 2)),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             t_empty)),
         template_app (template_var 5, template_var 0)))),
    ("Initial_Value_Problem.solution_fixed_point",
     "[| (?x solves_ode ?f) {?t0.0--?t1.0} ?X; ?t : {?t0.0--?t1.0} |]
      ==> ?x ?t0.0 + ivl_integral ?t0.0 ?t (%t. ?f t (?x t)) = ?x ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_var 5, template_var 3)),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0),
             t_empty)),
         template_app (template_var 5, template_var 0)))),
    ("Initial_Value_Problem.solution_preflect",
     "[| ?t0.0 : ?T; (?x solves_ode ?f) ?T ?X |]
      ==> ((%t. ?x (preflect ?t0.0 t)) solves_ode
           (%t x. - ?f (preflect ?t0.0 t) x))
           (preflect ?t0.0 ` ?T) ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, t_empty), t_empty),
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 2, template_var 4)),
                 template_var 3)),
             template_var 0)
           ))),
    ("Initial_Value_Problem.preflect_solution",
     "[| ?t0.0 : ?T;
         ((%t. ?x (preflect ?t0.0 t)) solves_ode
          (%t x. - ?f (preflect ?t0.0 t) x))
          (preflect ?t0.0 ` ?T) ?X |]
      ==> (?x solves_ode ?f) ?T ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, t_empty), t_empty),
                template_app
                 (template_app
                   (template_hole 0,
                    template_app (template_hole 2, template_var 4)),
                  template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1),
               template_var 3),
             template_var 0)
           ))),
    ("Initial_Value_Problem.shift_autonomous_solution",
     "[| (?x solves_ode ?f) ?T ?X;
         !!s t. s : ?T ==> ?f s (?x s) = ?f t (?x s) |]
      ==> ((%t. ?x (t + ?t0.0)) solves_ode ?f) ((%t. t - ?t0.0) ` ?T) ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 6, t_empty), template_var 3),
               template_app
                (template_app (template_hole 1, t_empty), template_var 2)),
             template_var 1)
           ))),
    ("Initial_Value_Problem.shift_autonomous_unique_solution",
     "[| (?x usolves_ode ?f from ?t0.0) ?T ?X;
         !!s t x. x : ?X ==> ?f s x = ?f t x |]
      ==> ((%t. ?x (t + ?t0.0 - ?t1.0)) usolves_ode ?f from ?t1.0)
           ((+) (?t1.0 - ?t0.0) ` ?T) ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 7, t_empty), template_var 4),
                 template_var 0),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 2, template_var 0),
                       template_var 3))),
                 template_var 2)),
             template_var 1)
           ))),
    ("Initial_Value_Problem.usolves_odeD",
     "[| (?y usolves_ode ?f from ?t0.0) ?T ?X; ?t0.0 : ?T'; is_interval ?T';
         ?T' <= ?T; (?z solves_ode ?f) ?T' ?X; ?z ?t0.0 = ?y ?t0.0;
         ?t : ?T' |]
      ==> ?z ?t = ?y ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 5),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 3, template_var 2)),
        template_inequation (less_equals, template_var 2, template_var 4),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 6),
                template_var 2),
              template_var 3)
            ),
        template_equation
         (template_app (template_var 1, template_var 5),
          template_app (template_var 7, template_var 5)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app (template_var 1, template_var 0),
         template_app (template_var 7, template_var 0)))),
    ("Initial_Value_Problem.three_intervals_lemma",
     "[| ?a : ?A - ?B; ?b : ?B - ?A; ?c : ?A Int ?B; is_interval ?A;
         is_interval ?B; ?a : ?I; ?b : ?I; is_interval ?I |]
      ==> ?c : ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 5),
              template_app
               (template_app (template_hole 2, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 1, template_var 4),
                template_var 3))
            ),
        template_predicate (template_app (template_hole 0, template_var 4)),
        template_predicate (template_app (template_hole 0, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 5),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1), template_var 0)
           ))),
    ("Initial_Value_Problem.solves_ode_cong",
     "[| !!t. t : ?T ==> ?x t = ?y t;
         !!t. t : ?T ==> ?f t (?x t) = ?g t (?x t); ?T = ?S; ?X = ?Y |]
      ==> (?x solves_ode ?f) ?T ?X = (?y solves_ode ?g) ?S ?Y",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_equation (template_var 7, template_var 2),
        template_equation (template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 6),
               template_var 4),
             template_var 7),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 3),
             template_var 2),
           template_var 0)))),
    ("Initial_Value_Problem.solves_ode_congI",
     "[| (?x solves_ode ?f) ?T ?X; !!t. t : ?T ==> ?x t = ?y t;
         !!t. t : ?T ==> ?f t (?x t) = ?g t (?x t); ?T = ?S; ?X = ?Y |]
      ==> (?y solves_ode ?g) ?S ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_equation (template_var 5, template_var 1),
        template_equation (template_var 4, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Initial_Value_Problem.usolves_odeI",
     "[| (?y solves_ode ?f) ?T ?X; ?t0.0 : ?T; is_interval ?T;
         !!z t.
            [| {?t0.0--t} <= ?T; (z solves_ode ?f) {?t0.0--t} ?X;
               z ?t0.0 = ?y ?t0.0 |]
            ==> z t = ?y t |]
      ==> (?y usolves_ode ?f from ?t0.0) ?T ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("Initial_Value_Problem.usolves_ode_union_closed",
     "[| (?x usolves_ode ?f from ?tx) ?T ?X;
         !!t. t : closure ?S Int closure ?T ==>
              (?x usolves_ode ?f from t) ?S ?X;
         closure ?S Int closure ?T <= ?T; closure ?S Int closure ?T <= ?S;
         ?t : closure ?S Int closure ?T |]
      ==> (?x usolves_ode ?f from ?tx) (?T Un ?S) ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 1)),
            template_app (template_hole 2, template_var 3)),
          template_var 3),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 1)),
            template_app (template_hole 2, template_var 3)),
          template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 1)),
                template_app (template_hole 2, template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 6, template_var 6),
                   template_var 5),
                 template_var 4),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_var 2)
           ))),
    ("Initial_Value_Problem.usolves_ode_cong",
     "[| !!t. t : ?T ==> ?x t = ?y t;
         !!t y. [| t : ?T; y : ?X |] ==> ?f t y = ?g t y; ?t0.0 = ?s0.0;
         ?T = ?S; ?X = ?Y |]
      ==> (?x usolves_ode ?f from ?t0.0) ?T ?X =
          (?y usolves_ode ?g from ?s0.0) ?S ?Y",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_equation (template_var 3, template_var 2),
        template_equation (template_var 9, template_var 1),
        template_equation (template_var 6, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 8),
                 template_var 5),
               template_var 3),
             template_var 9),
           template_var 6),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 7),
                 template_var 4),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Initial_Value_Problem.usolves_ode_congI",
     "[| (?x usolves_ode ?f from ?t0.0) ?T ?X; !!t. t : ?T ==> ?x t = ?y t;
         !!t y. [| t : ?T; y : ?X |] ==> ?f t y = ?g t y; ?t0.0 = ?s0.0;
         ?T = ?S; ?X = ?Y |]
      ==> (?y usolves_ode ?g from ?s0.0) ?S ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 8, template_var 9),
                    template_var 8),
                  template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_equation (template_var 7, template_var 2),
        template_equation (template_var 6, template_var 1),
        template_equation (template_var 5, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 8, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Initial_Value_Problem.solves_ode_half_open_segment_continuation",
     "[| (?x solves_ode ?f) {?t0.0--<?t1.0} ?X;
         continuous_on ({?t0.0--?t1.0} \<times> ?X) (%(t, x). ?f t x);
         compact ?X; ?t0.0 ~= ?t1.0;
         !!l. [| (?x \<longlongrightarrow> l)
                  (at ?t1.0 within {?t0.0--<?t1.0});
                 ((%t. if t = ?t1.0 then l else ?x t) solves_ode ?f)
                  {?t0.0--?t1.0} ?X |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 13, template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 12, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 9, template_var 3),
                      template_var 2)),
                  t_empty)),
              template_app (template_hole 8, t_empty))
            ),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_negation
         (template_equation (template_var 3, template_var 2)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Initial_Value_Problem.usolves_ode_rawI",
     "[| (?y solves_ode ?f) ?T ?X; ?t0.0 : ?T; is_interval ?T;
         !!z T' t.
            [| ?t0.0 : T'; is_interval T'; T' <= ?T;
               (z solves_ode ?f) T' ?X; z ?t0.0 = ?y ?t0.0; t : T' |]
            ==> z t = ?y t |]
      ==> (?y usolves_ode ?f from ?t0.0) ?T ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("Initial_Value_Problem.solution_fixed_pointI",
     "[| continuous_on ({?t0.0--?t1.0} \<times> ?X) (%(t, x). ?f t x);
         continuous_on {?t0.0--?t1.0} ?x;
         !!t. t : {?t0.0--?t1.0} ==> ?x t : ?X;
         !!t. t : {?t0.0--?t1.0} ==>
              ?x t = ?x ?t0.0 + ivl_integral ?t0.0 t (%t. ?f t (?x t)) |]
      ==> (?x solves_ode ?f) {?t0.0--?t1.0} ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 9, template_var 4),
                      template_var 3)),
                  t_empty)),
              template_app (template_hole 8, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_var 3)),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1),
               template_app
                (template_app (template_hole 9, template_var 4),
                 template_var 3)),
             template_var 2)
           ))),
    ("Initial_Value_Problem.connection_solves_ode",
     "[| (?x solves_ode ?f) ?T ?X; (?y solves_ode ?g) ?S ?Y;
         closure ?S Int closure ?T <= ?T; closure ?S Int closure ?T <= ?S;
         !!t. [| t : closure ?S; t : closure ?T |] ==> ?x t = ?y t;
         !!t. [| t : closure ?S; t : closure ?T |]
              ==> ?f t (?y t) = ?g t (?y t) |]
      ==> ((%t. if t : ?T then ?x t else ?y t) solves_ode
           (%t. if t : ?T then ?f t else ?g t))
           (?T Un ?S) (?X Un ?Y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 1)),
            template_app (template_hole 7, template_var 5)),
          template_var 5),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 1)),
            template_app (template_hole 7, template_var 5)),
          template_var 1),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 10, t_empty), t_empty),
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0))
           ))),
    ("Initial_Value_Problem.connection_usolves_ode",
     "[| (?x usolves_ode ?f from ?tx) ?T ?X;
         !!t. t : closure ?S Int closure ?T ==>
              (?y usolves_ode ?g from t) ?S ?X;
         closure ?S Int closure ?T <= ?T; closure ?S Int closure ?T <= ?S;
         ?t : closure ?S Int closure ?T;
         !!t. [| t : closure ?S; t : closure ?T |] ==> ?x t = ?y t;
         !!t x.
            [| t : closure ?S; t : closure ?T; x : ?X |]
            ==> ?f t x = ?g t x |]
      ==> ((%t. if t : ?T then ?x t
                else ?y t) usolves_ode (%t.
     if t : ?T then ?f t else ?g t) from ?tx)
           (?T Un ?S) ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 11, template_var 8),
                    template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 3)),
            template_app (template_hole 7, template_var 5)),
          template_var 5),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 3)),
            template_app (template_hole 7, template_var 5)),
          template_var 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 3)),
                template_app (template_hole 7, template_var 5)))
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 11, t_empty), t_empty),
                 template_var 6),
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 3)),
             template_var 4)
           )))]
