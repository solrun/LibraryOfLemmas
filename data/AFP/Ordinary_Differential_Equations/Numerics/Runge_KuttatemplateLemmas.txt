   [("Runge_Kutta.euler_increment",
     "euler_increment ?f ?h ?t ?x = ?f ?t ?x",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_var 3, template_var 1), template_var 0))),
    ("Runge_Kutta.scale_back",
     "(0::?'b, ?r *\<^sub>R ?x) = ?r *\<^sub>R (0::?'b, ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)))),
    ("Runge_Kutta.scale_back",
     "(?r, ?r *\<^sub>R ?x) = ?r *\<^sub>R (1, ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 3, template_hole 0),
           template_var 0)))),
    ("Runge_Kutta.euler_float_increment",
     "euler_increment' ?e ?f ?h ?t ?x = eucl_down ?e (?f ?t ?x)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 4),
         template_app
          (template_app (template_var 3, template_var 1),
           template_var 0)))),
    ("Runge_Kutta.bounded_uminus_image",
     "bounded ((%x. - ?f x) ` ?s) = bounded (?f ` ?s)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Runge_Kutta.snd_imageI", "(?a, ?b) : ?R ==> ?b : snd ` ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Runge_Kutta.convex_minus_translation_iff",
     "convex ((%x. ?f x - ?y) ` ?S) = convex (?f ` ?S)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Runge_Kutta.convex_translation_iff",
     "convex ((%x. ?y + ?f x) ` ?S) = convex (?f ` ?S)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Runge_Kutta.convex_translation_iff",
     "convex ((%x. ?f x + ?y) ` ?S) = convex (?f ` ?S)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Runge_Kutta.closed_minus_translation_iff",
     "closed ((%x. ?f x - ?y) ` ?S) = closed (?f ` ?S)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Runge_Kutta.closed_translation_iff",
     "closed ((%x. ?y + ?f x) ` ?S) = closed (?f ` ?S)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Runge_Kutta.closed_translation_iff",
     "closed ((%x. ?f x + ?y) ` ?S) = closed (?f ` ?S)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Runge_Kutta.has_integral_integral_eqI",
     "[| ?f integrable_on ?s; integral ?s ?f = ?k |]
      ==> (?f has_integral ?k) ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 2),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Runge_Kutta.convex_scaleR_image_iff",
     "convex ((%x. ?r *\<^sub>R ?f x) ` ?R) = (?r = 0 | convex (?f ` ?R))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, t_empty), template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0)),
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0)))
           ))),
    ("Runge_Kutta.closed_scaleR_image_iff",
     "closed ((%x. ?r *\<^sub>R ?f x) ` ?R) = (?r = 0 | closed (?f ` ?R))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, t_empty), template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0)),
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0)))
           ))),
    ("Runge_Kutta.bounded_minus_image",
     "[| bounded (?f ` ?s); bounded (?g ` ?s) |]
      ==> bounded ((%x. ?f x - ?g x) ` ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 1))
           ))),
    ("Runge_Kutta.bounded_plus_image",
     "[| bounded (?f ` ?s); bounded (?g ` ?s) |]
      ==> bounded ((%x. ?f x + ?g x) ` ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 1))
           ))),
    ("Runge_Kutta.bounded_Pair_image",
     "[| bounded (?f ` ?s); bounded (?g ` ?s) |]
      ==> bounded ((%x. (?f x, ?g x)) ` ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 1))
           ))),
    ("Runge_Kutta.bounded_scaleR_image",
     "[| bounded (?f ` ?s); bounded (?g ` ?s) |]
      ==> bounded ((%x. ?f x *\<^sub>R ?g x) ` ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 1))
           ))),
    ("Runge_Kutta.bounded_blinfun_apply_image",
     "[| bounded (?f ` ?s); bounded (?g ` ?s) |]
      ==> bounded ((%x. blinfun_apply (?f x) (?g x)) ` ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 1))
           ))),
    ("Runge_Kutta.euler_lipschitz",
     "[| ?t : {?t0.0..?T}; ALL t:{?t0.0..?T}. ?L-lipschitz_on ?D' (?f t) |]
      ==> ?L-lipschitz_on ?D' (euler_increment ?f ?h ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 6),
              template_app
               (template_app (template_hole 3, template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 6))
           ))),
    ("Runge_Kutta.in_minus_Collect",
     "[| ?a : ?A; ?b : ?B |] ==> ?a - ?b : {x - y |x y. x : ?A & y : ?B}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 1)),
             template_app (template_hole 3, t_empty))
           ))),
    ("Runge_Kutta.integral_normalize_bounds",
     "[| ?t <= ?s; ?f integrable_on {?t..?s} |]
      ==> integral {?t..?s} ?f =
          (?s - ?t) *\<^sub>R
          integral {0..1} (%x. ?f ((?s - ?t) *\<^sub>R x + ?t))",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 8, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 2)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 8, template_hole 3),
                 template_hole 2)),
             t_empty))))),
    ("Runge_Kutta.max_step1_mono",
     "[| ?t 0 <= ?t1.0; ?t1.0 <= ?t2.0; 0 <= ?a; 0 <= ?b;
         max_step1 ?t ?t2.0 ?a ?b ?c |]
      ==> max_step1 ?t ?t1.0 ?a ?b ?c",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_var 5, template_hole 2),
          template_var 4),
        template_inequation (less_equals, template_var 4, template_var 3),
        template_inequation (less_equals, template_hole 1, template_var 2),
        template_inequation (less_equals, template_hole 1, template_var 1),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 0, template_var 5),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 4),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Runge_Kutta.closure_minus_Collect",
     "{x - y |x y. x : closure ?A & y : closure ?B}
      <= closure {x - y |x y. x : ?A & y : ?B}",
     template_inequation
      (less_equals, template_app (template_hole 6, t_empty),
       template_app
        (template_hole 0, template_app (template_hole 6, t_empty)))),
    ("Runge_Kutta.rk2_increment",
     "rk2_increment ?p ?f ?h ?t ?x =
      (1 - 1 / (?p * 2)) *\<^sub>R ?f ?t ?x +
      (1 / (?p * 2)) *\<^sub>R
      ?f (?t + ?h * ?p) (?x + (?h * ?p) *\<^sub>R ?f ?t ?x)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 10, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app
                  (template_app (template_hole 5, template_hole 6),
                   template_app
                    (template_app (template_hole 4, template_var 4),
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_hole 1)))))),
             template_app
              (template_app (template_var 3, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 5, template_hole 6),
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))))),
           template_app
            (template_app
              (template_var 3,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 4))),
             template_app
              (template_app (template_hole 9, template_var 0),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 4)),
                 template_app
                  (template_app (template_var 3, template_var 1),
                   template_var 0)))))))),
    ("Runge_Kutta.convex_hull_minus_Collect",
     "{x - y |x y. x : convex hull ?A & y : convex hull ?B} =
      convex hull {x - y |x y. x : ?A & y : ?B}",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app (template_hole 7, t_empty)))),
    ("Runge_Kutta.convex_scaleR_sum2",
     "[| ?x : ?G; ?y : ?G; convex ?G; 0 <= ?a; 0 <= ?b; ?a + ?b ~= 0 |]
      ==> (?a *\<^sub>R ?x + ?b *\<^sub>R ?y) /\<^sub>R (?a + ?b) : ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 8, template_var 3)),
        template_inequation (less_equals, template_hole 6, template_var 1),
        template_inequation (less_equals, template_hole 6, template_var 0),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 6)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 3, template_var 1),
                       template_var 0))),
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_var 4)),
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_var 2)))),
             template_var 3)
           ))),
    ("Runge_Kutta.set_minus_subset",
     "[| ?A <= ?C; ?B <= ?D |]
      ==> {a - b |a b. a : ?A & b : ?B} <= {a - b |a b. a : ?C & b : ?D}",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 5, t_empty),
         template_app (template_hole 5, t_empty)))),
    ("Runge_Kutta.integral_by_parts_in_bounded_set",
     "[| (?f has_integral ?I) (cbox ?a ?b);
         ((%x. ?f x *\<^sub>R ?g x) has_integral ?P) (cbox ?a ?b);
         !!x. x : cbox ?a ?b ==> 0 <= ?f x; bounded (?g ` cbox ?a ?b);
         cbox ?a ?b ~= {} |]
      ==> ?P : (*\<^sub>R) ?I ` closure (convex hull ?g ` cbox ?a ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 17, template_var 5),
                template_var 4),
              template_app
               (template_app (template_hole 16, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, t_empty), template_var 0),
              template_app
               (template_app (template_hole 16, template_var 3),
                template_var 2))
            ),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_var 1),
                template_app
                 (template_app (template_hole 16, template_var 3),
                  template_var 2)))
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 16, template_var 3),
                template_var 2),
              template_hole 5)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 14, template_var 4)),
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_app
                    (template_app (template_hole 8, template_var 1),
                     template_app
                      (template_app (template_hole 16, template_var 3),
                       template_var 2))))))
           ))),
    ("Runge_Kutta.integral_by_parts_near_bounded_convex_set",
     "[| (?f has_integral ?I) (cbox ?a ?b);
         ((%x. ?f x *\<^sub>R ?g x) has_integral ?P) (cbox ?a ?b);
         !!x. x : cbox ?a ?b ==> ?g x : ?G;
         !!x. x : cbox ?a ?b ==> 0 <= ?f x; convex ?G; bounded ?G |]
      ==> infdist ?P ((*\<^sub>R) ?I ` ?G) = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 6),
                template_var 5),
              template_app
               (template_app (template_hole 12, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, t_empty), template_var 1),
              template_app
               (template_app (template_hole 12, template_var 4),
                template_var 3))
            ),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 10, template_var 5)),
             template_var 0)),
         template_hole 5))),
    ("Runge_Kutta.sum_by_parts_ivt",
     "[| finite ?X; convex ?G; !!i. i : ?X ==> ?g i : ?G;
         !!i. i : ?X ==> 0 <= ?c i;
         !!y. [| y : ?G;
                 (SUM x:?X. ?c x *\<^sub>R ?g x) = sum ?c ?X *\<^sub>R y |]
              ==> ?thesis;
         ?G = {} ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 4)),
        template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_implication
         ([template_equation (template_var 3, template_hole 0)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Runge_Kutta.integral_by_parts_in_bounded_closed_convex_set",
     "[| (?f has_integral ?I) (cbox ?a ?b);
         ((%x. ?f x *\<^sub>R ?g x) has_integral ?P) (cbox ?a ?b);
         !!x. x : cbox ?a ?b ==> ?g x : ?G;
         !!x. x : cbox ?a ?b ==> 0 <= ?f x; bounded ?G; closed ?G;
         convex ?G; cbox ?a ?b ~= {} |]
      ==> ?P : (*\<^sub>R) ?I ` ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 6),
                template_var 5),
              template_app
               (template_app (template_hole 14, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, t_empty), template_var 1),
              template_app
               (template_app (template_hole 14, template_var 4),
                template_var 3))
            ),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 14, template_var 4),
                template_var 3),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 9, template_var 1),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 12, template_var 5)),
               template_var 0))
           ))),
    ("Runge_Kutta.rk2_consistent_traj_set",
     "[| 0 <= ?h; ?t + ?h <= ?u; {?t..?u} <= ?T; ?X ~= {}; convex ?X;
         !!s. s : {?t..?u} ==>
              (?x has_vector_derivative ?f (s, ?x s))
               (at s within {?t..?u});
         !!tx. tx : ?T \<times> ?X ==> (?f has_derivative ?g' tx) (at tx);
         !!tx. tx : ?T \<times> ?X ==> (?f' has_derivative ?g'' tx) (at tx);
         !!tx. tx : ?T \<times> ?X ==> ?g' tx = blinfun_apply (?f' tx);
         !!tx. tx : ?T \<times> ?X ==> ?g'' tx = blinfun_apply (?f'' tx);
         bounded (?f'' ` (?T \<times> ?X)); !!s. s : {?t..?u} ==> ?x s : ?X;
         0 < ?p; ?p <= 1; ?x ?t + (?h * ?p) *\<^sub>R ?f (?t, ?x ?t) : ?X;
         convex ?R; closed ?R;
         !!s1 s2.
            [| 0 <= s1; s1 <= 1; 0 <= s2; s2 <= 1 |]
            ==> discrete_evolution (rk2_increment ?p (%t x. ?f (t, x)))
                 (?t + ?h) ?t (?x ?t) +
                heun_remainder1 ?x ?f ?f' ?f'' ?t ?h s1 -
                heun_remainder2 ?p ?x ?f ?f'' ?t ?h s2
                : ?R |]
      ==> ?x (?t + ?h) : ?R",
     template_implication
      ([template_inequation
         (less_equals, template_hole 37, template_var 12),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 36, template_var 11),
            template_var 12),
          template_var 10),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 34, template_var 11),
            template_var 10),
          template_var 9),
        template_negation
         (template_equation (template_var 8, template_hole 31)),
        template_predicate
         (template_app (template_hole 30, template_var 8)),
        template_predicate (template_app (template_hole 29, t_empty)),
        template_predicate (template_app (template_hole 24, t_empty)),
        template_predicate (template_app (template_hole 24, t_empty)),
        template_predicate (template_app (template_hole 24, t_empty)),
        template_predicate (template_app (template_hole 24, t_empty)),
        template_predicate
         (
            template_app
             (template_hole 13,
              template_app
               (template_app (template_hole 12, template_var 2),
                template_app
                 (template_app (template_hole 22, template_var 9),
                  t_empty)))
            ),
        template_predicate (template_app (template_hole 29, t_empty)),
        template_inequation (less_than, template_hole 37, template_var 1),
        template_inequation (less_equals, template_var 1, template_hole 9),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_var 7, template_var 11)),
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 6, template_var 12),
                        template_var 1)),
                    template_app
                     (template_var 6,
                      template_app
                       (template_app (template_hole 26, template_var 11),
                        template_app (template_var 7, template_var 11)))))),
              template_var 8)
            ),
        template_predicate
         (template_app (template_hole 30, template_var 0)),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate (template_app (template_hole 29, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_var 7,
                 template_app
                  (template_app (template_hole 36, template_var 11),
                   template_var 12))),
             template_var 0)
           )))]
