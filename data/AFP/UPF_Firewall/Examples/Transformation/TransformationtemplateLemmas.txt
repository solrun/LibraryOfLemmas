   [("Transformation02.normalizeUnfold",
     "Nets_List ?x = makeSets (normBothNets (bothNets ?x))",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Transformation02.normalizeUnfold",
     "bothNets ?x = zip (srcnets ?x) (destnets ?x)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Transformation02.aux2", "{?a, ?b} = {?b, ?a}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Transformation01.fixDefs",
     "Transformation01.fixElements ?p =
      (NetworkCore.id ?p = Transformation01.fixID &
       content ?p = Transformation01.fixContent)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 0)),
                 template_hole 3)),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_hole 0))
           ))),
    ("Transformation02.fixDefs",
     "Transformation02.fixElements ?p =
      (NetworkCore.id ?p = Transformation02.fixID &
       content ?p = Transformation02.fixContent)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 0)),
                 template_hole 3)),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_hole 0))
           ))),
    ("Transformation02.sets_distinct3",
     "{(a, b). a = ?n} ~= {(a, b). ?n < a}",
     template_negation
      (
         template_equation
          (template_app
            (template_hole 3, template_app (template_hole 2, t_empty)),
           template_app
            (template_hole 3, template_app (template_hole 2, t_empty)))
         )),
    ("Transformation02.sets_distinct4",
     "{(a, b). ?n < a} ~= {(a, b). a = ?n}",
     template_negation
      (
         template_equation
          (template_app
            (template_hole 3, template_app (template_hole 2, t_empty)),
           template_app
            (template_hole 3, template_app (template_hole 2, t_empty)))
         )),
    ("Transformation02.normalizeUnfold",
     "FWNormalisationCore.normalize ?p =
      removeAllDuplicates
       (insertDenies
         (separate
           (FWNormalisationCore.sort
             (removeShadowRules2
               (remdups
                 (rm_MT_rules C
                   (insertDeny (removeShadowRules1 (policy2list ?p))))))
             (Nets_List ?p))))",
     template_equation
      (template_app (template_hole 12, template_var 0),
       template_app
        (template_hole 11,
         template_app
          (template_hole 10,
           template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_hole 4),
                       template_app
                        (template_hole 3,
                         template_app
                          (template_hole 2,
                           template_app
                            (template_hole 1, template_var 0))))))),
               template_app (template_hole 0, template_var 0))))))),
    ("Transformation02.aux", "[| ?a : ?c; ?a ~: ?d; ?c = ?d |] ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 0)
                )
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate (template_hole 0))),
    ("Transformation02.sets_distinct5",
     "?s < ?g ==> {(a, b). a = ?s} ~= {(a, b). ?g < a}",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_negation
        (
           template_equation
            (template_app
              (template_hole 2, template_app (template_hole 1, t_empty)),
             template_app
              (template_hole 2, template_app (template_hole 1, t_empty)))
           ))),
    ("Transformation02.sets_distinct6",
     "?s < ?g ==> {(a, b). ?g < a} ~= {(a, b). a = ?s}",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_negation
        (
           template_equation
            (template_app
              (template_hole 2, template_app (template_hole 1, t_empty)),
             template_app
              (template_hole 2, template_app (template_hole 1, t_empty)))
           ))),
    ("Transformation02.sets_distinct2",
     "?m ~= ?n ==> {(a, b). a = ?n} ~= {(a, b). a = ?m}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_var 0))],
       template_negation
        (
           template_equation
            (template_app
              (template_hole 1, template_app (template_hole 0, t_empty)),
             template_app
              (template_hole 1, template_app (template_hole 0, t_empty)))
           ))),
    ("Transformation02.sets_distinct1",
     "?n ~= ?m ==> {(a, b). a = ?n} ~= {(a, b). a = ?m}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_var 0))],
       template_negation
        (
           template_equation
            (template_app
              (template_hole 1, template_app (template_hole 0, t_empty)),
             template_app
              (template_hole 1, template_app (template_hole 0, t_empty)))
           ))),
    ("Transformation02.aux5",
     "[| ?x ~= ?a; ?y ~= ?b; ?x ~= ?y & ?x ~= ?b | ?a ~= ?b & ?a ~= ?y |]
      ==> {?x, ?a} ~= {?y, ?b}",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2)),
        template_negation
         (template_equation (template_var 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 3),
                        template_var 1))),
                  template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 3),
                      template_var 0)))),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 2),
                      template_var 0))),
                template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_var 1))))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           )))]
