   [("NormalisationGenericProofs.fl2",
     "firstList (separate ?p) = firstList ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("NormalisationGenericProofs.netlistalternativeSeparate",
     "net_list_aux ?p = net_list_aux (separate ?p)",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("NormalisationGenericProofs.set_sortQ", "set (qsort ?xs ?l) = set ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("NormalisationGenericProofs.set_sort",
     "set (FWNormalisationCore.sort ?xs ?l) = set ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("NormalisationGenericProofs.noDAAll",
     "noDenyAll ?p = (~ memberP DenyAll ?p)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("NormalisationGenericProofs.NDComm",
     "netsDistinct ?a ?b = netsDistinct ?b ?a",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("NormalisationGenericProofs.distinct_sort",
     "distinct (FWNormalisationCore.sort ?xs ?l) = distinct ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("NormalisationGenericProofs.memberPsep",
     "memberP ?x (separate ?p) = memberP ?x ?p",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("NormalisationGenericProofs.saux",
     "FWNormalisationCore.insort DenyAll ?p ?l = DenyAll # ?p",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_hole 1), template_var 1))),
    ("NormalisationGenericProofs.auxx8",
     "removeShadowRules1_alternative_rev [?x] = [?x]",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("NormalisationGenericProofs.set_insort",
     "set (FWNormalisationCore.insort ?x ?xs ?l) = insert ?x (set ?xs)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app (template_hole 2, template_var 1)))),
    ("NormalisationGenericProofs.RS1_DA",
     "removeShadowRules1 (?xs @ [DenyAll]) = [DenyAll]",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_hole 0))),
    ("NormalisationGenericProofs.RS1N_DA",
     "removeShadowRules1_alternative (?a @ [DenyAll]) = [DenyAll]",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_hole 0))),
    ("NormalisationGenericProofs.domComm",
     "dom ?a Int dom ?b = dom ?b Int dom ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 1, template_var 1)))),
    ("NormalisationGenericProofs.nDAcharn",
     "noDenyAll ?p = (ALL r:set ?p. ~ member DenyAll r)",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         t_empty))),
    ("NormalisationGenericProofs.netlistalternativeSeparateaux",
     "net_list_aux [?y] @ net_list_aux ?z = net_list_aux (?y # ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("NormalisationGenericProofs.OTNIDaux4", "{?x, ?y, ?x} = {?y, ?x}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0))),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("NormalisationGenericProofs.mauxa",
     "(EX r. ?a ?b = \<lfloor>r\<rfloor>) = (?a ?b ~= \<bottom>)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_negation
        (
           template_equation
            (template_app (template_var 1, template_var 0), template_hole 0)
           ))),
    ("NormalisationGenericProofs.lCdom2",
     "list2FWpolicy (?a @ ?b @ ?c) = list2FWpolicy ((?a @ ?b) @ ?c)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("NormalisationGenericProofs.distinct_insort",
     "distinct (FWNormalisationCore.insort ?x ?xs ?l) =
      (?x ~: set ?xs & distinct ?xs)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 1)))),
         template_app (template_hole 5, template_var 1)))),
    ("NormalisationGenericProofs.otnaux1", "{?x, ?y, ?x, ?y} = {?x, ?y}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("NormalisationGenericProofs.aux0_4",
     "(?a : set ?x | ?a : set ?y) = (?a : set (?x @ ?y))",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 1))),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)))))]
