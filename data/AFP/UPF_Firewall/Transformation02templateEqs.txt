   [("Transformation02.normalizeUnfold",
     "Nets_List ?x = makeSets (normBothNets (bothNets ?x))",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Transformation02.normalizeUnfold",
     "bothNets ?x = zip (srcnets ?x) (destnets ?x)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Transformation02.aux2", "{?a, ?b} = {?b, ?a}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Transformation02.fixDefs",
     "fixElements ?p =
      (NetworkCore.id ?p = fixID & content ?p = fixContent)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_dunno)),
    ("Transformation02.normalizeUnfold",
     "FWNormalisationCore.normalize ?p =
      removeAllDuplicates
       (insertDenies
         (separate
           (FWNormalisationCore.sort
             (removeShadowRules2
               (remdups
                 (rm_MT_rules C
                   (insertDeny (removeShadowRules1 (policy2list ?p))))))
             (Nets_List ?p))))",
     template_equation
      (template_app (template_hole 12, template_var 0),
       template_app
        (template_hole 11,
         template_app
          (template_hole 10,
           template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_hole 4),
                       template_app
                        (template_hole 3,
                         template_app
                          (template_hole 2,
                           template_app
                            (template_hole 1, template_var 0))))))),
               template_app (template_hole 0, template_var 0)))))))]
