   [("BIT_pairwise.nths_map", "map ?f (nths ?xs ?S) = nths (map ?f ?xs) ?S",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0))),
    ("BIT_pairwise.nths_empty",
     "ALL i:?S. length ?xs <= i ==> nths ?xs ?S = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1), t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("BIT_pairwise.L_nths",
     "?S <= {..<length ?init} ==>
      map_pmf (%l. nths l ?S) (bv (length ?init)) =
      bv (length (nths ?init ?S))",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_hole 6,
            template_app (template_hole 5, template_var 0)))],
       template_equation
        (template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_hole 1,
             template_app (template_hole 5, template_var 0))),
         template_app
          (template_hole 1,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)))))),
    ("BIT_pairwise.nths_project'",
     "[| ?i < length ?xs; ?j < length ?xs; ?i < ?j |]
      ==> nths ?xs {?i, ?j} = [?xs ! ?i, ?xs ! ?j]",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 7, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 7, template_var 1)),
        template_inequation (less_than, template_var 2, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 3))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))))),
    ("BIT_pairwise.nths_project",
     "[| ?i < length ?xs; ?j < length ?xs; ?i < ?j |]
      ==> nths ?xs {?i, ?j} ! 0 = ?xs ! ?i &
          nths ?xs {?i, ?j} ! 1 = ?xs ! ?j",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 8, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 8, template_var 1)),
        template_inequation (less_than, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_var 1),
                         template_app
                          (template_app (template_hole 3, template_var 2),
                           template_app
                            (template_app (template_hole 3, template_var 0),
                             template_hole 2)))),
                     template_hole 1)),
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_var 2))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 1),
                       template_app
                        (template_app (template_hole 3, template_var 2),
                         template_app
                          (template_app (template_hole 3, template_var 0),
                           template_hole 2)))),
                   template_hole 0)),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 0)))
           ))),
    ("BIT_pairwise.L_nths_Lxy",
     "[| ?x : set ?init; ?y : set ?init; ?x ~= ?y; distinct ?init |]
      ==> map_pmf (%l. nths l {index ?init ?x, index ?init ?y})
           (bv (length ?init)) =
          bv (length (Lxy ?init {?x, ?y}))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2),
              template_app (template_hole 14, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 0),
              template_app (template_hole 14, template_var 1))
            ),
        template_negation
         (template_equation (template_var 2, template_var 0)),
        template_predicate
         (template_app (template_hole 11, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 9, t_empty),
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1))),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0)))))))),
    ("BIT_pairwise.BIT_pairwise'",
     "[| set ?qs <= set ?init;
         (?x, ?y) : {(x, y). x : set ?init & y : set ?init & x ~= y};
         ?x ~= ?y; distinct ?init |]
      ==> Pbefore_in ?x ?y BIT ?qs ?init =
          Pbefore_in ?x ?y BIT (Lxy ?qs {?x, ?y}) (Lxy ?init {?x, ?y})",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 17, template_var 3),
          template_app (template_hole 17, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 1),
                  template_var 0)),
              template_app
               (template_hole 14, template_app (template_hole 13, t_empty)))
            ),
        template_negation
         (template_equation (template_var 1, template_var 0)),
        template_predicate
         (template_app (template_hole 8, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 0),
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_hole 3)),
             template_var 3),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 0),
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_hole 3)),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0)))),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))))))]
