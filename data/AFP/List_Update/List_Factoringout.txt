Loading theory "HOL-Library.Function_Algebras" (required by "Draft.List_FactoringTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Templates" (required by "Draft.List_FactoringTemplates" via "Draft.ExtrEqs")
Loading theory "Draft.On_Off" (required by "Draft.List_FactoringTemplates" via "Draft.List_Factoring" via "Draft.Partial_Cost_Model" via "Draft.Move_to_Front")
Loading theory "Draft.Prob_Theory" (required by "Draft.List_FactoringTemplates" via "Draft.List_Factoring" via "Draft.Partial_Cost_Model" via "Draft.Move_to_Front" via "Draft.Competitive_Analysis")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
locale On_Off
  fixes step :: "'state => 'request => 'answer => 'state"
    and t :: "'state => 'request => 'answer => nat"
    and wf :: "'state => 'request list => bool"
### Missing patterns in function definition:
### !!a v va. T a (v # va) [] = undefined
### !!a v va. T a [] (v # va) = undefined
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.118s elapsed time, 0.471s cpu time, 0.041s GC time
Loading theory "Draft.Inversion" (required by "Draft.List_FactoringTemplates" via "Draft.List_Factoring" via "Draft.Partial_Cost_Model" via "Draft.Move_to_Front" via "Draft.Swaps")
### theory "HOL-Library.Function_Algebras"
### 0.137s elapsed time, 0.547s cpu time, 0.041s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.List_FactoringTemplates" via "Draft.ExtrEqs")
### theory "Draft.Inversion"
### 0.050s elapsed time, 0.220s cpu time, 0.000s GC time
Loading theory "Draft.Swaps" (required by "Draft.List_FactoringTemplates" via "Draft.List_Factoring" via "Draft.Partial_Cost_Model" via "Draft.Move_to_Front")
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Swaps"
### 0.095s elapsed time, 0.381s cpu time, 0.000s GC time
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
[| finite ?A; !!a. [| a : set_pmf ?M; ?f a ~= (0::?'b) |] ==> a : ?A |]
==> measure_pmf.expectation ?M ?f = (SUM a:?A. pmf ?M a *\<^sub>R ?f a)
set_pmf ?p Int ?s ~= {} ==>
pmf (cond_pmf ?p ?s) ?x =
(if ?x : ?s then pmf ?p ?x / measure_pmf.prob ?p ?s else 0)
[| 0 < ?p1; ?p1 < 1 |]
==> pmf (cond_pmf
          (bernoulli_pmf ?p1 >>=
           (%b. if b then map_pmf Inl ?Da1 else map_pmf Inr ?Db1))
          {f. EX e. Inl e = f})
     ?x =
    (if ?x : {f. EX e. Inl e = f}
     then pmf (bernoulli_pmf ?p1 >>=
               (%b. if b then map_pmf Inl ?Da1 else map_pmf Inr ?Db1))
           ?x /
          measure_pmf.prob
           (bernoulli_pmf ?p1 >>=
            (%b. if b then map_pmf Inl ?Da1 else map_pmf Inr ?Db1))
           {f. EX e. Inl e = f}
     else 0)
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
"%a. case a of Inl e => Inl (fa e) | Inr e => Inr (fb e)"
  :: "'a + 'b => 'c + 'd"
"(>>=)"
  :: "'a pmf => ('a => 'b pmf) => 'b pmf"
### theory "Draft.Prob_Theory"
### 0.494s elapsed time, 1.781s cpu time, 0.124s GC time
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
### theory "Draft.On_Off"
### 0.644s elapsed time, 2.123s cpu time, 0.200s GC time
Loading theory "Draft.Competitive_Analysis" (required by "Draft.List_FactoringTemplates" via "Draft.List_Factoring" via "Draft.Partial_Cost_Model" via "Draft.Move_to_Front")
### theory "HOL-Library.BigO"
### 0.670s elapsed time, 1.910s cpu time, 0.231s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.List_FactoringTemplates")
locale On_Off
  fixes step :: "'state => 'request => 'answer => 'state"
    and t :: "'state => 'request => 'answer => nat"
    and wf :: "'state => 'request list => bool"
### Missing patterns in function definition:
### !!a v va. steps a (v # va) [] = undefined
### !!a v va. steps a [] (v # va) = undefined
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.488s elapsed time, 1.006s cpu time, 0.064s GC time
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
Found termination order: "{}"
### theory "Draft.Competitive_Analysis"
### 1.087s elapsed time, 2.165s cpu time, 0.615s GC time
Loading theory "Draft.Move_to_Front" (required by "Draft.List_FactoringTemplates" via "Draft.List_Factoring" via "Draft.Partial_Cost_Model")
?A Int set ?xs = set (filter (%x. x : ?A) ?xs)
locale MTF_Off
  fixes as :: "(nat * nat list) list"
    and rs :: "'a list"
    and s0 :: "'a list"
  assumes "MTF_Off as rs s0"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
### theory "Draft.Move_to_Front"
### 2.420s elapsed time, 2.754s cpu time, 0.469s GC time
Loading theory "Draft.MTF2_Effects" (required by "Draft.List_FactoringTemplates" via "Draft.List_Factoring")
Loading theory "Draft.Partial_Cost_Model" (required by "Draft.List_FactoringTemplates" via "Draft.List_Factoring")
"mtf2"
  :: "nat => 'a => 'a list => 'a list"
### theory "Draft.MTF2_Effects"
### 0.515s elapsed time, 1.449s cpu time, 0.916s GC time
### theory "Draft.Partial_Cost_Model"
### 0.878s elapsed time, 1.828s cpu time, 0.916s GC time
Loading theory "Draft.List_Factoring" (required by "Draft.List_FactoringTemplates")
Found termination order: "{}"
### Missing patterns in function definition:
### !!a va vb v. steps' a (va # vb) [] (Suc v) = undefined
### !!a va vb v. steps' a [] (va # vb) (Suc v) = undefined
Found termination order: "(%p. size (snd (snd (snd p)))) <*mlex*> {}"
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
"%i. ALG'_det Strat (A @ [b]) init i y"
  :: "nat => nat"
### theory "Draft.List_Factoring"
### 1.131s elapsed time, 1.309s cpu time, 0.224s GC time
Loading theory "Draft.List_FactoringTemplates"
val templateLemmas =
   [("List_Factoring.nn_contains_Inf", "?S ~= {} ==> \<Sqinter> ?S : ?S",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 0)
           ))),
    ("List_Factoring.ALG'_refl",
     "?qs ! ?i = ?x ==> ALG' ?A ?qs ?init ?i ?x = 0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 3),
          template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 4),
               template_var 0),
             template_var 3),
           template_var 2),
         template_hole 0))),
    ("List_Factoring.steps_length",
     "length ?qs = length ?as ==>
      length (Partial_Cost_Model.steps ?s ?qs ?as) = length ?s",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 2),
          template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0),
               template_var 2),
             template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("List_Factoring.steps'_steps",
     "length ?as = length ?qs ==>
      steps' ?s ?as ?qs (length ?as) = Partial_Cost_Model.steps ?s ?as ?qs",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2),
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2),
             template_var 1),
           template_app (template_hole 5, template_var 2)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0),
             template_var 2),
           template_var 1)))),
    ("List_Factoring.steps_steps'",
     "length ?qs = length ?as ==>
      Partial_Cost_Model.steps ?s ?qs ?as = steps' ?s ?qs ?as (length ?as)",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2),
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 0),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 1),
           template_app (template_hole 4, template_var 1))))),
    ("List_Factoring.steps'_distinct",
     "[| length ?qs = length ?as; length ?as = ?n |]
      ==> distinct (steps' ?s ?qs ?as ?n) = distinct ?s",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 3),
          template_app (template_hole 3, template_var 2)),
        template_equation
         (template_app (template_hole 3, template_var 2), template_var 1)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3),
               template_var 2),
             template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("List_Factoring.steps'_length",
     "[| length ?qs = length ?as; ?n <= length ?as |]
      ==> length (steps' ?s ?qs ?as ?n) = length ?s",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 3),
          template_app (template_hole 2, template_var 2)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 2, template_var 2))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3),
               template_var 2),
             template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("List_Factoring.steps'_set",
     "[| length ?qs = length ?as; ?n <= length ?as |]
      ==> set (steps' ?s ?qs ?as ?n) = set ?s",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 3),
          template_app (template_hole 4, template_var 2)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3),
               template_var 2),
             template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("List_Factoring.steps'_distinct2",
     "[| length ?qs = length ?as; ?n <= length ?as; distinct ?s |]
      ==> distinct (steps' ?s ?qs ?as ?n)",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 3),
          template_app (template_hole 3, template_var 2)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 3, template_var 2)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3),
                 template_var 2),
               template_var 1))
           ))),
    ("List_Factoring.index_sum",
     "[| distinct ?s; ?q : set ?s |]
      ==> index ?s ?q = (SUM e:set ?s. if e < ?q in ?s then 1 else 0)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app (template_hole 7, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 4, t_empty),
           template_app (template_hole 7, template_var 1))))),
    ("List_Factoring.ALG'_det_append",
     "[| ?n < length ?Strat; ?n < length ?qs |]
      ==> ALG'_det ?Strat (?qs @ ?a) ?init ?n ?x =
          ALG'_det ?Strat ?qs ?init ?n ?x",
     template_implication
      ([template_inequation
         (less_than, template_var 5,
          template_app (template_hole 4, template_var 4)),
        template_inequation
         (less_than, template_var 5,
          template_app (template_hole 3, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2)),
               template_var 1),
             template_var 5),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3),
               template_var 1),
             template_var 5),
           template_var 0)))),
    ("List_Factoring.steps'_take",
     "[| ?n < length ?qs; length ?qs = length ?Strat |]
      ==> steps' ?init (take ?n ?qs) (take ?n ?Strat) ?n =
          steps' ?init ?qs ?Strat ?n",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 6, template_var 2)),
        template_equation
         (template_app (template_hole 6, template_var 2),
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2),
             template_var 1),
           template_var 3)))),
    ("List_Factoring.steps'_rests",
     "[| length ?qs = length ?as; ?n <= length ?as |]
      ==> steps' ?s ?qs ?as ?n = steps' ?s (?qs @ ?r1.0) (?as @ ?r2.0) ?n",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 5),
          template_app (template_hole 5, template_var 4)),
        template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 5, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 5),
             template_var 4),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0)),
           template_var 3)))),
    ("List_Factoring.befaf",
     "[| ?q : set ?s; distinct ?s |]
      ==> before ?q ?s Un {?q} Un after ?q ?s = set ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 0))
            ),
        template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 4, template_app (template_hole 3, t_empty)),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0))),
           template_app (template_hole 3, t_empty)),
         template_app (template_hole 7, template_var 0)))),
    ("List_Factoring.Tp_darstellung",
     "length ?qs = length ?Strat ==>
      T\<^sub>p ?init ?qs ?Strat =
      (SUM i<length ?qs.
       t\<^sub>p (steps' ?init ?qs ?Strat i) (?qs ! i) (?Strat ! i))",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 2),
          template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_hole 6),
                 template_hole 5),
               template_var 0),
             template_var 2),
           template_var 1),
         template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_hole 0,
             template_app (template_hole 9, template_var 2)))))),
    ("List_Factoring.ALG_P'_rest2",
     "[| ?n < length ?qs; ?n < length ?Strat |]
      ==> ALG_P' ?Strat ?qs ?init ?n ?x ?y =
          ALG_P' (?Strat @ ?r1.0) (?qs @ ?r2.0) ?init ?n ?x ?y",
     template_implication
      ([template_inequation
         (less_than, template_var 7,
          template_app (template_hole 5, template_var 6)),
        template_inequation
         (less_than, template_var 7,
          template_app (template_hole 4, template_var 5))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 6),
                 template_var 4),
               template_var 7),
             template_var 3),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 5),
                       template_var 1)),
                   template_app
                    (template_app (template_hole 0, template_var 6),
                     template_var 0)),
                 template_var 4),
               template_var 7),
             template_var 3),
           template_var 2)))),
    ("List_Factoring.wegdamit",
     "[| length ?A < length ?Strat; ?b ~: {?x, ?y} |]
      ==> ALGxy_det ?Strat (?A @ [?b]) ?init ?x ?y =
          ALGxy_det ?Strat ?A ?init ?x ?y",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 10, template_var 5),
          template_app (template_hole 9, template_var 4)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_app
                     (template_app (template_hole 6, template_var 1),
                      template_hole 5)))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 4),
                 template_app
                  (template_app (template_hole 2, template_var 5),
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_hole 0))),
               template_var 0),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 5),
               template_var 0),
             template_var 2),
           template_var 1)))),
    ("List_Factoring.before_in_index",
     "[| set ?l = {?x, ?y}; length ?l = 2; ?x ~= ?y |]
      ==> ?x < ?y in ?l = (index ?l ?x = 0)",
     template_implication
      ([template_equation
         (template_app (template_hole 13, template_var 2),
          template_app
           (template_app (template_hole 12, template_var 1),
            template_app
             (template_app (template_hole 12, template_var 0),
              template_hole 11))),
        template_equation
         (template_app (template_hole 9, template_var 2),
          template_app
           (template_hole 8,
            template_app (template_hole 7, template_hole 6))),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0),
                template_var 2)
              )],
         template_equation
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_hole 0)))),
    ("List_Factoring.before_in_index2",
     "[| set ?l = {?x, ?y}; length ?l = 2; ?x ~= ?y |]
      ==> (if ?x < ?y in ?l then 1 else 0) = index ?l ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 14, template_var 2),
          template_app
           (template_app (template_hole 13, template_var 1),
            template_app
             (template_app (template_hole 13, template_var 0),
              template_hole 12))),
        template_equation
         (template_app (template_hole 10, template_var 2),
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_hole 7))),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0),
                 template_var 2)),
             template_hole 2),
           template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("List_Factoring.before_in_index1",
     "[| set ?l = {?x, ?y}; length ?l = 2; ?x ~= ?y |]
      ==> (if ?x < ?y in ?l then 0 else 1) = index ?l ?x",
     template_implication
      ([template_equation
         (template_app (template_hole 14, template_var 2),
          template_app
           (template_app (template_hole 13, template_var 1),
            template_app
             (template_app (template_hole 13, template_var 0),
              template_hole 12))),
        template_equation
         (template_app (template_hole 10, template_var 2),
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_hole 7))),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0),
                 template_var 2)),
             template_hole 2),
           template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("List_Factoring.ALGxy_wholerange",
     "ALGxy ?A ?qs ?init ?x ?y =
      (SUM i<length ?qs.
       if ?qs ! i : {?y, ?x}
       then ALG' ?A ?qs ?init i ?y + ALG' ?A ?qs ?init i ?x else 0)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 11, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 10, t_empty),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 3))))),
    ("List_Factoring.steps'_append",
     "[| length ?qs = length ?as; length ?qs = ?n |]
      ==> steps' ?s (?qs @ [?q]) (?as @ [?a]) (Suc ?n) =
          step (steps' ?s ?qs ?as ?n) ?q ?a",
     template_implication
      ([template_equation
         (template_app (template_hole 11, template_var 5),
          template_app (template_hole 10, template_var 4)),
        template_equation
         (template_app (template_hole 11, template_var 5), template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 8, template_var 2),
               template_app
                (template_app (template_hole 7, template_var 5),
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_hole 5))),
             template_app
              (template_app (template_hole 4, template_var 4),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 2))),
           template_app (template_hole 1, template_var 3)),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 8, template_var 2),
                     template_var 5),
                   template_var 4),
                 template_var 3)),
             template_var 1),
           template_var 0)))),
    ("List_Factoring.steps'_snoc",
     "[| length ?rs = length ?as; ?n = length ?as |]
      ==> steps' ?init (?rs @ [?r]) (?as @ [?a]) (Suc ?n) =
          step (steps' ?init ?rs ?as ?n) ?r ?a",
     template_implication
      ([template_equation
         (template_app (template_hole 11, template_var 5),
          template_app (template_hole 10, template_var 4)),
        template_equation
         (template_var 3, template_app (template_hole 10, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 8, template_var 2),
               template_app
                (template_app (template_hole 7, template_var 5),
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_hole 5))),
             template_app
              (template_app (template_hole 4, template_var 4),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 2))),
           template_app (template_hole 1, template_var 3)),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 8, template_var 2),
                     template_var 5),
                   template_var 4),
                 template_var 3)),
             template_var 1),
           template_var 0)))),
    ("List_Factoring.ALG_P_split",
     "length ?qs < length ?Strat ==>
      ALG_Pxy ?Strat (?qs @ [?q]) ?init ?x ?y =
      ALG_Pxy ?Strat ?qs ?init ?x ?y +
      ALG_P' ?Strat (?qs @ [?q]) ?init (length ?qs) ?x ?y",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 8, template_var 5),
          template_app (template_hole 7, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 4),
                 template_app
                  (template_app (template_hole 4, template_var 5),
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_hole 2))),
               template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 5, template_var 4),
                     template_var 5),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_app
                      (template_app (template_hole 4, template_var 5),
                       template_app
                        (template_app (template_hole 3, template_var 3),
                         template_hole 2))),
                   template_var 2),
                 template_app (template_hole 8, template_var 5)),
               template_var 1),
             template_var 0))))),
    ("List_Factoring.ALGxy_det_alternativ",
     "ALGxy_det ?A ?qs ?init ?x ?y =
      (SUM i | i < length ?qs & ?qs ! i : {?y, ?x}.
          ALG'_det ?A ?qs ?init i ?y + ALG'_det ?A ?qs ?init i ?x)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 11, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 10, t_empty),
         template_app (template_hole 7, t_empty)))),
    ("List_Factoring.T_snoc",
     "length ?rs = length ?as ==>
      T\<^sub>p ?init (?rs @ [?r]) (?as @ [?a]) =
      T\<^sub>p ?init ?rs ?as +
      t\<^sub>p (steps' ?init ?rs ?as (length ?rs)) ?r ?a",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 4),
          template_app (template_hole 11, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 10, template_hole 9),
                 template_hole 8),
               template_var 2),
             template_app
              (template_app (template_hole 7, template_var 4),
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_hole 5))),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 10, template_hole 9),
                     template_hole 8),
                   template_var 2),
                 template_var 4),
               template_var 3)),
           template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 4),
                     template_var 3),
                   template_app (template_hole 12, template_var 4))),
               template_var 1),
             template_var 0))))),
    ("List_Factoring.t\<^sub>p_sumofALG",
     "[| distinct (fst ?s); snd ?a = []; ?qs ! ?i : set (fst ?s) |]
      ==> t\<^sub>p (fst ?s) (?qs ! ?i) ?a =
          (SUM e:set (fst ?s). ALG e ?qs ?i ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 11,
              template_app (template_hole 10, template_var 3))
            ),
        template_equation
         (template_app (template_hole 8, template_var 2), template_hole 7),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0)),
              template_app
               (template_hole 4,
                template_app (template_hole 10, template_var 3)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 10, template_var 3)),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, t_empty),
           template_app
            (template_hole 4,
             template_app (template_hole 10, template_var 3)))))),
    ("List_Factoring.t\<^sub>p_sumofALGreal",
     "[| distinct (fst ?s); snd ?a = []; ?qs ! ?i : set (fst ?s) |]
      ==> real (t\<^sub>p (fst ?s) (?qs ! ?i) ?a) =
          (SUM e:set (fst ?s). real (ALG e ?qs ?i ?s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 12,
              template_app (template_hole 11, template_var 3))
            ),
        template_equation
         (template_app (template_hole 9, template_var 2), template_hole 8),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 0)),
              template_app
               (template_hole 5,
                template_app (template_hole 11, template_var 3)))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 11, template_var 3)),
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 0)),
             template_var 2)),
         template_app
          (template_app (template_hole 1, t_empty),
           template_app
            (template_hole 5,
             template_app (template_hole 11, template_var 3)))))),
    ("List_Factoring.cardofpairs",
     "[| ?S ~= []; sorted ?S; distinct ?S |]
      ==> real (card {(x, y). x : set ?S & y : set ?S & x < y}) =
          real (length ?S * (length ?S - 1)) / 2",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 20)),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_hole 18),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 17, template_var 0))],
       template_equation
        (template_app
          (template_hole 15,
           template_app
            (template_hole 14,
             template_app
              (template_hole 13,
               template_app (template_hole 12, t_empty)))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 15,
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 5, template_var 0)),
                   template_hole 3)))),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("List_Factoring.ALG_P_erwischt_alle",
     "[| distinct ?init; ALL l<length ?sws. Suc (?sws ! l) < length ?init |]
      ==> length ?sws =
          (SUM (x, y):{(x, y). x : set ?init & y : set ?init & x < y}.
              ALG_P ?sws x y ?init)",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 1)),
        template_predicate (template_app (template_hole 16, t_empty))],
       template_equation
        (template_app (template_hole 13, template_var 0),
         template_app
          (template_app
            (template_hole 8, template_app (template_hole 7, t_empty)),
           template_app
            (template_hole 5, template_app (template_hole 4, t_empty)))))),
    ("List_Factoring.swap0in2",
     "[| set ?l = {?x, ?y}; ?x ~= ?y; length ?l = 2; dist_perm ?l ?l |]
      ==> ?x < ?y in swap 0 ?l = (~ ?x < ?y in ?l)",
     template_implication
      ([template_equation
         (template_app (template_hole 15, template_var 2),
          template_app
           (template_app (template_hole 14, template_var 1),
            template_app
             (template_app (template_hole 14, template_var 0),
              template_hole 13))),
        template_negation
         (template_equation (template_var 1, template_var 0)),
        template_equation
         (template_app (template_hole 9, template_var 2),
          template_app
           (template_hole 8,
            template_app (template_hole 7, template_hole 6))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 2)),
                template_app
                 (template_app
                   (template_hole 16,
                    template_app (template_hole 15, template_var 2)),
                  template_app (template_hole 15, template_var 2))))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2)),
         template_app
          (template_hole 12,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0),
             template_var 2))))),
    ("List_Factoring.ALGxy_append",
     "ALGxy ?A (?rs @ [?r]) ?init ?x ?y =
      ALGxy ?A ?rs ?init ?x ?y +
      (if ?r : {?y, ?x}
       then ALG' ?A (?rs @ [?r]) ?init (length ?rs) ?y +
            ALG' ?A (?rs @ [?r]) ?init (length ?rs) ?x
       else 0)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 11, template_var 5),
               template_app
                (template_app (template_hole 10, template_var 4),
                 template_app
                  (template_app (template_hole 9, template_var 3),
                   template_hole 8))),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 11, template_var 5),
                   template_var 4),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 3),
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_hole 3)))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 2, template_var 5),
                         template_app
                          (template_app (template_hole 10, template_var 4),
                           template_app
                            (template_app (template_hole 9, template_var 3),
                             template_hole 8))),
                       template_var 2),
                     template_app (template_hole 1, template_var 4)),
                   template_var 0)),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 5),
                       template_app
                        (template_app (template_hole 10, template_var 4),
                         template_app
                          (template_app (template_hole 9, template_var 3),
                           template_hole 8))),
                     template_var 2),
                   template_app (template_hole 1, template_var 4)),
                 template_var 1))),
           template_hole 0)))),
    ("List_Factoring.ALG_P'_rest",
     "[| ?n < length ?qs; ?n < length ?Strat |]
      ==> ALG_P' ?Strat (take ?n ?qs @ [?qs ! ?n]) ?init ?n ?x ?y =
          ALG_P' (take ?n ?Strat @ [?Strat ! ?n]) (take ?n ?qs @ [?qs ! ?n])
           ?init ?n ?x ?y",
     template_implication
      ([template_inequation
         (less_than, template_var 5,
          template_app (template_hole 13, template_var 4)),
        template_inequation
         (less_than, template_var 5,
          template_app (template_hole 12, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 10, template_var 3),
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 8, template_var 5),
                         template_var 4)),
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app (template_hole 6, template_var 4),
                           template_var 5)),
                       template_hole 5))),
                 template_var 2),
               template_var 5),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 3, template_var 5),
                           template_var 3)),
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app
                            (template_app (template_hole 1, template_var 3),
                             template_var 5)),
                         template_hole 0))),
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 8, template_var 5),
                         template_var 4)),
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app (template_hole 6, template_var 4),
                           template_var 5)),
                       template_hole 5))),
                 template_var 2),
               template_var 5),
             template_var 1),
           template_var 0)))),
    ("List_Factoring.OPT_noStupid",
     "[| length ?Strat = length ?qs;
         T\<^sub>p ?init ?qs ?Strat = T\<^sub>p_opt ?init ?qs; ?init ~= [];
         ?x < length ?Strat; ?l < length (snd (?Strat ! ?x)) |]
      ==> Suc (snd (?Strat ! ?x) ! ?l) < length ?init",
     template_implication
      ([template_equation
         (template_app (template_hole 14, template_var 4),
          template_app (template_hole 13, template_var 3)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_hole 11),
                  template_hole 10),
                template_var 2),
              template_var 3),
            template_var 4),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 9, template_hole 11),
                template_hole 10),
              template_var 2),
            template_var 3)),
        template_negation
         (template_equation (template_var 2, template_hole 6)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 14, template_var 4)),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_hole 4,
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 4),
                template_var 1))))],
       template_inequation
        (less_than,
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 1))),
             template_var 0)),
         template_app (template_hole 13, template_var 2)))),
    ("List_Factoring.steps'_dist_perm",
     "[| length ?qs = length ?as; length ?as = ?n; dist_perm ?s ?s |]
      ==> dist_perm (steps' ?s ?qs ?as ?n) (steps' ?s ?qs ?as ?n)",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3),
          template_app (template_hole 5, template_var 2)),
        template_equation
         (template_app (template_hole 5, template_var 2), template_var 1),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)),
              template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 0)),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 0)),
                  template_app (template_hole 1, template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 3),
                     template_var 2),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 0),
                         template_var 3),
                       template_var 2),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 0, template_var 0),
                           template_var 3),
                         template_var 2),
                       template_var 1))),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 0),
                         template_var 3),
                       template_var 2),
                     template_var 1)))))
           ))),
    ("List_Factoring.OPT_zerlegen",
     "[| distinct ?init; ?init ~= []; set ?qs <= set ?init |]
      ==> (SUM (x, y):{(x, y). x : set ?init & y : set ?init & x < y}.
              T\<^sub>p_opt (Lxy ?init {x, y}) (Lxy ?qs {x, y}))
          <= T\<^sub>p_opt ?init ?qs",
     template_implication
      ([template_predicate
         (template_app (template_hole 19, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 16)),
        template_inequation
         (less_equals, template_app (template_hole 14, template_var 0),
          template_app (template_hole 14, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 12, template_app (template_hole 11, t_empty)),
           template_app
            (template_hole 4, template_app (template_hole 3, t_empty))),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 10, template_hole 9),
               template_hole 8),
             template_var 1),
           template_var 0)))),
    ("List_Factoring.T_on_n_no_paid",
     "(!!s n. map_pmf (%x. snd (fst x)) (snd ?A s n) = return_pmf []) ==>
      Partial_Cost_Model.T_on_rand'_n ?A
       (fst ?A ?init >>= (%is. return_pmf (?init, is))) ?qs ?i =
      E (Partial_Cost_Model.config'_rand ?A
          (fst ?A ?init >>= (%is. return_pmf (?init, is))) (take ?i ?qs) >>=
         (%p. return_pmf (real (index (fst p) (?qs ! ?i)))))",
     template_implication
      ([template_predicate (template_app (template_hole 28, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 17, template_hole 16),
                 template_hole 15),
               template_var 3),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 14, template_hole 16),
                   template_var 3),
                 template_app
                  (template_app
                    (template_hole 13,
                     template_app
                      (template_app (template_hole 12, template_var 3),
                       template_var 2)),
                   t_empty)),
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_var 1)),
             template_hole 6)),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 14, template_hole 16),
                     template_var 3),
                   template_app
                    (template_app
                      (template_hole 13,
                       template_app
                        (template_app (template_hole 12, template_var 3),
                         template_var 2)),
                     t_empty)),
                 template_app
                  (template_app (template_hole 9, template_var 1),
                   template_var 0))),
             t_empty))))),
    ("List_Factoring.before_in_swap2",
     "[| dist_perm ?xs ?ys; Suc ?n < length ?xs; ?x ~= ?y |]
      ==> ?x < ?y in swap ?n ?xs =
          (~ ?x < ?y in ?xs & ?y = ?xs ! ?n & ?x = ?xs ! Suc ?n |
           ?x < ?y in ?xs & ~ (?y = ?xs ! Suc ?n & ?x = ?xs ! ?n))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 4)),
              template_app
               (template_app
                 (template_hole 13,
                  template_app (template_hole 12, template_var 3)),
                template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 10, template_var 4)),
                  template_app (template_hole 10, template_var 3))))
            ),
        template_inequation
         (less_than, template_app (template_hole 8, template_var 2),
          template_app (template_hole 7, template_var 4)),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0),
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 4))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 13,
                     template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_app (template_hole 3, template_var 1),
                           template_var 0),
                         template_var 4))),
                   template_app
                    (template_app
                      (template_hole 13,
                       template_app
                        (template_app (template_hole 5, template_var 0),
                         template_app
                          (template_app (template_hole 0, template_var 4),
                           template_var 2))),
                     template_app
                      (template_app (template_hole 5, template_var 1),
                       template_app
                        (template_app (template_hole 0, template_var 4),
                         template_app
                          (template_hole 8, template_var 2)))))),
               template_app
                (template_app
                  (template_hole 13,
                   template_app
                    (template_app
                      (template_app (template_hole 3, template_var 1),
                       template_var 0),
                     template_var 4)),
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 13,
                       template_app
                        (template_app (template_hole 5, template_var 0),
                         template_app
                          (template_app (template_hole 0, template_var 4),
                           template_app
                            (template_hole 8, template_var 2)))),
                     template_app
                      (template_app (template_hole 5, template_var 1),
                       template_app
                        (template_app (template_hole 0, template_var 4),
                         template_var 2))))))
             )))),
    ("List_Factoring.umformung_OPT",
     "[| set ?qs <= set ?init; distinct ?init;
         T\<^sub>p_opt ?init ?qs = T\<^sub>p ?init ?qs ?Strat;
         length ?qs = length ?Strat; ?init ~= [] |]
      ==> T\<^sub>p_opt ?init ?qs =
          (SUM (x, y):{(x, y). x : set ?init & y : set ?init & x < y}.
              ALGxy_det ?Strat ?qs ?init x y +
              ALG_Pxy ?Strat ?qs ?init x y)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 21, template_var 2),
          template_app (template_hole 21, template_var 1)),
        template_predicate
         (template_app (template_hole 20, template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 18, template_hole 17),
                template_hole 16),
              template_var 1),
            template_var 2),
          template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 15, template_hole 17),
                  template_hole 16),
                template_var 1),
              template_var 2),
            template_var 0)),
        template_equation
         (template_app (template_hole 14, template_var 2),
          template_app (template_hole 13, template_var 0)),
        template_negation
         (template_equation (template_var 1, template_hole 10))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 18, template_hole 17),
               template_hole 16),
             template_var 1),
           template_var 2),
         template_app
          (template_app
            (template_hole 9, template_app (template_hole 8, t_empty)),
           template_app
            (template_hole 4, template_app (template_hole 3, t_empty)))))),
    ("List_Factoring.t\<^sub>p_sumofALGALGP",
     "[| distinct ?s; ?qs ! ?i : set ?s;
         ALL l<length (snd ?a). Suc (snd ?a ! l) < length ?s |]
      ==> t\<^sub>p ?s (?qs ! ?i) ?a =
          (SUM e:set ?s. ALG e ?qs ?i (swaps (snd ?a) ?s, ())) +
          (SUM (x, y):{(x, y). x : set ?s & y : set ?s & x < y}.
              ALG_P (snd ?a) x y ?s)",
     template_implication
      ([template_predicate
         (template_app (template_hole 27, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 26,
                template_app
                 (template_app (template_hole 25, template_var 2),
                  template_var 1)),
              template_app (template_hole 24, template_var 3))
            ),
        template_predicate (template_app (template_hole 23, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 14, template_var 3),
             template_app
              (template_app (template_hole 25, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 13,
             template_app
              (template_app (template_hole 12, t_empty),
               template_app (template_hole 24, template_var 3))),
           template_app
            (template_app
              (template_hole 6, template_app (template_hole 5, t_empty)),
             template_app
              (template_hole 3,
               template_app (template_hole 2, t_empty))))))),
    ("List_Factoring.projected_paid_same_effect",
     "[| dist_perm ?s1.0 ?s1.0; ?x ~= ?y; set ?s2.0 = {?x, ?y};
         length ?s2.0 = 2; dist_perm ?s2.0 ?s2.0;
         ?x < ?y in ?s1.0 = ?x < ?y in ?s2.0 |]
      ==> ?x < ?y in swaps ?acs ?s1.0 =
          ?x < ?y in (swap 0 ^^ ALG_P ?acs ?x ?y ?s1.0) ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app (template_hole 18, template_var 4)),
              template_app
               (template_app
                 (template_hole 19,
                  template_app (template_hole 18, template_var 4)),
                template_app
                 (template_app
                   (template_hole 17,
                    template_app (template_hole 16, template_var 4)),
                  template_app (template_hole 16, template_var 4))))
            ),
        template_negation
         (template_equation (template_var 3, template_var 2)),
        template_equation
         (template_app (template_hole 16, template_var 1),
          template_app
           (template_app (template_hole 13, template_var 3),
            template_app
             (template_app (template_hole 13, template_var 2),
              template_hole 12))),
        template_equation
         (template_app (template_hole 10, template_var 1),
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_hole 7))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app (template_hole 18, template_var 1)),
              template_app
               (template_app
                 (template_hole 19,
                  template_app (template_hole 18, template_var 1)),
                template_app
                 (template_app
                   (template_hole 17,
                    template_app (template_hole 16, template_var 1)),
                  template_app (template_hole 16, template_var 1))))
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2),
            template_var 4),
          template_app
           (template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2),
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 0),
             template_var 4)),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2),
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 0),
                       template_var 3),
                     template_var 2),
                   template_var 4)),
               template_app (template_hole 3, template_hole 0)),
             template_var 1))))),
    ("List_Factoring.T1_7",
     "[| T\<^sub>p ?init ?qs ?Strat = T\<^sub>p_opt ?init ?qs;
         length ?Strat = length ?qs; ?x ~= ?y; ?x : set ?init;
         ?y : set ?init; distinct ?init; set ?qs <= set ?init |]
      ==> T\<^sub>p_opt (Lxy ?init {?x, ?y}) (Lxy ?qs {?x, ?y})
          <= ALGxy_det ?Strat ?qs ?init ?x ?y +
             ALG_Pxy ?Strat ?qs ?init ?x ?y",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 18, template_hole 17),
                  template_hole 16),
                template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 15, template_hole 17),
                template_hole 16),
              template_var 4),
            template_var 3)),
        template_equation
         (template_app (template_hole 14, template_var 2),
          template_app (template_hole 13, template_var 3)),
        template_negation
         (template_equation (template_var 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app (template_hole 9, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_app (template_hole 9, template_var 4))
            ),
        template_predicate (template_app (template_hole 8, template_var 4)),
        template_inequation
         (less_equals, template_app (template_hole 9, template_var 3),
          template_app (template_hole 9, template_var 4))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 15, template_hole 17),
               template_hole 16),
             template_app
              (template_app (template_hole 5, template_var 4),
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 3)))),
           template_app
            (template_app (template_hole 5, template_var 3),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_hole 3)))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 3),
                   template_var 4),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 3),
                 template_var 4),
               template_var 1),
             template_var 0))))),
    ("List_Factoring.umformung_OPT'",
     "[| set ?qs <= set ?init; distinct ?init; length ?qs = length ?Strat;
         !!x l.
            [| x < length ?Strat; l < length (snd (?Strat ! x)) |]
            ==> Suc (snd (?Strat ! x) ! l) < length ?init |]
      ==> T\<^sub>p ?init ?qs ?Strat =
          (SUM (x, y):{(x, y). x : set ?init & y : set ?init & x < y}.
              ALGxy_det ?Strat ?qs ?init x y +
              ALG_Pxy ?Strat ?qs ?init x y)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 24, template_var 2),
          template_app (template_hole 24, template_var 1)),
        template_predicate
         (template_app (template_hole 23, template_var 1)),
        template_equation
         (template_app (template_hole 21, template_var 2),
          template_app (template_hole 20, template_var 0)),
        template_predicate (template_app (template_hole 19, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 12, template_hole 11),
                 template_hole 10),
               template_var 1),
             template_var 2),
           template_var 0),
         template_app
          (template_app
            (template_hole 9, template_app (template_hole 8, t_empty)),
           template_app
            (template_hole 4, template_app (template_hole 3, t_empty)))))),
    ("List_Factoring.pairwise_property_lemma",
     "[| !!init qs x y.
            [| distinct init; qs : {xs. set xs <= set init};
               (x, y) : {(x, y). x : set init & y : set init & x ~= y};
               x ~= y |]
            ==> Pbefore_in x y ?A qs init =
                Pbefore_in x y ?A (Lxy qs {x, y}) (Lxy init {x, y});
         !!xa r. ALL z:set_pmf (snd ?A xa r). snd (fst z) = [] |]
      ==> List_Factoring.pairwise ?A",
     template_implication
      ([template_predicate (template_app (template_hole 29, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("List_Factoring.umformung",
     "[| !!is s q.
            ALL ((free, paid), uu_):set_pmf (snd ?A (s, is) q). paid = [];
         set ?qs <= set ?init; distinct ?init;
         !!x. x < length ?qs ==>
              finite
               (set_pmf
                 (Partial_Cost_Model.config'_rand ?A
                   (fst ?A ?init >>= (%is. return_pmf (?init, is)))
                   (take x ?qs))) |]
      ==> T\<^sub>p_on_rand' ?A
           (fst ?A ?init >>= (%is. return_pmf (?init, is))) ?qs =
          (SUM (x, y):{(x, y). x : set ?init & y : set ?init & x < y}.
              ALGxy ?A ?qs ?init x y)",
     template_implication
      ([template_predicate (template_app (template_hole 36, t_empty)),
        template_inequation
         (less_equals, template_app (template_hole 23, template_var 1),
          template_app (template_hole 23, template_var 0)),
        template_predicate
         (template_app (template_hole 22, template_var 0)),
        template_predicate (template_app (template_hole 21, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 9, template_hole 15),
                 template_hole 8),
               template_var 2),
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 13, template_var 2),
                   template_var 0)),
               t_empty)),
           template_var 1),
         template_app
          (template_app
            (template_hole 7, template_app (template_hole 6, t_empty)),
           template_app
            (template_hole 4, template_app (template_hole 3, t_empty)))))),
    ("List_Factoring.umf_pair",
     "[| List_Factoring.pairwise ?A;
         !!is s q.
            ALL ((free, paid), uu_):set_pmf (snd ?A (s, is) q). paid = [];
         set ?qs <= set ?init; distinct ?init;
         !!x. x < length ?qs ==>
              finite
               (set_pmf
                 (Partial_Cost_Model.config'_rand ?A
                   (fst ?A ?init >>= (%is. return_pmf (?init, is)))
                   (take x ?qs))) |]
      ==> T\<^sub>p_on_rand' ?A
           (fst ?A ?init >>= (%is. return_pmf (?init, is))) ?qs =
          (SUM (x, y):{(x, y). x : set ?init & y : set ?init & x < y}.
              T\<^sub>p_on_rand' ?A
               (fst ?A (Lxy ?init {x, y}) >>=
                (%is. return_pmf (Lxy ?init {x, y}, is)))
               (Lxy ?qs {x, y}))",
     template_implication
      ([template_predicate
         (template_app (template_hole 38, template_var 2)),
        template_predicate (template_app (template_hole 37, t_empty)),
        template_inequation
         (less_equals, template_app (template_hole 25, template_var 1),
          template_app (template_hole 25, template_var 0)),
        template_predicate
         (template_app (template_hole 24, template_var 0)),
        template_predicate (template_app (template_hole 23, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 11, template_hole 17),
                 template_hole 10),
               template_var 2),
             template_app
              (template_app
                (template_hole 16,
                 template_app
                  (template_app (template_hole 15, template_var 2),
                   template_var 0)),
               t_empty)),
           template_var 1),
         template_app
          (template_app
            (template_hole 9, template_app (template_hole 8, t_empty)),
           template_app
            (template_hole 4, template_app (template_hole 3, t_empty)))))),
    ("List_Factoring.T1_7'",
     "[| T\<^sub>p ?init ?qs ?Strat = T\<^sub>p_opt ?init ?qs;
         length ?Strat = length ?qs; ?n <= length ?qs; ?x ~= ?y;
         ?x : set ?init; ?y : set ?init; distinct ?init;
         set ?qs <= set ?init |]
      ==> EX Strat2 sws.
             length Strat2 = length (Lxy (take ?n ?qs) {?x, ?y}) &
             ?x < ?y in steps' ?init (take ?n ?qs) (take ?n ?Strat) ?n =
             ?x < ?y
             in swaps sws
                 (steps' (Lxy ?init {?x, ?y}) (Lxy (take ?n ?qs) {?x, ?y})
                   Strat2 (length Strat2)) &
             T\<^sub>p (Lxy ?init {?x, ?y}) (Lxy (take ?n ?qs) {?x, ?y})
              Strat2 +
             length sws =
             ALGxy_det ?Strat (take ?n ?qs) ?init ?x ?y +
             ALG_Pxy ?Strat (take ?n ?qs) ?init ?x ?y",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 29, template_hole 28),
                  template_hole 27),
                template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 26, template_hole 28),
                template_hole 27),
              template_var 5),
            template_var 4)),
        template_equation
         (template_app (template_hole 25, template_var 3),
          template_app (template_hole 24, template_var 4)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 24, template_var 4)),
        template_negation
         (template_equation (template_var 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 1),
              template_app (template_hole 19, template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 0),
              template_app (template_hole 19, template_var 5))
            ),
        template_predicate
         (template_app (template_hole 18, template_var 5)),
        template_inequation
         (less_equals, template_app (template_hole 19, template_var 4),
          template_app (template_hole 19, template_var 5))],
       template_predicate (template_app (template_hole 16, t_empty)))),
    ("List_Factoring.factoringlemma_withconstant'",
     "[| 1 <= ?c; ALL e:?S0.0. distinct e; ALL e:?S0.0. 0 < length e;
         List_Factoring.pairwise ?A;
         ALL s0:?S0.0.
            EX b>=0.
               ALL qs:{x. set x <= set s0}.
                  ALL (x, y):{(x, y). x : set s0 & y : set s0 & x < y}.
                     T\<^sub>p_on_rand' ?A
                      (fst ?A (Lxy s0 {x, y}) >>=
                       (%is. return_pmf (Lxy s0 {x, y}, is)))
                      (Lxy qs {x, y})
                     <= ?c *
                        real
                         (T\<^sub>p_opt (Lxy s0 {x, y}) (Lxy qs {x, y})) +
                        b;
         !!is s q.
            ALL ((free, paid), uu_):set_pmf (snd ?A (s, is) q). paid = [];
         !!init qs x.
            [| distinct init; set qs <= set init; x < length qs |]
            ==> finite
                 (set_pmf
                   (Partial_Cost_Model.config'_rand ?A
                     (fst ?A init >>= (%is. return_pmf (init, is)))
                     (take x qs))) |]
      ==> Partial_Cost_Model.compet_rand ?A ?c ?S0.0",
     template_implication
      ([template_inequation (less_equals, template_hole 48, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 47, template_var 1), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 47, template_var 1), t_empty)
            ),
        template_predicate
         (template_app (template_hole 42, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 47, template_var 1), t_empty)
            ),
        template_predicate (template_app (template_hole 16, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_hole 29),
                     template_hole 28),
                   template_hole 0),
                 template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("List_Factoring.factoringlemma_withconstant",
     "[| 1 <= ?c; ALL e:?S0.0. distinct e; ALL e:?S0.0. 0 < length e;
         List_Factoring.pairwise ?A;
         ALL s0:?S0.0.
            EX b>=0.
               ALL qs:{x. set x <= set s0}.
                  ALL (x, y):{(x, y). x : set s0 & y : set s0 & x < y}.
                     T\<^sub>p_on_rand' ?A
                      (fst ?A (Lxy s0 {x, y}) >>=
                       (%is. return_pmf (Lxy s0 {x, y}, is)))
                      (Lxy qs {x, y})
                     <= ?c *
                        real
                         (T\<^sub>p_opt (Lxy s0 {x, y}) (Lxy qs {x, y})) +
                        b;
         !!is s q.
            ALL ((free, paid), uu_):set_pmf (snd ?A (s, is) q). paid = [];
         !!init qs x.
            [| distinct init; set qs <= set init; x < length qs |]
            ==> finite
                 (set_pmf
                   (Partial_Cost_Model.config'_rand ?A
                     (fst ?A init >>= (%is. return_pmf (init, is)))
                     (take x qs))) |]
      ==> ALL s0:?S0.0.
             EX b>=0.
                ALL qs:{x. set x <= set s0}.
                   T\<^sub>p_on_rand' ?A
                    (fst ?A s0 >>= (%is. return_pmf (s0, is))) qs
                   <= ?c * real (T\<^sub>p_opt s0 qs) + b",
     template_implication
      ([template_inequation (less_equals, template_hole 46, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 45, template_var 1), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 45, template_var 1), t_empty)
            ),
        template_predicate
         (template_app (template_hole 40, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 45, template_var 1), t_empty)
            ),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 45, template_var 1), t_empty)
           )))]:
   (string * thm * template) list
### theory "Draft.List_FactoringTemplates"
### 1.685s elapsed time, 2.851s cpu time, 1.280s GC time
val it = (): unit
