   [("Phase_Partitioning.Lxx_not_nullable", "[] ~: Lxx ?x ?y",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))
             )
         )),
    ("Phase_Partitioning.Lxx1", "?xs : Lxx ?x ?y ==> 2 <= length ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_app (template_hole 0, template_var 2)))),
    ("Phase_Partitioning.Lxx_ends_in_two_equal",
     "?xs : Lxx ?x ?y ==> EX pref e. ?xs = pref @ [e, e]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Phase_Partitioning.nodouble_padded",
     "[| ?qs ~= []; ?qs : lang (nodouble ?x ?y) |]
      ==> pad ?qs ?x ?y : Lxx ?x ?y",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 5)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Phase_Partitioning.pad_adds2",
     "[| ?qs ~= []; set ?qs <= {?x, ?y} |]
      ==> pad ?qs ?x ?y = ?qs @ [last ?qs]",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 8)),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 2),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4)))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_hole 8))))),
    ("Phase_Partitioning.Lxx_othercase",
     "[| set ?qs <= {?x, ?y};
         \<nexists>xs ys. ?qs = xs @ ys & xs : Lxx ?x ?y |]
      ==> ?qs : lang (hideit ?x ?y)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 11, template_var 2),
          template_app
           (template_app (template_hole 10, template_var 1),
            template_app
             (template_app (template_hole 10, template_var 0),
              template_hole 9))),
        template_negation
         (template_predicate (template_app (template_hole 7, t_empty)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Phase_Partitioning.T\<^sub>p_split",
     "length ?qs1.0 = length ?as1.0 ==>
      T\<^sub>p ?s (?qs1.0 @ ?qs2.0) (?as1.0 @ ?as2.0) =
      T\<^sub>p ?s ?qs1.0 ?as1.0 +
      T\<^sub>p (Partial_Cost_Model.steps ?s ?qs1.0 ?as1.0) ?qs2.0 ?as2.0",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 4),
          template_app (template_hole 7, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_hole 5),
                 template_hole 4),
               template_var 2),
             template_app
              (template_app (template_hole 3, template_var 4),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_hole 4),
                   template_var 2),
                 template_var 4),
               template_var 3)),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_hole 4),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_hole 5),
                       template_var 2),
                     template_var 4),
                   template_var 3)),
               template_var 1),
             template_var 0))))),
    ("Phase_Partitioning.ayay",
     "length ?qs = length ?as ==>
      T\<^sub>p ?s (?qs @ [?q]) (?as @ [?a]) =
      T\<^sub>p ?s ?qs ?as +
      t\<^sub>p (Partial_Cost_Model.steps ?s ?qs ?as) ?q ?a",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 4),
          template_app (template_hole 11, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 10, template_hole 9),
                 template_hole 8),
               template_var 2),
             template_app
              (template_app (template_hole 7, template_var 4),
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_hole 5))),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 10, template_hole 9),
                     template_hole 8),
                   template_var 2),
                 template_var 4),
               template_var 3)),
           template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_hole 9),
                       template_var 2),
                     template_var 4),
                   template_var 3)),
               template_var 1),
             template_var 0))))),
    ("Phase_Partitioning.tlofOPT2",
     "[| ?Q : {?x, ?y}; set ?QS <= {?x, ?y}; ?R : {[?x, ?y], [?y, ?x]} |]
      ==> tl (OPT2 ((?Q # ?QS) @ [?x, ?x]) ?R) =
          OPT2 (?QS @ [?x, ?x])
           (step ?R ?Q (hd (OPT2 ((?Q # ?QS) @ [?x, ?x]) ?R)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 4),
              template_app
               (template_app (template_hole 14, template_var 3),
                template_app
                 (template_app (template_hole 14, template_var 2),
                  template_hole 13)))
            ),
        template_inequation
         (less_equals, template_app (template_hole 11, template_var 1),
          template_app
           (template_app (template_hole 14, template_var 3),
            template_app
             (template_app (template_hole 14, template_var 2),
              template_hole 13))),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_var 3),
                    template_app
                     (template_app (template_hole 8, template_var 2),
                      template_hole 7))),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_var 2),
                      template_app
                       (template_app (template_hole 8, template_var 3),
                        template_hole 7))),
                  template_hole 6)))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 8, template_var 4),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 8, template_var 3),
                   template_app
                    (template_app (template_hole 8, template_var 3),
                     template_hole 7)))),
             template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 8, template_var 3),
                 template_app
                  (template_app (template_hole 8, template_var 3),
                   template_hole 7)))),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 4),
             template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 8, template_var 4),
                         template_var 1)),
                     template_app
                      (template_app (template_hole 8, template_var 3),
                       template_app
                        (template_app (template_hole 8, template_var 3),
                         template_hole 7)))),
                 template_var 0))))))),
    ("Phase_Partitioning.T\<^sub>p_spliting",
     "[| ?x ~= ?y; set ?xs <= {?x, ?y}; set ?ys <= {?x, ?y};
         ?R : {[?x, ?y], [?y, ?x]} |]
      ==> T\<^sub>p ?R (?xs @ [?x, ?x]) (OPT2 (?xs @ [?x, ?x]) ?R) +
          T\<^sub>p [?x, ?y] ?ys (OPT2 ?ys [?x, ?y]) =
          T\<^sub>p ?R (?xs @ [?x, ?x] @ ?ys)
           (OPT2 (?xs @ [?x, ?x] @ ?ys) ?R)",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_var 3)),
        template_inequation
         (less_equals, template_app (template_hole 14, template_var 2),
          template_app
           (template_app (template_hole 13, template_var 4),
            template_app
             (template_app (template_hole 13, template_var 3),
              template_hole 12))),
        template_inequation
         (less_equals, template_app (template_hole 14, template_var 1),
          template_app
           (template_app (template_hole 13, template_var 4),
            template_app
             (template_app (template_hole 13, template_var 3),
              template_hole 12))),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_var 4),
                    template_app
                     (template_app (template_hole 9, template_var 3),
                      template_hole 8))),
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 9, template_var 3),
                      template_app
                       (template_app (template_hole 9, template_var 4),
                        template_hole 8))),
                  template_hole 7)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_hole 2),
                   template_var 0),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app
                    (template_app (template_hole 9, template_var 4),
                     template_app
                      (template_app (template_hole 9, template_var 4),
                       template_hole 8)))),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_app
                      (template_app (template_hole 9, template_var 4),
                       template_app
                        (template_app (template_hole 9, template_var 4),
                         template_hole 8)))),
                 template_var 0))),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_hole 2),
                 template_app
                  (template_app (template_hole 9, template_var 4),
                   template_app
                    (template_app (template_hole 9, template_var 3),
                     template_hole 8))),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app
                (template_app (template_hole 9, template_var 4),
                 template_app
                  (template_app (template_hole 9, template_var 3),
                   template_hole 8))))),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_hole 2),
               template_var 0),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 9, template_var 4),
                     template_app
                      (template_app (template_hole 9, template_var 4),
                       template_hole 8))),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 9, template_var 4),
                       template_app
                        (template_app (template_hole 9, template_var 4),
                         template_hole 8))),
                   template_var 1))),
             template_var 0))))),
    ("Phase_Partitioning.OPTauseinander",
     "[| ?x ~= ?y; set ?xs <= {?x, ?y}; set ?ys <= {?x, ?y};
         ?LTS : {[?x, ?y], [?y, ?x]}; hd ?LTS = last ?xs;
         ?xs = ?pref @ [hd ?LTS, hd ?LTS] |]
      ==> T\<^sub>p [?x, ?y] ?xs (OPT2 ?xs [?x, ?y]) +
          T\<^sub>p ?LTS ?ys (OPT2 ?ys ?LTS) =
          T\<^sub>p [?x, ?y] (?xs @ ?ys) (OPT2 (?xs @ ?ys) [?x, ?y])",
     template_implication
      ([template_negation
         (template_equation (template_var 5, template_var 4)),
        template_inequation
         (less_equals, template_app (template_hole 17, template_var 3),
          template_app
           (template_app (template_hole 16, template_var 5),
            template_app
             (template_app (template_hole 16, template_var 4),
              template_hole 15))),
        template_inequation
         (less_equals, template_app (template_hole 17, template_var 2),
          template_app
           (template_app (template_hole 16, template_var 5),
            template_app
             (template_app (template_hole 16, template_var 4),
              template_hole 15))),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 1),
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 12, template_var 5),
                    template_app
                     (template_app (template_hole 12, template_var 4),
                      template_hole 11))),
                template_app
                 (template_app
                   (template_hole 13,
                    template_app
                     (template_app (template_hole 12, template_var 4),
                      template_app
                       (template_app (template_hole 12, template_var 5),
                        template_hole 11))),
                  template_hole 10)))
            ),
        template_equation
         (template_app (template_hole 9, template_var 1),
          template_app (template_hole 8, template_var 3)),
        template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 6, template_var 0),
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 9, template_var 1)),
              template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 9, template_var 1)),
                template_hole 11))))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_hole 1),
                   template_app
                    (template_app (template_hole 12, template_var 5),
                     template_app
                      (template_app (template_hole 12, template_var 4),
                       template_hole 11))),
                 template_var 3),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_app
                  (template_app (template_hole 12, template_var 5),
                   template_app
                    (template_app (template_hole 12, template_var 4),
                     template_hole 11))))),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_hole 1),
                 template_var 1),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_app
                (template_app (template_hole 12, template_var 5),
                 template_app
                  (template_app (template_hole 12, template_var 4),
                   template_hole 11))),
             template_app
              (template_app (template_hole 6, template_var 3),
               template_var 2)),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 6, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 12, template_var 5),
               template_app
                (template_app (template_hole 12, template_var 4),
                 template_hole 11))))))),
    ("Phase_Partitioning.LxxE",
     "[| ?qs : Lxx ?x ?y;
         ?qs : lang (seq [Atom ?x, Atom ?x]) ==> ?P ?x ?y ?qs;
         ?qs
         : lang
            (seq [question (Atom ?x), Atom ?y, Atom ?x,
                  Star (Times (Atom ?y) (Atom ?x)), Atom ?y, Atom ?y]) ==>
         ?P ?x ?y ?qs;
         ?qs
         : lang
            (seq [question (Atom ?x), Atom ?y, Atom ?x,
                  Star (Times (Atom ?y) (Atom ?x)), Atom ?x]) ==>
         ?P ?x ?y ?qs;
         ?qs : lang (seq [question (Atom ?x), Atom ?y, Atom ?y]) ==>
         ?P ?x ?y ?qs |]
      ==> ?P ?x ?y ?qs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 10, template_var 3),
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_var 2)),
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app (template_hole 5, template_var 2)),
                         template_hole 4)))))
               )],
          template_predicate
           (
              template_app
               (template_app
                 (template_app (template_var 0, template_var 2),
                  template_var 1),
                template_var 3)
              )),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 10, template_var 3),
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_hole 5, template_var 2)),
                           template_hole 2)),
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app (template_hole 5, template_var 1)),
                         template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_hole 5, template_var 2)),
                           template_app
                            (template_app
                              (template_hole 6,
                               template_app
                                (template_hole 1,
                                 template_app
                                  (template_app
                                    (template_hole 0,
                                     template_app
(template_hole 5, template_var 1)),
                                   template_app
                                    (template_hole 5, template_var 2)))),
                             template_app
                              (template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 5, template_var 1)),
                               template_app
                                (template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 5, template_var 1)),
                                 template_hole 4)))))))))
               )],
          template_predicate
           (
              template_app
               (template_app
                 (template_app (template_var 0, template_var 2),
                  template_var 1),
                template_var 3)
              )),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 10, template_var 3),
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_hole 5, template_var 2)),
                           template_hole 2)),
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app (template_hole 5, template_var 1)),
                         template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_hole 5, template_var 2)),
                           template_app
                            (template_app
                              (template_hole 6,
                               template_app
                                (template_hole 1,
                                 template_app
                                  (template_app
                                    (template_hole 0,
                                     template_app
(template_hole 5, template_var 1)),
                                   template_app
                                    (template_hole 5, template_var 2)))),
                             template_app
                              (template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 5, template_var 2)),
                               template_hole 4))))))))
               )],
          template_predicate
           (
              template_app
               (template_app
                 (template_app (template_var 0, template_var 2),
                  template_var 1),
                template_var 3)
              )),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 10, template_var 3),
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_hole 5, template_var 2)),
                           template_hole 2)),
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app (template_hole 5, template_var 1)),
                         template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_hole 5, template_var 1)),
                           template_hole 4))))))
               )],
          template_predicate
           (
              template_app
               (template_app
                 (template_app (template_var 0, template_var 2),
                  template_var 1),
                template_var 3)
              ))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_var 0, template_var 2),
               template_var 1),
             template_var 3)
           ))),
    ("Phase_Partitioning.LxxI",
     "[| ?qs : lang (seq [Atom ?x, Atom ?x]) ==> ?P ?x ?y ?qs;
         ?qs
         : lang
            (seq [question (Atom ?x), Atom ?y, Atom ?x,
                  Star (Times (Atom ?y) (Atom ?x)), Atom ?y, Atom ?y]) ==>
         ?P ?x ?y ?qs;
         ?qs
         : lang
            (seq [question (Atom ?x), Atom ?y, Atom ?x,
                  Star (Times (Atom ?y) (Atom ?x)), Atom ?x]) ==>
         ?P ?x ?y ?qs;
         ?qs : lang (seq [question (Atom ?x), Atom ?y, Atom ?y]) ==>
         ?P ?x ?y ?qs;
         ?qs : Lxx ?x ?y |]
      ==> ?P ?x ?y ?qs",
     template_implication
      ([template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 10, template_var 3),
                 template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app (template_hole 6, template_var 2)),
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app (template_hole 6, template_var 2)),
                         template_hole 5)))))
               )],
          template_predicate
           (
              template_app
               (template_app
                 (template_app (template_var 1, template_var 2),
                  template_var 0),
                template_var 3)
              )),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 10, template_var 3),
                 template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app
                            (template_hole 4,
                             template_app
                              (template_hole 6, template_var 2)),
                           template_hole 3)),
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app (template_hole 6, template_var 0)),
                         template_app
                          (template_app
                            (template_hole 7,
                             template_app
                              (template_hole 6, template_var 2)),
                           template_app
                            (template_app
                              (template_hole 7,
                               template_app
                                (template_hole 2,
                                 template_app
                                  (template_app
                                    (template_hole 1,
                                     template_app
(template_hole 6, template_var 0)),
                                   template_app
                                    (template_hole 6, template_var 2)))),
                             template_app
                              (template_app
                                (template_hole 7,
                                 template_app
                                  (template_hole 6, template_var 0)),
                               template_app
                                (template_app
                                  (template_hole 7,
                                   template_app
                                    (template_hole 6, template_var 0)),
                                 template_hole 5)))))))))
               )],
          template_predicate
           (
              template_app
               (template_app
                 (template_app (template_var 1, template_var 2),
                  template_var 0),
                template_var 3)
              )),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 10, template_var 3),
                 template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app
                            (template_hole 4,
                             template_app
                              (template_hole 6, template_var 2)),
                           template_hole 3)),
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app (template_hole 6, template_var 0)),
                         template_app
                          (template_app
                            (template_hole 7,
                             template_app
                              (template_hole 6, template_var 2)),
                           template_app
                            (template_app
                              (template_hole 7,
                               template_app
                                (template_hole 2,
                                 template_app
                                  (template_app
                                    (template_hole 1,
                                     template_app
(template_hole 6, template_var 0)),
                                   template_app
                                    (template_hole 6, template_var 2)))),
                             template_app
                              (template_app
                                (template_hole 7,
                                 template_app
                                  (template_hole 6, template_var 2)),
                               template_hole 5))))))))
               )],
          template_predicate
           (
              template_app
               (template_app
                 (template_app (template_var 1, template_var 2),
                  template_var 0),
                template_var 3)
              )),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 10, template_var 3),
                 template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app
                            (template_hole 4,
                             template_app
                              (template_hole 6, template_var 2)),
                           template_hole 3)),
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app (template_hole 6, template_var 0)),
                         template_app
                          (template_app
                            (template_hole 7,
                             template_app
                              (template_hole 6, template_var 0)),
                           template_hole 5))))))
               )],
          template_predicate
           (
              template_app
               (template_app
                 (template_app (template_var 1, template_var 2),
                  template_var 0),
                template_var 3)
              )),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_var 1, template_var 2),
               template_var 0),
             template_var 3)
           ))),
    ("Phase_Partitioning.Phase_partitioning_general",
     "[| ?x0.0 ~= ?y0.0; 0 <= ?c; set ?\<sigma> <= {?x0.0, ?y0.0};
         ?P (map_pmf (Pair [?x0.0, ?y0.0]) (fst ?A [?x0.0, ?y0.0])) ?x0.0
          [?x0.0, ?y0.0];
         !!a b \<sigma> s.
            [| \<sigma> : Lxx a b; a ~= b; {a, b} = {?x0.0, ?y0.0};
               ?P s a [?x0.0, ?y0.0]; set \<sigma> <= {a, b} |]
            ==> T\<^sub>p_on_rand' ?A s \<sigma>
                <= ?c *
                   real (T\<^sub>p [a, b] \<sigma> (OPT2 \<sigma> [a, b])) &
                ?P (Partial_Cost_Model.config'_rand ?A s \<sigma>)
                 (last \<sigma>) [?x0.0, ?y0.0] |]
      ==> T\<^sub>p_on_rand' ?A
           (fst ?A [?x0.0, ?y0.0] >>=
            (%is. return_pmf ([?x0.0, ?y0.0], is)))
           ?\<sigma>
          <= ?c * real (T\<^sub>p_opt [?x0.0, ?y0.0] ?\<sigma>) + ?c",
     template_implication
      ([template_negation
         (template_equation (template_var 5, template_var 4)),
        template_inequation (less_equals, template_hole 29, template_var 3),
        template_inequation
         (less_equals, template_app (template_hole 27, template_var 2),
          template_app
           (template_app (template_hole 26, template_var 5),
            template_app
             (template_app (template_hole 26, template_var 4),
              template_hole 25))),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_var 1,
                  template_app
                   (template_app (template_hole 24, t_empty),
                    template_app
                     (template_app (template_hole 20, template_var 0),
                      template_app
                       (template_app (template_hole 22, template_var 5),
                        template_app
                         (template_app (template_hole 22, template_var 4),
                          template_hole 21))))),
                template_var 5),
              template_app
               (template_app (template_hole 22, template_var 5),
                template_app
                 (template_app (template_hole 22, template_var 4),
                  template_hole 21)))
            ),
        template_predicate (template_app (template_hole 19, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 12, template_hole 11),
                 template_hole 10),
               template_var 0),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 20, template_var 0),
                   template_app
                    (template_app (template_hole 22, template_var 5),
                     template_app
                      (template_app (template_hole 22, template_var 4),
                       template_hole 21)))),
               t_empty)),
           template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 9, template_var 3),
               template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_hole 11),
                       template_hole 10),
                     template_app
                      (template_app (template_hole 22, template_var 5),
                       template_app
                        (template_app (template_hole 22, template_var 4),
                         template_hole 21))),
                   template_var 2)))),
           template_var 3))))]
