   [("Bit_Strings.witness_length", "length (witness ?X ?n) = ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Bit_Strings.bitstrings_finite", "finite {xs. length xs = ?m}",
     template_predicate
      (
         template_app
          (template_hole 3, template_app (template_hole 2, t_empty))
         )),
    ("Bit_Strings.iswitness", "?r < ?n ==> witness ?X ?n ! ?r = (?r : ?X)",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Bit_Strings.fbool",
     "finite
       {xs.
        (ALL i:?X. xs ! i) &
        (ALL i:?Y. ~ xs ! i) & length xs = ?m & ?f (xs ! ?e)}",
     template_predicate
      (
         template_app
          (template_hole 7, template_app (template_hole 6, t_empty))
         )),
    ("Bit_Strings.card2",
     "[| finite ?X; finite ?Y; ?X Int ?Y = {}; ?X Un ?Y <= {0..<?m} |]
      ==> card
           {xs.
            (ALL i:?X. xs ! i) & (ALL i:?Y. ~ xs ! i) & length xs = ?m} =
          2 ^ (?m - card ?X - card ?Y)",
     template_implication
      ([template_predicate
         (template_app (template_hole 21, template_var 2)),
        template_predicate
         (template_app (template_hole 21, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 19, template_var 2),
            template_var 1),
          template_hole 18),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 16, template_var 2),
            template_var 1),
          template_app
           (template_app (template_hole 15, template_hole 14),
            template_var 0))],
       template_equation
        (template_app
          (template_hole 12, template_app (template_hole 11, t_empty)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 2))),
             template_app (template_hole 0, template_var 1)))))),
    ("Bit_Strings.card1",
     "[| finite ?S; finite ?X; finite ?Y; ?X Int ?Y = {};
         ?S Int (?X Un ?Y) = {}; ?S Un ?X Un ?Y = {0..<?m} |]
      ==> card
           {xs.
            (ALL i:?X. xs ! i) & (ALL i:?Y. ~ xs ! i) & length xs = ?m} =
          2 ^ (?m - card ?X - card ?Y)",
     template_implication
      ([template_predicate
         (template_app (template_hole 20, template_var 3)),
        template_predicate
         (template_app (template_hole 20, template_var 2)),
        template_predicate
         (template_app (template_hole 20, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 18, template_var 2),
            template_var 1),
          template_hole 17),
        template_equation
         (template_app
           (template_app (template_hole 18, template_var 3),
            template_app
             (template_app (template_hole 16, template_var 2),
              template_var 1)),
          template_hole 17),
        template_equation
         (template_app
           (template_app
             (template_hole 16,
              template_app
               (template_app (template_hole 16, template_var 3),
                template_var 2)),
            template_var 1),
          template_app
           (template_app (template_hole 15, template_hole 14),
            template_var 0))],
       template_equation
        (template_app
          (template_hole 12, template_app (template_hole 11, t_empty)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 2))),
             template_app (template_hole 0, template_var 1)))))),
    ("Bit_Strings.Expactation2or1",
     "[| finite ?S; finite ?Tr; finite ?Fa;
         card ?Tr + card ?Fa + card ?S <= ?l; ?S Int (?Tr Un ?Fa) = {};
         ?Tr Int ?Fa = {}; ?S Un ?Tr Un ?Fa <= {0..<?l} |]
      ==> (SUM x:{xs.
                  (ALL i:?Tr. xs ! i) &
                  (ALL i:?Fa. ~ xs ! i) & length xs = ?l}.
              SUM j:?S. if x ! j then 2 else 1) =
          3 / 2 * real (card ?S) * 2 ^ (?l - card ?Tr - card ?Fa)",
     template_implication
      ([template_predicate
         (template_app (template_hole 31, template_var 3)),
        template_predicate
         (template_app (template_hole 31, template_var 2)),
        template_predicate
         (template_app (template_hole 31, template_var 1)),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 29,
              template_app
               (template_app
                 (template_hole 29,
                  template_app (template_hole 28, template_var 2)),
                template_app (template_hole 28, template_var 1))),
            template_app (template_hole 28, template_var 3)),
          template_var 0),
        template_equation
         (template_app
           (template_app (template_hole 26, template_var 3),
            template_app
             (template_app (template_hole 25, template_var 2),
              template_var 1)),
          template_hole 24),
        template_equation
         (template_app
           (template_app (template_hole 26, template_var 2),
            template_var 1),
          template_hole 24),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 25,
              template_app
               (template_app (template_hole 25, template_var 3),
                template_var 2)),
            template_var 1),
          template_app
           (template_app (template_hole 22, template_hole 21),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 19, t_empty),
           template_app (template_hole 11, t_empty)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_hole 15,
                       template_app (template_hole 3, template_hole 13))),
                   template_app
                    (template_hole 15,
                     template_app (template_hole 14, template_hole 13)))),
               template_app
                (template_hole 2,
                 template_app (template_hole 28, template_var 3)))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 15,
                 template_app (template_hole 14, template_hole 13))),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_app (template_hole 28, template_var 2))),
               template_app (template_hole 28, template_var 1)))))))]
