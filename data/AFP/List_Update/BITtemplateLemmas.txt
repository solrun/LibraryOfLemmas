   [("BIT.setdi", "set ?xs = {0..<length ?xs} ==> distinct ?xs",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0),
          template_app
           (template_app (template_hole 3, template_hole 2),
            template_app (template_hole 1, template_var 0)))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("BIT.BIT_no_paid",
     "ALL ((free, paid), uu_):set_pmf (BIT_step ?s ?q). paid = []",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0))),
           template_app
            (template_hole 3, template_app (template_hole 2, t_empty)))
         )),
    ("BIT.fperms",
     "finite {x. length x = length ?init & distinct x & set x = set ?init}",
     template_predicate
      (
         template_app
          (template_hole 7, template_app (template_hole 6, t_empty))
         )),
    ("BIT.config'_n_init",
     "map_pmf (snd o snd) (config'_rand BIT ?init ?qs) =
      map_pmf (snd o snd) ?init",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_hole 5)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_hole 0)),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_hole 5)),
         template_var 1))),
    ("BIT.sum_my2", "ALL x:?A. ?f x = ?g x ==> sum ?f ?A = sum ?g ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2), t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, t_empty), template_var 2),
         template_app
          (template_app (template_hole 0, t_empty), template_var 2)))),
    ("BIT.finite_config_BIT",
     "distinct ?init ==>
      finite
       (set_pmf
         (config'_rand BIT (fst BIT ?init >>= (%is. return_pmf (?init, is)))
           ?qs))",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 10,
             template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 8, template_hole 7),
                     template_app
                      (template_app (template_hole 6, template_hole 5),
                       template_hole 4)),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app
                            (template_app
                              (template_hole 6, template_hole 5),
                             template_hole 4)),
                         template_var 1)),
                     t_empty)),
                 template_var 0)))
           ))),
    ("BIT.config_n_init",
     "map_pmf (snd o snd)
       (config'_rand BIT (fst BIT ?s0.0 >>= (%is. return_pmf (?s0.0, is)))
         ?qs) =
      return_pmf ?s0.0",
     template_equation
      (template_app
        (template_app
          (template_hole 13,
           template_app
            (template_app (template_hole 12, template_hole 11),
             template_hole 10)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 9, template_hole 8),
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_hole 5)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 7, template_hole 6),
                       template_hole 5)),
                   template_var 1)),
               t_empty)),
           template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("BIT.config_n_bv",
     "map_pmf (fst o snd)
       (config'_rand BIT (fst BIT ?s0.0 >>= (%is. return_pmf (?s0.0, is)))
         ?qs) =
      bv (length ?s0.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 14,
           template_app
            (template_app (template_hole 13, template_hole 12),
             template_hole 11)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 10, template_hole 9),
               template_app
                (template_app (template_hole 8, template_hole 7),
                 template_hole 6)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 8, template_hole 7),
                       template_hole 6)),
                   template_var 1)),
               t_empty)),
           template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 1)))),
    ("BIT.config_n_init3",
     "ALL x:set_pmf
             (config'_rand BIT
               (fst BIT ?init >>= (%is. return_pmf (?init, is))) ?qs).
         snd (snd x) = ?init",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 13,
             template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 11, template_hole 10),
                     template_app
                      (template_app (template_hole 9, template_hole 8),
                       template_hole 7)),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app
                            (template_app
                              (template_hole 9, template_hole 8),
                             template_hole 7)),
                         template_var 1)),
                     t_empty)),
                 template_var 0))),
           t_empty)
         )),
    ("BIT.config_n_init2",
     "ALL (uu_, uu_, x)
          :set_pmf
            (config'_rand BIT
              (fst BIT ?init >>= (%is. return_pmf (?init, is))) ?qs).
         x = ?init",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 13,
             template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 11, template_hole 10),
                     template_app
                      (template_app (template_hole 9, template_hole 8),
                       template_hole 7)),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app
                            (template_app
                              (template_hole 9, template_hole 8),
                             template_hole 7)),
                         template_var 1)),
                     t_empty)),
                 template_var 0))),
           template_app (template_hole 2, t_empty))
         )),
    ("BIT.config_n_fst_init_length2",
     "ALL x:set_pmf
             (config'_rand BIT
               (fst BIT ?s0.0 >>= (%is. return_pmf (?s0.0, is))) ?qs).
         length (fst (snd x)) = length ?s0.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_hole 14,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 13, template_hole 12),
                     template_app
                      (template_app (template_hole 11, template_hole 10),
                       template_hole 9)),
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_app
                              (template_hole 11, template_hole 10),
                             template_hole 9)),
                         template_var 1)),
                     t_empty)),
                 template_var 0))),
           t_empty)
         )),
    ("BIT.config_n_fst_init_length",
     "ALL (uu_, x, uu_)
          :set_pmf
            (config'_rand BIT
              (fst BIT ?s0.0 >>= (%is. return_pmf (?s0.0, is))) ?qs).
         length x = length ?s0.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_hole 14,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 13, template_hole 12),
                     template_app
                      (template_app (template_hole 11, template_hole 10),
                       template_hole 9)),
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_app
                              (template_hole 11, template_hole 10),
                             template_hole 9)),
                         template_var 1)),
                     t_empty)),
                 template_var 0))),
           template_app (template_hole 4, t_empty))
         )),
    ("BIT.compet_BIT4",
     "[| ?init ~= []; distinct ?init |]
      ==> T_on_rand' BIT (fst BIT ?init >>= (%is. return_pmf (?init, is)))
           ?qs
          <= 7 / 4 * real (T_opt ?init ?qs)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 20)),
        template_predicate
         (template_app (template_hole 19, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 17, template_hole 16),
                 template_hole 15),
               template_app
                (template_app (template_hole 14, template_hole 13),
                 template_hole 12)),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_app (template_hole 14, template_hole 13),
                       template_hole 12)),
                   template_var 1)),
               t_empty)),
           template_var 0),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app (template_hole 4, template_hole 3)))),
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 2, template_hole 3))))),
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_hole 16),
                   template_hole 15),
                 template_var 1),
               template_var 0)))))),
    ("BIT.sum_my",
     "[| finite ?A; finite ?B |]
      ==> sum ?f ?A - sum ?g ?B =
          (SUM x:?A Int ?B. ?f x - ?g x) + sum ?f (?A - ?B) -
          sum ?g (?B - ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate
         (template_app (template_hole 6, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, t_empty), template_var 3)),
           template_app
            (template_app (template_hole 3, t_empty), template_var 2)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 3, t_empty),
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2))),
               template_app
                (template_app (template_hole 3, t_empty),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2)))),
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3)))))),
    ("BIT.config_n_bv_2",
     "map_pmf (snd o snd)
       (config'_rand BIT (fst BIT ?s0.0 >>= (%is. return_pmf (?s0.0, is)))
         ?qs) =
      return_pmf ?s0.0 &
      map_pmf (fst o snd)
       (config'_rand BIT (fst BIT ?s0.0 >>= (%is. return_pmf (?s0.0, is)))
         ?qs) =
      bv (length ?s0.0)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 21,
             template_app
              (template_app
                (template_hole 20,
                 template_app
                  (template_app
                    (template_hole 19,
                     template_app
                      (template_app (template_hole 18, template_hole 17),
                       template_hole 16)),
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 15, template_hole 14),
                         template_app
                          (template_app
                            (template_hole 13, template_hole 12),
                           template_hole 11)),
                       template_app
                        (template_app
                          (template_hole 10,
                           template_app
                            (template_app
                              (template_hole 9,
                               template_app
                                (template_app
                                  (template_hole 13, template_hole 12),
                                 template_hole 11)),
                             template_var 1)),
                         t_empty)),
                     template_var 0))),
               template_app (template_hole 6, template_var 1))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_hole 16)),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 15, template_hole 14),
                       template_app
                        (template_app (template_hole 13, template_hole 12),
                         template_hole 11)),
                     template_app
                      (template_app
                        (template_hole 10,
                         template_app
                          (template_app
                            (template_hole 9,
                             template_app
                              (template_app
                                (template_hole 13, template_hole 12),
                               template_hole 11)),
                           template_var 1)),
                       t_empty)),
                   template_var 0))),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1))))
         )),
    ("BIT.config'_n_bv",
     "[| map_pmf (snd o snd) ?init = return_pmf ?s0.0;
         map_pmf (fst o snd) ?init = bv (length ?s0.0) |]
      ==> map_pmf (snd o snd) (config'_rand BIT ?init ?qs) =
          return_pmf ?s0.0 &
          map_pmf (fst o snd) (config'_rand BIT ?init ?qs) =
          bv (length ?s0.0)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 16,
              template_app
               (template_app (template_hole 15, template_hole 14),
                template_hole 13)),
            template_var 2),
          template_app (template_hole 12, template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_hole 13)),
            template_var 2),
          template_app
           (template_hole 7,
            template_app (template_hole 6, template_var 1)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 17,
                   template_app
                    (template_app
                      (template_hole 16,
                       template_app
                        (template_app (template_hole 15, template_hole 14),
                         template_hole 13)),
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 4, template_hole 3),
                           template_app
                            (template_app
                              (template_hole 2, template_hole 1),
                             template_hole 0)),
                         template_var 2),
                       template_var 0))),
                 template_app (template_hole 12, template_var 1))),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_app (template_hole 9, template_hole 8),
                       template_hole 13)),
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 4, template_hole 3),
                         template_app
                          (template_app (template_hole 2, template_hole 1),
                           template_hole 0)),
                       template_var 2),
                     template_var 0))),
               template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 1))))
           ))),
    ("BIT.compet_BIT",
     "[| ?init ~= []; distinct ?init; set ?qs <= set ?init |]
      ==> T_on_rand' BIT (fst BIT ?init >>= (%is. return_pmf (?init, is)))
           ?qs
          <= (7 / 4 - 3 / real (4 * length ?init)) *
             real (T_opt ?init ?qs)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 26)),
        template_predicate
         (template_app (template_hole 25, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 23, template_var 0),
          template_app (template_hole 23, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 21, template_hole 20),
                 template_hole 19),
               template_app
                (template_app (template_hole 18, template_hole 17),
                 template_hole 16)),
             template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app
                    (template_hole 14,
                     template_app
                      (template_app (template_hole 18, template_hole 17),
                       template_hole 16)),
                   template_var 1)),
               t_empty)),
           template_var 0),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_hole 8,
                       template_app
                        (template_hole 7,
                         template_app (template_hole 7, template_hole 6)))),
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 5,
                       template_app (template_hole 5, template_hole 6))))),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_hole 6))),
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 5, template_hole 6)))),
                     template_app (template_hole 1, template_var 1)))))),
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_hole 20),
                   template_hole 19),
                 template_var 1),
               template_var 0))))))]
